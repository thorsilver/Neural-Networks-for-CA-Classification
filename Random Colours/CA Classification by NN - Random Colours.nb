(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   3668103,      68449]
NotebookOptionsPosition[   3643245,      68006]
NotebookOutlinePosition[   3643582,      68021]
CellTagsIndexPosition[   3643539,      68018]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["New CA Classifiers (random colours)", "Section",
 CellChangeTimes->{{3.7741703819392014`*^9, 
  3.774170389696656*^9}},ExpressionUUID->"388a0dab-52cc-4126-ac63-\
0319c67848e8"],

Cell[CellGroupData[{

Cell["Wolfram Classes of ECAs", "Subsection",
 CellChangeTimes->{{3.761379947861582*^9, 
  3.761379952536892*^9}},ExpressionUUID->"76af5f73-63af-4700-a231-\
2a753da13bcb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CAclasses", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2",
      ",", "1", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
     ",", "2", ",", "2", ",", "2", ",", "3", ",", "2", ",", "2", ",", "2", 
     ",", "3", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
     ",", "2", ",", "3", ",", "2", ",", "1", ",", "2", ",", "2", ",", "2", 
     ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "3", ",", "2", 
     ",", "2", ",", "2", ",", "3", ",", "2", ",", "2", ",", "2", ",", "2", 
     ",", "2", ",", "2", ",", "2", ",", "2", ",", "4", ",", "2", ",", "2", 
     ",", "2", ",", "2", ",", "2", ",", "3", ",", "2", ",", "2", ",", "2", 
     ",", "1", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
     ",", "2", ",", "2", ",", "2", ",", "2", ",", "3", ",", "2", ",", "2", 
     ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
     ",", "2", ",", "3", ",", "2", ",", "2", ",", "3", ",", "3", ",", "2", 
     ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "3", ",", "2", 
     ",", "2", ",", "2", ",", "3", ",", "3", ",", "2", ",", "2", ",", "3", 
     ",", "3", ",", "3", ",", "2", ",", "2", ",", "4", ",", "2", ",", "2", 
     ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
     ",", "3", ",", "3", ",", "3", ",", "2", ",", "4", ",", "2", ",", "3", 
     ",", "2", ",", "1", ",", "3", ",", "2", ",", "2", ",", "2", ",", "2", 
     ",", "2", ",", "3", ",", "1", ",", "4", ",", "2", ",", "2", ",", "2", 
     ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "3", ",", "4", 
     ",", "2", ",", "3", ",", "3", ",", "3", ",", "2", ",", "3", ",", "2", 
     ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "3", 
     ",", "2", ",", "2", ",", "2", ",", "3", ",", "2", ",", "2", ",", "1", 
     ",", "3", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
     ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "3", 
     ",", "3", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
     ",", "2", ",", "2", ",", "1", ",", "4", ",", "2", ",", "3", ",", "2", 
     ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
     ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
     ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
     ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
     ",", "3", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
     ",", "2", ",", "2", ",", "1", ",", "1", ",", "2", ",", "2", ",", "1", 
     ",", "1", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
     ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "1", ",", "1", ",", "1"}], "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.761380787003519*^9, 3.761380803977662*^9}, {
   3.761380850530423*^9, 3.761380879376588*^9}, 3.761532125182768*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"11312d72-7371-443a-83a5-7022f7996460"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Functions for creating net and random datasets (ECAs, all 4 classes)\
\>", "Subsection",
 CellChangeTimes->{{3.761380003378039*^9, 3.761380013795506*^9}, {
  3.7614020248578577`*^9, 3.761402029314211*^9}, {3.7662201708842297`*^9, 
  3.7662201728924227`*^9}},ExpressionUUID->"9d0547cf-17e6-43be-b4be-\
9b07207ddad4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RandomRuleC", "[", 
   RowBox[{"n_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Image", "[", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{"n", ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"1", ",", "W"}], "]"}], ",", 
       RowBox[{"H", "-", "1"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"W", ",", "H"}], "}"}]}], ",", 
     RowBox[{"ColorRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", " ", 
        RowBox[{"1", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"3", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"5", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"6", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"7", "->", 
         RowBox[{"RandomColor", "[", "]"}]}]}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "False"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"netC", "[", 
   RowBox[{"W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"NetInitialize", "@", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ConvolutionLayer", "[", 
        RowBox[{"16", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "3"}], "}"}]}], "]"}], ",", "Ramp", ",", 
       RowBox[{"PoolingLayer", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"H", ",", "W"}], "}"}], "-", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
       RowBox[{"FlattenLayer", "[", "]"}], ",", 
       RowBox[{"LinearLayer", "[", "256", "]"}], ",", 
       RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], ",", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"NetEncoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Image\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"W", ",", "H"}], "}"}]}], "}"}], "]"}]}], ",", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Class\>\"", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "255"}], "]"}]}], "}"}], "]"}]}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"netTwoCC", "[", 
   RowBox[{"W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"NetInitialize", "@", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<conv1\>\"", "\[Rule]", " ", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"16", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<ramp1\>\"", "\[Rule]", " ", "Ramp"}], ",", " ", 
       RowBox[{"\"\<conv3\>\"", "\[Rule]", " ", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"16", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<ramp2\>\"", "\[Rule]", " ", "Ramp"}], ",", 
       RowBox[{"\"\<pooling\>\"", "\[Rule]", " ", 
        RowBox[{"PoolingLayer", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"H", ",", "W"}], "}"}], "-", 
          RowBox[{"{", 
           RowBox[{"2", ",", "4"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<flatten\>\"", "\[Rule]", " ", 
        RowBox[{"FlattenLayer", "[", "]"}]}], ",", 
       RowBox[{"\"\<linear\>\"", "\[Rule]", " ", "512"}], ",", 
       RowBox[{"\"\<linear2\>\"", "\[Rule]", " ", "4"}], ",", 
       RowBox[{"\"\<softmax\>\"", "\[Rule]", " ", 
        RowBox[{"SoftmaxLayer", "[", "]"}]}]}], "|>"}], ",", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"NetEncoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Image\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"W", ",", "H"}], "}"}]}], "}"}], "]"}]}], ",", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Class\>\"", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", "4"}], "]"}]}], "}"}], "]"}]}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataC", "[", 
   RowBox[{"W_Integer", ",", "H_Integer", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"RandomRuleC", "[", 
      RowBox[{"i", ",", "W", ",", "H"}], "]"}], "\[Rule]", 
     RowBox[{"CAclasses", "[", 
      RowBox[{"[", 
       RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "255"}], "]"}], ",", "n"}], "]"}]}], "}"}]}], 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.761320809070031*^9, 3.76132083170935*^9}, {
   3.761380076739122*^9, 3.76138008147077*^9}, {3.761380306868453*^9, 
   3.761380307004945*^9}, {3.7613803682019243`*^9, 3.7613803698490877`*^9}, {
   3.7613808865370483`*^9, 3.761380886821106*^9}, {3.761525703313718*^9, 
   3.761525739797949*^9}, {3.761525773385911*^9, 3.761525799841358*^9}, {
   3.761526126195112*^9, 3.7615261594885683`*^9}, {3.7615262563705606`*^9, 
   3.761526259542873*^9}, {3.761526366651803*^9, 3.7615263845889387`*^9}, 
   3.761526478721349*^9, {3.761526538175885*^9, 3.761526570230175*^9}, {
   3.761527452325634*^9, 3.761527460151607*^9}, {3.761527865199566*^9, 
   3.7615278673014517`*^9}, {3.766220831527217*^9, 3.766220832553856*^9}, {
   3.767351883401216*^9, 3.7673519066747293`*^9}, {3.767351950209597*^9, 
   3.767351959155035*^9}, {3.7673519908327217`*^9, 3.767352000543133*^9}, {
   3.767357522438374*^9, 3.7673575500677032`*^9}, {3.767357593344013*^9, 
   3.767357644680545*^9}, {3.767510049719068*^9, 3.7675100652040358`*^9}, {
   3.767510130310398*^9, 3.767510130732348*^9}, 3.767510685310758*^9, {
   3.767510900961635*^9, 3.767510908989143*^9}, {3.767510995235165*^9, 
   3.767511009239863*^9}, {3.767511092024417*^9, 3.767511096703246*^9}, 
   3.774170906320936*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"0ea53259-1886-425a-ad42-3a990f49b501"],

Cell[BoxData[
 RowBox[{
  RowBox[{"netThreeCC", "[", 
   RowBox[{"W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"NetInitialize", "@", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<conv1\>\"", "\[Rule]", " ", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"16", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<ramp1\>\"", "\[Rule]", " ", "Ramp"}], ",", " ", 
       RowBox[{"\"\<conv2\>\"", "\[Rule]", " ", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"16", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<ramp2\>\"", "\[Rule]", " ", "Ramp"}], ",", 
       RowBox[{"\"\<conv3\>\"", "\[Rule]", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"16", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<ramp3\>\"", "\[Rule]", "Ramp"}], ",", 
       RowBox[{"\"\<pooling\>\"", "\[Rule]", " ", 
        RowBox[{"PoolingLayer", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"H", ",", "W"}], "}"}], "-", 
          RowBox[{"{", 
           RowBox[{"4", ",", "8"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<flatten\>\"", "\[Rule]", " ", 
        RowBox[{"FlattenLayer", "[", "]"}]}], ",", 
       RowBox[{"\"\<linear\>\"", "\[Rule]", " ", "512"}], ",", 
       RowBox[{"\"\<linear2\>\"", "\[Rule]", " ", "4"}], ",", 
       RowBox[{"\"\<softmax\>\"", "\[Rule]", " ", 
        RowBox[{"SoftmaxLayer", "[", "]"}]}]}], "|>"}], ",", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"NetEncoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Image\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"W", ",", "H"}], "}"}]}], "}"}], "]"}]}], ",", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Class\>\"", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", "4"}], "]"}]}], "}"}], "]"}]}]}], 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.767540425927586*^9, 3.7675404898272943`*^9}, {
  3.767540570824833*^9, 3.767540575088909*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"04e4fea5-f97b-4096-84e3-b820fad8b6e7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"netThreeCC1024", "[", 
   RowBox[{"W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"NetInitialize", "@", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<conv1\>\"", "\[Rule]", " ", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"16", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<ramp1\>\"", "\[Rule]", " ", "Ramp"}], ",", " ", 
       RowBox[{"\"\<conv2\>\"", "\[Rule]", " ", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"16", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<ramp2\>\"", "\[Rule]", " ", "Ramp"}], ",", 
       RowBox[{"\"\<conv3\>\"", "\[Rule]", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"16", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<ramp3\>\"", "\[Rule]", "Ramp"}], ",", 
       RowBox[{"\"\<pooling\>\"", "\[Rule]", " ", 
        RowBox[{"PoolingLayer", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"H", ",", "W"}], "}"}], "-", 
          RowBox[{"{", 
           RowBox[{"4", ",", "8"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<flatten\>\"", "\[Rule]", " ", 
        RowBox[{"FlattenLayer", "[", "]"}]}], ",", 
       RowBox[{"\"\<linear\>\"", "\[Rule]", " ", "1024"}], ",", 
       RowBox[{"\"\<linear2\>\"", "\[Rule]", " ", "4"}], ",", 
       RowBox[{"\"\<softmax\>\"", "\[Rule]", " ", 
        RowBox[{"SoftmaxLayer", "[", "]"}]}]}], "|>"}], ",", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"NetEncoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Image\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"W", ",", "H"}], "}"}]}], "}"}], "]"}]}], ",", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Class\>\"", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", "4"}], "]"}]}], "}"}], "]"}]}]}], 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.767540425927586*^9, 3.7675404898272943`*^9}, {
  3.767540570824833*^9, 3.767540575088909*^9}, {3.767549585335534*^9, 
  3.7675495935660152`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"3fa2af7c-8381-4684-81ef-83594cac1d45"],

Cell[BoxData[
 RowBox[{
  RowBox[{"netFourCC512", "[", 
   RowBox[{"W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"NetInitialize", "@", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<conv1\>\"", "\[Rule]", " ", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"32", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<ramp1\>\"", "\[Rule]", " ", "Ramp"}], ",", " ", 
       RowBox[{"\"\<conv3\>\"", "\[Rule]", " ", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"32", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<ramp2\>\"", "\[Rule]", " ", "Ramp"}], ",", 
       RowBox[{"\"\<pooling\>\"", "\[Rule]", " ", 
        RowBox[{"PoolingLayer", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"H", ",", "W"}], "}"}], "-", 
          RowBox[{"{", 
           RowBox[{"2", ",", "4"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<flatten\>\"", "\[Rule]", " ", 
        RowBox[{"FlattenLayer", "[", "]"}]}], ",", 
       RowBox[{"\"\<linear\>\"", "\[Rule]", " ", "512"}], ",", 
       RowBox[{"\"\<linear2\>\"", "\[Rule]", " ", "4"}], ",", 
       RowBox[{"\"\<softmax\>\"", "\[Rule]", " ", 
        RowBox[{"SoftmaxLayer", "[", "]"}]}]}], "|>"}], ",", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"NetEncoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Image\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"W", ",", "H"}], "}"}]}], "}"}], "]"}]}], ",", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Class\>\"", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", "4"}], "]"}]}], "}"}], "]"}]}]}], 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.773129574716798*^9, 3.7731295908149643`*^9}, {
  3.77316445961451*^9, 3.7731644762194366`*^9}, {3.77316451876138*^9, 
  3.77316453012789*^9}, {3.773164562656454*^9, 3.7731645703245993`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"db54f16e-cff6-4a0b-9a60-81c7fbbcb875"],

Cell[BoxData[
 RowBox[{
  RowBox[{"netFiveCC512", "[", 
   RowBox[{"W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"NetInitialize", "@", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<conv1\>\"", "\[Rule]", " ", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"32", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<bat1\>\"", "\[Rule]", " ", 
        RowBox[{"BatchNormalizationLayer", "[", "]"}]}], ",", 
       RowBox[{"\"\<ramp1\>\"", "\[Rule]", " ", "Ramp"}], ",", " ", 
       RowBox[{"\"\<conv3\>\"", "\[Rule]", " ", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"32", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<bat2\>\"", "\[Rule]", " ", 
        RowBox[{"BatchNormalizationLayer", "[", "]"}]}], ",", 
       RowBox[{"\"\<ramp2\>\"", "\[Rule]", " ", "Ramp"}], ",", 
       RowBox[{"\"\<pooling\>\"", "\[Rule]", " ", 
        RowBox[{"PoolingLayer", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"H", ",", "W"}], "}"}], "-", 
          RowBox[{"{", 
           RowBox[{"2", ",", "4"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<flatten\>\"", "\[Rule]", " ", 
        RowBox[{"FlattenLayer", "[", "]"}]}], ",", 
       RowBox[{"\"\<linear\>\"", "\[Rule]", " ", "512"}], ",", 
       RowBox[{"\"\<linear2\>\"", "\[Rule]", " ", "4"}], ",", 
       RowBox[{"\"\<softmax\>\"", "\[Rule]", " ", 
        RowBox[{"SoftmaxLayer", "[", "]"}]}]}], "|>"}], ",", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"NetEncoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Image\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"W", ",", "H"}], "}"}]}], "}"}], "]"}]}], ",", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Class\>\"", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", "4"}], "]"}]}], "}"}], "]"}]}]}], 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.773129574716798*^9, 3.7731295908149643`*^9}, {
  3.77316445961451*^9, 3.7731644762194366`*^9}, {3.77316451876138*^9, 
  3.773164554412806*^9}, {3.773164636399846*^9, 3.7731646388760653`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"f2bf3b57-57d3-42d3-a32f-7c120c1b4976"],

Cell[BoxData[
 RowBox[{
  RowBox[{"netSixCC512drop", "[", 
   RowBox[{"W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"NetInitialize", "@", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<drop1\>\"", "\[Rule]", 
        RowBox[{"DropoutLayer", "[", "0.2", "]"}]}], ",", 
       RowBox[{"\"\<conv1\>\"", "\[Rule]", " ", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"32", ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<bat1\>\"", "\[Rule]", " ", 
        RowBox[{"BatchNormalizationLayer", "[", "]"}]}], ",", 
       RowBox[{"\"\<ramp1\>\"", "\[Rule]", " ", "Ramp"}], ",", " ", 
       RowBox[{"\"\<conv3\>\"", "\[Rule]", " ", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"32", ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<bat2\>\"", "\[Rule]", " ", 
        RowBox[{"BatchNormalizationLayer", "[", "]"}]}], ",", 
       RowBox[{"\"\<ramp2\>\"", "\[Rule]", " ", "Ramp"}], ",", 
       RowBox[{"\"\<pooling\>\"", "\[Rule]", " ", 
        RowBox[{"PoolingLayer", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"H", ",", "W"}], "}"}], "-", 
          RowBox[{"{", 
           RowBox[{"4", ",", "8"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<flatten\>\"", "\[Rule]", " ", 
        RowBox[{"FlattenLayer", "[", "]"}]}], ",", 
       RowBox[{"\"\<linear\>\"", "\[Rule]", " ", "512"}], ",", 
       RowBox[{"\"\<drop2\>\"", "\[Rule]", 
        RowBox[{"DropoutLayer", "[", "0.2", "]"}]}], ",", 
       RowBox[{"\"\<linear2\>\"", "\[Rule]", " ", "4"}], ",", 
       RowBox[{"\"\<softmax\>\"", "\[Rule]", " ", 
        RowBox[{"SoftmaxLayer", "[", "]"}]}]}], "|>"}], ",", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"NetEncoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Image\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"W", ",", "H"}], "}"}]}], "}"}], "]"}]}], ",", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Class\>\"", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", "4"}], "]"}]}], "}"}], "]"}]}]}], 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.773129574716798*^9, 3.7731295908149643`*^9}, {
  3.77316445961451*^9, 3.7731644762194366`*^9}, {3.77316451876138*^9, 
  3.773164554412806*^9}, {3.773164636399846*^9, 3.7731646388760653`*^9}, {
  3.773214347449542*^9, 3.773214356618823*^9}, {3.773214400589527*^9, 
  3.773214427362441*^9}, {3.7732144803445683`*^9, 3.7732144996496572`*^9}, {
  3.773214697189101*^9, 3.773214699637023*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"e9e5becd-28d9-42e6-a39b-71cbb8836a31"],

Cell[BoxData[
 RowBox[{
  RowBox[{"netSevenCC512drop", "[", 
   RowBox[{"W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"NetInitialize", "@", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<conv1\>\"", "\[Rule]", " ", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"24", ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<bat1\>\"", "\[Rule]", " ", 
        RowBox[{"BatchNormalizationLayer", "[", "]"}]}], ",", 
       RowBox[{"\"\<ramp1\>\"", "\[Rule]", " ", "Ramp"}], ",", " ", 
       RowBox[{"\"\<conv3\>\"", "\[Rule]", " ", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"24", ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<bat2\>\"", "\[Rule]", " ", 
        RowBox[{"BatchNormalizationLayer", "[", "]"}]}], ",", 
       RowBox[{"\"\<ramp2\>\"", "\[Rule]", " ", "Ramp"}], ",", 
       RowBox[{"\"\<pooling\>\"", "\[Rule]", " ", 
        RowBox[{"PoolingLayer", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"H", ",", "W"}], "}"}], "-", 
          RowBox[{"{", 
           RowBox[{"4", ",", "8"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<flatten\>\"", "\[Rule]", " ", 
        RowBox[{"FlattenLayer", "[", "]"}]}], ",", 
       RowBox[{"\"\<linear\>\"", "\[Rule]", " ", "512"}], ",", 
       RowBox[{"\"\<drop2\>\"", "\[Rule]", 
        RowBox[{"DropoutLayer", "[", "0.2", "]"}]}], ",", 
       RowBox[{"\"\<linear2\>\"", "\[Rule]", " ", "4"}], ",", 
       RowBox[{"\"\<softmax\>\"", "\[Rule]", " ", 
        RowBox[{"SoftmaxLayer", "[", "]"}]}]}], "|>"}], ",", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"NetEncoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Image\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"W", ",", "H"}], "}"}]}], "}"}], "]"}]}], ",", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Class\>\"", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", "4"}], "]"}]}], "}"}], "]"}]}]}], 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.773129574716798*^9, 3.7731295908149643`*^9}, {
  3.77316445961451*^9, 3.7731644762194366`*^9}, {3.77316451876138*^9, 
  3.773164554412806*^9}, {3.773164636399846*^9, 3.7731646388760653`*^9}, {
  3.773214347449542*^9, 3.773214356618823*^9}, {3.773214400589527*^9, 
  3.773214427362441*^9}, {3.7732144803445683`*^9, 3.7732144996496572`*^9}, {
  3.773214697189101*^9, 3.773214699637023*^9}, {3.7732947644127007`*^9, 
  3.7732947755435963`*^9}, {3.77329486111364*^9, 3.77329488442143*^9}, {
  3.77329499344895*^9, 3.773294997276059*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"0584a446-b140-4330-aed6-029b46bd55de"],

Cell[BoxData[
 RowBox[{
  RowBox[{"netEightCC512drop", "[", 
   RowBox[{"W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"NetInitialize", "@", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<conv1\>\"", "\[Rule]", " ", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"24", ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<bat1\>\"", "\[Rule]", " ", 
        RowBox[{"BatchNormalizationLayer", "[", "]"}]}], ",", 
       RowBox[{"\"\<ramp1\>\"", "\[Rule]", " ", "Ramp"}], ",", " ", 
       RowBox[{"\"\<conv2\>\"", "\[Rule]", " ", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"16", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<bat2\>\"", "\[Rule]", 
        RowBox[{"BatchNormalizationLayer", "[", "]"}]}], ",", 
       RowBox[{"\"\<ramp2\>\"", "\[Rule]", " ", "Ramp"}], ",", " ", 
       RowBox[{"\"\<conv3\>\"", "\[Rule]", " ", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"24", ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<bat3\>\"", "\[Rule]", " ", 
        RowBox[{"BatchNormalizationLayer", "[", "]"}]}], ",", 
       RowBox[{"\"\<ramp3\>\"", "\[Rule]", " ", "Ramp"}], ",", 
       RowBox[{"\"\<pooling\>\"", "\[Rule]", " ", 
        RowBox[{"PoolingLayer", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"H", ",", "W"}], "}"}], "-", 
          RowBox[{"{", 
           RowBox[{"8", ",", "16"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<flatten\>\"", "\[Rule]", " ", 
        RowBox[{"FlattenLayer", "[", "]"}]}], ",", 
       RowBox[{"\"\<linear\>\"", "\[Rule]", " ", "1024"}], ",", 
       RowBox[{"\"\<drop2\>\"", "\[Rule]", 
        RowBox[{"DropoutLayer", "[", "0.2", "]"}]}], ",", 
       RowBox[{"\"\<linear2\>\"", "\[Rule]", " ", "4"}], ",", 
       RowBox[{"\"\<softmax\>\"", "\[Rule]", " ", 
        RowBox[{"SoftmaxLayer", "[", "]"}]}]}], "|>"}], ",", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"NetEncoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Image\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"W", ",", "H"}], "}"}]}], "}"}], "]"}]}], ",", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Class\>\"", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", "4"}], "]"}]}], "}"}], "]"}]}]}], 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.773129574716798*^9, 3.7731295908149643`*^9}, {
  3.77316445961451*^9, 3.7731644762194366`*^9}, {3.77316451876138*^9, 
  3.773164554412806*^9}, {3.773164636399846*^9, 3.7731646388760653`*^9}, {
  3.773214347449542*^9, 3.773214356618823*^9}, {3.773214400589527*^9, 
  3.773214427362441*^9}, {3.7732144803445683`*^9, 3.7732144996496572`*^9}, {
  3.773214697189101*^9, 3.773214699637023*^9}, {3.7732947644127007`*^9, 
  3.7732947755435963`*^9}, {3.77329486111364*^9, 3.77329488442143*^9}, {
  3.77329499344895*^9, 3.773294997276059*^9}, {3.774202651836898*^9, 
  3.774202659321891*^9}, {3.774202695001886*^9, 3.774202725129752*^9}, {
  3.774202805827366*^9, 3.774202808775009*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"6ac8b246-f929-4ebf-b7b6-8430cd9ee71e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"netNineCC512drop", "[", 
   RowBox[{"W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"NetInitialize", "@", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<conv1\>\"", "\[Rule]", " ", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"24", ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<bat1\>\"", "\[Rule]", " ", 
        RowBox[{"BatchNormalizationLayer", "[", "]"}]}], ",", 
       RowBox[{"\"\<ramp1\>\"", "\[Rule]", " ", "Ramp"}], ",", " ", 
       RowBox[{"\"\<conv2\>\"", "\[Rule]", " ", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"24", ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<bat2\>\"", "\[Rule]", 
        RowBox[{"BatchNormalizationLayer", "[", "]"}]}], ",", 
       RowBox[{"\"\<ramp2\>\"", "\[Rule]", " ", "Ramp"}], ",", " ", 
       RowBox[{"\"\<conv3\>\"", "\[Rule]", " ", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"24", ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<bat3\>\"", "\[Rule]", " ", 
        RowBox[{"BatchNormalizationLayer", "[", "]"}]}], ",", 
       RowBox[{"\"\<ramp3\>\"", "\[Rule]", " ", "Ramp"}], ",", 
       RowBox[{"\"\<pooling\>\"", "\[Rule]", " ", 
        RowBox[{"PoolingLayer", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"H", ",", "W"}], "}"}], "-", 
          RowBox[{"{", 
           RowBox[{"12", ",", "12"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<flatten\>\"", "\[Rule]", " ", 
        RowBox[{"FlattenLayer", "[", "]"}]}], ",", 
       RowBox[{"\"\<linear\>\"", "\[Rule]", " ", "512"}], ",", 
       RowBox[{"\"\<drop2\>\"", "\[Rule]", 
        RowBox[{"DropoutLayer", "[", "0.2", "]"}]}], ",", 
       RowBox[{"\"\<linear2\>\"", "\[Rule]", " ", "4"}], ",", 
       RowBox[{"\"\<softmax\>\"", "\[Rule]", " ", 
        RowBox[{"SoftmaxLayer", "[", "]"}]}]}], "|>"}], ",", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"NetEncoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Image\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"W", ",", "H"}], "}"}]}], "}"}], "]"}]}], ",", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Class\>\"", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", "4"}], "]"}]}], "}"}], "]"}]}]}], 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.773129574716798*^9, 3.7731295908149643`*^9}, {
  3.77316445961451*^9, 3.7731644762194366`*^9}, {3.77316451876138*^9, 
  3.773164554412806*^9}, {3.773164636399846*^9, 3.7731646388760653`*^9}, {
  3.773214347449542*^9, 3.773214356618823*^9}, {3.773214400589527*^9, 
  3.773214427362441*^9}, {3.7732144803445683`*^9, 3.7732144996496572`*^9}, {
  3.773214697189101*^9, 3.773214699637023*^9}, {3.7732947644127007`*^9, 
  3.7732947755435963`*^9}, {3.77329486111364*^9, 3.77329488442143*^9}, {
  3.77329499344895*^9, 3.773294997276059*^9}, {3.774202651836898*^9, 
  3.774202659321891*^9}, {3.774202695001886*^9, 3.774202725129752*^9}, {
  3.774202805827366*^9, 3.774202808775009*^9}, {3.7754586086427107`*^9, 
  3.775458650815332*^9}, {3.775458902781473*^9, 3.775458903650049*^9}, {
  3.775458968913899*^9, 3.77545897165278*^9}, {3.775459018790119*^9, 
  3.775459020628222*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"12adb21d-1eea-4b3e-8464-02cb9906d446"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions for creating datasets (1D totalistic CAs)", "Subsection",
 CellChangeTimes->{{3.7614020705786753`*^9, 3.761402081162367*^9}, 
   3.766220112954561*^9},ExpressionUUID->"15994768-2a7c-48ae-b9ce-\
17a15e9f2d01"],

Cell[CellGroupData[{

Cell["k=3, r=1 totalistic (class 4 only)", "Subsubsection",
 CellChangeTimes->{{3.76622009703373*^9, 3.7662201022762747`*^9}, {
  3.766220154180862*^9, 
  3.766220165964774*^9}},ExpressionUUID->"8d9af586-96ae-4f0d-8b0d-\
8fb70cdf76ee"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gen3TC", "[", 
   RowBox[{"p_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Image", "[", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", " ", 
         RowBox[{"{", 
          RowBox[{"3", ",", "1"}], "}"}]}], "}"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"1", ",", "W"}], "]"}], ",", 
       RowBox[{"H", "-", "1"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"W", ",", "H"}], "}"}]}], ",", 
     RowBox[{"ColorRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", " ", 
        RowBox[{"1", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"3", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"5", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"6", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"7", "->", 
         RowBox[{"RandomColor", "[", "]"}]}]}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "False"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data3T2C", "[", 
   RowBox[{"W_Integer", ",", "H_Integer", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"gen3TC", "[", 
      RowBox[{"i", ",", "W", ",", "H"}], "]"}], "\[Rule]", "4"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "1635", ",", "1815", ",", "2007", ",", "2043", ",", "2049", ",", 
          "1388", ",", "1041"}], "}"}], ",", "n"}], "]"}]}], "}"}]}], 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.761320809070031*^9, 3.76132083170935*^9}, {
   3.761380076739122*^9, 3.76138008147077*^9}, {3.761380306868453*^9, 
   3.761380307004945*^9}, {3.7613803682019243`*^9, 3.7613803698490877`*^9}, {
   3.7613808865370483`*^9, 3.761380886821106*^9}, {3.761402042556376*^9, 
   3.7614020593188343`*^9}, {3.761402275990266*^9, 3.761402435380567*^9}, {
   3.761402489939774*^9, 3.7614025213819847`*^9}, {3.761402651615384*^9, 
   3.761402654567891*^9}, {3.761402747908902*^9, 3.761402793145606*^9}, {
   3.761402865578603*^9, 3.7614028799081573`*^9}, {3.761402928587389*^9, 
   3.76140295398988*^9}, {3.761402997655946*^9, 3.761403027899941*^9}, {
   3.761403075891109*^9, 3.761403076238286*^9}, {3.761403180372889*^9, 
   3.7614031997236834`*^9}, {3.7614032312013397`*^9, 3.7614032670886507`*^9}, 
   3.76140342890244*^9, {3.761403480275926*^9, 3.761403481350089*^9}, {
   3.761403513060453*^9, 3.7614035132125177`*^9}, {3.761403549605055*^9, 
   3.761403561425516*^9}, 3.761403609754438*^9, {3.76140367198862*^9, 
   3.761403675679965*^9}, {3.761403714658844*^9, 3.7614037433940363`*^9}, {
   3.761403773779291*^9, 3.761403789604382*^9}, {3.761403824236272*^9, 
   3.7614038250328913`*^9}, {3.7614038551426353`*^9, 3.761403938459445*^9}, {
   3.761404200995116*^9, 3.761404210552011*^9}, {3.761404358229147*^9, 
   3.761404358568121*^9}, {3.761527445163332*^9, 3.761527445393235*^9}, {
   3.7615304659774017`*^9, 3.76153048662649*^9}, {3.766219991187511*^9, 
   3.7662200066283073`*^9}, 3.766220602494452*^9, {3.76751011993714*^9, 
   3.767510125995658*^9}, {3.7675106885986443`*^9, 3.767510701348618*^9}, {
   3.767511127847498*^9, 3.767511130891918*^9}, {3.774170730105529*^9, 
   3.774170754804545*^9}, 3.774170821336855*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"7f290f76-4d20-4a45-99c1-be4d3ac55caf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["k=4, r=1 totalistic (class 4 only, 1 example)", "Subsubsection",
 CellChangeTimes->{{3.7662206118214073`*^9, 
  3.7662206208010683`*^9}},ExpressionUUID->"dbcb2c40-cf99-43a5-b6a7-\
efac0c5abb80"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gen4TC", "[", 
   RowBox[{"p_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Image", "[", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", " ", 
         RowBox[{"{", 
          RowBox[{"4", ",", "1"}], "}"}]}], "}"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"1", ",", "W"}], "]"}], ",", 
       RowBox[{"H", "-", "1"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"W", ",", "H"}], "}"}]}], ",", 
     RowBox[{"ColorRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", " ", 
        RowBox[{"1", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"3", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"5", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"6", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"7", "->", 
         RowBox[{"RandomColor", "[", "]"}]}]}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "False"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data4TC", "[", 
   RowBox[{"W_Integer", ",", "H_Integer", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"gen4TC", "[", 
      RowBox[{"1004600", ",", "W", ",", "H"}], "]"}], "\[Rule]", "4"}], ",", 
    "n"}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.761320809070031*^9, 3.76132083170935*^9}, {
   3.761380076739122*^9, 3.76138008147077*^9}, {3.761380306868453*^9, 
   3.761380307004945*^9}, {3.7613803682019243`*^9, 3.7613803698490877`*^9}, {
   3.7613808865370483`*^9, 3.761380886821106*^9}, {3.761402042556376*^9, 
   3.7614020593188343`*^9}, {3.761402275990266*^9, 3.761402435380567*^9}, {
   3.761402489939774*^9, 3.7614025213819847`*^9}, {3.761402651615384*^9, 
   3.761402654567891*^9}, {3.761402747908902*^9, 3.761402793145606*^9}, {
   3.761402865578603*^9, 3.7614028799081573`*^9}, {3.761402928587389*^9, 
   3.76140295398988*^9}, {3.761402997655946*^9, 3.761403027899941*^9}, {
   3.761403075891109*^9, 3.761403076238286*^9}, {3.761403180372889*^9, 
   3.7614031997236834`*^9}, {3.7614032312013397`*^9, 3.7614032670886507`*^9}, 
   3.76140342890244*^9, {3.761403480275926*^9, 3.761403481350089*^9}, {
   3.761403513060453*^9, 3.7614035132125177`*^9}, {3.761403549605055*^9, 
   3.761403561425516*^9}, 3.761403609754438*^9, {3.76140367198862*^9, 
   3.761403675679965*^9}, {3.761403714658844*^9, 3.7614037433940363`*^9}, {
   3.761403773779291*^9, 3.761403789604382*^9}, {3.761403824236272*^9, 
   3.7614038250328913`*^9}, {3.7614038551426353`*^9, 3.761403938459445*^9}, {
   3.761404200995116*^9, 3.761404210552011*^9}, {3.761404358229147*^9, 
   3.761404358568121*^9}, {3.761527445163332*^9, 3.761527445393235*^9}, {
   3.7615304659774017`*^9, 3.76153048662649*^9}, {3.766219991187511*^9, 
   3.7662200066283073`*^9}, 3.766220602494452*^9, {3.766220981573586*^9, 
   3.766220999332594*^9}, {3.767510176336904*^9, 3.76751018234591*^9}, {
   3.767510703403048*^9, 3.767510711708168*^9}, {3.76751113510611*^9, 
   3.7675111386413517`*^9}, 3.7741707301094637`*^9, 3.774170821341847*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"6fb675f1-8cd0-423a-915b-241cddf189ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["k=2, r=2 totalistic (all 4 classes)", \
"Subsubsection"]], "Subsubsection",
 CellChangeTimes->{{3.7615416009618673`*^9, 3.761541603722186*^9}, {
  3.761614402366498*^9, 3.761614403857771*^9}, {3.766220158560947*^9, 
  3.766220163549625*^9}},ExpressionUUID->"4ebe7869-f88e-4902-9783-\
89e59803ff91"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gen2r2C", "[", 
   RowBox[{"p_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Image", "[", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", " ", 
         RowBox[{"{", 
          RowBox[{"2", ",", "1"}], "}"}], ",", "2"}], "}"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"1", ",", "W"}], "]"}], ",", 
       RowBox[{"H", "-", "1"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"W", ",", "H"}], "}"}]}], ",", 
     RowBox[{"ColorRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", " ", 
        RowBox[{"1", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"3", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"5", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"6", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"7", "->", 
         RowBox[{"RandomColor", "[", "]"}]}]}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "False"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data2r2c4C", "[", 
   RowBox[{"W_Integer", ",", "H_Integer", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"gen2r2C", "[", 
      RowBox[{"i", ",", "W", ",", "H"}], "]"}], "\[Rule]", "4"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"20", ",", "52"}], "}"}], ",", "n"}], "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data2r2c3C", "[", 
   RowBox[{"W_Integer", ",", "H_Integer", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"gen2r2C", "[", 
      RowBox[{"i", ",", "W", ",", "H"}], "]"}], "\[Rule]", "3"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "2", ",", "6", ",", "10", ",", "12", ",", "14", ",", "18", ",", "22",
           ",", "26", ",", "28", ",", "30", ",", "34", ",", "38", ",", "42", 
          ",", "44", ",", "46", ",", "50"}], "}"}], ",", "n"}], "]"}]}], 
     "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data2r2c2C", "[", 
   RowBox[{"W_Integer", ",", "H_Integer", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"gen2r2C", "[", 
      RowBox[{"i", ",", "W", ",", "H"}], "]"}], "\[Rule]", "2"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"8", ",", "24", ",", "56"}], "}"}], ",", "n"}], "]"}]}], 
     "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data2r2c1C", "[", 
   RowBox[{"W_Integer", ",", "H_Integer", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"gen2r2C", "[", 
      RowBox[{"i", ",", "W", ",", "H"}], "]"}], "\[Rule]", "1"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "0", ",", "4", ",", "16", ",", "32", ",", "36", ",", "40", ",", "48",
           ",", "54", ",", "58", ",", "60", ",", "62"}], "}"}], ",", "n"}], 
       "]"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"genData2r2C", "[", 
   RowBox[{"W_Integer", ",", "H_Integer", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"data2r2c4C", "[", 
     RowBox[{"W", ",", "H", ",", "n"}], "]"}], ",", " ", 
    RowBox[{"data2r2c3C", "[", 
     RowBox[{"W", ",", "H", ",", "n"}], "]"}], ",", 
    RowBox[{"data2r2c2C", "[", 
     RowBox[{"W", ",", "H", ",", "n"}], "]"}], ",", 
    RowBox[{"data2r2c1C", "[", 
     RowBox[{"W", ",", "H", ",", "n"}], "]"}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7662208536104717`*^9, 3.766220861810584*^9}, {
   3.767420218192284*^9, 3.767420224888722*^9}, {3.767510190331472*^9, 
   3.7675101957763367`*^9}, {3.7675107435691433`*^9, 3.767510777499544*^9}, {
   3.7675111667672577`*^9, 3.767511169681427*^9}, 3.774170730113796*^9, 
   3.7741708213461437`*^9},
 CellLabel->"In[18]:=",ExpressionUUID->"a1f86501-5115-43e0-b323-e3a0c8631d00"]
}, Open  ]],

Cell[CellGroupData[{

Cell["k=5, r=1 totalistic (class 4 only)", "Subsubsection",
 CellChangeTimes->{{3.767420232609075*^9, 
  3.76742024040336*^9}},ExpressionUUID->"bb2826ed-9356-452a-af36-\
99095ba0dd59"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gen5T4C", "[", 
   RowBox[{"p_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Image", "[", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", " ", 
         RowBox[{"{", 
          RowBox[{"5", ",", "1"}], "}"}]}], "}"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"1", ",", "W"}], "]"}], ",", 
       RowBox[{"H", "-", "1"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"W", ",", "H"}], "}"}]}], ",", 
     RowBox[{"ColorRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", " ", 
        RowBox[{"1", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"3", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"5", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"6", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"7", "->", 
         RowBox[{"RandomColor", "[", "]"}]}]}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "False"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data5T4C", "[", 
   RowBox[{"n_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"gen5T4C", "[", 
      RowBox[{"i", ",", "W", ",", "H"}], "]"}], "\[Rule]", "4"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "781130654", ",", "772514435", ",", "1151319452", ",", "309095787", 
          ",", "880862046", ",", "973835714", ",", "779446817", ",", 
          "345466505", ",", "535500975", ",", "793363571", ",", "1052373865", 
          ",", "455984785", ",", "339227109", ",", "1050973846", ",", 
          "513368817", ",", "91315820", ",", "113925357"}], "}"}], ",", "n"}],
        "]"}]}], "}"}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.767420274483926*^9, 3.7674204306628304`*^9}, {
   3.767420486945815*^9, 3.767420544299651*^9}, {3.767420585508767*^9, 
   3.76742067869022*^9}, 3.7674207343955603`*^9, 3.767420772579658*^9, {
   3.767420827396451*^9, 3.7674208284090977`*^9}, 3.76742089434406*^9, {
   3.767420955061728*^9, 3.767420981278881*^9}, {3.767421027288953*^9, 
   3.7674211692763033`*^9}, {3.767421201395582*^9, 3.767421202677582*^9}, {
   3.767421241360973*^9, 3.7674212597063637`*^9}, {3.767421297984494*^9, 
   3.767421319205021*^9}, {3.767421408722212*^9, 3.767421425677188*^9}, {
   3.767421513864583*^9, 3.7674215149586363`*^9}, {3.7674215579435587`*^9, 
   3.767421603507653*^9}, {3.767421678550502*^9, 3.767421750826378*^9}, {
   3.767421945450369*^9, 3.767421954722583*^9}, {3.767421987797763*^9, 
   3.767421988206396*^9}, {3.7674220305053053`*^9, 3.767422090384396*^9}, {
   3.767422124623789*^9, 3.767422124826593*^9}, {3.767422504789649*^9, 
   3.767422504907716*^9}, {3.767422579233675*^9, 3.767422604111108*^9}, {
   3.76742343797468*^9, 3.767423441428603*^9}, {3.7675102671497183`*^9, 
   3.767510276485331*^9}, {3.7675107926937103`*^9, 3.767510797967434*^9}, {
   3.7675111827730713`*^9, 3.76751118563109*^9}, 3.7741707301174088`*^9, 
   3.774170821349885*^9},
 CellLabel->"In[24]:=",ExpressionUUID->"98ced873-5ac6-4b9e-b650-c158965ee498"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["k=5, r=1 totalistic (classes 2/3/4)", "Subsection",
 CellChangeTimes->{{3.7675277832033577`*^9, 
  3.767527798880362*^9}},ExpressionUUID->"476bdbe6-8561-4171-ad26-\
ebd401370f13"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gen5TC", "[", 
   RowBox[{"p_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Image", "[", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", " ", 
         RowBox[{"{", 
          RowBox[{"5", ",", "1"}], "}"}], ",", "1"}], "}"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"1", ",", "W"}], "]"}], ",", 
       RowBox[{"H", "-", "1"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"W", ",", "H"}], "}"}]}], ",", 
     RowBox[{"ColorRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", " ", 
        RowBox[{"1", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"3", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"5", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"6", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"7", "->", 
         RowBox[{"RandomColor", "[", "]"}]}]}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "False"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data5T4CC", "[", 
   RowBox[{"W_Integer", ",", "H_Integer", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"gen5TC", "[", 
      RowBox[{"i", ",", "W", ",", "H"}], "]"}], "\[Rule]", "4"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "644218533", ",", "491739943", ",", "6889640", ",", "986144962", ",",
           "1099816682", ",", "988971204", ",", "300829994", ",", "272622024",
           ",", "304100638", ",", "626595633"}], "}"}], ",", "n"}], "]"}]}], 
     "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data5T3CC", "[", 
   RowBox[{"W_Integer", ",", "H_Integer", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"gen5TC", "[", 
      RowBox[{"i", ",", "W", ",", "H"}], "]"}], "\[Rule]", "3"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "889082395", ",", "541068260", ",", "807907479", ",", "816180062", 
          ",", "650485139", ",", "643827745", ",", "753940864", ",", 
          "871525323", ",", "351440311", ",", "83501460"}], "}"}], ",", "n"}],
        "]"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data5T2CC", "[", 
   RowBox[{"W_Integer", ",", "H_Integer", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"gen5TC", "[", 
      RowBox[{"i", ",", "W", ",", "H"}], "]"}], "\[Rule]", "2"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "525735659", ",", "1022330944", ",", "1007796739", ",", "495633437", 
          ",", "1036827943"}], "}"}], ",", "n"}], "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"genData5TCC", "[", 
   RowBox[{"W_Integer", ",", "H_Integer", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"data5T4CC", "[", 
     RowBox[{"W", ",", "H", ",", "n"}], "]"}], ",", " ", 
    RowBox[{"data5T3CC", "[", 
     RowBox[{"W", ",", "H", ",", "n"}], "]"}], ",", 
    RowBox[{"data5T2CC", "[", 
     RowBox[{"W", ",", "H", ",", "n"}], "]"}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7662208536104717`*^9, 3.766220861810584*^9}, {
   3.767420218192284*^9, 3.767420224888722*^9}, {3.767510190331472*^9, 
   3.7675101957763367`*^9}, {3.7675107435691433`*^9, 3.767510777499544*^9}, {
   3.7675111667672577`*^9, 3.767511169681427*^9}, {3.767527810705645*^9, 
   3.767528192161414*^9}, {3.767528246723054*^9, 3.767528372658319*^9}, 
   3.774170730121407*^9, 3.774170821353751*^9},
 CellLabel->"In[26]:=",ExpressionUUID->"acd3d2ea-8896-4cab-8715-3bbeb4414ec4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generate test datasets", "Subsection",
 CellChangeTimes->{{3.766220206963079*^9, 
  3.766220211039912*^9}},ExpressionUUID->"45835d6e-7c4b-418b-b16b-\
5826ff7ae0de"],

Cell[CellGroupData[{

Cell["k=2, r=2 non-totalistic", "Subsubsection",
 CellChangeTimes->{{3.761614424510236*^9, 
  3.7616144327038603`*^9}},ExpressionUUID->"9857ce67-d967-41aa-a1c8-\
dc4a01e111e2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"genk2r2C", "[", 
   RowBox[{"p_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Image", "[", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", " ", "2", ",", "2"}], "}"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"1", ",", "W"}], "]"}], ",", 
       RowBox[{"H", "-", "1"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"W", ",", "H"}], "}"}]}], ",", 
     RowBox[{"ColorRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", " ", 
        RowBox[{"1", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"3", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"5", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"6", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"7", "->", 
         RowBox[{"RandomColor", "[", "]"}]}]}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "False"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"datak2r2C", "[", 
   RowBox[{"W_Integer", ",", "H_Integer", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"genk2r2C", "[", 
      RowBox[{"i", ",", "W", ",", "H"}], "]"}], "\[Rule]", "i"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "4294967295"}], "]"}], ",", "n"}], "]"}]}], 
     "}"}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.76161444582863*^9, 3.761614510262288*^9}, {
   3.767510309142295*^9, 3.767510314786756*^9}, {3.767510828741938*^9, 
   3.767510833118135*^9}, {3.767511190521859*^9, 3.767511193048094*^9}, 
   3.774170730124617*^9, 3.774170821357259*^9},
 CellLabel->"In[31]:=",ExpressionUUID->"f1b2d4ee-d8dc-4695-b1d7-f5232f433426"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["k=2, r=3 non-totalistic", "Subsubsection"]], \
"Subsubsection",
 CellChangeTimes->{{3.775514361703095*^9, 3.7755143705629473`*^9}, {
  3.7755150566082087`*^9, 3.775515056754973*^9}, {3.775515385034913*^9, 
  3.775515387062415*^9}, {3.775515421320853*^9, 
  3.775515423738122*^9}},ExpressionUUID->"4337255d-1ac0-4e9f-b9a4-\
7997f6bc9959"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"genk2r3NT", "[", 
   RowBox[{"p_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Image", "[", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", " ", "2", ",", "3"}], "}"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"1", ",", "W"}], "]"}], ",", 
       RowBox[{"H", "-", "1"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"W", ",", "H"}], "}"}]}], ",", 
     RowBox[{"ColorRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", " ", 
        RowBox[{"1", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"3", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"5", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"6", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"7", "->", 
         RowBox[{"RandomColor", "[", "]"}]}]}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "False"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"datak2r3NT", "[", 
   RowBox[{"W_Integer", ",", "H_Integer", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"genk2r3NT", "[", 
      RowBox[{"i", ",", "W", ",", "H"}], "]"}], "\[Rule]", "i"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"2", "^", 
          RowBox[{"2", "^", "7"}]}], "-", "1"}], ",", "n"}], "]"}]}], "}"}]}],
    "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.76161444582863*^9, 3.761614510262288*^9}, {
   3.767510309142295*^9, 3.767510314786756*^9}, {3.767510828741938*^9, 
   3.767510833118135*^9}, {3.767511190521859*^9, 3.767511193048094*^9}, 
   3.774170730124617*^9, 3.774170821357259*^9, {3.775514207571681*^9, 
   3.775514249971706*^9}, {3.775514310522409*^9, 3.775514328338708*^9}, {
   3.7755147850545387`*^9, 3.7755147851923733`*^9}, {3.775514881682189*^9, 
   3.7755148818027554`*^9}, {3.7755150602443666`*^9, 3.775515071443564*^9}, {
   3.775515131252172*^9, 3.775515165495037*^9}, 3.775515254213442*^9, 
   3.7755153288711767`*^9, {3.775515389537504*^9, 3.7755153904662848`*^9}, {
   3.775515437287051*^9, 3.77551547267837*^9}, {3.775515621530588*^9, 
   3.775515629471393*^9}, {3.775515720034292*^9, 3.775515728028055*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"1bcaca1e-b1cf-4b63-8094-cbf2abfbde08"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["k=3, r=1 non-totalistic", "Subsubsection"]], \
"Subsubsection",
 CellChangeTimes->{{3.775514361703095*^9, 3.7755143705629473`*^9}, {
  3.7755150566082087`*^9, 3.775515056754973*^9}, {3.775515385034913*^9, 
  3.775515387062415*^9}, {3.775515421320853*^9, 3.775515423738122*^9}, {
  3.775515836627635*^9, 
  3.7755158385161257`*^9}},ExpressionUUID->"34c9b6fd-1f90-47ab-8b2c-\
5e5c94994247"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"genk3r1NT", "[", 
   RowBox[{"p_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Image", "[", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", " ", "3"}], "}"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"1", ",", "W"}], "]"}], ",", 
       RowBox[{"H", "-", "1"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"W", ",", "H"}], "}"}]}], ",", 
     RowBox[{"ColorRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", " ", 
        RowBox[{"1", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"3", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"5", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"6", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"7", "->", 
         RowBox[{"RandomColor", "[", "]"}]}]}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "False"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"datak3r1NT", "[", 
   RowBox[{"W_Integer", ",", "H_Integer", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"genk3r1NT", "[", 
      RowBox[{"i", ",", "W", ",", "H"}], "]"}], "\[Rule]", "i"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"3", "^", 
          RowBox[{"3", "^", "3"}]}], "-", "1"}], ",", "n"}], "]"}]}], "}"}]}],
    "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.76161444582863*^9, 3.761614510262288*^9}, {
   3.767510309142295*^9, 3.767510314786756*^9}, {3.767510828741938*^9, 
   3.767510833118135*^9}, {3.767511190521859*^9, 3.767511193048094*^9}, 
   3.774170730124617*^9, 3.774170821357259*^9, {3.775514207571681*^9, 
   3.775514249971706*^9}, {3.775514310522409*^9, 3.775514328338708*^9}, {
   3.7755147850545387`*^9, 3.7755147851923733`*^9}, {3.775514881682189*^9, 
   3.7755148818027554`*^9}, {3.7755150602443666`*^9, 3.775515071443564*^9}, {
   3.775515131252172*^9, 3.775515165495037*^9}, 3.775515254213442*^9, 
   3.7755153288711767`*^9, {3.775515389537504*^9, 3.7755153904662848`*^9}, {
   3.775515437287051*^9, 3.77551547267837*^9}, {3.775515621530588*^9, 
   3.775515629471393*^9}, {3.775515720034292*^9, 3.775515728028055*^9}, {
   3.7755158410174513`*^9, 3.775515870991022*^9}, {3.775515949106106*^9, 
   3.775515949212802*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"f32e8e66-81e5-45b3-85e4-862ee4f682b1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["k=3, r=2 totalistic", "Subsubsection",
 CellChangeTimes->{{3.761615441007943*^9, 3.761615469505878*^9}, {
  3.7616160942784147`*^9, 
  3.7616160974184*^9}},ExpressionUUID->"bbe46304-a8c9-4610-9b2d-fef266fb07e8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"genk3r2C", "[", 
   RowBox[{"p_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Image", "[", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", " ", 
         RowBox[{"{", 
          RowBox[{"3", ",", "1"}], "}"}], ",", "2"}], "}"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"1", ",", "W"}], "]"}], ",", 
       RowBox[{"H", "-", "1"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"W", ",", "H"}], "}"}]}], ",", 
     RowBox[{"ColorRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", " ", 
        RowBox[{"1", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"3", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"5", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"6", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"7", "->", 
         RowBox[{"RandomColor", "[", "]"}]}]}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "False"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"datak3r2C", "[", 
   RowBox[{"W_Integer", ",", "H_Integer", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"genk3r2C", "[", 
      RowBox[{"i", ",", "W", ",", "H"}], "]"}], "\[Rule]", "i"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "177146"}], "]"}], ",", "n"}], "]"}]}], "}"}]}], 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.76161444582863*^9, 3.761614510262288*^9}, {
   3.76161548222936*^9, 3.7616155371087847`*^9}, 3.7616157433438263`*^9, {
   3.761616079971101*^9, 3.761616104704558*^9}, {3.76161622381704*^9, 
   3.761616225061866*^9}, {3.761616308044606*^9, 3.761616315925589*^9}, {
   3.761617122206101*^9, 3.76161712999516*^9}, 3.761617258307266*^9, {
   3.761617318990324*^9, 3.761617319579685*^9}, {3.7675103204005337`*^9, 
   3.767510325142722*^9}, {3.7675108374110003`*^9, 3.767510843032691*^9}, {
   3.7675111980057573`*^9, 3.767511200821992*^9}, 3.774170730127831*^9, 
   3.774170821360751*^9},
 CellLabel->"In[35]:=",ExpressionUUID->"9ca14769-9284-4d60-a31b-5e487857ead1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["k=3, r=3 totalistic", "Subsubsection",
 CellChangeTimes->{{3.761615441007943*^9, 3.761615469505878*^9}, {
  3.7616160942784147`*^9, 3.7616160974184*^9}, {3.773350406840972*^9, 
  3.773350406962215*^9}},ExpressionUUID->"a82e0c0e-c882-433a-8a7d-\
11c2fd71246a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"genk3r3C", "[", 
   RowBox[{"p_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Image", "[", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", " ", 
         RowBox[{"{", 
          RowBox[{"3", ",", "1"}], "}"}], ",", "3"}], "}"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"1", ",", "W"}], "]"}], ",", 
       RowBox[{"H", "-", "1"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"W", ",", "H"}], "}"}]}], ",", 
     RowBox[{"ColorRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", " ", 
        RowBox[{"1", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"3", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"5", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"6", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"7", "->", 
         RowBox[{"RandomColor", "[", "]"}]}]}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "False"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"datak3r3C", "[", 
   RowBox[{"W_Integer", ",", "H_Integer", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"genk3r3C", "[", 
      RowBox[{"i", ",", "W", ",", "H"}], "]"}], "\[Rule]", "i"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "14348906"}], "]"}], ",", "n"}], "]"}]}], "}"}]}], 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.76161444582863*^9, 3.761614510262288*^9}, {
   3.76161548222936*^9, 3.7616155371087847`*^9}, 3.7616157433438263`*^9, {
   3.761616079971101*^9, 3.761616104704558*^9}, {3.76161622381704*^9, 
   3.761616225061866*^9}, {3.761616308044606*^9, 3.761616315925589*^9}, {
   3.761617122206101*^9, 3.76161712999516*^9}, 3.761617258307266*^9, {
   3.761617318990324*^9, 3.761617319579685*^9}, {3.7675103204005337`*^9, 
   3.767510325142722*^9}, {3.7675108374110003`*^9, 3.767510843032691*^9}, {
   3.7675111980057573`*^9, 3.767511200821992*^9}, {3.773350409843751*^9, 
   3.773350440070755*^9}, 3.774170730131132*^9, 3.774170821364251*^9},
 CellLabel->"In[37]:=",ExpressionUUID->"c836ec84-2e68-492b-9d3a-e4f43e626853"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["k=4, r=1 non-totalistic", "Subsubsection"]], \
"Subsubsection",
 CellChangeTimes->{{3.775514361703095*^9, 3.7755143705629473`*^9}, {
  3.7755150566082087`*^9, 3.775515056754973*^9}, {3.775515385034913*^9, 
  3.775515387062415*^9}, {3.775515421320853*^9, 3.775515423738122*^9}, {
  3.775515836627635*^9, 3.7755158385161257`*^9}, {3.775515986477058*^9, 
  3.7755159867419767`*^9}},ExpressionUUID->"14961ecb-b2da-4be6-a711-\
e505ab698b4e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"genk4r1NT", "[", 
   RowBox[{"p_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Image", "[", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", " ", "4"}], "}"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"1", ",", "W"}], "]"}], ",", 
       RowBox[{"H", "-", "1"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"W", ",", "H"}], "}"}]}], ",", 
     RowBox[{"ColorRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", " ", 
        RowBox[{"1", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"3", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"5", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"6", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"7", "->", 
         RowBox[{"RandomColor", "[", "]"}]}]}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "False"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"datak4r1NT", "[", 
   RowBox[{"W_Integer", ",", "H_Integer", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"genk4r1NT", "[", 
      RowBox[{"i", ",", "W", ",", "H"}], "]"}], "\[Rule]", "i"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"4", "^", 
          RowBox[{"4", "^", "3"}]}], "-", "1"}], ",", "n"}], "]"}]}], "}"}]}],
    "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.76161444582863*^9, 3.761614510262288*^9}, {
   3.767510309142295*^9, 3.767510314786756*^9}, {3.767510828741938*^9, 
   3.767510833118135*^9}, {3.767511190521859*^9, 3.767511193048094*^9}, 
   3.774170730124617*^9, 3.774170821357259*^9, {3.775514207571681*^9, 
   3.775514249971706*^9}, {3.775514310522409*^9, 3.775514328338708*^9}, {
   3.7755147850545387`*^9, 3.7755147851923733`*^9}, {3.775514881682189*^9, 
   3.7755148818027554`*^9}, {3.7755150602443666`*^9, 3.775515071443564*^9}, {
   3.775515131252172*^9, 3.775515165495037*^9}, 3.775515254213442*^9, 
   3.7755153288711767`*^9, {3.775515389537504*^9, 3.7755153904662848`*^9}, {
   3.775515437287051*^9, 3.77551547267837*^9}, {3.775515621530588*^9, 
   3.775515629471393*^9}, {3.775515720034292*^9, 3.775515728028055*^9}, {
   3.7755158410174513`*^9, 3.775515870991022*^9}, {3.775515949106106*^9, 
   3.775515949212802*^9}, {3.775515989031*^9, 3.775516006550313*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"0b34b92d-9faf-4371-94ac-ddd720c4e04d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["k=4, r=1 totalistic", "Subsubsection",
 CellChangeTimes->{{3.761615441007943*^9, 3.761615469505878*^9}, {
  3.7616160942784147`*^9, 3.7616160974184*^9}, {3.7616163320792017`*^9, 
  3.7616163322266397`*^9}, {3.761616809978292*^9, 
  3.761616810123946*^9}},ExpressionUUID->"3187af25-8038-4a1a-9805-\
91c61e491f01"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"genk4r1C", "[", 
   RowBox[{"p_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Image", "[", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", " ", 
         RowBox[{"{", 
          RowBox[{"4", ",", "1"}], "}"}]}], "}"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"1", ",", "W"}], "]"}], ",", 
       RowBox[{"H", "-", "1"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"W", ",", "H"}], "}"}]}], ",", 
     RowBox[{"ColorRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", " ", 
        RowBox[{"1", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"3", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"5", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"6", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"7", "->", 
         RowBox[{"RandomColor", "[", "]"}]}]}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "False"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"datak4r1C", "[", 
   RowBox[{"W_Integer", ",", "H_Integer", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"genk4r1C", "[", 
      RowBox[{"i", ",", "W", ",", "H"}], "]"}], "\[Rule]", "i"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "1048575"}], "]"}], ",", "n"}], "]"}]}], "}"}]}], 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.76161444582863*^9, 3.761614510262288*^9}, {
   3.76161548222936*^9, 3.7616155371087847`*^9}, 3.7616157433438263`*^9, {
   3.761616079971101*^9, 3.761616104704558*^9}, {3.76161622381704*^9, 
   3.761616225061866*^9}, {3.761616308044606*^9, 3.761616351729332*^9}, {
   3.761616407409528*^9, 3.761616411545272*^9}, {3.7616168130005913`*^9, 
   3.7616168158678713`*^9}, {3.761616854057122*^9, 3.76161686442411*^9}, {
   3.761616959822321*^9, 3.7616169685713387`*^9}, {3.7662350487859097`*^9, 
   3.766235053414468*^9}, {3.7675103304607477`*^9, 3.767510337080057*^9}, {
   3.7675108467671003`*^9, 3.767510851628751*^9}, {3.767511206650696*^9, 
   3.767511209309524*^9}, 3.774170730134152*^9, 3.774170821367737*^9},
 CellLabel->"In[39]:=",ExpressionUUID->"8a0e5cb2-474c-405f-8ccf-85cdfa941db2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["k=4, r=2 totalistic", "Subsubsection",
 CellChangeTimes->{{3.761615441007943*^9, 3.761615469505878*^9}, {
  3.7616160942784147`*^9, 3.7616160974184*^9}, {3.7616163320792017`*^9, 
  3.7616163322266397`*^9}},ExpressionUUID->"85a1c8ea-6ff1-4040-8497-\
e1e5a7fba947"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"genk4r2C", "[", 
   RowBox[{"p_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Image", "[", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", " ", 
         RowBox[{"{", 
          RowBox[{"4", ",", "1"}], "}"}], ",", "2"}], "}"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"1", ",", "W"}], "]"}], ",", 
       RowBox[{"H", "-", "1"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"W", ",", "H"}], "}"}]}], ",", 
     RowBox[{"ColorRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", " ", 
        RowBox[{"1", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"3", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"5", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"6", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"7", "->", 
         RowBox[{"RandomColor", "[", "]"}]}]}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "False"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"datak4r2C", "[", 
   RowBox[{"W_Integer", ",", "H_Integer", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"genk4r2C", "[", 
      RowBox[{"i", ",", "W", ",", "H"}], "]"}], "\[Rule]", "i"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "4294967295"}], "]"}], ",", "n"}], "]"}]}], 
     "}"}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.76161444582863*^9, 3.761614510262288*^9}, {
   3.76161548222936*^9, 3.7616155371087847`*^9}, 3.7616157433438263`*^9, {
   3.761616079971101*^9, 3.761616104704558*^9}, {3.76161622381704*^9, 
   3.761616225061866*^9}, {3.761616308044606*^9, 3.761616351729332*^9}, {
   3.761616407409528*^9, 3.761616411545272*^9}, {3.767510343627254*^9, 
   3.767510348473226*^9}, {3.767510855740291*^9, 3.767510861789513*^9}, {
   3.767511212394096*^9, 3.76751121556322*^9}, 3.774170730137302*^9, 
   3.7741708213712263`*^9},
 CellLabel->"In[41]:=",ExpressionUUID->"089e5987-d976-416f-8c37-15894e1f2585"]
}, Open  ]],

Cell[CellGroupData[{

Cell["k=5, r=1 totalistic", "Subsubsection",
 CellChangeTimes->{{3.766234237476273*^9, 
  3.7662342423556957`*^9}},ExpressionUUID->"bcf88996-962c-442a-8768-\
3bf69f86b80f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gen5T2C", "[", 
   RowBox[{"p_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Image", "[", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", " ", 
         RowBox[{"{", 
          RowBox[{"5", ",", "1"}], "}"}], ",", "1"}], "}"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"1", ",", "W"}], "]"}], ",", 
       RowBox[{"H", "-", "1"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"W", ",", "H"}], "}"}]}], ",", 
     RowBox[{"ColorRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", " ", 
        RowBox[{"1", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"3", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"5", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"6", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"7", "->", 
         RowBox[{"RandomColor", "[", "]"}]}]}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "False"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data5T2C", "[", 
   RowBox[{"n_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"gen5T2C", "[", 
      RowBox[{"i", ",", "W", ",", "H"}], "]"}], "\[Rule]", "i"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "1220703125"}], "]"}], ",", "n"}], "]"}]}], 
     "}"}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.76154375336207*^9, 3.761543759771061*^9}, {
   3.7615441871787853`*^9, 3.76154419143771*^9}, 3.766234260385832*^9, {
   3.7662343074546003`*^9, 3.766234313807774*^9}, {3.7675103532368517`*^9, 
   3.76751035798671*^9}, {3.7675108668951674`*^9, 3.76751087175385*^9}, {
   3.767511220229587*^9, 3.767511223185287*^9}, {3.773351000589512*^9, 
   3.773351000965266*^9}, 3.774170730140427*^9, 3.77417082137471*^9},
 CellLabel->"In[43]:=",ExpressionUUID->"f976eee9-cad7-40ae-9eb8-abb7f641dba9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["k=6, r=1 totalistic", "Subsubsection",
 CellChangeTimes->{{3.767441985831099*^9, 
  3.767441990770444*^9}},ExpressionUUID->"f5bf9f31-35b0-4385-b154-\
d1126b5f2296"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gen6TC", "[", 
   RowBox[{"p_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Image", "[", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", " ", 
         RowBox[{"{", 
          RowBox[{"6", ",", "1"}], "}"}], ",", "1"}], "}"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"1", ",", "W"}], "]"}], ",", 
       RowBox[{"H", "-", "1"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"W", ",", "H"}], "}"}]}], ",", 
     RowBox[{"ColorRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", " ", 
        RowBox[{"1", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"3", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"5", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"6", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"7", "->", 
         RowBox[{"RandomColor", "[", "]"}]}]}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "False"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data6TC", "[", 
   RowBox[{"n_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"gen6TC", "[", 
      RowBox[{"i", ",", "W", ",", "H"}], "]"}], "\[Rule]", "i"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{"2821109907455", ",", "n"}], "]"}]}], "}"}]}], 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.76154375336207*^9, 3.761543759771061*^9}, {
   3.7615441871787853`*^9, 3.76154419143771*^9}, 3.766234260385832*^9, {
   3.7662343074546003`*^9, 3.766234313807774*^9}, {3.767442006845896*^9, 
   3.7674420185681763`*^9}, 3.767442129701791*^9, {3.7674429513206043`*^9, 
   3.767442951408415*^9}, {3.767508905686763*^9, 3.767508905825247*^9}, {
   3.767509529033539*^9, 3.767509573567162*^9}, {3.767509735092375*^9, 
   3.767509737176196*^9}, {3.767509804570011*^9, 3.767509804725649*^9}, {
   3.767510362779685*^9, 3.767510371844397*^9}, {3.767510876094713*^9, 
   3.767510879753971*^9}, {3.767511226543956*^9, 3.767511229203272*^9}, 
   3.7741707301438713`*^9, 3.7741708213781977`*^9},
 CellLabel->"In[45]:=",ExpressionUUID->"7b022004-514e-4e0b-a42b-ce72906e235a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["k=6, r=2 totalistic", "Subsubsection",
 CellChangeTimes->{{3.767441985831099*^9, 3.767441990770444*^9}, {
  3.773351151314988*^9, 
  3.7733511514063463`*^9}},ExpressionUUID->"89a0c131-9a09-4809-a178-\
0bfd9abfdb20"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gen6T2C", "[", 
   RowBox[{"p_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Image", "[", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", " ", 
         RowBox[{"{", 
          RowBox[{"6", ",", "1"}], "}"}], ",", "2"}], "}"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"1", ",", "W"}], "]"}], ",", 
       RowBox[{"H", "-", "1"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"W", ",", "H"}], "}"}]}], ",", 
     RowBox[{"ColorRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", " ", 
        RowBox[{"1", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"3", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"5", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"6", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"7", "->", 
         RowBox[{"RandomColor", "[", "]"}]}]}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "False"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data6T2C", "[", 
   RowBox[{"n_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"gen6T2C", "[", 
      RowBox[{"i", ",", "W", ",", "H"}], "]"}], "\[Rule]", "i"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{"170581728179578208255", ",", "n"}], "]"}]}], "}"}]}], 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.76154375336207*^9, 3.761543759771061*^9}, {
   3.7615441871787853`*^9, 3.76154419143771*^9}, 3.766234260385832*^9, {
   3.7662343074546003`*^9, 3.766234313807774*^9}, {3.767442006845896*^9, 
   3.7674420185681763`*^9}, 3.767442129701791*^9, {3.7674429513206043`*^9, 
   3.767442951408415*^9}, {3.767508905686763*^9, 3.767508905825247*^9}, {
   3.767509529033539*^9, 3.767509573567162*^9}, {3.767509735092375*^9, 
   3.767509737176196*^9}, {3.767509804570011*^9, 3.767509804725649*^9}, {
   3.767510362779685*^9, 3.767510371844397*^9}, {3.767510876094713*^9, 
   3.767510879753971*^9}, {3.767511226543956*^9, 3.767511229203272*^9}, {
   3.7733511643546143`*^9, 3.773351177174906*^9}, {3.773351428563702*^9, 
   3.773351430341761*^9}, 3.774170730147072*^9, 3.774170821381504*^9},
 CellLabel->"In[47]:=",ExpressionUUID->"cab3044c-9201-4580-9dce-211a871b1b81"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["k=7, r=1 totalistic", "Subsection",
 CellChangeTimes->{{3.773070873102974*^9, 
  3.773070878369487*^9}},ExpressionUUID->"b8bb5af3-a34b-4962-80ac-\
bbc195d25f55"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gen7TC", "[", 
   RowBox[{"p_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Image", "[", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", " ", 
         RowBox[{"{", 
          RowBox[{"7", ",", "1"}], "}"}], ",", "1"}], "}"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"1", ",", "W"}], "]"}], ",", 
       RowBox[{"H", "-", "1"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"W", ",", "H"}], "}"}]}], ",", 
     RowBox[{"ColorRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", " ", 
        RowBox[{"1", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"3", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"5", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"6", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"7", "->", 
         RowBox[{"RandomColor", "[", "]"}]}]}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "False"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data7TC", "[", 
   RowBox[{"n_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"gen7TC", "[", 
      RowBox[{"i", ",", "W", ",", "H"}], "]"}], "\[Rule]", "i"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{"11398895185373142", ",", "n"}], "]"}]}], "}"}]}], 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.76154375336207*^9, 3.761543759771061*^9}, {
   3.7615441871787853`*^9, 3.76154419143771*^9}, 3.766234260385832*^9, {
   3.7662343074546003`*^9, 3.766234313807774*^9}, {3.767442006845896*^9, 
   3.7674420185681763`*^9}, 3.767442129701791*^9, {3.7674429513206043`*^9, 
   3.767442951408415*^9}, {3.767508905686763*^9, 3.767508905825247*^9}, {
   3.767509529033539*^9, 3.767509573567162*^9}, {3.767509735092375*^9, 
   3.767509737176196*^9}, {3.767509804570011*^9, 3.767509804725649*^9}, {
   3.767510362779685*^9, 3.767510371844397*^9}, {3.767510876094713*^9, 
   3.767510879753971*^9}, {3.767511226543956*^9, 3.767511229203272*^9}, {
   3.773070887060704*^9, 3.7730709245429792`*^9}, 3.7730711208047028`*^9, 
   3.7741708936303062`*^9, 3.775513595116267*^9, {3.77551362584363*^9, 
   3.7755136259799147`*^9}, 3.775514049407118*^9},
 CellLabel->"In[49]:=",ExpressionUUID->"3dea61d9-966a-40a2-9fd8-a1e4d4758106"]
}, Open  ]],

Cell[CellGroupData[{

Cell["k=8, r=1 totalistic", "Subsection",
 CellChangeTimes->{{3.774170839636654*^9, 3.7741708436528263`*^9}, {
  3.7755133784445477`*^9, 
  3.77551338516485*^9}},ExpressionUUID->"e3aa393f-40fd-4533-a667-\
8fbe54413568"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gen8TC", "[", 
   RowBox[{"p_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Image", "[", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", " ", 
         RowBox[{"{", 
          RowBox[{"8", ",", "1"}], "}"}], ",", "1"}], "}"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"1", ",", "W"}], "]"}], ",", 
       RowBox[{"H", "-", "1"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"W", ",", "H"}], "}"}]}], ",", 
     RowBox[{"ColorRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", " ", 
        RowBox[{"1", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"3", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"5", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"6", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"7", "->", 
         RowBox[{"RandomColor", "[", "]"}]}]}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "False"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data8TC", "[", 
   RowBox[{"n_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"gen8TC", "[", 
      RowBox[{"i", ",", "W", ",", "H"}], "]"}], "\[Rule]", "i"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{"73786976294838206463", ",", "n"}], "]"}]}], "}"}]}], 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.76154375336207*^9, 3.761543759771061*^9}, {
   3.7615441871787853`*^9, 3.76154419143771*^9}, 3.766234260385832*^9, {
   3.7662343074546003`*^9, 3.766234313807774*^9}, {3.767442006845896*^9, 
   3.7674420185681763`*^9}, 3.767442129701791*^9, {3.7674429513206043`*^9, 
   3.767442951408415*^9}, {3.767508905686763*^9, 3.767508905825247*^9}, {
   3.767509529033539*^9, 3.767509573567162*^9}, {3.767509735092375*^9, 
   3.767509737176196*^9}, {3.767509804570011*^9, 3.767509804725649*^9}, {
   3.767510362779685*^9, 3.767510371844397*^9}, {3.767510876094713*^9, 
   3.767510879753971*^9}, {3.767511226543956*^9, 3.767511229203272*^9}, {
   3.773070887060704*^9, 3.7730709245429792`*^9}, 3.7730711208047028`*^9, 
   3.7741708936303062`*^9, {3.7755133880896893`*^9, 3.775513404208559*^9}, 
   3.7755135166303587`*^9, {3.77551363004115*^9, 3.775513630160699*^9}, 
   3.7755137251281548`*^9},
 CellLabel->"In[51]:=",ExpressionUUID->"9e627165-365e-4b8d-9280-526bd76a8666"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Network XIII - Two convolutions, dropout on linear only, BatchNorm\
\>", "Subsection",
 CellChangeTimes->{{3.773294911734397*^9, 3.773294927816469*^9}, 
   3.774171005551174*^9},ExpressionUUID->"6d63eb61-66bb-4d14-a991-\
dd560e484611"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"netECA13", "=", 
  RowBox[{"netSevenCC512drop", "[", 
   RowBox[{"128", ",", "128"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.773214654961218*^9, 3.773214666432025*^9}, {
  3.773294967256976*^9, 3.773294976003352*^9}, {3.774171007952446*^9, 
  3.774171018025958*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"0f93efd4-1c2f-457b-8951-331a84496c40"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["12", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{24, 3, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 24, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 3, "$InputSize" -> {128, 128}, 
                    "$OutputSize" -> {126, 126}, "$WeightsInputChannels" -> 
                    3], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "bat1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{24}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 24, 
                    "$SpatialDimensions" -> {126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "ramp1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {24, 126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{24, 24, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 24, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 24, "$InputSize" -> {126, 126}, 
                    "$OutputSize" -> {124, 124}, "$WeightsInputChannels" -> 
                    24], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]]], "bat2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{24}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 24, 
                    "$SpatialDimensions" -> {124, 124}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]]], "ramp2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {24, 124, 124}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]]], "pooling" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {124, 120}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 24, "$InputSize" -> {124, 124}, 
                    "$OutputSize" -> {1, 5}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 1, 5}, 
                    NeuralNetworks`RealT]]], "flatten" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 1, 5}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]]], 
                    "linear" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 120}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {512}, "$OutputSize" -> 512, 
                    "$InputSize" -> 120, "$InputDimensions" -> {120}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "drop2" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.2, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "linear2" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{4, 512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{4}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {4}, "$OutputSize" -> 4, 
                    "$InputSize" -> 512, "$InputDimensions" -> {512}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]], 
                    "softmax" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pooling", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pooling", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "drop2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "drop2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3, 128, 128}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {128, 128}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, "Interleaving" -> False, 
                    "MeanImage" -> None, "VarianceImage" -> None, "$Version" -> 
                    "12.0.11"]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {1, 2, 3, 4}, "InputDepth" -> 1, "Dimensions" -> 
                    4, "$Rank" -> 0, "$Version" -> "12.0.11"]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox["\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"128\"", "\"128\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bat1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ramp1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"124\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bat2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"124\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ramp2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"124\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pooling\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"1\"", "\"5\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"flatten\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"120\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"drop2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"softmax\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.773294978718738*^9, 3.773295007956345*^9}, 
   3.773325544103874*^9, 3.7741710218431463`*^9, 3.775221553750214*^9, 
   3.775222096417267*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"b9bf4141-a11d-450d-8803-4b8ac2b69c7a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetInformation", "[", 
  RowBox[{"netECA13", ",", "\"\<MXNetNodeGraphPlot\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.773215183930698*^9, 3.77321519391398*^9}, {
  3.773325520783605*^9, 3.773325521638377*^9}, {3.774171029104699*^9, 
  3.7741710292195683`*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"7767037a-7c87-4473-a2d0-952a223e2690"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      GrayLevel[0.8], {
       LineBox[{{-13., 7.960204194457795*^-16}, {-12., 1.0000000000000007`}}], 
       LineBox[{{-13., 1.0000000000000009`}, {-12., 1.0000000000000007`}}], 
       LineBox[{{-13., 2.000000000000001}, {-12., 1.0000000000000007`}}], 
       LineBox[{{-12., 1.0000000000000007`}, {-11., -0.9999999999999993}}], 
       LineBox[{{-12., -2.999999999999999}, {-11., -0.9999999999999993}}], 
       LineBox[{{-12., -1.9999999999999993`}, {-11., -0.9999999999999993}}], 
       LineBox[{{-12., -0.9999999999999992}, {-11., -0.9999999999999993}}], 
       LineBox[{{-12., 7.347880794884119*^-16}, {-11., -0.9999999999999993}}], 
       LineBox[{{-11., -0.9999999999999993}, {-10., -0.9999999999999993}}], 
       LineBox[{{-10., -0.9999999999999993}, {-9., 5.51091059616309*^-16}}], 
       LineBox[{{-10., 6.123233995736766*^-16}, {-9., 
        5.51091059616309*^-16}}], 
       LineBox[{{-10., 1.0000000000000007`}, {-9., 5.51091059616309*^-16}}], 
       LineBox[{{-9., 5.51091059616309*^-16}, {-8., -1.9999999999999996`}}], 
       LineBox[{{-9., -3.9999999999999996`}, {-8., -1.9999999999999996`}}], 
       LineBox[{{-9., -2.9999999999999996`}, {-8., -1.9999999999999996`}}], 
       LineBox[{{-9., -1.9999999999999996`}, {-8., -1.9999999999999996`}}], 
       LineBox[{{-9., -0.9999999999999994}, {-8., -1.9999999999999996`}}], 
       LineBox[{{-8., -1.9999999999999996`}, {-7., -1.9999999999999996`}}], 
       LineBox[{{-7., -1.9999999999999996`}, {-6., -1.9999999999999996`}}], 
       LineBox[{{-6., -1.9999999999999996`}, {-5., -1.9999999999999998`}}], 
       LineBox[{{-5., -1.9999999999999998`}, {-4., -0.9999999999999998}}], 
       LineBox[{{-5., -0.9999999999999997}, {-4., -0.9999999999999998}}], 
       LineBox[{{-5., 3.061616997868383*^-16}, {-4., -0.9999999999999998}}], 
       LineBox[{{-4., -0.9999999999999998}, {-3., -1.9999999999999998`}}], 
       LineBox[{{-4., -2.9999999999999996`}, {-3., -1.9999999999999998`}}], 
       LineBox[{{-4., -1.9999999999999998`}, {-3., -1.9999999999999998`}}], 
       LineBox[{{-3., -1.9999999999999998`}, {-2., -1.9999999999999998`}}], 
       LineBox[{{-2., -1.9999999999999998`}, {-1.0000000000000002`, -2.}}], 
       LineBox[{{-1.0000000000000002`, -2.}, {-1.2246467991473532`*^-16, \
-2.}}]}}, {
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> False]], {-12.399999999999999`, 
         0.6000000000000008}, {-0.25, 0}, 
         Offset[8], {1., 0.9999999999999999}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "3", "128", "128"}, 
         "RowWithSeparators"]], Annotation[#, 
        Row[{"b", 3, 128, 128}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> False]], {-12.399999999999999`, 
         1.0000000000000009`}, {-0.25, 0}, 
         Offset[8], {1., -2.220446049250313*^-16}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "24", "3", "3", "3"}, 
         "RowWithSeparators"]], Annotation[#, 
        Row[{24, 3, 3, 3}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> False]], {-12.399999999999999`, 
         1.4000000000000008`}, {-0.25, 0}, 
         Offset[8], {1., -1.0000000000000002`}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "24"}, "RowWithSeparators"]],
        Annotation[#, 
        Row[{24}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-11.417705098312485`, -0.16458980337503065`}, {-0.25, 0}, 
         Offset[8], {1., -2.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "24", "126", "126"},
          "RowWithSeparators"]], Annotation[#, 
        Row[{"b", 24, 126, 126}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-11.417705098312485`, -1.8354101966249678`}, {-0.25, 0}, 
         
         Offset[8], {1., 1.9999999999999998`}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "24"}, "RowWithSeparators"]],
        Annotation[#, 
        Row[{24}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-11.4, -1.3999999999999995`}, {-0.25, 0}, 
         Offset[8], {1., 1.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "24"}, "RowWithSeparators"]],
        Annotation[#, 
        Row[{24}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-11.4, -0.9999999999999992}, {-0.25, 0}, 
         Offset[8], {1., -1.1102230246251565`*^-16}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "24"}, "RowWithSeparators"]],
        Annotation[#, 
        Row[{24}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-11.4, -0.5999999999999992}, {-0.25, 0}, 
         Offset[8], {1., -1.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "24"}, "RowWithSeparators"]],
        Annotation[#, 
        Row[{24}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-10.4, -0.9999999999999993}, {-0.25, 0}, 
         Offset[8], {1., 0.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "24", "126", "126"},
          "RowWithSeparators"]], Annotation[#, 
        Row[{"b", 24, 126, 126}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-9.399999999999999, -0.3999999999999994}, {-0.25, 0}, 
         Offset[8], {1., 0.9999999999999999}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "24", "126", "126"},
          "RowWithSeparators"]], Annotation[#, 
        Row[{"b", 24, 126, 126}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> False]], {-9.399999999999999, 
         5.755839955992561*^-16}, {-0.25, 0}, 
         Offset[8], {1., -6.123233995736767*^-17}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "24", "24", "3", "3"}, 
         "RowWithSeparators"]], Annotation[#, 
        Row[{24, 24, 3, 3}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> False]], {-9.399999999999999, 
         0.40000000000000063`}, {-0.25, 0}, 
         Offset[8], {1., -1.0000000000000002`}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "24"}, "RowWithSeparators"]],
        Annotation[#, 
        Row[{24}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-8.417705098312485, -1.1645898033750308`}, {-0.25, 0}, 
         Offset[8], {1., -2.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "24", 
          RowBox[{"4", " ", "\"b\""}], 
          RowBox[{"4", " ", "\"b\""}]}, "RowWithSeparators"]], Annotation[#, 
        Row[{"b", 24, 4 "b", 4 "b"}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-8.417705098312485, -2.8354101966249683`}, {-0.25, 0}, 
         Offset[8], {1., 2.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "24"}, "RowWithSeparators"]],
        Annotation[#, 
        Row[{24}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-8.4, -2.3999999999999995`}, {-0.25, 0}, 
         Offset[8], {1., 1.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "24"}, "RowWithSeparators"]],
        Annotation[#, 
        Row[{24}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-8.4, -1.9999999999999996`}, {-0.25, 0}, 
         Offset[8], {1., 0.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "24"}, "RowWithSeparators"]],
        Annotation[#, 
        Row[{24}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-8.4, -1.5999999999999996`}, {-0.25, 0}, 
         Offset[8], {1., -1.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "24"}, "RowWithSeparators"]],
        Annotation[#, 
        Row[{24}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-7.4, -1.9999999999999996`}, {-0.25, 0}, 
         Offset[8], {1., 0.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "24", 
          RowBox[{"4", " ", "\"b\""}], 
          RowBox[{"4", " ", "\"b\""}]}, "RowWithSeparators"]], Annotation[#, 
        Row[{"b", 24, 4 "b", 4 "b"}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-6.4, -1.9999999999999996`}, {-0.25, 0}, 
         Offset[8], {1., 0.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "24", 
          RowBox[{"4", " ", "\"b\""}], 
          RowBox[{"4", " ", "\"b\""}]}, "RowWithSeparators"]], Annotation[#, 
        Row[{"b", 24, 4 "b", 4 "b"}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-5.4, -1.9999999999999996`}, {-0.25, 0}, 
         Offset[8], {1., -2.220446049250313*^-16}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "24", "1", "5"}, 
         "RowWithSeparators"]], Annotation[#, 
        Row[{"b", 24, 1, 5}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> False]], {-4.4, -1.4}, {-0.25, 0}, 
         
         Offset[8], {1., 1.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "120"}, 
         "RowWithSeparators"]], Annotation[#, 
        Row[{"b", 120}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-4.4, -0.9999999999999998}, {-0.25, 0}, 
         Offset[8], {1., -1.1102230246251565`*^-16}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "512", "120"}, 
         "RowWithSeparators"]], Annotation[#, 
        Row[{512, 120}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-4.4, -0.5999999999999998}, {-0.25, 0}, 
         Offset[8], {1., -1.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "512"}, 
         "RowWithSeparators"]], Annotation[#, 
        Row[{512}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-3.4, -1.5999999999999996`}, {-0.25, 0}, 
         Offset[8], {1., -1.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "512"}, 
         "RowWithSeparators"]], Annotation[#, 
        Row[{"b", 512}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-3.4, -2.3999999999999995`}, {-0.25, 0}, 
         Offset[8], {1., 0.9999999999999998}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "4", "512"}, 
         "RowWithSeparators"]], Annotation[#, 
        Row[{4, 512}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-3.4, -1.9999999999999996`}, {-0.25, 0}, 
         Offset[8], {1., 0.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "4"}, "RowWithSeparators"]], 
       Annotation[#, 
        Row[{4}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-2.4000000000000004`, -1.9999999999999996`}, {-0.25, 0}, 
         
         Offset[8], {1., 0.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "4"}, 
         "RowWithSeparators"]], Annotation[#, 
        Row[{"b", 4}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-1.4000000000000001`, -2.}, {-0.25, 0}, 
         Offset[8], {0.9999999999999998, -2.220446049250313*^-16}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "4"}, 
         "RowWithSeparators"]], Annotation[#, 
        Row[{"b", 4}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-0.4000000000000002, -2.}, {-0.25, 0}, 
         Offset[8], {1., 0.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "4"}, 
         "RowWithSeparators"]], Annotation[#, 
        Row[{"b", 4}, "\[Times]"], "Tooltip"]& ]}, {
      GrayLevel[0], {
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-13., 7.960204194457795*^-16}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "0"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Inputs.Input\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 0}, {
            Style["name", Bold], ".Inputs.Input"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-13., 1.0000000000000009`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "1"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.conv1.Arrays.Weights\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 1}, {
            Style["name", Bold], ".Nodes.conv1.Arrays.Weights"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-13., 2.000000000000001}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "2"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.conv1.Arrays.Biases\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 2}, {
            Style["name", Bold], ".Nodes.conv1.Arrays.Biases"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.5, 0.5, 0.5], 
          PointBox[{-12., 1.0000000000000007`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "3"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.conv1\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], 
             "\"Convolution\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             TagBox[
              GridBox[{{
                 StyleBox["\"cudnn_off\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"0\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"dilate\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(1, 1)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"kernel\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(3, 3)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"layout\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"None\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"no_bias\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"False\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"num_filter\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"24\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"num_group\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"1\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"pad\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(0, 0)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"stride\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(1, 1)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               AutoDelete -> False, 
               GridBoxDividers -> {
                "Columns" -> {False, {True}, False}, 
                 "Rows" -> {False, {True}, False}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               FrameStyle -> GrayLevel[0.85]], "Grid"]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"2", ",", "0", ",", "0"}], "}"}]}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 3}, {
            Style["name", Bold], ".Nodes.conv1"}, {
            Style["op", Bold], "Convolution"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Grid[{{
               Style["cudnn_off", Bold], 
               Style["0", ShowStringCharacters -> True]}, {
               Style["dilate", Bold], 
               Style["(1, 1)", ShowStringCharacters -> True]}, {
               Style["kernel", Bold], 
               Style["(3, 3)", ShowStringCharacters -> True]}, {
               Style["layout", Bold], 
               Style["None", ShowStringCharacters -> True]}, {
               Style["no_bias", Bold], 
               Style["False", ShowStringCharacters -> True]}, {
               Style["num_filter", Bold], 
               Style["24", ShowStringCharacters -> True]}, {
               Style["num_group", Bold], 
               Style["1", ShowStringCharacters -> True]}, {
               Style["pad", Bold], 
               Style["(0, 0)", ShowStringCharacters -> True]}, {
               Style["stride", Bold], 
               Style["(1, 1)", ShowStringCharacters -> True]}}, Alignment -> 
             Left, Spacings -> {1.1, 0.5}, Dividers -> Center, FrameStyle -> 
             GrayLevel[0.85]]}, {
            Style["inputs", Bold], {{0, 0, 0}, {1, 0, 0}, {2, 0, 0}}}}, 
          Alignment -> Left, BaseStyle -> {FontFamily -> "Source Code Pro"}, 
          Dividers -> All, FrameStyle -> GrayLevel[0.85], 
          Alignment -> {Left, Baseline}, Spacings -> {1.1, 0.5}, 
          ItemSize -> {Automatic, 1.4}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-12., -2.999999999999999}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "4"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.bat1.Arrays.Scaling\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 4}, {
            Style["name", Bold], ".Nodes.bat1.Arrays.Scaling"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-12., -1.9999999999999993`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "5"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.bat1.Arrays.Biases\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 5}, {
            Style["name", Bold], ".Nodes.bat1.Arrays.Biases"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-12., -0.9999999999999992}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "6"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.bat1.Arrays.MovingMean\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 6}, {
            Style["name", Bold], ".Nodes.bat1.Arrays.MovingMean"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-12., 7.347880794884119*^-16}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "7"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.bat1.Arrays.MovingVariance\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 7}, {
            Style["name", Bold], ".Nodes.bat1.Arrays.MovingVariance"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.11, 1, 0.75], 
          PointBox[{-11., -0.9999999999999993}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "8"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.bat1\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], 
             "\"BatchNorm\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             TagBox[
              GridBox[{{
                 StyleBox["\"axis\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"1\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"cudnn_off\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"0\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"eps\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"0.001\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"fix_gamma\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"false\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"momentum\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"0.9\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox[
                 "\"use_global_stats\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"false\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               AutoDelete -> False, 
               GridBoxDividers -> {
                "Columns" -> {False, {True}, False}, 
                 "Rows" -> {False, {True}, False}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               FrameStyle -> GrayLevel[0.85]], "Grid"]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"3", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"4", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"5", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"6", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"7", ",", "0", ",", "0"}], "}"}]}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 8}, {
            Style["name", Bold], ".Nodes.bat1"}, {
            Style["op", Bold], "BatchNorm"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Grid[{{
               Style["axis", Bold], 
               Style["1", ShowStringCharacters -> True]}, {
               Style["cudnn_off", Bold], 
               Style["0", ShowStringCharacters -> True]}, {
               Style["eps", Bold], 
               Style["0.001", ShowStringCharacters -> True]}, {
               Style["fix_gamma", Bold], 
               Style["false", ShowStringCharacters -> True]}, {
               Style["momentum", Bold], 
               Style["0.9", ShowStringCharacters -> True]}, {
               Style["use_global_stats", Bold], 
               Style["false", ShowStringCharacters -> True]}}, Alignment -> 
             Left, Spacings -> {1.1, 0.5}, Dividers -> Center, FrameStyle -> 
             GrayLevel[0.85]]}, {
            Style["inputs", Bold], {{3, 0, 0}, {4, 0, 0}, {5, 0, 0}, {6, 0, 
            0}, {7, 0, 0}}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.08, 1, 0.92], 
          PointBox[{-10., -0.9999999999999993}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "9"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.ramp1$0\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"relu\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"8", ",", "0", ",", "0"}], "}"}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 9}, {
            Style["name", Bold], ".Nodes.ramp1$0"}, {
            Style["op", Bold], "relu"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {{8, 0, 0}}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-10., 6.123233995736766*^-16}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "10"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.conv3.Arrays.Weights\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 10}, {
            Style["name", Bold], ".Nodes.conv3.Arrays.Weights"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-10., 1.0000000000000007`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "11"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.conv3.Arrays.Biases\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 11}, {
            Style["name", Bold], ".Nodes.conv3.Arrays.Biases"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.5, 0.5, 0.5], 
          PointBox[{-9., 5.51091059616309*^-16}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "12"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.conv3\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], 
             "\"Convolution\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             TagBox[
              GridBox[{{
                 StyleBox["\"cudnn_off\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"0\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"dilate\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(1, 1)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"kernel\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(3, 3)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"layout\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"None\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"no_bias\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"False\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"num_filter\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"24\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"num_group\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"1\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"pad\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(0, 0)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"stride\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(1, 1)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               AutoDelete -> False, 
               GridBoxDividers -> {
                "Columns" -> {False, {True}, False}, 
                 "Rows" -> {False, {True}, False}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               FrameStyle -> GrayLevel[0.85]], "Grid"]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"9", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"10", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"11", ",", "0", ",", "0"}], "}"}]}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 12}, {
            Style["name", Bold], ".Nodes.conv3"}, {
            Style["op", Bold], "Convolution"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Grid[{{
               Style["cudnn_off", Bold], 
               Style["0", ShowStringCharacters -> True]}, {
               Style["dilate", Bold], 
               Style["(1, 1)", ShowStringCharacters -> True]}, {
               Style["kernel", Bold], 
               Style["(3, 3)", ShowStringCharacters -> True]}, {
               Style["layout", Bold], 
               Style["None", ShowStringCharacters -> True]}, {
               Style["no_bias", Bold], 
               Style["False", ShowStringCharacters -> True]}, {
               Style["num_filter", Bold], 
               Style["24", ShowStringCharacters -> True]}, {
               Style["num_group", Bold], 
               Style["1", ShowStringCharacters -> True]}, {
               Style["pad", Bold], 
               Style["(0, 0)", ShowStringCharacters -> True]}, {
               Style["stride", Bold], 
               Style["(1, 1)", ShowStringCharacters -> True]}}, Alignment -> 
             Left, Spacings -> {1.1, 0.5}, Dividers -> Center, FrameStyle -> 
             GrayLevel[0.85]]}, {
            Style["inputs", Bold], {{9, 0, 0}, {10, 0, 0}, {11, 0, 0}}}}, 
          Alignment -> Left, BaseStyle -> {FontFamily -> "Source Code Pro"}, 
          Dividers -> All, FrameStyle -> GrayLevel[0.85], 
          Alignment -> {Left, Baseline}, Spacings -> {1.1, 0.5}, 
          ItemSize -> {Automatic, 1.4}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-9., -3.9999999999999996`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "13"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.bat2.Arrays.Scaling\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 13}, {
            Style["name", Bold], ".Nodes.bat2.Arrays.Scaling"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-9., -2.9999999999999996`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "14"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.bat2.Arrays.Biases\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 14}, {
            Style["name", Bold], ".Nodes.bat2.Arrays.Biases"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-9., -1.9999999999999996`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "15"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.bat2.Arrays.MovingMean\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 15}, {
            Style["name", Bold], ".Nodes.bat2.Arrays.MovingMean"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-9., -0.9999999999999994}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "16"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.bat2.Arrays.MovingVariance\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 16}, {
            Style["name", Bold], ".Nodes.bat2.Arrays.MovingVariance"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.11, 1, 0.75], 
          PointBox[{-8., -1.9999999999999996`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "17"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.bat2\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], 
             "\"BatchNorm\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             TagBox[
              GridBox[{{
                 StyleBox["\"axis\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"1\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"cudnn_off\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"0\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"eps\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"0.001\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"fix_gamma\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"false\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"momentum\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"0.9\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox[
                 "\"use_global_stats\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"false\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               AutoDelete -> False, 
               GridBoxDividers -> {
                "Columns" -> {False, {True}, False}, 
                 "Rows" -> {False, {True}, False}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               FrameStyle -> GrayLevel[0.85]], "Grid"]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"12", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"13", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"14", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"15", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"16", ",", "0", ",", "0"}], "}"}]}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 17}, {
            Style["name", Bold], ".Nodes.bat2"}, {
            Style["op", Bold], "BatchNorm"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Grid[{{
               Style["axis", Bold], 
               Style["1", ShowStringCharacters -> True]}, {
               Style["cudnn_off", Bold], 
               Style["0", ShowStringCharacters -> True]}, {
               Style["eps", Bold], 
               Style["0.001", ShowStringCharacters -> True]}, {
               Style["fix_gamma", Bold], 
               Style["false", ShowStringCharacters -> True]}, {
               Style["momentum", Bold], 
               Style["0.9", ShowStringCharacters -> True]}, {
               Style["use_global_stats", Bold], 
               Style["false", ShowStringCharacters -> True]}}, Alignment -> 
             Left, Spacings -> {1.1, 0.5}, Dividers -> Center, FrameStyle -> 
             GrayLevel[0.85]]}, {
            Style["inputs", Bold], {{12, 0, 0}, {13, 0, 0}, {14, 0, 0}, {15, 
            0, 0}, {16, 0, 0}}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.08, 1, 0.92], 
          PointBox[{-7., -1.9999999999999996`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "18"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.ramp2$0\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"relu\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"17", ",", "0", ",", "0"}], "}"}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 18}, {
            Style["name", Bold], ".Nodes.ramp2$0"}, {
            Style["op", Bold], "relu"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {{17, 0, 0}}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.5, 0.67, 0.6], 
          PointBox[{-6., -1.9999999999999996`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "19"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.pooling\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"Pooling\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             TagBox[
              GridBox[{{
                 StyleBox["\"global_pool\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"False\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"kernel\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(124, 120)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"pad\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(0, 0)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"pool_type\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"max\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox[
                 "\"pooling_convention\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"valid\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"stride\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(1, 1)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               AutoDelete -> False, 
               GridBoxDividers -> {
                "Columns" -> {False, {True}, False}, 
                 "Rows" -> {False, {True}, False}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               FrameStyle -> GrayLevel[0.85]], "Grid"]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"18", ",", "0", ",", "0"}], "}"}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 19}, {
            Style["name", Bold], ".Nodes.pooling"}, {
            Style["op", Bold], "Pooling"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Grid[{{
               Style["global_pool", Bold], 
               Style["False", ShowStringCharacters -> True]}, {
               Style["kernel", Bold], 
               Style["(124, 120)", ShowStringCharacters -> True]}, {
               Style["pad", Bold], 
               Style["(0, 0)", ShowStringCharacters -> True]}, {
               Style["pool_type", Bold], 
               Style["max", ShowStringCharacters -> True]}, {
               Style["pooling_convention", Bold], 
               Style["valid", ShowStringCharacters -> True]}, {
               Style["stride", Bold], 
               Style["(1, 1)", ShowStringCharacters -> True]}}, Alignment -> 
             Left, Spacings -> {1.1, 0.5}, Dividers -> Center, FrameStyle -> 
             GrayLevel[0.85]]}, {
            Style["inputs", Bold], {{18, 0, 0}}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.08, 1, 0.7], 
          PointBox[{-5., -1.9999999999999998`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "20"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.flatten\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"Flatten\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"19", ",", "0", ",", "0"}], "}"}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 20}, {
            Style["name", Bold], ".Nodes.flatten"}, {
            Style["op", Bold], "Flatten"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {{19, 0, 0}}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-5., -0.9999999999999997}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "21"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.linear.Arrays.Weights\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 21}, {
            Style["name", Bold], ".Nodes.linear.Arrays.Weights"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-5., 3.061616997868383*^-16}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "22"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.linear.Arrays.Biases\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 22}, {
            Style["name", Bold], ".Nodes.linear.Arrays.Biases"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          GrayLevel[0], 
          PointBox[{-4., -0.9999999999999998}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "23"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.linear\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], 
             "\"FullyConnected\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             TagBox[
              GridBox[{{
                 StyleBox["\"no_bias\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"False\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"num_hidden\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"512\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               AutoDelete -> False, 
               GridBoxDividers -> {
                "Columns" -> {False, {True}, False}, 
                 "Rows" -> {False, {True}, False}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               FrameStyle -> GrayLevel[0.85]], "Grid"]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"20", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"21", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"22", ",", "0", ",", "0"}], "}"}]}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 23}, {
            Style["name", Bold], ".Nodes.linear"}, {
            Style["op", Bold], "FullyConnected"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Grid[{{
               Style["no_bias", Bold], 
               Style["False", ShowStringCharacters -> True]}, {
               Style["num_hidden", Bold], 
               Style["512", ShowStringCharacters -> True]}}, Alignment -> 
             Left, Spacings -> {1.1, 0.5}, Dividers -> Center, FrameStyle -> 
             GrayLevel[0.85]]}, {
            Style["inputs", Bold], {{20, 0, 0}, {21, 0, 0}, {22, 0, 0}}}}, 
          Alignment -> Left, BaseStyle -> {FontFamily -> "Source Code Pro"}, 
          Dividers -> All, FrameStyle -> GrayLevel[0.85], 
          Alignment -> {Left, Baseline}, Spacings -> {1.1, 0.5}, 
          ItemSize -> {Automatic, 1.4}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-4., -2.9999999999999996`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "24"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.linear2.Arrays.Weights\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 24}, {
            Style["name", Bold], ".Nodes.linear2.Arrays.Weights"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-4., -1.9999999999999998`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "25"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.linear2.Arrays.Biases\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 25}, {
            Style["name", Bold], ".Nodes.linear2.Arrays.Biases"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          GrayLevel[0], 
          PointBox[{-3., -1.9999999999999998`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "26"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.linear2\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], 
             "\"FullyConnected\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             TagBox[
              GridBox[{{
                 StyleBox["\"no_bias\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"False\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"num_hidden\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"4\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               AutoDelete -> False, 
               GridBoxDividers -> {
                "Columns" -> {False, {True}, False}, 
                 "Rows" -> {False, {True}, False}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               FrameStyle -> GrayLevel[0.85]], "Grid"]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"23", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"24", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"25", ",", "0", ",", "0"}], "}"}]}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 26}, {
            Style["name", Bold], ".Nodes.linear2"}, {
            Style["op", Bold], "FullyConnected"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Grid[{{
               Style["no_bias", Bold], 
               Style["False", ShowStringCharacters -> True]}, {
               Style["num_hidden", Bold], 
               Style["4", ShowStringCharacters -> True]}}, Alignment -> Left, 
             Spacings -> {1.1, 0.5}, Dividers -> Center, FrameStyle -> 
             GrayLevel[0.85]]}, {
            Style["inputs", Bold], {{23, 0, 0}, {24, 0, 0}, {25, 0, 0}}}}, 
          Alignment -> Left, BaseStyle -> {FontFamily -> "Source Code Pro"}, 
          Dividers -> All, FrameStyle -> GrayLevel[0.85], 
          Alignment -> {Left, Baseline}, Spacings -> {1.1, 0.5}, 
          ItemSize -> {Automatic, 1.4}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.06, 1, 0.69], 
          PointBox[{-2., -1.9999999999999998`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "27"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.softmax$0\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"softmax\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             TagBox[
              GridBox[{{
                 StyleBox["\"axis\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"1\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               AutoDelete -> False, 
               GridBoxDividers -> {
                "Columns" -> {False, {True}, False}, 
                 "Rows" -> {False, {True}, False}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               FrameStyle -> GrayLevel[0.85]], "Grid"]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"26", ",", "0", ",", "0"}], "}"}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 27}, {
            Style["name", Bold], ".Nodes.softmax$0"}, {
            Style["op", Bold], "softmax"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Grid[{{
               Style["axis", Bold], 
               Style["1", ShowStringCharacters -> True]}}, Alignment -> Left, 
             Spacings -> {1.1, 0.5}, Dividers -> Center, FrameStyle -> 
             GrayLevel[0.85]]}, {
            Style["inputs", Bold], {{26, 0, 0}}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.11, 1, 0.75], 
          PointBox[{-1.0000000000000002`, -2.}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "28"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Outputs.Output\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"_copy\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"27", ",", "0", ",", "0"}], "}"}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 28}, {
            Style["name", Bold], ".Outputs.Output"}, {
            Style["op", Bold], "_copy"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {{27, 0, 0}}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-1.2246467991473532`*^-16, -2.}]}, "Null"], 
        Annotation[#, Null, "Tooltip"]& ]}}, 
     StyleBox[{{{
         InsetBox[
          FormBox["0", TraditionalForm], 
          Offset[{0, 5}, {-13., 7.960204194457795*^-16}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 5}, {-13., 1.0000000000000009`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, 5}, {-13., 2.000000000000001}], {0., -0.17}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["3", TraditionalForm], 
          Offset[{0, 6}, {-12., 1.0000000000000007`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          Offset[{0, 5}, {-12., -2.999999999999999}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["5", TraditionalForm], 
          Offset[{0, 5}, {-12., -1.9999999999999993`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          Offset[{0, 5}, {-12., -0.9999999999999992}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["7", TraditionalForm], 
          Offset[{0, 5}, {-12., 7.347880794884119*^-16}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["8", TraditionalForm], 
          Offset[{0, 6}, {-11., -0.9999999999999993}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["9", TraditionalForm], 
          Offset[{0, 6}, {-10., -0.9999999999999993}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["10", TraditionalForm], 
          Offset[{0, 5}, {-10., 6.123233995736766*^-16}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["11", TraditionalForm], 
          Offset[{0, 5}, {-10., 1.0000000000000007`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["12", TraditionalForm], 
          Offset[{0, 6}, {-9., 5.51091059616309*^-16}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["13", TraditionalForm], 
          Offset[{0, 5}, {-9., -3.9999999999999996`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["14", TraditionalForm], 
          Offset[{0, 5}, {-9., -2.9999999999999996`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["15", TraditionalForm], 
          Offset[{0, 5}, {-9., -1.9999999999999996`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["16", TraditionalForm], 
          Offset[{0, 5}, {-9., -0.9999999999999994}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["17", TraditionalForm], 
          Offset[{0, 6}, {-8., -1.9999999999999996`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["18", TraditionalForm], 
          Offset[{0, 6}, {-7., -1.9999999999999996`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["19", TraditionalForm], 
          Offset[{0, 6}, {-6., -1.9999999999999996`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["20", TraditionalForm], 
          Offset[{0, 6}, {-5., -1.9999999999999998`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["21", TraditionalForm], 
          Offset[{0, 5}, {-5., -0.9999999999999997}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["22", TraditionalForm], 
          Offset[{0, 5}, {-5., 3.061616997868383*^-16}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["23", TraditionalForm], 
          Offset[{0, 6}, {-4., -0.9999999999999998}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["24", TraditionalForm], 
          Offset[{0, 5}, {-4., -2.9999999999999996`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["25", TraditionalForm], 
          Offset[{0, 5}, {-4., -1.9999999999999998`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["26", TraditionalForm], 
          Offset[{0, 6}, {-3., -1.9999999999999998`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["27", TraditionalForm], 
          Offset[{0, 6}, {-2., -1.9999999999999998`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["28", TraditionalForm], 
          Offset[{0, 6}, {-1.0000000000000002`, -2.}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, 5}, {-1.2246467991473532`*^-16, -2.}], {0., -0.17}, 
          Automatic, {1, 0}]}, {
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-13., 7.960204194457795*^-16}], {0, 1.}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-13., 1.0000000000000009`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-13., 2.000000000000001}], {0, 1.}, Automatic, {1, 
          0}], 
         InsetBox[
          FormBox["\"C\"", TraditionalForm], 
          Offset[{0, -6}, {-12., 1.0000000000000007`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-12., -2.999999999999999}], {0, 1.}, Automatic, {1,
           0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-12., -1.9999999999999993`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-12., -0.9999999999999992}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-12., 7.347880794884119*^-16}], {0, 1.}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["\"BN\"", TraditionalForm], 
          Offset[{0, -6}, {-11., -0.9999999999999993}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"r\"", TraditionalForm], 
          Offset[{0, -6}, {-10., -0.9999999999999993}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-10., 6.123233995736766*^-16}], {0, 1.}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-10., 1.0000000000000007`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"C\"", TraditionalForm], 
          Offset[{0, -6}, {-9., 5.51091059616309*^-16}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-9., -3.9999999999999996`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-9., -2.9999999999999996`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-9., -1.9999999999999996`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-9., -0.9999999999999994}], {0, 1.}, Automatic, {1,
           0}], 
         InsetBox[
          FormBox["\"BN\"", TraditionalForm], 
          Offset[{0, -6}, {-8., -1.9999999999999996`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"r\"", TraditionalForm], 
          Offset[{0, -6}, {-7., -1.9999999999999996`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"P\"", TraditionalForm], 
          Offset[{0, -6}, {-6., -1.9999999999999996`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"F\"", TraditionalForm], 
          Offset[{0, -6}, {-5., -1.9999999999999998`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-5., -0.9999999999999997}], {0, 1.}, Automatic, {1,
           0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-5., 3.061616997868383*^-16}], {0, 1.}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["\"FC\"", TraditionalForm], 
          Offset[{0, -6}, {-4., -0.9999999999999998}], {0, 1.}, Automatic, {1,
           0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-4., -2.9999999999999996`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-4., -1.9999999999999998`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"FC\"", TraditionalForm], 
          Offset[{0, -6}, {-3., -1.9999999999999998`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"s\"", TraditionalForm], 
          Offset[{0, -6}, {-2., -1.9999999999999998`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"c\"", TraditionalForm], 
          Offset[{0, -6}, {-1.0000000000000002`, -2.}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-1.2246467991473532`*^-16, -2.}], {0, 1.}, 
          Automatic, {1, 0}]}}}, FontSize -> 7, StripOnInput -> False]}, 
    ImageSize -> {485., 235.85}, AspectRatio -> Full, PlotRangePadding -> 0, 
    ImagePadding -> {{23.99999999999998, 6}, {14.999999999999993`, 
      10.850000000000001`}}, ImageMargins -> 0, 
    BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Tensor\"", "\"Convolution\"", "\"BatchNorm\"", "\"relu\"", 
       "\"Pooling\"", "\"Flatten\"", "\"FullyConnected\"", "\"softmax\"", 
       "\"_copy\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TemplateBox[{
                 GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    AbsolutePointSize[4]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    AbsolutePointSize[4]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                  ImageSize -> {12, 12}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], "\" \"", #}, "RowDefault"], 
               TemplateBox[{
                 GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.11, 1, 0.75], 
                    AbsolutePointSize[6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.11, 1, 0.75], 
                    AbsolutePointSize[6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                  ImageSize -> {12, 12}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], "\" \"", #3}, "RowDefault"], 
               TemplateBox[{
                 GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.5, 0.67, 0.6], 
                    AbsolutePointSize[6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.5, 0.67, 0.6], 
                    AbsolutePointSize[6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                  ImageSize -> {12, 12}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], "\" \"", #5}, "RowDefault"], 
               TemplateBox[{
                 GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    AbsolutePointSize[6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    AbsolutePointSize[6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                  ImageSize -> {12, 12}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], "\" \"", #7}, "RowDefault"], 
               TemplateBox[{
                 GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.11, 1, 0.75], 
                    AbsolutePointSize[6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.11, 1, 0.75], 
                    AbsolutePointSize[6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                  ImageSize -> {12, 12}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], "\" \"", #9}, "RowDefault"]}, {
               TemplateBox[{
                 GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.5, 0.5, 0.5], 
                    AbsolutePointSize[6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.5, 0.5, 0.5], 
                    AbsolutePointSize[6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                  ImageSize -> {12, 12}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], "\" \"", #2}, "RowDefault"], 
               TemplateBox[{
                 GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.08, 1, 0.92], 
                    AbsolutePointSize[6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.08, 1, 0.92], 
                    AbsolutePointSize[6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                  ImageSize -> {12, 12}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], "\" \"", #4}, "RowDefault"], 
               TemplateBox[{
                 GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.08, 1, 0.7], 
                    AbsolutePointSize[6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.08, 1, 0.7], 
                    AbsolutePointSize[6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                  ImageSize -> {12, 12}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], "\" \"", #6}, "RowDefault"], 
               TemplateBox[{
                 GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.06, 1, 0.69], 
                    AbsolutePointSize[6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.06, 1, 0.69], 
                    AbsolutePointSize[6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                  ImageSize -> {12, 12}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], "\" \"", #8}, "RowDefault"], "\"\""}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{2, 2}, {2, 2}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 8, FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"AbsolutePointSize", "[", "4", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.5, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> Hue[0.5, 0.5, 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"Hue", "[", 
                    RowBox[{"0.5`", ",", "0.5`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.5, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.5, 0.5, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.11, 1, 0.75], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> Hue[0.11, 1., 0.5], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"Hue", "[", 
                    RowBox[{"0.11`", ",", "1", ",", "0.75`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.11, 1, 0.75]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.11, 1, 0.75], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.08, 1, 0.92], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    Hue[0.07999999999999999, 1., 0.6133333333333334], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"Hue", "[", 
                    RowBox[{"0.08`", ",", "1", ",", "0.92`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.08, 1, 0.92]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.08, 1, 0.92], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.5, 0.67, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> Hue[0.5, 0.67, 0.4], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"Hue", "[", 
                    RowBox[{"0.5`", ",", "0.67`", ",", "0.6`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.5, 0.67, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.5, 0.67, 0.6], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.08, 1, 0.7], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    Hue[0.07999999999999999, 1., 0.4666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"Hue", "[", 
                    RowBox[{"0.08`", ",", "1", ",", "0.7`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.08, 1, 0.7]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.08, 1, 0.7], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.06, 1, 0.69], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    Hue[0.060000000000000005`, 1., 0.45999999999999996`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"Hue", "[", 
                    RowBox[{"0.06`", ",", "1", ",", "0.69`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.06, 1, 0.69]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.06, 1, 0.69], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.11, 1, 0.75], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> Hue[0.11, 1., 0.5], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"Hue", "[", 
                    RowBox[{"0.11`", ",", "1", ",", "0.75`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.11, 1, 0.75]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.11, 1, 0.75], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", "8"}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "12"}], ",", 
           RowBox[{"LegendMargins", "\[Rule]", "2"}], ",", 
           
           RowBox[{"LegendLayout", "\[Rule]", 
             "GeneralUtilities`Graphics`PackagePrivate`legendTable"}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7732950226887836`*^9, 3.773325548812977*^9, 
  3.774171029827063*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"36ab19a5-4af1-4e46-82f8-8d3dc97b196e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetInformation", "[", 
  RowBox[{"netECA13", ",", "\"\<SummaryGraphic\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.773215196636877*^9, 3.773215205530636*^9}, {
  3.773325524392873*^9, 3.773325525132712*^9}, {3.774171033412961*^9, 
  3.774171033653467*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"86390fb2-f64a-4ff2-832c-ac72d4e204b7"],

Cell[BoxData[
 GraphicsBox[{
   {GrayLevel[0.7], 
    LineBox[{{-13., 7.960204194457795*^-16}, {-12., 7.347880794884119*^-16}}],
     LineBox[{{-12., 7.347880794884119*^-16}, {-11., 
     6.735557395310443*^-16}}], 
    LineBox[{{-11., 6.735557395310443*^-16}, {-10., 6.123233995736766*^-16}}],
     LineBox[{{-10., 6.123233995736766*^-16}, {-9., 5.51091059616309*^-16}}], 
    LineBox[{{-9., 5.51091059616309*^-16}, {-8., 4.898587196589413*^-16}}], 
    LineBox[{{-8., 4.898587196589413*^-16}, {-7., 4.286263797015736*^-16}}], 
    LineBox[{{-7., 4.286263797015736*^-16}, {-6., 3.6739403974420594`*^-16}}],
     LineBox[{{-6., 3.6739403974420594`*^-16}, {-5., 
     3.061616997868383*^-16}}], 
    LineBox[{{-5., 3.061616997868383*^-16}, {-4., 2.4492935982947064`*^-16}}],
     LineBox[{{-4., 2.4492935982947064`*^-16}, {-3., 
     1.8369701987210297`*^-16}}], 
    LineBox[{{-3., 1.8369701987210297`*^-16}, {-2., 
     1.2246467991473532`*^-16}}], 
    LineBox[{{-2., 1.2246467991473532`*^-16}, {-1., 6.123233995736766*^-17}}],
     LineBox[{{-1., 6.123233995736766*^-17}, {0., 0.}}]}, {InsetBox[
     GraphicsBox[
      {GrayLevel[0.7], 
       PolygonBox[{{-1., 0.3333333333333333}, {0., 
        0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
        0.3333333333333333}}]}], \
{-12.399999999999999, 7.59281015471359*^-16}, {-0.25, 0}, Offset[8], {
     1., -6.123233995736767*^-17}], InsetBox[
     GraphicsBox[
      {GrayLevel[0.7], 
       PolygonBox[{{-1., 0.3333333333333333}, {0., 
        0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
        0.3333333333333333}}]}], {-11.4, 6.980486755139913*^-16}, {-0.25, 0}, 
     Offset[8], {1., -6.123233995736757*^-17}], InsetBox[
     GraphicsBox[
      {GrayLevel[0.7], 
       PolygonBox[{{-1., 0.3333333333333333}, {0., 
        0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
        0.3333333333333333}}]}], {-10.4, 6.368163355566237*^-16}, {-0.25, 0}, 
     Offset[8], {1., -6.123233995736767*^-17}], InsetBox[
     GraphicsBox[
      {GrayLevel[0.7], 
       PolygonBox[{{-1., 0.3333333333333333}, {0., 
        0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
        0.3333333333333333}}]}], \
{-9.399999999999999, 5.755839955992561*^-16}, {-0.25, 0}, Offset[8], {
     1., -6.123233995736767*^-17}], InsetBox[
     GraphicsBox[
      {GrayLevel[0.7], 
       PolygonBox[{{-1., 0.3333333333333333}, {0., 
        0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
        0.3333333333333333}}]}], {-8.4, 5.143516556418883*^-16}, {-0.25, 0}, 
     Offset[8], {1., -6.123233995736767*^-17}], InsetBox[
     GraphicsBox[
      {GrayLevel[0.7], 
       PolygonBox[{{-1., 0.3333333333333333}, {0., 
        0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
        0.3333333333333333}}]}], {-7.4, 4.531193156845207*^-16}, {-0.25, 0}, 
     Offset[8], {1., -6.123233995736767*^-17}], InsetBox[
     GraphicsBox[
      {GrayLevel[0.7], 
       PolygonBox[{{-1., 0.3333333333333333}, {0., 
        0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
        0.3333333333333333}}]}], {-6.4, 3.9188697572715305*^-16}, {-0.25, 0}, 
     Offset[8], {1., -6.123233995736767*^-17}], InsetBox[
     GraphicsBox[
      {GrayLevel[0.7], 
       PolygonBox[{{-1., 0.3333333333333333}, {0., 
        0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
        0.3333333333333333}}]}], {-5.4, 3.3065463576978537*^-16}, {-0.25, 0}, 
     Offset[8], {1., -6.123233995736762*^-17}], InsetBox[
     GraphicsBox[
      {GrayLevel[0.7], 
       PolygonBox[{{-1., 0.3333333333333333}, {0., 
        0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
        0.3333333333333333}}]}], {-4.4, 2.694222958124177*^-16}, {-0.25, 0}, 
     Offset[8], {1., -6.123233995736767*^-17}], InsetBox[
     GraphicsBox[
      {GrayLevel[0.7], 
       PolygonBox[{{-1., 0.3333333333333333}, {0., 
        0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
        0.3333333333333333}}]}], {-3.4, 2.0818995585505003*^-16}, {-0.25, 0}, 
     Offset[8], {1., -6.123233995736767*^-17}], InsetBox[
     GraphicsBox[
      {GrayLevel[0.7], 
       PolygonBox[{{-1., 0.3333333333333333}, {0., 
        0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
        0.3333333333333333}}]}], \
{-2.4000000000000004, 1.4695761589768238*^-16}, {-0.25, 0}, Offset[8], {
     1., -6.123233995736765*^-17}], InsetBox[
     GraphicsBox[
      {GrayLevel[0.7], 
       PolygonBox[{{-1., 0.3333333333333333}, {0., 
        0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
        0.3333333333333333}}]}], {-1.4, 8.572527594031473*^-17}, {-0.25, 0}, 
     Offset[8], {1., -6.123233995736766*^-17}], InsetBox[
     GraphicsBox[
      {GrayLevel[0.7], 
       PolygonBox[{{-1., 0.3333333333333333}, {0., 
        0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
        0.3333333333333333}}]}], {-0.4, 2.4492935982947065*^-17}, {-0.25, 0}, 
     Offset[8], {1., -6.123233995736766*^-17}]}, 
   {EdgeForm[AbsoluteThickness[1]], 
    StyleBox[{
      {GrayLevel[0.85], EdgeForm[GrayLevel[0.5]], 
       DiskBox[{-13., 7.960204194457795*^-16}, 
        Offset[{2., 2.}, {0., 0.}]]}, {
       {EdgeForm[GrayLevel[0.7]], FaceForm[RGBColor[
        0.7999999999999999, 0.7999999999999999, 0.7999999999999999]], 
        RectangleBox[Offset[{-10, -10}, {-12., 7.347880794884119*^-16}], 
         Offset[{10, 10}, {-12., 7.347880794884119*^-16}]]}, InsetBox[
        PaneBox[
         StyleBox["\<\"\:2217\"\>",
          StripOnInput->False,
          FontSize->20],
         ImageSize->{11, 28}], {-12., 7.347880794884119*^-16}]}, {
       {EdgeForm[GrayLevel[0.7]], FaceForm[RGBColor[
        0.7999999999999999, 0.7999999999999999, 0.7999999999999999]], 
        RectangleBox[Offset[{-10, -10}, {-11., 6.735557395310443*^-16}], 
         Offset[{10, 10}, {-11., 6.735557395310443*^-16}]]}, 
       InsetBox["\<\"BN\"\>", 
        Offset[{0, -1}, {-11., 6.735557395310443*^-16}]]}, {
       {EdgeForm[GrayLevel[0.85]], FaceForm[RGBColor[0.9, 0.9, 0.9]], 
        RectangleBox[Offset[{-10, -10}, {-10., 6.123233995736766*^-16}], 
         Offset[{10, 10}, {-10., 6.123233995736766*^-16}]]}, InsetBox[
        FormBox[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
            "], {{0, 
            25}, {40, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag[
           "Byte", ColorSpace -> "RGB", ImageResolution -> 144, Interleaving -> 
            True, Magnification -> Automatic],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->20,
          ImageSizeRaw->{40, 25},
          PlotRange->{{0, 40}, {0, 25}}],
         TraditionalForm], {-10., 6.123233995736766*^-16}]}, {
       {EdgeForm[GrayLevel[0.7]], FaceForm[RGBColor[
        0.7999999999999999, 0.7999999999999999, 0.7999999999999999]], 
        RectangleBox[Offset[{-10, -10}, {-9., 5.51091059616309*^-16}], 
         Offset[{10, 10}, {-9., 5.51091059616309*^-16}]]}, InsetBox[
        PaneBox[
         StyleBox["\<\"\:2217\"\>",
          StripOnInput->False,
          FontSize->20],
         ImageSize->{11, 28}], {-9., 5.51091059616309*^-16}]}, {
       {EdgeForm[GrayLevel[0.7]], FaceForm[RGBColor[
        0.7999999999999999, 0.7999999999999999, 0.7999999999999999]], 
        RectangleBox[Offset[{-10, -10}, {-8., 4.898587196589413*^-16}], 
         Offset[{10, 10}, {-8., 4.898587196589413*^-16}]]}, 
       InsetBox["\<\"BN\"\>", 
        Offset[{0, -1}, {-8., 4.898587196589413*^-16}]]}, {
       {EdgeForm[GrayLevel[0.85]], FaceForm[RGBColor[0.9, 0.9, 0.9]], 
        RectangleBox[Offset[{-10, -10}, {-7., 4.286263797015736*^-16}], 
         Offset[{10, 10}, {-7., 4.286263797015736*^-16}]]}, InsetBox[
        FormBox[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
            "], {{0, 
            25}, {40, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag[
           "Byte", ColorSpace -> "RGB", ImageResolution -> 144, Interleaving -> 
            True, Magnification -> Automatic],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->20,
          ImageSizeRaw->{40, 25},
          PlotRange->{{0, 40}, {0, 25}}],
         TraditionalForm], {-7., 4.286263797015736*^-16}]}, {
       {EdgeForm[GrayLevel[0.85]], FaceForm[RGBColor[0.9, 0.9, 0.9]], 
        RectangleBox[Offset[{-10, -10}, {-6., 3.6739403974420594*^-16}], 
         Offset[{10, 10}, {-6., 3.6739403974420594*^-16}]]}, 
       InsetBox["\<\"P\"\>", 
        Offset[{0, -1}, {-6., 3.6739403974420594*^-16}]]}, {
       {EdgeForm[GrayLevel[0.85]], FaceForm[RGBColor[0.9, 0.9, 0.9]], 
        RectangleBox[Offset[{-10, -10}, {-5., 3.061616997868383*^-16}], 
         Offset[{10, 10}, {-5., 3.061616997868383*^-16}]]}, 
       InsetBox["\<\"F\"\>", 
        Offset[{0, -1}, {-5., 3.061616997868383*^-16}]]}, {
       {EdgeForm[GrayLevel[0.7]], FaceForm[RGBColor[
        0.7999999999999999, 0.7999999999999999, 0.7999999999999999]], 
        RectangleBox[Offset[{-10, -10}, {-4., 2.4492935982947064*^-16}], 
         Offset[{10, 10}, {-4., 2.4492935982947064*^-16}]]}, InsetBox[
        GraphicsBox[
         GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {1.3, 1}, {
           0.9, 0}}, {
           {Opacity[0.2], 
            LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 4}}]}, 
           {RGBColor[0.33, 0.33, 0.33], AbsolutePointSize[3.5], 
            PointBox[{1, 5, 2, 3, 4}]}}],
         ImageSize->18], {-4., 2.4492935982947064*^-16}]}, {
       {EdgeForm[GrayLevel[0.85]], FaceForm[RGBColor[0.9, 0.9, 0.9]], 
        RectangleBox[Offset[{-10, -10}, {-3., 1.8369701987210297*^-16}], 
         Offset[{10, 10}, {-3., 1.8369701987210297*^-16}]]}, 
       InsetBox["\<\"D\"\>", 
        Offset[{0, -1}, {-3., 1.8369701987210297*^-16}]]}, {
       {EdgeForm[GrayLevel[0.7]], FaceForm[RGBColor[
        0.7999999999999999, 0.7999999999999999, 0.7999999999999999]], 
        RectangleBox[Offset[{-10, -10}, {-2., 1.2246467991473532*^-16}], 
         Offset[{10, 10}, {-2., 1.2246467991473532*^-16}]]}, InsetBox[
        GraphicsBox[
         GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {1.3, 1}, {
           0.9, 0}}, {
           {Opacity[0.2], 
            LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 4}}]}, 
           {RGBColor[0.33, 0.33, 0.33], AbsolutePointSize[3.5], 
            PointBox[{1, 5, 2, 3, 4}]}}],
         ImageSize->18], {-2., 1.2246467991473532*^-16}]}, {
       {EdgeForm[GrayLevel[0.85]], FaceForm[RGBColor[0.9, 0.9, 0.9]], 
        RectangleBox[Offset[{-10, -10}, {-1., 6.123233995736766*^-17}], 
         Offset[{10, 10}, {-1., 6.123233995736766*^-17}]]}, 
       InsetBox["\<\"S\"\>", Offset[{0, -1}, {-1., 6.123233995736766*^-17}]]}, 
      {GrayLevel[0.85], EdgeForm[GrayLevel[0.5]], 
       DiskBox[{0., 0.}, Offset[{2., 2.}, {0., 0.}]]}},
     FontSize->10]}, {
    StyleBox[{
      InsetBox["\<\"Input\"\>", 
       Offset[{0, -7}, {-13., 7.960204194457795*^-16}], {0, 1.}, Automatic, {
       1, 0}], InsetBox["\<\"conv1\"\>", 
       Offset[{0, -13}, {-12., 7.347880794884119*^-16}], {0, 1.}, Automatic, {
       1, 0}], InsetBox["\<\"bat1\"\>", 
       Offset[{0, -13}, {-11., 6.735557395310443*^-16}], {0, 1.}, Automatic, {
       1, 0}], InsetBox["\<\"ramp1\"\>", 
       Offset[{0, -13}, {-10., 6.123233995736766*^-16}], {0, 1.}, Automatic, {
       1, 0}], InsetBox["\<\"conv3\"\>", 
       Offset[{0, -13}, {-9., 5.51091059616309*^-16}], {0, 1.}, Automatic, {1,
        0}], InsetBox["\<\"bat2\"\>", 
       Offset[{0, -13}, {-8., 4.898587196589413*^-16}], {0, 1.}, Automatic, {
       1, 0}], InsetBox["\<\"ramp2\"\>", 
       Offset[{0, -13}, {-7., 4.286263797015736*^-16}], {0, 1.}, Automatic, {
       1, 0}], InsetBox["\<\"pooling\"\>", 
       Offset[{0, -13}, {-6., 3.6739403974420594*^-16}], {0, 1.}, Automatic, {
       1, 0}], InsetBox["\<\"flatten\"\>", 
       Offset[{0, -13}, {-5., 3.061616997868383*^-16}], {0, 1.}, Automatic, {
       1, 0}], InsetBox["\<\"linear\"\>", 
       Offset[{0, -13}, {-4., 2.4492935982947064*^-16}], {0, 1.}, Automatic, {
       1, 0}], InsetBox["\<\"drop2\"\>", 
       Offset[{0, -13}, {-3., 1.8369701987210297*^-16}], {0, 1.}, Automatic, {
       1, 0}], InsetBox["\<\"linear2\"\>", 
       Offset[{0, -13}, {-2., 1.2246467991473532*^-16}], {0, 1.}, Automatic, {
       1, 0}], InsetBox["\<\"softmax\"\>", 
       Offset[{0, -13}, {-1., 6.123233995736766*^-17}], {0, 1.}, Automatic, {
       1, 0}], InsetBox["\<\"Output\"\>", Offset[{0, -7}, {0., 0.}], {0, 1.}, 
       Automatic, {1, 0}]},
     StripOnInput->False,
     FontColor->GrayLevel[0.5]], 
    StyleBox[{InsetBox[
       TemplateBox[{"\[Cross]","\"\[Cross]\"","\"3\"","\"128\"","\"128\""},
        "RowWithSeparators"], 
       Offset[{3.367778697655222*^-16, 5.5}, \
{-12.399999999999999, 7.59281015471359*^-16}], {0., -0.17}, Automatic, {
       1., -6.123233995736767*^-17}], InsetBox[
       TemplateBox[{"\[Cross]","\"\[Cross]\"","\"24\"","\"126\"","\"126\""},
        "RowWithSeparators"], 
       Offset[{3.3677786976552166*^-16, 5.5}, \
{-11.4, 6.980486755139913*^-16}], {0., -0.17}, Automatic, {
       1., -6.123233995736757*^-17}], InsetBox[
       TemplateBox[{"\[Cross]","\"\[Cross]\"","\"24\"","\"126\"","\"126\""},
        "RowWithSeparators"], 
       Offset[{3.367778697655222*^-16, 5.5}, \
{-10.4, 6.368163355566237*^-16}], {0., -0.17}, Automatic, {
       1., -6.123233995736767*^-17}], InsetBox[
       TemplateBox[{"\[Cross]","\"\[Cross]\"","\"24\"","\"126\"","\"126\""},
        "RowWithSeparators"], 
       Offset[{3.367778697655222*^-16, 5.5}, \
{-9.399999999999999, 5.755839955992561*^-16}], {0., -0.17}, Automatic, {
       1., -6.123233995736767*^-17}], InsetBox[
       TemplateBox[{"\[Cross]","\"\[Cross]\"","\"24\"","\"124\"","\"124\""},
        "RowWithSeparators"], 
       Offset[{3.367778697655222*^-16, 5.5}, {-8.4, 5.143516556418883*^-16}], \
{0., -0.17}, Automatic, {1., -6.123233995736767*^-17}], InsetBox[
       TemplateBox[{"\[Cross]","\"\[Cross]\"","\"24\"","\"124\"","\"124\""},
        "RowWithSeparators"], 
       Offset[{3.367778697655222*^-16, 5.5}, {-7.4, 4.531193156845207*^-16}], \
{0., -0.17}, Automatic, {1., -6.123233995736767*^-17}], InsetBox[
       TemplateBox[{"\[Cross]","\"\[Cross]\"","\"24\"","\"124\"","\"124\""},
        "RowWithSeparators"], 
       Offset[{3.367778697655222*^-16, 5.5}, \
{-6.4, 3.9188697572715305*^-16}], {0., -0.17}, Automatic, {
       1., -6.123233995736767*^-17}], InsetBox[
       TemplateBox[{"\[Cross]","\"\[Cross]\"","\"24\"","\"1\"","\"5\""},
        "RowWithSeparators"], 
       Offset[{3.3677786976552195*^-16, 5.5}, \
{-5.4, 3.3065463576978537*^-16}], {0., -0.17}, Automatic, {
       1., -6.123233995736762*^-17}], InsetBox[
       TemplateBox[{"\[Cross]","\"\[Cross]\"","\"120\""},
        "RowWithSeparators"], 
       Offset[{3.367778697655222*^-16, 5.5}, {-4.4, 2.694222958124177*^-16}], \
{0., -0.17}, Automatic, {1., -6.123233995736767*^-17}], InsetBox[
       TemplateBox[{"\[Cross]","\"\[Cross]\"","\"512\""},
        "RowWithSeparators"], 
       Offset[{3.367778697655222*^-16, 5.5}, \
{-3.4, 2.0818995585505003*^-16}], {0., -0.17}, Automatic, {
       1., -6.123233995736767*^-17}], InsetBox[
       TemplateBox[{"\[Cross]","\"\[Cross]\"","\"512\""},
        "RowWithSeparators"], 
       Offset[{3.3677786976552205*^-16, 5.5}, \
{-2.4000000000000004, 1.4695761589768238*^-16}], {0., -0.17}, Automatic, {
       1., -6.123233995736765*^-17}], InsetBox[
       TemplateBox[{"\[Cross]","\"\[Cross]\"","\"4\""},
        "RowWithSeparators"], 
       Offset[{3.3677786976552215*^-16, 5.5}, \
{-1.4, 8.572527594031473*^-17}], {0., -0.17}, Automatic, {
       1., -6.123233995736766*^-17}], InsetBox[
       TemplateBox[{"\[Cross]","\"\[Cross]\"","\"4\""},
        "RowWithSeparators"], 
       Offset[{3.3677786976552215*^-16, 5.5}, \
{-0.4, 2.4492935982947065*^-17}], {0., -0.17}, Automatic, {
       1., -6.123233995736766*^-17}]},
     StripOnInput->False,
     FontSize->8,
     FontWeight->"Thin",
     FontColor->GrayLevel[0.7]]}},
  AspectRatio->Full,
  BaseStyle->{TooltipBoxOptions -> {TooltipDelay -> 0.08}},
  ImageMargins->{{0, 0}, {0, 0}},
  ImagePadding->{{24., 26.5}, {26.999999999999996`, 14.}},
  ImageSize->{765.5, 41.00000000000004},
  PlotRangePadding->0]], "Output",
 CellChangeTimes->{3.773295025958229*^9, 3.773325621222777*^9, 
  3.774171034296094*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"9179a728-a9a8-4780-9e63-00a78be8b8e3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataECA13", "=", 
   RowBox[{"dataC", "[", 
    RowBox[{"128", ",", "128", ",", "8192"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.772355752786458*^9, 3.772355821872775*^9}, {
  3.772690743490674*^9, 3.7726907773276663`*^9}, {3.772693549217153*^9, 
  3.772693583566229*^9}, {3.77312988440252*^9, 3.7731298847595797`*^9}, {
  3.7732152150950327`*^9, 3.773215215437931*^9}, {3.7732950325697002`*^9, 
  3.773295032668089*^9}, {3.7741710812201223`*^9, 3.774171081293769*^9}, {
  3.774171112241376*^9, 3.774171114625349*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"56aabf8b-2a78-4e43-80e8-8fef4f8b5dea"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataTotalistic2BigC13", "=", 
   RowBox[{"genData2r2C", "[", 
    RowBox[{"128", ",", "128", ",", "1024"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.772355752786458*^9, 3.772355821872775*^9}, {
   3.772690743490674*^9, 3.7726907773276663`*^9}, {3.772693549217153*^9, 
   3.772693588670415*^9}, {3.7731298879079638`*^9, 3.773129888266445*^9}, {
   3.77321521750358*^9, 3.773215217885929*^9}, {3.773215262293749*^9, 
   3.773215271744378*^9}, {3.7732950346821947`*^9, 3.7732950347840853`*^9}, {
   3.7741710833169518`*^9, 3.7741710834211483`*^9}, 3.774171123101664*^9},
 CellLabel->
  "In[115]:=",ExpressionUUID->"dfc030ba-235b-404f-8e5f-731ba8e231bd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataTotalistic3BigC13", "=", 
   RowBox[{"data3T2C", "[", 
    RowBox[{"128", ",", "128", ",", "1024"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.772355752786458*^9, 3.772355821872775*^9}, {
   3.772690743490674*^9, 3.7726907773276663`*^9}, {3.772693549217153*^9, 
   3.77269359306248*^9}, {3.773129890386211*^9, 3.773129891320112*^9}, {
   3.7732152196732883`*^9, 3.7732152200277443`*^9}, {3.773295036430442*^9, 
   3.7732950365479527`*^9}, {3.774171084960733*^9, 3.774171085057392*^9}, 
   3.774171127062512*^9},
 CellLabel->
  "In[116]:=",ExpressionUUID->"273100b7-f0fe-46f2-9a58-a7449cd5cddc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataTotalistic4BigC13", "=", 
   RowBox[{"data4TC", "[", 
    RowBox[{"128", ",", "128", ",", "1024"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.772355752786458*^9, 3.772355821872775*^9}, {
   3.772690743490674*^9, 3.7726907773276663`*^9}, {3.772693549217153*^9, 
   3.7726935982412777`*^9}, {3.7731298932839537`*^9, 3.773129893667457*^9}, {
   3.77321522172605*^9, 3.773215222093884*^9}, {3.7732950384695063`*^9, 
   3.7732950385858507`*^9}, {3.7741710868618593`*^9, 3.774171086932007*^9}, 
   3.7741711304700937`*^9},
 CellLabel->
  "In[117]:=",ExpressionUUID->"1660fba2-5efc-47f1-9bc4-79afcb914d11"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataTotalistic5BigC13", "=", 
   RowBox[{"genData5TCC", "[", 
    RowBox[{"128", ",", "128", ",", "4096"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.772355752786458*^9, 3.772355821872775*^9}, {
   3.772690743490674*^9, 3.7726907773276663`*^9}, {3.772693549217153*^9, 
   3.772693602628367*^9}, {3.7731298956689577`*^9, 3.773129896025247*^9}, {
   3.773215223612338*^9, 3.773215224001829*^9}, {3.7732950404115*^9, 
   3.773295040558866*^9}, {3.774171088543384*^9, 3.774171088609951*^9}, 
   3.774171133328553*^9},
 CellLabel->
  "In[118]:=",ExpressionUUID->"a0d931d4-dc63-4003-9a43-abc85e793cc0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fullTrainingBigC13", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
    "dataECA13", ",", "dataTotalistic2BigC13", ",", "dataTotalistic3BigC13", 
     ",", "dataTotalistic4BigC13", ",", "dataTotalistic5BigC13"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "fullTrainingBigC13", "]"}]}], "Input",
 CellChangeTimes->{{3.772355752786458*^9, 3.772355821872775*^9}, {
  3.772690743490674*^9, 3.7726907773276663`*^9}, {3.772693549217153*^9, 
  3.772693602628367*^9}, {3.773129897972353*^9, 3.77312991704902*^9}, {
  3.773215225791395*^9, 3.773215243291334*^9}, {3.773295042430605*^9, 
  3.773295058617936*^9}, {3.773329034384303*^9, 3.773329038122735*^9}, {
  3.774171090243143*^9, 3.774171104146511*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"47493625-dfa7-4c12-865a-480534475038"],

Cell[BoxData["26624"], "Output",
 CellChangeTimes->{3.774171796690967*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"0b4bae85-953e-47ea-8512-7d1769f71d36"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomSample", "[", 
  RowBox[{"fullTrainingBigC13", ",", "20"}], "]"}]], "Input",
 CellChangeTimes->{{3.772355752786458*^9, 3.772355821872775*^9}, {
  3.772690743490674*^9, 3.7726907773276663`*^9}, {3.772693549217153*^9, 
  3.772693602628367*^9}, {3.773129897972353*^9, 3.77312991704902*^9}, {
  3.773215225791395*^9, 3.773215243291334*^9}, {3.773295042430605*^9, 
  3.773295058617936*^9}, {3.773329034384303*^9, 3.773329038122735*^9}, {
  3.7741711060775537`*^9, 3.774171106157587*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"82f0bbd2-50da-4bea-88a3-5929536f4e2c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1kEqdQEcxuEbJSswlaGBCVO52QJDoyuMlGIgRVmAJUk2YE8o01tX55zX
W56nfP1IXIe+979zfnNytTabze42v/45Wdwf394uHk43vt+5XFwf7F+vf+Xz
z9t3f2w9zdcvn4/O3vbmy/riZXv+fv569Hi4u7SXff5YHx/Sq3yvVX72VV7b
kJ93imf+29c85FmN9XWGvM6pe8gzH+vvZ8jzH+v3/tvXP9bvdKzPn/p5jvX/
w9TPeQbAvzTFPmqtte7vv94fAP5GwwZprbV2/wOQ0bBBWmut3f8AZDRskNZa
a/c/ABkNG6S11tr9D0BGwwZprbV2/wOQ0bBBWmut3f8AZDRskNZaa/c/ABkN
G6S11tr9D0BGwwZprbV2/wOQ0bBBWmut3f8AZDRskNZaa/c/ABkNG6S11tr9
D0BGwwZprbV2/wOQ0bBBWmut3f8AZDRskNZaa/c/ABkNG6S11tr9D0BGwwZp
rbV2/wOQ0bBBWmut3f8AZDRskNZaa/c/ABkNG6S11tr9D0BGwwZprbV2/wOQ
0bBBWmut3f8AZDRskNZaa/c/ABkNG6S11tr9D0BGwwZprbV2/wOQ0bBBWmut
3f8AZDRskNZaa/c/ABkNG6S11tr9D0BGwwZprbV2/wOQ0bBBWmut3f8AZDRs
kNZaa/c/ABkNG6S11tr9D0BGwwZprbV2/wOQ0bBBWmut3f8AZDRskNZaa/c/
ABkNG6S11tr9D0BGwwZprbV2/wOQ0bBBWmut3f8AZDRskNZaa/c/ABkNG6S1
1tr9D0BGwwZprbV2/wOQ0bBBWmut3f8AZDRskNZaa/c/ABkNG6S11tr9D0BG
wwZprbV2/wOQ0bBBWmut3f8AZDRskNZaa/c/ABkNG6S11tr9D0BGwwZprbV2
/wOQ0bBBWmut3f8AZDRskNZaa/c/ABkNG6S11tr9D0BGwwZprbV2/wOQ0bBB
Wmut3f8AZDRskNZaa/c/ABkNG6S11tr9D0BGwwZprbV2/wOQ0bBBWmut3f8A
ZDRskNZaa/c/ABkNG6S11tr9D0BGwwZprbV2/wOQ0bBBWmut3f8AZHwC/kth
TA==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzNm7HKrVlWRQsFEQQxtelETI3spGnauhhpImgbGJegUUNjG4iZxgb9Lmb6
PgYGivgEVoPBH7hkDMbc91Zwi1M/53xn77XXmmvOudf5nb/82U/++le++uqr
v/31b//zk2/+7g9//vNv/v7Pf+2X//NX3/z0B7//01/99uU//O+/X77+wfd/
8fU//8Yff/rhD//zxx9f/+Mf/evXv/s3f/Hpn37xJz+27/n49/L6c36X/V4S
k9Xz7RrKOlfvWT1/tZfX71/t/UvlbYn5l8q3F2v7UjVVznq1x7Keb1vJp//r
34vnrL6rPPOK2+dcc8mBaz3ln40teU7Zy+qsy/pL3F7n7QrfbF28yLEX/fd1
TZWzXuH5am3/8s2/ff3vv/m9T3/6X//9Bx9fr55DXpfcIM+8YnXF/MWaSw58
/PvHNfzZj37709f/8b1Pv/V73/9kX5O9kO/6+B7LqWxsy/vJ+q/XNm4v8naF
b7YuSr6t6sX2a6tBbJ687mVkj2Vttnbse+zZvVg/wahSOyUfXvgPhbesetzH
dRJsIbF90RfImkluvM5bi2Pk71esXvPPEivSr8mZlhose3lRmzYnCz8vHMn+
vayfnOnH77W1Y9e84jO2hxJusOIABDPJ6wv3Vn2BrNliy4u8vZ5veS/RubYv
27OwOprEfOX/r3C46NASB5KTBYvIP3su9kzt+gmXs7rbngU505X/YLniig+Q
3LP1eH228P8rVlbrEQwpeXt5DoR7XHF4cV/8wv8k6y86tOSY9eVsvZQ4EBy2
WERel17zOk/I2q7n272T/mLz0/bWKyYXzqz8OsLhr7iR9696N8Gx4p9YjLL+
D9FE15pJ/Mvd04t7kNJnbV3bPCF9mZwLqU2LD5bnWH5C9rXKB5snBHMIT75y
w3Iwq98t375yhuQhuduyd7v2ztd6dLbGV1yX9OJyl1HymeRD2TvBrqILyN5L
nyW1T3KG5OcLLkfiYP1Sy6stv3rRC1Z6sPgDK3wjvK5wGMvPyV7I3612KBhL
+uyK61rfgMTZxsdiZsG3a20kl6y3X/D8itvVBwu3IXyb6KOiVQkOEC1w5YnV
pFZ3rLiB1YMl5rZGyBosr7P6peAk2ZfVntYHs/hQfCeSh6Tnkpoq/gmJyUq7
2R630oA230julRqxXM7yn6IdrB9INDXRpIXPk+es9OCK2xOss3dGtk+VeYPS
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
cHjC5UrPsrMKpb/bvdh5jMJpSf6QXmC5BImVPVPyWYLP5F/Rzq/1FOH51gMh
XMjGrXyW4CRZc/GoSV0XPUJ02Yp3WY+R+HgrXC3+58WjyvwD6e92LyT3XnMw
gvPkrEl+ljs+y8es52y9a1v7K11mPSLyvcTnIblqtS357Is73GvvJFakXmye
k9q3ayueicVtW4PW17X81s72X3GwXhbZi+VCLziY5VEvZvmKdib1W2JeeusL
X8vW3cqXtr2YrNPOjRSOYTFttV/rKZE8tF5Q0QtFX1w1aGcqCD9ZeQ5fyhux
OVk4WOHJJD9J3ZGYkNgWTm5xifRW6wVZfLbfZXmFxavSO4pWvdZTvJri55A1
lxkVchYkZ154BcXjsmdU9GDxHF54IwU3Lky2tUx4suVO5c591etX/hi5Z7E6
l/A3gm+2j5e/E45h881qVYtFFkOs52/5CfFbimaxMbHxJ3yv4KrtfVdMPr6n
eA5FU9g6LV4l8alszhTcJvznyitbj9Y/sRyefBc5F4tLpWaJD0b+buNjtaT1
BEjOWA1l+47VOKRXkr7wgvOUO5fCM23tFH/Peg4FJwvPIede7hHs/JX1tUhf
tnc65JlFd1vuWjSm1Ywv9HXpZZZjl3q0cbvic/Wsa52EwxdPhtRa8ZoI5yl6
ofR9m/+2H9lZO+u3WBy2syUrL47E1t7Fk+eQmBSfx+aD5WmFh9v1WL+o6Gv7
2sbB4mTp1yU+ZT2Wk1x1RDQR+TvpBWUeoPBn60tb7WZzhnBU60FZ/UJ4vl2z
5d5kzQXPSa8kmGm1p81/m8MFc4j/QPwi61sSXk34IZn/J9rQ+rdWw5beamNV
OGfhb6RHk/5i9ZflCYTDk3MkuV18AOurW25s6876JwSrLR+zeF78EBsHgntl
j0WPE41Q8sR6obYuLBe19WK9F7sG21uLFiDYS3DVcjxbC6+1z0pvlvy33l3x
VEmurvTy55zfe5Hztu9YvW/9PavXCP6ssK70KesDXLlkz8h6mCv/wXrIRZcV
LWP9qNV964u7LbKGoiPsd5XztffFq7kmolmKL03+bv0Qm/OWMxDObOclyD/i
Va5y9UWfKjqx4DZZm81tEnPLDYouK3rQ4rPl+aXfFU/7taawcSh3c1fe2nO0
fgX5XvKc1fyejW3hbyT/C2cm+GY5/CpXV33KciGi9cq8pe1r9rP2LqDUNcmf
ghUrL8v2RMJ5LK97oSkK/yfvIfN4Nk/I368eZDUa8YUsN7Nxs/zN4pjlwy/0
pvVvLdbZPlW4ruWf1mMhXOh1jVhv33Jm0t/t66Jryoy0nS9a+Q8v+L+Ns707
IzlGeEjxi1a+k+3jBBNIPq/05gucJzVi8cFirO3d9jXJbeIX2bO2NVg8MTvL
UXKS1FrhNhee2DWXONu7FbLmUr825haLVj2LrIdgmtV0hHsTjCJ3uMUfs7lh
7zcL5pf+aPmSzaXi6VnMeeFB2R5B1mPvsq33+yLOVhdbX6vEufhjhKtYXC3c
z+rTKw7ke20+lDkf+0x7P2K5qM0Ty1ELbpPPklgRDLFa1WJXmXmzHGDlQVk9
W3CmcDbrjdg42/olcSC9zN7pX2uwszGEAxDMsdyPcEiihUnftP2LeMJF7xT+
VrThykctem0192jrl9QXwSviK1pdv5pvJzVu+UDR3WTu2vpFRT+WOXCi76ym
IPcgBbfJ+q0usOfyQrNbrVQ0yIqT275muevVO2yeWA5WNLideyQ6xfLei8MX
/8e+Js+0utVilPWsLEeyvkHhDxaHCwewHM9ysKIXCK7a+ylbvyvNbvm2zT0S
E1u/BGPJ3y2GEy5B8rbsheA26V8vOHDxHEj+FK5i43Bh5mo+zT6H5NLHvxcd
utKJlgPYOJC6sDV1PcdiLOn79ozKP+JBkbwifMnira3BolNsHhYuVDy3otOL
327PsXgOBCdLfyc1+4LnW5/EegiW4608JXufVWrH+mylNq1OtNrN1um1Tqsp
yGeL7iA9izzH6rjiOZezXnFL+55y91rul69zJNhOPktynsTfYrjl7dbPf6Gz
iBYoOqj4PBentesh/Nny2Gu/Fossfyueto255eRFd5Aeamd4LA+xnjPxZGyN
W25pXxMuYfmh9Z2sLrZeB+n71nOzdxmWGxRdv6p9co7WPyH4aXuurRGC2/aO
teAwiZvlcsXnsT4G4ZyEgxE9aPltyfkVjyreneUYZJ2kH5Uatx6RnZ1b+QnF
43rRc0u/eF37hKPaO337fusJ2H5hZ2kIT7OYX+4r7ZmWGiHauXiqr3uc1TK2
pxD+Sfi2na2yPXpV4ys9aP2f0usLZ7P5c+UAeab1e1e1T3CpxKTEzd6tWI1j
70dIjdv7Yhvn1Z1X0bwkV0uelB5HNMVqDRZjSd6WeQarc0nu2d5UvC97v1P0
1AttWLR80SCl9j+ndi78yt6VWC5htckLL4LoX/L+cpdh8+2FX217nH1mWYPl
zySHiWa0HNvycLIvy8mL90X4g53rsBzb8oQXtU+eT/gA4WkvtHPhV9dZExwr
/cJyoZLP13tIDyJ8j+A2qQurywreWm5gMZxgb+HDBA8L57F+PnlOmb288tZ6
rfY+yM5V2tovPLbUvs152+vtfdyK15H1kFog52v7BckfwjHsPYK977D6peia
1WuCt2QmzfZNG0PrkRKuVe65Cr8lOUnqyGL7FedrDeRcSI3bOKy0QOGf9p6d
5BXJMbJmi9UrDf6ldJON4YobFI+ieFAXp7U1ZWut6GiSh/bucnVHULCCcPKS
z4QnrM6IcCebnzbPX+Rn6U3EEyDxsXqK7Jdw74JXqzudF7rJ5saLGTyruUis
SHxe1JT1JO33Wh1EzvG1zi363c6JEf5W+EnBB1L7JJcIPrzOT4I5RAdZnmNn
VwoGFrwqGtw+3+omiznkjCw3KP4eyQHbv17UFME0ckY2bqQWyH5XveD6LsL5
Cz8neGK5geUztgatP1lm7Wx+Fs1F+g7pcQQfbK9c4Zvtd7Y3Fd200u+WP1i9
eeHDyouwfbxwBuvTFt5b5sFe3399Tv+w8B97B7eakSMYeHkp5S7e5qeNudWn
pb7IXuxdAOkpxRMonJOcqe19FlftDB6pkddz7NbrszVVen3pQZajFi638jzt
2dmasthLYk7ucAlu2O+yXoHlz1azFxx7Me9U6pRwQpszrzmD7b8vOJjdr83t
1V7KXDrJczvDQ/K2vMdqWKtDV57nyj+08bc8kMz8WH5b8NZqHIvbFqvtGdk8
JH6vrVOLsSRn7Dyk5QzX91pcWvkqxFe0nHPFJwknJ2dk+6yN1er1Sv+S9ZP3
E2/ZevJ2nqTwgcKFLEbZz9p+Tbwmq2EJBpJ+ajmP9RnI2ZGcIfVVOG2Z2bD3
fYVLWzwvvcbySctRiTYpflrxW8hrm29E5670rO2/hUsXD+GqBcK7yl5s/dpa
INrQerM2zy3vIjrF1jvROLZXkjMqfhTBRtv3LQez/JD0YtILyDxP0bZk/aVv
lh5ROD/xBOzdh9WzlreQ2rT5YPGB5J6NW+Gxhe9ZT4bgtq2p4tEVH8zWGjlT
UtflfmQ1c0LWafuF7RE2tuT+98Iici9DuG7RaGVmhvCZ4i28eL/tj/Y9hAuR
3nTlvOUtL/q15eq2j5A+TnrHyusg/YL096JTCOcnZ2S5q9UCLziD7Re2J77w
LsrstI2bvX+0mGC1sH3m6/cXb9xqK8sP7b1kyeHSrwsnL7MEq9n+4nUUj9r2
6xdnYXmm7cvWxyD9wnom9q5qxYsIx7B9k+QPuQsgzyQxIXlFnlNqpKyZxKfg
f+H55fkveBSpqcJ7Sa0RfWo9iqtHkxq3/aX4DJYnXGdBdIqNoY2V7VNl1sL2
1uJjFO5B8Nzer1mOUTyo67ssRtlzJO+3PlWZcyg6kfQgW2uFR1ktaXu0vYNY
9TiyX4sPBBttzqzmuOyZrnSc5f/Eu7M+Q7mvsT5G0bPFSynvKRyy4J7FljLf
a/OnaLQVVq9mIy2PIjVS4m/jRvQd6XEEEyw+rDSIrd+iVclZkB5UehOJm90L
0SOlX5PzKthivZTyz/Y+krdkv6RvFv5fekrRaBaTi9dR1kO0pD13Ev9V/yV5
W2ZliU9SYl644hVDq93snFjJh2v9pa/ZOTGSJ5anFeyyuWd9mzLfYuvOYlHh
eDbO5P2kBssdzap3kNokZ0q+i3iqdt7M6r6rRiwOk5oln7W9kqzfavxrv3YW
nfBYiwMEc2xeWRx7rc0LdtncIzVb7nQsPyS5Z8+C5Fi51yD4THoNueMo+oWs
rfATgicEh62PR/ZifRWr72y+lV5s71aIxrc1a30Jgj8XDhD+YLXedXaruw/L
hWw92vkBUi9W+1jeQvZevH3bawo3JrrSzpDYmiJnR9ZG8qrkv/VvS0wIVtie
XmZpVrMuds7EnqPt79YrI/uyv1Ow8yRkX3ZGomjzwk9IrKxfZ7Gx6JfS12zf
LNqKnHvhddZTsl6Kxe0yt0x4Ptl70T7XGmzeFgyxnKT4wJ8zz4tXVjRCeU0w
3OoCyxNs/dpaI+spvlDpfcXTs3q28CvCASw+X99bfBt7jvasy7wE4WP2rnbl
y5Hn2P5SasF6ztdnX+f5FR8771T65kqDk7hZ/8HOMxQOYPdu9ReJg/1egmOk
55K7dfL+F16H5RUrHUF6K8Exe74E06wGJBrExpPUr+0vlgeS7yK4VGZLbJ6X
WRGyhlVPtzyH6GWCG8RvsZy/xIR8l42P5QO2b5LXJR9InIvXUbR20RGvdb3l
e7aOyN8tl7C92GKj5YGkBsndUOlxhfe+mBcqM/zFb7E86uKfKx5itYnFfJKf
1tOwM1cF81/fP5Jctd9LdFPhPzaGZYawcGDSj+zcO6k7W++l7izGEswh37XS
m6TvFM1I6q7csdo7I8ujbG4QHlJ8gKIBy8yDrZ2iBVacnHBX2x8tf17NGhUu
SmrfPsf2a5vzZN6DxLxomevcr+fYM71y1fZB23Ntrym9yeb/1RcsLy18yd6j
kb1bT2OlAQunJTlvZ0Ff4BV5v+31luuW+rriTHiF5Yevsbp4mBbnCX8guU32
ZfkzwXBS70VHWE/VcqrSX1aYUDQg4cz2LsBqcJu3pMYvrLactmirgjMEr+w9
tfVhimdlOZj15ci5kzivsJro+hVelXyz3Mmuh3CGF7zO7qXMAdp6KbVZ+s5q
7uj6rlX/InrB7tdyHuLh2DugMsNp68tqrvK7BttTbN+xvdjWcrlvIusnuLfy
HEi+Ea1t+Uzx61a8zu6FzPAUHkI+a3mg5WnFK7A61OoyUtelT9leYPHwWvOl
NexdT+E89h6kzNWQnlL8EKIZiY9kc95q5+KZ2PsUq0FInZY9krVZrCY4TO5k
S3wsXl1rJj3L5jbJpeJ1WO1scbv0jpXWu7C6zKqVnCd5df1bxb/02ReasWgT
29dIHRUvi+BY8UDIPaD1gUkOr7DI+lSFB1rfhmgHsjbbd8hZEF+a6CCrnYtn
Zc+98CJbU7b3Fd1n82p1J1I8z8+pGS2G29okPN/qoHKfZWfqrLds42Bzw2IR
6aGlB1k9aPme7a2WN5Z+VHrrKpdI/he8tdygYLjVqjZviU9ieVqJv+0F9hwJ
ThZ+RWZRbG0WTmjvQex8RbkrJ3lluQ25O7P3hmVflme+wJ/CG63/QM6RcJty
l2rz2XIwy9MshhP/ueTt9Xx7Lqs1lxwompH0xOKLWt5IvDjr4ZA+deXkhZPl
rrxoVVs7BTNXdxZlnq3gT+GNJVctVqz6L+GZhANY38b2Phsrq9mtv2Hz086r
FB/pWjOp/aI37fmW2rH86vouey9JXtv7XNv3SQyLV3w9k/Acwk+uvaz0VNEC
BJ9fPNPibem/to+8iJX1Meyctn0+iecL/6rgM6n9cl623i3PLBhb5q/s3+13
EWy3fWTFf65zIT6Y1XHl7KyesnOzti6K1iBn9GKu+3r+6/lP61mVv5f7Heul
lH0RL+K1NrSftdhYdJO9ryQzcpbHEs5wfZfFxpU/ZnHP9iY7T1XOjqzT9k17
FoRLr/rICj9Jbdo7MoK3Kw1ra5Psq3AVkntkX9dzSL2stKG9p7a8kXyXjbn1
tC3mrHQQwV7rbxBctRy4aC7LkUiPI/uy8zC2X5dnEv/K1mC5+yvcw+Ltaw1L
+hfJn6uOyn7JOu3sRNHmlg8QHWdr0/IEsl+Ct8VbsJqaxKH0Uxtn60dZzWV7
0Ip/Wi+R1P6qxxUtYGNLcp7gG+HMZO7rtYZd8U/rwZZ7w1X/tWu2eW59M6sp
CO9azTMQTlu0w+fkVwQDL85z7b3w29UsevG+Vv6kxRPCi174QtajJtxjhWNF
lxX+UHjRKk/smdr+u8olwqsJB7BnZL/3478y10ew0WoHqxkLv7I9qPhpJE8I
/lx9p8THev4rvm01O4kbwa7VrALJgRdxK9hO+IPF8+Jjv9BoVjeRWF3fe62t
6PrSEwknIflZ8N/mktVfBc9JfpKzK/4SyZMXsSr5b+uCvLZ3oCU+RE8RnLE6
2s4qWE1acsPWtdV0qzyxnn/h58SfKXdh5f5l5ZnYuy2be5Y/l3uZgudW75Oc
JLhBcmwVq9U9l9VxFseuGFpcWs2fWC/6OpcSt6JJV7zO+gxWd5P4lx5hObbF
NNI7LJ7bXkD0oO0LK25Q7jTLvQyJj8UEG0MbH+KhWV5q+eoKQ6wWI3VtdbH1
x2yt2ZyxcbOalOT2CvMLT7CcqnB+q21tzhcNWPwc28tIz1ppATuTTPxe67eU
mNh/hH+S95Dasbz0+vcinjafbU0Rj5FoW+KFWu+C9GjbK60OWsW/6COLgZYz
WF+o1KnlSFYDrnjpqge90I8veJT1bAvOkJiQvlY8w8JtCtaVnCT1S2JO+J6N
VfF2LBaV3LZ/X825EW/Hnqnta8UXKnW66tcr/UW0Kqkjkg+lJ5b4WP5j+yDp
cQXHrBdH9kXiZuNjdUeZJyTxJDyErOfF/aDVKeRcSA5cNbuar1v15avXkN5q
Y2h51Gq+y/Zry+ssLyX1VfZLYmi1P6lNq2VIHyR8+PVsHvGvrF6z8bH9ejUf
RXpQ8S4sh7Q82Z5j0cure9Kixy3PJ5zErtPO9ZF+arWtfX7hq2TvxCOyXNrq
puJFkHywM3sFW0gdFc5f7lDs/a/1nSw2Wg5QZsAsJlvubXO+cJ6il+09KelB
BJ/JuVhPptzlXe8h9w623u1d5AsPp+Sn3aPFLtv3Cb4Vj8V6X6SOii9k12Dj
Q+JmOYk9X1unViNcfa14MkQvWH1q+UDRJmX2yXoR5Y7Dem5W5674W+EMqzy8
amd1v1N8Tsv/y11V6WWvP2s5oZ05tz5V4R6WnxMdZ7Vb0Qh2X6X2bR2Vvkn6
79UTrZ9g+47VWcWbIh4F6S9kZsPWV8FPm//WtyF7LD6n7YNXrhJeR86dfG/5
rOWEpHZIzFe9o/R0i10r3CPcgOzr6k12btbOhxT/k+SerbvCu4hmLL/XsFzX
elDFT7AxsTVCtI/FFnt3Zjmt5dUkN+wspc2f1dyXzR/bW1e9Y6UFCjezuEfy
gfQs2zfJGshnrYdQPBm7huKnrXDbYojF1ZVHR/qdrVPb6wu/IjzfemtFi1l9
VGq2fJb0x5JX5PmWV1issPrU1njJbcLhbQ8lOWzxmWCCvaMsd3lWn1peZPO/
6HrLH+zeLXdd8f/XflrBqOv5hBuv/CXbQ0lMyGevf/Z+za7Bzt6seh/Zi40t
wRM7K2I9WPu9Fp9L3y/4Y3ljqTWCLZZHlR5HcN7yYYv5RadbHHvh/a44quWT
JH+sZ1Vmzwi/tb2V4GTRRCSXVtq5cM7yuwAbH6JzLU9e6ccV5lv9VbRe4dWE
25QeZ3Wi5a7FK772/sKLtv29cDnyfutDkry1flTBAaJPS28leyHnuPJRSf6Q
HCD6hXgOhKcRjmR77gu/aIX59rOrGTDCqex+rW9QZj+IXrOefPGBLX6utLyt
EYufZV8X3lrfu/QFy12tT2LjZn/nYmvkygfbc0l9ke+y9w425y3fsByszJxY
bmD1S8F/q3lXvoHta+Uu3nIqwnNWPrDl55Zjk8+WHCA8rfSj1W9PSu2Q3mFx
rOAt8a6Jp01y0tZ1iS3B2KLvCgcjOGN5iNVBJPcKhymftRrh+l5y7iQ+pU4t
HpK9r7iEXQPhNqVmV3fZK/+WYFq5kyLfa308grckZ8jMjNUjlrPZ2Nr8L/Mt
xF+y3GaloQgulTvB0rsth1nphaKtrBdhY7XyIe377flaP7bEhHAVgmmlv5f5
jet7SS0TzWXPtNSUzQFbO1f8SX+3GFK4Qbk/sjEpPb383sFyb7IGUvuWy5We
azHfeo9lDoFgBcFJ238LthB9VGrHYrLtpy/0e/kNAqkdq9GKnrKeQHk/8WyJ
9rE5dtUReb7FKNJbSQytF1f6NcnhK+ctF7X3JvY1wYHigxEeaPmtzT2LITZn
bByK7l7FmfT3ot9JjZC1Wd5Y+r69X7B8YJUzpa+91j4EowhuF4y1Wsn2VstR
LdcqXNTimPWOSN5eMSmz6IQf2jsOkoflvGyfsjlg40y0qvUTbB5a3LO9htRy
8SjK/aCtHXLWNicJRhXtU+qC8ATLB6yGsr21zPOsuCjJ1eId2R5hfcvVHSV5
bbm9zWfbpwhXJ/W42ovNQ/s7mnJ/TWqH9C9bd6WuC04Wf8/qsjJb9T/WjNlD

       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztmjGqndcVhYUDwY0HkcqQIoXdhfAedptKyggUkElhCNiFcZdgg6cQPAK3
JlNIbwhxrYDJBALuI0MKFb6H/3DOPvdbW1+hsCKunu+/1t57ffdKv/rjn599
9NaTJ08+ffvV/zx7/tkHn3zy/PM//PKn//Pi+cfvv/fxL17Jv/z/10/619+/
8/jXb754+PfLfz3888XTx6/e+dvvfv/bPz1W/P6Knv2Zr7/+yp+98vpbr5nV
u55r17PP/pyV51p5byd93vUsK+/55G6uPMtJDwnzWbHL1bf01s95VQGPP/fr
2dP/PHzz5XcP//jxu4eV37/1miv61s+ZfT8V7+3lf3/z+Pcf3n389usPH6/o
lfdzxYfZZ599zcpzzWZd/X5Ozsnse9418ys7srKn1XdgxdtdPqw878pe7Pqz
r/+64tWt11z5s7OvX/lvrdzhK695vTdff/2tzr31mlnfZud8tptu6VvvefY1
s+/z1mtW3s+uuzGb3ex7rt6X2efd5VvFLlfP5718O5n7lTs2e/duzf+s3vXe
Zn/OrWfZdWNv+bNyQ1YyXfn5u/auoteuzOEu3ypu5q59mc2rostOPsvKfK7M
ya79rfbqymt2cfWufqxg3dn3tqubdvkzO6uznld0R/XP2cWWu/LadUN2PcvJ
z6Enn+Uk2+zyrWJnqzntyg2suKvVn19Ofo6b/e9e+X5g182s6I6VHl95nyuf
K3fNScXN3MWuFZ9DV2abzDYrs7Gyv7u+G1n5XEPj/123pYLlKu5GxWeBlX6v
ZqoKjj3JeGT+r2b1k/xfzTYnn7fi+9KTnx8J/L/yLBXZVdz8apao2MFdupr5
u/L/ruci8H8125x83l2fU1Y+j5zs0Ar+X7khFbd39jN19WeB6htOmIddf7YT
/9+L1at/Zif+p81qIv/PPlfFfT555ytYouKunpyHWS46+TnxJP9XP9dJ/q/+
vH8v/t9191bez5W7Qeb/2ezudZ/vpau/z7kyJ7RnWXnGFP6v/vx7kj+rvzNM
5P97fadB4P+T37En6pXvUSv+7unkPFTfBDL/3/r5V36fxv9X3vOKz135/+Ss
Enqw4nk76V3f55zkyeqbOXsTqnu54vulCjarzuXKs6z8nWZX/j85q7v+3nlX
DxJuLE3P3pkVxqju4l03k8BRJ2/IlYwIuZzkn5XbReb/e83qvXqw+nk76V3f
hxN2vIL/T3LFvfi/+u+/TnbZ7LPP7gLhee91b2f76CT/E+YqRa98Z06YvYqb
OfvdcnWvpc82jQ129T6Z/09+p0foo5S5IuvZ73Bos1d9M0++/8Sbmd5ls58F
CM9LYDD5P1fv+jc8nfifptNnOz2X2fcs/8v/iXr2+5/Z74jS+d+b+ebksost
5X/5n6xP/jtqws56M5m3lJyL/M/vo8S5IuuKf0ct/785NzM9F/mf30fyP1PL
/z38NJex//I/p48S56qTpu24N5OpU3KR//l9JP8ztfzfw09zGfsv/3P6KHGu
OmnajnszmTolF/mf30fyP1PL/z38NJex//I/p48S56qTpu24N5OpU3KR//l9
JP8ztfzfw09zGfsv/3P6KHGuOmnajnszmTolF/mf30fyP1PL/z38NJex//I/
p48S56qTpu24N5OpU3KR//l9JP8ztfzfw09zGfsv/3P6KHGuOmnajnszmTol
F/mf30fyP1PL/z38NJex//I/p48S56qTpu24N5OpU3KR//l9JP8ztfzfw09z
Gfsv/3P6KHGuOmnajnszmTolF/mf30fyP1PL/z38NJex//I/p48S56qTpu24
N5OpU3KR//l9JP8ztfzfw09zGfsv/3P6KHGuOmnajnszmTolF/mf30fyP1PL
/z38NJex//I/p48S56qTpu24N5OpU3KR//l9JP8ztfzfw09zGfsv/3P6KHGu
OmnajnszmTolF/mf30fyP1PL/z38NJex//I/p48S56qTpu24N5OpU3KR//l9
JP8ztfzfw09zGfsv/3P6KHGuOmnajnszmTolF/mf30fyP1PL/z38NJex//I/
p48S56qTpu24N5OpU3KR//l9JP8ztfzfw09zGfsv/3P6KHGuOmnajnszmTol
F/mf30fyP1PL/z38NJex//I/p48S56qTpu24N5OpU3KR//l9JP8ztfzfw09z
Gfsv/3P6KHGuOmnajnszmTolF/mf30fyP1PL/z38NJex//I/p48S56qTpu24
N5OpU3KR//l9JP8ztfzfw09zGfsv/3P6KHGuOmnajnszmTolF/mf30fyP1PL
/z38NJex//I/p48S56qTpu24N5OpU3KR//l9JP8ztfzfw09zGfsv/3P6KHGu
OmnajnszmTolF/mf30fyP1PL/z38NJex//I/p48S56qTpu24N5OpU3KR//l9
JP8ztfzfw09zGfsv/3P6KHGuOmnajnszmTolF/mf30fyP1PL/z38NJex//I/
p48S56qTpu24N5OpU3KR//l9JP8ztfzfw09zGfsv/3P6KHGuOmnajnszmTol
F/mf30fyP1PL/z38NJex//I/p48S56qTpu24N5OpU3KR//l9JP8ztfzfw09z
Gfsv/3P6KHGuOmnajnszmTolF/mf30fyP1PL/z38NJex//I/p48S56qTpu24
N5OpU3KR//l9JP8ztfzfw09zGfsv/3P6KHGuOmnajnszmTolF/mf30fyP1PL
/z38NJex//I/p48S56qTpu24N5OpU3KR//l9JP8ztfzfw09zGfsv/3P6KHGu
OmnajnszmTolF/mf30fyP1PL/z38NJex//I/p48S56qTpu24N5OpU3KR//l9
JP8ztfzfw09zGfsv/3P6KHGuOmnajnszmTolF/mf30fyP1PL/z38NJex//I/
p48S56qTpu24N5OpU3KR//l9JP8ztfzfw09zGfsv/3P6KHGuOmnajnszmTol
F/mf30fyP1PL/z38NJex//I/p48S56qTpu24N5OpU3KR//l9JP8ztfzfw09z
Gfsv/3P6KHGuOmnajnszmTolF/mf30fyP1PL/z38NJex//I/p48S56qTpu24
N5OpU3KR//l9JP8ztfzfw09zGfsv/3P6KHGuOmnajnszmTolF/mf30fyP1PL
/z38NJex//I/p48S56qTpu24N5OpU3KR//l9JP8ztfzfw09zGfsv/3P6KHGu
OmnajnszmTolF/mf30fyP1PL/z38NJex//I/p48S56qTpu24N5OpU3KR//l9
JP8ztfzfw09zGfsv/3P6KHGuOmnajnszmTolF/mf30fyP1PL/z38NJex//I/
p48S56qTpu24N5OpU3KR//l9JP8ztfzfw09zGfsv/3P6KHGuOmnajnszmTol
F/mf30fyP1PL/z38NJex//I/p48S56qTpu24N5OpU3KR//l9JP8ztfzfw09z
Gfsv/3P6KHGuOmnajnszmTolF/mf30fyP1PL/z38NJex//I/p48S56qTpu24
N5OpU3KR//l9JP8ztfzfw09zGfsv/3P6KHGuOmnajnszmTolF/mf30fyP1PL
/z38NJex//I/p48S56qTpu24N5OpU3KR//l9JP8ztfzfw09zGfsv/3P6KHGu
OmnajnszmTolF/mf30fyP1PL/z38NJex//I/p48S56qTpu24N5OpU3KR//l9
JP8ztfzfw09zGfv/JvP//wC7t3Kx
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1kEqRQEcxeEXJZnICmQLGLsZvA2wgqcYKcVAZhZlxkJswSaEMjAxuF33
OPJ9RT+l97yHzn/v7OrkYm2xWNxsvn86Wd0eX1+v7k43Pr44X10e7F+uv+f9
58dHPy+3h9fdjeHscX342i9Hy+HwaTlsPeyM7rGPM+V5v/v5x76usd8zx+OP
fd6fes+Tr2XKzzDldz3H+zPlvZrj8X/qf3mOx5zjPZ/j/3ruv9s5Xu+Uv5MF
AP/SlA3SWmv9d/u39weA39GwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9A
RsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21
dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGw
QVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/
AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDW
Wmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZ
DRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba
/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMG
aa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8D
kNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVpr
rd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0
bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3
PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuk
tdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZb1ZbkRI=
       "], {{0, 
       128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
/w+vK8S7
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztnEHKZctxhB8yCGsZ2oAGT1Pbjbcgr+A9kEAgYyEPjMEDLcPgVXiuNRgP
tAgtQKCpnkCYtqFEhCO+rDx/n0E1ty/31q3KyoyMjKzz//Dbf/rJz7731Vdf
/fNff/fPT775l7//1a+++dd/+P6f/vPTb37x469/8Vffvfz1n8efXv/N737+
6Qfffu/Tt7/7j7/7/W9/+OmXX3396ev/+sGn0/vK68+/25r/NKf7W8rvJnO6
+yXmSWzYsnli29Zrwia3/J/YF+FLrb1Mxmnru5Ox3FrnP/7oD3/7m3//t0//
+d9f/6/XCWae5nTnd+d0X7s2af0WMU9y1sQe3XNs5YKW/7trI/yf3pe7ttY5
KnNu8OfJeLmFjZ/P+V058D/DXdvnn/l8Hnf+0+vTnO7r0xo+f0381mkk87hx
1NrXaW3uOZ6+m/AfN+4UX530/1aeSnzM9aXEVi7O0/5Mv05imcDGU6wpazud
hZtrkhhs1ZhELXY6o4QzuzzwZNtWze7injIS+7hr+PwzSnwR/p+co7Iv17dP
a1Ped/fl+jnhz/TrJJZvYaO7fiWWk9cJPiS1UlKLuVjX0qmSGryV11z+n9iH
9jcX/91coMSXkqda8xMaeKI1Ef68DfOTc6e5pYL5SiwQ+glRF5/2ReCbkt8T
zGnFo7vHhP+35qRr81YuUDRhBecJzbmlbyu2vcWFNvB8AmfceVzfTmq6hGcm
+OByBhrfXP7mYg79+cTfiDlb/tbKm0Quc/NCktdOa2jlUNc+LS60gee7HDXB
GTp/tfo+RI5z+ZIbay3+39Km6NeuvyU2SeZs+WSSNxNeR/N/l6e19ATXPi0u
1MoFhP+c/LzF/wkd4Ba2uDmupQknOlVrLyfMae0x4bcb+H+CzwSOtXhdi/8n
ONzCDcU+hH8muYDgunTsKFiR+EkLf1qag2JbN9crWhnB/1vaVPJa8QdlDYlN
kjlbnKel/yS9vFY96+apBGdoXufiVRJ3BO+lY8fdu+InLrehz04Zp/hS1tbC
9uTs3Hhv1bZu3b2B/7c0HBcblXyd2ISoZ0/7cuOOqPFdLpRw72QvLa47Wee6
a3b9k9YPE1x1z+IW5icYmNS2rp+09A3XxxQbJtqs8j4dy4kmSdxxUj5P1PiJ
TyavW7xXsVsSO27NksTXyT9dPG+dXQtvW3PSa5jsgbq/2+K6p/UnPJao5Sfz
oKJJTmrXBK8+fd6NhRY/d8/FrVOSOrF1LglXIew5ySXo/NJaw2RtqGAOUT+6
sdaybYtbunZT9ktoCzQfTvJmsoakL6b40ulcCF1O8RMCJxOuktiTwHDl80R+
cddM6ypuDLr9RPpOFK2punZu8bckvibvbLjcPskR7hom86P7u617FwROunsh
YpPA8Fu1Kj0PXRsmnETRGVq5gNZUT3Z270W09q74NnFnI8ETN0e0+BWRH13O
7OpyxDMFyb4I/t+qrzfXqor9CY7hxpqLA8qdKMX/WxioYLLLyRXbunmwtfck
jtyYbcXLac3J+4pvtPJjq65U6msXH4h6KqlbW1pc4ue3alXitWurJHZO8xM1
Ap0L3NctzYq2Q8s3kjVviBfXVkkNe5qzxZcIGyb1VMtvW/Go+PmtWpV4neBt
EjsKh098nh7bnuMjntlJfOPWmum4OP2uu8dWXamckbKeVuwr9nGxl4hNAieJ
WjXBHPo+8KS+lPh8ayg17ORzfC0cTngdzf+VNbfiRbEJkR+JnKXM39JJWjyw
xf9PsXn6/OTdhlZt5fq2yx+UXqRrH9fHkhqBHi43oNfTupfl8oFJ/k/EC6HV
J3ts3dVR/DbRSRKso/m/ghtKPd6623Cav1VrKL7d0tJdf2itwT07Gm8VXKJ/
N7GP64eTzxS4a27V5m4dqmC4G1NuXLc0w0QnSeKixf8TH0vOjsCEhOck9bvi
24lW5q5hsufijlb92xqEfVpaDbHmlj7TskPLVnRd2dJJkvOi7+y5PkbrqK7+
3+ovKHib+FjSF1Bq8Nb95BYOt7S+lm+3cnGi0U2uuaWNKzGo2IHQZxR/I/yH
7o0S/CHxsZaftzAh4TBu/Z5o6Yo2eLJPYpPE3+hajPiuOwj73+L/rZrRPQtC
d53kkAROEndIns7/W5iQ5Fllj8p3Ey3dzQWuTVqxsKEWI+oCwv6ujxFrVnSD
5P0Wp23pMxvqSveucuuearJm18da/D/BBOV3iR6TO9z1JzmUiAUCwydrPdrn
lTXQPtbSc5T3T2sm6oUkvibrStdnEo1oUhdVzte1A8EVCc2TwPwkl9G/1cLh
Vi3mro2Ii4TD3NJsW33/BPeIeqGFFXRd6T6npmhEt+5sTPJ/+rUSI4mtWpy2
VVO36ikF61p2buXHZL+tnEX4mLJmV7fZwIFpTKDryhb/P33GrdGIXEDfaUzq
IOW3Wnd1Wjjj5qkEJxM/cd937dyK5QTrEp9P6lA6FxCafIIVRL1wq65s7V2x
CaG1tnzJtUPCz936qHWmyvpbZ6Q8L5ycNcGv3DtRCU9rYV2r/nJtS2B+KwYn
OXDCmW/VlUnuUPZC82cipytn2rqTkNwTS/RPovYk4qWFty2u5daqNNa560+w
ha7HWzFI8GpX73Lv3RHPs0zyfyVeXH9u3d11Mcf1wwS7XMzfxg9bz7m4Z91a
G9ErUd5PsM5dm8LHiBpqMhe4vFQ5R5r/E9y4lfcTnGz5c4KZRE53sYW27S1+
mNypPvmGctanPbpru/U8zqRW6X63VUNN5gKXl05iRevzLX1jsvZJfFKprxMN
sxVTrs7Tsu0tfpjU3coa3BrQxXYFB9x1btMq6e8S9TiBIcl6NvB/14eTNRA4
mfhVy5/pvKbEePJMBBEL7nfd9bs2VHzYjeWk9lHWqcTgU7RK5bsuz5nsFxB3
mVpY0eJ1NG+/xf+Ver9Ve07mNRdXW7a9xf/d30pwgMZ2ZZ1urt+mVbb82T2L
SU3MPdMWVhC6LqHbb8BJpd53MTPpDyZ7Uc7R1V1bsZB8t8X/ExxIuGILB9wY
cfEziWXCN1ojyRFufLm+557LJP+nexa3cLJV57b6g7f4PxFr2/h/EncJVyQ4
XlJfJHFBnC/he+5e3PNy46tVa7hY0Yp9omdxCycTne30W+79eRrzb8XdNv7f
wu1Wjkg4Xks7TWL8Kfw/watb/JbouSSx79pEsY8S1wRO0nW00nty52+NL5n/
u367Qf93/YeoTeganOAhLVtN8tuEixKx39Ihk1zQwkmCgyV1FlGnb4i7xN/c
7yp5wY07l88Q+r+yR5e3EPGb8DGChyT7SupHd4/JfaRJ/p/okIndWoPW2Qg7
0zb5Evi/G3eTPIfQkJO84P4WoVUS97USDkZwdUKfJPi/W3dseObC9QdaZ6O1
6Nb4SPz/9DrJFy2eQ9f4Ld1GeV61hfnJnAROtu7HJmeqzN/Kv61nEzY8c0Fz
NkLbpG1CxF0yCP6vzO/mC/e1cqZuviByzclWyhpa59jCohZOKv7fsn+iT7Zi
NuH/rmZO+K3rD3QMunZO6iMiFzyd/ydxnWD+CWdcOyfc1Y01pT4iauEWFrV0
rdazja79E3wgYvaWLk3kiKS2JXQ296wTmxBx1zrrlg1b/NzFRoUnJ3eT3Dlb
z+ycPkOfoztngrHEs4236vFb/J/QZ9zPu2t24yuJa+KsFZu0zuUp/D/BaqWu
d3VLF+dbcT2Zr1vn6M5J3xNw57xVj7vcphX7LV3atVuiwxNaAR1rhOap2PCJ
/D/Banf+RDtK9Ac6F284R8InCX8m4i7xbdrPW7p0YreWDk/3+Gg/b9mc7mvT
cT05p2ITV0txe9ZJXNNjGy8ivjsZd4qd3b5860xb9W+C7a4On2gFRJ5NfDWx
ues/T+H/9JyT+qqbI7aNj8T/W3dIiLqA1poSGyZ34dy9uJoerRsTdnb7/hv6
2nRcT85J2CTRiIiz2HaOhP0TTdW9Q5JoJsna6FzgcuwTxp72pbxP8DFCN6Zj
yl3/rb42Hdf0nLS/nT7zFM2fPkea/7u6tBtfCp60dG8iF7j2P63TvTs3qVFv
5l3u3cWTPyR1K7GvL5n/P9EPN6yZ4P8tvHXjrqV7u3uZtL+bIzZo1Bt4F93r
2XbP5Evg/xts8sRzJPi/y8mVdSafb32XuI90y/8nNerNvGvyLtmk3vXy/2f5
4YY1E89aKpivvK/EaaLhE/cnk34r4UvKOmmNegPvmrxLtgFnXv6/0w83rJmw
f6sXnOCwq3u0egRuXUD7f+ue1TYfo+3QygW3cObl/zv9cPOaJ/l/C6sTDd/F
QFcnudVvbd2zIvx5Eg/p+2AbYvaWzV/+Pz+ezv+TGHS5WYK97p1wpfdB91tb
96wIjXoyxgkdL6kLXv6f48ZmmzzxHAn7u71gWttvxbVrf6KOOA1asyL8mYhx
QsejtcFJDHn5/4xNnniOt3hCS/Mh5m/hc1JHnOyf4Ji7tlYuIHyMznGtOV/+
r4+X/99dM80TiL9d0Jpf0Ula/D8509b9oiQ/bvCxVr4m9Jxbz/neiutknpf/
310zzRMUzdn92wXJM8KTNnH/7tlpnqRmcffS0r0Je7p9jVYNSOd0Yrz8f379
T1/zZH45xayC4e7zZSdMIGyS7DHpRxC9yCTvTK6hleNa9eY2bvny/xmbPPEc
b9mf6LW1enAtm7h43sLYFjYmfdLEnpM9Gjfukpw+iRUv/59f/9PXfCsnJr02
+g7e5J38RHtp2cG1LXEWij+c5iSwLrnTOxlHtA8Tc778/+6ab9k/wQr6Dh6h
V9N3Dlv3YTasYYPfutp+qz++Oa5f/v8xzvGW/ROsSP6m3CT/TzScVs/RtQPR
62zdydngt0m/nlgP7cOTc778/+6aafu7+oa7NgVnaP5Pa/tJn1F5Tjn53dZ9
SPpeUxIXk72bzXH98v/58UT+f+veCKED3/pbdqfPKHWQsnc3t7q9ziSHur2P
DXVrsn56vPx/xiZPPMdtWre7tls8Z1Lbd/fYek7Z3e9pTkJDo5+xmjxfAite
/j+//qev+ZbW3dJAJnkOre27XJfg/+5+k3zhculJzKfPl84FL/+fsQk9NvD/
lhaa1NH0veuTHdx7gG5eUz4zyf+Vc6c/fzpTWqskejfufifj+tacid9uW//T
10xr3S1dxeWWtP1bGlGia9H6/+RrpQ4itEqid6PwB7ouePn/jE3ocYv/J1ro
af0JL7rVU3N1J7d32dK1Wp8nclaihyR/xyPJxYkf0vMncU1gxTZ8m1z/09fc
0rpPcyq9vG06qqJBKe+733V1rRb/J+6FJrmSwHy3t5JwHmL+JAZprEji6+X/
82tuad2nORXtOtG0J+sCJTZbvDfRtVw/SdbsYn4r75/2kvSSWv0FVwty52zV
HS3/f/k/NybXnOCAO4/CCbfpqIk/u9zvVr3vnotbvyjYeFrPac2tnpRiT2UN
rTNK+iOuDRPfpjGHjk1i/qevuXWvUqnfW/rGhn6Bsh4lFyjvt/zE7fUk36Vx
MtFn3JH4WCuvuXZ4+f/L/5XfSrSIW35C66juOK3H5cmT9X5inwSvkrNOziX5
rlt7Jhwm8eGX/8/YhB6Ta27hJO0nk8+sufOf1n/6fKK5JTZP8k6CVwlOKjZv
nbu7/lavOXn98v/59T99zS39hF4zraO2eC8dCy3MTOqmFi5N4iSdm5T+iNvP
SrjBy/+59U8OYs0tHLhlZ6I/mPDeJBdM8v+EA7dwSVm/MmerN5TgqnuHwf2M
248j/j7Sy//nB7FmuhbewP8J/kbnSjcWCAxM8ru7ZsLP6XtW7r2mlp+3/LmF
Sy//nx+tO8lELTxZeyrzuxosgRsurtL8v5UvtvUr3d6QUtOd5j/x6pbu5/qS
68/JePn//EjWTOu0ih9O8v/k2dvTZ072dO1MazguBiq/1dLNJmvGxDdatUkr
FyjrnKxHXP+k8W3D+idHouu2uKXih5Pn6Na/yuvkfqabK4kzau090RmSvUxi
C52X3VxA6JaTsUbj2+b131qzy2daPdNt9kz+Fo3C5W7p6soZJTZxz7H1N39O
c9LYsqG34sZaay9ErCXzvPw/X7PCP907Fdt0fsV/Tvt172m4ayB09QRnFJuc
9t76mw+tOoLwDUKXa/EExc6tXl5iz5f/z+Ob29tKdMsNOn9iKyV2Wpjv+nNS
oyV9WJfzn+zTsjPdr0x8u9VbaZ0dkVOSXPDy//mR+GFS827Q+Tf4VaKJuX1n
N9cnGJLgcCt3EP1KAg8TTuWenRK/Cf+n9+6Ol/9395L0iTbr/JN+legGybmc
5lE4tluvKedO2LnFRZU5N/RoEs0n4QNJHUHElBsj2zBh22j14CbPnR6JX7Xw
wT2jZC+3NDpCY3Rtm+DeZI8mmf9kc6WuVOK3VUu2cGwbJmwbCmdwueKtc6cH
cW9WiTWiH7HhLk3LzoltE/3Efe6PwNIk37k5SKkjkloy8ZmX/+eD4B70uU/a
JOmdneaf1E5bWt8GOytzJpxEybPu+y0sbWkvSjy6dcSGWvLl//kgNM+n9Hxd
vyJ6Z7SG1tL6Ju18srnityd/c3FPOetWj+b0maReUH6LiMdt+uGkrz5ltPRP
hec8BfNd3CBs2NLQWlrfpJ1b+fQUs8ke3RydYIXih24Nflrn5JkSvvTyf320
9M+Pah9lX0nvjNCN3b0ouWbSzq1nUlxNphUvtG0TrexWP+6jYvIT+b/rt+4z
g0+3T8vfEk3Y1Y0TP0/wkLZn8kyKiwmJpkT0Z5Wx+T7eR8XkJ/Jb1z8TjvFE
+xD+1uq3Eva8hVfKIGxC3LFJesqJbVta2cv/9+8rGYl/tva42T6T/ub2W4me
7C28SkZiExcnk1yT3PVKbJvcSaDj9KNi8mZ+2/KxRGfYbJ9Jf3P7rcprV0NO
/OFWXUD0qV1MaD3/mGhHbnwpuaAV460YIXzmI+UaZbR8jLDhBvts8LckF7Qw
P9Grb9UFSS9Vwcmkd+OurXV/yd0j3T9qxUhrfNRco8R4y6+Iu2pfGv9X7OPi
DOEPiYY8mQuS33I5c0tjb/XXklyg/O62GHHHR801iv8nWiXdD3r5PzcP0bs/
zU/gVeLzLW0z0Y5aNm89z7VtfFRMntyX6wPb7pa//L87T+IP7pzuOlt4RfSp
W1poch/19BlFt9nWl78VI6fxkXKNqyVuvlv+8v98nsQfWtqFqzO7eEX0qVuf
d+tr97XyWxv0t1sx4o4n5hpCPyT8c/O53xo0/2/5w2lOV6+Y1MZbfS6iL3br
7u6k/rYtRk7jibkmqXMJnyTO6OX//795kr/rMmlzQhuf5DxJPpq8u5vgya1c
8ERMpvdF97Am75ZvO/dbo+VvrR4ibXNCG09yXMJt3LrDzQUJ5ie62ba6YDMm
0/tqnZHCD91c0ML8W+d+a9D+lvQQJ/Nswr2T55USPz/ZjdCpEsyf1MGeGCNJ
7ND7Is4lqW0nMf/l/5zdNttWwWFX71Lw3L3n0OqJED3rSR1sMhdswOTJfSXn
lfShNthk8txvjUn+P9mvSexwwmHXbgQGKvqJsl8iR7R0v0T7InLBNkymY9+t
2V3tKKk3J7FiQ96ZHAT/J7TlyXM/cX7Fbq1ewGmdicau2KF1l0PxN9dPbj1f
8FH5f6vmcrlKSy+iMWEDR32iv7W05W02oXsBrX4unSNOe3Ft1ao1iH7BR+X/
yu+2aq4kX9yyyYa8c+vcifk33N9IbEL3AhLt6GRnGiddnG/p/IqPEf2CL4H/
uz2pVr/YPceX/+/3tw33N1qxQPQClN/dpv8rMeLmhZb21fLJyRhR7Dnp/0lP
p/XdDTbZkHcmR8u2rZr9tj3+rw+0egEJXilzEjkiiXHXbrSutVl/uIU5yd4V
+yc60gYcfvm/7j8u1m2uC1q9gBZeTer/Lk4mOo+rg7V0rc36wy09Vtm7e4dZ
+W7rXsE2bHzKcG1LYNHmuiDpBSR45frhJE66fRDXVgmXeKL+cEuPVbA34ULK
PImPbcPGp4wEWxJsJ7CIto/bC2j93YaTHybPUCQ46WK4YttEHyC0i4/E/4mY
op/l2YD5L///y77k4gYx561c4PqnkjsUzHdrbWV+xQdcDSeJL0UfSDSizfoD
rccmMaXwgdNvTe6dGF8y/2/VxZOc7ZatlL24zzcl+pJiN3eeFv9v2dbFrqfo
Dy09NunBEedF7H1bvD9x0Pyf6DfdqgsUW7l8KcGxVv6d5P8tPyQ0/FuYT+T0
RF+d7IlsxtsN+eiWv7W4ujs/kV9u+afL212bJ7HvYt0t/p9gnWv/DfjTyoOJ
HW71RDbg7TZ/2OZvNA9U1tbSNif9M3nWiaitFN/ewP9b3FXR4m7hD4HJrh0U
m7diwd375FkQe9w2WlyUOLsWzrTqghb/d3msshci9pVYoPm/2wt2NTelF7ON
/7fu7Sj1YKtmbO19cmzOR5P+dvK9ybOb1EVp/3TzkbKXPwJD3EAC
       "], {{0, 128}, {
       128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt10GqbtUVxPGXCOIM0nYKBntREWfwMoIXUBIQFNMItnQqYiszSEZgzyHY
tusMVEgjnQfvcr91zq92rYayhOu9e9e/qs5e7/7ti5ef/fHFixf/fOe3f718
9a+Pv/rq1dd/ffv3//j01ed/fu/zt34bv/3fP7/Pv/z3pw+/++GbDz75xx8+
+v/57//+z4d/+v7Hv7z/85cfve5nXvfzr5vf5Pe/yd996u9/zhmm/9aj5mmd
n6rPBMfnePVRfn4Oi0f5/FFnm+A4keVHnf+u/D7qXlfqP+GTu7plQjdB5+lv
3IQ+d+V9uiuuPMOV34uJd9Gj/t/pt5OQ32n9p9+iQrdoGZ/QfPobd+UbUtDt
UXuEkKkrOWpv5sT8Xqm/ppXARfs+yt+4K719l27anLILaJok5vfKd6+mlcwl
Rf/pb9xd3hZ2AYHdXd8LjcWp+Z0+g6yVzCXdtyl8G3Sb1lzgqGmSmN/0ntS6
RZuF75HGt0G33QUcH8p3P6knhW7RZuEbJPNt0G1ac4Gjpklifu/iK2glc0n0
bQrfBt12F3B8KN9d4Cu/FWVPpnCR+TboNq25wFHTJDG/6e8lrVu0WWCk8W3Q
bXcBx4fy3U96Lwndos0CF5lvg27TmgscNU0S8/vUMwj9truA6dsUvg267S7g
+FC++1PPIHSa0OeCJ2XfpvBt0G1ac4Gjpklift/kDEKnCX0u+FD2bQrfBt12
F3B8KN9d6Cj5rSh7cvnuLiBoLnDUNEnM7+4CJpdE36bwbdBtdwHHh/Ld3+Tv
Cj2m9bngSdm3KXwbdJvWXOCoaZKY36d+F7RZ6xZtFhhpfBt0213A8aF895Pe
RUK3aLPARebboNu05gJHTZNT8yt0mtDnAouT2O0uYM7C90JjcWp+T3oXCd2i
zQIXmW+DbtOaCxw1TVLye9K7SOsWbRYYaXwbdNtdwPGhdvdT30VCt2izwEXm
26DbtOYCR00TOb+nvou0btFmgZHGt0G33QUcHwp3b3gXCd2izQIXmW+DbtOa
Cxw1TbT8TudFmLVu0WaBkca3QbfdBRwf3nX3K/MizEK3aLPARebboJvwhjzp
3ZWS3yvzIsyaVtosMNL4NugmvCFPenel5PeuvAizoJU2C1xkvg26TWsucNQ0
kb/Fp76LtG7RZoGRxrdBN61/0j0s53f6bwk9pvW54EnZtyl8G3TT+ifdw1p+
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
bwhnSOlzoRs1/yTyFXT7FSv5PDk=
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzd1z/KrWcZxeGjgjoNeyvtLPJhhhBHcAKxCghREDsdSZqAE3A8GYON2JpA
ChvhHN51rXVvi4R9Pva79/Pc9/rz27/4/A+f/f7H7969++PPv/vfZ+///Nuv
vnr/l9/99Pt/fPH+y1//6suffPfyrz/89/3rf33zs7fP//T29revv/3kl7/5
9O3f//zR27f/+Psn//33//X6Y9//5DM/5O8f8vpDnm2e/2Pv8rHPin2lZvtk
p+LuYkdP9Clei/OImTT3IvybyoqmZ8X7teaf7OXJmZ+cP5WHzX3p8+j5CM00
ez+lz8tZ2txLM3NEnzY7V7ClyNtUzqw4SvC29toF7m1qRuTGhYxanbO5l2bm
6I4W59E8I/pCv3/Fdal56t68Nh+tAd1rF7ioyagXdKIZPvUefR7dNSu+XeVn
akciW8QuVvNpdrrIxgtcdG1WWiepDBE5L3heaFX4LpXPQreC664xoejWZo6J
ThfZeIGLdJZqlmjqXJ9Hs/cqz5t8KzhNd9wFJhS5KuYjNNPM8GZGrbJU5FWT
e/X5m1nd9LvO4dTrle+uMaHIVZEhqTuKjhDvWXVcc1YrPegeSWXIBUbVGS56
5JrvrjGhyNXUzFc7Ffda9bjOrlT+NPWgeyR19yajpvzS9EVTk/p3R7ObNMO/
4k6bs236V/fCBR9d6JHm74umB5/0kfCFmEnz98iqm5pMsuKQC/da9XiTaS/4
aMVmKT5Pnf9aHwlfiDs22bV5/mZ3CDbQOxX3WvX4hXs1fbRiM9FZKU4Qf2/y
T2rXzaxIMdIFP15gA71T3QvNHk9xyDW2EWwpsiX1OtWh+rXgn1Q3NTMw1d2C
SS7w4YqXmvda9fgFvlpxZuoMundEFq1eC/55xQzU7NH0o9i7nsOFe2nvC268
zDap/tVaXWXRivkF/7xiBmr2SGl1xYerzGzeS3tfcKOYs/ZRk2FSvSO+q8lR
ohNfPQOF14RWU1oSWhWZKTpixSGpzLn2O0L37yqvdBatfgsIvb1iBurfC4IB
NN8259DsCJ3hoptEDuhO17rVeaWzqOmRJ/nTvG8zA0XnXuOiZm7rPBT3WnWB
5rcV22jd6nzWWZTqmtWc9b60llJ3X3Vis4/EHC7of9UFqdfNnl3xdjOfU5rR
fNI854pDRAameucyFzVzW5xB63/1u0BoVffsireb+ax7rdl3zWcFh+i9POmd
1N81z+sMFGfQGk6dWWes7iOdIcI7zRzQnavzs7mX5kx0j+jXTR7W2XuNIcX3
Psm6FdOufC081cwB3bkXGKOZXbq7hV/Ea+HTFAOLHa34NvW9+jeFnnmTW1Z+
0Yx9QZ+rZ3XOCzbWDPbEL7p/dfZeY0jB1c2dNrtY5LBmy2v8c613xLMpXQmP
rxgsxZDag6JPdSc2fd3kCu2LFbdothS+Tp0npRPNGCJjUzoRvCEYTPNwyoN6
1xcYUmhJs5PulCa3aLYUvk6dZ7VT/azOSe3lJkvrz2nmjPCOYEjxO0KzUzMz
NbdothT9lTrPaqf6WZ2T2stNXa2Yqskbgi31b4oLuxZZIXqt2WWr/lrNWfdg
6tlUzlzgcK2rFVMJTTZnuGLOFTs1M1N7U2hA99dqzroHU89q/YucEcym81nv
+oJ3VvNJ9Y7gDZ2Zopu0x3UfiXtd6EHNsSn96502z7Biqmvfm+rla71zmT1S
vdbssmZm6ntd6EHBTlrngrsEG2tNpjS8+t4UJ1/rHT2r1Pl1JqcyXHited9r
PSjYKeXlJ5kp/Cjm0GSqa9/7ZF8rNtNna3pNZ7KYeWovzfte68ELeZjqIN07
Yg6anS5/r+h3zWb6bE2vibzVM0/tpdmbzTNotknl4WX2Fv3SZKfL36s1kzpz
82xCYzoTxN21ZvT3is7SfdTMw8vsLeaZyh+xl+b3NjMhxdsXckbzTJMtL7Dc
BV+LrG4ylZjzSgNinqn80Rne9LjOhCY/65xp7lH0bCpzUne/4Gv9W0bvWv8O
EnoTPCPude3uq3xLaUnwQ9MXeo+rjBXZmOLzVV6lWE7sWs9W54Bm5tRsL+TD
6u+iQ4VHtC/0Hl/dX82c1HmVYjnha/Fa602cR/hI5EmqC1aZJvJBZGbzdWqP
q4xN+auZkzqv9Hx0hjQ/U3eu4CjNJ4L5V5kmZigy80InprKrmeE6A0Vu6B4R
HaEzpPmZunObGS7yRHRZM9M0g6W+q9mVOrtE94nO1T3S7MdUZgpWabKZziKR
Gxf4JHVm0WuCw3Uv6703GW/VfU0mb7JKqh81TwqOWn2m9rLwmuaTJsMIf+kM
1/vVvwV0dml+aOpWs4rQ8DXGFvyTyp8V/wg2SOnkwjlTuxMdpLP0GuOtuq+5
iyarrHKsydirjH3iC60fwQYpPafyU3OafrbJ4ZcZb9V9K92mtKSz8YkXVtmu
M1a/v8mNqYzV2mtymn5Wd43gh5XORfetdJvSkrhLKkv1nJ/0Tkrn4v06K1Jn
bnZok9P0szofmtrT3yW670mOadZKeS31vam+Ts15pQ3992ZWCI83+0VoQz+r
82Glq2anNDtd975m11VeiXxYaUO/vpwVzUwQvXDhWZ0PK10JnQs9a57UDHzh
c1Ka1Pu60LMiB1YsoTNB9IJgj2v50OyClX5EzogdNTOh+Tmprtf7ajJtyqcp
zzY5vKn5FRuLvbwKP+j7ik4UbJ/qfZ114nOucVSzg7RPLzBAU5NP7tJk41SW
illpftDcLvhBn0fMM5V14nOucdQqb1+Ft4X2dG/qvYtzrmal+UHnlWZR/VtD
5J7Y6YXeEQwmtCGy9BrXaY+LOQuN6b7TjLE6/4W8Tc1f92bq9cqDFzhKa0Po
P8WrggFWfao7TmSOYPJUzqdmu2IVoX/xW0NoUvC81kxznlobQv+ab8XdV7x9
mWdWWS2y5RqrpHYn8kpoWPtl1fv6WaGNC4x0jdt1b17eb/M9TxiyeX7BKqnd
NTUvdiGYudn74jxaGxcYSWSv6Fadhxf2eyFLBUuIvWhmvqZ5sYtrHmzymM7A
y4wkOFZ0q87MC/ttdoHORr2XJkdd0HxqVvqOr8Jj4v2rTtR3Eb+bxGc2O67J
GM2OS/nlVRhPzKq5a82ul7WaOo/WxkqrIs+faK+pZ826mjF0PqT0tmJR3cVi
X4Jtmqx4QaspDhEs1OyCZvaK+QtNatbVjKGz9Fq+NRlP56fedZP3BDs1eUxn
oOCfa9kr5i8YXrxfMEOqjy78TtE7EucR+al3LVi3yU5NHtMZKBj1WvaK+WuW
WGWgZolUf13IN61PkVGpjE3tTmTdhfc3WUUzgNipzl4xf+3TFeOleFXkts4Q
0SOrzhX5r/276mWt1WsaE3Nu8mFzR/ruwjup/aa8luovPR/9ObpztTaEf5tc
kWKGZj/qu6+yWmSv8LjuqZR3BDOITNO9oOcv9JniLuH9VBatuEL4XffjSgM6
q/UuLnBX6pzXfJp6VvTCtfnrztXeF/NpcoXwu8i9ZtatslrvQnOI9rvIpZRP
U8+KXtDvXzGDyL2VzptcIfzezGGhq1VW611oDrnGMzrHUncUvfZkniltNzWZ
yr1X0UCTSbT3mz0lcuZa9qZ2lOKuJs80fSq4/Yl/U92x0rPIsZT3L2hgxV2a
PXQ2ipy5kCdiR6lzNnnm8qzEGS7MX+ikyUKvooEVd2luT2lDM6E+j/4tkOKQ
1O7E964ySvBYitV1TgrW0l2/0vNqL02uE+8RPSu6QGsppfMmf+rvXWWUyLFr
bNlkLcGlun9XXXaN68R7BOOJLtBa0t0k+LM5q6YXBI9dY8sma6W82exfzeRN
VmnqecV4WjPNXV/Q54VZNb0gOugaW+q+SM2kyataAyLTNNetNK+zRedSShsr
fYrfGqLjmnvXWtJs2eRG8XfBq1oDItOu6VnssZkbOrtS+9X61B2hezOlbZHP
K7ZscqN4rbNIaEBk2jU9i54S2dLM5AtZpPvxWm/qe70iWwqPixmKbBcz0T4V
d1/NvMmfmgeajKp9lJqP4FLR9YL3LrOl8Hhqj5czUOhNs0pTz4JhUndfZbLw
oPCR6LgUl4oz6O4Qe9E5LHSruU5noNBbM1u0nlde0Gyz6rWmj1LzucBsTbbU
jKf9qzNQc53OwNTcUncRfCU+R3tB5Kre+wWuELO9wGxCeyIbmxpYZaD43gvZ
tcpzzS1Cb/r8zY7W7K25ovlsk9l0L4tMazJGMwNXe9fZtcpzwSd65vr8zY7W
faq5ovms5lUxtwuMJ+7SzMDm54sMbOZkaoYrv6/O3+xo3acr/4pnm8yW2rX4
zCYb698Lmn/E+Zs51uziC88Kz17gar1ffd+mpzS/PTmD6IsmA4icX7G02Lvo
ep2TwnfXOrTJIaKjxX5XPnoVbm/2tdZPUwNNrtM+avZjs+OE7651qDiD5mp9
R33fJnPqrtE5I/I/xQArptI5cIGRmh0htLp6Vmj7Alc3/Svuq7Or2TU6Z5r9
uJqnzh/hI81IzY7QOmk+q/N5xdX6jvq+gl2b3N7s6xSzie8SuxP5s9K87gud
gZqRxLM6n5/kWErzzUxO3Vez6yrbRV83d7Gap8jzC5pfaVv3vti70MaqUwRj
pHwtfKGzSHuzmWlNZhPnFLsTOtf8c03bumsuzLnp2QuMkWKnJrfoLGoygLi7
ZraP9VHTdyLPm57VvhNssPJ46nubnr3AGE1fp2Yuzpzyjn5PkzFSGat1nmID
Matm7wtt60y+phnt2Qvdp30tZt5k3ZVOnty9+XvkAgOkePKCZ4UfUz14zeOp
Oa96f9V92terz1z1ps7blEeaGatZXTNY07PCj0+0LXJb5MaqQ3VWiO67wNKa
YURHNz0uukCf54JuV3mlu1h3mc5tkRurDtWdIrrvAktr3hM6F3mlfaqZU+tW
55I+j9B206eCeVK5kXo2pTfNpU1G1dyo+yI1nwv6TOWDZr/UXl4lr5rabvo0
1ZsiN1LPprJC+7TJqM1sEX3x/6TPVD6I84i9iN8Uzc5a9WyTwTSjapZIZYX2
qe4grf/L972sT51vmr1TeZXq6xVL6J7VnhJeazKeOIPo8WYHaf1rHhO/NS7o
U+ebZoZUXjX7VOeb7hfhqZQftU9Fh+pnU3zSzMPmHDTHXtPnNZ+KOT/ZqZ7h
BW3r3LvQTYIHUufUfnwy/6ZPm7vQ9xU6bM686dPmObV+mhpYsVmzI1KdK+Z2
wVOCYZo+FXm7um9KA0KfTdbVHtR9rfX8imymmTbVTSmfivevcmzVlUKfWs+p
uT3Rg9BbSidC/1rPq9k2ZyLYTHCp6KZmf608Jbq1mScrPhH3vdA1T86Wynad
D4LJdZY2GUPoXHCp3mnKC6nXKU+tmCflU62B5n0vdI3Yi9Cq7lMxQ505Om+v
cekTXaWeFZ0oeElo+0LON+cg7qvPprNCs4rgZ6E37WvNGBf8KDIn5U0xT8He
wqcrbrwwB3Ff/X6dFcLvTQ3rGV7OsWt+FJkjfC08kupBzQBNbrwwh1QnNt+v
uUL4XfhOzHnla+2RlR9FZjYz+cn7UzsSPk1pUnSBnkOqE5tnSz2b4tIUP2iO
FedZZa/WsO76J7NtdlDqzKnPTO266anUZzbnpn3XnMOTXtBea95F88+qg1Ia
bjLP6pyprml+pj6P5kaRsXpW4l7iPCJLtdcu9MIqKzRvaz5p8meTeVK+SH2m
Pk9qR6m7r+amfdecQ5OBL99F8+rKj6nfJhc4pNmtqXnqz3yVHWl96rk1dZI6
T2ovTSZv3kXzqmD41LO6s3TfrVg0pR9xr2s7WnGImJXWSeo8qb00mbx5l5Q3
RfZqL2uW0H3X5AShH8HDK1bUvl7NrakT0WWpXWivNe9yOXt13mqWSO3iAvM0
2Ul7qrmj1NlWc2vq5FrernhM30VziM433emps4m+a+5dcGyzv/Tcmmy54r2m
Ni7k7YrHLvw+WmVvau9a56nvav4OWr1ecUuTh1P90vwd0WSklM513q54TGhV
51uTqYR3UvO8wBUX+K3Zs6uOSHlN70t3tz5bM29XPPYqnCw0LzpR5/BKP5p5
VpzZ1JXOLu33ZlbrmWv/aq5O7f0aJ4u5rRj1VXJJ53ZzzkKHTS8LLmoyVTPH
Vt234uqmbpucrDmhyajNfryw3ya/aR7QmkzN8BpTvUoOXO5ZkVGCXZvnFzPX
WffknK+y3ya/ad57Mv8mWzY/U7NuMwf03wV3Xfh8sTudsU1GfZLV/wEBdJln

       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1k1Kw0AUAOCgULyDq+66K+g+xY0HaA9go+iqINSFdFdwL/QUvYK38ERC
W3DhppAwP52ab5HwJQyZN5P3XjJ8fJ2+XFRV9Xa1P02b97vlslnNBoeL52Zx
e7O43HP9exz88/1VP9Sf9XxwP/nr7cd88jTe1NfD0VF3HR/iY3OF3G8Tf5vx
Xcek2NtYscXan1h51fWZOefKmZ8hMaSo2RT5GfKOUswV0jdi9ZxY68pZv6n7
/7k7Z5/vs/u2P7H6Ver/NM6TA6l7qZ6f/7tQQpz8P6xmubRcKmEtzH2zmuVT
5VIJMTNz+/otIU4u3/KHmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmbk/3gGwruvw
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "1"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzVm7HKbllWRQsVsQMxNxDEzERoU6svIr5AGwuWoFGD2AaikZlU2M/QmQ8g
mBgaiQ/hUxiJ1WDwBy4YgzH3vWVwi69+znfOPmuvNdecc6/vt//8r378l7/0
1Vdf/c2vffefH3/zt3/4059+83d/8qu/+J+/+OYnv//Dn/zydx//4X///eLz
n37795/+84/+5euf/d4PP/3zD37zR3/9rz/49Mc/+50fXX+/Ptv7fPz79Zk8
y15P3mX1rNVzX6+nrHOVA6vc+FJ7+n1491XcXly/ykPyji/i9iKeq3uucu/j
5+9aw6f/61+5xsaH3J9cX+5T4vP6nv9fvvs6N+w6X8fhc777dR8bN1svq1or
a7D4/PqeXyqXSs5fn//9t779+h//+z/+4Oc//7evy2e71x/jbO/58Zr/+rPf
/fRPv/L1p29/49c/ffxM7lPi86Xu+X377nWfVW6UOL/e09fvfq3z4zUkbtd9
rnoh15daI2soXJfErfDngoc2l17n/6rXk1qwvfVLxdb2oNf3/L59l/AN2yMu
Dla4zYs9te+1qgtSI9YrIDG3vdjmksVewuctryA8vGDXilO94DxX/yW9nnAA
q7M+3vNFndqaLTroS93nxXdX+3LlhuWBK82y0rn2M6kLUrNXDO0arNZY9buC
vcXPJ9y+YJfNpdJHVrlX7rPSU7YWSmyvz0UHlXuW+7z+rsUNshckt60WWGnb
F/VIuOtHDLE83GoKwpnJOldYYbVM6QXku1eftbrmiucVQ9JHLP+xZ8EFQ2xP
v2J+1QJZg81Pwntfe56F077+bsGNK4ZXHEievNC2VueWXnDh3rWeK+aWr1rd
UXz10lOu+rX3XM3bkJiUmF/va/tO0XErTU16UNH4xCuwOfDifMF6nt83/9/y
q2svrj5e9K/lcoXz2B5ke6jNeXJNwR/Lu6xmv64h72J7kOWlhLd8vJ706+L1
XXEu+bY607G1c8WN9CayZqLXLu5ked3K8yR7+qXOIFacjdSy7e+Ww7y4ntQv
6SOWx9r+W3iR3cfSOyzmEE1qMa14XHbvCC+yuWd5C+Fd9hzw2heiu0mNEPwk
XLTEwe5R4bRW/9rvEv5jcdvOBpT6st8tny3mlDMvUsulpkj+F85ZtAnx32xf
s3pkpS/K+YLl82R/r2usB0X+bvHW8hmLjWRPy6yL7VOkx636ka0pi9skbvZ9
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
fA7ZC/IuRccVD5zkBuHeloesPhN/xnIPO4v+YgbjWj/RBQW3rV4gOGZ7E/nu
ilvaHLN8zNa+9VLs78Vs/7Ka1/ot5LmWyxXOX9699COL2+V3giSGxXP7nJj/
Og7XswhGlRmMwm8tblu9YPHKzsCs/EnyXrb/Ft5ouSjRDnZO2Paya/3l956k
t5a9WMWZvHupX+sF2T5iz2s+vov9jdVrLWDjXOJgZwmKRrb4ZrHOzqpZL5Fw
IYInxSOyvdhqtMKFLCYTfkLexfZTgofkPhYHLCdfcX7Cq8uZ1EqrWr+iaGrS
01fnICv+/yIOBRtJrIruJj3Rzt2Rvmlx2O4d4X5X77Dn/kSjkbyy3j7Jh6t3
2ziX2blVbZa8JTEvZ82Fh5SaXeGkPRewv1+wmteeSa34/4s4WJyx9W41+Kon
Eh5FeqKtHbJ3JM6llq/725whXJFwBsKxC3+wvHdVmzaHradk393Gh6zZvu+q
xu3vESyft/5See5rjlHWU2Zd7B4RfW1xldSCnVkqvYO8O6mRovFLzrzIpeKz
2X5ttcOKi5I6sr1+9S7Wx7PvSzSpPZe03rWdY7EcktTOintcOEA0O1lP+e1A
8TBXfd/mrT1vIhhYuHfRLBYrrM9jPR+iE19oyaLRCuaTHLDeVzlTsBhCeqs9
kyW8xebDyh8o80sWJ1e+EFnPahbO+v8ktlc+WHywM0XW47Jaj+zvyiO1GEL2
vejlF7NwlidY36zUoL1/OT994V8RzCden8Vw2ytJvln9WDwNgmNWU9t+XTDc
8kaC1cXzsTlgfZVSy1a7WY/iehfSv6yms+9i5zqufbQYa3sx4cmrXlzOoMk1
FvNLbAluWG/HrpPs14qXWg+T8GpS48WHsfhm+5f1c6412B5BarloOqsxbV6V
OBOOWnCG3JPgp61rgtuF85czX8LPCb+y6ym8rpzdFN5Fnlu8HatxCi8leLXS
sGRWltQsyQfrIVvvgqzT6kSrfVZnvlYHld5tzzII/pRYlX5azsts/yJ8z+qL
Fcd7jcn2veyeWj+z6GV7T4v59hryd6tNyr4XTUEwoXhrZH+tTiQ9t/Dhsl8k
hpbj2foicSb1a3W6XT/pg6RvEi5hPYHrs51zLtys9FnyXiudWHiLfVbx2F/o
KcIxrB4h+265jcUHwlWszrX5udKhdp0WE1ZcZVW/133IeZx9dxtD2/sI3pJe
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
jqIvLP+0XG6l7+w7rjTyyt+w/b3wq+t60uNKrEgfLF6KjX95luWZRR+RGrc+
YeGx9r3sHpF8K5rR9rLr75b72Zq1usbeh9yz8FJ73mH1XflczrZIHRV9bXu9
nc2zvo3lb0WDlzVYrLC+TeH8ZK9t77b+j+XJdtaxcBvCn63XYXkOwa5S+1Yj
rHwVkj+275Aat14B0XdWC5A9Jf3Uck7S38k8EsGE4l+RvVjllZ0zJGuwayOx
JbNYlmuVPmX3izy3nKcQXCX7Zc+YLM8nPKfkVelNL/bd8meLJ9b3sJhg/dLC
8wtnJprL5m3huranE466yk/SgywmEC5H7m/z1nL+Fb+yuW3n2Qhmlnov8bQa
s3gCViMQXkdiW/adrN/qI8tzCiaQd7d9jWgNi1dEmxAv5QXXtbyaxG2luaxG
tvtVzuULzpBeY3FvVfvXc22fLb6HnRMme7rCefKOpB5tvll8KDzW9nqCsasz
9HJ2TO5TZiMJftpeU3Lm6umEq5R5g5KrJM6EKxIcs/rU+tWEo9rZP8K1bO2T
a2zOkzgUXW/7uMUZm6t2Lrr4RaWHrniU/byaB7PvTuJw4aHN8ysfig9mPSW7
dwVniJdVen3hNsWvs743yU+7F9aPIri90uAkH8h3yzU2/1eadKXBrb4uPdR6
v5ZTWU1k58EI77Vxs97ylefFvy34YD1Gi88WP61GKDVoz+LtXhSvo3i/1nsn
OWM15osctt+1+tfyH7un1luwOWlnBkh/JDmzOgsomojwt9exKrzUcgzy3Ctn
Vl6WxRmSY7bXrHh+mS8t7269C7I2sr8k54tf97p2XvQCgmPFfy6xXWlhqy9s
HtqZPTtvQ7D9hS57MQ9AenrRdGRfiHYmnj/pI1f+rzhG4a7k7wUnLR5e19uY
l/wnuXq9y6p3kL+/4P92Ro6sk1xffBsSH9uvSR7a+1sv67UWs7Ei+V84DOm/
Fk9Kvyg81tb4as7BYnLJVVuDxee3/HDFhSyWlt6x6t3FayJc9LVnRXCYPJdg
BZnDIdy4rNP6IatZINv7Vs+64kn2y/Jt2y8Kj7Xrt3MX9lysvK/VI7a3Fh5l
86FwfstbCvaW3m2xl/Spcm5i10M81dJ37JlUmbcpvzsovlapFzuDap9F9ojw
nzK/Wji21SmEv1mOd/VKu35SX7amSj6X2ZIyU1p08VUvBa8KPtjrST4UDU7W
QzC2cE6r5QtXWXk7lq/a+BD+RmL1Yi7dYqPtHYR7F0+77Nd1f8KL7DkRwXNb
U+R3Q9d7ERwgmF/OrYiOu9Zcet/Vxwk+2Ottj7N4UjhPmZOxtbbiKnaPrGYs
M+pX3pL9svdZae3S1yyGEy1jOUyZZyh9udRy+b0hmZ+3fLX8xofExOpikhsE
Zyxekdy2OWbznPRBy6vt3tln2bhZrlK8PqIZy4w64efXXlvNcj2X1FfJbVKD
hJ9bzWuxmuS59dksX7V9nPgbpX5X2pnkG8FnwmPL3OCL/lX2YuVhkjNQy1HJ
XpQ5EPtbM1Jr9neRpGZJTCwfI9zPegWlvxMcLrqJ3LN4cdd6bN8petnWS/kd
1vWskqvF01udj7/gz9e/0r/Ie9k+aPGn4OG1BsszLcewPMp6ROWsh3AMOx9i
+37RU7ZGSgzLWZvleyvdWs5VSe8jHoX1gsj72r1Y/VbUxpzwf4t1pH7J+Qjp
X6uZE8uRCmZajl3mGMnZHME9kieFf9q6K3lIOKf9bukRxYsrPcWujXAYuwZ7
zkJqk9R+iSGpNbIe6/8UXWwxrayHXE/646oP2vUUjCXapOgF0u/I3hGtZ/Xj
yp8nGs3quMJVyr6TdVqe8Lpvkp64Os+94mD90uKJlVgVfVFmMq33bvPkWr/t
L9d9rv5Yfu9gccPmxoWxRONY7UB0JdGPthasH072hdQ14SHkM8nDVY8gNbia
+7KYY2vEapDiRaz4gz3rWfEQkgPWsyIYTmrc6rgX2tNiI/Fn7F5YLWP91RJn
goek15A4EM1F+m/xoKy+I7h9/Sv+HukRhBsXvkR6DdEptgcRnlb2pfgJNq9K
D7JxtnrH1g7ZU9L37Tpfa0/radjrLecnWEHib3Ov+F32M3mWPZexGGLPPsh9
CG6UvmZzpsx1XH3Z5liJSfl76e/kXQgfu2qTnIWROBPsJRhr9TKp2cLTVl43
8UzsfIKt5aL1CE+2uV08n/LZ8pCix0ltXnEm+2uvIb6Knc2wGsSeI1gfr+Bn
mfcjWGR1E+lfVue+qJHCQyw3LmeyhSeTmJP+W/DT+htF69k8sTqL+FrXP4v5
13eLJrX3tJ689T2sr072pWgii4fF51/NZtieYjU1wTGrUwqer2rE8hASQ5LD
V8zt/lpPvnBUgo1Wf5UaIXlr10bibPPc9ia7X9aXsLzF+jyWY5P6tXzAcr+S
A7bfFS1A+rL1w62fYPvvip+UfLZc1J5Xkj6y2qPCVQpHtTVCctvWCIn/FStb
L2U+x/Y4yzFWOuLaC6v1bE6SfSH8quD5ix5R+prtZeTcn9S7XX/R48WPImsj
f7d9x87+2Zkoi8n2fJPgmOW35L0KB7Y83+rxq14KZyB4Zb2v4pWRe5YzSouT
RfsXr+D1Z8srrti+judK75T3IvhMcM/O0VkN8jnzlvgGq/N6uwaiPa12s3Nr
RGfZ75KcJxi44uGlL1jMt/3d9sH/AUv8UI0=
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2D1KA1EQAOBFQQQvYGFja6n9LpIbRCxshPWvCgixELtcIeewt9cbeAOP
YgIWaYQsebPOmq9I+LJs9u2bNzP7kuObx/HDTlVVT/uLt3H7fD6dti8Xe8sP
9+3k7HSyu+Ds57X06+FtM/p4qw/mV8376K45uv6qL08+61X/ds7q8a7ndP1u
13G7utRcSo3VNQ7rHI++t4g1jbifUvGJWIs+c6xUnDeJW0SsInpIqbwtFbeI
nlyqx0bHpNRYEXGIHjciD/vsk9F9L3p/En3NiJzPUNfZ8jPb/jZbPfY5xwzx
3GQvEV0vf1WD2Z4vQ5nLf62XbDGMrrVsz8Gh94EMMdzmesnmzL93Mnjb5juU
OA99XaL/12LW93jolofMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzM
zMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzM
zMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzM
zMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzM
zMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzM
zMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzM
zMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzM
zMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzM
zMzMzMzMzMzMzMzMzMzMzMzMzMzr+xuEg7wC
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "1"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzNm7+q9VlWRQsF6RcwMmowMvMPgtDU1z6B0IZiUKIdNQhtg2iigS8g+B6+
gLFGiu9g3pmBgWA1KNxkwRiMuW8ZfMWpyzn77N/aa80151z7fP9P/vxHP/6l
r7766i++9+1/fvTNX/7+T3/6zV/94a/84n/+7Juf/PZv/eSXv335t//77xev
//rff+3LH/3mr379X//9N18+vv757/7OD374r19/+Y1/+eHX9u/Xa/tdZP3V
OmVNu8+y5xfPQtZ58frF89o4rNZ5kRvlu1ax/a6+68X5Fkx4kWMvYvuijr5t
E1/+79/1d/KeEtvru+z65VlIPMveShxevOfF63Jeq8++3kPJjRcYsorP6++y
cX6xzmtcehHbF3V3vf7Pn//TD/7gH/7469/7x+99Ia9XuPFxzR//3Z9++dk/
//qXf/uPv/+6fJfd/3W+H8/oM+Pw4vVr/F8972fmzOvc+PieFYaQ95P4WD5p
v+t6Tc6IrPk6t0kMrz2sYvuZNWj5zAqfSXxszpDY2rr4zDgUTvVin6/zjbxn
lTNkDyU3CIZbDLn6zrXnFRbZ77KYtuIqq9wmZ0HiSfr7d+XTXjEnPc72QfK9
JM8t17W1YM/6RRyuNQmnIp/9rnTBSrOUnLF5aHODrEnwgaxv/26xyO7B4ljh
ADavSn6u/LqSD695V5lTEN5lOXnhw2Q/ljOv+GfhFZZn2vVfe1n2HMmzlHMh
GEj29rG3Xu8nOoJwjOu7rr9bLXP9nfANW9cv/EyLJ2Qdy+fJ2Vld+YJ3re4e
2Fq7csZy149/J/u037vSLBbHSh1Z3f1irlF0zcp7txj+mvcSfLhiSDyWFZew
fs5Vg+QZCQew/bfUtcUTwjdIX74++0ILFIwqvNRissVJe162piwmE/yxvJfs
2dYvybei0wtnsByJeH2W/6x4b6kpEivyvaX3kfhY76vMiwuelB5KegTpKaQe
ixawfc1ikcVA+/eCmS/6C8Hbgief6ctZrWT1uI3nx3MkvabkFTkvokHIOit8
Jpyq4JutBTunJn3TxuqK/yoPS72QuFlNQWJifWZSOwUDrxwgetNiJvExbH+x
+GM9xlKbFvMLF7VxsxqWnO+1fskrkj9XbpN9Fv65miOTPkLeY/dDPJmSq1dN
ESx6UYOreUrpKXb/V+1Yj4vouBWW2ty2GmE1D7J9ufQg6wmUWrBa2OYh2SfJ
MVuDBbdJ37GYT9a3XLfMVa0OIvOd1d0k63uU/kjy8EU+FH5bsLrwTNKLX/jP
ViPY/ds8JOu/mOcWDUL6ZsmNcifB6sEXXHRVI2RWTmrkek/hG3a+WbhKqVkb
Z/K8n/nsBPNX/NZiEYmz7TVWP1quUvZJ/k4wquDbdS6Wt6y0ldXC196stir9
y3ID6+GQurNxIDlgew3plYU7Ebyyesfy/yv/7Xy5eBTFiyv8x37W9iPC2+06
loMV/mNr5NJuNk8IJtt8INhovaCVH2W5erlr9/o+UrlveZ01efYrB0o+rHR9
4Z/Wg1pxqmtvV41bj8I+O8mxwn8I97bna2uQ5EnJgRVWWO/U5ol9TTyKlQ9j
7+Fbnmb9KxIT0r8sPpB8WGleiwMEr4oHYvWd1QiW85B8IBhlOVK5a2q9GrKO
xV7CN0gcSj8leLLS0QUrbI7Z/Cc5Q3KAzNQsp7X8wa5j9bXVuSS3Sd0RnWV7
rtUItl9b3LA6otTgqp9a3F7VBXldcrtwA4KThEuQcyd63OaAfT/JSYsV1gMp
OGnjWXwGG8/idZNaIx6ancFZTLCYQ7DLap/Cby0WWRwrfJv0WdtPiZ6yHhqJ
Z8EWktv2vEpvWnkLL+5KXe8pOo7kG8EQe7eW4JXNz6K5Cu8lcbDnYn3FMgsg
PdfeKS0zheKxFHxe4YbtrXYWb2eU1rsrtUOwxeaS7a0ES22eEM1C9ILlzORe
QfE3yFmQ9a1Gs7Ngey4rvmrx03pTlr+Vu0ZFRxM+Y++Y2dek3i2mveYJds92
vlZ8P8shbU8kHnLp40QflXop2pzoguK7ltq3HvvquWx/IVxixWFILhXMLz3a
5qflM6R+yx0DgjOWv9k4XOuU+rLcnvTcwtlKPpM8L/y89ETLQ6yWJL3b1uaF
hyteTfKZ9Cy7n/JcJFblXoHtm3afq9dWz5L3k9lZuQNZ9lZ0tNVitmfZ+Fs9
YntZOTvrC1muaDmVXZP0Pjt3I/4J2YOdo1l9RHh1iRvplWUWRnhjiVXx7kj+
lDm1xfziOxV8IH2/PLvNvRX3sz3renbLmS33K/eFSE8pdzYI/hRuTHij1Qtk
fes1lb5pdTHJGYJ7FnNszK3XZLFu1QtI7hHMIbzCxs3ySYvJK55pcamcka2X
MscseGj5YYmJ1TiEd9lYFfz8GE87Vyr30Io/YHnIhZ+l7oovUXzgou9sDFd3
QsgerF4jXkThBvZ8CVe0+prktvVGXtcL4eF2PyuOVPhM4RUEVy1PILqYxJnM
fMt8sNyrJHrhhQ9A8LPM12zvJjVl8/yK4epOSOkXRR+R71qd7yr+lr/ZexSE
e5R6KXlrZ8GWI9k+Uu4qrPTgKv8tT1idO9mD7ft2hm5z2879LTdYaepyFqV+
i3awXKXkOelrRFMQLLK4TfTFFZPi9V3rFN+s+CSkxgknKbzuBZe2Mx2LAyT/
LU8omG91vb1LaWfo1kMjM47CAUhNld5RcHKVPwU/rcYs/kBZ03rdVl+80DI2
PiudXjDK7p/gmMUEy6UtJ7TnaOvC3imymP/iuQjPJ/zz6q3X3y1/Izi20lak
vlY4b/On4Kflb5ZvlJgQvk32Sfoj4UK2z9r4kDOyeGhzzPJtkkvEf/6u+hQ5
R5tv1pMsGm31XGQuT3wYywGIv21rZNVnrcZZ3cOxM0SLn1ctl/tv5ExXPcvW
oO019i4Zqc0rPjbOxDcjObnyNMpnrcZZ9anSX8qcZcUbV89le43dp63f4qNe
WGf7LPGgyNmtzmV1J63wZPJ+i4G2Z9n5rO3L1tNY5WHhLQWHrX5ZvbYaZ9Wn
7G9qyLyg4F7hjfbuDcGWokcs5yQ5b3PYzphI7dtcIlrG1j45l/KMFhtJPlu9
dn1XufNM+rL1NMizkzws/kDBwNIHy2uCCRbrihYrsSV4deVw4Y0Wt23tF2+B
9IvVPYrCk8nzlh6x8vquPZC4re452Hxe1dS1n5LzBUOI7it3oe280r4unslq
D1aH2tmBPa+yf1KDJN/sfSrrdV/PXuYLRTsT/Ln2X3jyVaeW35a8sn3f8m2b
bxZnyu9HSu+z+XnlzPUslm8Un+SF/2l5vj3rMrspPIp8r62LMg8qOGw9FtvL
yuyy4NX1nuJnWo+X5LOND/lem1eE017PZfl2uVdv9aa9l0J6n+U2hXdZz7ng
2LXP4n/aHFs9y4o/XzG3/pvtNeV8CQ4XX5r0MssDLfe2Z1Hyqswibe0UfCg4
b5+3/I5pNUcgz1J8FeJ7EJ5MZgQWr8jvv1b8p2jbckfFPoutBXKOln8SnF95
nhbbSV2s5j4lny0+k/iTGFrtsHqW4gNbvlowluSM5YQk/iX3rC9E8NzyKMKR
Cg8hXMKuSbRA0UoWJ1e1QHqcXdPeSSO1SeqIYDvJw8J/CuaTerHYvvKcCZ+0
tW/z0/rA5EzJ/NSe9cf3vPafbV3Yc7dYZH+fVfQ7OS/Ss2xNkV5gscLO+KwG
sXVa9NpK85bf6Fm+VzhPwfzCVUj/sjOO1eyM1H65E2vvJtm+v/Jn7DrlrtSV
V6QWSGwLVhPOTPT7Si/YWSTBNHKOVssXDWIxtui1lea1tWOx3eqL4l2v+D/R
ZYTTWs6w4pmFE644s+2ntl8XnCx+cvEHbB+3Pi3p9as+S3rQFR+S2wQ3LHYR
3UHyxP62gvTBFfez51hmMZbbFI/9Nf8nvX51f4Doa5L/5D2EE64wn7xnNTsm
sSX1RXouyZlVTyG+btGbllNZvUA4ifWlST0W7FppcJKrxAeweGh7H8G6wkut
XiN4SHp34f9W49tYWS+XcDnr55SZqfUwbb8jOFBmnWUdy/9tT7F+xbU+6bnk
e0msCv9ceTUFu0r8yXOVe0dkz2VN0k/JOoRjWz5W8M3yfxIT22cJ37D9/dLO
pQ9euoDUqfUwiXYm87trz3amQNaxZ23rq/ictgYthyT1Yp+lPDvZg8WulV9U
7rbZ/mjvMtmzLjhvcYPck7Gxspx/hfmFb5AYljskq3ywuFd0NOEkRNfYeBbu
R+K5+v1C4QArrCj9l7zf6vGSt5a/EV1JtD/BTMLTbHwKVyxarOCA9Qeu/Rcf
w/KT8nqlN0s+WKwo+UBiWDz20q+vOFh+Un6/YH2qFzVun6Xo4qLFCu5d65Sa
Lb6Kvf+zqovC01Z3k8hzXetbX71wA6uLrW9gOf8KE+wZkb5M8I3gTKl3UteE
463if3G8ggmrs36hMUlvLbrbYuCVD9a/JbVg+0XxN1b8n8SK4LDNN9tziRdh
73WT9a/6tf6SnUva15+JCSQfSs0WvWk1RdGh1h8mfcdy7HK+K41p+ZLlHkXX
rDQ+mWFdmFl4BdnbC86/8jesBizxsX3zOqNy55b0KdJrrF/xXWHCC1/X6our
RkiOWR1K4k9qn/AryytWtWPnMsTTJs+74jYE223PKtzV9n2rAYsWKLlHOJX1
W4jOsr9ltp6/5Q/k/Veel9/zvvAxLL6tfF2rNy2vKN4dycPiQxb9a/Uj2Sfx
N0gcLP8pmpRwzut5r55ltT/ZM5lBWC35gv9bPF99V9mb1cvks+SMiL4gHNLe
sbH6q2DCas5ia3aVJ9a7u3DArl94o8U0wnuvPdt8Xnk4pL8QbmP91RWOFb1A
7gURPlyexZ5X0R0WD+17rH4hn7Uesu3R1i8iMS9eR/k9mtVKhMOTdUi9lHuM
hG+Ts7Z+lO0dBXPsZwkeWqy2+GDraHXHgOzf1pHlxlctl2d5fbfEehdlRmbx
nOCA1WgEG4vXarkfqevyezTrhZKYWF1j+07RpDYOhL9ZnWVxxvob1mtaaXly
7/TqlSQHyvzR6qmrjsg94cJvybOU91jMJ/u3HMDy+dUdHoK3ZH3rta7mVpZj
l9kT6ePFGyc1SDSL7XcWZ8j6hCOt9HXR9SVP7GeLPiXcjMwfV5qrxMR64Nez
rPi2rXfL94qPanXrCw/H9o7yj/C6wmes12Fz3s4Rrp5rz47gw4r/E5wndU18
Fds7yutyP8HOnUk/tb3ePuNq3k1iUmrB6pHSo0m9F15HtFvBYevhEJ5geWnh
NkVrF9wjnIpgEdHjK0/b5qfl3vYsrjq69mb5zAtdb71Q+5roqddnYfuO7SkE
A20tkN531abt44R7lHq0mFy8gtccsvjthCdbXUniYHs6wVKrGS0fs5qCnEvp
j+RMrbYqnmTR9YU32viv/MCyf3IuxaOzey69zH6vXX/F222Ps3hYvLuiv2y/
Kz62nZWT95RZxvW8dg5l+/Jn9neyfztzIb3V1uz1XeVZ7H0wUsvFAyn7L7X5
QmeVXvb/YX2LpSvtTHKm+HjWdyp60GrewsFsf7y4t43zamb0mf298OqVx0Xq
lOT/avZHntHeJbDeiMXh4j2SHHjRC17Pelb3EAg2XuduNRrBTOu9rPCTPGPp
mxY/rbYi86zSI6yPZPe86u8kf65zsTzK3mmxGo3E32Ip6UF29m3xgeDwqneX
+10Fk0uffb0+yUl7r9jq9OLFrfBzxTFW9wFWXoHtiQVjraYjnMH2d+IPkH5U
asdqpRL/67MEJ4vGt3qt9COL1Vd/sTzT7p+cNemz5LzK+pavFuyyHLhoQIuf
ZIZYvKCiT4tXYDVLwZlrb/Ze98qjthh75RXBOss/r/iUsyh+C8k9Egcy3yf9
tNx1sXMBGxOCXZavln3a9e29C4LzK35r8836wIVjEz1r685iF8EKy/9LLyj3
Xmx87P6JX2T7vuVXVmusMN9yaYvtJbdf+N5Ws1sstXVt74FYn4R8r/WFCNcq
esHmMJk7WO+0cGx7P4fUGsEHEs/SB4uWsdrTzpLs/l/M0Ugvs7VZYl64E8Ef
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
NLvtoUXnWm1udf2L3+OQ2rc83+7hhU60PPwFZyb5ZjnAyqu/3k+w2uJnqUFS
O+V+SNF3hLva+JDzKr4Qeb/Vv4UL2Ryzd7esbrXvt3G2PtsLf9Vi2uo18alW
OpH0O/K8q9n36i5o4TArz8HOE+1zrXDAapaSV9a7eM3VC3YV/k/qlzxXub9a
dCt5/7VP8uwWt4l+fIFpK8y/cLv49uSMSL8ovhD5VzCh1LXt73bmXvgV6SkF
B644rPosORebJyuubl+X+4RWl1nOTz574WG5H2hrwT474aKkT9n+UubFK85v
c8+eaekpVkOV+7elXxRPw+oR68lYTCPYQnDAfpfF8+Kx2zvelquXPCG/BbBe
n/0tieVspUYI9y6abqXxy1zb/t32KXuOl+4jnqrlWuW3Equ6I2vaeyaWoxaf
xOak/f0RiUPhFQRP7PNaj/01X7K6gNSgxRbLN0g+F+5k17RzSYJpFqvJOrZG
iG61nNn2Anvvi+R5wVuC56XuCJ+3fbbgIeHApOcWrVR4Pslhcr4k/tfzFo3w
gi8VLmd5ftGbxMezsSW5Tda0vMviHsHqws1WPv+1Z8LlyFmQe18W6wreWs5j
627FS62vcq1jsbFoBMKxreYiOVPuJlmdaHnO6j0kH2zeEtwj+UYwyuoLm9vW
27F3OV6sY7kZwW3Lu4j3WDi2zbfr72SfFpcIBtoaKby09Fyr11YawX6XfY/N
JcvxSA4XzlNeX7VMdLH1cFZ4WHgRqZHiO101Zeu0rGO9GjvfJNhS7ssRvrHC
HBufghUFr+yc2mqKlV4rcxbLH1YzfZsn9v2EM9t7fStuYPGz+DYFD62XZfmY
7QX2d1LWJyF6ucyAiNYjOnqlJS3XuvZp88HiXjlHi+e2j1u9Q3xp+7sbkm/W
Jyy1b2Nl88TijH3PqvfZuS3Jk1UuWT1INIs9O9K/CkeyaxZvx3r7qzuQVkta
rmW5B9HUZM/2HlfRpHb+vvJkXs/sbE7aGin3sUncbMxXvbL0vuuzFk/sa5JL
loevPGSrKUgMV/x8lT/EryjPbtdc+a6Ex9r6Ldx1pUkvXUBm0FZrEM5GYm75
IYmD7bkrzXvtwfJ2W0elp1iv3nLFco4EH2w+k7it9Ivtm+T95O7Qam+kduz6
Fs+v9a3vavmh7R0l96yOIM9CMKT4J1YX2PcQTk68zdIHi76wfN5yIXK+xa8u
XNFqq1Kn5T4A4SplDm7xyvaIK7ctz7TvKVrVYhHpR9eZlt9VFQ+E5J7Nn8JF
7ftJLhFdUP7ZvLJ5QvLf6oviFVt9anks2YPtiascJrG1dwPI+tbDLLy0+ELW
u7azAMuly28iCBYVPmZ1qPU9yOy4cKoyf7HnTs6UPAvh3qX/Wty2eyY664VX
TM6raAdSIy94qa1H62lYjlriaXOGYJ2N23W+hUdZPlbyk2AXmVe+yPOVFr72
UDgDmb+s+Cepnf8ByYq1LA==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2EHKreURBOAbJUGyhkwyyAYMOLyXbMFsIDeQZCIIOhAHolPXEbISXYEr
ikIGTgL/zzlv91PfVwPlXCj69NtdXVXn/+PfP//0nx+8efPmy49+/t+n77/6
yxdfvP/6r7/75R//eP/Znz/+7MOfP373v/9++fzbb37z7g/f//vtf37609u/
ffLm3e9//OHtu399++7Xn3+N+X+fX4J/Sf1Hvve1Pbyk/ms/v+Rdj8z5WXM4
0f8j83+EG8/63mfx/JHvfdYNvnZHJ2b7CP+fxZNH8IL+POstJzjw2u864RGn
9epZHNjyvtMzP4Gf9KYtPdm6wdOznezntCZv6c8J/TzN1a03ns4bk75/IqtM
+vJWn1tcelbN0/o/mSe1fk7/BnmW/gj+ciIbTL5xq58TPU/mtBQ9Ebg0WfNZ
WXTSl4V+Jn8XCLllS8+FN27N/ETPW7lI1hOBS1s1td8FKXwW8Fu55bSeT/5N
YytvnOhH0FUNL+9OqCn8Lkjhs5ZhtJz/CE+2uDF5X5P6n5I9mvN3vWzrd0EK
nwX8aR2efJfwNw155poOJN6ItjuhpvC7IIXPWoZJyfkyNybvqzl//ka03Qk1
hd8FKXwW8Fu5RZ7DaR/ZmrmsA+ncaM53fhfIfNYyTHrOF+568r6a8+dvRNud
UFPAaz6V2Ftz/nPrCDOXdSCdG835Wfjm/Mdne6U5nKgjzFzWgXRubO1OqJmI
b86fzy3yHE7UEWYu60A6N5rzr42/ar5tzj9XR5i5rAPp3NjanVDzDvir5tvm
/HN1hJnLOpDOjeb84mXP2npLyhxS7qs5f5cbwu6EmsU/1+tTbk3TEEGftZnL
OpDIDWF3Qs3iszx08i0pc0i5r+b8XW4IuxNqFt+cL7xLyOTazGUdSOSGsDuh
ZvFZHjr5lpQ5pNxXc/4uN4TdCTWLb84X3tWcf07z5ewxyQ1hd0LN4rM8dPIt
KXNIua/m/F1uCLsTahbfnC+8qzn/nObL2WOSG8LuhJrFZ3no5FtS5qDp7el3
CXeRyI3m/OKb8x0NScn5r+25Od/hRnN+8cLtNOef0+fTevuSnpvzHW405xff
nO9oSHP+vB8J2WOSG835xQu305x/Tp+FnL+l/ynZozm/OV/GX+nWNA25as4X
NF/OHpNzEzxaqFl8lodOviVlDlsaK2iIoKsp3GjOL74539GQu+V82Y+0XQva
uMUZYZ53xgsetKU58hwm70vTEEFXU7gheLRQs/jmfOFdzfmOH2m7FrRxizPC
PO+MFzxoS3PkOUzel6Yhgq6mcEPwaKFm8c35wrua8x0/0nYtaOMWZ4R53hkv
eNCW5shzmLwvTUMEXU3hhuDRQs3im/OFdzXnO36k7VrQxi3OCPO8M17woC3N
kecweV+ahghalMINwaOFmsU35wvvas7f1fPm/HlOCjws3vegLc2R5zB5X5qG
PKvP5vx5TgpeVrzvQVuaI89h8r40DXlWn83585wUeFi870FbmiPPYfK+NA0R
vCaFG4JHCzWLb84X3iVoUaKGCLvQ8MK9yDWLz/LQLc2R5zB5X5qGJO6uOb85
PwUveNCW5shzmLwvTUOEXWh44V7kmsVneeiW5shzmLwvTUMSd9ec35yfghc8
aEtz5DlM3pemISm7EPoRPFqoWXyWh25pjjwHQbvunPNf+8bm/Ob8FLzgQVua
I89h8r40DdF28ZI3Nuc7PCze96AtzZHnMHlfmoYIu3vtG5vzm/NT8IIHbWmO
PIfJ+9I0RNuF7N2CRws1i8/y0C3NkecweV+ahgi7O32PzflZt3klvOBBW5oj
z2HyvjQN0XZx4h4FbdzahbDfO+MFD9rSHHkOk/elaYiwu9P32JyfdZtXwgse
tKU58hwm70vTEG0XgtcL9yLXLD7LQ7c0R57D5H1pGiLsTr5fzaOFmsU35wvv
as6f0XyZk5N+1JxffDqHT2uOPIfJ+9I0RNidfL+aRws1i2/OF97VnD+j+TIn
m/PN/d4ZL3P4tObIc5i8L01DhN3J96t5tFCz+OZ84V3N+TOaL3NyMhs05xef
yOHm/Pn72vLcrT7lezzNDSGTC/u9M17jcHP+/H1tee5Wn+n68yzN39qFsN87
4zUON+fP39eW5271Kd/j6ZkImVzY753xGoeb8+fva8tzt/pM1x/Zf1P2e2e8
xuHm/N27bs7371fbXXN+Fl7jcHP+/H1tee5Wn+n6o+1O42HxWRxuzp+/ry3P
3epTvsfE3TXnZ+E1Djfnz9/Xludu9ZmuP9ruNB4Wn8Xh5vz5+9ry3K0+5XtM
3F1zfhZe43Bz/vx9bXnuVp/p+qPtTuNh8Vkcbs6fv68tz93qU77H9N0Jbyk+
i8PN+ec8TvPcrT7T9Ufe3Vad4nM53Jw/7yNbnrvVp3yP6bsT3lJ8Foeb8895
nOa5W32m64+8O+EtxWdxuDl/3ke2PHerT/ke03cnvKX4LA4355/zOM1zt/pM
1x95d8Jbis/icHP+vI9see5Wn/I9pu9OeEvxWRxuzj/ncZrnbvWZrj/y7q7K
hyvhNQ4358/7yJbnbvUp32P67rZqarcs4zUON+ef8zjNc7f61PylOf/xmtot
y3iNw8358z6y5blbfcr3mL675nwfr3G4Of+cx2meu9Wn5i/N+bs174bXONyc
P+8jW5671ad8j+m7E2oKtyzjNQ4355/zOM1zNR0Q7rE5f2ae2u1r2TglU11p
DpM+suW5mg4I95i+O6GmcMsyXuNwc/45j9M8V9MB4R6b8515ylpxpXzbnD/v
I1uem6IDGl7enVCzvwvMGQq8lecw6SNbnivrgHy/8u6EmifwmlZcKd8258/7
yJbnyjog36+8O6Fmc745Q4G38hwmfWTLc2UdkO9X3p1QMzGbadk4JVNdaQ6T
PrLlubIOyPcr706oKeA1bRFmIvBWnsOkj2x5rqwD8v3KuxNqCnhNW4SZCLyV
5zDpI1ueK+uAfL/y7oSaAl7TFmEmAm/lOUz6yJbnyjog36+8O6Gmhhf4LM+k
OX/eR7Y8V9aBxGwg7E6omYhvzm/On/SRLc+VdSAxGwi7E2om4rVsnJKprjSH
SR/Z8lxZBxKzgbA7oWYivjm/OX/SR7Y8V9aBxGwg7E6omY4Xdp2Sqa40h0kf
2fJcWQcSs4GwO6HmHfDN+c35wn015+9mA2F3Qs074K+Ub5vz531ky3NlHUjM
BsLuhJp3wDfnN+cL99Wcv5sNhN0JNe+GT5zhFm/lOUz6yJbnyhxOzAbC7oSa
xZs9CLyV5zDpI1ueK+vApL8052fNPxEv9CDwVp7DpI9sea6sA4nZQNidULN4
sweBt/IcJn1ky3NlHZj0l+b8rPlfCS9wuDl/3ke2PFfWgcRsIOxOqFn84/iU
TJXOpdMep3murAOT/tKcnzX/K+EFDjfnz/vIlufKOpCYDYTdCTWLf5wnKZkq
nUunPU7zXFkHErOBsDuhZvHzf7dpzp/h/2ktbc7PygbC7oSaxc/zpDl/hv/a
fTXn72YDYXdCzeKb84XZNuc7fWpeL2jjlhcL87wz/lm305w/w3/tvprzd7OB
sDuhZvHzOV/2LHkXWz6y5bmyDsicl3cn1Cze0T2Nt9ouTnucwB+hT81fmvOz
5n8lvHBrzfnzPrLlubIOyJyXdyfULD5L95rzz3mcwB+hT81fmvOz5n8lvHBr
zfnzPrLlubIOyJyXdyfULD5X95rzZ3xky3NlHUi5EW13Qs3is3L+I5p/Jb+b
9JFJ/gh9apwXtHHLi4V53hmv6V5z/oyPTPJH6FPzl+b8rPlfCZ94a83557S0
Od+/EW13Qs3ic3VvUt8E/Il9Tc6kOX83Gwi7E2oWf+2cf1W/E3ywOd+/EW13
Qs3ic3Vv8i3CLk68cfK+mvN3s4GwO6Fm8bm615w/4yOTMxf61DgvaOOWFwvz
vDNe073Tb/kvHjcX7Q==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2DFKA0EUANCgIB7B1tLW1DF4hXiCKFoFhFiIndhaeghLwVNYpPEIlnYe
wQRs7LJm/uyf+IqEJ+xsZv/8+fPXw/PrydXOYDC42V9+Taa3p/P59O5sb/XH
5XQ2PJ7tLnn/81n5+WM4fll8njy+XYy7+nXxNHoYHYy/3o9+eZ3rI+5fauw6
99nkebves9SzlJpnzdyIjkmpeJaaZ9drovO81DWl1jciJzeJeXSOlZpn1/iX
WouuY7M5eh9F76+aYyNyo9S+zjDn6DiUikmp+hDR+9WMYeY6VrNvzxyHDPs9
Yo1q9v8Z9kLNOlBzD0bX2IiYZJt/zR4+W45Fz7OVvdaKo9/dsp072XqYDOsb
UZdaP+My9DM1z6++1iVDnvPfcqxmz9bXub9N/Vhf9bPmu1iGGtVXb5DtLGil
R+LN91HE2Gz507VPayW3+4phtmfv6x2zxbMmWxy4Xdfs1SNqfsRY/p/5psYy
56kPNf/Hy8zM/db8iHNhk99lZuY8Z0HN65mZebvPBWZmbsvqPDMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzN/A8aOgFk=
       "], {{0, 128}, {128, 0}}, {0.,
        1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "1"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztlz2qJUQQhQcFcQEGpmaGopngPDQ3GVcwggYiCBqImUswcA2C+3BD7sAZ
MDAZef2qTtV3qjpQei636nZVn7/3wdc/vPj2rWfPnv307qv/vXj58+c//vjy
l6/eef2Pb15+/8nH37/96vjrv/+9Pr//6ZcPH3707sM3v7/38OcfXzx89tff
z3/77vnz/57/+503ff+0z5u+c/q7p7+V1UfR803zRr5/uoes2qzZI/Nm3Uex
HwU+FftXc7BSWyK7UtRGcFJ5Vt+nki9ZGq7oWam3XW+tzhiVb0rLM5F5FV6p
7qN+u0o/6spC6u8Q+KLuQ9ClLs+txKHa4xRcqPQ4Wp5UZLNJuZqQhdSYj/hp
FtcUn6tzkeLchT2CNlZmM3WeIeS3ymxG2FUlNwlZiOCbLn6t0MCu3yLoG/nv
qan5X+3p6rxEyDbuWYjgmy5+rchFkbyk/i01biu1kZDNaPwlZ7DKXVViiZCF
XPIDwa/Vc0VmVPyWe/6nYdIx/3dlMILWVWKpEicu+YHg15W4VXiZS4av9Hoa
Jt35q3iXLq2rxFIlTlzyA8Gvu3Cb5WUE7BFqyZiclP+z3iWLd4pdqf8+qsQJ
LT8QvJWgsZG3JmCPUNulaV25jsBf9bt07Yrck+CJNE1Q+KZaY7PuFrkzTd8U
e3DEswt/CVil5ckufDrmh8rs0ZXNFHigYY/g9e54duRv1rtU+ogiy1X2PJ2d
nB8qs0dlNovo+env0rBX6fWVb33zf/27ZPmIIk/SejrmB3X26LpnFh7UfkfQ
ClrmIdc68rfy+115ktBzUn5Qe2vXb2XhgYy9m/9v/u/yhco8Sei5IT8osjHt
tyJvTcDezf/1uc6Fv5Xv2JXxKntWcoGsCafZmPZbipxDwN7N/zf/q32hEtuV
uZHMhasJOpxHcg4Bezf/19Q68reSLwqvVOdGws5p+YG2B/VvRXyHhr2pXk/O
0o53VuQf9R7IPafmB9oesn5LnX9c9I3gvy61jvxVYFWxqwi/CD0n5QfaHrJ+
KwsPZOxN9Xpylna8syLbKHal8F/Czl3yA20PCt2O/C4Be9u8npAxXPibxReC
7xN6EjzxasLT3lediwjYm+r15CzteGfF5wp80npuyw+0PSg0OZKLCNjb5vW0
jEHmb1ae6doVrWclF64mxPVZkYsiOyRrBdnryVna/c6Rc2W2Ifecmh9oe1B8
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
RQ==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2LFqVE0AhuFVQQVvwFYs7Cy0lM0SLO1iIYjNClpIIBIRERsbGy/BFGJt
63V4BZZWVlZ2gglYbHNghpnZPfo9RX6eX5LNec/O+Va89vjo4On5xWLx4vLp
fw7Wr/aPj9ev7188+58n68Pbtw4vnPLt368zf/x+c/X+95fl8sqD1fOjR3v7
7y6tfv38cWfzz6dc8v29XnPzz2u/Z/Rr9vq9JT9b69H3asT7W/KzI85ey+9t
uQ8t7bt6Llquc/SzMPrZ6dU74rzV3s+rJ/dWL5+d7F3/8G15+nGwmtPX5rXV
+uHn/dW5r2/2Pt290fQ6U69Z4pbXHPG+9LpXva6z9menrmcO57DXa5Z8f6/z
Vnv+a7vm/CyMOBslvSPOW6/7ufm5ULt1vbx5DbX3pNcmT71myf2Z+p6S15z6
XG55X6buZ+29Kvme2vsz5ZLrH31uS85h7TXUtpSch9rzVvtclDROXWftuRr9
LIw4GyW9tfew5LxNfZXcz5LG2q1occn1l3zmltzbkjNf+8zWPstT11PyOiXv
S8t71+vfu0rO5zbPUq9z2PI+1l5Dr+e99rlo+Vxr8YhnYcS5qm0Z8Qzuaqvn
9plbch5azvM2t2hX72Ov31ty/+dwlrZ5P0ecgdHv14iuXZ3JXV3bv/Lsz9kl
n/stn4ktf9di53kOO6mL07zNv/8452wn/+8uZmY7mdnFzGwnM7uYme1kZhcz
s53M7GJmtpOZXczMdjKzi5nZTmZ2MTPbycwuZmY7mdnFzGwnM7uYme1kZhcz
s53M7GJmtpOZXczMdjKzi5nZTmZ2MTPbycwuZmY7mdnFzGwnM7uYme1kZhcz
s53M7GJmtpOZXczMdjKzi5nZTmZ2MTPbycwuZmY7mdnFzGwnM7uYme1kZhcz
s53M7GJmtpOZXczMdjKzi5nZTmZ2MTPbycwuZmY7mdnFzGwnM7uYme1kZhcz
s53M7GJmtpOZXczMdjKzi5nZTmZ2MTPbycwuZmY7mdnFzGwnM7uYme1kZhcz
s53M7GJmtpOZXczMdjKzi5nZTmZ2MTPbycwuZmY7mdnFzGwnM7uYme1kZhcz
s53M7GJmtpOZXczMdjKzi5nZTmZ2MTPbycwuZmY7mdnFzGwnM7uYme1kZhcz
s53M7GJmtpOZXczMdjKzi5nZTmZ2MTPbycwuZmY7mdnFzGwnM7uYme1kZhcz
s53M7GJmtpOZXczMdjKzi5nZTmZ2MTPbycwuZmY7mdnFzGwnM7uYme1kZhcz
s53M7GJmtpOZXczMdjKzi5nZTmZ2MTPbycwuZmY7mdnFzGwnM7uYme1kZhcz
s53M7GJmtpOZXczMdjKzi5nZTmZ2MTPbycwuZmY7mdnFzGwnM7uYme1kZhcz
s53M7GJmtpOZXczMdjKzi5nZTmZ2MTPbycwuZmY7mdnFzGwnM7uYme1kZhcz
s53M7GJmtpOZXczMdjKzi5nZTmZ2MTPbycwuZmY7mdnFzGwnM7uYme1kZhcz
s53M7GJmtpOZXczMdjKzi5nZTmZ2MTPbycwuZmY7mdnFzGwnM7uYme1kZhcz
s53M7GJmtpOZXczMdjKzi5nZTmZ2MTPbycwuZmY7mdmV7D/PbiIP
       "], {{0, 128}, {
       128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztnDHObd1SXZ+wZJHZInDuGJFAgmTzftEDhEUDniWbBGzpEQCZIztzFxyQ
uQ9uBM4cWaIFNIGH5OBaaKExNGZ99zzeH5yrc4/2t/datWbNmlW11v7X//4/
/+F//LWf/OQnf/brv/jnD3/257//85//7C//3T//+//8h5/9ye/89p/8s198
/S//7/P333/3X/zLH/773/zvn/7F//kfP/35b/6bH/76f/3uD7/1X3//B/u7
/f7tfciz7PeLuVzbxD7X2mo1x2Lni7FdY+YrMXbxt9cY+ITv1/i58JcVF5Vn
/SIE/PDL8CE2+d5j/JTPJ9vkK8e2wswn2/MT1vF7ff/eNviUzz9Vm3wbp/7t
//zbn/7Wn/6n3/tXf/ab/1/M+vb3X8a4dmGr1/dfhbGtMPPJ9vyEdXzZ9vrz
o7//w7X4p4RPgisyx++Fz0+w1UsPfKVNvnJsK8y8Pp9gz0/D2Ffa4RPG8Amf
T/b31byuv3/vuV7Z6rd/449/+Kv/9gc//PX//aPf+5brvv392iZfObZrPLw0
1Vfa89Mw9pW+9glj+ITPJ/v7al5f2T/9NDsUW317zbfrTn5f2eQrx7bCDLn/
a77X9vw0jH2lr33CGD7h87186ivn9RrbxXNf9/9kbFiN+or7L51QnvuVYyP8
X/DwuudrnBf2/DSMrWxLnvUJY/iEzyf4+1fWBK7H8L2eezFmwoEkHyQaYPW9
jO2Fecsh5BqbX5OxfXJd4sIv7D3tml6M4ZPX4iv9/SJveo3Zfl/lj9fPXWGA
5LwvjiLPemmGVZ2tjM3qvcK9ZL9E0VGfVpe48At7z9d4Xmt6MYYf/f0f4pP4
4EpfWQ6x9//K564wQOz/+luCjU/r/5LrL9aa3L/wD/HNr6xLXPgF+U72opP5
rsbwo7/3nGiVpxBbkfyF/H7x3FVOVOxs6+QEexe5HhmbPTtZ1pqM0/LP6/4X
PlgwVvzCxtZSbyT1bcvnP/r7P+7vqzPFBAMkZtm9TF/5XMuZJT+12CZcanFb
riHYW+kfsnZ2jQgGLB4u6hIEn9YvbF7zup5wuP1bwuev63/09398nN9eY88U
E8xYHnjd5zW2i+cSXNlYT86z2zhYuN3md6taDRmDxYbVDGTdL/R8qUvYHKTs
CbR5ja2blb+1a/2r7O9ED7zGU3KQ0gMiuH2tY3ku0QA2vhOtVexQeJXkd/Y9
VMWG1iaWbwsvER8hGLAa1eYLVvO8+KrwzOt7qe2T8ZB4+qvg74UnyafkL8QO
Fuc2Zl3gmcR3gm07L/K3xacueMCOx/qI9aNSTyYYsPqZ3H9lW3vG4TXmMs6y
b+q17rZ+9cvu75YTCjcS+xdMFvyUtbZ4LjYka0fe71H0f4kF1m7lTK7VYATz
pGZuNaTFRvG7wp92joV/SpwtYyDz/WX3d8ux397fcnXJXwgmSRwpew9IzkLW
qOxzsDh52aTUBy64aJVLFg1W3hVsc3a7diT+Wn1i953aOa5yOnJe9SJ/fP1u
ayCf5u9WU9k9AOSeL4zZeP3CQ9n/Y/dvWP1g49QFD5P1slp65WsXmtbahMT0
grcLzlztrytrveoNEd+3eC59KGuTT/P3gn8S18qzyBhsLCa1UBKD7Dk4wv+v
8RcdWGqGX8lFq7zD5n12bwbhHxIjih3KWaSCw5WuLv5eMLAaQ8lTPsHfL7TH
SudYDFi/I/5Lrid8slqLi3y22OeCiwg3kphC/M72H1f1AXuNrTURfF5gpvRi
rH0sBlZrZDH/8p3v5e8l33nNncyx4KHEo4v7kBhtz6qU2rLNZ4t9LP8QuxH8
2PUifGV7iyQfX8X6smeD2HmFGYsTEnOtTa7/tmCGXPO9/N0+q/i7xYPNccq+
cXKfktMVzWPtY9el9BAL59v72LzD2tnWDSyPWT8l/GC1oj33atex5Ptk74TV
t+VvS5yy2t6emVqtnfW1opcKDxTesDi0Ni91pzIvck/C+eWco82PrG2LTex+
eMsbBTPFdwqHW+xd5BFl/8bF/n/rs6uedclJrb+XuFz2i5Lxr/rpr7EVbb/i
3tW8rC8TbJM9WsQ+X4mH19/aHi6x/wozdjwvm6zGUOohXxmDrI5a7f//Sk6w
z13xednPSeIgse1qXjae2rqHxfCq3lhiHLHVah+CjbNljjavtD5u9x2VWvSK
M21csJq5cLiNQXacq/3/Lx+54ASLN1v/JDk+8cFVXLMYuIgpBcPF74h/WZ4h
WCX9CNvjsPxQ4u/L/vbcPRkbWaOyvhf+YmMN8bWXnS13FW3zWqOL/f+ln3vN
CWVPCPHflWZY2ZDM63v5iL1nqTeucs+iryyuLmojZJzf61yVrUWvzniWOGX3
7K32/K9yYRu7C0ddzGW1V6H4cnnPaqm9l7izisvWR8qec4Jby9srLrXPIpxW
NMbKf7/9XJyrKva3+4FXOsTmTeW85MXeGxsTbc71wth13mc5+cKXC2eWWGzz
Jrt2ZTxFG1yci1zp1VXcJHgjdrg4p2Bjpc2pV+tra19Ft7zsZvcf2nhnNZWt
fxK8kVhmx1DyPvK7xfOKJ20dmOCh7Hkucc36CLmnrUMSjXRxZmF1T7vuL54k
WCX3sdz+ei7BP+F8u75Fe1h9SHjG9mUst9izP0XP2PePXeSeZB1t79LazfJk
2eNncWV9k1xv43LBIfEX60d2jvY+BfNEt7x8sOy7KL5sfy/n9O0eyNdzScwt
uuhlW4sfqxOIPif2IbYqewxK7nmR41/XAWy8s7gqOQuZl+XVop3sOC0Pv35/
4bP0Agjmie8XvXThywQbLy5a7SOy8ZTUMcoYXr+v5m7vad+XYnFo/Y7oTLJe
5eyb/V7qABf5KRnPikNWuclrPBe9NhvLXmMjv5MxkL+1sbu8Y+Q6PyI5C8GM
xeornl7XQ2wctHO39yRrUfIFG6fI35Y+iP1c1wzth+SnhX8sh6xyEzKesuen
7NlY4dmukX2u7bWt/PH1u81lih+t3htg3+FA8Fb2qFj9b7/b9x68bLWKfSVH
W/Ft4YFSByD3L7Gv9JEJfqz/lloBwT+xyaqWeLHWxZ7X708u+RHBs61BlXzK
7om19RAbL8o4bQyyvdfSZ7fxiORoqz0MlucJhlcar8Q+8qzSCybrWPrFVktb
TiB57su/yDjtWhNfXtWjiP0v9thbPrE1RjuGF7dYH7T1q2KT1V5QG9PLmIlu
tGtX9NJK5xQNUJ5F3htQbGI5ioyfzNfGjouzXeRvX+Mv9i9j+8r85eJ9pCVW
ljHYmLLyu8JRpb5K/NfihzzL7v8n8131c63OsXsViv1tncTG3LLHg+Q7lj+t
76/Ov1/wqs2Jytisv1hftrm/jXcrbiw1B9J7tbW1FUettMTr/jb/Jb5v+8ir
M7avTzlLSGxr18XWEotWIXi2dra9vMKrZV3KmbKiQ2yMs75vayMlfyFxoZw3
IZxcuNGeaSU8v6oJ2BhqtUThTPspvTBi53LPVcyy3G7HSfyIaBWimQuHWP1g
+YfMsdQWXn9rdazFc9G3Nk4Rvr2IHaW3SOJ40f+WT8g62pqA9f3V+l5w/kUe
XZ5L8lOC7VdcWNlnVdOw5z3JOEst2vos8d/XXGw9lvhg4Y0SQ0ud046n9FxW
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
1z1Xe1osx1rOLzHdYsNyLLnnxRmrojMJ75V9BRd+/fpuOZPU7S3ebPwq97ze
f1X813JO4cCLubx+tzrfzqXY2cbo8ik6reSM1kcsNi76TYSv7Fzsd7Kmdn+g
5ZPi16QWt9IJ9pxL6W2R+LvyNcshxZ4WM/Zs4+pszsr3VzVAe89VXLOcb7FE
7mP14QoDq3faFF+w8y1n/wvXXedZZC6v8RedYDW8vZ7EtfLOtJVWLNgu/TV7
vo/0IldnOS9scqE5V7nPShuQMdi4UNarYMDy9qpHVsZg+Zz0nlZnsa32Iz0X
wgmrdS94fsU1+74j6+OrPstq3xTp15B4uvLT1ZlQ61MrvXeRsxRtQOxp19He
v2DA+rh91wrRdfZ3YoeCc3INwcOL94htX2Ow8a7shyd2IDGL2PDivRz2Pque
CFn3stfF+mnBks3X7P3L3C9iRPH91XvIybu/Vhiw2qPMkXBIybNsHl1wYs9q
2THYc1Wlz1j0UsGVjS92L0fpGdmeiPUXO56iby2WiE0I51zo4fKO3NLDsr05
+84Z60cFAzYWk3hkbUiuJ3mQ9bUXZ16fmSK8TfiB+PXFO1SvtbfNB+3H+qzV
LaXHseJ5wrfX+wTK2llcWV56zctqS8KNlmMv/pbYnHBL0YdWi67OVZXaNbEP
iVP2XUZkfUkvuPRny1nLcq5z1csj8y08T/BTzjgUvF3HF4ur4rN2j4TVSGW/
AeGW1Tlc+7eF91a1C6v9iG3tOSN7fzv+VX/BjmeVy6/OWpK1sM8quqLks4Q/
yTjJ98LzNjaV5640/KpXSDBAeN7GMjJ3Un8osbWs10WNqNRdbe2r+Ca5hozf
9mVKHlfqQrYOYHWjiRV0HS1HrbBtz4NYvVr2UlquKLyx2h9ScrdyjY01Ja69
OH+VX1h+KDmg9V+rOe2+/RUGrJa2PUFyvc3j7N7Iwg92LVb+Yv/Wzos813Jj
6WUT/73OqUveWrT6Ku+w62I5ZMUn1m42tq72F9m5E/63a33xTiFbPyS19FWf
iKz1qhdD1pH0I8r730pMt/Na4fz6vSV2T1HJqa/z1pKLkfmuzixY3rB8sopB
1oZ2f5HF1Ysnyzu7Xvck97HvfrF2JntprO+Xj+3FEO2xstXr99VZAzIGW3u5
4EbCG8Xmr489F7/KW8u8yjkmgn/CezYGFf+90EWWf2x++vpbG0/tvuiSJ5Z+
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
PqtYVvoXJSau4unKJkULlXVf9eJL7lnsXOpvZe6Wo2w8Klr323uW92itOLPU
jq597aKGQM472HpvicuFQ1YcbtfCnsUgvHcRK4tNbN5a+v5Wl347x9LTfHHR
SvcSe5LeOpm7zbMshxQfIbGv6PnCh5/ma0V72LW+4Gqb+9hesP298Jv1Lzue
lf1XNrFr98Ib6fuX+omd72s85T2oxH8vdOArZpV+d+E0m1OQXIDo1aIVi99d
+Fqpr9q1W3G19WW7LnYuFp9Wq6z85SJWFpuUM6qkTlXyo9X7QgkvFX5e5cU2
nyL4LD1NYh87r5X+We3xIH534WsFb+R6cp/V/rHXp+SSVs8UfNq9GdZfru2/
0kWvtSs95WKrVT99lcNe58urvQrkY+t7q/yl6J9V7LO9+AtfK++ft1gqtbIV
55OxER8nGoms3et3og9LbXxl/6IbLeeXWGxtRcazsk85G7XKl62v2fyL4L/k
gBd2Jr5f7FbeOVZ8bdVbIRqyxCl7fZlX2bdvx1+03Ov+pDZ+oaNe9ye/rzR2
qbPZmps9U0bsYLF0kS+XMzWFQ8hzyznulR1KXLP5fqlnXmikC01i63W2d2bv
87LV3wHh+dfy
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztnbGqblcVhS8KURB8BwsbS60UycVXuIrYyRWUFIFALMRGRPAV7GwsY+cb
WPkGPo2FCYgkxQ5zZIwx1973fMUKfw7/2f9aY8z57bXm3P+53/nVR29+87VX
r1799puf/ufN29/95OOP3/7+p+999j+/fvvhD77/4dc/ffnH/43PXv/s5999
/cM//+vH//7RX9//5S/+9P7rD773+h9/+88XXn/+PZP3q9eZXN/5XOc6qfk4
a1e9aF8zpW3bL3Utm9q2X7fjcNP3FDfav5vSMBV7k9/9+yef/H9M3jN5/+Q6
/3zvG6+/9cEfXn/7L2++8Dr1WY3Xm2tXvZgM55p30F/VebIWR09V2yvfU69T
87mD76puE48av5vSsBF7Ez0n15ncU650cGJP/azG64m2jbVPvJjEhrp/uJv+
qkeTtVy9VvNO3V+pcaXGXpv/mz5OdDvFf8cLNW7V2JvoOblOg0VO7F191uY+
X9U2tfbJz6+Geo6bnOvb+qsepepUqo+ORw5XnbN5ioeb57XUcNarauvkWuM6
qfx1WKR64eyFUvv8yXpVhjhnn8ne1am1ntI/dRZrsyhVA0+xxan3qjxMnQdT
998Gc9S1O+foCc+d66i8UvPOOUenzp4Ou9T3O/drZ+2q/o0eVkP/1FmsXTtS
OZDiQ4MJDg+d86A657vxP3WOdmKmvedxahEN/qtjwi6VdU4upPif6is16gyq
/qmzmKpDikUOS529hMMEdb830afxun0WcM47zjlazUFnLY28VmOg4UVqbpP7
gvNZm2tX1+Iw1tm7Xs1ZfU/qOYTU2Ur1VN1HOWyZfK4z59T5a/JZqZGqd6Xu
ueqeU83llJ4qTyb38QYDJ9dX94RO/jbWrs5toluqBjK5fqr+o855co9wPmtz
L+08K+LM2eHPhHWp57JSede4bzbGZB/oxEyKCY4X6txSNRPn3N1Y+2RujVqx
qmGj/qPOWb0XT655ai/dYEv7HOqcr0/xP3XWa69lsg90+iyp5xYcDRtxMrlX
OjzfXLtTJ3HqHk6+qzxXn0NIsVF9XrSxl26zpXEOdX4X/n+14exjJx7d4dkD
R1v1WYXG8yGptTv786s5TH7XOUs2aj6Tz3LyTp1n43mGVPxfjc05q2uB/3Pd
GrXE1LOFd97/q/NvsLf9HILTF3DqD6f6s87aJ3OG/721pO7dznqfwn+nltjI
qcazB6n4V1k00TylVeM5hMmcr66f0l/NZdWXxpnXue/Df59jzr07td4781+d
26Qvluq1Teacij2nN6H2ixtaNZ5DSJ37HP1VfVL9Wae+pNYwG/Hc4MBknOK/
es5K8fMl8P9qTGrdzhlhM/ac3oRTD7maf6P25dzj2s+QqD2Oxr5usl7n/kj9
vzcm56xGT/+l8d+pZ6bO1I3YU2vg6vwd9k5+noofZ//c2Euo73fqTo4Xk/uF
+lwT/J/P+c7MeZf4r7Jucv9N7eXaz0Cm+onqPaK9/7/bXkLtiUzyPbUW596k
zg3+f/lQc/AUc57O/3ZtP1WjazwDqe7lJvGpnjVStQL1ntJmSIqljVpi6t7k
xDb8n/uiftYmc57If7Ueq15T9bcRe07vexJ7k3uiynaH/439j6rnJDYmOT5Z
o5MjqRqUU3+G/1+ueYOBDeY8hf8pPjj7TKeu2+D/ZG6OthO2p+Kw/VyEw3an
3+14lJr/JGaufu4wITXuzP9JzDjXbzPnzvxX95wOJ68+K1XXbfBfrQNM5qxq
0si7xnMRqfqV6nsql50e0KmaXmrcmf+NHu4mc+7G/3ZNZrLPbNR1U/xP9fsc
njTyTo15Ncac+pUTq6lc3qyt8fzPV5tPKnc2mfN0/jf2PE4vtcF/Jx5SNcN2
H8q5/za4oe49UnUktT+Vqq2dYmmDCe05q/3HSe6oveMUc57If3VPlaqFOnVd
pwZydZ3JHJyaoaq5k3fq/VfNqVRNcqLJpnepuGrX9FI634H/qV5boxeprvcp
/G/UK1J75k0vJnNI1asna2z0vidznuROm/9OPSflnRNX7P/nc0712lJ9t5fA
f2eNqVqQ03tta+jUNFK9lVQfajLPVI+mwSK1NpuqRzm9lXZNLzXuwH+n19Z4
PZnbE/nvrFGNedVTh4ennqFyrr/Zh5p4N7lm4+zjxFXb09TaGzW9U3GbmrPa
l1FrmOrrRm3wDvxX91STa056u07/9JQX7Tw61YeaaHt1zck82/sTRx9nOHHl
1MpeGv+dM2Z7n//0/X9qr66yK1Vb2PSikUd360OpvrcZkurLpNbS0Hazp7Pp
nTNn514/2X86+/x3af+v7vEm91mVXZP13uEslsoj5x7X6H1M7qepvtKpvknj
LOBo69SL3lX+pzh2xQo15ief9cT9fyOnVHZN1nu3s5gz1LmdOvs4Z8AGQ5y+
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
       "], {{0, 
       128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzlnb/qZ0kRxRcFNdNXMDEy8U9g4v7QRxjBfMTVwIWFdUFMFjFZUPAJfIrN
fQ8x1tgXUHAWRG5ScM5+zqnucYM73Plyb9/u6qpTp6qr+/fNn33w6hdfeued
d379tTf/vHr9mx99+OHr3/7kK5/9573X73/vu+9/+c3t7/57fXb/8z999PKP
9z5++cOnH71848c/ePnbp7//4R//9bF0f9u7z9+V+3afybc25aC0Q/rQGG9b
B9z2U3qS6meqz0TOjX425HwbzmzaxRsX8L/rk5/++d2/f+vbL9/55Kvjt57P
TPeb7z77/7xOjZeMUblPyWGSySQf5V55l4x36mdKB1zZunJTxkX6SfqvzKMi
Z6JLKT109Yf0LYUzN9jFv3/113f/8s+vv7z65ffHZxQ9ab9L8KcxXrc/hLek
vuuOK2WbLu96ztGznefvz3tXB1w5TN915TDp3mSnBM+n7276FGJHRA/d8ab6
r+AM4fnELp6X8oyCRa5du++6Nq7oABkv0QeFG0ztE6yb9JDggCLPFD67XEix
C1cOhI+5+qlwkhvwvN2HlH6mfBDBGaLb5F2CV882J5x0/abyriLPlO9Wxuvq
uRJfKH7cHa8rN4UDpGzTxefJdhQZTvqmzJeiJ0ofyD3JSd6M5yn9aehqqk1F
b91nXLsgNqhgtav/Ex4SrCP3k5xdbunqw/T8JGe3ffd3F5NT/E2ROeEAqf4r
3KCBJ6mc5A143tCfaX7db7ntu9jSiCmm36ecCeFmk/6n9Irkdlz7UnJxqRyv
O/Z2fsaVJ+GfZOzEZhXfmpIDiQeVnE9qPegUnrfvlVqdVPtubtbNwysyT41L
+Za7JkX0yn2G2JeSk1F4qet3CC6R/IzbHyXGTPHbTf/i2sIkB9ImWb9QMOcG
PG/op4sJLs5Mzyu5PuXdG2Tu6pKyVuvmfDb5ALE1NxZw49BUXKZ8V+nPpDNu
fVTK/6b8S8qOXHx2x9uoUbkBW4h+bsbdE74p64DP36c5JfPb8OMKnjTijgZP
UObOXW+d+unWaDXW5af+uPtQXF2avpvyv0p+I5XPT/kLMnfu85t2l/IpqT1T
Kdxw5ePG5i5+bvrxxn1K/oQPKHtPlLqpaVwuBk73jfUgZV1+6nOKJ7h7D6c5
VXwTyRel/EUDk2+wu4bvU+xRsd9U3O3qttKOq5O35dka3KDBE5SaWEXflHkn
tjPpbWM9aJIh8VMpG1f8r2uDjT16KX1O2eOm3TViBBLLKDrmxt2E8yvtkP2q
bewlukEwnNRPupeC/+R5Mncu/99cr2zYuJIXVXA7lS8i403FGu28d+p8gEbc
lIp3XG6m4Iyrt9Pz7n7VlMxT/JlgneIHUzVyLmcmzxMOM8lkk6e5z6RsXJGn
mxdy80WkJiEVa7Tz3sTuTuWTFRskOpzqj1ID046/iF8jvt7FutS+GMV2Ur5S
4cNkXtycYZuTp3xZwx8pNWZK7o6Mq7E2Pckhlfd27c6tPUhdm5iZsh3XbzbO
ZyO2mVoHUdqfbIRgsmsLZFzuMwqmtfVt0+839FPhve75Jyl9IGvT7u/kXcXu
CK5+0XJWLjdQ9Lm9Zj31v7HHpMGTb+jP5n1K3zb9fko/XSxVzj8h+VVF/lM7
N9TjubXKBEO+yDkrRf6kbi21Z1nJWzbyHikO3MbbU1d7LK7fJ3jY3p/bPldN
kaHiX07pm/Jdwi3d/JXi6yfMvzlnRWxZqVsj/JboYQM/b8Nkd14a96mxp/CT
zOnm/tzU864Mn8+naiQ263+UuSN7D105K7/flrNKxc6b9f8Nbkn6fAqTXR7r
1mOQ+NcdO5mjyb6U9UoFNxr7cxtxhCvDNg6063+muSM+sYFdt+WsGracwuHN
65Tf2bSRaexETwgXauRV3Jxkyte447pBbxVfSXDA1bfpeTdvQ2qliJzdd6cx
tnNWDVtuyPZUvqLpZygmExtR5lHRE6IP7VwN4V0pv9OohUjl1hRf6XIJ8nvq
XWUu2jEU8b+TDaZyVlP7qXG5eN7mxi5/TtlmI4fZtjvlvBqyz5Twz4Ztus+4
fkd5XskpNeLxhp2euid+IYXhKZ1p56wmHkL2jLfncfpuI18xYdGpHGb73q0b
nJ5J5UJJrmZTVql2UvFOyt+l8K19NfCEjJHoTDtn5XIAoueNeVT6nMpXKNzg
+XsjP7NpOw1MSHGGU3k5t5+pdki8c4qv3lZL1vb77blo5KxSOJDSjVT77XyF
4msIHhLda+SdGphGfIfrr2/AGbedVJ4w5dduzs1uxinTGE+daeDmrNo+0dWN
Rl2H69cmu3O5WYMPKLrXyDs1MK3tO57tnKpza8818Tub+jnN72YtWUM+7XX8
lJw3faJr1426jgaGTG0q89U+r8O1r5S/S/nozXoVF38IzhC7UHQsxcM3z9Zz
caBRf0Lkk6q3b5xpkMI010+5viy1X6bh1zZxj4yL+D733Qa+Nf4ulTJ295w0
VzfaObdGjZ/CAd723Kzrx5U+k3XbFLdvY9qpmha3/8SvkTaJ/Iktn7on+Ebq
+RvymXCP2Gnq70pszvv03fb5RcS+XOxN1Z61eWDKBlMceHrmVG7hNjxs60mK
56T4g4tvjb9LleIDin66OOPKdnM9V7Edhd+Sb6XsV2knlbdJzUVKbxv7r1My
d+e9LbfGdQqrU5yc8Ha3n8qauPJ3qTbnxbWjqQ+KbAlOpnJNZM3x5loyd02W
4F67HtWtOSffIjJv8+cb8HATqxW5NepbyLnuqT2/KT1RvuXyXuW7rjzd+8Ze
YBcfGhybzK/CKxo6mapjVDA8pT/EL6Suhh/ZrPdrYPXmWW1Km25dcaNe/Wa+
ofC0SZ6EVxBbI+9OYyQc+wZuSXSS1DE2/DL5FrHx9toE0W1S7zfxipQfd7HC
/e6kk+7aq6Ibqb+n1taTBndSvuVirItvjXcV/WzbeGOuybukjjEln01uQzh2
6rz3Nh4qdp3iNu388MTHprPsUmuvJO9K9LyNRW2O6vqOlM9N5akaNt7glmRe
3FiYvJtaW0nxK5dju+0o/iX1tx5c3FP4v4shjfywkpOf5mtqRxkXybuS+0Yt
xCaPTfEHsv900g2yDkJs/IbzH1IcjLz7Nv5tCNK+u8ZNahum9qfnJ1116wZT
dufKNpX/IbmFlN4S+1KwqM1jG3akPD+Na+on6YNr48/r1PkPt903zpRo6yGJ
xdpz6mKCwp8V+2rbneIfSf4nZfuKT9mMeRX+nOKxp/5GntLODecaTb+3z3/4
vBykdblx9Km/DXHzfUo3FMwkNZDtOjFFz924oDFHjXNpXB+q9MflsUofiH8n
PGETGwnvdfO0pD+N9YgUt5nePXVm2pY/TOpYqh0lV3BzDeSzzQlv3djEla27
nkJiXuLrXXtJxS8uXqXsNIWNbn9SeVrCXdvnVJN1TIUrts9Me1v8ZsN2JjlP
Mr+tBnLq/6TzqXkn8zKNhZyj6Mrc1ZP2mQPknvim9l4zRSYpWSntTxyJ3Lu+
z/Vxp3jmDX5z03Yme1d0ZrMGcsJ8BVfd/NU0R65eKT5LaVOxrxS2TLqROnOA
XClOQr7b9nduf1J6qNy7snXx7RTPvMFvNuzFxdsG5yT+VznfeJoj5RweZVxT
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
NuZXyUu4WOrycBcDFb/jyjyVJ9n0y+6+xVRO2J2jNra7fmpq362bdWXl2pQ7
9lROrJGvIPEFye2k9norNtWYx8aaRSPuUPIMBDNTvlWxZVJnnurz5JcV7NrM
Cbs23ub/bvtuH9p2lIpD3W+dGq+C2yS3M9lIQ1apeWzU9hB/ocjTjR2IjhEf
p4ylYRcpv6zIk8RBp3Cg7SNO9dOddxKHpnSsPV6XM7u5HTcOJbJKzWPj9xT3
SPGQlGyJX3b9b2OMxL8oNrWJ4QQHUhjV6APpp2tHpN7phvrGFG4o3Ibw/zZ2
perWNm1zwr0b9phv4tLbzkU38ZPgQAqjGn1I4Zh7Bq87XmUdtl3fmMINZewT
fk7+4oY8uduma4PELlyfq8j2VM6EYMINWNqY6wZ+EhxI1WA3+pDan+Xqj8sJ
J27p6rDrU0ibLiYr77pY6vq+U/6CcBhiI8pYpmduPjfe1e1NLG3z5BR+Nvgb
0Tfy7qn9WS7ObLbZzle48+XqM+FCbZkTHSZ/F0xp3+USLm9p+EqCS409bptc
tL0vW5EV4W9Etpt7tVJcl+BSSm7uu+3nU/dtv9AYl7sG5OpDih+m8mkpX0lw
iexbSenJ9Exjr6I7v4qsUrZG9Cd1/k9DHxrYdSrua4+XXA2cb3N7RYcVW1P0
IaUDCs6k5Kzct3Fp8nEpPXG56Cm7fn6L/G2s1H0qL0HyxoSPkbk7dR5XG6s3
85ybtuPWdLl18uQshYZ+pvzCdClyaNejEvko70445q7rpey0kdtJ4QbRW/It
gmOkP5vncd1QE0XynA38Ibo69T81xgkniZ9q+AtXJxs8lvS/gUVu7ObyW9dO
N/EwVbdwA99L1Vsq+NA4j+uGmijXTk/58cbatzLGU9yV+ItNDE/5l4a/IPrp
ftflVI35StV8pua9zffI78+rnZtS+nCqJiq1R6ytt6lzwFJ+5GZu3Mbwdi66
sRepzW8V2abOfyPY4uJGIyd8KjZpc4bUt9o1URP2kjX9ht6mfBzByTaet+tX
Uxj+tpyF0uacrv8i+4NS9ZauDSo1ErfxvRt0j3xrsyYqtaY/YXIqpnDzpe15
T+F5au7aGK5wEpc3Nvwd8X2NdcOUr09xM1Kfo+AP8TXKRXSsrXsNmbt4S/qZ
wsbUuROpvxu4addtLnoKw93c9eZZKDfUPBCe4GJC+9wqZU6n/hD+4/I9RcdS
87u5Vu5i9Sb/dH264rOUeER5l+BkG8NTmEbitVTd/pS7TuU6lHm8rebBxXn3
Wzdw1+d9ar+ey/cUnjz5JoJdjZxnCpNPYZcbv0ztT/KcdE/pp4KTKbtucNHG
372aZO7Gp5s8xNWr22oeiL0rWNQeo8L5XXx2+Z4rHxfz3b6RnGcKk1MYnlrT
d2WryDC172DCvVTc2jijz5VVCq+InFM8pP1Mau7aY0/5GjLGifMrPjeFty6e
pPyIO1+ptXKyltHArpRun8IfRYfJdxtn9KVqPMi7p9pp3zdqHm4bOxljat4b
9jvhibLHc1PO7lr5hMnt/V+p3AjhAw38IRirtJPKpbfH6L7bqOtO4Se5GnOh
cLbNsZMxNnA7pZ/ERtwcMpGzkndScg7Ku2QfB6kvVeKOVK1OSg9Tuq3UxZ2K
cVI4dgMn34x/U7I9Fe/fMHcNLN30F0TOyvqFgv8Nv9xo062dS8WYbW7cbj9l
C+0+bF6uXt12jgGpMSBj39wP5cqnXW/fsN9GffLUf0VPbrtv7C9IYdQN/ITY
SArnG3ba5uTEXm47x+D5jBtHK2NPjXFzPTGFpQ1/4daVNX6feDLBq9Sl9H/i
P6n4tGGnKX5yyhen+tA4e1Dhq0pucPqdxM7tcwzc/Kfyu2ubZD9U4zxJ8juR
f4MvNbg0wcBT/p3IytXtzfNGbv6bDg3ZTs+kMF/5rqJ7E69QYmdlvaaxH4TY
u/uuy2M3z5NM8ZyUXZyya9LPNk9r1Dwr7ypxa2PfFvndHVfDFxPZum26uuRy
9em77pqR+3zjHANi7w2MUuYitRbZxskb5H/Kfqd+prjZ8zq1RqP4oMa+rcZ9
o3a3wakUvu2u9U/5zMZZEO7vSq1aYz2uje3KPE7jdedIub+tfonI37Xr9plR
hKeR9t25bvjZ1L6txqV8y/XFqf6780jaV/DklO2nzjFIyZy8O7Wj1HtPYyf6
kMLJhj2meGwDE8i8KzwtxW2UuU7VwCs4T2pKb1srIVidij0VObfreBu2P/kj
9xwDVyab/F95JpX/IXVc05WqXyLyT63Juu+6867IudGOYlNujO9ijotdJI7b
XCshPrcde5Lzt12sTtm+goFkHlM1Ca5MCD8k+R9FD11bdvXttnzpqTOjbrtP
6fCkA0Serk88tVbi4qHrB93vKtygwXlcH63gT6OmhdQkpOzLHYub/yF7/xU8
n/qc0mFXbq4NTjrQwITbrpTeunrl4jzxES6uuhh4qlY5tUaTkgmxX4XHuvWo
0+8Tf06dge/iD4l9lJhoat8db0qvCJdorEE37PHme1cOJO5r1+RvxkST7bRr
blO21paJayMKjrkY6PZZ0WeF07r3bi5Oyf883yV4fkPdnWJ3ZA26YY+bezDb
tYhkrS3195tSc+RerkxSMWPbjhoySY3LtR13XSmlh+67Cp5PduTmcyYZpuoc
UrpE7E7p22Y83q7tb+wLcP2s8rsinwaOpWKx2+KRth3dlqNTbIdg++a9krdX
fNlkdy7mNGR1qu7O1Z9NvVV+b2M+Ge+kVw1MIDiW4pOnYsYGbrdlsukTCaa1
4yAyRiXPk5J/iv8r/by57u4GLufuwSTyTO3NfF7/AQ9dCYs=
       "], {{0, 128}, {128, 
       0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztnDGuZkcRhZ8YySK1WIElixwcImbEFoaQaJAhGsnyECAyZw7IWMZjAY4s
kbAMWAIJEbKEmJEInmX1qM6cc7pPd1dwR//8unX/6q6qr6ur+r5PfvvFy9//
6OHh4Q8/fvvPy1d//NWbN6/+9OuP3v3nd69ef/bz18/efvzq/9e7z//818OL
P3/9yYv//Pfj508/P/vuJ7/8zeO/f/HTb//yvc8z72E+V8aFjp3RgbkfHUtF
lnnOTN3Qz4xvML/lGAsTRyqdHXHniIWZPsN8r2KgyldHz//r4+OS6/N//O35
zx6/fP7N3z99gX5++hyG24w+6BhH9zA6q8auer5KN8Z2M3Vwj0vlM6pYqOiA
PifNZ9C4cDDQMSdPnz9aI1bxH9V/ND8Vblf8AdUBvUbrckXnim7ocyp5gls3
xnaV+FXp4PhciUfUZ1Sx4Oa/Y1yMzzD7KTf/VTnzaFwz+V8ZI6ObStYxP+j6
i86PKm+p3M/oxuTDFU6i9l2V5zM1B3RcFbvP5L9qXIzPVGxRyZ1QDjC1BYdP
ztwLVGzN2A5do9E6HjNelAmV+UG5UeEnOp8o85l8WBXXq/J8lGMz9/ur+M/s
JVVxitaLmPwQ5T9TN0BtgY6FuSrsYhiL5oTMPagsGvvoOlJZyxy9SFWepvJJ
R57JMNxRT0PtxXDJwX+mhqPiBrp2MLJMf4RhWqUu5N4LVOzFjBfNsZnPqG+o
eMKMXVUrQHnCcJiJTVWeyeT56HyiDETvGc3nqv4valOVzyTzX1U3cI8FvVQM
rOyJ0LxIVSurrHFMf5AZO1MrcNfZKmsW6mOVOVetlajPMLVQ1RlIlEur+I/q
gO4d0vjP1A3Qy81/pgaLMpmZH1WtDI0RdI1Dx86siei5iMqcVOahogPqw+he
m1lbR8+sMF9VZ0PZmMx/pj/L+IyDmar8n9kjq8ZSuVD/H33P9MpV/S9VroXy
h5lzR00J3aMxa0QlrlWxzNSLmHlj8limL4D6/yr+V35rlc/MzP8dPVwH/5n1
SzUWlHuOuhxaB3DUnVQ1JYYzaA7G8BP1YaZeVFkX3HPI1BAYLrn5z3DJ7TMz
83+3Pg7+o+sXykz0dx35j8rf0JwcnTe0hsDs0Sr6VJhfsQuTC6m4yvQRVH5b
GeOO+b+qx+Q4A+nmv3uuVLIOHdC8nckhUbug9XZmvWN6fIxvo2uWKm+v2KVS
D3TXfitzq8oHHLXEU/N/dI1jfqv5r32Oo34ymnOV/1e+V/V3VPUQZg4r463M
J3Pem/FDd+1XlQ9U/Ba1o8P/E/iv6rs1/+fzn8nbVXZH7YLuqUcXU+tg6iHo
nDP8ZM7Gq/zQXftV5QPM76LfM/6fwH90/h08b/5r51AVL0xcM/7vqDmjeb5D
ZxU/VexFfaDiS466intcjj5CMv8ddUU0Npn7HfOj0mcV/1V5u2ovgPo/szdH
54epmaA6V2oIo+dX7FKRTfN/1Zw4fFvVR0jjv2qP7IjN5r82jhy1FPSZqr4t
Wj8ZzY9j/lFWMPs4VW9ilf8ztT7VuFT74l3q/466oio2Vfa9jf9oHZLZrzF7
QKb+X4kRB/eYOak8k7EX05tY5f+r6gmOeESvXfiPxhqTkzhsdAP/GQYy+4jR
PLvrn0xN3sF/Zk+E2sVdT3b7MMoxRz3BEY/otQv/K7U41XkJh41O5T/Td0PX
CCYfU+Wrqpq8qlasynmYdVzFE7cPo+tXxZeYeoIjHtErmf9oLY7JzdA16Gb+
q/Iuxt8Yf1hlFwf30FyImZ+RLMOTyvcqP1T5raqeoNKNudL4r6rnoLmZav/L
zDN67cJ/d6wx9Vu3XVS9j9H9lbXPUYdh8n80l3b4IXp/ZZ1lbHoz/9FnVvbg
lb5wxdaq9f1m/qPPVNX3VOcf0Gtm70PV51X1JlT9lAT+o/WumbqprlX8R2tx
aE0AXQtU+19mntHrJP6r6nur7IL2YZmafCVG0HWE8W10PtG9icoPVeusI0aa
//W1mKn/qLiB6t/8f/9zGPuiDHTYhdEffQ46n8zedtU+19GPQ/uMI7sk7E1U
VzL/0ZrATG40/3lfRX2JYaDDLox/VuYE9U90vXCcU3Xzn+nHOfqMqhhp/r9/
LUb3CG5uNP99sqj/VHy18ltM38oxD0wOz+iWXE9jxujoM7r3JgwfVPZy859Z
cyux4+BG8z+zd4DWtB1+y8wDk8OraukMYx31tNHzK/c7+oyVHLX5/367M3t/
tEaH9uMqz2z+79U7UOX/jvow80z0vCWaL6H3qOppjF8xvQxVXchdT1ZdM/nP
7P2ZPYLDpqvyIke87CI7sinqPyq/ZerDqpqzSn9VvX0V/5k4Rfs4lc8V33PE
BXql8b9iX0f/123f5n+OLOO3Ff+vcBX1SVXcuXOemfyvzOcoTtE+I8oWdFzN
/3rMji60/4v6vGpf0/zP6R2o/H+kJ8pPR79V1fdknumwr6r/y3CAye2ZerLq
SuY/6jOMrVVnDpv/mbIO/1fV0pl6NRp3I1km51H5OZono73aiizTf2R0Rtcy
1bU7/0d6quq0qH2b/5myKv+vxEUlr1P1kR3nbdC4UOmjmrcKByr2rTy/shao
elWOa3f+V+Z5pCez5s7si6E6tKzW/9Gc03HGgNEfjR0mLtz6OHru6LqD9hyZ
PNO9F9id/4zfomtHRbb5nymr8v+K76nOG7j9CmWmaj7R32Lmitk7oPUExo5u
P1f5fwL/3Xs6tJekmh9mHnbh8I78R2Of4Qzq56hfMb1IRz0K3Tujc8X0div+
g/YHVf1E1bUj/9H1mskHKnZUndNDrx05vCP/UZ5X7lHVEBjeor+7iv8oByr6
oGc8KjqP9Efns/lf91tUZ9Vej+k7NP/34r8qt2TqRSr+M89x+DlqU7QXw5zl
Q3Vg+kTMnsvt/wn8Z+oz6Nlm9Or6f76syv8rskyd36E/WmNxP4exKVPvHf0u
OueqvrNqzzXT/2fyH11PmXUBnTcmD2n+78V/tC6N1nBQH3bEXTL/K/Vbd86M
1gQq9QrVnsvt/6v4z9RdmZiqXGge0vxfK8v4P+oPqnMgKv135H+FpTNzZsd5
kkou6l7X0vifZndUt67/ZMoy/l/RB71fldedxH+m9/30e9XcMmvTSB9Vr5kZ
F2ovN//R+Vy1V1L5avP/DP6jlyNv2Z3/qr6tw0/QeHfU9k/lv6peOnOuGF9t
/q+VZfxfZSNV7xLVP43/Kh9w+4mj74/a/ST+o7IJa6Xqmc3/tbIz7VKJHVXv
Mo3bbv4n+Bja93fUw1VztSr/H8mO7l+1Vjb/z5BdZZcKB5haUBq3b+D/yHZo
zQqth+/Of/RC62bN/3wO38B/5l0VtBaUxu0b+D/6Hj2XjtbDb+A/Wi91r5XN
/zNk3XapxDJ6f2WMadw+lf8V5lfYVbln5vmWNP7P7K27fckxP24/P1XWbRf0
7B96npzRv/n/YT5WYTtj94TzLQn8r9RLHb31mXPe/F8r67DLSJ9KHxDdw+7C
7d35z6zRFbunnW9J4D/6rtzM9+aa/2fIOuyC1irRfFL1XmHzv85V9IyWqv+7
6nzLKv6j/o+uy83/lnXbxbHHV52dRuct7Tkz44LJ89GaP/rMBP938J95t2Lm
XDX/z5BV2QWtVap6Urtwexf+ozU3Zo1g7kHrgQ7/d5z/r/gP2kN3zFXz/wxZ
lV2Ymu2q8xvN/zrbmff1VGdXZp5vSeN/Je5mzlXz/wxZxi6VGEf9dpX+t/Ef
rcu5ech8Hung9p9V/Ef32o65av6fIavy/9H3aN1gZvzexv8Ko2byn8ld3XOY
zH/0XJBjrpr/Z8gydnHs8Wf61Q38T+Ph6H60v7nLeFV2Z/Zujrlq/p8hq/L/
iiz6zOb/Gfxn8tvKuNLGq7J7Zb/MnKlIYE7zP8cWjN9WfLKyJ2XyGVXcJT9n
Ziyg+qP1wIqeDMd25L/qbL97r9T8P0PWbZdVfeE0bt/Af5RjlVwX5f/M/aOj
bz6SRWv+7ncBmv9nyDrsUuEAus9F9wJp3L6B/xWOje5n8l5VPZwZryr/Z2Jq
5nsTzf8zZB12UcUsU0NO4/YN/EefX+n/ojkDUw9Hx6viPxNTqvNUzf87ZVV2
qeQVlZhV9YXTuH0D/1F90Psr7Kp8rxqvm/+o7Wa+C5DmVyrdbpNV2YWp/Y5+
F401VP/m/9o4rVwol5geNDreBP4z6wLjJ8l+tSOHd+c/U/ut6MOsIwncbv7z
OlcYyNTJ0fGu4j/KZ4efJPvVjhzekf9unSv7d/d7N2nPmRkLqP6qq1LPqTB/
pL8qf5jJf9W5JpWfJPvVjhxu/n9Y/rYLt5v/9Uv1LnllTlTnNh38d5xrUvlJ
sl/tyOGb+Y/G0ShGHPqnPWdmLKD6q/RE+5hobu84t6/if2UeHHuB5v+dsoxd
mN9VnfPfhdvN/7o/MNxG949p/Hefa1L5SbJf7cjhG/hfqfPM9Kvmf06cqmo+
KIcT+F/huepck8pPdvGrXTh8G/8d76Q49E97zsxYQPVHL5SZaP1n9EzVeN37
iErOr+oLNP/vlGXsgv6u+4yoQ/+058yMBVR/lT4jnrt7oOh4Hfxn1qmZ7/Om
+ZVKt9tkGbtUfnfVuNK43fz/MH1m9kDR8c78+w/o3Lrf503zK5Vut8kydhn9
buWze1xp3G7+1/UZfe/ugaLjTeM/U0dt/t8py9jFXc9v/t/D/wrz3T1QdLwJ
/K+sg+g7Ec3/e2RV/j+SRf1QNa40bjf/f6gP09909wV24T+ad6nqtGl+pdLt
NlnGLm49m//n8V/1d3gq53/c413F/9FaWdFTVadN8yuVbrfJJtul+X8G/yu5
fWXemPe/HONdxX90jUP3Tc3/e2ST7dL8P4P/FQ6j9ziYho53Jv8ra2jlfqau
m+ZXDt1uk022S/N/X/6jdYbKZ/TvAj3VB90LpPG/0ttl9laozzT/z5BNtkvz
/wz+q/q5I/0rNXB0HhL4X1kH0fo/87tMv0DlV26fv0022S7N/335r/rbDqNn
us+SpfF/1dnOhL/TMtPnb5NNtkvzfy/+o/PA5LHufmUC/1ed7Uz7Oy0zff42
2WS7NP/P4//TC83nZ+bAq/hf6XeMdGBqNav4k8CZm2WT7dL8P4//ldpChV3u
HHgV/2ee7UTXiFVxOtPnb5NNtkvz/wz+j7g9+i1Vj5jh20z+V9bEyv2Mzsl/
p2Wmz98mm2yX5v++/GdYrTrnyfBtJv9nnu2ceV5oF87cLJtsl+b/Xvxn+oaq
c54qvqXl/47e6y5xOtPnb5NNtkvzfy/+o89H815mHhz2mpn/u+2bHKczff42
2WS7NP/34j+jj/ucucNe7vy/omeCzzT/95VNtkvz/2z+zzxn7rCXI/+feW5n
lzid6fO3ySbbpfl/Hv9nvsPLPGcV/2ee29klTmf6/G2yyXZp/p/B/0qdx+0P
Dnut+vtvCfujmXE60+dvk022S/P/DP4z7/Y6xrIL/1dxIC1OZ/r8bbLJdmn+
78t/tF5d0fM2/q+ydVqczpyH22ST7dL8P4P/CX+jwGGv5v+cOJ05D7fJJtul
+b8v/2eeh3HMSfM/J05nzsNtssl2af7vxX8HVx29zub/XnE6cx5uk022S/P/
Tv4nxEvzPydO03zjJNlkuzT/m/+r4qX5nxOnab5xkmyyXZr/zf9V8dL8z4nT
NN84STbZLs3/5v+qeGn+58Rpmm+cJJtsl+Z/839VvDT/c+I0zTdOkk22S/O/
+b8qXpr/OXGa5hsnySbbpfnf/F8VL83/nDhN842TZJPt0vxv/q+Kl+Z/Tpym
+cZJssl2af43/1fFS/M/J07TfOMk2WS7NP+b/6vipfmfE6dpvnGSbLJdmv/N
/1Xx0vzPidM03zhJNtkuzf/m/6p4af7nxGmab5wkm2yX5n/zf1W8NP9z4jTN
N06STbZL87/5vypemv85cZrmGyfJJtul+d/8XxUvzf+cOE3zjZNkk+3S/G/+
r4qX5n9OnKb5xkmyyXZp/jf/V8VL8z8nTtN84yTZZLs0/5v/q+Kl+Z8Tp2m+
cZJssl2a/83/VfHS/M+J0zTfOEk22S7N/+b/qnhp/ufEaZpvnCSbbJfmf/N/
Vbw0/3PiNM03TpJNtkvzv/m/Kl6a/zlxmuYbJ8km26X53/xfFS/N/5w4TfON
k2ST7dL8b/6vipfmf06cpvnGSbLJdmn+N/9XxUvzPydO03zjJNlkuzT/m/+r
4qX5nxOnab5xkmyyXZr/zf9V8dL8z4nTNN84STbZLs3/5v+qeGn+58SpSv//
AelC1G4=
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}]}], "}"}]], "Output",
 CellChangeTimes->{3.773326579233253*^9, 3.77332904041077*^9, 
  3.774171804350458*^9},
 CellLabel->
  "Out[121]=",ExpressionUUID->"6c39339b-d645-4ca8-9601-4d1d479cd785"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomSample", "[", 
  RowBox[{"fullTrainingBigC13", ",", "20"}], "]"}]], "Input",
 CellChangeTimes->{{3.772355752786458*^9, 3.772355821872775*^9}, {
  3.772690743490674*^9, 3.7726907773276663`*^9}, {3.772693549217153*^9, 
  3.772693602628367*^9}, {3.773129897972353*^9, 3.77312991704902*^9}, {
  3.773215225791395*^9, 3.773215243291334*^9}, {3.773295042430605*^9, 
  3.773295058617936*^9}, {3.773329034384303*^9, 3.773329038122735*^9}, {
  3.7741711060775537`*^9, 3.774171106157587*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"6e56c0ab-7765-474f-8007-ce3075da2b40"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1jGKZAUUheFGQUwNXIBbUDGSadzCmBgJLWg0IIyBGAgDgqHbEEwN3YPb
MHIPzoCBkVB0vX7/vfUFSnuQOnXrVr37ffDVt8+/eevu7u67d1//6/nD95+9
fPnww+fvvPmPrx9efPThi7df//nq33/e/P3THx/f//nb+/e//vzj/S9///7s
00++vP/ivb+e/Te/9P95zGs+5j08putar3mtz+0x816r61q7K+SXvs/y9/bS
nV6r69J5j/htPuXftefA0X+f9Rs5+vd+rft1rd5r/XZqXUe/5tF3sPA+j9jp
Wb/Ho3+bE5+N19rj0TNuej4cYbajZyx8Pkff3MJztfY+j/j+lL8Dt/BsPGKP
hRtXfj7UbHYLn8+U52o5f8obV3PXpmfj0Xus3bjy8+Gs16y955r95L4Dt/Bs
PHpfZ9248vOB//l/Yr6pq9B71rPxKfdVuHHl58NZr1l7zzX7yX0HbuHZeNYe
j75x5ecD/zftJ/cdKNzTo5+NhT0+5Y0rPx/Oes3ae67ZT+47cAvPxtp36awb
XbiJ/M//5XxTV2HGs56NhRkvnbfm53LX0b0TP5/Cd35TPrGrPONZz8bCd6lw
owv75X/+L+ebugoznvX+a7PUbnRhj0e/Zu091+wn9x0ofM5Hv//ajPzP/1Oe
J7eWb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385
n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/
zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//
+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385
n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/
zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//
+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385
n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/
zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//
+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385
n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/
zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//
+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385
n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/
zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//
+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385
n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/
zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//
+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385
n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/
zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//
+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385
n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/
zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//
+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385
n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/
zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//
+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385
n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/
zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//
+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385
n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/
zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//
+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385
n9hVnpH/+Z//+b+cb+oqzMj////e/gE+8hQ0
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztnb/KNU1WxQcFEcHURJMJTDQRBSOdDyMDMw00EkbUSBBGRUxEGMRb0Esw
8RIGb8L7cQZEnqRk/fit1V3nG4Pnpd9DnTq7du0/a69d3f3dP/vrP/zLn/nO
d77zNz//43/+8Pt//3s/+MH3/+GPfu4n//mL7//Vb/3mX/3sjy//6X/+fnL9
Cz/6u2/+/d9//Zsf/usff++ff+lvv/mH//qX3/nl3/7Tb+jnpzFmfEs2Or9Z
r1mj0UNrzPrzhZxvyUyvW/M8ub8tn2rJufaXls7X8aEl549TwP/+/ep//Oh7
v/+Xv/HNf/7br0Sfn/6+jk++exqfzJN8Tudc/FF5nrw2NtDS/2KPFjJ/Hf9r
f/Arv/vnP/zuN7/4j39yvE7kTOY5zfmWvzxph0/+rtH5k/HhJLOZ8+s8p8+/
Xn/NI6fvJvN8HXPKZVRmOudpXeaarvHJa2MDLf1TOZM9SmyMynz6/Cum+up3
Xz9P5jzNc5ozkW3hL0/a4VqeZE8TnZsYYmJg6/NW3WHmTNb+VVfJnMleJPZG
sdl6fnNt9Emvk99t6bBVU1N5TrgrGd+K24lu1/vVskP6ufldmoNOe5HEsYVt
t/Rm6g5q59Se15iB1iMnbJbowcxv/lr6pNfJ7xodnvaxxSGYPJ7gomSNCV6i
Mrf2a2GH9Lr1u0mOSHAC3ReTHxe1jxm/wP8LzJDsr6k9Ez08WWsn9WnLxgw3
mOiQ/m4LD9A8TvNFEttb9ZTZr4UdtnRu7N/gE1pLUttu2WorTlI938xDJlgx
0XkL/y/q60V9RO3kZPMURyW4jnKJFFtSDE/33WCSFt5u8ZaJDSQYfs2xtDD8
6bsnmz/ZNvW1dc1l9vdJ3riF2SjeSPad1u+mvl7UmIld0ZxoaqUFTqC/dcLw
SewydpWMobkp8bXEVo389HPDsdBYTe2Wxs9T3jc4Z801GWz/JA+ZYLaEpzV1
9Fv8nqkxzX4Z/zrtC+U0FtxIC4ev13KKSxQfmly84CWozdAzLck8LW6KxrS3
4kCyL+bs0IKHpJitxSGvay7D+dAa0+QsuqenfG36Jgs/WuTKxVqSfT/l1oQX
pf7S4iUSjEcxv6kdKDe16GWYOGD6I9T+qQ1Q7o76r+EWWnxUi9+j/NXiXtRW
LE3ilcEJ1I9aGInaD10Lldmc627Vgy3ONpG5xe2YXkOrl5Hcm0B1SPMXlTmR
c5E3W5iWxmdT0xlskPjpSZ4n8xq1hxaXSOviVo5I7Kd1Tuwks+klUZ86jUm4
qYSzTTDAgvM39QK1W/rdJA4kHIixPYrTkt8ydZbxzUUOMnHe8FS097HIaya2
G94p+S3DURiOmu4ptfO3zh4n+k/sh8bhBedPfcdw4Os4RtdlbI/m3BMuavGr
Rs8mB9F9NLwWxb2L3ofJR+vY1cJ1tB5s3c9FawpT469rQIrnk3jV4vyT+Ekx
f4IxKI4yMdnYpIljLR7J8Dl0L2gOMni4Fd+onZveh8kRC36S1hoJrqP57uT7
lPNc5LLEbhc1oMEqrbPlhotIMC09N2XwLdU5rUNbttrCkC1carg4Gm8XdYqp
v1r53eQIgydpzk34T3qfjsnpLX8xuWzNBSU1FMUqhg9PYnWrZklirPmtFl/6
Vhxo6cHEHDNPizcwfIKpBYw9L/J+gifNWXQaTxb8W8tfTuPNeZVWXk4wfJKj
k1jd0vNiH00vgObT0++2avlWHFjUiU9eJ/5CeQMTW2i8WsRnE8foGunak31Z
PKNp4S+mFqD6pHmZymB4hoRPMxyg2UfKFSfym/1d5DUaB0wcu+Ga+pqxVZMj
FljOxOeTzZgYSznbxK4oN77GPKauN7XDun5pcbYJ3qYcIOUVT/Zs8iw9z7/g
VdZxIPlu6/zhum+V1N2JrS7qMoPlFs9BNfxDYieJHmiv0OAo4y+tut7U163Y
sj6zbfCzqfsMZjjNk9QONDYm+7uOAy0uvYVPWrErwWyLvGN8jcYi47Ot3rrp
byZ5geLqBX6mMYfqyvQfqa1SDsTUfScMRu3HYN3WOV6qnwUmX8SBFv4x+GTB
DVL7NHnH8I1Gt8beaM2SjFncy7++v6DF9Rl7pvXpIh+ZfJrk98QOWzZAY0KL
r3sS35o4QGOO8bsWz2MwUoIHjJ1TvvFJ3tXkTTNnUiOvOX+Kn02sMJg8qU/X
Oa5lSxSz0brvLc7B2Mk6j9B819LJopdEY7jRj6nZT7aR2POad11g+xbH0sL/
yV6YnLXwwWSvEzts5TgTN064PYnh5h4xgwHotbGTRR/zyRj+ZC/JcD6n2LvI
0TQG0lp+UbutMQ+VjXK8pv5t8RtrzGZ6KAu7au11cr+e0UOCAegffR5Rq4ZK
OOR1DH+yl2Q4H8OfGzsx8fM0zxpjLzCP4d8WnH+rb7jGUTRmmvudW7VeK/ed
8H+CJ829wDQOn2KaqfsMn0x/y3CPBku0YnKin1b/18hj4kzLbk1Op5jH3COZ
xB/D9yY5ZcEbLOomyqu37MrgH5MjTr9luBezd2ucQGNpS2azrkUvaTGP0TmV
5637UqmNGcyTXFP+baFPmpcNb0BtjNZNCa/esivDVxgZTB/E5JcW1mpxxWtu
36yL6rOVNxf519g/9eVWP5firjUmSfbIcPWtPVrzBnTtrbqpZVfm/FsLy5lr
qivqv62aupWbTN5p5ZdWj9LI01qjef7Sk/elPqnzda2RrHF9v2erJqVrN3VT
yx4WvArd61bvgGKAJBe3eHJjk6fxtEe54O5MP2uBaekaE/s3sYvqZP051XnL
B1trWeD/G+prynsYHT7Zp6P5q4U9TH1xyr8Ga1GbTHLTzbzKk5h20ac2/vXk
c9oXOl/UZS351897SeJPq76mcan1nJDEztc1Uavv0MKfC26T6p/mJmO3RreL
fkcL05q1mBxkcN36OtGhqX/XdmVqtFb8bNXXLd7D9FlanKSR2ZzFug1HUZun
7xdo8XvGfxf8Uuva9GgoJ9DCdS3dtnT+ZP2brJ0+K4P6KeVbFnGjxXu09oXa
vKl3WhjsLRxlbJ7WfRTXPcmr0Hme3ItEhhO2bM3/Foah9rPAnCYmL+y5la9b
9dc61yzszdQ7Cf43fZkncdSiJ/L12jz3j96bvKjfE9kWe2H4zNb8LQ6zhbVa
7yyg+kzmOcVAc6+94aJpLWDqr/VzUVr21vIdilepzaxxVCtWJPmL8v8LHo/W
71SedT2y6GEZjL3g2SiOfZKXa+nwLR6mVTvTXkYr17T4txZPleATw5+0MFUr
Npr81eLBDG5f67+l2zWv0sLYrbxm5KSxd82jtnqCLR7GzEP3dM2n0fGLPEh7
AQZjm/7aIhZRrmDBe1Pcnqzd6H8R3+heGD1TjL2u001safFyrTolsasFD2Pi
QyuPt/g0Or6FFVu+Q+dcvPN0EYtOdt46d0d5vBZflOh/ne9avMoCY1Pu3eRr
6ncGu7byOH3Ge8vvWnxOCxM+iYsWWNHISfcl4dBa+m+NT+zwhBsTLjHh8Uwf
jXKYp+8+ec587eNJvmvhSarnJN62OMZ1PWWw8anGoZizhVdbul3MSbHik3wy
5TDXeN7YNuWKKS96ij8tnJ/4VxJnknz3Vo5uyWD4z9Pn6+ctU0y4qKdaed9w
2q3eNI2NT/Z5KVZc4DfDNbXy+6K2Snz/FANPcfukZ1PLJzjfYH4qz5N7Z7A0
tYcW/0bzKZUz8bVFPdXyL4N7k9jy1jNYWn1eihXX+O2Up4xdterHVk5vxT1T
K1Gcn9RW9P7lhV+0YrI5w2Nyh/mc5kqKtQzvYbjZFmee4N4TBqY5wuh5kQdb
+GQRxyjXRHFUS+fr3orBinSNlM8/8cZ0H1s5dBGTKbZ5yx6obRisZXgP813D
e7TqlAQbL947/xb/v85ZJ53QvmQiD+VF3+qtrHkGivOTNSa9jMUzdRd+QXtG
xpaetA1aLyRxL+E91pxJMr7F/a753mQta/7fYAMTPw1uobxQwpm38D+tMY08
JuZQeRJuhOIuE8NbfpH0jE72k/yusYeWbSTrTfBzsl8LzoTGqFZNtIh1tA41
eZDGW8PDtGIpzZuUJzf70toLYycmni+eGW6wjcnprTF0fAvXPWkbtN5Jzt7T
eGs4E+PXNOYs+L0EO70VV+nzh9/ii0w9S23e4H+jk5M8Bh8+6SOUr1hjjAV+
M/2XVtxObCORn+L/ZH4T08xeGCxNcYjZu1ZfbJGbWj7Y4osMP5nkOGrnxm6p
b1IbNnym8RGTjxYYY+EjFDsZHT5pGwYLLeyQzr+oI1pcNMWub+Um8/kCy9E6
N/ldihnoPtLc2srvrdqK+oiZf4ExTC+gxfud8IPR4ZPYL8FCCxkoJjSxq4VD
1lzoOje1rhfP5U7qXIO7zDtDW5zJaR6zX2v+zfTpDCZZ5CCDqUx+NDpc8xKJ
Hy3OPi3iUsu2DS412HuRm1ryJ32fxV6cMF6CVYzMrVi0fjZaCwMv1m5y3OI+
7kWtushNa14iqV9MnbWoyxax19QLRj+tvU44iqSPf/oz799c7AXFNlTmVixK
8s5pLXS/TJxZrJ3WsFRvLd679XmL4zXymHptzXOausz8LeoFk8dbtkf1f8rv
NE62sNO6pjvpkPoIjUW0pqNnzlsYuFXrneShz48ye/qWvZnrBUdH6zW6py38
tsYqVD/rvts6ThreL4mT63OhrZou0Xly/ofqLYnhiR0ubIZyy/R8MsUGCc9g
4sPa3ha2anIExRW0ZmnFK6MTo2fK27TWSNfesqWE90vizJr7Xdd0VM/0LBmN
z/TZaE9ikhZupHie5tm37G1hqyYemj4R3SPK9S34rmRPqfyU92it0dhtq76g
nHOL+13XdIt5TF6m/AmNpSYvLHDjCdsnttrC9jfwkK1cltgkvT83wYpUt0/m
u1a9kNQ763fwUbulsddgCcr/n7CuwQ+GG1lwLElebmHaJJbSXLDAjcY3Tf1y
4qxa9rbmeVp4ktoJxT/m3NoC/5t6oYUDW/3r9XPwjN/R929SfEvjaoubMpjW
YOyWzZvap4UbF+tK5qHcEbW3Nc9j1r6wE8NzGoy9iPMU07b0QP2Cfnetq1Zd
sHh+zkke8yzZhGMxGGbRL0vk/xqLaC2wjmMUhyfrNb31xXWLo1jYiYnhFDMs
bL6FaW+o+97CjSZfn+qChPdu+cIC/7f454X+jcytPLtel+nfnWzyyefzr/GY
sRNa15/qmtNenPDGon+6yONP1n1079Y5tJWvT7+b4A0ai1r4v8U/P6n/Vv9i
7YOtswqJnDRGteLAGo8Z26McxUmHiS/TXPykDg0+XOOlFgZYcGIG/5j43Krj
Fnvxlv5vsLfWulp7t+Cx1/6+wP+G30jWQt/jdsojSY2wwB60x7qu+1rzmxza
qgcTn0p8vBXHntzftf4XPf11DZ58nsQZc/6h5WtPchQL20vG0/zYwmyJDAZ7
mDUmeWSRm0y93IqfST2YrD05L5RgicRnk9q/tb9P6n/B5695DKM3s/akD07X
vo7zCx0afEVz4lv8SaLDVk1k5FyMb3Eja27B+HgSu8xzCW7W/5oPae21WRed
3+A3uvZ1fdSKvV8/N/hqjU9a+lxcr3sQrfGtPLvAPMbfKcagsbGFJd7Sv+FD
WtcLLoLmrFZPKtnfJ3uUrT0y+GqNT0y9ubhuYdEb9r213ttydNI7Tp5L8GRs
bOk/4bJMLl7ETGpXyZwJl9jishLdPhkfWrUVleFJfJKMp2exkp5v671UN+z7
SVf0WbtPPtciWVfCZ1IcspCzpX8aD00t0IqZlIugMeG03qQnZfiuVj+iVU+1
avYkr63xSSsv0HloH/Mt/G96kXSPWueyTF5O/I72kU3P90n9U52Yc7ML/p/W
BScbS9ZLsXqrjjO1wCLutXiwRM9rfLLAyUa3b/V9Wljltu+28mmCVVq121qH
lKcyfc/FvrTiJMWfrf6OsYeWzlsytM5mP4lPFjh5YfOmLl7s+wLnLL77ZG+u
dU6eymb2/UmZ1xwXjZNJfbeO4Wb+1hgjw5PnHFr4pKWfVh8z4Y3f6guv7edJ
/2rxzC3Of40laO54UuYWx7Xme81eLLDH4rrFDyzWsoh7rXlovymx+dv6wou6
Y/FdGoepPdBeALXbFpZo+VdLZuN3NM48yYebOoX61OK65ZstHrtV47TkbOWs
pM97W194UXes8f8ph6512LJPgyWMDhcyvxVn1nw45Yha2MOcZ1jjN3pNZbvh
2uTTxbmIdX5fxIqF7SXcIOX9bqjHE2xAse4N8r/lpwZX0L7kzXpb9HcWNfi6
9jG+b/Z6cXbltvxufI1+t8U/3FCPt/LgWzLTeuEtXbXwSWJja07mSZ6H1hqt
dx61ap91v8n4At3rNT/zpD8abmqN8Vq+0KrNTb35lu98lfktXbVsmJ4dXdwX
nOzpwtfW+HaBjRc46uvn5r5Cer3uC98QuyjuWnD7hpdb2N6nXN/gp8aejQyG
h2zFWDPnol5YY8K3cn1iA1/tysj2dZ5F3LthHroXhuNd4J91rXQDF7rQ4ZO/
Rb9LbYye+1rHzyfj/AJr0et1rk/Wctprc/4zsc9F3FvPY3yT1lmLutjYoZFh
zeGs5afrWsSxBJ9TG0v8cV2rrvn/tQx0/nWupzaT1IO0Z2R4/kXMWfi+0fOp
znqyP7Ko31uYdnHd4hZu4DHo2Z7W/C2s9WTeXMhA5zfv0UtyfbKWBIfTZwKf
5KE8fyvu3XD+n+bQk/4pTlvY4Q0Y7Emeap2DWrLR3ETnoZghiZ+35c0FbqH9
lNa9IYt5TjZweg8OjXWUF3ry8xY+TOLtgutb2OGTGOwGnsdwlU/moPX5k8SG
Fz2+JzFJCxOuz1uuufEkdp2uzbnZ27gCqudWjqa5+Ek7fBKDtXLfOlbcwP/T
+RNb+roWaj83582FDIZXMfbWwl3r91oa276NK1jkaMP1re3wZt98Uh5q20/m
IHN9igOJHdJneryVN9cyUOxHz1suuPGFbz5pq09yBXS9hsMxZ/Badmhy39o3
34oVresbeiUJhk8w/yl2mf7Xp/D/5hxOct5ycc9U63xvK34aXbWuW+eRWnwL
1cPCDlsc0ZoXWseK23gMg3Poe9/MOzdb75W4OafTcziUS29x4zTXm/jWsltz
VmrB6Zm8aXg/c/6K6jaZ8y3fvG18Yttv5cTTdxM+n17THgH15dvqqWRfFj1N
ikOSPEXzsqk1jJ0n+lxwBcnnJm+eaueTT30dk/RraM46zWk4otvi9reJ/6cx
c4Enk3Mg5r0S672mccNgUTO+tUdrjsXkkbV+Fmuk6zXnglq8Df1uoodPidut
8Qsst5bNxKWW/xrc1dLPOtZRjLToRZ5wHcX/6zy11o/xC+MjNBe3cjrFYKfv
mrrm5rj96fz/bb755PWn6JP6qeHS1/Is8lRyveiD0HpwYbfm3tskp1M9J/PQ
vW7VgDePP9nMW2eTnvTNJ6/f2usWb9w6z0PPlhh5qAzUL+j5BIPHTH4052oS
mzF5jfbmaO+PxsBPOePRGn8D///keYwn/97a6/XZG1Nfn9bSut/W8MnG5pOz
BAscnnye3OdiarEk59LPDf9Pc2uSU1o5+rbxCzts2W3LN9+6fqsvbD5vzUnx
tulFJmtJzgG26n06z5r/pLkpydeG/6d2sjiDQZ/vfcMZj3WseIvHaMXSn2ae
5+brtT4TH2/xFYtrUz9SvSWYNqmtDE5+C59QHum254uuY8WTPMba938aeJ4b
8h3du5Y+k1r+9F3KVyyuW7wr5W0o3qZ22DpLtsAeBtu36tPbxr/F/y98/y0s
d0Nt+Hav4//aO8OlJ+tNzo0YeVr6afUWTZ+XxoSv8ifjKb+3xh6UR6Lxx+Sj
G8a3cmvLr43vmzr0E3meG7iLJ/Mg5aWpbAssQeUxcds8n8Hoh/oO7UdT7EFz
TWuvb44VrTr3rRxEfT+pQz+R5zF2+Ol50PDPBldT3Zp1tXyEYng6P43hiWyL
OHzbPYO3xYokNr4Vl6jvL/oIT+LbT+GFnpQ/yfsUy1EstOC0W+cZqB7o2pO9
OMXwkzyGS6c+nsQKihu/Tfj/Zv6fnhs374D4xL1r7ddteTDxXzqGXpv3xC1w
CO2ztHTSOmNJ74MzejjN/+Q9g58SK8z1Oi4Z30/s5AZ8+9b42/Jgi5808yR8
BeW0zV60+C6D+emYRIfUNmjt38qPpp9+s+9/Ch6msrXw4SfyPHT8bTwPxX5U
5tM85j1xSTyhOIRi5hvOAFC+iH43eTfHmvcz7zm9zfc/BQ8nsiXPA2zV47ft
3ZP111p+mtMTmU/zULxtOOcEhyT4meIZUzct+HaKu8y1ic/03QG3YWaTo2+L
A+bsHH2f7yfu3bdpfJLTDW5cvDPO2La5x4r6y7rvTzH2Ah+2eD8qj4kzN/im
uV7IluB5mpta9fJte/fp41tnes0ZD3qdYD+Ko05ztnJl65ry7Ys40+IQ6D2D
yX6ZOPMpHPtCNnN+jNotrZdv3rtPH2/O9Ca4uoXhTzaz4IQNl77gglp+tIgz
ye+2MORpHnNPwQ2+eYrD61om0Tk9o0Vz3Kfk6G/TeHOm92Sfb2H4kzyt+GZ4
b8MFJfu14J1a+H/xvFDaV6K/dQMGo/inhfeSWmDR3/mUHP3p46kNnGJs4mtP
YviTDC1OmHLmC06GnoNq/ZbBrubc0aKvtOhrLHxzIVvrHEWrv2POD9wWV28e
b/aLxm2D5SiGN/b51lnNFudD8f+CT27lfYNVEpxP48m3if9P8mYLK54wAH3H
x805+tPHJ/uV7BH1NYqfE1s1PMyTZzUTnSf6p/g/qeuNXS3ez5jExtb7T2+L
LdQ2qA4pB2vmpzjhU3L0J45P9qKlf4OxKa5r4ajFWc0WBjb+aLjfJC6tz3JQ
LGp0e0NsWdRQlKelazH4ZMGP3RyH3xp/qsVavKjB2KfvmmdFJjF8fVZzfZ7B
yNPK46YHZOJw6/OTnbzly4u4d/KpFt9uMFirBv+UOPzk+JNvnvDbwjdpDDHn
OpLYSz+/zQ6NPJT7pfvSOsuRxOFFTmzVEWZ8y97WvVR6neAuWoN/Shy+uZY0
+5iMp88DoWc51mdLbrNDc1404X5P8qyfz5nIafLgk3VEK65Se0vyCJXB6Jny
PAbf3hyHnxzfwvMJ907ri1M8SeY3faWFLT1ph62+ajKnieeUX0p+t/VusgWm
fQuztfhzukeJnhdnkm+IqzePN9d0H0++ucYki/dGrWV+ixeiecTE84QLMvZ5
qlNaPdBWHfGkLz/Zc6f56HSOaO2bP23jW3UZ9bXTmOT8GF1jIkNSp6z99DY7
MXMm8fyEE07fPdlGK38l60rWYuqINf+fjGn13Bc484beyrdpPLVb8xw/0581
tp34b+uZJAsfuQ0PGJx8sj0qP70Xex1zTB3xVu4+6bN1nrOFOVu+f4N/3TC+
ZasJZqZ87Pr5AwvMv/CR2/AAnbOV60+yJdh1HXMSmd/a00TmpC42fUCDORc5
7gb/+vTxJ9ugMZzGB+OPXz9vYf5vE/6n3Gwyhuqc9g7o+a5WzGnFqCe5u1P9
TjFeC4PR8a08fnNcvXm8wRvmrCY900vtqoX517q9Yd+Nz5pagM5p+rzmt26L
ReacW+vsX0v+Vh6/zb9uHm9iBcV75ux9a55F7d/S7Vv7TtdOeyuLd7eZnJ7I
n9j5DbGI1uat+sLI3+qz/H9f+BmMSrnEpBfQ4hlaeH5h5zfvO8VXpreyuKZ8
YAv/0/OKiz01tQnlWhd1dAtr3exfnzI++W6CwUwvgMb/Vu9gYec34/+Wzy7e
0ZZcm9+i/awWFl3sabIXyVm+k8zm+ajU/inWutm/Pn18gg9p7Wb2jta2Se/g
5BfGzr9N+MTU7wlOpteJ7Z1+i+5jC99SXp3O/9/3BIzz
       "], {{0, 128}, {128, 
       0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztmrGKXWUUhQcFFSxFrBWsBAu1scgMvkLiC4xBq4AQQVEQBF9Ca6tU9r6C
rxDEd7CyMwGLNBfOzv/vdb+75ysiK8Px3HP2WXut757Ju198ff+rV66urr55
49l/7t9+99njx7ffP3jt+V++vH308UePXn0mf/r/z3P92x//XP/89+v3bt/5
/N77T3+8fu/q6fWvv7x98+LPV445dfyRn1ePOXJtK3rXfe363Oq9V8+TfI7J
59J9fPXaOu63ur8du7Zyzo5d7pj/uXy4636fVcDN7j8Pf3jz5tOH3978/u+H
J3X1+FP6g0+eXL/11+N7D/58ct1x/l33VZ3VqWNevN8j9149z5Hz75rzufxz
5L6qx3df/4pnjsz5yPmrfques2OXO/KqO7s6cmblWVTz4cjPqznzoj7SfSvn
X7nfjs86cl8vHnNkbqf+3yPHrDzHlWNWPveIZ3Z5bNf179rHFR9W53bkXqp+
3uWxXT9fyfDqPFdyproX1ee+K6+qObYrS6tzqO5g8rM6ZrXSTbu+syf9sysn
d3X6yj6u8MAuNuvotV0z6fbwLr9Vd6G7X3Y9u105Vn2mHT1C+KwO/l/h3nN1
U0fm72KAXcfv+u5Z5fMONtvlve6M6vBVx16cy9u7GK/DY6fut4PJk5/VkbG7
9jfZTefi/5V+XHnW1fMfmXlHp3S8M0xmVNJXu/h2V352vFc/l8c6enaF+Wn8
vyvTkt44F//v8kl3XnVwZke2rPi8I6PuMv+vdG5H/iR9u8LkR+Z5Kfy/K6M6
vLHLh93fBXb1QvUaqj7s5qhd2bLCA0e80Z1Ll8L/K98F7hr/d7NWkv+737t2
eK+Dezsybdf71VPX0JFL3Rm48n2n+7v5XeP/FW/v4t5L4f9dnUvm/w5O2/Uu
uoN7k7vZzVQdnJnMlpW9Xsko+T/fifL/8c8ivGM517to2u/jdjHDLqZKdlnH
9exi/iQXnUt3Z1F3J8r/L9fp3T7f9Xu07hyj7eMKMxCYv5ujujsoyUXyv/w/
if93ZVf3u+jkZ3XsZse/HyBk77k6qPqukpB1ScZIPgv5/3L5/9Tcdn0XuGs6
+Y7iXNl7rnl2/A49mUvdjCH/y/8rHbRy7wRepWVmxzsKQpcl+b96PbvepxG6
byUrkjwg/8/g/yPcRXtfTdPJdxTJLiNc58ouyP8Zb5/rnPL/+nOvcld1v6bq
Xf9GhTZDwnWu8Bghl87Vg0lvy//z+P9SdoGmV97/EK7/0vl/hUnk/3wOyP/H
Pyv5Dpm8CzR95HvTkZ/T5kl47tXcI2fduXqQlgPy/8t5W/6/LH0pv+et7iYt
93Z1KJl55P+8b+V/5i5coibk5y5PEvj/LjOP/N/nW/n/snaBrI+8/ydcJyFv
CX1EZh75P+9b+Z+5C+oZeUvuI1r3VbMiOX/5X/5Xz9DyP5N55P+8b+V/5i6o
Z+QtuY9o3VfNiuT85X/5Xz1Dy/9M5pH/876V/5m7oJ6Rt+Q+onVfNSuS85f/
5X/1DC3/M5lH/s/7Vv5n7oJ6Rt6S+4jWfdWsSM5f/pf/1TO0/M9kHvk/71v5
n7kL6hl5S+4jWvdVsyI5f/lf/lfP0PI/k3nk/7xv5X/mLqhn5C25j2jdV82K
5Pzlf/lfPUPL/0zmkf/zvpX/mbugnpG35D6idV81K5Lzl//lf/UMLf8zmUf+
z/tW/mfugnpG3pL7iNZ91axIzl/+l//VM7T8z2Qe+T/vW/mfuQvqGXlL7iNa
91WzIjl/+V/+V8/Q8j+TeeT/vG/lf+YuqGfkLbmPaN1XzYrk/OV/+V89Q8v/
TOaR//O+lf+Zu6CekbfkPqJ1XzUrkvOX/+V/9Qwt/zOZR/7P+1b+Z+6Cekbe
kvuI1n3VrEjOX/6X/9UztPzPZB75P+9b+Z+5C+oZeUvuI1r3VbMiOX/5X/5X
z9DyP5N55P+8b+V/5i6oZ+QtuY9o3VfNiuT85X/5Xz1Dy/9M5pH/876V/5m7
oJ6Rt+Q+onVfNSuS85f/5X/1DC3/M5lH/s/7Vv5n7oJ6Rt6S+4jWfdWsSM5f
/pf/1TO0/M9kHvk/71v5n7kL6hl5S+4jWvdVsyI5f/lf/lfP0PI/k3nk/7xv
5X/mLqhn5C25j2jdV82K5Pzlf/lfPUPL/0zmkf/zvpX/mbugnpG35D6idV81
K5Lzl//lf/UMLf8zmUf+z/tW/mfugnpG3pL7iNZ91axIzl/+l//VM7T8z2Qe
+T/vW/mfuQvqGXlL7iNa91WzIjl/+V/+V8/Q8j+TeeT/vG/lf+YuqGfkLbmP
aN1XzYrk/OV/+V89Q8v/TOaR//O+lf+Zu6CekbfkPqJ1XzUrkvOX/+V/9Qwt
/zOZR/7P+1b+Z+6CekbekvuI1n3VrEjOX/6X/9UztPzPZB75P+9b+Z+5C+oZ
eUvuI1r3VbMiOX/5X/5Xz9DyP5N55P+8b+V/5i6oZ+QtuY9o3VfNiuT85X/5
Xz1Dy/9M5pH/876V/5m7oJ6Rt+Q+onVfNSuS85f/5X/1DC3/M5lH/s/7Vv5n
7oJ6Rt6S+4jWfdWsSM5f/pf/1TO0/M9kHvk/71v5n7kL6hl5S+4jWvdVsyI5
f/lf/lfP0PI/k3nk/7xv5X/mLqhn5C25j2jdV82K5Pzlf/lfPUPL/0zmkf/z
vpX/mbugnpG35D6idV81K5Lzl//lf/UMLf8zmUf+z/tW/mfugnpG3pL7iNZ9
1axIzl/+l//VM7T8z2Qe+T/vW/mfuQvqGXlL7iNa91WzIjl/+V/+V8/Q8j+T
eeT/vG/lf+YuqGfkLbmPaN1XzYrk/OV/+V89Q8v/TOaR//O+lf+Zu6Cekbfk
PqJ1XzUrkvOX/+V/9Qwt/zOZR/7P+1b+Z+6CekbekvuI1n3VrEjOX/6X/9Uz
tPzPZB75P+9b+Z+5C+oZeUvuI1r3VbMiOX/5X/5Xz9DyP5N55P+8b+V/5i6o
Z+QtuY9o3VfNiuT85X/5Xz1Dy/9M5pH/876V/5m7oJ6Rt+Q+onVfNSuS85f/
5X/1DC3/M5lH/s/7Vv5n7oJ6Rt6S+4jWfdWsSM5f/pf/1TO0/M9kHvk/71v5
n7kL6hl5S+4jWvdVsyI5f/lf/lfP0PI/k3nk/7xv5X/mLqhn5C25j2jdV82K
5Pzlf/lfPUPL/0zmkf/zvpX/mbugnpG35D6idV81K5Lzl//lf/UMLf8zmUf+
z/tW/mfugnpG3pL7iNZ91axIzl/+l//VM7T8z2Qe+T/vW/mfuQvqGXlL7iNa
91WzIjl/+V/+V8/Q8j+TeeT/vG/lf+YuqGfkLbmPaN1XzYrk/OV/+V89Q8v/
TOaR//O+lf+Zu6CekbfkPqJ1XzUrkvOX/+V/9Qwt/zOZR/7P+1b+Z+6Cekbe
kvuI1n3VrEjOX/6X/9UztPzPZB75P+9b+Z+5C+oZeUvuI1r3VbMiOX/5X/5X
z9DyP5N55P+8b+V/5i6oZ+QtuY9o3VfNiuT85X/5Xz1Dy/9M5pH/876V/5m7
oJ6Rt+Q+onVfNSuS85f/5X/1DC3/M5lH/s/7Vv5n7oJ6Rt6S+4jWfdWsSM5f
/pf/1TO0/M9kHvk/71v5n7kL6hl5S+4jWvdVsyI5f/lf/lfP0PI/k3m6+f8/
W8uLmg==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzlnb/qLVlexS+KYuwb9JiJgYxM2peJxaT7CVrQaECYAWWyjgwMZZ7AyNh+
BxMjH2BS88mESewBhZtsWcvP+uyqOwbncu6hap9d372+60+dqvp98Zd/89Vf
/86HDx9+9gff//PVN3/345/+9Juff/37v/nPX33zkz/74U9+9/u33/736zfv
f/b3P/z45//2L19+90+/9/GP//YPP/7nf/zJx6/+/R++/PTz0/tPtz/tu/qc
zCf5LnLs7TzbORs1IXUga7eqM/l8tS9Zu1WtbMysMLbCpI3V1dxsnlyt1/cS
8PF/Xu08P9339Eq+q51DMp8f/etffPzTD//45T//0S+ieZ7mYPRaMufT/ElN
SB1O79vtSb8QXBGsJmuUrN2qVi3mDR1JapXMOXm1fUHwQ+a26rWbPdWu0crr
kn5feYzkfbvuRq6xjzEZ/9PjTfBDuLFdd+PYk/GTHknm3GrKyisS72Tjk2yf
YNXO7Mb4Rk+tcEXwttLxdnx7rYl+EW9vrNdp+0/xk8yT8BXRCKMOxCev+mLV
OyvME3yuPG3bj6vMboxv99TqvFA7juE5Vx7Dztdk35V3NTTlprauatvWoX0Z
vNrmr+S7TvNvz7e0+Gy/N3kZPLDqLzu3tjhpsdpiwPAY5Dx5Wwey1kZNDK6w
MWZoq/35qgdPXNfy6mnfU/5K+HblvVfca2N1xW/kvaGhLU6S9WrrkGgx8Rif
zu0Hv/r643e//vDxi19+W2OeeFpSB1ITgytIHdrxV9qa1JB8bmjiipdO47S9
kNS2XUeiuTZWW45K8hT5vabVBfucQNubye8FRr8YvdZipv09buVVjBraY7Ye
coUHw/u1fbTyTsSL2ucQ2iyQ8MxqnmQd29+zWm/ZnpdbrXtbHzK3Vb8YvWZg
xtCyVR2IHzD48PQyzuMRzBhehXiGxIsaGFhlAYPzV+v4lJ6e8lfSI6vfZUjP
kp5qM+mqR1b6u+Iu0muGN35bRkh6ZMXPBOeGd3oqH638iZ2LSZ5qr6U0cGX0
aauPhl4TX21k1WQOq34nWmZnCtsn3MyAq2y7wuHKOyV8RTSo5YTWnxBsEG5v
sbfymURPjVyT1NC4P4LMbaUv5Lja+RAuJVlghZ+VLtgZ4TS31kcZx2hrip2P
Ek6wc5/hGw2vu9LTFsOt9p22IZhZ1YT0oMEhht9uuZocb4ufm9ckrHygwcOf
C8+0NUw+T64XTeZgcMXKTxIftfJU5FqRVb+svPfKNxoaSmqyuo9g5T9Xx5vo
/qfvV7+JPOWZSQ3fxjNGPiJ1sH0y4d4E50SbWk+1wqRxLC0nEH5uPUOroSvv
QXh1hW37dyiCq2Qdn1qLhIfb57A9xTMrPW15oNWIFVcQ7jX8QIvzts7G/aor
nW09z4m7yHclGrrCvMGrxtrZ/tn2hMZa2FnjJs/cvOZk5bcJ5luOJTqS1HnF
jYY3O9VhdR0jWS8jQxFftMKtkbNsHLaebZXRbA5J+svw22/gGeIxSL8Trkvw
szr2lpdI76wy0U1v1vYyef4n0ffVc9QJbsl7wyMRziE8aed6g8+TcWy8GRrd
eoz281b3CW+vstVqm6R3SH2e8mYt5yTZIcHSCgMtt6+8/eo5HsQjGc/MaXXK
yIkGn696bYW3lUbbmnuTtw2/vcpuK2+fYMn2Zi3ntP7fyG4kZ7WaSPx80qcr
HVz1SMJj7RxW/nB1XKTXVngjPJP070pzb/K24bfJ89aSmtjYNrzZah2Tcz6r
miRr3fqxlbc3ak76gvwdH7IWxu9i9vmHlecnupnwDOHk1Vrb+WW1XsT7GT6/
xYD93FTCM+02pCZG3lx5+1Vv3szOK49N6kwyiOFhWu0gnyd9lHiPld8jXGrg
hPjtm2vXfleLbSMLrDLmyles5kx6fPXM7Zu9Seq8wjnpTeLVVx5mhfPk83b8
lXaTHJcc1wonK8w/tXZJvjByU1vDdo1WOZHModVZ4gGSfdu/kbTqzdXfbUnw
k8zNPvdl5B07I6+OfZWh7Exq4KTF/FMYW/W44eVajl399kEwSa6NWXG7zUUr
nTX4weCfN+Sd1vsZ/bjKLMnrDfd9r3Cy2sZeu7bH29yUaGKrxYZmJXNu/TPx
qCuvuMpERGcJJ6xyRPt6Ku8QLlr141Me46l9VzhZvV9hbNXjBseu9MjQrNPc
Vn9jlHB1e4w3r78l2fkNHt7IvIbXIvyz8qhG3rm5r4GN1bWarTde4fYNWE30
aHVNY+udjMyVcHXrUYmvWOFkxZ+2hydzIH1hPAeDPPNtdSzJ+E/ta/Qv4cNV
HxHfa+eClT80vFCyFsazNw29brmx9Xg3s/PKm6287grPKy+98vkJzlceY1WT
1XGR/j1xI8FY2zsrTj5xgn2+YrXWNp7t3ET02sjyp+9tcUI89koLyFrY2ar1
0mT7Vc4lWt/Ojexr9K+BN6N/DU/V5i8bJ8b71bOpE422n3u5yj43fTjpi9Va
rPC8yn1Gv7f4t/Fg4Kr1FcSDtXhb8VvrB0gfGVpJ1pf8LpCsi5Gb2rU2OO2p
NW17s/VyJPOudJBwNfFUT13z/DbObzHT9u9q3wQnxrm4FVZX5ytWXneRLZZz
JlqW8FLLaU+t6YrP27mtNM6Y51Pn1ZOatN71KS0ga/EGnWr7gvDeKkcYz8Vq
eePmPZtPjU/mYPgK8l2EJ1ueaXtq5RmSeZJzDjfnaXDyTf58gzYRTNp9+jle
n2BzdeLDV+Pb3LLyFavvMnrTwJ7xPqnJU7y04m27zgnG3qBNhD+Te1pXfdrW
NskFCXeR3z5aLl15RYIlG29tDRNfQe47WHGIoaFvO3fxhveEt5NsbnC17VeN
ep4w2e77/+H6hLZuRkYgPvkpvCVZJqnzipONOt9c9zfws835LW/bvojkSuJX
jVzf6pShlav6t5gh/t84xta72tcUGZzW+n/DH5K+tu/Naevz26QFK04mNWy9
McGb7QHewO0rH55wdTvmyuOt+CeprXH/gtGbbQ8a9y8kPZtss+K01br/Np0j
WnFyMubN57G0+F95gNZ3GdxOfHXb++1aJC9y/sr47cDwe/Z5j6QH2zknmvVU
rQgnGOv+Zi1osxV57sobMtcJ/20PEv0ysvBNPCf+7Q3Zs615qykrHLaegWii
zUuGn7cz3QnbiZd4yjPc1NCWk415ru6vX51zIDhPtl/1zgrPn0v2bP3/KnO1
OEz43MiGhj839k1q1fpGQ2s+l16z/fPquAyP2r6M564Yvmt13sCeZ+sVSf1X
mbHVmgSHttdN9CjB/01ctfmRZLqV1hie/2YWM/zziqNWurmaZ+Ir7H4h/NbW
0853RvZsdbwd8w062PK2sV4rXJFeTurQ9jXBaoK9m7224kbiEwwPtuJDomtt
9jH0N+E3ch7AuLbB1r6V7hvjG9hueZLUpMWnkWVIPW/iod3euH6VvF/5tJUH
I/6WXJtn+Hyivyuflnxu9J2hfcQDE79tZ8DkeAnGVp8nuGpru/KZN/Gwwo+R
xcj92gbvtb76Dc8QIz7fwEDr01a90+67yp6rmrRza7li1afE57da335O1mKF
eaLLNh4IflbbJ7Ui/o14lbZu7frezJ4rvWvXlHAy0aN2fW0eIOdSSL4gPLzK
Bav6rD43ch85ltW50AQPyTG23Eu4+qafadcuqVvyXUYua7mR6B1ZuxXnEAys
8ulqzu370zGu+NPI7ytNOY3Tfk78kuFtiI9t8bDSbsM3tvzW8raBydP2yf2J
K/9v+HzSa4k+voG7SD+uvLp9znClHUTvVjy/8iHGb3mtt1n5Z1LzVruNdTHy
8krHbb/a8ifxDKv+NbyQzQmJHiX9aHt14ldXXG33MvHnCZ6JVzxphP2MF9vL
Gf1O1oXkL2Pfm73TcngyhxZLK00kPZu8yPhtHZJ9E34wfNrq3OxKcw0feDre
p/we8fOEq1dezuDMFc+0WGr9cJtxDAy3vdnyoZG7SQ1vcqCRKw3tW2VDsk3S
I6QXbH9+0+8Zz9Rq+5dg+FTbp+4fJFlvxcNtnQmGyffamY5oYoK3pziw9aJG
rVbPd0o8QPJaeWzbk5CarPyeofuGr1iNudqerGmrmy0PE1666bFb7rKPZZUZ
bQ4kuXKlp62PPe1r5JTku0hWJTVs8/LbcoGh9faYSU+t7h9ss95NHr55j9up
tqRuq/Ui+Fl5FdLvbQYxfNcqaxgeo60/ydSEE1b9lWAg4ds28z6l9cmYtp80
nt9i8LAxn5VOGZm07ReS4+xnwxJObjV0da+0rQWrObS1IvVc9eNTueCmptvY
MPxkq/Un/iGeoT12kn9tnWo9jMHthmezPZ49H/u7jHFW51sIlk69k/TjyueQ
nnqzFhjYWPn/VSZNsPRUbVc6ZTwrvuUB0neruRGNMOaT1Mfwk2SclXYTTSFr
3WJ1pePt3N7A+StsGM8PXPlGm+eJJ289z6q/2rVr16LlQDI34/wAmU+Lmfa7
iDewNZpoCsnLto60fUF4wOalFTaIPp6+18iMb6hty2OrOTzlM2/6E6I1pD6r
YydjJr1j141oSuvTThxi6AhZx9U1P6s+WmGj9ZYGvxHs3aytsS43Pa1xfsPI
lav6J/Ux7tMha0H6xc62K06wNdH++yMrf2usUTJPWyuJpyUZ8KZPI+tiZF6j
p4y8djOntB7SyEe2ZyNrdxrTeN6C7TEMPTWeubfyEqtrVm/+ra5k39V1YoZP
I+vSrp3t+W/mtZU3br2okS8S7rI9m6EvZBtDs4ysSubW1opwS1KfFnsrf9Jy
4Kof27672SPJPFusJjxgrPUqr62ez0N4e3Xs7fY3nxVJ9CXBmNF3ba8RDBA9
bf3GU/nuhL2VP7F1/KYfID3SegzCV6vsRnJZm9dW3LWq1SqTku1XmGzXwn4+
XnuMyeeEZ+z5r3wj0aNVLludiyDHTnDe+gHSI6ssZmO4Pd62Z23crnq/zeCn
F9l+1Y+t5yRejvhYI08Znmo1B6L1xCO1vnTl7QlX2H6brFfruwj/GBheaauR
vwg22nm22xj+f4U9oq2JHhl99LZ9jTkQrSc4JPywuifXmI/hB5L1sq/9I58T
TSGexM6w7XERP0M8Ruv/k/FbvCXjG1mVZKik5va+xvwNPm+97korE8+w8saE
W4jvbfHf7kvy1Mr3nvZd/Z6YYPKmt0n8zOqcnuE5T9hbZRw7VxJM2vsmtV1l
WNI7ZC2IVrb35Ca91s6nfbW8auCcZEDipRPtaNeR8BjRYuJtjFxjeEWCK+Lf
DO96wlWLSYJngpmVb2y1e3XOhPSC0csrv2fPZ+V1V8fS4pnUx+Ax4knIOKfX
6ndVoqHGWrf+jejCzRxhvF/5c5KzbO5K+sLu5aeeed7OJ5nbG/httX3rYcj4
Nz83vNDqPMPKexgecvWcHMP/GJxP/LmBpRV3tVpm9DKplbGOpGdJZl99vuKZ
lYdZfdfqc8MLtb2WvOy/DbdaO0NfntKCFf7bvEnOdRPuWuXKtm7tvivNIvNv
55DUdsVvRPdX918kPuTm32OycfW2/G5wFPktb8Wx5LhWudvIm6s1anG+mtvJ
9yYYtu+Bannevi70qZyywu1KB5Ptk/FbTVzhiuQaI78bWdL21aSeN3utxZWB
k3aeRFMMbJ/uzV+N39aqfVaAwb12TjGu616txWrfN2g0uY/D1nTCUQbnJ8d1
6s3W15FeW2UogpPW2xj3Jjz1fPLVNW8tTlo8tNy74vn2mSqES0kNDa6zxyf7
njz5Kr8bWaD1AIQDkzkTHSG9ZsyBbEPqnGTYNvOS9TJ8RcvPBg6NvEZyyum4
2vqsvuvms6xvajS5FnTl7W0/Q7JY69mIjqzOJxCtNLLSak3t+bxhbkk2N7Cd
HGPCjcn5MfvcRcsJKwy3viXpO6PfV5ml1UqyfbteK8+wypItbyT9RXrW8LEt
t6x40sDDzbkRv0GwbWjWD3719cfvfv3h4xe//DbijRVHGV4uwXDbXytf1PZ7
UvOEc276f5JHiGdoeZLk8Zuc84Y5rHhy5SdbfljNjfiHZA7G364yvHRbE6Lj
bW1X71vtMOZg5ILT/FfX67beZqW5Bv4Jb6z2fWoOK55c3T+yytHt3NoxW24x
tJtkyaRWhg8kXs7mW9vLrepDcpPt04z71Fp/QrxiwhuEc1a8uuI9wpNGdk6w
Tbiu9fM3eWnFt4YeGdccvoFvyXtbd1YYbnvc9o2kVqvnnZLtV8fb8iqZA1lH
wueEc1Zcl+D/KV5KtNs4X9S+//S3g/ZYbmbnVZ2N+ttZ+6m+Np4dYfNbW7ek
DisvtJpD+2qz2xt8zucyzk0deUMeIf1o8C3xDCuv2HImOa6bfU005SbXkbmt
/MbNOax6ZKXdqx75XMa5qSPGmIRDkl4m2Xl1XsLAecvhxvkWgh+CjURT7Kxn
6xfB5EmjyTi2r0v69w0+5w3j2P7WHvOp3JHgqsWn8Xxv4tNIj9j4SY53xaWr
YzE8eVuTFTZIVjJ83covPeVzbo5Dsp7hzVbHcjN3nMZfXev+VJ61+2iFH8I/
CZ+vcLvyJ6Seb3uu7CovrHxX61tWPmfljYlWJp7HyFztmDefb2Bgj+CwrS3B
cDu+PeaKfwxvY/uTU01Wczv1+6n+yefJWrc8Y+eCm97ptI7G+Z9kzHY+JHO1
z7on3mnV7wR7q+O66cNX+xpjtvxDrvMha716zuHq3Eh7/dUq15zm2W5PuG6l
KcTn3Dz/c7P3Vx545Z2I/0zmSTjKWNMWk62vNrC9GtPo/VavW44ysonhD0mO
INhYbdNyuO1/Vrqz4kPS+6dX64FP72/eq2V79fa4Vr7L5ooW26sxjd4nucn2
lsSHrOpGrqMzfCPxh2S9SM+SHGRrk9H7Sa2SZzgn67LCwMqrG/uu1trgjTbT
3fTG7Rz+r1nqf3vZ/Wtr6+lYVh6yPZ9mP1/C7oVV7xNtMnrf9nXt58TbrH5/
J/u+7X7qlufb7Yk3XvWIkfsMb7nq2VVGa/kz8Y2Gnhoer/U8hKNsvm2Pt+2p
VX1WfUQ8APEMZF97rYnOrp7F125DeqTtX+IDb65pq62tRzV8I/k80Q5SB8JX
hKNWvXNTO9qatx7P5jHbS38uvi7BczKm/YzN1Zq2+Z3kfbKmq3NixhwIP7d+
z9CgxBsQPid9d/N+BMMLrfBDMLzS5TdwvuHriBc6vT89i29V55VeJJ+f+GfF
ycmatvmlfX+ag31thoENm7dXOrvyNkTjVtph4Gd1vugpHN7EEvE/Ce8Z53Bu
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
+jSDi0gvvFlzV9j79PVfMPXUtw==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztlz3KpkUXhAcFfwITXYFb0MRAR9yCrmAEjQYFBcXM1ND1mLsBN2JkrIKB
yYjP9LnqXKe7g+/jEebtu7pOnarqdz//+tMvX3ny5Mm3b/z1f58++/6Tb755
9sNnr/39H188e/7+e89f/evnj//87+/fv7z180e//frmh3989dPTf//+8rvX
n/7+ztsfP//lg49X/s3/+f2ic6rOX8Hzot+P4l/5N49iW+Gz6r5VWqrSYRW3
hE4IzVTpyjYLWrePfpf2kC6fJDRGeBrt/ys4q34TPma4I425yx9O4D85iyRv
Vf5m0AbdgaswEH0g2f+7MNAZYeO2K3+rPGo6/1NyKul1XTqnfZLgk3hrEPtC
9AGCfyIjzNwm85footP5T87C0NWr/Krrb4l8T86OnnuyDxAZ2tWZu7hN5u/K
Pib7cJe2bTmV7MxdcyfmReQIfSa9L8msTO4pnUcEt0nOq/pMEkOXtg05RfSo
5E51aZXOffpMel+IbLLtqXkfbZ7c1YEN/BvmS+9m1VvD5v8Ez0k+6fdC1d8S
/kDsaRUeQ1YmPbmrAxv4N8y3ynOSXmHwf0N3Te5j1b5MzK+q/O3axy48dKey
ZRChbXq+BD+EVxiywNZdib0gfDjZ6wwZVIUnOaMuT7Z1KsObJTnfqrxIekJX
FtC+Yehmtmztyi9DbtIzSmpySqci+J8y32SHMeRsV/8nuivdr7r8P5lfhtxM
9p8qPRC+YetUxE4Z5tvFeRI/4VFdPapLe8ls7covgudk56H7RtfvZJ7S/TnZ
b1c0THOe7K70vaq8lN5fQyehs6/KwwmfpN8RdN8gcv+EPDX4eXLHk3wSHbKr
o9Ln0H2P6P9JbSf5NLxfaDzJrmXLU5ufd+UUwWfVntL7taKTqv3tyuiuXUvq
gdipqj5Q1Tfo3O/qWl0dY7qf0700qb3kfiW7qGG/unYtmUET3y9dXndynp7g
57Zd6PIc4veUjJ6SrUSWGbylKjuSXrRrnp7g51V3MeQgPffk26Qro5M9jdBG
0isI/5zYQ3bNU2LXbH5e1Ysm5iDRCQ0zJbLM4JN0ptC5QPeNrp2y6YTww538
nN6pnXgj/NaW0Ss7ZcjipFcY5pi8V1ef78pTwjdsfk53y5N526n32nyS9s8p
c0zmdbI7GfK0Ky+63m6E103njcBvyGiaq2S+EBjMc0zmteHd1JWnXb7R9XYz
5LKNNzo3uzLawFWVNggMtP6Tmlm5V/J9YctTA+akJm25bOaN2Hdb76VzwezV
tP6TmjG8tafkKTFTg5/TO0VwZeaN2Hdb76WzxubV9NszqZmkVxD9IZmnxExt
fj6l907krWrfbb236/3e5dXJfktrJukVNp0kPS2ZF8SM6F2r8mcbb7SXErpN
+hu9U8RdVjTZ5TlJf56ik6R+6LxI9sAqrpJ9O8mbwX/o3lu17/ROEXcxzDTJ
syFfujp8sn92+TnhsSvnmLtKMhPpLCD0QHSbZJYR+0LvEcGzLV+qdJLUjy0v
kp5cdRdDVzF0MFvudPVDOsuS+2LQTJc/d+nkdqGMJ6/chdawgbeurlu1g2Yf
q/Jqeu4GT+jyZ1tHOrkLEZrv4tPAmw1nlYdM8TE6y1ZmZOuQSX826OR2IU7z
XXyaeTPgpN8RZh+g70J0AEMPT+aLoSOd1oUIzXfxaeCN6NuG3Ky6Y5cP0PPq
6io2PLbdpLvcxC5UlYNde2rmzdAHunRo9gG6v3X5IZG/Bi0ZdLJrF0pmPd0t
bbwZdqdLhztlNK1zWntd/mzgh8j0nbpQF36iWxp4S55j1qHNB+jcnK49uvtN
73JdWdnlezT+Kv3YeCN+Exlq2B2bT57QVZJ7at7NR7+bnEUXt0n8VXtq4C25
+/RuJnfH4AM0zzYekp3Btpu0zqe/iZJdjthfgyYNfm7QocGXiBlN7CrJnbJ5
Gt3ziU5r6EJJHyN8tUuTBj83747hLsl3hIGHpFZtnlaV78lO29WF6A5TlSnm
nO3qZubdsd2FfkcYuopZq+a8ILzdtqdEV+/qLQZNGrqZeXdsPkD0EENXSfqb
2dOqZkf4kmFPVzDQXk2812hNJj1nyu7YfCDpe108ELsw0dOqZlflS2Zuq/yW
+NuujKNztkon5t0xcN61m0keJr4jbDohzjdza/5N9CubJpM72LU7Ns6Tu0nz
kLyvgf9kB145fwq3Kx5L/KZ9ZnrOGrRNa9hwlyTnNn+28d+1m4Tmzdya/b+K
c0POTvEWYkZdPTa5m1XaMNz3hLwgzp/CrS0L6H0ksmNlvjZvIc7v6rFVeGyc
0+cY+DfsZlU3M3NbxUOy/9P3Mmiyq6sQuTbFB8x+ktSY2Ye7cCb10LWnhneB
QeddmjR0lZVZTPQBs5+YNWb2NNrPaT0k95T2nCo8SZ137Y6hq9AdwOYDZj8x
a+yEvFg5f0pXpz2HyCNC52Z/prtKsgMYfGCKnyT3xezDZpwr3d7Q1WnPqeqH
hkw0aNLg5xP9yjA7w3139eEunF17l8RM7Fey/xMZZ+C2y8+ruO3i3OwntMZ2
9eEkTtveEZhXeCYyLsl5UpNmXREdIOlXU/zE/G46gbcqT0juHY35UZ5tnNB6
qNKkjcNkrhE+MNFPiPue4MMGnF17R2Be4dnsRbT3VvnzFA6JPkBrfoqfVHnC
aT6cxGnTahVmwhO6vKjqTIKrKX5OZAExx+l+0vX+PY23KpyGjK7CXNXfuvaX
yPEq3pJZY54dMced/CSZ9afxluzDZg3Q+1uVlV2ZSPttshvbZkfMcSc/ue8d
P07DXaowE56WzFDiuza/Nfg5wef1vbw2TuONwJnsbzTmqv1NZhPx3S4/N2ci
3Suun2Rmdxpv0/0kiXllFslsSr5laL81azjZK67v3ffORJzJPk9jJnqp+S62
DmbTMN0rru/NwnNx5v0kiXml4yXfRCt3MeTvdD1UfZf+1hQ/MeOZwlsSJ+0n
XZhXvK7K/+m7GLRK+LaNw+kz6vI9G54pvBlwTtfACs8r/k/fhcimrvl26YHI
dPOMkrOw4bk481o1cJvcZTr7iGyi52vWA5HpthklZ2HDM4U3G05D163q9kl+
knepyqbkfG16sL07pvuJDc8U3mw4DV13hdsufui70Njo+U7ksAp/ckbJWdjw
XJx5rRowV2WE+S4rnlzl8yvfnchh1X3pGSX9xIZnVx+eolUbt4RnGnSy4rFV
dyHOMXNY1TEIrrp204ZnJx+eqFUbtyvebu4/9JuI2HGDHh7F3/XuMPuJDc/F
6dHqFMzE+Umd0G+iLk3aOCTuO9FPbHim8DYdZ5VuDZir/MGgk4lvGduudeWj
ORNtPef6cC/OZG+hMRPnJ3VStb+GHe/aNUM+mnvFaf52cfb2liRm4nzaK+ie
1qXJrl0z6M3sz6f528XJdewuf0ieb8umKZ5j3jUC/xR/nqLbizOzm7SHJDET
50/XidlzDPlehd/cKwycX5wenAR+2h+SnOykk6TnmDns0luXTmx4zNq4OGs7
XvJMgpPpOjFr0tx5qvRm0ImBc5u/XZy1+uw6k+CkygcMOrF5zhQOq/TWlYkT
Ob84e3E+ir9qj+iu++j5K98166RLkxN3zdCFqnZnCucX56zOs3I+wS3tV8T5
J7xlpuwaobdkn5/I+cXpwZk835BBxG7adLLigYSvmnct2R+qMEzn/OKc1XmI
zmnIuKrdtHXjqj5JnDlx16qynu7/O3F+cfo7T/K9QGRcV5YROjG8ZXbdNfqt
Z9bwRH+7OLnOQ/thMuOSvkHrZMpbZsqu0fzs6hsX5x44CW1X9duq7Ej6xkou
GHrgad5F6GHlWydwfnE6vYvounS/MvgG3S27+oA5f839wZzvZs4vTk/nSWq4
6t93cZ7slsnzV3Jw4q7RmT7dNy7Oc3Am/Xwlm7p2LdktzW8Zs4bp/kBocrpv
XJx74KQ1bOu6j56f7Jb0jMzzmsjhyh2n+8bFORfnFA0nfYzwk2ReV2mAOMe2
a8nzbdl0gr9dnOve2KVhQw9MvqGmv2Wm7FrX+Tv5xsW5N86uuxh6Gp1fdF4n
M9GsYZpD+s1l25GLc2+chrsYetpK7zV4keEtM33X6J5v2DUb5xdnL84V30v6
bbIHGt5WhrdMV5Z17drK+VWzNuzIxXkOzuS+mDkhuhzNbVWOEBxO2bWq81e+
O2VHLs79cBJ9fgondJejuTXkiEHDNIe0ns07cnHuh7PqjtN74MpM6W8lvYh+
y0zfNZoH845M2eWLk+uNu3Ky4u3J7Jv4ltlp12geqjrJTpxfnHmcVXeZwgnh
mVV3ob3InGUGXRnwG3Zkyi5fnC+H8+71f5/fdReac+KNsNOuGfBXaXgK5xdn
HudKh5zICdHzDRmafMvQWWbWVVc/OZnzi5PDeTnhdpPO0KqcojFM11VXPzmZ
84szg3Ol/5/ASZV/0l5B+8+u78GqXkTgP5nzi5PDWfW3J3BCePuUt0wyy8y6
Su7FCuadOL84e3vjSnZM52SnDKX954Rdq9IDocldOb848zhvD3y579oylM5E
27ySHK7ooepej3I4hfOLM4+T7r1TOKHzLpmhdCYa5pXkMOnbK7xN5/zizONc
6RI7cZLsY8kMrZppV5aZdUX4dpVmduX84sx3khM4WdkpW4ZWebUty2y6SvKz
Mt+dOL84Mxo+gRObZ1ZxkuwDBg0ndUV4L91nTs7oi5PzrumcVHnmiidMf8uc
tmu0P1f1mdN2+eLkOsmunDyKIdnBVna/aqaGLJuuK7p7EN+ayPnFyXkU0X8M
nNAdnsaTfMsks2wnXT16Tte3pnN+cdZ61EpnMHNCZ2Iyo+m3TFeW7aQrmkOC
qymcX5y1vbGqM5g5oTOxqu/Rfkto4+RdS/YTgquJnF+c/r5q5qTrTdTVu2ht
XF1x/YTmaifOL87evmrmhPa9qh0k/NacZdN1RfcTgqudOL841/tD1Y6bOTHs
BYHf4Esn66oq71ZwVvWTiZxfnC/XH4gdN3Ni6IRV+GlfsmWxWVcr51dlxPW3
izPpLVM4MWCuwl/Vpem/PUFXK+cn+THvxcXp8caVu5g5McyxCj8xo6o8PU1X
K+cnZ3qyv12ctd4ykRMDZsL3qmbUlWXTdbXC58q9iJlO5PzirPXGXTnp2otk
dq/M6EW//wRv/TKR
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztmjFqlXsQR4OCWFjbuwXtE2KpXVxBFAUhIMYi2FnZCi7CZbgEd+BeTMAi
TUC533fvOfOd4j3uk8vcmfP7zxx47z15/eHs3b2jo6NPD6//dnZ+dXp5ef75
1YObf3h7fvHs6cX9649f/v518/n3++fHj75/Pf529fHk9ueXP14c/3x8cvLr
zenJ/37n9p/f9flfvr9LP7t8f5f+7/qtXb6/xud9zrLUvLu8paUyXerN7zPT
Q/HZhclSddbekTV6WCqjfb4rwveX+nMyK4IjDuWCfbrG3ts+3/w+d3kLbNfe
EUK+hBxzQS7Yggsst2LSHuUCb465IBfkAmZ94x7lAm+OuSAX5AJmfeMe0Vxg
vG/k/aWxIvPJBczecoGLLa1OLmCyIvPJBczecoGLLa1OLmCyIvPJBczecoGL
La1OLmCyIvPJBczecoGLLa1OLmCyIvPJBczecoGL7VL//dd438j7S2NF5pML
mL3lAi/bXLCd7AhvOBfkAlp94x4R7gmtH0uORlZkPrmA2Vsu8LLNBdvJjvCG
c0EuoNU37hHhntD6seRoZEXmkwuYveUCL9tcsJ3sCG84F+QCWn3jHi31///k
Aub+0liR+eQCZm+5wMs5F7jyMs6eC3IBub59j3KBK0cjKzKfXMDsLRd4OecC
V17G2XNBLiDXt+9RLnDlaGRF5pMLmL3lAi/nXODKyzh7LsgF5Pr2PcoFrhyN
rMh8cgGzt1zg5ZwLXHkZZ88FuYBc375HucCVo5EVmU8uYPaWC7ycc4ErL+Ps
uSAXkOvb9ygXuHI0siLzyQXM3rbmgkmcc4ErL+PsuSAXkOvTbmAccgGNFZlP
LmD2lgu8nGkccgGHFZlPLmD2lgu8nGkccgGHFZlPLmD2ZneBcadygeseGlmR
+eQCZm9GF9h3Khe4sjOyIvPJBczecoGXcy5w5WWcPRfkAkt9407lAld2RlZk
PrmA2Vsu8HLOBa68jLPnglxgqW/cqVzgys7IiswnFzB7O5QLDnUPJ3HOBa68
jLPnglxg+S3jTuUCV3ZGVmQ+uYDZWy7wcs4FrryMs+eCXGD5LeNO5QJXdkZW
ZD65gNlbLvByzgWuvIyz54JcYPkt407lAld2RlZkPrmA2Vsu8HLOBa68jLPn
glxg+S3jTuUCV3ZGVmQ+uYDZ2109rN1PLsgFluyMrMh8cgGzt0P1kwtygSU7
Iysyn1zA7C0XeNnmAldextlzQS7IBXy2ucCVl3H2XJALcgGfbS5w5WWcPRfk
glzAZ5sLXHkZZ88FuSAX8NnmAldextlzQS7IBXy2ucCVl3H2XJALcgGfbS5w
5WWcPRfkglzAZ5sLXHkZZ88FuSAX8NnmAldextlzwWFdQMg9F/DZ5gJXXsbZ
cwGfFa1nyz2cxDYXuPIyzp4L+KxoPVvu4SS2ucCVl3H2XLAeK3KfucDFNhe4
8jLOngsOy83SJ6G+cadygSs7Iysyn1wwr09CfeNO5QJXdkZWZD65YF6fhPrG
ncoFruyMrMh8csG8Pgn1jTuVC1zZGVmR+eSCeX0S6ht3Khe4sjOyIvPJBfP6
JNQ37lQucGVnZEXmkwvm9Umob9ypXODKzsiKzCcXzOuTUN+4U7nAlZ2RFZlP
LpjXJ6G+cadygSs7IysyH5oLyO+KkHsu4LPNBa68jLNPdQGBbS7IBbnAlZ2R
FZlPLsgFhHs4iW0ucOVlnN3uAvK9JfeWC1xsc4ErL+PsRhdY7i25t1zgYpsL
XHkZZ88FuSAX8NnmAldextlzQS7IBXy2ucCVl3H2XJALcgGfbS5w5WWcneCC
td85+V0Rcs8FfLa5wJWXcXbCLLlgxr2i3cNJbHOBKy/j7IRZcsGMe0W7h5PY
5gJXXsbZ155l7XtIvrfk3nKBi20ucOVlnJ3wDsn1cwGnvnGncoErOyMrC59c
wOwtF7jY5gJXXsbZCe+QXD8XcOobdyoXuLIzsjoUnzXmygUz7hXtHk5imwtc
eRlnJ8yVC2bcK9o9nMQ2F7jyMs5OmCsXzLhXtHs4iW0ucOVlnJ0wVy6Yca9o
93AS21zgyss4O2GuXDDjXtHu4SS2ucCVl3F2wly5YMa9ot3DSWxzgSsv4+yE
uXLBjHtFu4eT2OYCV17G2Qlz5YIZ94p2DyexzQWuvIyzE+bKBTPuFe0eTmKb
C1x5GWcnzJULZtwr2j2cxDYXuPIyzk6YKxfMuFe0eziJbS5w5WWcnTBXLphx
r2j3cBLbXODKyzg7Ya5cMONe0e7hJLa5wJXXUrMT3nAuyAW0+pZ7QpidfN/I
2RFYETjkglxArm+5J4TZaffNkh2BFYFDLsgF5PqWe0KYnXbfLNkRWBE45IJc
QK5vuSeE2Wn3zZLd2qwsHHJBLiDXN+5RLnBlR9sFwhvOBbmAVt+4R7nAlR1t
FwhvOBfkAlp94x7lAld2tF0gvOFckAto9Y17lAtc2dF2gfCGc0EuoNU37lEu
cGVH2wXCG84FuYBW37hHucCVHW0XCG84F+QCWn3jHuUCV3a3f9fIjfy2cwGz
t1zgYpsLvNnZOeSCXECrb9yjXFB2dg65IBfQ6hv3KBeUnZ1DLsgFtPrGPcoF
ZWfnkAtyAa2+cY9yQdnZOeSCXECrb9yjXFB2dg65IBfQ6hv3KBeUnZ1DLsgF
tPrGPcoFZWfnkAtyAa2+cY9yQdnZOeSCXECrb9yjXLD798n7S+NG5pMLmL3l
AhfbrbmAkKOdG41PLmD2lgtcbGm3NBfwudH45AJmb7nAxZZ2S3MBnxuNTy5g
9pYLXGxpt3Sf//6fvL9beMO5IBfQ6hv3KBd4cyRwI7zhXJALaPWNe5QLvDkS
uBHecC7IBbT6xj3KBd4cCdwIbzgX5AJafeMebcEFa+dC3t8tvOFckAto9Y17
NNUF+8yFvL80VmQ+uYDZG/lWTNqjSS74A4w5tu4=
       "], {{0, 128}, {128, 0}}, {0.,
        1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1jFupQcZRuERSIhtwBKgJQNsIaxgkIAmEigpEB1bID1shTXQ0LAKepBI
JIo0SBnZ9/o5H28xI491PT73fO9/7B/88ref/vo77969++L7X/316Yff//zz
zz/84Rff+/ofv/rw2Y9/9Nl3v/rwj//98/XHf//NJ+//+rt/vf/ZX/78/p//
/tNPPv3ihz/98m//+OSbn3+t13zz8x/7mm/z8UsYvs3/+bHv5WO/76M5/9dr
XvK+XvK9HuHqtb7XS/jlZ+GttveS51R2/syvfeZz9Fqvea2vfcmtX/Lz6xHP
lMD5Wpt5REsfsatHvN9ntuiZz8Izt/fomz7C+TO/9tEetJu+1u+3wnvUON/q
dm+129faj/a76DP7LzxHz7zpW/1++1YeZD/P9Pn/0P9n8hQ79lY/y4RnQe6/
0B+h/5pbjVl7j1c5H91SjfnRP8uEja3/3b7Jdxf8aLutcwpOBOZLz8L63+2b
fHfBj7bbOqfg5BKzwLD+d/sm313wo+22zik4ucQsMKz/3b7Jdxf8aLutcwpO
LjELDOt/t2/y3QU/2m7rnIKTS8wCw/rf7Zt8d8GPtts6p+DkErPAsP53+ybf
XfCj7bbOKTi5xCwwrP/dvsl3F/xou61zCk4uMQsM63+3b/LdBT/abuucgpNL
zALD+t/tm3x3wY+22zqn4OQSs8Cw/nf7Jt9d8KPtts4pOLnELDCs/92+yXcX
/Gi7rXMKTi4xCwzrf7dv8t0FP9pu65yCk0vMAsP63+2bfHfBj7bbOqfg5BKz
wLD+d/sm313wo+22zik4ucQsMKz/3b7Jdxf8aLutcwpOLjELDOt/t2/y3QU/
2m7rnIKTS8wCw/rf7Zt8d8GPtts6p+DkErPAsP53+ybfXfCj7bbOKTi5xCww
rP/dvsl3F/xou61zCk4uMQsM63+3b/LdBT/abuucgpNLzALD+t/tm3x3wY+2
2zqn4OQSs8Cw/nf7Jt9d8KPtts4pOLnELDCs/92+yXcX/Gi7rXMKTi4xCwzr
f7dv8t0FP9pu65yCk0vMAsP63+2bfHfBj7bbOqfg5BKzwLD+d/sm313wo+22
zik4ucQsMKz/3b7Jdxf8aLutcwpOLjELDOt/t2/y3QU/2m7rnIKTS8wCw/rf
7Zt8d8GPtts6p+DkErPAsP53+ybfXfCj7bbOKTi5xCwwrP/dvsl3F/xou61z
Ck4uMQsM63+3b/LdBT/abuucgpNLzALD+t/tm3x3wY+22zqn4OQSs8Cw/nf7
Jt9d8KPtts4pOLnELDCs/92+yXcX/Gi7rXMKTi4xCwzrf7dv8t0FP9pu65yC
k0vMAsP63+2bfHfBj7bbOqfg5BKzwLD+d/sm313wo+22zik4ucQsMKz/3b7J
dxf8aLutcwpOLjELDOt/t2/y3QU/2m7rnIKTS8wCw/rf7Zt8d8GPtts6p+Dk
ErPAsP53+ybfXfCj7bbOKTi5xCwwrP/dvsl3F/xou61zCk4uMQsM63+3b/Ld
BT/abuucgpNLzALD+t/tm3x3wY+22zqn4OQSs8Cw/nf7Jt9d8KPtts4pOLnE
LDCs/92+yXcX/Gi7rXMKTi4xCwzrf7dv8t0FP9pu65yCk0vMAsP63+2bfHfB
j7bbOqfg5BKzwLD+d/sm313wo+22zik4ucQsMKz/3b7Jdxf8aLutcwpOLjEL
DOt/t2/y3QU/2m7rnIKTS8wCw/rf7Zt8d8GPtts6p+DkErPAsP53+ybfXfCj
7bbOKTi5xCwwrP/dvsl3F/xou61zCk4uMQsM63+3b/LdBT/abuucgpNLzALD
+t/tm3x3wY+22zqn4OQSs8Cw/nf7Jt9d8KPtts4pOLnELDCs/92+yXcX/Gi7
rXMKTi4xCwzrf7dv8t0FP9pu65yCk0vMAsP63+2bfHfBj7bbOqfg5BKzwLD+
d/sm313wo+22zik4ucQsMKz/3b7Jdxf8aLutcwpOLjELDOt/t2/y3QU/2m7r
nIKTS8wCw/rf7Zt8d8GPtts6p+DkErPAsP53+ybfXfCj7bbOKTi5xCwwrP/d
vsl3F/xou61zCk4uMQsM63+3b/LdBT/abuucgpNLzALD+t/tm3x3wY+22zqn
4OQSs8Cw/nf7Jt9d8KPtts4pOLnELDCs/92+yXcX/Gi7rXMKTi4xCwzrf7dv
8t0FP9pu65yCk0vMAsP63+2bfHfBj7bbOqfg5BKzwLD+d/sm313wo+22zik4
ucQsMKz/3b7Jdxf8aLutcwpOLjELDOt/t2/y3QU/2m7rnIKTS8wCw/rf7Zt8
d8GPtts6p+DkErPAsP53+ybfXfCj7bbOKTi5xCwwrP/dvsl3F/xou61zCk4u
MQsM63+3b/LdBT/abuucgpNLzALD+t/tm3x3wY+22zqn4OQSs8Cw/nf7Jt9d
8KPtts4pOLnELDCs/92+yXcX/Gi7rXMKTi4xCwzrf7dv8t0FP9pu65yCk0vM
AsP63+2bfHfBj7bbOqfg5BKzwLD+d/sm313wo+22zik4ucQsMKz/3b7Jdxf8
aLutcwpOLjELDOt/t2/y3QU/2m7rnIKTS8wCw/rf7Zt8d8GPtts6p+DkErPA
sP53+ybfXfCj7bbOKTi5xCwwrP/dvsl3F/xou61zCk4uMQsM63+3b/LdBT/a
buucgpNLzALD+t/tm3x3wY+22zqn4OQSs8Cw/nf7Jt9d8KPtts4pOLnELDCs
/92+yXcX/Gi7rXMKTi4xCwzrf7dv8t0FP9pu65yCk0vMAsP63+2bfHfBj7bb
Oqfg5BKzwLD+d/sm313wo+22zik4ucQsMKz/3b7Jdxf8aLutcwpOLjELDOt/
t2/y3QU/2m7rnIKTS8wCw/rf7Zt8d8GPtts6p+DkErPAsP53+ybfXfCj7bbO
KTi5xCwwrP/dvsl3F/xou61zCk4uMQsM63+3b/LdBT/abuucgpNLzALD+t/t
m3x3wY+22zqn4OQSs8Cw/nf7Jt9d8KPtts4pOLnELDCs/92+yXcX/Gi7rXMK
Ti4xCwzrf7dv8t0FP9pu65yCk0vMAsP63+2bfHfBj7bbOqfg5BKzwLD+d/sm
313wo+22zik4ucQsMKz/3b7Jdxf8aLutcwpOLjELDOt/t2/y3QU/2m7rnIKT
S8wCw/rf7Zt8d8GPtts6p+DkErPAsP53+ybfXfCj7bbOKTi5xCwwrP/dvsl3
F/xou61zCk4uMQsM63+3b/LdBT/abuucgpNLzALD+t/tm3x3wY+22zqn4OQS
s8Cw/nf7Jt9d8KPtts4pOLnELDCs/92+yXcX/Gi7rXMKTi4xCwzrf7dv8t0F
P9pu65yCk0vMAsP63+2bfHfBj7bbOqfg5BKzwLD+d/sm313wo+22zik4ucQs
MKz/3b695Gv/A0hUI/g=
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztm7HKfUkRxJcVRNjU0MTEB3BT3cVXWMVAoxU0WhA0WMREMPBd1tDYwNQn
MBYMzAyNRAWFP8iR+n1VNafn3Am+pfdy7zkzPd3V1dXz//qPfvrJT95/7733
fv6Vf/3nk08//87PfvbpL7775X//z48//ezDb372pX+Zv/rP37/tr/3hlx99
/x+/+fYPP/jrR4r9ux+8/9EHX/3Lt/7+4ecfX9nO99vvor9t7IV+nvqtsk7l
+amYaa+hHW/tva+MH+c7qZxNxfbKvHD26MR56ix+/bfvffz7P37j4z//6avS
d377xRcf/ffv3e+8+/nV39X3331+4130t429XO3r6nPlT/mtss6rs76yaVwp
60+tgb6XxltjDcpzGvHj/KVy1tmXk+NOXjh7pDbNC7rORq2n37lav/MuxZ8N
LkfPyOHVbc5JzyLVLzhroM9Unr+S2zs5stJO5axy1qkcb8TqXZhAn6Oszan1
9I/mV+OZKS6Xylna2zY4Jz0Lhyen1qC8l+Yy5Vd0705cNeKnoY0o/qFY18CN
Rm/bwASHIzl1J8U9aJ/r9BeOdpHS1mhsK71tg3MqtV6pm46v6BpStV7ZixP/
qbhydAnHptpIqna0caOR1w1MSHFI2mc1sH0a/3ewyOHADudx+DbFulQdv/LV
1bsUPpOqFw3e25hBNOJHOUcn92ntSPVEzhpoXrcxgfJz6jeHG6SwfSX/d7Ao
pRU7WmVbR3L6FKeONPiMwx8c3utwPMXnTvw48aDkvsMt6RyhMeNT4rONCSs5
eQMrUmeU4v8pLKJ7pH5W9qXskeoATv46dcTR2FN8vqEVNLDIqXE0r9v55eR+
ims1akoKE5w6fpce2PBVu3+nZ+ToJ04tdvosZS9tfcPxP9UZFD6v/DX0dopF
qf7O0QYbPSPFEKodTeO0jf7UOQsnfui+7uL/DhY5eUc5TCMmlb5G+bzBY1P8
toFXqfW3+VWD16XWmTr3VG9+F6dN8VUlH5WzSJ17o79r8P9GXlNu6eyRxiTt
HVby2JWxRP2ZWr/zHGf2lNqLs87UOaZ6cyWeG5yW9pgUQ5w66HAGykka9TTV
v6f4YeM5Tkwqa6B90Ere6MSSUnMbXNHp01O85S7+n9IGlb2n+osGD0nVRIe/
KdyMckiHkzQ0onaOUN9S3YnyZ6emX31+F540YsnRDRyuSDGw0ZvcpQUp9c7J
zUZ/0eAhNE+d82prZaleo9EPtnPE4RUNfZL2TY3P23iSiiVaIyjPpHiYqolO
vjR6N0dvdL7j9BdK30F5hbKXVLzRWuNoZQovSs2O2xqRg8OUA6f0Sar50PU7
dao901xZU5T4b5y7w/EojrX5/479RYrXpfg/7U8pZ0hx2lSMpd7laMXOc1J9
WeqMlPUrn1NNYyW/TdWUBp9P5UhDP1mpBU3uLxrrSenqqT4opb3QPFViTMlN
h8+vrHGKNtLWhWgtcHpbWgdT/DZVUxp8Xjl3JUccTa+NRcfOYm+K21D+pmDX
u3+091fyhfZEjZkLxVLn+4pPqC6k9Pup3rbBuxwN08lNWl9StdKpU+3+egKW
7mI72JviNpT3pmKD1juqR6X2RXmaco7OuVMMmYDhDa3AmT05uUljNcUrqK6b
Oheqfe2oC620HYyiOoOzTtqzK++luNfAKMqvaO1w8Lldc1di+Mr4pHtXuDT1
D10P5RX0jJya1dA8J2DvLrajGzjvpXpsCoed+R3l5E7uK7lMMUrZL625KT5G
81rRkVLxSfdO9ZYUX3L4Ho1Jp49o86tjvy22lfpOcZviHs0p2hes7KNprLZ9
69SgBh+jGO7UMuoTZ7+Oxt6IDSeGaQ468e/wq6MFvS22nV7MwR8lTuj88d3f
Kjy23Ucrserci1jJDVI1LjVPV/zj3Btpa2LtOzMOhjtYQTmkU5vaWPRU2+nF
Gr5V4sHpqVN7nKyfN7iB07NQTujoWik/057X0cRWzlMop3L6vkZNPJx/Pa9r
11DKzVJ9a2qP0/TzBjegOptST1O6loJjyhoa8xSHYzTiQdGs2pyE1kSnT5yA
txPsleebikkFw+/iVw6/bejnDW5A85E+x9mjg2N0Lyn/p+YsdD2O5rmyBjln
PQFjd7Hb5+vEJNVbnPyle0/NrOkZreQGzn0k6nO6RwfHHPy5KxeceGj4p1GD
FG2ncW/q1ew2H3NiMqWfO/Gf2ruzr7u0Tdp/Ob0Pjc/GjN65u9LOBep/h0tQ
3SxVg1L3TCZopJNtqoWurK1OzDdiNaUFKc9M6ecpPpDi/3ROR/s46hNn1rlS
W3Dee/V9pV44mp5TgxrzkaMFvc3nFNMmYE5Ks3U4rbJ+2nO1/e/0XxRPGtq7
45O7Zp0r88tZv/NbJf5T90was7wn2YrPFY06VVtTmNOOVYdbUh2J9mUNbtPI
ncbdLUejczTPdv1Nna/DYZzfrsRnB9MmYHLbTmndtB9vY47T27b5GK0j9Fwa
+KzU+rv6PkUjojFDNc/2LMyZDaU4TENvbOCzg2l36XgT7BSnSukSKcxx6sVd
fKzRQzl1is7g2n1fY/ZHn0M/T/GKhu63Um9cic8rZ3k72kofp3CqNr+imNPo
T9t8LPVMWq+d57R11Pbsj36u6J9OvDmzIcoZUlqiw1Ua+Exzv40V02xHl3b0
T4dfNTQQGqttPpbiWo4GojxHiasUF23M/ujnTg/irJP22qn5SFtvbOAz1aZo
nLyCFtTghA6/Svk8pUU0+BjVfOjMhdYRp79zeo3GvRoFKxT/t3VjimM01yhm
pnKtjc80zml9mYDJ02zlTB2e05gdO3aDj6Weo3yf6mxXe2/MWxWfO7O/Np93
cCzVO6R6+Ua+0Jmggs8O5qzkjU+yU/2mghUpLaUdA6mcamtiFKMaeEI1K4rb
jRimtc/hkHRfzjlefSel1zk1MZUjx+7ZtN90OO3V89t1+d31O3wsxWdScz0H
oxwdXtmL06ekYtipdzROqP9TtSZVW6m26ezXybVjZ/FQqfWU2ztcN7VH5R5O
ip+kdCFlPcpvG/W0rbc08FPBHKc+Kn5QnumcY0qvc3KT1vr2/OXYb4vnVO5f
xeRddd/RshSO5NQUpy6v5AkNvcXpHZz6m/JJCj+d3s3R6xqc3NEq74rzY/u5
79xjadR9JVZTa1PyLqV3pbSClE9SnMHpHdrauFObUrVP8XO7btIZCtUqG5rY
sXu5T7GR4oazfgVb6HudvTi9uaPVOzadDTmcgeKMs5e79EAnPim3SdXNVL1I
8f+jBa2xG/rhXfcuqGalYBrlNrQ3v8ume7nLbmvjKT2w3T/SGHbiwcFeeo9i
Wl68gk3jR4mNFE+g9y5SfQqddVLOtvIeVIoH3rVOymmpNt7QA1MaWko3o71k
aobiPOdw/vW5n9JDVt67oDHs9PIOZ0v1yK9gO5xWiZPGjIPWKdpz0f4iVXOp
Fkd75wnxdmw971ZyV0fzpPmYuovicLNXzgvnniT1G53bUl2I9qcUkxv8ga5Z
4Tn0OxPi8NVsypGcmSZdD9U8aW1Kza+p35zvv5rt4FIKVxt6JtXGU3c1lfVc
faftn2PPsR1N1Xkv5Q8KhtNem/a/ip5M/TwhBibEHsUlWlMaddbpE1O1qX3H
KeWfV+55d7Gp9k5zypnnpniFo9U36uMr54VzvsrMfQIXpT2C80xa+5w7b875
np53jk21d2cWRvV25Zkrc5PuxblbOCE22vFGtQ56R8uZb6b2mJoR0Jmd00c4
9z2cHvnYa2yqvTdmYXfFA81N555PKu92t1O45GBUm4s6HIbmXapHXtlTU855
7J6t5FfqjmVjntXOzXb9euUccXCpgVET/JCqcUp+Kf1USvNpaMjHfptNua6j
8zh5PSEeGvcxlLx7ao4o2kXD505e3JWDqdqU6q2o5rOyph/7/9vOPcmUdkr7
2Qm+Suk5Sk499R5dSrtocIaV8xen1rdzrTHXa2jIx85yACVmnLxz9MAJMUDx
NoVjSq5N8E+jLrTP6Oq3bV0oNQ9K5ZqjHSk+TGnIu/e8d9lUZ6C45Hx+1z0f
6jelHinchu6R6gOvliP0jK5+q8StU2dpbDRysDHzcuopfc6EeNvFpjqDgrG0
p0vh4V1+o3G4chY8bXY5+YyotnOF81QXcnreVA6maqvyXoer0HnQhDjcxXZw
qaFpT/CJkwvKjLI9C1aeM8Fvd53RVQwrmEw1CppHKR2e3hGitTX1rtQcTeEA
x35b7VZ+mzq7XTDKuTfu5JGTX0+6I0TPKKWrUPxR8siJN7r+VK413kVr0yvE
cCMXnNqd4jxPvceYqomp/Hpqz+VglMJnGhygEedUF3LW0HjX0XPm5IUTq86d
k1RNmWY31k/zTlnPk3KNamWNeGu/19GgnNxPvatxB+nYPZ7gcFRljvaku74r
+YyCG8oantpz0fsMqXhzOJXDnZTnN/hD6j7njrE32U7Nqui5ONxjxzhx7pw0
6ktDK97FpntR6oWjjSixQd+r1HSHb6981+7xtovtzKocXEpxyx3jJMX5nb5M
wahGPNzl58ZdRMqv6JyljZMKj3LmIPRd9FyO7ecFjXl6h5nyAWf9k+Nk5X2b
CTreBD879xmUs1PijdZfpWY5OHn1fKrJO/XXede0eNvFdu4wNDg2nTmu1FIa
9l33bVbqeNPslXelFM5M9Teqnys1q32vrPGuY8+xG1qQU3cmc34FTxp7afRH
u/RcVMuidZD2REo8O3UnVfsoN6B3wum7psXVK9uOduHcH1DyetodFWU9Su1z
+jXFtykdjz6z7XPnLqJTU9r3KBztKIWxdC+UJ+yiMb6a3dAuFD7Z0HJX+orq
nI1euMGjJnMzqofQ2KO1z8HbFH46cxza91FfKT6fEFevZje0i8b8sa2lUF+l
+KGDG43+aHLPRXHJ0agbGpGSIxQ/nVrp9EqpO6678I0n2dO0C+e3K+/YpPih
giHODDF1V3ACT2vcRaQ46XAA+vzUWSj9jvK5w/8bNeXYvj1Nu2isv/3e1Lwj
NQd3OFXjmXfZyvxI0TocjcjBVecsHI7hzDIc3zo15dh+Xji4unKOr6y/sR76
HBrzDo4p61T0nJU9YMN25kcNLb0xI3Ywk+5dyaMGV1RqygQs3cWerF2k1p/S
cilmUv9QP9P8ot9JPXMaT3NmSfT5FMMpptE5gtOTOr5KcUUl9ibwjR3tCdpF
av2N7zvc5uo5NMcdHFtpO5jWsJXe0Fmz09Ol+LaD1YquRWsWfU6jphxbzwv6
/ZR2kVo/1U7p+ml/rczRnLuI03jOXT0g5R4OtlAcU3DS0YjoM1N3Bpz+WvGP
kwtHC9Lz4i7tonFHKMX/aV/p6CopvWVCXFEcXrkGBTOvsMXh0hRXU/U01Yc6
HNupuSmtchpHmmDfpV20cczh/44PHc7m8Ct6FtPs9poppjm6lvK5w1Uo33D6
UIWzKflF+XzqjHbhRRNyra1d0PpCMaExR75av6PJpOI2NeO7y071gPT5Tsyk
8NzRHlM8xOEeCmej72rk9dGC3pYLKe2CPnMCjq3UNlNxuyP/afeAK32i4HlK
O1Xe2+grnT7orr71rnnTNDt11rQWNN7b8I/Sp1DftuOWzvgm8B+l93QwYaVP
nP7O2aPyXkfLpbyuwT8dfHZy+Uk2zQVHu6Dx5sydUzhG6xTlWinscnw+gf8o
53vlq1TfutInVGtq9LmUPyh1xMHStm7f1pZ3sVOYoOC2k1PTcMzZr3P3IIVd
tE9ZGZNO7Dn9o3Pujb07PUKDP6R6Wzr/pThGsXqytnxX3jnn68S2gw/tnKV3
Dxw+0/Cbki+NOaODRSkMdO6TtH1C+0QH9xycT91ncDR/igm0f2zX3Gk2zX2q
XSjPoTlIc9nJ2dR9DzrDVXR7Z19OPWroHs57HY0ixWFScbKyz6V7SfVlTvwr
mKDwJZprTs2dZqfONzX3pL9NzY6n9XHOHpV90f56pX8c7Er1g5TDrPRJqs9t
cCGKG6ka7eRCCk8a2vKOdYFyfqWeKnGyI84rmNPgeNN6WIo/qVi6em+Kw6d8
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
gfrHuWOTqmWN+qjUKcfPK+8GH/t17H8C5rI/rQ==
       "], {{0, 128}, {128, 0}}, {0.,
        1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1TFqVGEYheGgIK7A3sINaGWhg12wjJ3YRNAqIERBrHQDVu7CwvW4Apdg
qwnYBhIyf+adz6dIuAk3lz9zznnu/dfvjt7eOjg4eH/37NvR8cdnp6fHn17c
Of/hzfHJo4cnt88uv/z7Or8+fPlq8/vBh82fn/eefP32/Onj74ebXz8+by76
/UX3XPU5l3n+Za4vOsNVz3aT91z1/9rWPZc553WyvmruK/qz4vnb6tjqPqzY
xa46fB0fVvztdfq/+nNYseVtZb3a/21Zt/qeXfl/nU7u6t20YhcrnlOzdFu7
KHS45n/5c1j9vtsX/1e8fyf5v48b2VU/99HSbe2i0OH/odv8X+f/Tdpe286k
jdT8L1u6evs19/a92/znP//31//C+ff9zPznP//5z3/+/2/d5j//+c9//vOf
//wv5F7bCP/5P7Xb/Oc///nPf/7zn/+F3Gsb4T//p3ab//znP//5z3/+87+Q
e20j/Of/1G7zn//85z//+c9//hdyr22E//yf2m3+85///Oc///nP/0LutY3w
n/9Tu81//vOf//znP//5X8i9thH+839qt/nPf/7zn//85z//C7nXNsJ//k/t
Nv/5z3/+85///Od/IffaRvjP/6nd5j//+c9//vOf//wv5F7bCP/5P7Xb/Oc/
//nPf/7zn/+F3Gsb4T//p3ab//znP//5z3/+87+Qe20j/Of/1G7zn//85z//
+c9//hdyr22E//yf2m3+85///Oc///nP/0LutY3wn/9Tu81//vOf//znP//5
X8i9thH+839qt/nPf/7zn//85z//C7nXNsJ//k/tNv/5z3/+85///Od/Iffa
RvjP/6nd5j//+c9//vOf//wv5F7bCP/5P7Xb/Oc///nPf/7zn/+F3Gsb4T//
p3ab//znP//5z3/+87+Qe20j/Of/1G7zn//85z//+c9//hdyr22E//yf2m3+
85///Oc///nP/0LutY3wn/9Tu81//vOf//znP//5X8i9thH+839qt/nPf/7z
n//85z//C7nXNsJ//k/tNv/5z3/+85///Od/IffaRvjP/6nd5j//+c9//vOf
//wv5F7bCP/5P7Xb/Oc///nPf/7zn/+F3Gsb4T//p3ab//znP//5z3/+87+Q
e20j/Of/1G7zn//85z//+c9//hdyr22E//yf2m3+85///Oc///nP/0LutY3w
n/9Tu81//vOf//znP//5X8i9thH+839qt/nPf/7zn//85z//C7nXNsJ//k/t
Nv/5z3/+85///Od/IffaRvjP/6nd5j//+c9//vOf//wv5F7bCP/5P7Xb/Oc/
//nPf/7zn/+F3Gsb4T//p3ab//znP//5z3/+87+Qe20j/Of/1G7zn//85z//
+c9//hdyr22E//yf2m3+85///Oc///nP/0LutY3wn/9Tu81//vOf//znP//5
X8i9thH+839qt/nPf/7zn//85z//C7nXNsJ//k/tNv/5z3/+85///Od/Iffa
RvjP/6nd5j//+c9//vOf//wv5F7bCP/5P7Xb/Oc///nPf/7zn/+F3Gsb4T//
p3ab//znP//5z3/+87+Qe20j/Of/1G7zn//85z//+c9//hdyr22E//yf2m3+
85///Oc///nP/0LutY3wn/9Tu81//vOf//znP//5X8i9thH+839qt/nPf/7z
n//85z//C7nXNsJ//k/tNv/5z3/+85///Od/IffaRvjP/6nd5j//+c9//vOf
//wv5F7bCP/5P7Xb/Oc///nPf/7zn/+F3Gsb4T//p3ab//znP//5z3/+87+Q
e20j/Of/1G7zn//85z//+c9//hdyr22E//yf2m3+85///Oc///nP/0LutY3w
n/9Tu81//vOf//znP//5X8i9thH+839qt/nPf/7zn//85z//C7nXNsJ//k/t
Nv/5z3/+85///Od/IffaRvjP/6nd5j//+c9//vOf//wv5F7bCP/5P7Xb/Oc/
//nPf/7zn/+F3Gsb4T//p3ab//znP//5z3/+87+Qe20j/Of/1G7zn//85z//
+c9//hdyr22E//yf2m3+85///Oc///nP/0LutY3wn/9Tu13w/y8lxrBX
       "], {{0, 
       128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzVnb3KNlcVhoOCiAcRFUktqKV+H7HwADStQgQtoiJoIdrEU5BUnoClkBPI
sUhKCytLCyNYvII7rtvrvtaeFE+YvMyzZ+/1c//smWe+r/74l9//6efeeOON
X3/xk/98/93fvP2rX7372x984V//85N3f/7Nb/z8858c/v7fn38d/+Wt373+
x3t/ePX177797ZfHX/r4h6///q0/fedHv/jNfxyfzpmMczrHGNOY/2YcjHEm
a0m/OzluxWry91Z8WvEk5xgxT2N161pGbbfqpFVXt+r55d8/oYDX/+0zGf/0
3cnnZ3/866s//+0rr7/8va/932N82qc1/804nI7JOJO1TPLS6nGSR5KXVmzT
ObRwjMR8ggmT+NvXMmq7VSfp8dPq+TTOpJZejk9q1a5/Y/52HE5c3NIMLb2d
zodwRzr/Vn5JrFpYQeY/4axJ75+OU34k12r16el4Mn7KUy09b9Sz7cta9fmE
+dtxaPW4obuIdrI5K9Utae7SfifjtLhpU2vZvoZ4ikkuyPgt/bBZzwSfW71A
eGpz/q1Piglp7aXjt3xTqklanEU4Is2XoTdauJ3i2MvzidZK9x/SaxH/cjp/
Ep90zySN+WRuRj0butrQqK1jYy3GHkXqrw3uMHSdobcNjmh5ZzJ/Q69OsMX2
p6nemJzfqoGX8SEaPtVChlZv5Y7oQ7JG497KE7iAYHXrmOBnquvIvVQbY1u9
Q8ZPaz7FeUOD3apbontbOWpp11S/Gb7Mzh3ZfyC+pqXfNrXirXm29oXSvLR6
kKzR2NOYjE/wYaJXWzrz1r1Fu4/SHKU4n3J3q+YNnbMZZ7s2NveIyLXseaZz
IGOmmNPSLcZ8yPFE15F9jJbOJNiyuV9Bavj094lWmfisyTwnnJJ6GaLtibcl
cTZ82SQ+9jNF6bXseaaxIv2eYg7xHZO6IvMxOHcy5mQ+KT4QnExzZ99HTjU5
yWnKCwa3trQKwRzSa7Yva91z2TyHcCvpX3uv/pb3tMckvZbyi+3BJzhgc5zB
Uy0/RfRGi1tbOp9gbKtHSC7Smkw1wOZxqqPI+GkNT3ROi8dbHt8es+WFCZ4Y
GsP4faKBYy09b+uWVBsbfJp6lrT2yD5AinWbmqf1rBF5Bn6yLnv8NL9E86Te
k3DQ5nPmBn8RbJxgTotrjPGN+yMt3WIcE53f8rATzjLmRuaZap405oTLWr44
PSY1dvqQ94ek2LuJVy2cbPmgloZP55nWsD0+0fOTvxPuMDDfxklDy9k6oaV5
DK+XaphJ/Z/wlvzewfAItl829g1ITU74keB5S8OnuEe8ZzpP0iOb+GP0Uaun
CDZuvoOO6ASyr3L6e6pFWzltnW9gQvpd+7d1qb4leNXSe0QDtzS8oSfT/jVq
nuiElr4lfdTqqRQnWzVMeq2lE9KYPEEzpHNO529gRSs+Ld/X8oatGkvxocUX
5O8G108+rZq38Yf0b4uLbW4lPUV8a4v3yZw3NYOtedK+S+u8FSvi+yafW+9J
JthF+sXQq7ZWb33XwB+COaTv0vkTbiXvxDtdy3g/tqFPNjUDwTdDSxvfNd7z
01pLOmaL0wnOk5onejXFqLRuDW87wSuDywyNauzVEO/Q0vwtzWzkyNAMk/o0
fI3hAUmsJmu/pSFtbZxidasHCXe3aozwL9GELV+QciXh61aPpz3Y+tia2cjR
xC+0ctrq09M87XdHGLFq9Xj6XYLJqVZv6di0BwmPvDx+wvtyJ+Of5nOK1eYz
A4Qrbb9s5KilmY0ctfxgS6O2tFzLA7Z8lrFeUucEG9PfFqVYZOSacMfLMT/4
8ONX77/53uuP3nlrFHO7blv+jtRtS1fYfX0L8434tLR9yxcQjWr/PjTFAXI+
8Sat9Rp4mOq0Ta1r4K3Bm4bPTbE09VnGb2daGm9TS5ActbQfydFkDsa74CaY
kMYk5ZpbvN/SYKSeDX34NB1laOMWb976fVaq/VL8aWFyizs26zkdh2jdFGcm
46Tv3yb5avVUWp+2HyTaYxJbopdaPnTTUxNv2NLGBs6kGon4etKnT4vVpKc2
67ml4UltTLCxpTNT72Bo8pZGIrXdqvOUI9K1EDw09hla8ST6n9QVGbOVa/K+
xFRjPCFWre+26ploEkMrGh4w7dnWvT+ijQ0u3tQPLayzMZNgKYln6g1TrWjw
Zkv3Ej086VNDk9v3AloclOrtWx55ovFamryl2dK4tfrXfhdTSz+0sM7GzPRa
ad+d4tl6L/dES7cwJ+0vOw5GjoxYTXoz/dx6hmTzGdQJBrZ4kPjr1p7JaY2G
xjbud9s9bmAm2Ysg9W/4LIJLk7UQbGzFIeUUsi4SK+N4k+MMziW8k/qIlAeJ
9yRxIDlNtXEaczIfY40tzEnnNsGNlh5O683ApdZ1CYYba0lxL82pjfkkVhOO
a+0P3Iohqdv0WqdxjPuPk2u1foc7mSf5kHdFEsxJe4p4H8ILk2sZPpToh7Rf
Nj1RWjMpHrZ0iKHDyZit943bMWzp3k0v1jqnFXOCpUasDO3UqiuiNza9M/G8
dl5sT2TUzOa7ZFs6vFV7aT233gNp1C3pu5Zub+nbicZ+wr/7QPq6hSekrtJc
EDwh9ZzWZMplBua3PJHhF9Jz0rVMcmfcx2/dKzmNmWIa8Y9kH6P1zNumpk1r
LNUAmx7T4Jo0bmkdtsY3/IjtBWxvYmizTV5L8ac1TqpVCI8Y9fwEvUd6Ib2u
XWOT81u/M035pdX7xv7JLb4mfqS1P5BiTsubbL5vx+A1wkH2OGktEX3e0gCb
eo/4988K35F+IeOQPcBb70DYxPxW3xlcaejGST9O1t7SXQZWP+HvLcyx8cr4
bZHRs0+YMzmf/F6spf+J3mhhzi0uMHJNYjt5Zq91rXQtxl5NS/9Mxpz0lPF3
4qNv4dXknKfpvc05t/ZDWlhk60CyB0L6wq6Tlj63MdDmSqINyPzT8VNdZPPL
JIatPbQWxra4qcVlT+vlFncQPZbiLZkD0VEkX5v/dlUrbvZzQZtcOcHV1jhG
HsncCL9MxpzMwfZchI+MPV7Dv7R6meCh3Y+tmpkcpxxhcLTR+3avGXkxuPKW
Bm7xy2a+SC0ZvZ/iKsFGkmujho1ebml+ox/T+Ldw25izzbmEo0mvtTSnzZUp
Jrc0MMFqgmMkX6mXIflq8YXxbgHCTSQXJ+xt9XKrHw0NnK7R0DatY1LzE86d
5NT4bV2rtsl6CWa2MLmladPaTuc/yVeKM639/BZPGfEhOJNey+a7Vj+m85/0
o/Fb4FTbkLkZNd/6rrGHkGKIsb9xqtVWnRO+M/ox1XgtbXN6xy/hrNb9X/LZ
zFfr77Y+b+kc4nFS/Gxx7unvaS2Rmk/5KMWu05hknBaPTOa22adEPxh+mZyf
aptWX9s6v5V3I1+pvzA4zs5X2guEKzd/a2nwtbHPsNmPRJcSrdhaO9HDpJ7J
d23t93JuH3z48av333zv9UfvvBXzfovTW3iSrt14hu2WTyQYm+pDo+9a8Sc1
0+JrorGJZ7c19i09ZvjByX5jy5unWtF4ntn27wR/Wn6HzIHE55ZPJH7E1oqT
2rZ1jqEbjbidzifPJ9trMbyD/e6dNCYp9qY64VbN23o7xUMSE8Onp3NuaVej
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
w/aDLX1L9FhLc27i2wl/TucYz66catiOm4EVtgZo6fy0BiZ/T+dDuPV0joG9
xntOTn+f1E/rGSpSw4aXMd53R94Nleox21caWNHSQoaHMuJma11DA7T2Hzbn
YOTa8AKTXjCwlPhBolGJl2/tUbe0fRr/VDPYmtPWh61zJnxK6oHUBvGYRKcR
LDV01xPmYOQ6rb0UMw2fNamlVr6IliPvWGtx1kQvtTg63QMxepzwaUsj2Rw0
qYf0u2ncSA8aWEq8g3Hf09B+JG6kTlq9T/qO3C9rabZWfCY43PKPLT+V8gjR
CU84J9VI9nvRjWOigYnPbWEp6X2ydsKJLdyw66fV+0QbTNa4+e5HEp9WLlKN
cUuvtuK/eZzmq5X3TS5IvdJEr5Jn9VMsJb93S7X3RMOkvWNop1b9PJlT0rWT
GiZaxfYUKbeePBR5LtHwvLeObY5raW+7r4l/J3jY0mCn3m9pj9P46XPUhidt
YZRRh0Y9E14g8Umv2/IU6Xdb70dt7QO3+Lr1aeWIeK6J/jT0Q8rRp/kQTTX5
bitfKW6T38LYeSF1SDzg0zgl5YWUK1vYZb//k2gYQytO4mN72HSNxr3O0/gt
v5DqB8P7GJp2co7BlQbO23lJ8WSyRsObPOH+V6p5bM1P5kA0TItTJvklfG3U
RkvnT3Ce+LtNfrfHIV6jpT9tbGnNwdg32MyjwSkG57ZqKdX8LY1B+H0y/5ZP
uZUvwrOpTkt10aTvjGeKWtosjc+m17i152DoQPtZUDuPm3qm1YOpVry1rk3P
3uIIO1+G7jqdf/r3LCb8NdED6fmT3LVqIL2u7TVSDbapM4kOTPnC6Is0j4RT
SL5IDxJPmq6RrGuCvYbXM3R7K19kLcQXtHjk1p7Gpk4++RriNYhma8WzpYHT
vmj5IFJ7rXsWqa5IcYNoSFIDrXUZ3mfCWSSGk5iQfE3qsLX/ltZYusaWxzQ0
6i2vmmLdRJu18LClgdM5E324eU+Q1HOrBw1dZ2N1qwYmmqHlr4k2S+MwwYTJ
OUQTtnDDfjaSaNTWOaSeSV5a8U/x3HjHyy1fk/IIqecUkyc6sMUpNla3NBXp
r0ltk3VN+KLltdN6JvqBPKNO+DH11y391vIgBLeJDmzp/JZ2MjDH8Imp5yI9
S3Qg0WmTNbaw2vY+hl5K6y2NVSuPRDe29BvR+S3cSOez+S6jtC/S2iNzJnhL
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
1/on521YlA==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztmkGqZkkRhQsFcQsOFcS5zqtxC+0GrAYdNQjtQBpB3EKDCxAH7sV1uAwn
dlOCF17F6zjvOycy8//vgW5eXfKPGxmZGXnixP3pF3/4/Pc/ePfu3R9//O3/
Pv/wp19/9dWHr3/zo+/+8bsPX/7ql1/+8Ns///q//777+59f/+Wzb/7xs8/+
8/5v7zt//+Lff37/k9/+6/3Pv/h7+bdqs7Kv+tCxo/qszivhTyK2ibkn1lHd
e6796fptYl8l4ubaw4l4kj0wmbsmY+LKJ+8uqN51HeOyWdnvoLOOZHwHHf+J
Px3f1Ngm5p5Yx854ch6ruai+kblXcJ079bedvdp53vEhkX9c913Hn8n9r+YZ
kk8S/JDs204c1Pi77HTsd2x2xpOcoPrQmSO5R0hMOvFxjSH+u5Cuy1SO0fGt
89tqjJp/KpuTtX96/6tjXGeB8MMKZE0TvqXnSO5clZOkOepkbiT1O/mb+JwA
yS3quZ7kmdV7ST1CaoGOnx3/J7nBFav0hA5cd43Lt/Qc1fd27Li0u52R0EhJ
HbFbHEh+JjZX8X81Pp37IrHuq7iEa12IPtaBa0+6fEvMkcRB3beuun43qL2S
65i0BjIJolFXdqrxLg3fxf8T9YtLt+m8Sx3jwir9v7Lj2pNEl6vsEzsqEjpz
oq5fBVcdp67jbrFK7/NETeTi/2oPS13fZ6iXq+eJXJ24313xd3GSdF/A9dt0
PNNI95FdGkgaCR6eqInSOrP624620/ntbjWginQtpo6pfJusxVx8huQHl+6q
8sOd93O6dib651vm81YkeDjhuulc0XmXKw4dn3erAVUk4uP6dsKV69SYqDXL
ZO9Dtalym7SWdQpc3HjST8LDCbcncXDlhI6fk1qEsoa7gMTHxYdJbTVZs6g+
uO4yUpuTWmznWsAFFzdOx4poL+p8r8/V/Ex6rB2bHT8TvPHEerlCWqtR+Ymr
Dq3Gqz6Tc0Tu0wQnUWuxR+U5Hbju2USs1H2l7n/1tyQOam3iem/1LjXnnF4v
E62GcHKSf1w9l7Q26Nq3hJN0xuzGb1chsXauWCV4muvOUvcVmQvJFZX9TnxI
b70zfhLp+5TYJ9yY3LkubTDBsYkWmsgJJ/KcDlxrd7XpilWam6lncHJenfEJ
P9U9f+IZcd2nxP51/GT+cZ1fwmFcdhJ36yS/XQXX2rlyMvHNxbtU3SYxr46d
zm+Jn6p2fUpfQNXiqt+q60h6AYn8k9C+iJao2qmQqO/S/HYHqGtX2SHxVH0j
eUl9L6n9O/Y74ztIaBSunuZuZ0TNAy4+r+ZVV/5Ja1+d95KzmcgbHd86Nnfj
OR1Mxtx1jxP+6dIAO/6vsq/CtedVO5NzrODaM5XNThxIHeGq7xLaVzUXFzfr
vKuab/XbHWr5E0HqJpd9V/2S1jF20EkSurGrNkzDpUurYxI+uJ5P9pLS+b/j
c6Le2Y3brEKa+6n5k+Qll46Rtj8Jcn/tUC8TXXoHH9Tzpb4rrclP5n+1n6Lu
591q+VVQNf/d8iepnXcYnwaJf4I/u/xX68dVPqjnq/PehF7aGTOp/5BcpN6J
q2r5HeDShzv2XePVfLXb+Em4+F7azwqdPEPqx4QP5Bsb9ayl5z6Z/0kuUnuL
p9fyBIm857LjurvV/nJ6vHsNX0NC5588C5Par8sH19x38yed/0lOcGlBFXbg
P2mQvOeyo9az6p5cdS+syhUunX/VXZbWfl0+7BaTtPa1iv+Tu+9E/pOGWsMS
Dcd1v5B3Td4Lai/PBVLb7lAXT2q/xAfXu07xZxX/V3vfLu16B/4zCaLtqM/V
dXHpTul7YYdcQXR+1Z/EWUhrv8QH13hXTCb9meT/pL5Tz+Zu/GcHqNxVXYvO
nlH5gMq9E3r+DmdT3Z+qP4m6OK39qu9S567Oi8RkB38m9R/XOqpnXPWTzHcH
JM5OJ2eqYyb3sLpPSG4k81LvKeJPui52ab+JezbN83f2Z1L/IZy/stmZyzP3
BVw6Njmz6bNMdEJyRyTO5mStmn6XS/tVf0t8IzYJVvmTzv8uzq/ylo79jp0d
+IAKVy2sPlfv0MRZVu8p132RqJET41e9i6zFo3KzHZDI/y7OT/YD0TwfqS+Q
yA/quqTPckL3cNWqqv+qXkf0qPS7qvioWm7lz4ncbDck8r+LkxPNk/DPzrw6
41chkR+q8QndRrVD3kvqHdVmhXT/etW7SG2YsHPjJVz538XJVZvX8a7agfiw
A1z5QdVpE3UijYUyR9ITcX1v4+pNuPQWon2ptWFnvVy55cZHuPI/+Y5Ctam+
S60lV/X+CNLaS8cmqafSsXXVoS775E4hd3TiXUQvTdcI1fgbH0HyP+EY6r5V
czjhQi7+MwlSW6l8tXovqacmY5u+u0lO7oxXOY/rLHf87MShGuOqEYh2/WxI
1INX+wmunuYGLn0gjbSmqv72OoZoI5WdfmS883XZV+NAzmBijCsOk3v1xutQ
uXpCe3Tx82qOat3ReV6NmdyT6T5g57fq/a4+d8U2rTWpXEidLzmbiXOtxsHF
7XfWYE+EKydXNtUzm9hj6rsIR03vSdd9Sn5bzb2zN1TdO8FFXVoT4bodfzpx
Tvytrp2qTZEY7qzBngiSJ111ruon0ZFU+6664G2zfgnXvNTfqjotiVuCi3bm
6+pfT2odrpxf2ey8i+ilrnx+1wIzIHq4q34nGlTHfvouU+GaF7k7iM+u/nLn
eSJ/dsZ3xiQ0f1fdp+bqjs/VHMn6krW78Ta46mLXe1UNSs0VpF+QgKqHrKpN
KvsuDtwZ48qfLv1cjUnHB7K3r2Mma3PX+lb+q3XojRwSnDmhf07WLypO1z8T
/WV1X7nyvEtLUdeO+JaokdU4u9aXaI+3LjSDBOdM6J8df3bIq2ntOgFyZyX0
lusYwv/VOar8U+2bkBxLbFa/7Ywh55fs7R3O8o23IcENVJ1zMq+mtes0SA5x
6S0kl6p7qZq76oPr3iQ5ObF/EutF5rgDR7rxOojeW9l0cZt0Xk1o1wk/r3Dl
Ipe+p2rC6l1P+DypEToxJ/3lBN9WfVb3fGeOp+ilN14i0VNT1z2dS4mesMM+
J3eQi692fKueu3o96jqS/O86C+pcOr5VfrrytjrfzrvUed3IIc0b1byUzqVE
j1J1LZfPRK9Q3+XS59V5ET9V/133oIvbE/3Tdb8kaqjd9NIbb4O61tVzsvdc
/qf3bVrXTYx35bdVtVs1htQapF7o+EzOlApX/87VZ79rgceGq3e8Q108yeWu
UPPGqtrcpeeo71L31Sq+uioHdrgW8dnVd7hrgccA4WMdTNbFRO8i/lTzJdyM
aNckbp05duDi+el7v3rvDjlQ7VOQGipdq97YHzvzsY6fnd9O6lSJ3rSrxpnk
tK5vllz3fsdPdV6+aH3avquu7PifqFVv7AmXNntFIs+49l5aK6iek950572T
ebIDl/blWi9XPZXOgeQ8pr+huvsCjweXNpvOM669l9YK1PGdM66+N5EnVZC8
RPSNThzUemoyB5L3qnPsxK3j210LnAWXNpvOM647Ja0VuGqiRB3hypPVbys7
avw749Ux5LsXl17nilvi+wQyvrNXVd9uzEPlYIT/qHmGcHuXrlL5T+ZIfCPa
iJonXX1/Nc+TOy4RE3VfueKm3pXqu1Ska88bMyDn4gqV/5Aalugk6vOETlWN
ScTclXuJxtUZ08mfRAsiMenEqjNHMn43jSXdz7oxg4RWUNl36beEd6m6SqKu
IfcL0aY68azsdGyqSN/p5I6o5ku0PnV8J4aTedXFl+5aYC1cZ82lf6p7Rs3D
neeueaX7mITPu/QiF/90aSmd9erMpRqjPndpg5NroYL0R9K+3ehDPWuqjkFy
GtGCVB/IvFxaqKsucN1BrpqoE2eXpqTmosS9o+75VWuhwlUf3fx/LdL5qjOG
8Hx1TLoeuT4nuqhLdyLzUvMn4Z9pHSlRn6pjXLwlvRYqXHXTjXm4cpQrpxG+
2jn7Lo3F1StM5yt1XoR/VvYrH9I6Ume+qs/EH3UfTq5FYr6rfLjxOlw5KqEn
uHTsau5ER3Lxf5V7u86Uqmt14tZ5F6kv1HmRuyNh5/qc3LmVHddaELj0gRvz
SHPv6l1E/1HPC3nXZE9EPRfkTCXWt5qXunaud3XikLBzBblzXbk03XslOoDL
hxt9qHvSpbcQXqTOS607iMZOzqlLM1fPFLnrXXef6mfnXavGdJC4T9PxUX/r
qqlvzCCRzyt0cjvJ/yrHTugzrr8766WOmbyzSK4jv90ZRP8nz9MgPb5JP2+8
RCLfXpHWGVzaDtFnEnN0neVV/X1Xz1397W5I1Mid55Pzqvxx1Sk3vJjkZgmd
obKv5h8yX1ffZFJzdt1TZF5pLXE3JHS56/gdYnJKnXLjI9LcbJWGoOZVVXet
npO+c5oXpfv7Kg9U49OZF4lPAmTfuvTG2Rl/2s/O8xszIPwqzc8Jh3dpqp1Y
qXEmube/sq/7cH3u6u+76inS+9iB91ZQ9636/cOkftjBKXXKM0O9f9P8nGgI
6tkh3JLETeXACY7k0ljU3K7Gp2Nn576ASwdz3R2Tc09853CDg5zlBD8nPS9S
j6S/q6nGuPh29a4OSH8/kWNdnGG3vgDRCTs2ib7qnOf32Sfrm/DzmeHSRgg/
V/Mz2TM71J4uvk3yretOSdxNhDOo9lXfVLhi23meuF9cIJxw0s9ngIsvddaL
6POVz8SHzm/Te4/w7Stc+hW5U1x2iDZS2enYT9/1rn2V6I+v4v/qubv5vxeu
M975baIWSOzzdO2Z5smkN0pqK5feot7Ras042RdI6ITq/eiaiwuuOv3G2+DS
VF35n/S/MhH6PxLnKMGT1TEubdmlt7j6Ta7f7pZzOnM8kTOTHtyNt8HVh3Xl
KzW3pPdGgp/v0Jd09doSegup/V2aYef5JDpxW6VlERDOucrn00E01QRfIrVe
em8k9IEd+pKk1+bqp7i4q3qndH6rjklD/Z4trWW50OF7p2hZp4D0PdOc3KVF
qO+9IsHPV+ls6rzUfkHn+RUkj1V2VM6v1rmr8o/rbtrh/qr86fh59wI40vlq
8l2uPlqFBD9fpbN1/CRaMekvd8ao9QKpZXbLP+Ru2uH+6oBoDqt9PwlqDEn+
SbxrN52faLCTOluCH7q4Oqk7JmuZVftQnftu95c6R3Vv3Pz/dbjOMuFI5F2T
6+7i54l8SHS2BD/sxMqlV3Te24kJ0aZW5R+y307hz+oeuHO+F50zVYHUBYnz
q8LFzzsxSej8iZpFHa/GgXA8F+9V94Bqk4Ccix3OFEGin3jjJch5Ue2kzy8B
6YOTXOrS+RM9BVdfleRSUnuSGJI9k4BLS5w8UyoS+uSN1+HqLZKz6Tq/Kgg/
JFw3oSml30t6E521IHZc9UuibnJBrZfV/ZnwWcXp/etTkOBmq84diUOi50i0
DvV+UfMAuRdU+2rerux37JD5krVbxU9cutYOXNp1z961QB+E25O/EzlTnXsi
L5Hxaqxcmowrth3+oNoh512tH9W1U9erM/cK6n5I20nDxU9uvET6fKXP3ap7
35XnK/vqfk5weBJb17ok6pHKn/Rd6eInk9x+VS1AatiOnRsfkThfaY2o40Mu
YnzuZK+6dB7VPoktqR0SHM9VVyb6ERUIH3DVCKt4NeGik36egsT5Ipow0Ys6
c6Tx+j6ban5I5AHXGSE8uTNerX1U3+rIfXo8qdHSNV06zq7fVmMSSNRWzwbX
+UrXpC4NOQGXVkbygNpzVHM74Qaqb656sANyB1VjXDWdOhfSd57sWRNM7o1H
RVpvcdWkO3OPK1xagesOdfV8XXWByrFJPehYz+5cdtifJM7kt4m5dLDD3jgd
Cb1FzTMuPrwKRG90zV2tF1z6f7ouI/ejK0e5NPM0XP2UxLtcSOSWSf93AIkh
0RbUnrJLG5+Eqx9KNDFyp6iaUoL3krm48pKr/iI+ED9VLcvFATKz1PxP741H
AumlkvFqjbYb17oioduo9hP3qar7ueKp1p6u/m/HB9d4FxIxUTnA5Hxd+vPO
HDINdX2r35I6K5H33HHqwtVrU/OeehauY4jGnlgLwvPTPlRjVmn+k1r9zn0B
knPSvp0CF59Ue52unLODDqmeC/W+U3vHCZ8n6zLXHiM+dHxbtffU97o0yfS7
CFbth9OhfuPh6q2r945qh8bl+0Dm66pVid6rztfVg1DtuzRqdb6VTTLG5YOr
dt7hXYmYqGOeDeT8Es3nCqI1VXbSd73rTJFvqMjdQc6CWte4eCPpUz8S91Nr
IpcmmX6XKyYJjvqoUOt9V2yJ1kS0jnTc1LlXzwn/79hM1FYunpDmGydyv4Qe
q3K/xLtcMenE6u4FfATRClyxVbUmlTMnQDTzyiaJLekFuPrIif7OzeVeIhHn
qx3XHljVl3H1JZ8Brv2gxpboxiofTsClY5DYujRYci+rMSfr/sxcjuiKrvPr
4thkXh071+euntojgejSRN9T8xip/RNw+ZnQtVQ7ZC0IXyKagxrDt6zxrlDn
SDSZxBjXvDogmiR57yNB1YpJPu+8d4d639X/Um2S/Uzi47p/J+uUjv+nwMXz
V+lvrjxAYjipOz0SEvWU2lskWkciDoT/uHQtVed31Urk/nXljfQcT4Srv5Oo
xa4+uDhJBztrCCeC8M+EZjvJ/0mvrbI5GTdy7lzr3hnjqlOegdeR/Oyyk7Dp
is/9zUAOaj50abaTNaOrViV3GYlbgieTe9D1jUGFZ6sFSF1JtJqEzUnNf5WG
cDrUM6VqAtW7nHNQQLgBuctI3Dr2iRbn0qI7/pCYP2otQHIX+U4jYVN9lwrS
vybvfVQQ/raqBlTh4vmJnEnsk1pg1TcnJOZqz+gUuOopUmO6Yp7QYVzvOn2f
uKDmLlctOTlHApLTKjuuuBHu7bqzXD3fTszV9eqM3wEqz3edKVdO7uyrhA4z
+a5nBskV6pgdoOYlwuHJGDXfduZYzVfVBzo5itxHnfjsvMcqpHs9iTFk3ZXY
vIbJd914iUftxasavosnk/4vqVMS2lSCD7jqsh1ANP9V83Vxfhf/P51znggX
HztlXVycJ5FXyXuJn0SfcX0bRrSmHeC699Pzde3/hO70SJzzRDxDLz6hc5K8
Su5WNU+69CvyXJ1X5/kqJOaergVcumL6t4/EOXeGysdO7MUndE7yXUfHTsKm
+l4Sk+7aKPPauRZI9F7TGovrrknw/0finKcgwfF2wOS3DZ1969KH1d5rx+fd
egE76wAu3S9dC6h7j/jvqvtO55yn45QavEKC86vvJf1NlQuRs+D6VtPVCzhF
ByA9a/W7r0R+JmunfrfQ8ZM8v8Fxeg1+xapvG9TzRTg/yf+TZ7PzrlN0gE4u
JfdXh+uS/KyOUe8RUrOczjlPx4k1+BUuzk/mqJ6LxPNEbBO9gBN1ANd+UO+L
yb8THINwrVM454k4vQa/YudvG1z5czIHknVP9BQ6zxNw6TCkv5/+++oDyf9E
azqRcz4STqnBryCcv4PJb1rU55Oc3/VNkfrezvM0iL5BtJ1Jnk80omp8ot6p
4vbWtX12nFiDV34muCjJtyR/EjsErrOWuNcm7z6i83fsJPbkpH01VqTe2Y1z
Pip2rsGr95J6s7Lv4nud564xibVwnTVyr63SARLfQZH6lPBnl/3JHllnLW7+
n8NuNXjlA6lbSY2s1sLpOLhsumqfVfxzcu6d5ypncHFvl/0rXN8bpP288Tbs
VoN33ku4ENnPpJ5Nx4HYT3zLl+afZL7q3Du8SF0jF/dO1CCT+81VK914G3ar
wSvfCE9IfNvQqRcSWorLfkLrVt9F6ikXFyV3jVoLuLi3S/+Z3M+qztPxU/Xh
xkeQWqxjx+Wb6mf62wbXmSVxcNlPc/vqt7vxz87z9D6p3pXQfzo+dOaVuH9V
/qa+98ZLdLjxqh4cqUES+mr6rKXHJ+531x09yT9dOmdiX7k0H1VjITlZXYvO
+pK9d+N1qPdsuhfv4jnVXMhZI2dz1b2jxsR1vyd4QqLecXEMsk/IvnVpQepv
SV1GfOus7423Qc2r6XUhZ9Olr6Z7aol7h3BscgYTPM3FPyfvWde6EB9ctZi6
Rlc7/wUXx6cj
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztnL/KLVkVxC8KYmgkaOYbiJop92JmJoyIoNH1XzQojIEOGMwL+ATiW4iR
iQrzAj6EkWBq5gyIdLKl6lb91t79nRP00HPo3r332mtV1aru737lx7987+ef
efXq1a8+/8l/3nv7629/8MHbD7/3uU//52dv3//6197/7CenH/33+PT8h9/8
+7f+8Mcfvfn+Xz9+7Z7/5ncfv/7Bn3/75jtf/uKb1fnqeuV34prJdbnzVJ7V
Wq/7rBPi7M4/iXMyt1b8T6iX03I7mU8rznRuEM9SxnHPr+N/9V/fffPhT7/w
+m8ffSna0xPOk3Ulz9q1d7v2QonzCTzlzo3Y95Prhc7tZO2tOE/mRqtG3Dhc
x1+dr65v7YsyB+I8WVcSQ2L85Ln0Xihxpjk3OVfW0tr3k+uFzu0Er1pxnsyN
Vo24cUgwXJkbzY90jbsxb+VJi2ddXG09y53Pq1ev/ncoc5jEQKJeaBw7oXYm
c7sVZ5drWrlB1EhS78p6r+fXuV0Pgh/pGl+ty933Vp64e5Q8N3lWEue//OL3
r//072+8+edP/mH3JgSOKfns1guhE04435XbkzhM5AZRI0kcVuvalf/0ubIu
9173dzc+yr64e9fKczdWSS9M8BShf5J9P61eWhjYGpPGYSI3iBoh/AG31yC4
Y1LnJ/u7qx+kc5ioBYJ/E55SxnFz2K2dRCecoPMJ/HHrroXDRG7QGjXhjtW9
Sa+RcMdkDFdza+FJq34nc7h1JDzo4o+Sb+44CYYrtZNgJl0vLQxMctvFvSQm
RG7QGjXJk9X8V7/TPhWtdQkdQtevm89JDreOBOcTbb/KNyX/J/OT0MCteiEw
0I0/of/pHoHWja0cW11/rZ3VOTFPWusSOkSZD83prRxuYX5rzq62V35350Dk
pzsfJc6teiG0dCtv6RymNWFLNyY5plxzxfnrNavfad4k8GQ1vlJfK5xJcnhX
P9jqC1q5nfSSrR4zyRN6X3b1sy1Pg167m8PJ2hOuUfKHrvfVWhT9T/MmoRtb
YybvQWjdSNRjosGIfVz1qkS/meQS0fMmOUBgF5G3Se619LAb85ZeSmqhlWOJ
/ifymeAFOs5EDie57dYjrT/dfXT1CR1DYpxWTbljJpif5EPCa0R+Jj1+q94J
D9zNk0T/t/aU1o0nvGtozZPgxEQL0T2Iok+IGBLjEHgyue/Jeuk+JYl/8r2W
u/ZJ7lD4ztX/dD/b0o0tzdaqX3eviVgp+aloIYIrXX2i1G/y3NY47r2Evm3t
+yRuK/dOemhEje/ijl21doLPQ/Qabg7T/lWi8RJfpbUuJSdX+j+phdZaCDwh
tHRS1wRuE5qtxfVEjU9yh3I9UWtuPif7u8tXITCHmP8qP1e/7/JVVvifaJ5J
byepZQVD3Jpy972Vz8keEZrnBJ2Z7LvLHQrXK55/kg8E9ibzaXEQjXvE/JWe
TtH/7hxcrbXC/5UOIeZAeAtKzrhedGvfd3EofT3RxxGas/XvLSRcn9TapP9P
73tLk7uYQ2uM67nb6xHzUfLZ/Q6BwBM655O8csdP3pu3OJTmhRZH030Q0Wu7
/JLUGq2FJuuC0ORubhMaQ9lfJW5E3irPUr5DmNSNk9jSGr/1N/4Eh+7S/27O
JxiS5H+LO1zNv6o12qts6Y2TNXmSD+69yV4TeevWF7Evk9hOzF8ZX+H91t94
EnrvhH3c1QcRWJF4v8nf4BBeXFIXuzQ50Qe5+Nn6+6ld+JDsy6RudLHFnX9L
4yV/4znp907uo4urd8nhlQeY5IniFbfqZRJbWjrWHZPWk4rPT3McobEn49zC
Fnf+yr2KfnP1f6J176L/r9e4vUCLg4gcdnPAveY0TZWMQ/Bsi4NamlDZ30mO
2+WfTObq6vqkj1N+T+o9wUA3Prv0v8KbSu6dlsPKHBL9r+jG07C9pWcI7qb1
pKsJaS+rtY8n9ybEefINZ+Lfuth1R/2/4tMTNFvLJ3SxXcGZXf9GXItzJ+u3
xUGrNSaa0MWThDcn/ZNdvQntp7neXeLf0ti7S/+v4uCOuSuH3ZgruJ14Qcpz
T+CIJH8IbUxwkKvrVnzRiqeb/4l/ckJv0qrrRMMTf/P1kvS/m1fKOHQOJ9cr
GJ6cJxhyGkcQvHwaB61+J/59J6U3IfSPMmcix4g9dfVY0i+8VP1P6MMWvyec
tbre9X7dY/LfiJvkiFYPmGgkgoOUMV0vtJWTLf3j8kvCHS63unvqfo+t1GlS
m3fU/642I+q6peGVPF/9Tnv+k/9GHM0RRA+4i4NamsflC+X3JM4JvyTc4fJF
a0/pnr2lgd0a3KW3W1iU8I6bP4nvp+iB5LugFobs0v8JDhPrbWFjEjeXOxK9
mmCjwi/J/BO+SPiu1aevajmpo9P0P+GL7tJLq+vdbzLdHGj9/ZcbcxrbW/Gn
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
KGsncu+0OCv97GotLQ8niaer893Dxckkb11sT/pl5feWTk7G3KX/aS806Vvd
OiV0qYufynNXe6TUYLLepBem9T8R52Qtrv5P+I7ofZRD8bha76pc7e3ipKtn
Ejx3r2lxREv/r65peaFEL5ycu5yl1IvLTW6uJp6/cr2r8Qj9vyvOCVe6eevG
ZPK5LsfR2ruFk7vwmZhzUvstze/mCeEP0F5o4tu0evNE+yX8q+TkJL8TcU64
0uWRpCeafG6rT2zpTxqrJz0fgl9a+p/wQgl/oKXzW7zjYourdVtY6ubGCnsn
37MQcU44qOVhJnxK578yHwXnCawjsPoEPD9B/yc5RvsDCXckeLuazypuhH/l
1mnLE0j6wRa/t+Ls9qeEhnH5iOhzlVxy57O6l8bPFlZPYnjrWQnGrsZM8m0S
w3dpKqVG3DUSuOFqV8XzIXTvaXFOuNXNQ1c/03FOtIH7jmBS/+/ijgTzleuT
3FBim2iqSQynNVXLH0hqLdGxSe0T3N3qj2jPPOGdVR66v7t1RMdZwdXkXZKL
8y28nfSUiDm09L+Sh26OERju8pHLKQQ+JFjq4gMxh4S7lfgTXEz0Kcp8lHco
ijZW5jMZ5wTfVut1cek0L4i+dzWOgmMu/rs6051DguFuDhOY2aqvhKNdDZDM
weVEJYeJ5xI+ect3WmljV+8lOZ/EWdnrE/ycSS+IWFfCHS39r+RbS0MSGEVg
pnuNUkdKDSp5ldSyW+8JV7a8ndb4ru4i+mv3cHuHVpxdzZZgaRKfJJ673hcQ
/o+r/5W5JbXQ6seTdbmYmeBDgnVJvUz6JIQ2mJyb0rO4cyOwLtGWk/otWfsk
F0zqf5ovEkymuSbJq4QjEsxs+RitNSr1MtmLJT7YLg+N5utEh0z6BskeKfnp
5i2Bqy0MpzmC4McT9D/tLbfqzu2dlTgrOOOuUVlXy49y+y9a/7sxV7Q9zdcn
Yw7Bfat3GS52uWuk723tI/0sJf9p/e/+7nqPLq629JVbL61vKhSeUrQW7cMo
+5Lo/9a5wuluDic6hMYBZQ4t/eZqKrr3obnV3cdkr5M9pfW/oqNoL5f+DiGp
/VbvcJ2PorUIHJ78TobwrJReYNKHJHBgUr9Nzn/XvXf0o2j97/bghJeb6OEk
f1r+sHK960GtOILQ/0puJ7yjjJno/8TrS7Qxfa7k+Yr7Eq4n5n+C/m9xXOte
ZU9p/U9/B+hek3iPLf2f4G0SN3ffWz6M66u747gYpZwne93yId0aT/Ckpd9c
/CHmP3lvK86te905E/qf9pBpv7fFCy3PJOGF1jWtvVPypJUPLk8pvaGL/y0f
ksBM5Xo3f1yd35r/JN5O4nOLX2j9v8qZyW/5kvNW/lx/b3nFu/hx13eYCZa6
PNXCLlcnu1wziQ8Jz7ZwbxJviZ6L8JRa9yo16+r/VQ67+JD4FYnmb+2pUuNu
/BM8nMThlneXvCtv1WxSR8p6Fa5pYaa79ta3PbR+buFtiwtoj4hYV8Lv7nqT
3pzAPaWukzivnkXo8JZP0tL/k72J8l6AqEE3bq36IvAh0S1KHRFYOom3uzCc
yOGk3hMMTPr3Fu4lfXfLE2h56S2fpDX+ZG+i4FiCLcq9yV7T+JlgqaJbiPcX
NPdN9hT0kfCUm7duTJTaJPRky/NP9kKpF8JLd3Vaa3zlIHoT5bnE+51d+r+F
D6tzwlOd9F5amNnS/5PzP1n/r+qxpSfdvmBy32kvXXmWgkXu+PR3mInn42qM
pL6SvSb81eR64juKFnadgJmnzT8Zx83bJJ5JPSqHW3d0biiYmfQ+9LdAxPjK
Gl0Md7Vry6+Y1P90riq+KOGp0rh3R38m2etkDoQ/udIVroZcHe77ArcXSPZa
wTHC/9/1zU/rXUDCI8mYBNfv0v8JthD6v+UF0ffSmN/SGMmzJvW/6zMkeli5
Jvn+x43/aj6E/+/GwfV2Wnu3utedw+p3N/6KX+HW5i7938rVlv5v4eTkvcqc
W2Pu8pdo/a9o/kk97PoGLY3h4nDyvnWXn+N6LC3N3/KXlBxwa3xS/9N6+LTv
qIl7J/2ZSf1P5K0y5iTWtb5XIWot4VZ3vQnOE99kunza4ikXoxK82qX/kxxW
7l3tnbK/LT+N1v80lk5yB+H/JPqExnZFEypj0rzvcmvre8tEcyb9VBJnIj4E
Rin4TOv/1jVu/554/jQ2JvhM42prbm4M3TEJf7KF7Qm+Jb1Mco2y9oQTr9cQ
3k7Lf5uMz+r6BKNO0P8ELin9u6v/CRw+AbddXJ3U7cnckhpM6sLFupYnsKvW
CLxVajPxcFp75OL/Lj46Wf/vwqXE8z8ZDxPead3b2rvWvbT+34U/hNeqxFyZ
8+T7jsTDSeZ8QnySfT9N/0/iktsXEBhIrJHom4iY0/NPalB5rpIzNP60vNYk
D2l/232Wi0XuHrnfhBDxUWJ1F/0/iUvK+Mp3s7v0MO1HJfe21nUX/b/KGeW5
Cf4QPkArtpPvOxL/h37fSsSnxUf0XhP1ReOMu++EHqbXSPDsLmw/Qf+7/HKC
/m/xgrt2+u8dXJ51+eh6jaIPifgkfPTU//8fZ1ZrTOqIxnA3t5P408cd9f9q
/JP9/5P1f/IdvoJFqzm0+GjVDxL90Wr+k3V0F/3vXjP5/pfGSSI+rYPuXxKM
Suqihe3uOHfX/0o86Z6i5S+5fcojf/9zgi/h8juBey2cpONG4D/BHW7euph5
/f0u3/+crP9dbZnEkP6+KMHtJB/c+npJ+j/BEOLdirsuovfZxVnEPE/T/4oH
26rl1lqSvaD1f0uf78LwxMt6fv8z40u49av8PjnnybjR3JQ86wT9v9IPLuYk
HPGS9D/RQ+3yfxR8Vg53PkoO03tN6/8Ef1a/r96hKO9WJvV8C6tbfLGLm9y9
nvT/Ce3aWkuLF9y17/L/T/B/FKy+Hs/vf2Z8lcQ3a2HUJKfQc3Cf1eKCXfo/
wSUX2x9B/7f8f/dZbp4k3v4Kf5IxH+H7HwIrEjxxD2LMybgl+dPq9SYxKhlf
wZ+n/u/6/6tYtb4dbfURq7m1vn0l6ivZ69bcJnFml8amsZdeV+v6XRjlYqZb
y0/9/27rnfy2M+kL3JgovUAS5zvq/+QgMNbFMRobT1vXLn45Qf8rtZxgu4uZ
d9f/qzHdGNLvjie/X2p5TXfR/ydgMoF7k+f0ulp7RPd6bt4mmPn8/mev/5/o
Z+XdccsvonsiJYfpvSZyksYTgpsmj1082Mqr1non9b+CPy093FpLskZa/0+e
KzmW6FuiB3R/v4v+b82ZwJCTuWAXD+6K1Wn6v1XXyTgvSf8n71uTv7e6zofw
dpIeUBnz7t//t7RlC0OIeycxsDUm4fkQcztN/yt1/dT/+fvWROdfr7muq+Xt
0D2REqtH0P+Ejm3dS2M+zWWE5zPpU7l56+bn9ffn9z9d/z/pC5R7lb2b9Hbc
eCqxeqn6v7UW+t53xfsm9rbwucVBk/yeYJQyB0VD7sIHhbNO0/9JX0DgA+3t
JPzuXn93/T+JezRe0dj4kvqU1viE/r+eP7//eTf97+6RgjkJPhDz2aX/lV7g
ZP1/mi5t4ZV7DY3Pp42ZjD+p/xOseGT9f73X9W0I3evmzAn+nrvvSkyIvXZz
chL3CHw+Tauf0KfQc96l/5O6pvGhhfOEJlzhkhITN1YtzdCaD63/iZoi5nay
bjwZtyfXTo9J5MMJ+t+t60fT/+57WNdvd3Xval3J34W1csDV2CvuSzAk2etW
fSW4d3fcbmm2u58nMaf1/2n+QAvnW5rQHV/R2InuVfjCncMu/b+6N4nDpP5P
8JPmjl24nTzLXfvkQcd2F0a52PVo+t+djzu+onsTzZ9o3SQHkvdKdB3R+n+X
btyF25Pz2YX59FomMep6/vz+Z8ZbS7yX1RwSTJvU/6334K06IvT/JOacgNv0
unZxwSSnn4ZRJ/gDSq29JP3vauDr7/R3OMre0X93luSDuxdJfRGY08Koybmd
cO9k/JPxW3nr1kirrpNxHln/JxpY0cYn6P+k91HWS/dirRxoYUKLI2i82nVv
C/MntX2CzwRGtbDdHecR9H8SW/e70BP0v3vewrFJ/e/Os4Vjp+HVCfcmcdsV
/xP0//P7H45bk9i6+j/55vME/z95D36a/j9Nz9PzT8bfxWtJ/P8Dcs0rCg==

       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2b+KJGUYxeHBBXVjvQERDAx3Y7vdVLPVwEh2RA1kQVgDMfMSTMU7EQPx
Fow0ErwCA2FDZ8FgksLv8/3T553zC5TjMHu6uqvq1LPtG598+fjzl66urr56
9eZfj6+/fvTs2fU3H7z84j8+u3768MHTezfx23//eZG/f//e6e0/Xjv/8uHv
p/sfPT+99d3r50///vWd2/n27xzlij+70hN53UjP0e9E3stuf+Tnu6+b9Tlk
XQMrv9/Zk5Wz3kvFa1Vcz5H7MfI5ZP3Z6u2qvnduHgHn//rnrzd/PL338Svn
n558cb7/52+nd394ePr5+aPT7Z9n/dmVn0deN3L8kWPY/Uwin8/K8a+8buQ4
dz/PlfdScY4iPSvX2EquuOYj913W5xC5rnbPV8V7ifx+5DxmHU/WdbLyfDns
XHlWHr3u5r1z+LpHPSvHv3Bsu9f57meyewwr73flPGadu7RzGnitrJ8ffp6R
87tyrW5+PlnX2KWuq917Le29BK7byHM/65rcffbt7nlWrrjX0q6N3Xt24TrP
2sbIbkSuk+3j33z+luxn1s8L7vHQ+Q1s5vbrJj2bQtdb4FlW8fwNfW8WOdeb
x1a94WnnMen+qvZ/yTO34B7cveazzl2Fl6oNVnK/F29sxfVf8WzqNGT5eQ/c
+53HprDzoc8kYL8S/xdf89XX58X8f6n9zMq710z1xhZc/1P8v31vVvh805Al
x7lipCn+T7LfnfJ/py0L/B/yarHB0p7FBbvR6v+K4xfzf7lFk/yfdU0qbHvo
My94/k73f7UtW//uVrE/WZ9/xf8L6HxG4P//twlJ9862/7P+7nChZ27Wuat+
/o70f1au9n/FMQf+HoT/8X+a/wuuN/yfcN9tPn9H+r/xe8uSv7tVf7cZuAbw
P/6PWHR7c/B//L6LfOc2xP8r+7Z9bMX+jxxz1i5dzCH4X2aLym0j0KnwzFXw
f8R7yv4/fN3I94qN18zKMXc+9/E//i/5brOxE/8nfOcm7P+S5+budywC10z1
c7/iePC/zhapWb2iU3l/Os9j2nfswv7ffa4dvcfq61n5uV99PHLPCPyP/wUs
V3EeFa4ThWs+7f2KXTMK5t/eSfwvs0VqVq/onLI/Jfdd1vfqd8j/2+/3Qq6+
1HM/7XgEth3/17lOuXP6/ijsgLP/j45/5ffv0nM/7XjwP/6/UOeU/VHeATf/
q+1853M/7XgEth3/17lOufMu7c+ldsDN/xMz/sf/na6b2OmwP/jfJ+N//K/g
OuVOh/3B/2T8j/87XTex02F/8L9Pxv/4X8F1yp0O+4P/yfgf/3e6bmKnw/7g
f5+M//G/guuUOx32B/+T8T/+73TdxE6H/cH/Phn/438F1yl3OuwP/ifjf/zf
6bqJnQ77g/99Mv7H/wquU+502B/8T8b/+L/TdRM7HfYH//tk/I//FVyn3Omw
P/ifjP/xf6frJnY67A/+98n4H/8ruE6502F/8D8Z/+P/TtdN7HTYH/zvk/E/
/ldwnXKnw/7gfzL+x/+drpvY6bA/+N8n43/8r+A65U6H/cH/ZPyP/ztdN7HT
YX/wv0/G//hfwXXKnQ77g//J+B//d7puYqfD/uB/n4z/8b+C65Q7HfYH/5Px
P/7vdN3ETof9wf8+Gf/jfwXXKXc67A/+J+N//N/puomdDvuD/30y/sf/Cq5T
7nTYH/xPxv/4v9N1Ezsd9gf/+2T8j/8VXKfc6bA/+J+M//F/p+smdjrsD/73
yfgf/yu4TrnTYX/wPxn/4/9O103sdNgf/O+T8T/+V3CdcqfD/uB/Mv7H/52u
m9jpsD/43yfjf/yv4DrlTof9wf9k/I//O103sdNhf/C/T8b/+F/BdcqdDvuD
/8n4H/93um5ip8P+4H+fjP/xv4LrlDsd9gf/k/E//u903cROh/3B/z4Z/+N/
BdcpdzrsD/4n43/83+m6iZ0O+4P/fTL+x/8KrlPudNgf/E/G//i/03UTOx32
B//7ZPyP/xVcp9zpsD/4n4z/8X+n6yZ2OuwP/vfJ+B//K7hOudNhf/A/Gf/j
/07XTex02B/875PxP/5XcJ1yp8P+4H8y/sf/na6b2OmwP/jfJ+N//K/gOuVO
h/3B/2T8j/87XTex02F/8L9Pxv/4X8F1yp0O+4P/yfgf/3e6bmKnw/7gf5+M
//G/guuUOx32B/+T8T/+73TdxE6H/cH/Phn/438F1yl3OuwP/ifjf/zf6bqJ
nQ77g/99Mv7H/wquU+502B/8T8b/+L/TdRM7HfYH//tk/I//FVyn3OmwP/if
jP/xf6frJnY67A/+98n4H/8ruE6502F/8D8Z/+P/TtdN7HTYH/zvk/E//ldw
nXKnw/7gfzL+x/+drpvY6bA/+N8n43/8r+A65U6H/cH/ZPyP/ztdN7HTYX/w
v0/G//hfwXXKnQ77g//J+B//d7puYqfD/uB/n4z/8b+C65Q7HfYH/5PxP/7v
dN3ETof9wf8+Gf/jfwXXKXc67A/+J+N//N/puomdDvuD/30y/sf/Cq5T7nTY
H/xPxv/4v9N1Ezsd9gf/+2T8j/8VXKfc6bA/+J+M//F/p+smdjrsD/73yfgf
/yu4TrnTYX/wPxn/4/9O103sdNgf/O+T8T/+V3CdcqfD/uB/Mv7H/52um9jp
sD/43yfjf/yv4DrlTof9wf9k/I//O103sdNhf/C/T8b/+F/BdcqdDvuD/8n4
H/93um5ip8P+4H+fjP/xv4LrlDsd9gf/k/E//u903cROh/3B/z4Z/+N/Bdcp
dzrsD/4n43/83+m6iZ0O+4P/fTL+x/8KrlPudNgf/E/G//i/03UTOx32B//7
ZPyP/xVcp9zpsD/4n4z/8X+n6yZ2OuwP/vfJ+B//K7hOudNhf/A/Gf/j/07X
Tex02B/875PxP/5XcJ1yp8P+4H8y/sf/na6b2OmwP/jfJ+N//K/gOuVOh/3B
/2T8j/87XTex02F/8L9Pxv/4X8F1yp0O+4P/yfgf/3e6bmKnw/7gf5+M//G/
guuUOx32B/+T8T/+73TdxE6H/cH/Phn/438F1yl3OuwP/ifjf/zf6bqJnQ77
g/99Mv7H/wquU+502B/8T8b/+L/TdRM7HfYH//tk/I//FVyn3OmwP/ifjP/x
f6frJnY67A/+98n4H/8ruE65s3N//gHVKHcx
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1zFrFEEUAOBDo4iQ2tompQFTWKi3WqeLIFgonKCFBISkkFT6A/wFtpaW
tpZWdnZW/gZ/ghew2BRD5jHzbjfxK/b4cszNvnnz5u3m9su3B6+vLBaL4xvr
j4PVu8dHR6uTJ9dP/3i1Oty7e3h1zQ//rlP/3no/7P36udzZ3h927n9++OXr
p+Wbk0dnPB5Tcum3veZpuVfL+GjM2eNb3JLnmjgz6mTO9ZB9Rmrmb9mjlpxn
x5N9Zlv2d5M9JFoD0ZjXj4Bzr+H57vD02Yth++a9Yf/bnwc/vn9c3rl268z3
m5wn+xrHUxNz9vg556HGc1hLrzy01Emv/EdrqaYOo/G01HZGbWTkIWPvWmJo
2bvSVcrP+NlRE/94fMY82R7ftyY/pfh7jZ8qJzV5qImntO9T7W9LHko5qamT
6NpL94r22FL84zHj+VvOb01tl+JpqY1ordbkoZSTlr2rWUvLe0ivMxVde/aY
aA5b1turP0TXGHVGTjJqtRTzJve3Vx6i30f3sWaeUh+IPpcz6jx6FqI10+vM
Zux7r3haaikjP1Odzbn1hDnENrectDwv5hB/Rk/InrPmnblXX5rbe9cm6yfa
8y9ibTPztP2wZs7o/1NT9czL6po+L8/MPFVfmkM8l9Xe+ZmZ/09752dmZj2f
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm5r/8CcdvV
hg==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2TGK5FUYRfFGRdyDkQsw0VRsDEQwHFfQikYDSouImakwuTuZPbkKnQGD
SRq6qf5X/b6vTqCM0n3r1X33nQP6yfc/v/jpvZubm18/evO3F3e/f3V/f/fH
dx++/Ycf715+/tnL99/88c///3r75x9e3d9+8Mu/X/z29asv3/3z678/vX39
zce3f/3z7e1D//6hn3lqzmN+9zF/PiX/oZ8555mP+O7P1dvR539q/lM/6+g7
eq53dMR5nuvunqvzU3LOucmjf/cUFh1x78/1WULmpVxwqZwjejvlnBPvTj7D
OTd2xPc92qHymzrnNi7lhUvxR+CJnHPEXcg95ILz352w8ylv6lIumM7tKTyR
c3JBLtA6F7aaC2ZxewpP5JxckAu0zoWt5oJZ3J7CEzknF+QCrXNhq7lgFren
8ETOyQW5QOtc2GoumMXtKTyRc3JBLtA6F7aaC2ZxewpP5JxckAu0zoWt5oJZ
3J7CEzknF+QCrXNhqxNdINz1psyJ25ZZofWQC3KB3Pn0u96UOXHb8n60HnJB
LpA7n37XmzInblvej9ZDLsgFcufT73pT5sRty/vResgFuUDu/JT//i/c9abM
iduWWaH1kAtywZTOc8E+nsg5uSAXaJ0LWxU6zwX7eCLn5IJcoHUubFXoPBfs
44mckwtygda5sFWh81ywjydyTi7IBVrnwlYv9f9/c4GTOXHbMiu0HnJBLtA2
KexkOren8ETOyQW5QOtc2Kpw5lzg352wkyms0HrIBblA26Swk+ncnsITOScX
5AKtc2GrwplzgX93wk6msELrIRfkgqd+1qX6zwX7eCLn5IJcoHWubTUX+Nye
whM5JxfkAq1zbau5wOf2FJ7IObkgF2ida1vNBT63p/BEzskFuUDrXNtqLvC5
PYUnck4uyAVa59pWc4HP7Sk8kXNyQS7QOte2mgt8bk/hiZyTC3KB1rm21Vzg
c3sKT+ScXJALtM61reYCn9tTeCLn5IJcoHX+mJxz7jYX+NyewhM5JxfkAq1z
4XsJ/eeCfTyRc3JBLtA6F76X0H8u2McTOScX5AKtc+F7Cf3ngn08kXNyQS7Q
Ohe+l9B/LtjHEzknF+QCrXPhewn954J9PJFzckEuOGfnwuanvK9csI8nck4u
yAXnvDth81PeVy7YxxM5Jxfkglxg9p8L9vFEzskFueC5Op/4duT+c8E+nsg5
uSAXnPMehc1PeV+5YB9P5JxckAtygdl/LtjHEzknF+SCXGD2nwv28UTOyQW5
IBeY/eeCfTyRc3JBLsgFZv+5YB9P5JxckAtygdl/LtjHEzknF+SCXGD2nwv2
8UTOyQXX4wKBFcLmp7yvXLCPJ3JOLtjtAo0VU76L8L5ywT6eyDm5IBfkAvN9
5YJ9PJFzckEuyAXm+8oF+3gi5+SCXJALzPeVC/bxRM7JBbNcIN/1xLcjv69c
sI8nck4u8F0g/K7w3XOBf7+bMifuWeaD1kMuyAVTOs8F+3gi5+SCXJALzM5z
wT6eyDm54LIuOOd7F1ghbH7K+8oF+3gi5+SCy77HXOAwROs8F+zjiZyTC2ax
Xb7riW9H7jwX7OOJnJMLjnuPwnk0Vgibn/K+csE+nsg5ueCy3Wrn0foXdpsL
fG5P4YmckwtyQS4wO88F+3gi5+SCXJALzM5zwT6eyDm54PGZR7zNXOAwROs8
F+zjiZyTCy77NnOBwxCt81ywmydaTi7IBbnA7DwX7OaJlpMLckEuMDvPBbt5
ouVcswuOfmu5wNz8lPeVC2bxZMqZhTel9SD8fC5wGKJ1ngt8nmh7lvkg9yD8
fC5wGKJ1ngt8nmh7lvlwqR4EDgtn0FghbH7K+8oFDk+Ez9L2tmljuSAXyJ3n
Ap+r2p5lPsh7yAW5QO48F/hc1fYs80HeQy7IBXLnucDnqrZnmQ/yHnJBLpA7
zwU+V7U9y3yQ95ALcoHceS7wuartWebDU88g32Mu2Pd25M5zgc9Vbc8yH+RO
ckEukDvPBfsYIufkglyQC8zOc8E+hsg5uSAX5AKz81ywjyFyTi7IBbnA7DwX
7GOInJMLckEuMDvPBfsYIufkglyQC8zOc8E+hsg5uSAX5AKz81ywjyFyTi7I
BbnA7DwX7GOInJMLckEuMDvPBfsYIufkglyQC8zOc8E+hsg57/6u4AX5HnPB
vrcjd54L9jHk2nKEMwgcFs6gsWLiVnOBz+0pDLm2HOEMAoeFM2ismLjVXOBz
ewpDri1HOIPAYeEMGismbjUX+NyewpBryxHOIHBYOIPGiolbzQU+t6cw5Jw5
Mium32Mu2Pd25M5zwT6GTOkhF+QCrXNhq7nA5JWwMXnPMium32Mu2P12tM5z
wT6GTOkhF+QCrXNhq7nA5JWwMXnPMium32Mu2P12tM5zwT6GTOkhF+QCrXNh
q7nA5JWwsSM+S3gjuSAXaJ0LW80FPrenMEQ7v/C+hB5yQS6QO88F+xiinV94
X0IPuSAXyJ3ngn0M0c4vvC+hh1yQC+TOc8E+hmjnF96X0EMuyAVy57lgH0O0
8wvvS+ghF+QCufNcMIsh2rZlVmg95IJcIHeeC3yGCJ8rbE/em8Bh4QwaK4Sd
T3lTucBniPC5wvbkvQkcFs6gsULY+ZQ3lQschkzctswKrYdckAvkznPBrExt
2zIrtB5yQS6QO88FszK1bcus0HrIBblA7jwXzMrUti2zQushF+QCufNcMCtT
27bMCq2HXJAL5M5zwaxMbdsyK7QeckEukDvPBadnyjyRc3JBLtA6F7aaC2a5
YApP5JxckAu0zoWt5oJcMHHbMiu0HnJBLpA7zwVO/sRty6zQesgFuUDuPBc4
+RO3LbNC6yEX5AK581zg5E/ctswKrYdckAvkznOBkz9x2zIrtB5yQS6QO782
F8iumbhtmRVaD7kgF8idX4MLzumaa9u2zAqth1yQC+TOc4GTOXHbMiu0HnJB
LpA7zwVO5sRty6zQesgFuUDuPBc4mRO3LbNC6yEX5AK584ku+A9gE20+
       "], {{0, 
       128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzVnb/KNVcdhYOCehtJLUK0sfH7tLSNf1qJoFVAiIWxEQsvwNLbSJd4A96A
VhbpUws2giZg8QqOrsWznj2T4g0nh3Nm9uz9+631rDkz873501+88/MvvfHG
G7/82mf/eefdX33v/fff/fUPvvL5//zs3fe+9c33vvzZy9/+++/z139486uv
//GVv3znrQ/eev3y9R///o3Xb/z1g9c/+ttv6tdX22z3Rbaz2n7y3dX42/lv
j311XMa+VrXx5H2tPrOqf6OvV/NGxmbX/BPqn4zt5evPLOC//hEdeLmdH//5
u6//+e2fvP7TD7/+H6+v9kW2k2wz2X67HTL+ZL9JzVx9d3UsZAzG/Lfrfte+
Vn+r+icaksxh8mfzoVHzT6j/k+y98jgy5tXYXs4tYeZEw1vPTY6R9PjVZ1o/
Ir28mn+Dve192fyWHEurJ/axJ3XY+mxbh3ft18gpLXPajEe4IqnVdmxtXxg1
YOhAy5zJd0lNvqyxdt3bYyHsbe9rxdvt63YdV/siPUu8JtHbtuaN/bb1T9aa
ZBbCeG0NtH3Rji3hbaMv7BxH1v2kFtn50WZvO58SfmvzZtLvq30lPWucBzbW
i+yX6Mxq/pNjIYzXaq/RRyttJH1h8/zKO2wtanl7NbYVe9v5lNQ/YcW2Dtt9
reqw3f5Hn3746pO3f//q4+//7tVqvZK1uNovybar+iF9RNa6zVOkj1qdJ/Nz
dYwva8DgecIShLVaLSJzu/KFVfYx8in5rb/lMXINQ7svwu1Xc5Xo9krDje0b
/mtf90LWesW6SR894TzGSZ5vWeKurNHOM6nVk8y5ylxGNjyp4SvdW80t8Qhj
+6vvGnXS/u5s6B5h/hXDJ35qXIdJ5mrFsUbWaOc5qX/j+oSWOUkNEG5p9eTJ
nN/+GTVvb391/tyok7ZfDN1rfbmt4ZWfJvy8yiakX1o9XI3N4Jb2d5OVhqz4
p60Zu3+fxvnkNan59tzCqjYMXWrrJDneK364S/dar1xxO3l9V48k3mFkjRW3
2HPe+gXxlNXakf5d9aNxH5yx7sl+T/JYoqurLJl4SqIDZI1s3WuPsWWw1bGT
cZI5aT+zqm1bq8mc22Mg2yTZ+WTd2r18sn5W+e7kmFvdJveZtuxh697Vd417
5Uj9J/5u6wNhgJNat9KNqzlvueikfho8YNStwfmG15DvJmxzl7cSX2hrY5WD
jPtBiCa0emhcA2nrg3E/jnEs7TwbGWd1PrA9LiPrtTq8mkPSyyuvWT2HwWCe
Vc2v+rStQ9LjJ72v3e/q2TKtXhn6cPV+u6YGb7dMkugGyTiGd68+b9SewUXE
v1b8Y2jOavzEW0mmNr6bMORVDRCvN/iH9MXVdhLtNfSB9J3N26SvybG0144S
7245s90XqT0y/6ucSLi9/SOaQ3xwdQ+d4SnGd43t2/yzen/ls0QfSN+t/MXo
a6N3Xh4LefaIkQuS8yGE59s/o2eJ3xnnPVpPNHywvS7xrnNi7bNrViy04p+E
DZL3T+bKVU5sa4DUsMGfpHfadWx13vBxg51IXZGebXvT5p+WSVY+1Wqa4cur
YyH13H6e3B+3qvl2jUiuXGWxlbaQGiP82c5b2yNE5w0fb1+vdJLM58r7jHxt
6NKqPlea1vYa+bzNQivGJtsh80DGQOrHPsfY6vMqpxsscdc5hJZFT14bvPKO
dg5bFlrVs+1TNted7DXDcxPOT3SGPEPY5qX2uheiJ+3cntQZo/YIS5w8h0D2
azBSUnskA9qs2Pa+cZ35ylNaBrD7y2Da1WeS99vatnmpnbdWT8h6Ef20dcBg
idV8PoGxDbZJxpnosDG3be+vartdi7tywUnWIv82R/tn9I7NS22PrDQnWa92
m/azLm3eMPZLsvmKsVf6SbZp6Jg9D0ltG0xr5ALSX4bmnMwghLsMXlppEdGZ
kz240oEVb5AeSfa7Op9AGLvVDdILJ3XMuM5/xQNkPEYusPMUWfcr5llpfts7
9hhWubjtkVWWaXvQ1hAjuyV9TXTA8NNVTie9cMXJNh+SObka8xPOTa10lWRS
wjwnc0Gi83buSObHyIltXbU1Y/egoSErJrSzJ/FTY41WHLjSsbvyssHALWuR
XNDWG3nWCpmTRLdXvnmyx22Nav39Lj45qSG2pxvZs12jtp5JP7ZjSP5W19Jc
bTOZ5/a7hIEJbxismORo4qfJnCT3/xr8YOihsf0VM6/mpOUT0kethtieTvRw
VbdJn7Y6aXPgSsdW60J60zj2ZF8rVmw9l+hGu03iKatzAqTH7cy+Ymaivav+
XfURyYak3pIavhqn/azsdq7IsaxyUNsv7bqQfZ3kh5O59WT2NLzYmOekPlfH
1c7bSreJ9ia6QY7L8O5VvbXbXNWMoasrjzhZ5yv2aGvM5gfDC0httLqxOm/Q
zv9qnglDrvqOvH/Xa9IX9udXv6W2NWZ4mcFdhP8THljVeatXqzkxetPIqoZ/
2WxGvL5lqqRWW24k/d6uVzLOuzSfsNkTPp94h5FP2zlfcdfqPMCKh41MSuq2
7UGiISSrPoEhVz5l9BeZQ+M5NnaGusvfV/dVnfz8KmMa3mRw1+rceMt1T8iw
Sd2umCHREOOZ/CcZcqWxSV0Rfr7r38pZZfOk157g70/j+RU7JXXY1rPxXAuj
T8lrW39O5qzkWJI6af20ZVTSI4R/jGcVEn5u/WLly8SzVjn6pL+T2r6L/1d6
SDx9leXbdTn5myPpZUMrDG89yVrtsSQ9kmxzpbFkfVe9lhx768skCyTrsqrJ
lb8b58Fs/k9839aftgeT77brQnxnpWmt/pC8vHomm5E3V1nSmDeDydtxGlnG
Pj+Q+MUqR5P5bP191SNJbyZal3y+7Reih4RzkixP+oX0wsoHbX8ka7eqt9V9
jmTOV/Nm1/nVdxPvIHWy+m2F6K3BUcl8GutO7gk9yVcrjVrVA/FNuxeMfyeC
eHGb1wyGJ4yasJahIauca3O7oY1Xz45Y1VurtwZHrfRtxb1E0wy+WmmU8VzT
1e9Hq15I/JpkDSNXJsdLGJ7kTXLsREOI5iTz39Z5yycGH64y74p/DF09eR7A
yAKreiYsbfjjSc4k27c1ql0Xm/PttTb4OZmH1o+S+V/Vz+o8Ruvdq+t5iD+S
tSbPMEzGvPp3SVaa09ZGMg9J3638se0v45p8+3n1RH8SHkj2u8plq7UmGk7q
vO0vwmNt/ax4qf1M2y+k9lotIh5NeK89D9B6TetZxvmNFcu1/pjUldEjxndX
bLkaQ1KHq5y+ug+rHfPqvNZqLYyMY6/dyjuSdbza5upZji0nJM/NXtVhu9bt
MZLtE5ZbZYrV3JJeaL97VUsnGa/lXsLMyTq2OaXd70ozDR5Y+XXChIQzSQ20
9WD4neG5H3364atP3v79q4+//7tXhN/I/Le+udpX4omr811J3mzn1v73Sk76
/qp3SL6zn62d1FsyJ61m3qU/tpe1/ktyE9El4ndkLQjjtbnjJDPYnmjwQzvP
ydyuss+qZ4nnJnN79ZkVbxsZbVWHK9229aetN1IbhraQ120NGPq8yrx2HlyN
3/AUUvP2v+NjZN5EZ1a+b5+vaHmbzNuKXQl3nWT+dpur8ax0qa2Nk9f/EH1e
6dVdvxOt1pR4SqvPT2DsJ69L23dEK1Z+1H6XsOuKbWzmX2lXOx77mrR2rlpG
utLYdsyrObG56yQH3sUJpJfb+iH1dte6EF9u+9HIgKssZtShkTVs7UpqeJUx
E0ZaZZwVy7Wv2zkhvm/3C+GQhBlsTriLsVd1fpLPiU6u1s44RrsOEw4xnotl
60DC1Yb/Jv2SfJ6wXFIzq+sQyHoZ3rHiHJtvT55XIRrY1u1JPj95HnWVJZNj
tGvA0OEn6MCqr5O5au+3Wt2/THSsrfknsFxSM8SjWz4hc2L/9tGuS8IeyTyv
1mVV2y07XfXp6t6ru3yfrF1bP3fpQNvjK/65Gs/VvU6tjpFjTFjiqubbmjFY
jni9nXHIeRWyr9V5idU8kBpbXSfTHmOrjaueOun7rW6scutJ5m+zTKu97bob
r1v/Mrys7Rc7J65y+oorDF1dzSFhoZUfEf1px7PyixUfGj5ucO/VHH5RrmW1
2czOawbXtRmBzP/q2bat16+upyU6TzgkOa52DlfPSSC9djU2w99JRmvnPOkp
+7zHinuNLEyY1v59+WQvrDS/1ZxV7xOOWmWQVZa8GjOZ8/Z3nFXuMFi09dZ2
bgmrGM/SJHO++i7RNKPvVr58kjEMr2x5zPDTFdcZ+YjMc6LPyd+K/do5J2zT
8kn73ZWeGFpnswqp1WQO2/ppv2tkrlVOafXQZgzDK5NesP3UzgWt/rT9svJB
kiXbXki2//KZdUYuNrKkkVtbrTPmgWhmq89JvZFaTTRwpW9G7m4zDqlhIzus
+si+HszIBW1ft/1iaNqqflbrbmRSokuEr4x+WfEz0UwjUxi+nGjmqg7beTa8
vp2ftgZWrNvuKzmuu86pGnVus5at2+26t7pE1rRlITtPtWMgWbudh5a1VjWz
4iuSHZI6NOqk9XqDGUi/rNbCYEJbr4zzAHexVjsPZJ6NTEq81c5ZracbXk/W
y75fidT2yW2u6mTFAIQZ2l5r+XzVF4QhT+oV8Vzy/kobVwywysur8y1tza+0
96Q+rHxnlVMMjSVsQLbTasuKQ1bvt/5uXGOc1ORq+4S323UnnkveJ6y16oW7
/CjJksnYyHWnRq2ucgqZ89V1+8RzEwZYXety8vldq3U0WHGlCcZ5+JXWGX1q
5NBVNrnSRqMXbD8i5z3a2lvp2Mn744i2rOq59Zd2v4TBWjYjmmCso8GK5PVJ
XW0/Q+aErB3pO6Nm2n43eoH4UXJcxutkDomOtXxF8vj/Y+H/9bfKcck8rGq4
3Wabg0iPG9dTkX5c1cOql0kGWWW0tt/bOWk1ltRMMgajF0iPrPzFzuyt5rQ8
ZpxfInNC5iGpvZVGncz+q/6yWXGV71a5MmFO8syZ1dol21x5Oun9FTOQ7Z98
ZpHBAC3jtZqTfObq/rircRpZqa2ZROtWNUm2uaq91TG2vtayon0NPxk/YbCV
Txl9YXBvMv9tHjFyiuE1bW2vtMKoPZvHVp9pmd/IVqT2DPZO5mFVP4QVSQ9e
9f4qSyZzZd97u8o7LUuQz5PaMDh59Qwx4jsrHTbq5Gp9DR5bvSZjMLJVy7dk
PEnfJdln5ZWrtU56kDDDKmu359VX47R9f9W/q4xDONleC6IhpMZWdWLXXsIP
5PoN4o+k5okOr/poxc8rLW1ZYsV7qzkkx96y8UozV76/ug45OUaDXZPaW63F
qgcTniHZn3CscX6grcmkNghLtzVPNLPVQ8JvCT+v/IjoZDJXhJfI2pFjb7/b
aiapw5NrbfMM6RGyTdKDqxzR6hXxBcOjjbp6Qm0TPWw/33r61WfIvWkrdlrN
1apnyTNXk940NLnl7bt+cyc8s+LJdpsrrjZyd8u6tma2vUDqanWP7WoMK99f
cRHRLoPHjNdtDRMtWrFcmw2TNSX39axqjHh6Wz93HSPx3JX2rjLXSjNJDazq
auXv7RhsT2+5yB4DmVtD8xP9TPoi0VVSG4Z3EF9udcyuK+Lv9jG2XN1+13he
XPLdl9ftt31tcCzZL2F40neGp6+4ejUGosm2BhLeNtaU9GPr+60vJ/qz0mQj
r7XnMVbPyGq1xfYgwtsr/lxth2hm0mvE35Ptk3NQ7TES9rPvhSfatdIZUqvt
mq48jjAt0YqVXpHrf1b6nNxXYmtLWz8GV9v5mvTvSjOJnq94O2HLNl8k89yy
X6vVxj0yRLcTnUn+SK8lc9vut9X5VR4kfrdiACNTEM0h2tJqwuoYbc0/mRGS
+bczJllHkhPtNVqx5WrMRKuNHHqyX9rabn+/WB1XUhstA7TbJOfAT2oX0aWn
PS+UHAvhrmS/q1pqmZb4F+FhskYrtlyNeaVFRo2Rfl/1YMucqzWy9YH0e7L9
VX0SDmnX4gn1RjzXWPerOUzmwZ5bQ+tafU7WaMWWqzHfxeo2Wz4hvxPft/WB
6K2h56s1aj2acP5dfWTUVftd4rlGL5PXxL9Wn0/qdjUG4zmHq7xD2DLRwJPM
dnW8bb3ZLLTSq1bPk7k6uUYk09l9ZNRVW2NXx9V6Lpnb1evEj9q1Jlq0Yryr
v7tYvR3DSkPuYjaDu5I5IbpBxtzWSbJf4n0k1xjMQ/ro5LMobc9d+XJ7LLYG
Ep+1+W3FAEltrHIWqeGEwU4+491eL/I8xlXNrzSk3eYqBxnMs8o1xPcNTbY1
39btlQYa1zeu+C1hyJVXtjrc1vOKGYztt9y+Wq+VZpKaN3pwlbNWfN727EkW
WjGMkXEMvl31O9HAlZ60+nnyPhSjzpPvGvfRJ7q60sC71qX9rnGfDunBk5lo
td/Wr1cstGKY1vtW/kKOsdXt1TgJa9l9ZHgxYdqT1+6ujnG1/RV3rdbdyESr
XNP2uHF+wOjlFf/bz5wn677SzLvuuSasYuyr7SPDi1suWtXGim9XWeYJ3E4Y
zOAlw8tWPX6Slwx+btex5ZCWzQifr8Zsr91dvm+zK9E9ktPt1/b8275DzjOQ
tVuNf8UYRgZpM2l7LAY/2+tIttNmEIPVr8ZA1m5Vw/a+2ozQevFqm8a1uPZa
r/LOSfYjbL+qc/K+kUGSYzQ8hfDzah5WWtF6HKnbk55l1PCK5QjjkUy92qbR
4y//bJ682hfxboP9DL5a5b7k/bsylO0pto6d3P7V/Kz+fYTWd4hnteuevN/6
fruvlb8ka7RiALueCduQ+jF4gNTnai1WLEf4xM5QKy9eMVtbh8Z5AJujiCYQ
TlgxhsF17TyTe5NXNUD8zmCkk17TencyP6tr41f/lkG7XiuPeEI/JnNy8v4U
43hJ1mu1xdYE+zXhqxX7JWth14CRJYm2nPQawg/JOYdVjmvHbOfHZD5X/Lnq
tfbfQUg+c9ezfVZZz+hr47s279m/XRpcZNQYyRFPYHi79sj8k2dDrfx0lR+N
91f9uMo1pBdaHV5dC7HyYsISq++e1IcrfiN/q2MnGTypsZP1fLImnzD/hk6u
erCd86vjJe+v+vFp7EF0+OoYjay3YolWE1Y6YHvWagzkd/C7csGqng2Gt9mJ
zP/qeoCr766uM7TX7q7auIs9rrR65fWrrGdoo+E7ZF1Iv6x0gOQOUgMrX17V
84rhCSuS7z6h5tt9kbVYaaDRR3bPttqy+m6ScUgWIFzacgXxHYPV23k4ec1q
WzOtphHdIFmAcIvxm9pK907WPOk14l+rdW810853K/aweYDoGKmHRBtX4zdy
OqlDogMn8zLhjeSPZIGVZ634c7XWK06+65qBxL9W697eb9jWBqmr5NjJuTvC
A6TOjT5aZcxWk+0+Inxi69XJzLtioZa1VnNIeKbtx1WPEJ8y5nC17jYvEf05
mQ1XNWzrUpKzVr52tX3DO5K5avlkpattj9/1bJxk+22/r3q2fZ98l3Dyqubt
Z7q2dbXSwFUftexBPNc+b0MYY5Vb7/JWwzvasRl5LRkDeZaOzUsnmYdkJcIq
yXyuetPQmZU+PEHnV9xFesT+HSrhBHIND6m3k966YiQyNsKEZD7tTErW1O5f
23/JONtabf2l7feVP97l+8ZaPG1f5LzNiicT5ln9xmTzJ9HVluWS+WwZ3ta9
k/l01VOkF9rtkHGung9gMy3hkKd5Qeuzq3Un+yKeS3qcaO9Jn31CLmh1aeV9
hu7Z5/9XmrbqhcR/V5ko+T0o4Q2719o6aTPyXZr/RflMy4StVpy8N9/w2dU4
iV7ddd6DMH+rn6v8teIfw2dXXkOyrcHq9nmeVXawNf+L8tqoGWNshDkNrm7H
SXLByitX9bzyUJvJCf+c9Nm29lYaa7CNrdXkfXvtkv59wuvVPBAda38Lbpmz
rTGSI1a8uuo10pstf5IeNJg80fOT+WiVYQmfG+trr2PSv8n7pH5Wa53okv23
Oi4jo61YpR0/+S1spatJD7Ye1PYmyeZtDxpMbtet4ctEJ+3zFa2GrNbxpOeu
eoGcW7Bfr9jSyGIrhk/WkfTmlZYSXSW5wPhMO+eG5qwY7CQ/tL58V2ZpvZvM
812etRq/wVRPm5+khu3nu7Z90R4vOb9kMwbR4dWfzRVEM42eXfGDrUurzEI0
p+1l+5nnxHOJ9xGusM+9t/Nj/4Z4F7+1PmJkvfb9lQ7bun1S3xItsnvnqn8T
jyC6ZHOswZ/EHw3NsY+r5QrjeA1OJhq42qbBriuuXuWgkzpP1t3grlXN2Hlk
pXuEFVccS8ZGesrQh1Y37My+2o4xP6v+TXJEe45lNbcG3xqaaYyN1OHqN4tV
Fn6aj9gs0WqCMU6iUe0YiD7Y5y7uep9wZvv5Vf8m4zeyjJFBbM08mcFX/tiO
udW3hLfv8hGbJZLXd40z6XGbS1c6kHy+9cHV+0TTjO+u+MT4TMsDq2dMEc28
6zn8xBMTHV75aTvPto+0Pv6E7Gb0PlkXwqWtlrbbJ/51F/Ov8tHV51d8YvwZ
GYSw1kq3jWeVJDmFZOek1whjGDyZjCHZ/slrNgj3nnyO7opDVrl1VQ/Ej1bM
T+phxV2rcwt2FjaOMekpgx/aPm2PcbXN1i8I3yac02paO2aie6vslrCNwQ+E
zch6tdxl1MNJ5m/nhHyecMsTsjCZT3JcRLfb3kn8aLWOd923sqq9RH8MTbZZ
lNTJyXVMvL6t7TarGvXQai9Zu2ROkrWzfxNvPdfW/5WGXB1X8u/BEWYmtUTW
kdThyWcvt1x6Fw+vWJTUSTLPJM8aWcb4DKmHdgxk7YgXv1w7g1uIp6+ysK0h
dp2TniKc02qXPf6WH5Las3nYzgjJWqxycesLK/YgNWbXJOkFsnYGU624ZcVv
dn8RDSFM2I7Hfub5SkNWNUmyMMkmKx4mvZD0l51tW19IGNJgkpPPK171wop/
TjKhnd3s50uv/Ijwycl+bMezqhmyr9Znr46XPFchGfNKh1c9u6pn+/WKSVaM
2tZk29erz9zFhAZjt/3VrhfJEassQLLhqr9Wa9Eel/1vQKz8+qRHk5y1YpK7
fl9b6YzdI6t1XP3dxYQrrVi9T7Lz6hqAZDxkrkg/knMXhA1W62X7Dvn8SVYn
uSbRjSdoLOHP1Vrc5Tt2zZC1INeik0zX+unq3MJKW0jtrfxx5TvtPJP1WrHH
Sf43xmNk2NV2bE5O9mv8fvS05+rb80+0ouUoO1PbzEyYluTE1h+NDJWMn/Bk
m8Va37GfbbUaD9Er415++1rctjaIViRs1vKwfT6T1EyrjQZ/tt6xyl8rZm7/
DF8j2yFes9qvwfaJDts8THy27RGib+2YE78jbGlkkJM8THrh5Gfamkw0oX1/
pcNEN5L3V3ntqo9W9WNnKDJ+wqirXk72S3i47ZEVv62YofV6gy3/BYrri5s=

       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1r2KXQUcRfFBQUTsxdJX0MZCZkiXOj7BCH4UASEWEtL4gFY2qVKlzzMk
AdsB5Z5z57dhFZHrZZJ97/6f2Wt989Pvz3755Obm5o/PP/zn2f2fT168uH/5
42cf/+fn++ffffv80w8v//r3z8fXv7798u7pk6/u/n71xd2rd29uf/v6n9vv
f3h9+1/ef+hnHnr90N896t+55GfO+Jz/N+uS73vU9zqjz6M+5xk/c9TrS56x
s3PP/r076vUlvxdH9XbU9z1jx85+9s7YqGtu72N1dfZ3P+P5ueazd83f97N/
r4/q/IydOYOVZ3zmx/r8Wj9ne9E1d0/+DNrnEfx/5dl7rJ+55uaf7VHrLnTN
Z1XeMeFzLn4G7fNc8jws+r9wX2F7hffXszRerHBNuIXsh1on+f+x9xWeVeH9
9SyNFytcE24h+6HWyVFcWH/2Fp8B+f31LI0XK1wTbiH7odZJ/p//CzujZWm8
WOGacAvZD7VO8v/8X9gZLUvjxQrXhFvIfqh1kv/n/8LOaFkaL1a4JtxC9kOt
k/w//xd2RsvSeLHCNeEWsh9qneT/+b+wM1qWxosVrgm3kP1Q6yT/z/+FndGy
NF6scE24heyHWif5f/4v7IyWpfFihWvCLWQ/1DrJ//N/YWe0LI0XK1wTbiH7
odZJ/p//CzujZWm8WOGacAvZD7VO8v/8X9gZLUvjxQrXhFvIfqh1kv/n/8LO
aFkaL1a4JtxC9kOtk/w//xd2RsvSeLHCNeEWsh9qneT/+b+wM1qWxosVrgm3
kP1Q6yT/z/+FndGyNF6scE24heyHWif5f/4v7IyWpfFihWvCLWQ/1DrJ//N/
YWe0LI0XK1wTbiH7odZJ/p//CzujZWm8WOGacAvZD7VO8v/8X9gZLUvjxQrX
hFvIfqh1kv/n/8LOaFkaL1a4JtxC9kOtk/w//xd2RsvSeLHCNeEWsh9qneT/
+b+wM1qWxosVrgm3kP1Q6yT/z/+FndGyNF6scE24heyHWif5f/4v7IyWpfFi
hWvCLWQ/1DrJ//N/YWe0LI0XK1wTbiH7odZJ/p//CzujZWm8WOGacAvZD7VO
8v/8X9gZLUvjxQrXhFvIfqh1kv/n/8LOaFkaL1a4JtxC9kOtk/w//xd2RsvS
eLHCNeEWsh9qneT/+b+wM1qWxosVrgm3kP1Q6yT/z/+FndGyNF6scE24heyH
Wif5f/4v7IyWpfFihWvCLWQ/1DrJ//N/YWe0LI0XK1wTbiH7odZJ/p//Czuj
ZWm8WOGacAvZD7VO8v/8X9gZLUvjxQrXhFvIfqh1kv/n/8LOaFkaL1a4JtxC
9kOtk/w//xd2RsvSeLHCNeEWsh9qneT/+b+wM1qWxosVrgm3kP1Q6yT/z/+F
ndGyNF6scE24heyHWif5f/4v7IyWpfFihWvCLWQ/1DrJ//N/YWe0LI0XK1wT
biH7odZJ/p//CzujZWm8WOGacAvZD7VO8v/8X9gZLUvjxQrXhFvIfqh1kv/n
/8LOaFkaL1a4JtxC9kOtk/w//xd2RsvSeLHCNeEWsh9qneT/+b+wM1qWxosV
rgm3kP1Q6yT/z/+FndGyNF6scE24heyHWif5f/4v7IyWpfFihWvCLWQ/1DrJ
//N/YWe0LI0XK1wTbiH7odZJ/p//CzujZWm8WOGacAvZD7VO8v/8X9gZLUvj
xQrXhFvIfqh1kv/n/8LOaFkaL1a4JtxC9kOtk/w//xd2RsvSeLHCNeEWsh9q
neT/+b+wM1qWxosVrgm3kP1Q6yT/z/+FndGyNF6scE24heyHWif5f/4v7IyW
pfFihWvCLWQ/1DrJ//N/YWe0LI0XK1wTbiH7odZJ/p//CzujZWm8WOGacAvZ
D7VO8v/8X9gZLUvjxQrXhFvIfqh1kv/n/8LOaFkaL1a4JtxC9kOtk/w//xd2
RsvSeLHCNeEWsh9qneT/+b+wM1qWxosVrgm3kP1Q6yT/z/+FndGyNF6scE24
heyHWif5f/4v7IyWpfFihWvCLWQ/1DrJ//N/YWe0LI0XK1wTbiH7odZJ/p//
CzujZWm8WOGacAvZD7VO8v/8X9gZLUvjxQrXhFvIfqh1kv/n/8LOaFkaL1a4
JtxC9kOtk/w//xd2RsvSeLHCNeEWsh9qneT/+b+wM1qWxosVrgm3kP1Q6yT/
z/+FndGyNF6scE24heyHWif5f/4v7IyWpfFihWvCLWQ/1DrJ//N/YWe0LI0X
K1wTbiH7odZJ/p//CzujZWm8WOGacAvZD7VO8v/8X9gZLUvjxQrXhFvIfqh1
kv/n/8LOaFkaL1a4JtxC9kOtk/w//xd2RsvSeLHCNeEWsh9qneT/+b+wM1qW
xosVrgm3kP1Q6yT/z/+FndGyNF6scE24heyHWif5f/4v7IyWpfFihWvCLWQ/
1DrJ//N/YWe0LI0XK1wTbiH7odZJ/p//CzujZWm8WOGacAvZD7VO8v/8X9gZ
LUvjxQrXhFvIfqh1kv/n/8LOaFkaL1a4JtxC9kOtk/w//xd2RsvSeLHCNeEW
sh9qneT/+b+wM1qWxosVrgm3kP1Q6yT/z/+FndGyNF6scE24heyHWif5f/4v
7IyWpfFihWvCLWQ/1DrJ//N/YWe0LI0XK1wTbiH7odZJ/p//CzujZWm8WOGa
cAvZD7VO8v/8X9gZLUvjxQrXhFvIfqh1kv/n/8LOaFkaL1a4JtxC9kOtk/w/
/xd2RsvSeLHCNeEWsh9qneT/+b+wM1qWxosVrgm3kP1Q6yT/z/+FndGyNF6s
cE24heyHWif5f/4v7IyWpfFihWvCLWQ/1DrJ//N/YWe0LI0XK1wTbiH7odZJ
/p//CzujZWm8WOGacAvZD7VO8v/8X9gZLUvjxQrXhFvIfqh1kv/n/8LOaFka
L1a4JtxC9kOtk/w//xd2RsvSeLHCNeEWsh9qneT/+b+wM1qWxosVrgm3kP1Q
6yT/z/+FndGyNF6scE24heyHWif5f/4v7IyWpfFihWvCLWQ/1DrJ//N/YWe0
LI0XK1wTbiH7odZJ/p//CzujZWm8WOGacAvZD7VO8v/8X9gZLUvjxQrXhFvI
fqh1kv/n/8LOaFkaL1a4JtxC9kOtk/w//xd2RsvSeLHCNeEWsh9qneT/+b+w
M1qWxosVrgm3kP1Q6yT/z/+FndGyNF6scE24heyHWif5f/4v7IyWpfFihWvC
LWQ/1DrJ//N/YWe0LI0XK1wTbiH7odZJ/p//CzujZWm8WOGacAvZD7VO8v/8
X9gZLUvjxQrXhFvIfqh1kv/n/8LOaFkaL1a4JtxC9kOtk/w//xd2RsvSeLHC
NeEWsh9qneT/+b+wM1qWxosVrgm3kP1Q6yT/z/+FndGyNF6scE24heyHWif5
f/4v7IyWpfFihWvCLWQ/1DrJ//N/YWe0LI0XK1wTbiH7odZJ/p//CzujZWm8
WOGacAvZD7VO8v/8X9gZLUvjxQrXHnr/PTa2OW8=
       "], {{0, 128}, {128, 0}}, {0.,
        1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
tD4r724u8HdvLnA4qW+vluexfv4LD3iqqQ==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1LEKglAUBmApiNaWtoaCoLl2paUHqCcwqCmIagi33qU92nuAXquChhYh
Mc3oG5RP8co5nt/bna+ny1oQBLvm/TSN9+PtNk5mjcfFIl6Nhqv6nYfn8fCp
fQyvg03U6Sfh5NKJktYlPPei6NVpz7zeT/M773xn7afqTFubx1nrz+oi+i1z
dlnrL9rfyliefovITNaslvkd8uwPRfT461nlz+5XXJ25mBdXwbLKXP6/VoV6
mGWVmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZn/wTdOA1SV
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "1"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1jFKA0EUgOFgQLT2BF5BK5sEe6t4gggKgYAQC00hWHgIsbfzBB7Bi3gN
E7CwCeyyM5s3s1+hfErYvJnM/pvTm/vZ3cFoNHo42vyazR8vV6v5+vpw+8ft
fHl+thxv+PL3s/V48T45/rmYnlx9Tf778209/X5dTD6en6a7/r/LbV/f5Dqp
Zkv1vk1m2HWdLmvJfZ0u18+x3i6fV9t5Up3tVPvfZc9zvybVnuSYOZVz96HP
85zjM83tfc2Wqg99PltznLHIzU/1LItwtmttfqrvSxGav6/+9PkdJto9Usps
qe6pCM+pUprfZZ4IHlrzU53DfTU/QkNydCPyPpToUp6tpTe/pvM8tOanOm81
Nb+m88wxm5/jHoyw3lL2OdW9X3rz2659CM2PsP/MpTS/Vg+t+bn7H+EzZS7F
mh/HQ2h+jv5HWAtziS6lFUPwEJqfqv8R5meuye6vOK61+V36H2FmZuY+21hT
89v2P8KczMwROll685v0P8JszMzRXFMna1oLMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzd/cvTm6wew==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{3.774171826015395*^9},
 CellLabel->
  "Out[122]=",ExpressionUUID->"321451f4-4019-4c26-8d16-98f5a30fa300"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dir", "=", 
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7733290093954697`*^9, 3.773329016503849*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"2dcbc689-857b-4b5d-a015-d6a01eee2769"],

Cell[BoxData["\<\"/Users/thorsilver/Downloads/Wolfram notebooks\"\>"], \
"Output",
 CellChangeTimes->{
  3.773329017635899*^9, {3.7734927077811537`*^9, 3.773492718275812*^9}, 
   3.774171834122046*^9, 3.7742267514462214`*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"442fee27-414c-48e3-a355-c36aca7d4412"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"netECA12", "=", 
  RowBox[{"Import", "[", "\"\<netECA12-r12.wlnet\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.773492741198941*^9, 3.773492779444697*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"d687882f-aef0-4434-b1db-2f8aa9a245f7"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {15., {0., 15.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["12", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{24, 3, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 24, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 3, "$InputSize" -> {120, 200}, 
                    "$OutputSize" -> {118, 198}, "$WeightsInputChannels" -> 
                    3], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 120, 200}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 118, 198}, 
                    NeuralNetworks`RealT]]], "bat1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{24}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 24, 
                    "$SpatialDimensions" -> {118, 198}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 118, 198}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 118, 198}, 
                    NeuralNetworks`RealT]]], "ramp1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {24, 118, 198}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 118, 198}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 118, 198}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{24, 24, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 24, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 24, "$InputSize" -> {118, 198}, 
                    "$OutputSize" -> {116, 196}, "$WeightsInputChannels" -> 
                    24], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 118, 198}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 116, 196}, 
                    NeuralNetworks`RealT]]], "bat2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{24}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 24, 
                    "$SpatialDimensions" -> {116, 196}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 116, 196}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 116, 196}, 
                    NeuralNetworks`RealT]]], "ramp2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {24, 116, 196}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 116, 196}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 116, 196}, 
                    NeuralNetworks`RealT]]], "pooling" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {116, 192}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 24, "$InputSize" -> {116, 196}, 
                    "$OutputSize" -> {1, 5}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 116, 196}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 1, 5}, 
                    NeuralNetworks`RealT]]], "flatten" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 1, 5}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]]], 
                    "linear" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 120}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {512}, "$OutputSize" -> 512, 
                    "$InputSize" -> 120, "$InputDimensions" -> {120}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "drop2" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.2, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "linear2" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{4, 512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{4}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {4}, "$OutputSize" -> 4, 
                    "$InputSize" -> 512, "$InputDimensions" -> {512}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]], 
                    "softmax" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pooling", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pooling", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "drop2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "drop2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3, 120, 200}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {200, 120}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, "Interleaving" -> False, 
                    "MeanImage" -> None, "VarianceImage" -> None, "$Version" -> 
                    "12.0.10"]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {1, 2, 3, 4}, "InputDepth" -> 1, "Dimensions" -> 
                    4, "$Rank" -> 0, "$Version" -> "12.0.10"]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"120\"", "\"200\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"118\"", "\"198\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bat1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"118\"", "\"198\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ramp1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"118\"", "\"198\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"116\"", "\"196\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bat2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"116\"", "\"196\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ramp2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"116\"", "\"196\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pooling\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"1\"", "\"5\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"flatten\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"120\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"drop2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"softmax\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   ImageSizeCache -> {297., {107.4169921875, 112.5830078125}},
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.773492759281205*^9, 3.773492780397972*^9}},
 CellLabel->"Out[51]=",ExpressionUUID->"36a6bf8f-33be-402b-a716-5c68d0fa4848"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"netECA13", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"netECA13", ",", "fullTrainingBigC13", ",", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", "20"}], ",", 
    RowBox[{"BatchSize", "\[Rule]", 
     RowBox[{"256", "*", "4"}]}], ",", 
    RowBox[{"TargetDevice", "\[Rule]", "\"\<CPU\>\""}], ",", 
    RowBox[{"TrainingProgressCheckpointing", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Directory\>\"", ",", "dir"}], "}"}]}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.772359301378972*^9, 3.7723593151826487`*^9}, {
  3.772692972974709*^9, 3.772692978955448*^9}, {3.772693103833131*^9, 
  3.7726931061383677`*^9}, {3.7726954327396307`*^9, 3.772695433052311*^9}, {
  3.773129922404114*^9, 3.773129928369681*^9}, {3.773159589015329*^9, 
  3.773159589253455*^9}, {3.773159731047542*^9, 3.773159755478558*^9}, {
  3.773160016071207*^9, 3.773160037844142*^9}, {3.773163441661957*^9, 
  3.773163451374845*^9}, {3.773164439689281*^9, 3.773164440226226*^9}, {
  3.773190755014002*^9, 3.773190759153596*^9}, {3.773214805205216*^9, 
  3.773214807559754*^9}, {3.773215293310206*^9, 3.773215308393745*^9}, {
  3.773254986921338*^9, 3.773254987629869*^9}, {3.7733289965083933`*^9, 
  3.773329001497841*^9}, {3.774171842022563*^9, 3.774171860396275*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"2e3f5dba-ceeb-4dc4-9d9f-6c55c2be1c7d"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["12", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{24, 3, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 24, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 3, "$InputSize" -> {128, 128}, 
                    "$OutputSize" -> {126, 126}, "$WeightsInputChannels" -> 
                    3], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "bat1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{24}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 24, 
                    "$SpatialDimensions" -> {126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "ramp1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {24, 126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{24, 24, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 24, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 24, "$InputSize" -> {126, 126}, 
                    "$OutputSize" -> {124, 124}, "$WeightsInputChannels" -> 
                    24], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]]], "bat2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{24}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 24, 
                    "$SpatialDimensions" -> {124, 124}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]]], "ramp2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {24, 124, 124}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]]], "pooling" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {124, 120}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 24, "$InputSize" -> {124, 124}, 
                    "$OutputSize" -> {1, 5}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 1, 5}, 
                    NeuralNetworks`RealT]]], "flatten" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 1, 5}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]]], 
                    "linear" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 120}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {512}, "$OutputSize" -> 512, 
                    "$InputSize" -> 120, "$InputDimensions" -> {120}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "drop2" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.2, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "linear2" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{4, 512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{4}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {4}, "$OutputSize" -> 4, 
                    "$InputSize" -> 512, "$InputDimensions" -> {512}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]], 
                    "softmax" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pooling", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pooling", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "drop2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "drop2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3, 128, 128}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {128, 128}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, "Interleaving" -> False, 
                    "MeanImage" -> None, "VarianceImage" -> None, "$Version" -> 
                    "12.0.10"]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {1, 2, 3, 4}, "InputDepth" -> 1, "Dimensions" -> 
                    4, "$Rank" -> 0, "$Version" -> "12.0.10"]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"128\"", "\"128\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bat1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ramp1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"124\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bat2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"124\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ramp2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"124\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pooling\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"1\"", "\"5\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"flatten\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"120\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"drop2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"softmax\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   ImageSizeCache -> {298., {107.4169921875, 112.5830078125}},
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.774187606064065*^9},
 CellLabel->
  "Out[124]=",ExpressionUUID->"de3b8ff4-5e83-4022-b1a5-9cd245544002"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"netECA13", "=", 
  RowBox[{"Import", "[", "\"\<netECA13-r20.wlnet\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.7741936807666407`*^9, 3.774193692512092*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"dded76c3-f80d-44bc-a8cb-d1383d125d50"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["12", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{24, 3, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 24, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 3, "$InputSize" -> {128, 128}, 
                    "$OutputSize" -> {126, 126}, "$WeightsInputChannels" -> 
                    3], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "bat1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{24}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 24, 
                    "$SpatialDimensions" -> {126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "ramp1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {24, 126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{24, 24, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 24, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 24, "$InputSize" -> {126, 126}, 
                    "$OutputSize" -> {124, 124}, "$WeightsInputChannels" -> 
                    24], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]]], "bat2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{24}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 24, 
                    "$SpatialDimensions" -> {124, 124}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]]], "ramp2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {24, 124, 124}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]]], "pooling" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {124, 120}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 24, "$InputSize" -> {124, 124}, 
                    "$OutputSize" -> {1, 5}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 1, 5}, 
                    NeuralNetworks`RealT]]], "flatten" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 1, 5}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]]], 
                    "linear" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 120}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {512}, "$OutputSize" -> 512, 
                    "$InputSize" -> 120, "$InputDimensions" -> {120}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "drop2" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.2, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "linear2" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{4, 512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{4}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {4}, "$OutputSize" -> 4, 
                    "$InputSize" -> 512, "$InputDimensions" -> {512}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]], 
                    "softmax" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pooling", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pooling", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "drop2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "drop2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3, 128, 128}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {128, 128}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, "Interleaving" -> False, 
                    "MeanImage" -> None, "VarianceImage" -> None, "$Version" -> 
                    "12.0.10"]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {1, 2, 3, 4}, "InputDepth" -> 1, "Dimensions" -> 
                    4, "$Rank" -> 0, "$Version" -> "12.0.10"]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox["\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"128\"", "\"128\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bat1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ramp1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"124\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bat2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"124\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ramp2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"124\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pooling\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"1\"", "\"5\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"flatten\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"120\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"drop2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"softmax\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7741937305460443`*^9},
 CellLabel->
  "Out[154]=",ExpressionUUID->"69f6cb21-10cb-498a-a5f3-e2a1ac4abf81"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"netECA13", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"netECA13", ",", "fullTrainingBigC13", ",", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", "20"}], ",", 
    RowBox[{"BatchSize", "\[Rule]", 
     RowBox[{"256", "*", "4"}]}], ",", 
    RowBox[{"TargetDevice", "\[Rule]", "\"\<CPU\>\""}], ",", 
    RowBox[{"TrainingProgressCheckpointing", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Directory\>\"", ",", "dir"}], "}"}]}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.772359301378972*^9, 3.7723593151826487`*^9}, {
  3.772692972974709*^9, 3.772692978955448*^9}, {3.772693103833131*^9, 
  3.7726931061383677`*^9}, {3.7726954327396307`*^9, 3.772695433052311*^9}, {
  3.773129922404114*^9, 3.773129928369681*^9}, {3.773159589015329*^9, 
  3.773159589253455*^9}, {3.773159731047542*^9, 3.773159755478558*^9}, {
  3.773160016071207*^9, 3.773160037844142*^9}, {3.773163441661957*^9, 
  3.773163451374845*^9}, {3.773164439689281*^9, 3.773164440226226*^9}, {
  3.773190755014002*^9, 3.773190759153596*^9}, {3.773214805205216*^9, 
  3.773214807559754*^9}, {3.773215293310206*^9, 3.773215308393745*^9}, {
  3.773254986921338*^9, 3.773254987629869*^9}, {3.7733289965083933`*^9, 
  3.773329001497841*^9}, {3.774171842022563*^9, 3.774171860396275*^9}},
 CellLabel->
  "In[155]:=",ExpressionUUID->"b7716be9-fe49-4871-b761-c7f2bc7ee8db"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["12", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{24, 3, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 24, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 3, "$InputSize" -> {128, 128}, 
                    "$OutputSize" -> {126, 126}, "$WeightsInputChannels" -> 
                    3], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "bat1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{24}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 24, 
                    "$SpatialDimensions" -> {126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "ramp1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {24, 126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{24, 24, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 24, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 24, "$InputSize" -> {126, 126}, 
                    "$OutputSize" -> {124, 124}, "$WeightsInputChannels" -> 
                    24], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]]], "bat2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{24}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 24, 
                    "$SpatialDimensions" -> {124, 124}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]]], "ramp2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {24, 124, 124}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]]], "pooling" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {124, 120}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 24, "$InputSize" -> {124, 124}, 
                    "$OutputSize" -> {1, 5}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 1, 5}, 
                    NeuralNetworks`RealT]]], "flatten" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 1, 5}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]]], 
                    "linear" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 120}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {512}, "$OutputSize" -> 512, 
                    "$InputSize" -> 120, "$InputDimensions" -> {120}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "drop2" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.2, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "linear2" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{4, 512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{4}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {4}, "$OutputSize" -> 4, 
                    "$InputSize" -> 512, "$InputDimensions" -> {512}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]], 
                    "softmax" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pooling", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pooling", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "drop2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "drop2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3, 128, 128}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {128, 128}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, "Interleaving" -> False, 
                    "MeanImage" -> None, "VarianceImage" -> None, "$Version" -> 
                    "12.0.10"]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {1, 2, 3, 4}, "InputDepth" -> 1, "Dimensions" -> 
                    4, "$Rank" -> 0, "$Version" -> "12.0.10"]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox["\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"128\"", "\"128\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bat1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ramp1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"124\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bat2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"124\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ramp2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"124\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pooling\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"1\"", "\"5\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"flatten\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"120\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"drop2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"softmax\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7742026208868523`*^9},
 CellLabel->
  "Out[155]=",ExpressionUUID->"9475968a-e7eb-44ee-8995-4aca4bcd750a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generate test data for Network XIII", "Subsection",
 CellChangeTimes->{{3.773348207450644*^9, 3.773348219490479*^9}, 
   3.7741885294352407`*^9},ExpressionUUID->"4dc852b2-b98e-4f83-9cac-\
5ac4e359b1c9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"testDataECABigC", "=", 
   RowBox[{"dataC", "[", 
    RowBox[{"128", ",", "128", ",", "1024"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData2TBigC", "=", 
   RowBox[{"genData2r2C", "[", 
    RowBox[{"128", ",", "128", ",", "1024"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData3TBigC", "=", 
   RowBox[{"data3T2C", "[", 
    RowBox[{"128", ",", "128", ",", "1024"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData4TBigC", "=", 
   RowBox[{"data4TC", "[", 
    RowBox[{"128", ",", "128", ",", "1024"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData5TBigC", "=", 
   RowBox[{"genData5TCC", "[", 
    RowBox[{"128", ",", "128", ",", "1024"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fullTestSetBigC", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
    "testDataECABigC", ",", "testData2TBigC", ",", "testData3TBigC", ",", 
     "testData4TBigC", ",", "testData5TBigC"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "fullTestSetBigC", "]"}]}], "Input",
 CellChangeTimes->{{3.7727181209651337`*^9, 3.7727181544477663`*^9}, {
  3.772718196797276*^9, 3.77271823838671*^9}, {3.7727184594178867`*^9, 
  3.772718461126959*^9}, {3.774192047474938*^9, 3.774192068250688*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"a8800e47-47ab-4ece-a48e-bfa5a5d0c2b4"],

Cell[BoxData["10240"], "Output",
 CellChangeTimes->{3.7741887720758123`*^9, 3.774192304243709*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"8374a6a0-0fcc-49ca-ba26-fae0454e1483"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomSample", "[", 
  RowBox[{"fullTestSetBigC", ",", "10"}], "]"}]], "Input",
 CellLabel->
  "In[147]:=",ExpressionUUID->"9c5ffe72-8a99-4df0-bea9-efe2da58b16c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1zGOpOUZReERliwWgOTYWzAkJIO8AQc4czaWIEBIyEOAnLEDZ468F6fe
DTtABskBCdKMpmv6Oa9v0K3qq+6vzq06/62/f//Xbz7/8oMXL158++FP3z5/
9d0fX79+9fc///bnH7549fXHf/j6Nz89/P5/Xz8//tc/fnz5yd9ef/anTz/6
7Kt//vDy04/+8/J3//7LGz1+k7992/Of6sxf/s6vPX6T338X5nfhfJdeb9v3
Eec/1XO97ev/6Od69Gv1VJ4815lPdY08lW+Pvpafak8ecf0+Vd+n2rdHbOYj
dlXr8i6b84hNfp+OaZ+zj34vHtHx0Wc+Yq8e4dujd/4R17XML2+m7Mxz3Re9
z/uu57pXeS4fnmuv3uc9j+aGcF8qfF5s/03f3uf+P9f5gpPCe/dce1X/jNv+
t3LtuhOeVzuzwiy4KvxPUXFecEPz4f8t15wUnlc4U3jftbxyZtF5+TUR3rur
ecVJwbdLHgoMArPGX++4/W/lspOab5c8FBgEZo2/3nH738plJzXfLnkoMAjM
Gn+94/a/lctOar5d8lBgEJg1/nrH7X8rl53UfLvkocAgMGv89Y7b/1YuO6n5
dslDgUFg1vjrHbf/rVx2UvPtkocCg8Cs8dc7bv9bueyk5tslDwUGgVnjr3fc
/rdy2UnNt0seCgwCs8Zf77j9b+Wyk5pvlzwUGARmjb/ecfvfymUnNd8ueSgw
CMwaf73j9r+Vy05qvl3yUGAQmDX+esftfyuXndR8u+ShwCAwa/z1jtv/Vi47
qfl2yUOBQWDW+Osdt/+tXHZS8+2ShwKDwKzx1ztu/1u57KTm2yUPBQaBWeOv
d9z+t3LZSc23Sx4KDAKzxl/vuP1v5bKTmm+XPBQYBGaNv95x+9/KZSc13y55
KDAIzBp/veP2v5XLTmq+XfJQYBCYNf56x+1/K5ed1Hy75KHAIDBr/PWO2/9W
Ljup+XbJQ4FBYNb46x23/61cdlLz7ZKHAoPArPHXO27/W7nspObbJQ8FBoFZ
46933P63ctlJzbdLHgoMArPGX++4/W/lspOab5c8FBgEZo2/3nH738plJzXf
LnkoMAjMGn+94/a/lctOar5d8lBgEJg1/nrH7X8rl53UfLvkocAgMGv89Y7b
/1YuO6n5dslDgUFg1vjrHbf/rVx2UvPtkocCg8Cs8dc7bv9bueyk5tslDwUG
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
/W/lspOab5c8FBgEZo2/3nH7/7z5fwGkjQ2T
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1kGKVGcAReEmARF3kS2YoWCTFQg6dtCBOBIEAxFnbiDDZAtx5jRryCIy
zDpUyCCTgE3Vq/6unEE3ry9Fv3PP++tWfffjq6cvvrm6uvr5/qdfT2/e/PD6
9c3bZ/c+//HTzcvvH7789tPlu39/Pl//9cej6yfvn1//+uH+9X+vH/z29+Pf
//nl8Zs/n39RftvXnOte//f6UziF+96W7bb/87acp7z+lOtz+bnkOTzX/z/i
vudye8mzeldn7JR9O4L/rrb0iLN0rnsdfT61+2rvtbvayXM9uyPOwxH7f677
amfvkp/vlzxjK98t5d245PcN+b6L9zp6J8/17I44D0fv/xEbsrj/2hlb/G6p
7Ub517f/R+yk3PeI/T9iQ4Szd8nPd3n/BefC+6j869j/o3dS6yv4FDZNOJOX
PGOCq8VnVO64lfdqZf9X8hU/K2dMcLX4jModt0Lf9t/xtsIpMAicsp9y363Q
t/13vK1wCgwCp+yn3Hcr9G3/HW8rnAKDwCn7KffdCn3bf8fbCqfAIHDKfsp9
t0Lf9t/xtsIpMAicsp9y363Qt/13vK1wCgwCp+yn3Hcr9G3/HW8rnAKDwCn7
KffdCn3bf8fbCqfAIHDKfsp9t0Lf9t/xtsIpMAicsp9y363Qt/13vK1wCgwC
p+yn3Hcr9G3/HW8rnAKDwCn7KffdCn3bf8fbCqfAIHDKfsp9t0Lf9t/xtsIp
MAicsp9y363Qt/13vK1wCgwCp+yn3Hcr9G3/HW8rnAKDwCn7KffdCn3bf8fb
CqfAIHDKfsp9t0Lf9t/xtsIpMAicsp9y363Qt/13vK1wCgwCp+yn3Hcr9G3/
HW8rnAKDwCn7KffdCn3bf8fbCqfAIHDKfsp9t0Lf9t/xtsIpMAicsp9y363Q
t/13vK1wCgwCp+yn3Hcr9G3/HW8rnAKDwCn7KffdCn3bf8fbCqfAIHDKfsp9
t0Lf9t/xtsIpMAicsp9y363Qt/13vK1wCgwCp+yn3Hcr9G3/HW8rnAKDwCn7
KffdCn3bf8fbCqfAIHDKfsp9t0Lf9t/xtsIpMAicsp9y363Qt/13vK1wCgwC
p+yn3Hcr9G3/HW8rnAKDwCn7KffdCn3bf8fbCqfAIHDKfsp9t0Lf9t/xtsIp
MAicsp9y363Qt/13vK1wCgwCp+yn3Hcr9G3/HW8rnAKDwCn7KffdCn3bf8fb
CqfAIHDKfsp9t0Lf9t/xtsIpMAicsp9y363Qt/13vK1wCgwCp+yn3Hcr9G3/
HW8rnAKDwCn7KffdCn3bf8fbCqfAIHDKfsp9t0Lf9t/xtsIpMAicsp9y363Q
t/13vK1wCgwCp+yn3Hcr9G3/HW8rnAKDwCn7KffdCn3bf8fbCqfAIHDKfsp9
t0Lf9t/xtsIpMAicsp9y363Qt/13vK1wCgwCp+yn3Hcr9G3/HW8rnAKDwCn7
KffdCn3bf8fbCqfAIHDKfsp9t0Lf9t/xtsIpMAicsp9y363Qt/13vK1wCgwC
p+yn3Hcr9G3/HW8rnAKDwCn7KffdCn3bf8fbCqfAIHDKfsp9t0Lf9t/xtsIp
MAicsp9y363Qt/13vK1wCgwCp+yn3Hcr9G3/HW8rnAKDwCn7KffdCn3bf8fb
CqfAIHDKfsp9t0Lf9t/xtsIpMAicsp9y363Qt/13vK1wCgwCp+yn3Hcr9G3/
HW8rnAKDwCn7KffdCn3bf8fbCqfAIHDKfsp9t0Lf9t/xtsIpMAicsp9y363Q
t/13vK1wCgwCp+yn3Hcr9G3/HW8rnAKDwCn7KffdCn3bf8fbCqfAIHDKfsp9
t0Lf9t/xtsIpMAicsp9y363Qt/13vK1wCgwCp+yn3Hcr9G3/HW8rnAKDwCn7
KffdCn3bf8fbCqfAIHDKfsp9t0Lf9t/xtsIpMAicsp9y363Qt/13vK1wCgwC
p+yn3Hcr9G3/HW8rnAKDwCn7KffdCn3bf8fbCqfAIHDKfsp9t0Lf9t/xtsIp
MAicsp9y363Qt/13vK1wCgwCp+yn3Hcr9G3/HW8rnAKDwCn7KffdCn3bf8fb
CqfAIHDKfsp9t0Lf9t/xtsIpMAicsp9y363Qt/13vK1wCgwCp+yn3Hcr9G3/
HW8rnAKDwCn7KffdCn3bf8fbCqfAIHDKfsp9t0Lf9t/xtsIpMAicsp9y363Q
t/13vK1wCgwCp+yn3Hcr9G3/HW8rnAKDwCn7KffdCn3bf8fbCqfAIHDKfsp9
t0Lf9t/xtsIpMAicsp9y363Qt/13vK1wCgwCp+yn3Hcr9G3/HW8rnAKDwCn7
KffdCn3bf8fbCqfAIHDKfsp9t0Lf9t/xtsIpMAicsp9y363Qt/13vK1wCgwC
p+yn3Hcr9G3/HW8rnAKDwCn7KffdCn3bf8fbCqfAIHDKfsp9t0Lf9t/xtsIp
MAicsp9y363Qt/13vK1wCgwCp+yn3Hcr9G3/HW8rnAKDwCn7KffdCn3bf8fb
CqfAIHDKfsp9t0Lf9t/xtsIpMAicsp9y363Qt/13vK1wCgwCp+yn3Hcr9G3/
HW8rnAKDwCn7KffdCn3bf8fbCqfAIHDKfsp9t0Lf9t/xtsIpMAicsp9y363Q
t/13vK1wCgwCp+yn3Hcr9G3/HW8rnAKDwCn7KffdCn3bf8fbCqfAIHDKfsp9
t0Lf9t/xtsIpMAicsp9y363Qt/13vK1wCgwCp+yn3Hcr9G3/HW8rnAKDwCn7
KffdCn3bf8fbCqfAIHDKfsp9t0Lf9t/xtsIpMAicsp9y363Qt/13vK1wCgwC
p+yn3Hcr9G3/HW8rnAKDwCn7KffdCn3bf8fbCqfAIHDKfsp9t0Lf9t/xtsIp
MAicsp9y363Qt/13vK1wCgwCp+yn3Hcr9G3/HW8rnAKDwCn7KffdCn3bf8fb
CqfAIHDKfsp9t0Lf9t/xtsIpMAicsp9y363Qt/13vK1wCgwCp+yn3Hcr9G3/
HW8rnAKDwCn7KffdCn3bf8fbCqfAIHDKfsp9t0Lf9t/xtsIpMAicsp9y363Q
t/13vK1wCgwC5yn5R88YwEM=
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztmjGurctVhJ8MQqRMAImYzKTGDyZAYEZgJIgskEyALBE4RyIhZQQm8ACY
AzkZYyACiQBbIrgEG+p7X1X/vc+5wX3qd/Tvf3evXquqVq39e3/2Vz/6i+99
8803f/3bv/rPj378N3/805/++Gd/+lu//p8///FP/uD7P/mNXy1//j//fr3+
nf/8wbc///d//uHv//Jff2DW//b33//2H37z53/4y+/95bdPvfPV81/+/dV6
8U762UVsW/dC9/wu92LuK3m+VQsn62KdP4vca53F5Mli/0/lWLL+p1/84of/
37/1O18983f/8iff/u0f/e63//Ff//i/1l9+9su/J9+bvPPV+5N1socktq17
Sc7+jvdi7it5vlULJ+ticZZWDtM9m/qidZ3En+7zqRyjNZLwEY1nS+d8+c6W
Jnz1TrqfV2uqAZL8offyaj/Jnt/lXhb7TPZAuWldFzQnaf7QPKS5Z87S6j0T
fd7a2yLHFr3Aur9Ivtf0a/Q9yT4pttCaSvaWnNH0pDQOJ++F5u3Cx7utLgyn
Uz6icU4w0OAq1fZUz7dq/6kco/pk0YOb56lfQXs3E7ckt038aRzoeRcey+Je
Fn039RkWtdZ63nAo9VJMLlEuSJ43fNTqhQ2vnfR8krO0evA1rtJ7bJ3rVV0s
NDCNg9Eni5wx99LCipbmfKofX3Boq+5ov7DwDFu9Nu2FaQ3elmMJbybPr/N5
nSfJuWj+Gw3c4gijnUzOLO5o8dmWz3BybTh0UXevcom+54Z+al2DN+RYohNe
1fjCP7khT+i5Er5u+ZmUI0zemvgs8oHeS2s21+LK9fopfG7h2w2xNfy4vqMb
cmaNycldLOKz6BFaXk3yTqrVk/e39HbrXowfa7SW4cr1mt5pC59bnhvd5zqG
xttZ3NEiDq39LDD5VfwXeZLEgWrglmdFNW3So5n+gurtVg4k3NTKmaT2qVZc
rA1ut/CZ7oHm9jq2Bvda/RTdz1M5Y+JGccOcpRUH0+canZDgZ6sGTY2bfofy
Gu25WvdOufIGv4J6lQZnaC2YWJ2M7XombjTqwuswOfMUd7fyZN3nUk+v5Uu0
5jIU90wO0BguzrXQJzfkeXJfCc5QfZvkg5mXPYUti76e5o/hEZMzt3E3zRPq
Fax94+QsFG9bM4Lk7qhOTmrKxHCdz0+taZ4v4tnqm1q6+mTMW57tU71MK2du
4+4WVpucpL5xy19tzWWMt7/AIppj9Fz0u25Yt/KcxjPJZ4N7VM+c1JY0Z2hf
v863Vs4YHbjgbhPn5CytXm+hhWhdL/azmHcY33WRzzes13l+Qw5T38/kj4k/
vYtX+3zKG6c5k2j4k9xNdabxk1v539JCpn80+pnm/GLeQfWnyecbMH+d50/p
eRp/wxet+Lfu66QOSXphiodmHtribnrvJn9Mr9fSQkmcab6Z8y56DYoD1KOm
eXsD/q/z3Jy9lcPJHozH+JQvZHpeo0NobI02NjqZPk+9dONRG3x79bzRny2d
Y+YRCc4s+ILeb9JfUMw5ifnrPDf9eCuHKe9Q75rW5uK+aM/b0iEGw41moDW7
0JMn9Z7hVrofo3NaXtYrjKXeMtUti3pp7ae1bmHaoh83PSmNf8tjp3fduq91
TIxmoLVjfEXD3VRPtvrclt5r9Uf0jMYfoJ4wfc/Juk6062I/rTU9u9HGBidp
H0E1A62v5LsWPZ3xMZK9tbyXFuYscsb4da/wquXFrfMhOXuCybRGjDagmGni
b+plof8XGEKxy+C88dBe7cHE3MytWnEw97XwUVvei8nnJPdMzpiewrxnofdM
PlBt1vJLW9hI/244yOgQo/+Tft/oWNPfUXxr5QbVCYY3Tc22vLu1j2q0fYLJ
LW/KYJGpZfP3li5a5EPS37XmnkZztjRMy9+gOb/oW1v63+BVq1eluG3iYHpY
+sxivfBRjeZpaQZaR6YGk1o2f2/NtgxnGd1LfT+qnYyOohrDvGfhdZu+de0F
rdcLTb6Iw9rTXpy31VtRTDA8tYg/XSf4ZmbuLb1nfHXTX9Nem/YOSV7RezyZ
P4ve3+TnDThv9Pb6mQRjTR/U4qOTvZXRPEkMqVZc5/NT/EL1nrmLlm/T4g7T
UxheuAHfKP7cdsaPuj6p2dZnoT3RosehGNiK/5rfF/xy8i4oF7e4o+UjUex9
F5/EeIbvcsZ3WS802w3ag84F6HuSd9I+vZXbt/GL8dPoXbyK/6s9t7jDvMfc
Ne3FbsOclk647Yw3r03/S2c9N+RYq5afWi881TW/GA+H3gXNczPHSXRR8p6E
Hw3n3uaTLHTCbWe8eW1+20PvxWi8Na/RWjb7X8wyFvy+3qfRDK/ugs5VKV9Q
7nj199bcgfZ01BddY85CJ9xwxndZm/jT33ucnNckXENr2ez/y+8yn6W5TXm5
xS/JP+P3mhlrghumF6B/N3eXxGStSVr4Y3TCzWe8bW3ynHrXyV0sOHrhOSQ6
M8FV+tmkXha/CaH80op/y1en92v0c9J3UO5+F0/1KZ3wjmd/am36RKrtkzta
eA4Jr5maMtjV6oloztPfSyxmsoYXXp3XeCamH1noInoXiSa5AXMW+ZBoqhvO
e/M6idtiFp/w0ZrXjOdAa7/1G7YWJrc8vadwgMbQeCZrXZTs4TZP9TZeeMfz
PrVe6MYWlpp9rnmtVftPYTLdM8XANQ4YLjb9Xeu7jJd1m6d6Ay981POuY7jW
jYaXzT5P+iEtjbrGZKMbzRyklbeG1wynUC86iUni+dP3n/RUb15/tvOa+Kx1
I/VvzT5v47XW9y76CMPFxmOna4q9LR3emteYWmvlw8Kvu22d5MMN+7whPkme
L+rL8AKtl6d4jd6LydVETxrdSLG99XuMhfeb7M3MW03c6N3RuFFMeJe1+e3K
Dfs/GZ+ktzW6kWpv480mvfNJXltwtMHklkalGJjwb4srDXfQ3420tISZWawx
4d29kSTHPtJ5jfagsTL1Rb0RWiNU2yx0o9EVX3422YPRhzRPDAaucWxdF1ST
JDxC37OYY5oe+bZ1SyPdcJZFTBKsNn83+GzwPOmXb+O15JmEs1o12+qD6F08
1YMvfJXFjIb2JgYn39EnSfqXhf9589r4YNQLfRUr6s9QPE/qjsZhzWvmHuke
khxe/GbpJI6t62JxX7SOWnrVeL83+yRJjtE8P5mTT8VngZ8tnDRYRO90zWst
jEr2YGrW4DzVljf03cmMY/29ydnX83pa7zf4JKYvpv3XDRjeik9LBya5Z/T/
YhZAc97wmtEMRnu0vBrDWcZnW2Mv5aaW9mv5YK15fUtrnfRJWnPzRO8tdN1T
8TEY0tJvZj5oZgG0B0ywYpEbr/ZMz2540zxP7+5k3025aeEFGR9s4X9SXj7J
lTTHaB2ZGc3NXpDRtBQ/Ez1A/9H3m/lskrdrzKQeuMnttZZOYpjk0mLPLV2x
3kMLw9c+7cnfCFEsWsxKbsB2mp+UHw1+nlzT3DO69CnubvVfiz69NUdb+1Et
XWH66GQPJh+oDqT9LI3/Osdavcy7+DlJfOgc3/g2N2Oj6Sno/PcpbXNbn34y
f+jvagw3Jf6M2YPJhwTDW/VOc2/xG6EWDz7lWZ3EQ+ppJLhnZlUnsZHGp6Ur
Tmobir2LPt14ek/9xobmCe1TkvcnvQadERh8Npq/1ZuvefCkx7hem3PR+zKz
qqewkfba79LXUOyluWS0t9HVi/wx3ETvguJSy1M1eUXPSznLcGWLB41XcAPO
JzGhGLj28G/AxlZ8buhrqAYzOtBgr+GFVv609kA988VMKjkj1b3GKzBaMck9
Gp8k501u3+wFLe6rVXctzKTYSD2im/uaV8/c3KebOlpzbmveary4lieW7Ifu
f+Glm+eT/t3g3g0YbvCwpZ9bddeapxhsXGiwp/oagzMn+/R1HE5qMIo5LS42
3j7VulRHmfjQ/Szq8YbcbukW2sssekD6/jU2Gl1h6v0kziT7p/pn0ae34nBS
py28UJo/hveNr7vQSC3PwdRjUiPr3F7oIqoNFj3gWkMm2EjresEvrb5m3Wus
+/QF3j6l08wZqY5tafLW/RqNRPdjZlutXuBkj290kcnPRb4l3ER5dj2baPHL
oq9JtA3d57pPb2HybT0IzX/KCwu/2tyvwXOab4YXWr3Aydxe5An16Iw/YOJj
+uXFbMLwSwsfWveS9LOLPr3VB53Ue0arJ88bzUm1gYkbnS+8wsxWj0P33MKT
dW63tNDJ3sT4fkavmrxq1SPdP83t1j4TnG/dqcEoetcLvdfqBVrvob12wu9m
vk/v18yjW9qM9kFmPye9oKdyPsk9mletWRLFOlPXdP9Ug7XuhdYRvVPzHhqT
pE5P6rQWbrzaPz1jS8/TXj6pkVaPYzRPq5YpHrYwv/V7A5OfVAea/ivBn4WH
YHxO+k6TP3RvSf6fXC/qdNGDtLQufSet5TUnLvzPpC6M5ll4aCc9wFYOL3qT
1rkojpk5V8uTpLhtsMtwXItH1jlj6jTx5Vo6jWpdimNmrrrmROO/mX6k1VsZ
3UUxYVE7dM8ne5P1eU2trT1Jw8ULL4Lq/xvWtE5bvXASQ/r7Cqo9KLbQs7c4
keL2qzgs+kejGw33Gdxo1bXR/ye1n8EBWmsGqxf6P6nfkxx6273TOjWYYDS2
0d70Gbofs/+WhjFYRO8uqTWqu+hnW/Fs9QL0mdvWptZorBJt+RSnLDTDbWvT
a1NMoPtZcITBCqo5jU9CNQz9rMGlVh/X6g3XObmo69vwIak70yMv+GXBKYv+
8ba1iYPRdcl+Wjm20LT0vAs9b/yfRC8l/X5Lm639kIXH+5HWZgZqOKI1f2xx
ylP941Prlq+S5JLZ2yJPDFYk/iHtKxNcPfkbiRbHJRps4Yckd3RDDd62btXd
+ncCVAe2+v138e5oXdDaN99rnjF5YrCiNTtI8tPMc40Ob3FcS5utdey71/IC
E0zdtXCDaoyWD7nwNG5Yt3wVirGJjjWeeZInLf/Z9Inrea7R/zSeSU9ktNlJ
HfsZPF5TmybfjIanWqW1/7WnccOa9neJFjXvoVqXcnSSS607TXLe+D9mnmXy
pMV9hptaOvazebwtjU3zzfjGtN7N/pM9mHy7YW322aqX1rySarnE02jhD81J
Ex/zXUmetDzblg9svpfW/rvUdQsHTH7Sz7Y0qtm/wbFWbq/XZp+tejFa3Wg5
2l9QTWJqivowRntTj+4Gfm9xLr33d/d4KQ4kOdnKbdr/Ui5L/rV4f6G7FmvT
f7Xwx/iuVMstZrWtmjI1a55vzVOe4nfDuYbXbqvlFg60ZlVGm5maorNms6Zz
4VZum7Xp78zzrZkL1fOtu17U1FO9YatHeIrfDT4k+098v5Yf+NSa6l4zY0q0
GcVSwx031M7J2jf9XfJMS6fROKwxnPZ9yVmemi3Sem9h+EKDGT1Je8NWP3vD
uuVxGU/V/K7jqblMq3aeqv21vqX5b/puyhcmN1q9xlM5bHIv+bvB2xYXJ3py
UQs347yp3xZftzDf7K2Vb4vaSXLb7H8x11j0vEnf3fJpk9xo6cOWHl70rYmG
p7hK8XahYW7WkDesqZfV6scp5if+Q5Jva66ktUN9rTVntXxpmidJHGi/meSw
0bSUawwvt3I44Wuq2YzvetJPu0FD3rBuzUPpHS28etpvtnxpUzvUE/jyGbP/
RS208vCkV0y5O9m/0VHrHDZ41eJf+s5W7ST7eUpD3rY2OW9w3vRZZma60LFr
LUHPm2ARrYVWX3zSK25piTUfLXLY6JzWeRcxTO7R9HoLDfnua6oHTN0ZTfhU
fBZaojUTf6oek/isvWIT55YXmsT8Bu1H/XyqFU0MTQ+bnPcG/r1tTfWAiaHx
l56a16x7+RYGUl+iVY9Jj9/q5U9qm/VdPKXrWmdc+Mm0hzUe1A3Y+y56YBG3
xF9KtPFJjm7xoMntRJ+crEfDZdQrXmsbel/0LpLn1/Vlzki1ROInU71hajbJ
jc+wbuGD4Z3FjG9dR4uY07iZ51v1SH83SDWbuV+qbRa+5VM4s/492ILfjf6h
GobmwEdaGz3Q8tNaXL/2ClrnTWL4FNfTekzqms4ykpjT+21pCdP/LuplXV+G
Iyi/m3o0z9ygJ0+ujR5o1XXCy60aX8zsDI495UMm3ho9y0Lj0fe82g/1JegZ
k/238qd170l90bgtfMU1Bi58sHdcm9+HmLpu+aIJprXyJNknxYHkPYa/KNeb
nDcar/W7r5NaLtFCi/wx/GXqvYWfLd2+roW1nnxqneiBhVZszRFojdOaSnpz
6h9Sz2fBZQYzjWduNF4SNxrPFsZSb9zkz8naN3MQoxVv073m+dvWrXtcaEWq
o5IaNzVl8tl4Zes4mxo3OUNzMvF5TDwXc9uWLlr0LGaWTftx00fcoHvN8++4
pvnf0oq0rmkPYnqENVfSGjdxTvQqjQnt32lPZzCKxpPWCNUY5uwnf8/Q4h3T
5649n4X+f3cvyNwprV9a1y2NbbTQSa5MPAEaZ4OBpn+n501ww8TTaLkW1yd7
M7xv1qbfpL9tODmjob0Afeajrqk2eFW/rbpea+yWDmn1EfSOWv1sgkXJO1ue
TKvXo/ye3ONiD5T3WxjY4p3Wedf9zg3veZd1kgMtPW/2ZjR2C4dNH9HqLxaf
benk1j0avl77Y4a7DW7T72399iCJg6nBz4a3N6xpjrX0XvK9C41t/FvKla+e
p/dC90w/u5jLJ/0CxYSFNjacZfiX+uQLT5Lm3qL/OukFfV3vcmyh9xYam/q3
hiup90Ln5olPQmfuZi6/wIREkxvNk/xr8S/1tU7qc3q/FGcWWvTr2msek2O0
digvrDU29Zxbc2eKe4YHW1zQ8vHoPVKdTL+3pU9oXpk4PzV/Wfj2LS36df3d
uNV4ngu8onhONTb1Peh5W/FvaSrDBS0fr6X9Wrq0xQsGx4zmOTl/ST67yMmv
vpBfJ3lIZzQUi0wPaHoKg4HGa0r4pYXnLd5veTtmNrqYO7Rqh/KFyaUkh9fz
l+R7DT4bLXoDrr7L2tTsyV6spXNoL7Ce6y38kxbvL+LQ0n6tuUMrb0/GJMlb
WiOmdgyet7ToV1/ou+UP5fpFf31Sgxk905rrUVxK7qvF+8lZaBwobrT6kQX2
mjOamNA+2uRM6/m133UbFt28bs2PTvbXCw1m9L+Z67V81wXvm7mwwVsz16O8
abA3wbqW/n93n5ziNo3tUzPoj7Smc5wb+muD5ydrdu27Grwy+LD21pL9tHqr
BfYa/d/K/yRXF3hI78VoV8MXn9kXMvf+VH9tNFjLz6Q41lond0fz2cTE6HPD
reZ+af608nD9nht8csq/LU1+cgb97mvTXye1v+ivF3X01Gz6qffQe0xqjepz
w620P/ps/f5tPrnxQikWGWz5DLlh6jfxCkxeney/vvL+d/N8qJ/Qiv+ih/pI
/T71Cdc+uekTqYZPPtuaQb/7elG/N+P8Qid8pDXVe4mfYPQ8xbTPzPvUS1/7
5GZWSHOJ4hs910fNk1b90t+b3XB2oxM+0pp6dwssbc2Uv/L+/42xJv7092xr
/jUa/lXOm/nau6xb/t7CG7wBA2/Yz0kepN4dnekYHG5x02fg/ZYnQ9+T5MOa
fxMNT31pyi835EBy12Yu1qrHG9afzeszeqDl7xkvmnLTZ+B9msMLHmxpSPq9
VMObWeR6Jn5S45laXtfjU7j3Ub0+owdMvlF8MLxgfs/57rxP8a3Fg0YHtnqN
k1rl3X9L1qqRd+fEV3f0Ub0+Wjvr7zW/XU+eoXOKd+T9JIcTv85gHdWBrbs2
mEb1huGaG7SE8dlavx+4AT/pvLuFXTevE3xYfNcCYynuvSPvG3xu+eFJzNfx
XMwOWnl7g34w/l6iDWisbuBEurd37Gto7VD8NN+1mBNR75fi0m28v/CrW3yR
4M+iB1zM7mnenuSjde3TPi7xkJ/CTLo32u/cdr8L3Wi+azEnMjhvNPPNOUzx
2fjk6x6hhWkn89bk3g21n9yXef4kJ9L8NL+RuKGvWejGVn0t5rYt7Zfg1VO8
3/KcW1hEv3c9M13P7luz45trP9EYSb+znuu1zm4wIanNG+6axrk1E6R61eCA
0RJJDp/0xwzHGc1GY2W00GJmSvmudd6bcZ7ieRJP6g3egIctTDDvuS0HWvot
0Tyt/pHyTquPo2dc313yrzVbMb2z6e9MH2pmzSZvb1sn/pWpx9ZMbX12M58y
HtENs8LWXRuse/WeBLtaHhHt44yuW/jPtB5bs5XkHmnMzcw0qalX8Te+9zvO
+JKcSTRGy8M5iYdmPkVr+V36oC/3YLA3iQ/1TIz2TvZA+zh6Xyd5vzXDXXBZ
EmeTA8Z/MPn8jjM+ypuULwzvLPDQ3F0Sq+T52/qgV/XY8mBbf29h3VqLGr2x
vuvWbKXVO5t9tvjC9O+v/n6DlktiS3Oy5R8mvUOrn6L5abxuMwehe17rQ1p3
i7+3zmgwfNF33MD7LSx9yg83/gPlGpO3N9wpvWuqYRJOMfP9lieZnNd4p6av
PNkHmVpIfCHz91a9tDCqNSNOMOGpeRDFUlojrTs9yTU0z6k/8BTmUw2/8OgW
szmaz/SOWvrH9M5PaYlWTEys6L3TfVIPJ4mV6TfXvG88ydbcecHvLa/AYF2i
CZ+q39Y+Wz3Xq/uifbrpL5Kz0/cnudTa81Na4qmebo23J/0i4yO11jRvKV+3
cM/w+0L/mHt/SsvdsE/jO5m/mz20vncRhxvW656ulc/Gf2v5RXRGsMA0WtfG
xzD+nuH3dc5Tn6EVz3fcp/GdWn4y3UOSw9Q3a8XhKf2QxKTV07XyOcmZJLeN
X9TqN1s6lp69xYP0GcPFixp5lxnfDftcz4Vbn6W1ZuLTigOto0VeLfR/y8NJ
4ty694RfWvVuMI1ykNFLJ/Vqss9FjSQ5fMOM74Z9tvrrk59NNH8Sn1exuhnn
W70AfSbJ2xZWm3s3moTWkcG0JPdaWqU1x3mK31t5vtCo77jPBDMpfhrspd6X
4a+WV3wDttP9m/ckd5f4SC3tbe69VUfGO0pqc6FVFnp1we/rPDca9WQ9tva5
1ueLdcKhNLbGK74B2/8biWrrPg==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzV1z/KbXcZxfGLAck07ESsTK0Xp5AINjZXiIVEhFhIOjvnkNZRWGUGKR2P
CVjYBPKy12et5xQJ+76cs89vP8/6890/++NfP/3TT969e/e3j7/736cf/v7b
L7/88NVnP/3+H59/+OKTX33x0XeX//jff99ff/PRX95//q+fv//l777+zT+/
/cX7d3/48/vf//s/v/4xf/8x1///3R+6fnIf8btv/e5b7/lktqkzPNlF6vqt
sxV7fHKGJ7/11p0KHTY1IH7rycwv7PeJxy+cOaXtJ8+uc1Jo+MkZmt3xJD+v
6VPkSTNnUjpsakB3vfCR3q/OWM1UYl/Nc+r3lyZTie5YcdqKG4VOdL/obNSZ
cM1TzawW3tF9Klhdf/fJbAUXNbl61XFiX5pnmr7W2bXinCZrCT82d6F7XGv1
Qh5qzklxSDO3tZdT89E8KfJWM6pm4xWPNe+jc6CZY0/0ozl5lYeacwRL6LzV
OaD90nxH0O87qYxNdcQqxzQLaa7Qz6J5RvR7s39X+ZZ6FtGhF/JBeFZ8XnOg
YAwxk2aONf8u8vDymVOs2/RO0+NNFtUzb2ZsKjdWGtAsJ5hKc0WKJzWTp35X
9N2FM6dYV7CT6LvmnFezEtzS7M0LGniSsams1u9xQg+pszXfC1IavjCrJ+cU
92nqVueG4Gc9z8t9seIxkYerzzzp0NU7QnO/ggdSHhR5ssou0RdC/02Nic4V
/d7si5XeRB6urle7uOYFzXuCAcTfV/tK5YbeaVNjTVZ/kvPNvhAeWe1FM4b+
Xc1m2gsrxkuxqNB/c1+ai3QeCo2lslTrSjOMmMOKB0T/Ci9ojV3wgp5/syM0
82heEvfReaifUeehuL+YrdhRkweaWtJs1sxzodULeaV5QOdkk6lEHz35rVTG
ag5MzVZkaZNRV10j2EN0vc4B4QvN5Dqv9JxXOaOvm/MRmhHPJfoxxQmCObUH
tZc1L2leTWk1dbbmfcT5L7BHMwcuPG8qq0W2i4zS3mxyo/Z+iiuamaN5VX9e
d6JgBj0rnXv6fUFki+gRzc/6nMJfWmMi8wUzp3pNZI7mVZ3/TQ5vMp5gsyY3
asYTjHTtbMJHgrGbGhNnFh5v9l1zR83O0pmp+TDVCyJnmhzV5HDhkebZNPs1
WbGpT83JIlc1TwqNCf3oHr/GAJf9ollaaFVrWJ9N99oq03QfpfhE6PkCJ6R+
V89Zd8cFBhA+1efXPmr6WnOIuL/QdnN3F55Rs2Kq01fa0xyo+VnPbcW02i/a
U3qn15ht1X0r5m/OM8WuTe+kmGqVXakzX+DJ1B61r5s8IPqoqT3hZf28TZ5p
5kbznJpjxXuEyFLhNe3xJk+mGFL7uskDoo/0ToXHm8/b5Jlmbuidiq5v+lfw
p/BaKqNEVwqNXe5ZvZdmvomO09/VexQ80+QuvVPN8yudr3J7xdiX+/3avvRe
muyhs0J4UMxKzFxrVc9HzKqpB8FRIrcFj+ms1v1+gVF1d6y6bNUdQksXrpvZ
oucm/PKEOcVzXeuylH6ETpozuewp4QXNZkL/qX4X/Nm8bmbLNVZsdnfquVZd
L/I89XfNDKkcWHmqmXUpLwj9i5699owrNl7pWfi3yWbN3BbaEyyh+Vb0RdOz
r5LDTa5u+kv4tMlm4gxNPa9470LvCI+vOPBJVogM1LmqPXUhh5tcLbSk/y66
ZqVDzborzrycD6v8FEzV9MUqV5tZvcrhC1knGE/z55O9CFbUmXaZM7X2UrMV
u0h136qDUs+oNdlk7KY2mjsVGSi6QGS78FcqE651VpPJL7xHXOMW3UGa5QQz
NH3a1Ize6QXvX+OxVBYJX6w6S+eAzgfRHSsuSp2zqQHRfSvNr5g8tVPRR7rj
LnhNzPwaP6furxlMs7HQoc4WfR6tsVROCs3rXtbcLrpPd5xmNsGWzW7Vs3qS
G6nvrjyoc1jzs+6vph9X/ah/9wJriQ5deVz0l8iH5vxTWaH3K3QuemeVvdq/
TY2JDNRdKZ59xVqi0y902TX2W7HEqgdFXzR7TWi+6UfRXymdiAy8rFWRD2K2
YhfNLtNz1vpscpTIQ80GuteedO4FT6X03+QHwUgXtPpEY+IMTV5tdpk4W1Of
TY568pkmh6z2lTpn01MpDtFzvpD/Td5r5tgFXm122bUsTeWq4KhURjU9rlld
Z9oqi4QOm4yh+arJD83PC97Q2ha8J2au+U1k7Er/17JIdIfQsJitOJtgjKbe
RB+teuEJI+mO1vzT9NSF8wum1Ty2yqIL+akZXvBSqqNT3tQMueqIlH+brNvs
iKYetOYv8LPOFs0tIrev+Vd3zbUsXTHkKlu0F1L3F32R0rnOn5TmxRlS2ltl
+7UM0b64liEXsrSZdalrkQMpLzTP0Dx/Sg/ad9feL1adu+qaJks3M6E5q8v5
merT5vtIk0k0F636vdkdzX4RmbB6R1j5KzWrZu6J/Bc+vZCfmluaeSWYJMXt
qdmm+l3PWeTGKtMu9EiTB1I51uzx5o5S81/lp/DjBT2kmEQwalMnl5nk2r6e
/JbukZROdO+LGa46Wutz1adNbTT1sMrwJjO8OpM056a5tzkH0e+rDNS+a85Q
59UFLQmGaXa9fq/RTHvNI2LvqbmJHGvqf9W/OgO1j5rdLfQj9KCz5RpXaO8L
PQuOvcAkWj86x5pc3Tyn5iI9H5EzzWxZ5fMFTzW/m/KU5sbU2YRHLmedmMmT
v4tc1f0rtN3MH9GDIlt0Lze7Umgv9d0Uu2oeE5/RnHYh617lPBe6STPM6pyp
Z3mrrlZ+uTAHzb2aSy/wm7hOaSPVoSmNaR0Kzm9ykfb1iuuaXhD5I7pvNQed
z5pLtZZS2SX2ldLktX7U/LPqR+HHV3+PWHkw1fUpfwkNp/yieUkz8Iq1Us8o
WFp/V3SKyC7dj8KPF7QtekF7UHtZz1bf84mvRUY1c7XJ5MKbmmfEd5s9ezn/
xfW194hVJqQ+o7ld+FE/l2ZCzVQik1Nn0EzV7HHtiyYnCG0I1rrwHqHZVczw
guZXXNfMPfEsokeEhrWXde5pXWlmE12v+UdktWAP3fvNszU1f40rdHY1eU9/
ptl9QkuaFZtcpzNwNbdXZ+8LXhDsKrJ0xRUXuL3ZcRdyJnVPwZavwnWaYfRs
V13WzOGVF4RfdBdf47EVw4iOW3Hghf02e7CZJ4I5U8+e+m6qy5q93MzPy527
YrYLOmzu/UK+Xduv7n2RM0LbutP1e8eKmfVMVrnaZNQmswk+v6yBZr7pThR7
0Xpoakmwa7PLUme4xtUif0SuNhlVPK/ImZQOmxrQXS98pPerM1YzldhX85z6
/aXJVKI7Vpy24kahE90vOht1JlzzVDOrhXd0nwpW1999MlvBRU2uXnWc2Jfm
maavdXatOKfJWsKPzV3oHtdavZCHmnNSHNLMbe3l1Hw0T4q81Yyq2XjFY837
6Bxo5tgT/WhOXuWh5hzBEjpvdQ5ovzTfEfT7TipjUx2xyjHNQpor9LNonhH9
3uzfVb6lnkV06IV8EJ4Vn9ccKBhDzKSZY82/izy8fOYU6za90/R4k0X1zJsZ
m8qNlQY0ywmm0lyR4knN5KnfFX134cwp1hXsJPquOefVrAS3NHvzggaeZGwq
q/V7nNBD6mzN94KUhi/M6sk5xX2autW5IfhZz/NyX6x4TOTh6jNPOnT1jtDc
r+CBlAdFnqyyS/SF0H9TY6JzRb83+2KlN5GHq+vVLq55QfOeYADx99W+Urmh
d9rUWJPVn+R8sy+ER1Z70Yyhf1ezmfbCivFSLCr039yX5iKdh0JjqSzVutIM
I+aw4gHRv8ILWmMXvKDn3+wIzTyal8R9dB7qZ9R5KO4vZit21OSBppY0mzXz
XGj1Ql5pHtA52WQq0UdPfiuVsZoDU7MVWdpk1FXXCPYQXa9zQPhCM7nOKz3n
Vc7o6+Z8hGbEc4l+THGCYE7tQe1lzUuaV1NaTZ2teR9x/gvs0cyBC8+bymqR
7SKjtDeb3Ki9n+KKZuZoXtWf150omEHPSueefl8Q2SJ6RPOzPqfwl9aYyHzB
zKleE5mjeVXnf5PDm4wn2KzJjZrxBCNdO5vwkWDspsbEmYXHm33X3FGzs3Rm
aj5M9YLImSZHNTlceKR5Ns1+TVZs6lNzsshVzZNCY0I/usevMcBlv2iWFlrV
GtZn0722yjTdRyk+EXq+wAmp39Vz1t1xgQGET/X5tY+avtYcIu4vtN3c3YVn
1KyY6vSV9jQHan7Wc1sxrfaL9pTe6TVmW3Xfivmb80yxa9M7KaZaZVfqzBd4
MrVH7esmD4g+ampPeFk/b5NnmrnRPKfmWPEeIbJUeE17vMmTKYbUvm7ygOgj
vVPh8ebzNnmmmRt6p6Lrm/4V/Cm8lsoo0ZVCY5d7Vu+lmW+i4/R39R4FzzS5
S+9U8/xK56vcXjH25X6/ti+9lyZ76KwQHhSzEjPXWtXzEbNq6kFwlMhtwWM6
q3W/X2BU3R2rLlt1h9DShetmtui5Cb88YU7xXNe6LKUfoZPmTC57SnhBs5nQ
f6rfBX82r5vZco0Vm92deq5V14s8T/1dM0MqB1aeamZdygtC/6Jnrz3jio1X
ehb+bbJZM7eF9gRLaL4VfdH07KvkcJOrm/4SPm2ymThDU88r3rvQO8LjKw58
khUiA3Wuak9dyOEmVwst6b+LrlnpULPuijMv58MqPwVTNX2xytVmVq9y+ELW
CcbT/PlkL4IVdaZd5kytvdRsxS5S3bfqoNQzak02GbupjeZORQaKLhDZLvyV
yoRrndVk8gvvEde4RXeQZjnBDE2fNjWjd3rB+9d4LJVFwherztI5oPNBdMeK
i1LnbGpAdN9K8ysmT+1U9JHuuAteEzO/xs+p+2sG02wsdKizRZ9HayyVk0Lz
upc1t4vu0x2nmU2wZbNb9aye5EbquysP6hzW/Kz7q+nHVT/q373AWqJDVx4X
/SXyoTn/VFbo/Qqdi95ZZa/2b1NjIgN1V4pnX7GW6PQLXXaN/VYssepB0RfN
XhOab/pR9FdKJyIDL2tV5IOYrdhFs8v0nLU+mxwl8lCzge61J517wVMp/Tf5
QTDSBa0+0Zg4Q5NXm10mztbUZ5OjnnymySGrfaXO2fRUikP0nC/kf5P3mjl2
gVebXXYtS1O5KjgqlVFNj2tW15m2yiKhwyZjaL5q8kPz84I3tLYF74mZa34T
GbvS/7UsEt0hNCxmK84mGKOpN9FHq154wki6ozX/ND114fyCaTWPrbLoQn5q
hhe8lOrolDc1Q646IuXfJus2O6KpB635C/yss0Vzi8jta/7VXXMtS1cMucoW
7YXU/UVfpHSu8yeleXGGlPZW2X4tQ7QvrmXIhSxtZl3qWuRAygvNMzTPn9KD
9t2194tV5666psnSzUxozupyfqb6tPk+0mQSzUWrfm92R7NfRCas3hFW/krN
qpl7Iv+FTy/kp+aWZl4JJklxe2q2qX7Xcxa5scq0Cz3S5IFUjjV7vLmj1PxX
+Sn8eEEPKSYRjNrUyWUmubavJ7+leySlE937Yoarjtb6XPVpUxtNPawyvMkM
r84kzblp7m3OQfT7KgO175oz1Hl1QUuCYZpdr99rNNNe84jYe2puIsea+l/1
r85A7aNmdwv9CD3obLnGFdr7Qs+CYy8widaPzrEmVzfPqblIz0fkTDNbVvl8
wVPN76Y8pbkxdTbhkctZJ2by5O8iV3X/Cm0380f0oMgW3cvNrhTaS303xa6a
x8RnNKddyLpXOc+FbtIMszpn6lneqquVXy7MQXOv5tIL/CauU9pIdWhKY1qH
gvObXKR9veK6phdE/ojuW81B57PmUq2lVHaJfaU0ea0fNf+s+lH48dXfI1Ye
THV9yl9Cwym/aF7SDLxirdQzCpbW3xWdIrJL96Pw4wVti17QHtRe1rPV93zi
a5FRzVxtMrnwpuYZ8d1mz17Of3F97T1ilQmpz2huF37Uz6WZUDOVyOTUGTRT
NXtc+6LJCUIbgrUuvEdodhUzvKD5Fdc1c088i+gRoWHtZZ17Wlea2UTXa/4R
WS3YQ/d+82xNzV/jCp1dTd7Tn2l2n9CSZsUm1+kMXM3t1dn7ghcEu4osXXHF
BW5vdtyFnEndU7Dlq3CdZhg921WXNXN45QXhF93F13hsxTCi41YceGG/zR5s
5olgztSzp76b6rJmLzfz83Lnrpjtgg6be7+Qb9f2q3v/h+75X1bnLKI=
       "], {{0, 
       128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztncHKbUcRhUME8TWcCc50qrkIDgXhChkKEXQUESIi4sSB+BaOheQlfAGn
PoI4DjgUTMDBFW1Z619rdVfvfw06nBz22ae6a9XX1VX7P/frP/nF25+9/957
7/3ya1/85+1Hv/7eJ5989JsfffXL//npRx9/+1sff+WLl7/79/jy9Q8+/+Gb
7//tzx/8/PNvvnn39Z/++ds3f/z92+/+4w8f/sdr9nrks8p9XLYlXit2Kn5R
1n+nzYpmEnpwrYmyzpP149L/Th+x65ngnvJdaZ9+9umnH/yvsfou9vrVZ9//
7O/f+fAbv3rz47/8lb4PYo9yz8RrxM70XFbrv/LFNJuR+yv2IPpcjdV6Iut8
i352xkWaIa71n8CNdO7BXv+uX5S5rGJnZc+790FsS79G7ESGMpdT/HfZjPgX
yW0QbSvzXdm/mjui+Qn62RkXLh8h64n4SOFemhuu+HLtdyt7VjYj77N6Rt5P
792InWz8snNheZXgv2Kz67yMrL+LsYiulHXbqZ9TcaH4iJ0XwkM2H1bWM803
dq3YOGL1r8Sa60zn2ruVM9dqjq6a5+r+Cf5PqKXvPHezc2dzOZaBii/SeWwi
ZhN7mYtFyHoqtk2IL6VHk2YLu/7s2q6uZ+u9iK5W3Fb4kOA/azNr2+R6HetT
V2wqvnDFAhsXSsy62Kv43VX3du0RbHwpez2y/iu9JeKL1TNyf1a3CMdW+mHr
2Kz9LGMZ3v+/ubD3QTSTzvPZc67y7AfrF7YuvfIF4mtXHqvEF2Izex+X35F9
3BUjyv7CzpHdX1jmuOKL1bPSE1TOoew6JM74yLpN4z+i/wn1OkU/iF9YXqU1
ifgocZZhdbJ6P/EcKbIObIy46vmudWD9ztbl2Gc8FJ0gflTOQYpWd14zmf/K
88lKXYKtrSlr6zqfKtpArmd5uLPm5np2SKkvsXpT8n8lf1bOdK59UNHYzmcz
VuvA1nOQa3a+ZhmlxKDiI1bPSl2C5QDyPrK2rGbY3FLRpOssk6i5sZ91sTdx
rkzPi+Ubqz3ktauWq7BFyQ0UBrriK7FuN/Kf1UO6NqKsratfoNQxEmeZtG5d
34v4Gvne1fvKeWdn7CPfi+jB1d93nZdZf6X3F2U9XT16Nq7ZuSf4z+7dbO7E
6kfxqaIZtvai8ISdi1L/YXWr1J3StaYEKxJrqMQX22dXrlc4o+TeLKOUtXKd
j5B1Y+NaiQv2PuzauvIitvbC+lTZl5H5svkq+7ycohOXbtm5K7mBwknl7MBy
0sXMRI6UuL/Cf3bNlf3lpZxD41R5BswV1+l1YPduJS9CvovlBpv/J+LL5QtW
J8q+icxrdQ3irwS3WV8ofldqWWxMufpHyPsJ3iprpawtG18u7bE23MJ/Ja9I
1EPY+mpibZW9iR3sXFjblOcZ2PkqtSbFNlfuyuarbO6E+JHdR5C4c/HfdWZk
1zZd905812T+szmbclZNPMuRWFvX3pTQCbtfK7m6whB2nV22KWcNJa921SeV
HIm9XuGhcmZkY+pU3/Op/Gd7moiPVvdH7DlVM0fiQonNhE4S9px6PkSp7yX6
2qwekPddPX3E18j1rtyeretOeDaV1eTOuEaGi//KedDllwl7q6v34dJnghWI
PavPJp4PYfWDcMP13JfrLJCIfYWlSOyzZ5nVPdkz3c7cA9HGqbhWeKXMlz3H
Kdckhov/rvOysg7pWpZrzZX+oOsa5Z5Kn4W1x6VP5HtdOTarGdf1idwDsSHd
75vAf1fNjX3NznHn2ipnW+Q+p54TSJ+d2RqC6zXrIyUnZ23YWZ9kX7M1NLbG
q+iB5WoiB1Y4uTOulXN3or+2s0bnWlu298GeZxEtJXTiOssoOkzrbWWPUlNS
+uzp/hSiVbZfhqwtkg+z17hqyK4cWKlZ7YxrZe7K8wmJvltiuJ6ZRK5X+MPW
4U+dZRQuKfkwm4sq+53SZ0/rk9Wqos9Tr5VYczGQ9YWrv7aT/2w8KudKxU5l
KLkckv+w+Qwbv4pOXGcZds1d+bCSiyrnUIX/6bM/O19Wn658L7GPK3UkRKuJ
+ieyZ+3kv6vPy54rFR8pQzmPuM6Arvxn51lmZ92VtUc5RyB+d2nGpU/WZnYN
2b5VQueJfS3BQEW3Sr6hxKCSi7rqAGlWKPHl0kMi/0nPZULdFbGHzTfYtXKt
c6Km56ppK3tEIs9n93HW5vR5HNHD6v6sBhQblNeJM9E0/ifqM678JzGXCXVX
5LuU+ygxpdR/EjU9pabNrrnSI0Z0xX4Xa7Nip5L7peuNrA3I/Xf2apF8Sbm/
K74SelB6KIm5TKi7sjYn/K58luWPS5+JfAyxmT0XsHsBYptrX3Odx5X+mkur
iDYQv6S15+JqggOIX1g9uGLHNRckJ0nXXRFtrN5P91Vdn1Vi89TzEooelHhH
zrxKLsHatroPYrNyLkvzn527S3vI/pg+Cyh1YFYPrP7Tc1G+N133QGqzLvvL
f1zPyJqwNXa2r53ICV218YTNaf4rPT5XXsfupy6/J2pr7GvXfrezl4Gsg1L3
YPsdibp6WjOT+e/auyfch50vsv5KzXbnWVV55gfhg9J7Yut+Cb+71patJSpn
XmUuiVxaOfex5yNFVy6/P5X/SmxOvsa1/siaJHqmCUax9VvXvqbU/RJnQGVt
2TqPom1XTpvIpV1xp2iMvb7812Nz8mvX+iNrhehE+V4XoxDbEMaybFHqfqvv
dTGKXVuFV2wcsftdupfBrq1yf6W/wOr/NfOfjU2lzpl+neb/qX1HYZSyryl1
gHS9zsUodm1ZXimxs/psIqdF7EzXltnPsvU011o9if/K+Z19ZjLxGolNZf1X
1+/cd9L8d3E7Xa9DGJLoraTzK6WXpOgEsdPlO9czBogGEJtfM//ZM6arrut6
nVgH1xxdflf0psyLveZUvc7FqBvzqwTTlNove39lrVw1gdfMfyR2EH+xuY3y
mrXHxX9kjmyMT+C/wmqlV6vk6glG3ZJfJbik1H5d9VJFP65+92vgv7LmyF7s
2q9ZzrviVGEdW4s+xX9X3CFzdNXr0oyanF+xQ+llKOdf1ndKLYvtv7zm/B+J
d2QNE3UbxL8uhif0qfTpdvLfFXesj1xcTTNqcn7FDnYu7NlEyQ9XdrIsco2n
8t+Vv6386KrbsHpD1lBhBaJPpe6h7FOJZ1SUa9hcguUqq1uFUdPyqzTT2LMJ
W7dP7GuJ8ST+K2coJJ9h/Y5cn6hBsaxQ9ghEG64YSfcokeE6R6xsVvZiVnsu
O135lct3rrkgrEB8l6hxucaT+I98FtGAq2bC6gSxma0vsbYhflFiU4mRU/xH
au8KVxWGs4yall8lfJfI/5W9L52TKONJ/GdHIo9i78/qgeU8W59n+7+Kf9kY
OcV/hANKjCjcYBk1Ib9SOODiElv/d/m3/H+Z3xPf5cqjEL65nv1YfVbZF5TX
yprvrFG7dMLGtSsXdfFKOaewg/XvtPzfVZNU/JUer43/SEwpZ730mVexh+1Z
u871CHPY69P8d+2J6VzUxdV0foXYPC3/33m+Y+foGq+B/64eDcJG9p5sHZ7l
OVvnRPSPrKcSy6fy/8Q6J3JRpfe0M79K504KlxB/7TzfsXN0jdfAf1ePZqUN
hUWu2rvSj0CYNqHnlea/a50Vm131t0RtDYlf5byprLOy5uy8XP6d0Bd+Kv+V
OnziuRGW8y7eumoLSvxO5r/Sm0jUh5HPsucC5bsQv7D7pit3SnPJVd9Ln3fS
MZVe5wT/lRq161ym1BgV3iL3V5jG7qeu9UzwX+lNuPjveq5G4Ywrv3KdX07x
n82X2NhMnHfSMZX4LOvrRB+NraOy82JrjMg1rMZcfFBqKTvrukrNTZlXOkZY
XSV668p92Lr6Kf7vPDe55quMJ/Ff6XWyepjmR2S+6bqNq8+u6I2tublqRDuf
q3HlSK61Xd2HzbtczwIpZxm271b+z9Q2wkBWeywrdvpRObe++75St0n3hRO9
VKVGhFwzLUZca+s6NyVq4+la1in/JsaT+M/m/wlWnPKjK99W6kLpPrurvoFc
7zpHTIsRZW1d5yalt+WaC6uZ8t/72YS2lWddVt/F6nCnH9lzK8vw1dzZM/Lq
Pom4dtWsXLnBtBhxrS3ra+S5INf3ps8yp/ybGE/iP8uuhJ2n+K/UXpRnNnb2
2dO9VLafi2hvWowoa6vkEsq+X/7nxpP4n9AeYqerb8WORG0feWYj8bzfzmdp
XPvR6p6TY0RZW0TnbC0lUVMt//fYP03bCe2t7Ez0rdI6cfWFkfptos/u0lvi
ua9bYkSx05VfIfuFovnyf4/907St9KQQO129RWW4enAu21z1n3QtXTm73cKH
dCy78ivlGYPy3zuexH9kpLWX9qnSg1u9nz4HufZNF//Tzx/eGCPp/IrtJSl7
cfm/x/5btI3k/C7tpX2q9KBdPRGld8DO0aUBZU9Rzkq3xEi6tubqJZX/3jFB
M2ltu3qXk/mf7sexPkLsT2s1UVdk7b8lRhK1NSQekf7R6rPKXMr/s5pJa3vF
QLZ3yWov7VNX7QW5Z6IevlOr5f8c/iv7wjSfnvLvhJi6RdtKH8qlmYRPldoL
uw47n2tK6G0CKybHiOuzSp6QOFOX/3vsn6ZtJTdOPIfm8qlSe2HXJF0P36nV
CayYFiMJO5Hzo0sDE3x6yr8TYmqyttncOFEDT/hUuQ9b/19dc6NWJ7BiWowk
7Ez8reVkn57y74SYmqxt5LPsM+qus+1O/qe1dItWJ7BiWowk1nZ1fkycBSb4
9JR/J8TUjdpejfSzQOX/Wa1OYMUtMeLqryHvp7VX/u+x/xZtr74r/Rxa+X9W
qxNYcUuMKP01JC5cZ4EJPj3l3wkxdaO2WR26ngUq/89qdQIrbokRNudBzsWJ
vsAEn57y74SYulHbCU0ifYHy/6xWJ7Dilhhh+a/cP/03leX/Hvtv0bbrb2BX
NqefmS//X6aBCay4JUYS/TU2dnauQ/k/RzMJbSvMRDS587dAy/+cBsp/r53I
SD9TUf7vsX+yttn1RDSp+GjnZ8t/r67Kf69m2N7xNJ+e8u+EmLpF22x/FtHk
qd+CK/9zGij/vXauBlsjRWK2/N8fU7doG8nbld+F2PlbcOW/VwPsPct/XSdI
75g9d5f/+2PqFm0jnEfur+QqLv+W/7oGyv89dr472POy628wy/899k/WNpu3
s33bnX8LXP6/TAPl/9lYRvIu5IzAxmb5v8f+adpG6jwKe3f+dqjy2fJ/j65u
jJG0nWwfjc3nV2uy06en/DshpiZr28VqRM+rGpHSt3Jpo/zP6ar8x21j/30N
128Elf977J+m7VOsRs4a5f9+rZb/+/mffrbTNZfy/6xmEto+xer0v59V/r9M
b+X/nlje+Wynay7l/1nN7NQ2q1X2jJD+97PK/5dpoPzPxTKi/5XmkVyr/J8Z
Uzdq28Vq5Oywslnxdfn/Mg2U/7lYPvVsp2su5f9+zZzStsJq9nmGhK/L/5dp
oPz3xjLS20WuT5yRd/r0lH8nxNQt2ma1qtwn/bcA5b+ugfJft/PUs52JNS//
92jmlLZdf7eV+J3P8n+PVsv//fn/qZ7XTp+e8u+EmJqs7dV92L8FUHyBfLb8
36PV8n9//j9Bw+X/HvunaXvF/NV9XL/tg8wFeT0hdp6k1fJ/T/4/IefZ6dNT
/p0QU5O1zdb5XTUiJEYm9wueqtXyP5f/K/9eRvl/b0xN1raiyZ2/F4Fcr2ij
/Pfqqvz/b6269oiExsr/PfZP07byfMLquyb8tk/5/zK9lf/7Y9nVCy7/Z8bU
ZG0j+fyK7YhtO3/b59TZ+UlaLf/3xPKEnGenT0/5d0JMTda28rdaq+/d+ds+
E87OT9Jq+b8/lpW5uHKq8n+P/dO0zbKU3S+UPWg1JvQLnqrV8n8+/xM5Vfm/
x/5p2kZYuqr/KD0Cdi7T+gVP1Wr5P5P/iZxnp09P+TcxJmgmEaesrpA9QpnL
5H7BU7Va/s/hfzrn2enTU/5NjAmaSWs7oWHkmlv6BU/Vavlf/pf/Oftv0fbO
kT7bpu//JK2W/+V/+Z+z/xZtp8fken5CV7dotfwv/8v/nP23aDs9Jtfzy//y
f6edO2NEmUv5P0cz5f+efkH5X/6n7UzHSPl/NqZu1HZ6KL5L1/PL//J/p50J
zZT/c2LqRm2nB+u7nbFQ/pf/O+2coPnyf4/9t2g7Pcr/mVot/8v/8j9n/y3a
To/yf6ZWy//yv/zP2X+LttOj/J+p1fK//C//c/bfou30KP9narX8L//L/5z9
t2g7Pcr/mVot/8v/8j9n/y3aTo/yf6ZWy//yv/zP2X+LttOj/J+p1fK//C//
c/bfou30KP9narX8L//L/5z9t2g7Pcr/mVot/8v/8j9n/y3aTo/yf6ZWy//y
v/zP2X+LttOj/J+p1fK//C//c/bfou30KP9narX8L//L/5z9t2g7Pcr/mVot
/8v/8j9n/y3aTo/yf6ZWy//yv/zP2X+LttOj/J+p1fK//C//c/bfou30KP9n
arX8L//L/5z9t2g7Pcr/mVot/8v/8j9n/y3aTo/yf6ZWy//yv/zP2X+LttOj
/J+p1fK//C//c/bfou30KP9narX8L//L/5z9t2g7Pcr/mVot/8v/8j9n/y3a
To/yf6ZWy//yv/zP2X+LttOj/J+p1fK//C//c/bfou30KP9narX8L//L/5z9
t2g7Pcr/mVot/8v/8j9n/ylt/wsdALYz
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2LGqJtUShuGNgph4Ed6ChqIbUyMZURBMtqCBDAgzwWBmMHcyDBgreH3O
gMEkA3/tqm/1V1VvcA7POfT0372617vW7k9//v3Jrx/c3d09//jNfz15ePH1
s2cPf3z30dv/8cvD088/e/rhG/75/3/e+p/XX9z//c3z+39fvvzqXf/w0/df
/vXqx/tPfvv2/l2/75j3neeWc0bPH/3dquupsvr8VdeguM5bxjzzPkTvq8pX
nf+qsVU/C0Vnqt5zdTcU3VOMieIdqLp+xbO+qtUn1wJ189XzSDGXHaxeWxVz
/KrOKK7tZDdOvg/qeVq1t79qzZ1qRSsU+xn133rOa0HVXFY3XNEfxfNSvw8n
+3Ny73TVunNVK6bauQPqOdWl+YqOVc3lquPVna/aryo6pniHr1pTFH8LKH4X
1zZcsdao9x7dm58Zq6vWBUV/Tu4lruq/+h4z74/zv2Ut8FlTTv7/25qv3sdm
Ol91/Mn1seoYxf5KsTfu3syp99XRin2p+m/J7lY8I/X+8Kpnd9We4eQ+alvr
FHsSrOuJeu5v6H/V+1/VRsXezGE8Tz4jxZza1jr1+4x1fd7Q7ZO9qnqOmc4o
rqeLnd9zh4Zc1f/ov8W17/C2DjisBYoOZObUyX24w3NxeM83tI410bP/6uPx
tR3o2EOHtfjkvU/tv2L8He7LzdFxc3v/ce07r2j71PfB4b6mti7Tpaljoh7n
W8bK7f3HZ975zHuC+z535y5FW+RwXw6u2tsw332s6ED0d1kLZjx3ty65nbOj
M3s25rW/qzqgaDvvjP9zd+jSVfsNh3FwWAvY4/W1ugPsDTzdsf+Z/lTtNzqO
m8PfAuzxPK14n6/aj+Gd/c/sPareT4fxcXsWDu85PtMBRdt5l/yfu4Or7rdq
37LNrAV9re5AdB45jMkGd+9/9F266pzbzBzvZcW7XbWPchifqZ7UtMweo+qc
mLWgo6s6oGg774n/c3doS+YeM++bwzh0MWuBp9UdyOzNcN/n7tAQh2Mwa4Gz
Fe9z1d7JYXymunvHovelPgazFnR0VQcUbecd8H/uzs1X7O1ZC1gLJlndgeh8
cRiTDe7Sf8X7kzmetYC1YJIVHcjMKZ5v3+eubn7mOrucE7MWdOyAou08X//n
fnKOZ5rgfE7MWjC1A9F9kcOYbHCXRmXeGbdzYp93A+s6EP1dnt2M537VfM/c
o+Kc2OfdoCdnOqBoO8/O/7m7zfGO58GsBVM7EN3/O4zJBtMxvME053wHor/L
c5nx3DF2NmuBrgOKtm9+Ll2eO8YdzVpwpgPR/b/DmGww/ceYtUDRgejvbhtz
B9N/jFkLqjqgaPvUMXcw/ceYtUDdgej+32FMNpj+Y8xaoOhA9HcnjWcX03+M
WQuqOqBoe8fx7GL6jzFrgboD0f2/w5hsMP3HmLVA0YHo73YZq0mm/xizFlR1
QNF2t7GaZPqPMWuBugPR/b9DGzeY/mPMWqDoQPR3HcZhm+k/xqwFVR1QtJ21
wP+5Y4z7rgXqDkT3/w5t3GD6j7GnT3ZS0QG+//ib/mPsb/VaUNUBvv/0Mv3H
uJcVa4G6A3z/8TT9x7ivq1qq6ADff/xN/zGe4UxXqzrA959epv8Yz3ampYpr
4PuPj+k/xrOdme9Vfwvw/cfT9B/j2a7qQ2atqVojHJo5yfQf43mu+uZT1QS+
/3ia/mM8z9E5rmgC33/8Tf8xnufMfK9qtWKNcGjmJNN/jGc40+2qPlddm0Mb
N5j+Y9zXmfl+yzkV18D3Hx/Tf4x7OfPdRr2HV3zPYS2g/xjjx81TRUsd1gVM
/zHGt3de0dhbrofOe5r+YzzDVX3ONP/kuoPpP8abrWi14psP/fc0/ce4l9Vt
j3ZesWZh+o8xzndV3erMmuXQwM2m/xj3dWa+R1udWXfov6fpP8a9HG1p9JjM
WqNevzD9x3izr/r2UnVt/C3gY/qP8Qwrvr3ccvwt15M5P6b/GOPb+6/Yh1e1
wqF7mP5j3N3qPXx07ahaazD9xxg/rr0n14Jo5+m/j+k/xn2d6a1iLch8g8L0
H2Nc29vMt5qqhmd+F9N/jHG+z5neKq6Z70L0H2N8pp9V54xec+a+MP3HeJsz
/cwcX/X/sxb4m/5j7O/MPj8zxxXfjlgLfEz/MfZ3pu2Kf1vVGdYC+o8xftxa
cLIPVdeQaY5DMyeZ/mPs76p9eKb5VU3O3BdrAf3HeJvVDYx2IHM9VeOA6T/G
G3xV/0+uHVfd+2bTf4z97dzA6PVk7tHt3rub/mPs744NjN5XZr3A9B/jqe7S
/6q2Z8YH03+MJ7lL/zN7+G1j4mD6j7G/O7ZO0fzuY+Jm+o+xv7u0Tt38jmPi
bPqPsb+dW3ey+V3GpIvpP8b+dmvdVc13HpOOpv8Y+9uhdQ7NdxuT7nZ4jhhj
z9a5Nd9hTCbZ7ZlijK9tnXPz6T/9x3ib1a3r0nz6T/8x3mZF6zo2n/7Tf4y3
uap13ZtP/+k/xtucad2k5tN/+o/xNlfN2UlznP7Tf4w3mLlM/+k/xnuc+Yaz
YS7Tf/qP8QZXzfFJpv/0H+OpzvRtw7ym//Qf46mOztNt85r+03+MpzozZzd8
C6L/9B/jSVZ0e+paQP/pP8bdnZmzJ8/pZvpP/zHu6Mx3m8y8njT36T/9x7ij
q/bz0WOqrsfB9J/+YzzJVXN26jcf+k//MZ7kW+adYj/ffb7Tf/qP8SRH9+rR
YybNcfpP/zHubsU3n8z5u5j+03+MO1qxt1cf42b6T/8x7u7o3FQf08X0n/5j
3NFV8zFzTPe1gP7Tf4y7ONrbzPyt+i2HcaP/9B/jjs40ufs56b+/6T/GZ7qU
Ob7LOR3G2aGrXez8fDGeZMV3mKvO6WD6T/8x7uhou6L/tuqczqb/9B/jjq6a
a27ncRhDh652cfd3AGO80/Sf/mOMd5r+03+M8U7Tf/qPMd5p+k//McY7Tf/P
9P8/1LAJXw==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztmrHKb1cVxINCsBDfwc5CG1ObiwhWahFbLSJoFRSSQux8CLG2jq2ltZ0v
ID5LMAGLK3hgfvxm9jnfvbeIbC/nO2fvtdeaNTPr/+1f/e6j33ztvffe++wb
X/7PRx///oeffvrxH37+/lf/59cff/LB9z/5+pfLP/73v6/Wf/73N1/95Dvf
+/AvX/zoVbJ+/18/e/Xjz3766rd//+7/rOnzybq1h+Q99N/N/k2cW/E0z7fe
Y+49+feTOUO/ddd+Tp5xsYdF/Ft/29r/GsdoPf7pF3/7wT+++OWH//zWB6/+
+vnnH/6//15/5ur55Fv0nVfPJ2e5emfyLbp/E2eD+Vf7v3p/ElvznuT5qztK
7utkztBvJf8t9nO1XpxxsYfWXdN8bp0x+Vta1ye/lfSgq29dPXN1FvpOwwHo
+5P4mz6bxJbmxoKHL/h/ci9mvc4Z+q2T+6F7M+85uYd1/Bd7u9qnweTFtxJO
clKnUExOOCe9a/O3lPcuvCDDw6lOoZxq0QvWOdPq+4v90L0lOWxwsrWHBe9q
cTODw1f3mzyTxJxqbVo7J3UKxeQFTzZ9ge45yQ26T8P5DV812qHFSxd7o31/
Has1P79rD/QZUzsJN6P9t+XpGa3dqp0n6BTaa1o8meKtud+Wj2e0nuGr9F5a
3NvUgtFrtI5asaI9bqGVFntY+DZJPrS+a3Kb8vmW72FweKFTTK9JcsDojpZm
XN8LzfM15zS60uCVyUmj71q5YeJgcNLkZ6tfG/558m8NzrTqsbXPBIdP6hTa
a2htLrh0C9tb2jbBwAXnbPGKJDeMd0Hz0PicBktbdUdzzzxj+jXNE6rlzd8a
rGtpwGTPr/97S0NR7dPSKcZvad3vwougMaHapNU3KYc3vIJydXrvLb1s/O0k
hkZHX+FMqxYorrZym87yKH+gPS7JsSS3qTfeembB1Vt8Y62pW/OOFrYneEj7
VGtOYfQsrXHD543fZfZ2cr5Gnzc9iOab4VGtvmP4qjkv5Q8tLp30nZYOWvB/
o5VOeoyt+Jg5bxLDNY9N7ohiV3LXLW7ZysOW19eqzeQuDM6v1waHKc9p1ePJ
Hmp6SqtOW/w/uQvD61oeo+E2Lb+aelwLHmu4+kld3JqBnvT6KLdscf4nrNd6
s8XDn9ATW1hE67RV77RHmPpdaPBkbfh/EvMFV29h+LpmjQ5a/Ptdcxyq91tc
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
LvpRy2N8Ap6/SWtay3dxEtPLKGc7+V06IzAexRpX155ngntmb8YroziczBRo
f2n9RsjkQHIuqnmfhi1vw9r4Endpt/VvolrfNbhK1waXWhje8tkSrDPvb3ll
La+vxQ1avSN5f8tjvNrnm+QLvZQ15VRP0G7GS1l819Rsy68w90UxfOF5Gv88
6U0tj7H179SrpLlNuRz1h2kPoj3unS+0W9N6f4J2S/a8yCVTI3QebfwKw9Na
GG5ia+YOV3s2uZrcL/13M19O+j797iJnaA96ss/8Jq0pZ6Ne94JvG75hcqk1
AzX7Md8yd30yD828nmJacl4zL2v17kU+UD/f5IzpQVfveQJ+vg3r1hznadqt
lUstjkprx2ARxZOTd0e/m5yLakOqgxZzhEU+rL3KRHvSnDR85t26i40mN55w
rpO5RDkqrWWKRVf3e4Und/l49HnqudG7oF6o6XfGxzPnMl4lrSnKf0zveLf2
2Jg8Q/3wu854Vy7RmSC9l+SMFH8MPi96cUv7mPkIzfmkf9FaW3v41Kcy/lJy
v6Z3vFt3eYjxguhdr7nlOpcSvpTgxgKfDU9u3Z3B6qu9LeYjZgZKsfQuD7/l
X5n7onW0zs+3Yb3Ik7twnubDIpcWfmwLn5O5ZKvGTS+mfnjS0818hM5AW/e+
9vBp7dP8b3GSRXze5rXxis3vLk6u1/rFxJzWy4KPtfpRUuOmNxkfZvF7m/W9
01qjZ6c9olV35t4NFr3zhfL7WnCYk+skN4x+aeXSSQ1lPHbD1c15Tc+i/f0k
Viw8lpauWfB2c78tLy5559u2pvf75D5L+cNittjqTYv8XPg81L81vyVYzzrX
WLHwWOjZTW60eHtyvwaLkjM+AXvvWpvfD9D6uqvP0j0sZlW0Rhb5aebIptao
P391X+tZ5xorTnpNSa9s/cagxdtNTdGYJGd/G9Ym/tRXOXkuo1VNbtDn1/6S
mREvvpvwPeNdmL52EisWXlPC1Y1Go/fY6rOtmNC6ewI+39ULEpync5l1nzWe
tskN+l3Duxa6zOh9im909mpyjPa1NVas75reO92b0WK0z1IOs+aHb9L69bP/
B1HIQHc=
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzlmjHOpkcRhFcgIa7BFXDMSlzBjggXCyJLSEuAyMgJCEm5AzewiInIfYK9
A7ZE8Aa0XKWqp2e+f1uy9Xs070x3z0x1dX3+xW//8OXvf/Lu3bs//vz7f335
4U+//vjxw5+/+tkP//G7D9988ctvfvr9n3/53z8//P3Xf/3m/T8/ff2rv//t
6/efvvrP+4//+Pb9d//+9H4an/5+zp/+due73yq+KbEo37p+Evu24m3Nb50L
8S19ZxJ/3DfVekfEvUp8IPAhWZM4I+J8E9/ePew5591g05wkt62/J5+VWNzY
E3+S+W6MyTqtnBC+Kd/Sdybxx93r1BtxzfWBwBMih0S8t/nmctRkXyJ2xTd3
jlIr3Xy6+7rruGu2fHDPJYkxuZOKb0lO3HgVfzbfiGsJn2zhieJnK29JvIk/
tG9J70Dc24Q/JKb0U9O3Sl+m7Ovm310z6cHd3tbNbQv/k3N0z8XNbfJmb3gj
kyX3/2kEx5jWUfKWaGKJP7RvLc1NOSOix0numLJmknNlzSQ/SiwtvaLV2yZc
/WktXKXPxc3JZq6m+a617v9kCceY1nH3dX1u1Xfat2nN5G+ip0t66sRc7E3q
l7tOS8Np4Yziv9sXKDG6uJrkltYflJwTulNiLa4y+dyqvy390/Xfre/E+1Vy
O+WtxdtbdbCVByU/yhx3/jQnqftJT9d6C8n5un0rcT8TPtbKyfRtkqtTPbIy
f7JWL5xgiMtp3Xhb9zw5083+V4l98q3VL7es9aaSWu9qce5dSnTOxDclby3M
n85COSN3nSSHyriSH5r/K9xyslYv7N5hWm+Z/EzOMXk7LS5H6Btub6KME0bg
f4vnJD0d7T/NpZM+dJqTnLXrD9GXtc5a8blVd9w738JVuody91W+fc4h7nby
ZpV1Wu+X1jmJvZLYW/tO67f8b91Vxf8WN0h6zKSnnuYQnJa+t0ndd/l8C1eV
GFtakMsHlLNw/Ul0RXevVo1Q1r8Z/1s6eessNvv0hH+63FiJXdmr5T/Bgaf5
hOZD918Ktrf2dfPT6qEUvKV7E5rnT/OTt5nULMVP1wgenvAE12fXB8V/1wf3
rrr45r6R1pzEEp+f44TmM62fjLuYn/iT+Dbt27rDbi1Laj2tLShrJr2eEgtx
55W43G/dut+Ki+7T3W8TPxOdpPV3chZTflo6xrR+4lvSf92m9xLv62mEVqas
P8W4ebeT2jfFOK2vxJvE0lo/uQ+ndMhpPNHGW5y21Y/T+Xf9meYQOq1iSW9C
vHeiB2+d76ZWpsSl8CLibrfqnVKjT/G0luZG84RpXze3Sc/lntFmz76ZfyIn
bh4SPxNsadU4mgsRvXYynmhNSoyt2JPcJm+zdTfcGFuaeXIumzpkoh+23nWr
Z0/Ows3/ZElOiLs9Ga1LKHsl3COJK6kvLa3MjSX5VvEzWVOZ03qbhKZ3SvdO
4iIwX8Gl1u84rb41OYsk/8T6NP4nms+0pnvWyvqt90jo3i2tLMm58h5bnKr1
W0NylxR/3LiSNVvxttZs9YB0b0toMm7eWpizuX7LWj2Iq2u5uJf4Q2gFhFbW
0rta+XdjV9YnavfN+N/SDdzzncZdbYfobWlNJuEnrXOk129ZqwdJ+kEXP2/u
6ZT5hD7f4odELIo/0xxXf7gB/1t8w+3j3L1aWrTCB6b5im/KeIt33cCRlPUT
o7nKczzpMd35p3o6ojdX1nEtqfVJHWmdr7LvKfzf/N2qpSe3dJXWHUhqDaEv
bXKkFi9VjNZGEs7m4jaxV5K3pDdXxl1raWiJb8n5JrqWk6emz+6cZE3325au
Mq1J5DPRE5Q5hO7k7qus0zICc5IzcjHcjbHFFRN+RbxlxWitIME0l08qd2za
N8kb8Xeyrzs/6cEVTCPq+6Z+m/Qvt/G9yWhtxOVgbs5bfLXV8ybnnryRyc/J
CK1gmuOu0+JpBF9SfCb8THpb9+4RHDup79NeyvrumSp7Keei5FnxofXeFf8J
ruLuq/jc0t+UceVcFC7q1iDljbR47DRO1E1lneRbWjsldOOEhytz6HHFnxaH
d+ug4qfic6KbuXWf4HuTuXym5QNdU9y9XE6bvB3ifSnzk1pP1E3FT2Wc1k6T
OphovC1uRoy77yiJfcq5e17K/OTtK3aK77n+0Jzqtr6GeL9ETlp9GaFznsLe
6Vua/0/jSW6TO0nXgtY7UmKneX5ydol2N+3r+pnE2+rraaxLjNaWp29bPrtv
rYX/ybeb2guhWyqxK+sk2g7dR0xzlG+Td6TEPs2Z7LaeTtk3qdd07UvGXaPx
v3VGLja27iTxjpKafkNPlNTuzb4sWYfoIxKcmdZv5ZDGAcWSezXFOI0nut8N
9/kUp3LXdOe0vk1iofXhaZ2EA9A8geDSrg8tvFLedSv2abzVY7Y0dlrfVvxx
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
Vt5O4Rhx7skbIWr0Jh62dMVTe03W0memNadxQutwv93sxxP9eYprmt/Kc8v/
5M64firzW28tuUu0xt46d5r/t/5OfFPiJfKzudfT3LvRqstEv0D/HqFllDVX
t5m+fY63MHmy1u9Km79BKLEn99P12bVE40rWdNdp6VE35I24q7f1PooP098u
T5vG3X7/VG1tmfte3HWU+cl9S+5JovUld8DNm3I/idy6eaB1G8VamE/07G7e
CK5C7OVa0i8nenXSLyixPMdP1VbXWj2Li6st7TG5J0mNm9ac5id3L+GrNI8l
NGpCw2xhPtGbuLzFxX96Lzf253ir/ra4k+KzywM3a6tiLo4l427+k/pL1+7p
21bPmMS7qbET6xP8fxq/LW+vPsc194yec1rcvtX7K3vRtTUxl6sr49P6yfm6
cbVq9/Rtq+64d29aJ9HcFJ8TDaG1fuvbG/L26n8rsbdy6GIp3fsne01znFym
puBYgvlJf+HijBuv4luCt67e1epZXB82cSxZv/Vtcm9bvtG/TdB/b+J/S9ed
1k/er7KOYqe0oM1zd3H1OU5zD1p7dO+wiz9J30rj2A34T9yZhLu+pb9b+XTz
1tpX4fAuV9y8864l+pib/wQrWrltxT6tk9SUyQdlr0Q7SvCZxgqiNrXuDK3X
vcrfSoxKTogeTZnf0mo2c0IYHSOBFa38uDis1CkldiUuF2eS3iTJOYEVLY7t
xkiv6d6T2/5u5ZPo0RRr9RHK+u63p/h/631N60/fEjVUsYR7EPx2Wl8Zb+nw
ST+ejCv5adWLU2u2tI4bMD+Ja/q21aMpeyVzlG9fUf+hdWMaK1xzY0kwWfFH
uf/Ke3G1NaJGbGKvMj+5t8maSW6nu3GbtnNbj3bKWrXsVfDfxSsaK5LYFSx1
MTnxoaUvJRom3VPQ+O/WwdaaSf2dziU5a0Lboc90EwNbdqrnTYzg8KewwjVC
80+0+lY/nuhRCeYoZ5dg7235JHj15v1xtZ2EIylnuvn2W0bUstvwn+AqBFYQ
8SqxtProZB33XiXrJLzRnUOfl7sXwatbuiJ9J5Pxaa9Wj3bKNvXG2/xPuIoy
7s5pxev6nLzlVg/S0hhdjE3WJ/pBIp+tO+Ca64PiW5KTybdpnK6hNxitN27i
f6tHdmPZ7AeJftblPMm4y9+SPBB5JvrBBK9a3KN1LtOaxPouPifvt1VDb+sF
aM2NjrfVI7t4onxL9IMtHt7q75RxBfdaeVD8cddv9UrKHOWeJPczwTrFWnzD
tZZ+S59pK97ECL1xGifwP+mdk3ue6KJJP5joG0S/oOzr5iHpK1t3zI0l8ZPQ
wFtcjtCu6V64VXcSvnQKDxO7gU+2/E/eVEs3VvZ110/uW+t83XiVPCS4SmCU
Esvkj+Kny0MSztDSQlvclTg7WptVzivpxZJ8JnYzn3T9JzgSoUlOPiTxuhqU
4meiBbmxu77R/XVLEyM01WkvZdzlbO6+ihFnR2iziv8JztyM/7fxycla76i1
jmIJtiRxKeMt3Et6qESLIPQE9822MJ/Q31z+4OZN8Y04O5fzuPl36+lkNLa4
djOfVHx+jif+JOsk/ieYluSZ6N3o2pH02t4JZXVT8ZnmSC1tLfFhWpPQRlq4
6mJgi/Oc6gVu5pOuP0pvknCkxM9pL2XcvXtu/5v45vqpfNvyM+GQp/rfFgdW
9t3EHFd7aWFmotclMd6g7Uz2KnxS8T/pr91vWz67OaQ1yckH1/8W7iV+trT0
U/0v0b/QfMb1h/gdhPCN4A832KvwycmI+0PfySSHbr1OuHricwvTXOxqaRrE
fU7eVII/NJ9x/XmO07+DEL65a96M/6/CJ5V1WnystabiP6H/uJqkiw/unUl6
zAQfWpw5uUtKDgl8fhWOnYxv+va0RMNkvPYs4RubfFKJxcWiyYfWmq7PLs4T
mrzim4JL7vqurpKsqZyL24/QuXXx+VU4tsvBaCxtYdGmz4kpb+0Un0xqa0ub
InpzF1toTZ7o+6ZvlfGWn0quXGvVKSXGFj7fxrGTHnAT/1ua2M34T/CNhPNM
8919k/UT/1v3JPnWrXfKOlMeXB+S+US8rrW0wWSd1jnewLFdrtV6a5MRNfE2
/Cf07RZPm/Zq9bNKLAk/39QnJ5/dvmZaJ/l9gX7XrXgTc+95q04RtXWTY7fw
ofXWkvy01j9ldP+eaCaJbjOto/jpztnUTidzeWOik7f0nNYcN95pTcVaGuPk
J6F53sCxEx21pbsSviXr+1nsWCted46LPwne0jxc4b3Evk9L7hLxm8LNb1yJ
0f3WrUEK3rY0TyWWUxzb1Zw3dVdir5vx34034R7Je1HGibvRylt2Yh1zOSp9
7ptvvGWEzklorXSN9rLW+/+dCN2V3us2/E9ibM13fUv8b3GYU/u2zMWTVh2/
4Y0TeZvmtOrmc/1WHUlqdMJ7Jz+J+9DScom9TuF/wiUmS97jJq+Y9nX93NyX
thZuu3ttvvFNS3D1uU6rF1Nw+xTHJnygfUv2ugH/n6b4n/SPig+tb5W4CP6/
uW/L3Jy3dAZlTfqN09bCz0TzdH1z/Z/8VGJJ7pubt5ZvyW9hyXzCEtxOOIa7
phuX4gNdp4h9CUtieZqLCS1t8OZ8PscT/ExyRbwpZXyy5L4lfKOl1yXzE98I
S3A7wQRlzQSTFa2SwH+6PyKM5gDP+YRufFs+n5bo80mulDuvrJPcbXdNBfOV
O9a6zy5uJPh56t4SPfWpmpjoBq1aQ9wT2ggO0OL2yr43vCPXNxf3Eo1omrMZ
i+Knwt/c36Pd+5zUa3fOqXtL1PTpW7omuvgzzSF+427Noa3FAQhur8x/lXrq
4pWy/nOc+H02iWVak/jNd/M39FZNvA3/W5wqwZPWvi1+ovhG3xPCWvdTwQfC
/5t/C25hVwtLn+NET038BtHad/KB6DsSzfnU22/dQwJPkl7yOYf4PZq+J4pv
ibXqVPKbZstndw5hCScnsNTtKVqxTPNdn5N9W5ok3YOcevt0bd3kw0nOlVzR
73qTM09xET01EcvN/dTTWjgzfZvU5c1ePqlfrfuW9FP0+918+3RtJbixyxNa
OZmM5g9EjEosrbo/jRPn9Sr91DTfzXOCey0up8xR6pE7Z9pXGW/1CwROKvmf
5iTWqq20HnLqLU8xEvxh+paORfFZ+XaaQ+D/q/RTrbffWjPBqJYG6FpSCzbr
qfLtKeyafEhqK43zN7zlVt4I3tWy5I1M5nI5d83Jtxv6qVbtczmz64+ryWzi
XqJfufoYoS0kv7nQluThNsy/oa9PuMep3y43f4tRxl1r9a2EtWpfcn+UOQmu
urEr8Sq+tXrqpJ4m/t/G/10t7gbMv4H/T3kjeBqN/y39LdGKXZ+TvvU2TVXx
k8ClaTzByQT3CO3dzcNmf+qu37IkVzdoO5tvecqDMj75rMyhOUPrjOg+YspP
Ums2+6lkDqGbub2bgpOJTq74kPim5IHA5BYmtKylfd2g7WziP81pn0b3O8SZ
JuvQevhmPW3VQeIOtLTuFvcm3pGCIe7vBcq+yl6vqPk8v22990TbOZXbU5zW
neNacqbu+nTPTsxxLdHTFN82+6bpW9fPTd8ITVvxf/LnNs3f7Udc/wltx9XY
0xw5/hCclqgvyl7T/KQvm9Zp9XrE324+lRiJ+0/0TW6MLf0k8a3Va7dqGd2/
u+be+YSTTPOTb5PxlhG/XzyNri/TXi2N1D1HZU7C2WgNyo2dyNsmLtH3c/Nd
J5xHWfMGvXraN+HSLX1S+dbllkRuE51cWcddk+hPE27gnqOreyf538zn5Js7
p8Xzn9bCJSKft2EmoUGd0quflnBppe4neZj2dWsBnVuiH9msL9N8Jectfd7F
B7fWtDDqlHbX8qflW5Jzxf/bMLOlQdH9phtLS6dt1YvkjiW8cTOH7r3d1LsI
naSlSxNarnuH3X2Tt9+quS3f3Jy43yaaHo2ZrTxs9puT0Zp/K/bkjrXmT+bm
sDV/muN+q6zTqgWn8D/RqVo+tO48gXuEPuPeW0LTc/PgxujmwY1lWp+Iy+Ue
dOyEdkT0jEqu3H7khhhbWsr07Q38X9kr8aH19pVY3G9b+pLbyyd9vTuH7vHd
d73ZvyuW+EPETmhHtBZE9yabMSZ6VNIDKjkheockJ0Q9nfZVxt05kw/Km030
IiX2xGj+T9x5Qi9VYnHv2CY/Udah9cnJEq6e5JyO8b+D+chM
       "], {{0, 128}, {128, 
       0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2r+OVVUUB+AJGOMz0NFTaT2gL0AxNLZjIhXBBE2Ebl5AS5/B3pew8I1s
hMSChoTJWb+1177nKyAfk3Mv5+69/u1z5/EPP928fHB1dfXzV+//urn99bs3
b27fvfjywz9+vH31zdevHr7n3f9/PvjfL548++fuz6e//PHX9aPvf79+/tu3
z16//fvpx/74mk9df+Saz7mHI/dWdX3V/STWp/Oa+742sYZHrj/iVbmQ3pfO
vau6JrGnVT+vyt+qWErEwKp6W7XOic+VyNPOmEnUxkTcpveiM2YSPXRV76ha
n85ekL7/xNxy39yZluPpmE/0l868S6xPIr+q6nNnjidyc9UsnXbnbLwqN1fN
nFV50bnm0/YlHdvTcnDVeS0RJ6tmgAk5Mq0/pvta1WeZfE6cMIek/69EzZw2
EybOeok4mRDzidljwr6n63ki7zprfufsN7k+r5pDpvW+xPukY37y3NW5JonX
Js62nbGartXTzsirakt6pp3szvlz1fk6PW+k13zVunWuSTqGO+fkzrq3an+r
7nlazEy4twl1L9FPO+fqRN5NOF90PpeYtl+JOSTRO9L3PKHXrOqVE/rg7k7M
mVU1bUKtSD/f6Owjk9dkx/5edY5I1/lEf5w8tyRiY8J9rup36dyZUE8SZ590
jKXjNr0mu/T3VfG/ex1YNQsdiY1pdWnaXu/Y34/EQFWt6Oy56Zn2yM8n7HXV
+nfu7+Q6UNX7OtchfUae5lV9bXIvWPUcoDMfj+Td7n0/UYuO1KtELe2M+cQM
cIZ5e0L8d8bbhP6eWJOq3D/SR6ruLV3DJ+x11fonrt9lBus8C3f2wUt1Yv2r
4mRVf6/qQVU1Pz1Prqrhk/t+51yUnhOq7iFx3kz3C66dbdL1P/3azpytypdV
tbqqhnfez+S5KLF36RkssSarzsWcq2OX6glxnsiLVfVqwqybnot2mV3Ts3rV
PladNfh43z9Dn50wp1X1nUT9T9fJCTHWea5Z1eOqela6L3TOKmdwYqad8LnS
ebEqNxO9Jv0MrXOeTNx/ImZWfd6qXp94/pPoNZdao1bVlkvtuVVn+c6+M6HO
H8m7CX02EecTYinRC9K9Pt2DJswV0+I2cZ6dnL+JeEi8dpezWDqXJ+TsqnPf
tM+Y6GuJfjFtbafVtMQZanL+TnZi3XbpBZPj55Jmm8lxkq4zu+9ROh871/bM
e3FkDauen0zL8XQ8V73/tN60Y19LPwPUC3K5WXVGOLNXzTmd9Wr3eWByb9q9
ryVqSPr6S3Li+ZhnbrXrk17PCWeBCftyNk/oa4n+UlX/zxafiZpz5vWsiv/O
HLFfPKHmVD2jTvep3Z145tO5L7u7cwabcN5nXlXbxfDnr8O0a/j4/k447zPf
t86nX3tmr/rO0R7176k152m+73PII57weSe46rx/5Bp7lNvTxPXM6Vid/J3y
7k5/J975+1qc6wvMq2pRov6fubYk1mGX92TmOU6fT51/c+uwy3sy815W5+es
84Tf/7dfzKzO969t5+//2ztmTvcFzq3htPdhZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmbmff0fU+CqUQ==

       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztXDvObkcRvAIJsQ22gGOuRUTmwHgDF8lElpCMBIKIZbAK7wISIhIiIlIk
1oCtS3CkT/PT5arqx8yUZOu7R3Nmenpm+lE95//Jr37z+a9/8O7du9/++Nv/
ff7h9z//+usPf/jlj777x5cfvvrkp1/98Nuff/rff9/9/vt/fvHpl//+7NO/
/fF3P3v+/sef//r+L1989v6bf/3zfeR51bvP553fjcw9ohO3bpn+M/Wjar+S
QbUf0Dmq9ozqPFbtAdVYjnV06LbD+r67SMf0tXDLjPbPyKOai3tN3Wc5U+do
P6o2KnmYPpnfjnk9/QU3y4u3ENFz57WIxEiZ/TPyqObiXtPVu6qznKlztB/V
b4ce0D6fzxmb79ifFxcRRPJNd/9obl41FwciOT7aZ6bOI+M6uBGVHlDdPrFa
o4jNn8gPXOwH9/7M5AGmnLWInWfsVRX3gtpDNE52yBPp5wlHHtE5PrnYDwwn
wPRfxQ90O2uorYvYqym6ZfhwlTyOvR1519HPxQWKTN7VfV+Cubfj1vNKJ45+
MrkXxkc8n6N8eOeaAraK1/5f1AG1FSr+wWGXIjJMqQWgQHmkTN1GbH5E/kid
oqqmcO3/xUSgvKgqN1/1qbo7gY77/zXVGyq7rdLt6l2G73LspdW76Lyu/b+Y
AiZPd/Cuz+fMmWVkm3ju0HtQKPeC6nYF9/0BdC+t+kfneO3/xUSo6noqfpWJ
x9B4dRWL7nrumLmj9jYyropjUeWnkbFQ2SLzcvRzcRFBxA44uFbU/qA+BeWT
n9iJC3qC4UxQHa7GVXHsK5lX7d1+6tr/i4lw3AlHc+1VP6jfUfV/2hlkOBym
tsL4WTSWQG04Osdr/y+moIrDicT2qm9w0P5PuBfEAPW/qtpQRAZU/lWbzHsO
7n4uLlbI5HAi9sFhex35AirDTkBzQFUsserfsU8YP3Xt/8UUMHfCmbGYe4mq
OT7B1BpQeSaCqbk8+2Hu2zNxu2OObs7w5P124QMTa636iYyF9umowTHvnswF
oTkU49NVfDtTU676diwyL7Sfi4snmBw2s07HnClV/S4yF1QPE6H6BgqtGaG5
G2N7mZzFUde+9v/CAdXZdNfpVlDFlui4p3FBqhxKdY8UzSUdtVr3t2Oqdy8u
VmDOJsPbq+57M/7LwQ/sejaZ+aru4jLtHfXclTzu/bbrHrvIh6OWqqoprID6
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
nyPPmbn/F8Eiors=
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}]}], "}"}]], "Output",
 CellChangeTimes->{3.77418902086278*^9, 3.7741923047567244`*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"77cff7d0-289e-4c8b-b0d8-8779493a7d7e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetMeasurements", "[", 
  RowBox[{"netECA13", ",", " ", "fullTestSetBigC", ",", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Accuracy\>\"", ",", " ", "\"\<Precision\>\"", ",", " ", 
     "\"\<ConfusionMatrixPlot\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.772718835348043*^9, 3.772718835872539*^9}, {
  3.773157558742169*^9, 3.773157559675911*^9}, {3.773291266369521*^9, 
  3.773291266873107*^9}, {3.7733482373548822`*^9, 3.773348237428149*^9}, {
  3.774188635136705*^9, 3.7741886352042837`*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"cff6d89c-4b91-468d-a49f-6e75a783826b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.6954101562499999`", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "0.6947637292464879`"}], ",", 
     RowBox[{"2", "\[Rule]", "0.6408589997174343`"}], ",", 
     RowBox[{"3", "\[Rule]", "0.636842105263158`"}], ",", 
     RowBox[{"4", "\[Rule]", "0.8026396562308163`"}]}], 
    "\[RightAssociation]"}], ",", GridBox[{
     {
      RotationBox[
       ItemBox["\<\"actual class\"\>",
        DefaultBaseStyle->"LabeledLabel"],
       BoxRotation->1.5708], 
      GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQW3ilXflKpff29fJSdovS39vLd8YdnrnjvX1+yQWZ
kysf229oyuR+2/jcfsPKD3MtWN/Yv5GedVvA8JH9iat+F2fUPbNn4qy5van7
tf25M2Bg75Tw9ILS7bv2DGDwwh6X+W/N93+1SntjLyxnY1Le+tZ+wzKZVcuv
vbPv8DkU+6ngln3EPuWufqHH9gGvCyP1P760/2P9cOf2wOf2LzvLF5uyvbKv
ms5Wp2T81r7kO++RF+ov7U/+fKj4yPO1vZ/9H7Pzp97ar7rxRUQ24rL9v9Qt
b8wXPrCfvp1vp+qZF/YWXiYhWTav7b876CiX7Hhjb+M49+XUsnf2h5ZUf3+g
9cr+1OInU9T/vLb3v8UmFin3zv5/yansGPWn9n+vuv6c0fHCfu3jyTH+DW/s
+W6lRvEKPbPnc2h4qa710l6tYasfy5k39voCFyy+e7yzP1HN6nzs4jt7C9YH
zglF7+1tn+poGme+tRc7Ybd8j/k7+w2O6p2GWu/tAU9+wc8=
        "], {{0, 0}, {4, 
        4}}, {0, 1}],
       Background->GrayLevel[1],
       BaseStyle->Directive[
        FontSize -> 7, FontFamily -> "Verdana", FontWeight -> "Thin", 
         FontTracking -> "Condensed"],
       Epilog->{{
          InsetBox[
           FormBox["544", TraditionalForm], {0.5, 3.5}, {0, 0}], 
          InsetBox[
           FormBox["525", TraditionalForm], {1.5, 3.5}, {0, 0}], 
          InsetBox[
           FormBox["13", TraditionalForm], {2.5, 3.5}, {0, 0}], 
          InsetBox[
           FormBox["23", TraditionalForm], {3.5, 3.5}, {0, 0}]}, {
          InsetBox[
           FormBox["223", TraditionalForm], {0.5, 2.5}, {0, 0}], 
          InsetBox[
           FormBox["2268", TraditionalForm], {1.5, 2.5}, {0, 0}], 
          InsetBox[
           FormBox["133", TraditionalForm], {2.5, 2.5}, {0, 0}], 
          InsetBox[
           FormBox["184", TraditionalForm], {3.5, 2.5}, {0, 0}]}, {
          InsetBox[
           FormBox["8", TraditionalForm], {0.5, 1.5}, {0, 0}], 
          InsetBox[
           FormBox["62", TraditionalForm], {1.5, 1.5}, {0, 0}], 
          InsetBox[
           FormBox["1694", TraditionalForm], {2.5, 1.5}, {0, 0}], 
          InsetBox[
           FormBox["436", TraditionalForm], {3.5, 1.5}, {0, 0}]}, {
          InsetBox[
           FormBox["8", TraditionalForm], {0.5, 0.5}, {0, 0}], 
          InsetBox[
           FormBox["684", TraditionalForm], {1.5, 0.5}, {0, 0}], 
          InsetBox[
           FormBox["820", TraditionalForm], {2.5, 0.5}, {0, 0}], 
          InsetBox[
           FormBox["2615", TraditionalForm], {3.5, 0.5}, {0, 0}]}},
       Frame->True,
       FrameLabel->{None, None},
       FrameTicks->{{{{3.5, 
            FormBox[
             RotationBox["1", BoxRotation -> 0.], TraditionalForm]}, {2.5, 
            FormBox[
             RotationBox["2", BoxRotation -> 0.], TraditionalForm]}, {1.5, 
            FormBox[
             RotationBox["3", BoxRotation -> 0.], TraditionalForm]}, {0.5, 
            FormBox[
             RotationBox["4", BoxRotation -> 0.], TraditionalForm]}}, {{3.5, 
            FormBox["1105", TraditionalForm]}, {2.5, 
            FormBox["2808", TraditionalForm]}, {1.5, 
            FormBox["2200", TraditionalForm]}, {0.5, 
            FormBox["4127", TraditionalForm]}}}, {{{0.5, 
            FormBox[
             RotationBox["783", BoxRotation -> 1.5707963267948966`], 
             TraditionalForm]}, {1.5, 
            FormBox[
             RotationBox["3539", BoxRotation -> 1.5707963267948966`], 
             TraditionalForm]}, {2.5, 
            FormBox[
             RotationBox["2660", BoxRotation -> 1.5707963267948966`], 
             TraditionalForm]}, {3.5, 
            FormBox[
             RotationBox["3258", BoxRotation -> 1.5707963267948966`], 
             TraditionalForm]}}, {{0.5, 
            FormBox[
             RotationBox["1", BoxRotation -> 1.5707963267948966`], 
             TraditionalForm]}, {1.5, 
            FormBox[
             RotationBox["2", BoxRotation -> 1.5707963267948966`], 
             TraditionalForm]}, {2.5, 
            FormBox[
             RotationBox["3", BoxRotation -> 1.5707963267948966`], 
             TraditionalForm]}, {3.5, 
            FormBox[
             RotationBox["4", BoxRotation -> 1.5707963267948966`], 
             TraditionalForm]}}}},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{All, 36.}, {36., All}},
       ImageSize->300,
       Method->{
        "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
         "RangePadding" -> Scaled[0.05]}]},
     {"", 
      ItemBox["\<\"predicted class\"\>",
       DefaultBaseStyle->"LabeledLabel"]}
    },
    BaseStyle->{
     FontFamily -> "Verdana", FontSize -> 8, FontColor -> GrayLevel[0.4]},
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxSpacings->{"Columns" -> {{0.5}}}]}], "}"}]], "Output",
 CellChangeTimes->{3.77418913261523*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"10a83680-15bc-4a50-98af-5daef0c722b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"entropyImagesBigC", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{"Keys", "[", "fullTestSetBigC", "]"}], ",", "500"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"entropiesBigC", "=", 
   RowBox[{"netECA13", "[", 
    RowBox[{"entropyImagesBigC", ",", "\"\<Entropy\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"highEntBigC", "=", 
   RowBox[{"entropyImagesBigC", "[", 
    RowBox[{"[", 
     RowBox[{"Ordering", "[", 
      RowBox[{"entropiesBigC", ",", 
       RowBox[{"-", "10"}]}], "]"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"lowEntBigC", "=", 
   RowBox[{"entropyImagesBigC", "[", 
    RowBox[{"[", 
     RowBox[{"Ordering", "[", 
      RowBox[{"entropiesBigC", ",", "10"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"highEntBigC", "\[Rule]", 
   RowBox[{"netECA13", "[", "highEntBigC", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"lowEntBigC", "\[Rule]", 
   RowBox[{"netECA13", "[", "lowEntBigC", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7727190003310432`*^9, 3.7727190300142097`*^9}, {
  3.77306943758751*^9, 3.7730694509663277`*^9}, {3.773158502088438*^9, 
  3.773158510047945*^9}, {3.773291269588808*^9, 3.773291277379661*^9}, {
  3.7733482430458937`*^9, 3.773348252369199*^9}, {3.774188641350009*^9, 
  3.774188648929162*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"f917767b-8338-444a-a928-2457a298404e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1zGqpkUTxfFBQUxNjTQy13hGzMyE0cxoBAVhQBhFMdNduBRX4gbcgStw
BgxMZnjf+9TpOqfqH3wfV7hzf6er6+mu/vCbH55+99ajR49+fPfl/z199stn
L148+/XLd179x7fPnn/y8fO3X/7423//e/Xz94//fPzHzx98+sX7H336/5//
/un3J+99/s+Tr7/668nrfn7d79/7d173b2/5uerv3/s76ppcyaZY15XMXXVQ
9J4iQ9Wedn2bVb2h6Jl7M5/8prr2rupbq/pe1GfCybNUURP1v61aV1Wdu9ai
Pp8Vdej6NrvWe+XsPfktq/f0ZM+o5wS379ehJup/W7WurrfVyVmiqycVP1fl
PLnek/eR2zel6Bn1mXxyX6rcrneHus/V65q6lq6e7Job7z0fTq5XfR91nUvq
veuqZ9e+nKyhuibO6zr5zZ5cS1dPKjKrz5yTd9PJs/fkjHTyrVGVQT0nqL/f
rhlP8abrWpf6m3WewRTn88m5Ud2TCuvknOb2Fjj597vmBIc7t6smVWfvyRpO
WovD+aw+w6vOBPUd6vZdd/Xhyb/fNSc434nqmlR9Iye/nUlr4S1w5v3ldm6o
z970c89hTnA4z9U1vPKNnFzXpLWoz7H0t0BXzRO/60nnnsOc4HwnVtVQfa4q
vsf0tfAWqO2BbTOA87mkuPed5wTnsyJ9Fpq0Ft4CD8usrrnbPirO3sRzz3lO
cLtzJ81Cim/WbY9S+qHrrkn8m4lnr/O55zYnONyJ6u/R4Ruv+mYdeiC9HybN
Hon7qDh7E8+9SXe6w3fqUDfmOs9+6HoLpPxNZ8v5XHI4HxL3RTH7ddVN8c2m
9IBzP3S9BZgBes/elHNv274krqXqLmCum/0WUM+KDrV1sJzPpa5ZxcGatJaT
b7cNdZv6FlBkcKttipV+7m3bl5S1KL7ZDXVzsJzvlPTaOljO59Itf4d98VyL
4pt12JcNlvOdkl7bFMvh3EuplcO+OKyFuW625XCnTK2tg+VwLt0787MvvWtR
fLMp+7LBcrhTptY2xerqAfVsOXVf1GtRfLOT9mWDpb5T3Na7zVKfS1W94VCr
lH25shb1PZK+LxsshwxYnjOneq5Qn0VT96VqJlfcIxv2ZYPlkAHLc+bkLeC5
L1V3Afuy03LIgOU5c56cK1Jq5bAvVTM/+4LlnAHLc+ZUz/9utXLeF8XcnlIr
rFrLIQOW58ypmCvSa9W1L/f+juKOcK4VFm8BrDPnrXr+d6tV174orEm1wqq1
HDJg+cycifnTLcXcPrVWWLwFsGpnTvVbgH57WAb1HZFSK6wzlkMGrF7L7b5w
rpXi+1LfESm1wvKxHDJg6Sz12U6/na+hc34sf8shA1avVfU36bczNXTOjzXD
csiApbPU9wX9druVnh9rhuWQAavXuvI3r/RYYq2uWOn5sfZYDhmwdFbVfVHV
V861umKl58faYzlkwOq17v2bip9TanXLv03Mj4XllgFLZ1XdF1V95Vyr9L3G
wto8m2HVvgWq+iqxVun5sbA2zGZYDzvbeQu8+d+m7zUW1tTZDIu3QFWtHOqP
heVmOWTA0llXZuD0t4BD/bGw3CyHDFi9VtXbwa3fUuqPheVmOWTA0llufVVV
q5T6Y2G5WQ4ZsHqtxLfApPpjYblZDhmwdNaV3+96C0yqPxaWm+WQAavXcnsL
ONQEC2uz5ZABS2dd+X36CgtrnuWQAeuMpXg70FdYWPMshwxYtdaVbPQVFtZs
yyEDls5SZKOvsLBmWw4ZsGqtK9noKyys2ZZDBqxaS32201dYWLMthwxYtdaV
bPQVFtZsyyEDVq2lPtvpKyys2ZZDBqzbLfXZTl9hYc22HDJgXT+fT57t9BUW
1mzLIQPWm62TZzt9hYU123LIgHW7VZVTcV9sqD8W1gbLIQPWw85bxdlOX2Fh
zbYcMmDdblXlVNwXG+qPhbXBcsiAdT4nfYWFtdNyyIB1u1WVU3FfbKg/FtYG
yyED1vmc9BUW1k7LIQPWm3+Ht8C8vcbCcrYcMmyzHHLSV1hYOy2HDJsth3uH
twAWFpZbhg2WW076Cgtrp+WQYZvlkFNxXzisCwsLi5ktxXLLSV9hYe20HDJs
sNxyKu4Lh3VhYWExs6VYbjnpKyysnZZDhg2WW07FfeGwLiwsLGY2Byslp/q+
cFgXFhYWM1vXjJ2Sk7cAFhaWW4ZEKyXnyfvCYV1YWFjMbGorJSdvASwsLGa2
WislZ9d94bAuLCwsZjbeArwFsLCwmNmqrJScvAWwsLCY2XgL8BbAwsJiZqu1
UnLyFsDCwmJmu26l5Dx5ttNXWFizLYcMDlZKTt4CWFhYzGy1VkrOrrOdvsLC
mm05ZOiyUnLyFvCsIRZWouWQwcFKyVllKe4Lh3VhYWExs12xUnLyFvCsIRZW
ouWQoctKyclbwLOGWFhTLYcMvAXOW/QVFtZOyyFDl5WSk7eAZw2xsKZaDhkU
VkrOLou+wsLaaTlkUFspOXkLZNUQC2uq5ZChykrJ6WDRV1hYOy2HDAorJSdv
gdwaYmFNtRwyXLFScrpZ9BUW1k7LIYPCSsnJWyC3hlhYUy2HDPdaKTmdLfoK
C2un5ZBBYaXk5C2QW0MsrKmWQwbeAuct+goLa6flkOFeKyWns6W4LxzWhYWF
NXtmS8mZaG3uKyyszZZDhluslJwpluK+cFgXFhbWvJktJWe6ta2vsLCwfDJc
yeyQM9FS3BcO68LCwpo3s6XkTLe29RUWFpZPhpRaTbIU94XDurCwsObNbCk5
061tfYWFheWTIaVWkyzFfeGwLiwsrKyZLb1Wk6xJfYWFheU/syXWapKluC8c
1oWFheU/s02q1SQrva+wsLD8Z7b0Wk2yFPeFw7qwsLA8Z7aptZpkJfYVFhZW
1syWXqtJluK+cFgXFhaWz8y2oVaTrJS+cq4hFlaixVtgp6W4LxzWhYWF5TOz
bajVJCulr5xriIWVaFVl2FCrSZbivnBYFxYW1vmZzS0/Vu3Z3tVXiTXEwkq0
rmRwyI91/mznLYCFNdu6JYNzfqzas/1kX6XXEAsr0bo3g1t+rPNnO28BLKzZ
1i0ZnPNj1Z7tJ/sqvYZYWInWLRmc82OdP9t5C2BhzbZuyeCcH6v2bD/ZV+k1
xMJKtHgL7LQU94XDurCwsK5b/wLs0rMN
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1z+qZEUYxuGLgrgNt6AYesHQxGBMBKMrONGAMAZipplbMHYfxkaCuAkT
16AzYDCJ0Meqr/qrep9AeWboPnNO/fmd6ve+/PrZ87ceHh6+effV/549ffvx
y5dP3332zus/fPX04oP3X7z9it//+99rf/LTn49//fbr4/PP//7oTf/4+6eP
f3zx8+MvH/7wWPH3t/iW7775mf/y1e/OGpOr3736mZG5mDVWs75b8VxX11jF
vc1aD7PuYdY8jnymohsj8zhr7d3rfkYaO9LGlffW4Rkr5rFi/FeO4awxn7Vm
KvZUdR+q779i31WcnWY9Y/U+rT7z3Gveq9dP5/50eHdX7Kl7jfOshlS3ZWUf
qrtR3YSV8zsy5ifNafW8rzy73utdcK/mV6/DDmNb/btj5Xt25bzs/i5Yud7u
1Z9uc3qv9b/y95rm1z1jh3dBxe+FXeZl5Xuw4nxY/a5fucd3n9MOnjXOs9bM
7s0fOT902I8n9X9kXmat+YpxuHr9butq1nOdNKcdXP2uPKn5I+tzVq86u8M8
zlrPI+/06v6PXLNb8yvW2C5z2tkV54dTx3PlOaSzO89pdVsqnnflGbu6+dXP
ONLtlXPa2Zq/Zqx27/wu/a9Yh9Vre9Z5deXamzU+1euq4p53t+bXjdWsM88u
7jzXFWt15Rm1urEV8179e2HWGkg7/2v+mm6kvQu6zfusex7ZIx32abf1tnKd
VIxbhy5pfp9uzDoTdtibu+zrkbXX7TOz9ukua6lb/0f+vrM1f243qhu+y/7t
sK87tHTkvV8xnh3WQLd1MnIPI2e5Hdd8WvNXnjES3GFtVLR01tmyYi3t+C6o
XicV3e78LtD8PuO/yx7ccV/P2psjzzJrH1W8d3Z5F1Ssk4p5qZ5rzT/D+r++
/9Xt7TAOs95r3dZkxfhUjMPINXdpjub3mYvdXb1+Rs5vK+eu+qy++zqs7n/F
+7HifjT/DO+y73bZ1xUdmHXemzUOI52pOOuetE6q5+hea3vWmGu+/u+4r1ee
CSv22kjDd29+9TqpaN29+jlrfjVf/3ff19321Kxnr9i/HdZAh3VS0cPq87/m
7+vd9+Mu+7pb869ec5dn2XGdzPp3K9qr+Wd79/3YeV/v2MlZ74IOz9J5nVSc
7Vd+RvPP8El7s8O+3rH51ffQ4Vk6r5NZ7+KKz1S0QvP7+NR92nlNJnTyVFec
/0euP+szFb8LNL+/9WfN+tT8MzyyTm655qyuVq/hDu1i/e+wrzU/xxV7Z+W6
6tAc7mNdmtt/zT/bI2tgZL1VvI869If1v4NH+q/5Z3uk7bP6PKvb3gWs/3PP
UcYw0yt7O+u7s56Lz7B2/b+9nDxWya6Y9w77uuK3Bvd3ctNm7YsOz8J7ubq3
I9fU/xxr2vg673D/vJf1ljs4uf8jezB53Fj/+Qwnd+zqOBg31n8+yckdGxmT
W77LrP/c2Wn9r+i2dwHrP+/ohP6PjMnKa3KO9Z87+NT+X91fV/fgyDU7jA/v
tT6Z9X98f93y+ZHOz7ofPtv6zx2c1qhZY3L1Osz6z92c0P9bnqviPH/qeLL+
8xlO69XVs/rVzySMIes/n+GE/s8ah5E922EcuI/1nzv41P5XnO2rP8M51n/u
4IRGXX326s8w6z938Kn9n/W8I5/xLmD9584+qf9XezsyPrP+rQ7jxvrPmd69
/yNN3v2avK/1nzt4x/5fvc+r5/PO1+QzrP/cwSf152qTZzW84pp8tvWfO/jU
Ll3dX1e/O+uanGn95w4+tVGznqXbdfgM6z93sEYx6z9nWv+Z9Z8zrf/M+s+Z
1n9m/edM6z+z/nOm9Z9Z/znT+s+s/5xp/WfWf860/jPrP2da/5n1nzOt/8z6
z5nWf2b950zrP7P+c6b1n1n/OdP6z6z/nGn9Z9Z/zrT+M+s/Z1r/mfWfM63/
zPrPmdZ/Zv3nTOs/s/5zpvWfWf850/rPrP+caf1n1n/OtP4z6z9nWv+Z9Z8z
rf/M+s+Z1n9m/edM6z+z/nOm9Z9Z/znT+s+s/5xp/WfWf860/jPrP2da/5n1
nzOt/8z6z5nWf2b950zrP7P+c6b1n1n/OdP6z6z/nGn9Z9Z/zrT+M+s/Z1r/
mfWfM63/zPrPmdZ/Zv3nTOs/s/5zpvWfWf850/rPrP+caf1n1n/OtP4z6z9n
Wv+Z9Z8zrf/M+s+Z1n9m/edM6z+z/nOm9Z9Z/znT+s+s/5xp/WfWf860/jPr
P2da/5n1nzOt/8z6z5nWf2b950zrP7P+c6b1n1n/OdP6z6z/nGn9Z9Z/zrT+
M+s/Z1r/mfWfM63/zPrPmdZ/Zv3nTOs/s/5zpvWfWf850/rPrP+caf1n1n/O
tP4z6z9nWv+Z9Z8zrf/M+s+Z1n9m/V/pfwAeYrRn
       "], {{0, 128}, {128, 0}}, {0.,
        1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztmLHKXVUXRYOC2ApWWtlbmT7BF1CITxBBq4AQkSBY2Pkavom9+Aq+ipiA
hU3gu+w15hzr3BT/zzHce+7ea60551jfZ9/+8Oz79x49evTjh6//79nzV1++
fPn8528+ePMf3z1/8fiLF++/fvz1v/+9ef74t3+evPrqp6d/fvL3k6//+OvJ
748/f/rRL58+fdu/v+35/59/yPNDvnvrZ07eOfWeqXqe3P0hv3tSz9a/0/Wn
63xr32/9LXqWbPOQ/HdDTU70QvswPZO33ot+nqr5VJ5uqZuh/q0z0J5MsBkx
n1ue6Tonz5ycW/q7yZq3NEjwiW1W6fpfyQda+/KWLE7W1sCuJ15Kz4O5j0l9
0b2YynpD36fqZvPPJPO84w2utq3fmvoblGGukrUlZnVjra6qi1a+T93X0Mer
8kZyr7mHv0VcVbNTO5ShVlfVRYufk4xEzGErg5J+MuWBrZmh9UUwwEbNErNh
8+Ttutj49wTDHLY023rnrb9lm6vk3yLuubYtDqE9eYoTWr1r1SE5YzTHJjXb
mu1bf4tmS3pOaO8yMB5R21bu0Nqk+aqVO3QdaJ9p6TrpOYTv0XVLatzgP8QM
bN+DaDaj+9LiN3rGknWjPdb2bNvXDP7WmueWLgx6J/KopZeTmZ/67tT5W5xA
182wv7d83uBvth3f8PcKWhctljDsQTS303e3MadhP6W1sLF3rTObdwebNxoy
OjmHyVrR7N3yxi0aTOZ10q8M/Gzzk2QvaO+aej+9X9h0Z7vLlt9tzQ+duURe
03wyxRJE7048auPOYvCuVgbRPmxmJ4IBDL+b3DENGqR/N/l5ww7Yeg/tAye5
k2TsZJ1pH07mYPIuLR4w6Hqqd8m9kta7gWOJMxPvaXEOcX7CxwzaIc5DPxN3
sX13i9+eaJD+bosDk2zc8naDRxF1I2Zy6i4Ec9o4dmrHSXKvue9T391Y5xYH
0mzcykSDn5hnMrnjnLzTwLE0R7Xy60qZleyRQXe0Zul8STIGvRcnd1XDO4l+
Gc5MsMeW/XRLZiX/brBFd4bMNdetlWXE368In7FlunnXo/df4sx0Hhn6lczx
lu4MPj/13WSPWll28lt0zW2ZbtjRiPtOMaohj1q+3crWpJYNudDK0ykPNDCJ
zU+SPGA7GzE/V+odnbm2fk3lcqsvrYxusQSRBUT2JWfMvBMlZ8bAS1t6R3iv
+dnArvTctnZqmm0MvDR13yvx3lReEDU0+BjNaa06mHNhKkMNbG/eqc1+ctJH
W+7beG9qFzZ4lHkmDZ8x5+wUx9LzOfVb2/cL2k8If07OLTEbBh6g30nss4aM
M3DsVE1ohjG8c8pzkrO3fb+4txkzeALNLfR+l+Sc5O5G+ACtX5ptrsTVySzY
UofkvBk8sLXbGvY4ulZTfpj05CkfSPpSi9O2cDXN5BvrkNw9DTPWytCWVxvO
1vLPqZrQe9CtWk6yWYtjzXdJeiBxL+LuRB61NGuevSkvonWxMUOJ8xj62+qd
bean+MG2X9C/ley7jZO36Ghqj6PZu5U7dFYmGYnwKAMbEGegvTe5X9h0YdMa
zVEGHRk8k+aW1t1bNaR3yaT/JJnWMOc0G9jmtuUhNDPY9g5DnQkupTPiIZ9P
7iP0jtni4ZPz2LLbwFQ0J2w8/8ZcbuU4PScGn6Q9kJgxQ20JX6V1QWS3IWto
TqB5g/jdpMfaMs6Qjy2/NfseXROitq3zn3j1VObSvpTM+qT/m/dHGyOZs5WY
ARsnGJ6T3j7FHnRenGh5e79sd7Fp51Y/b+WmIR9PPHmK3zYyBp1TyZ0luSOf
zJVh7zD0q3UX4ruGu9/b2YgsMHDIlvps2bsJpiL0QmS0rae2HTCpZYJtDL5k
9lJ635nyWANj0Jy8cbZp/0nu18metu5i2GenfIDwjeR5zHMy9Vs0CyUZ49Yz
m9l+SrN03ZLzPFXzZD0J76Jn1ZDRhqwk/LDFMIYdZ8qTp767pW5T+ZX0zClf
Mmuf5iJa4/Q5CZ4xzDPte8Qc2jI9mV80F9FzksziZJYRdzFov5U1BGtN6S6Z
ES0eM2iQ3iXpHD+p+ZSuCa6j86v1W0lOoz25VZOkr7b8pJVZSX9OsjRdB0Lj
tK+2fM9Ww+Rzi5cM7GTbB2mva9W/lft0Phq4iPBkW09buqZr2PLG7e80fCbJ
Yy2tEX3fcq+ktyT3wWQGTeWswZOnatjK66k7Jt9p8P8TLbe0RudOaydN5umU
Tumd7tYzG/Ydekdu1dymfeI89B2TM3Ay/8m8mNJsqxdEH7fsszYtTM1b6450
/hruktQ70ffWjtzypWQvWrrYyPzEXWy+QeuLyOgtDJl8PzGTLd82/JbBl4g8
snkRna20Zk9+yzYnLTZI+mHSB5IZSsw/zVpmrzB8Jpk75gw1Mz9dH9qXbMzc
8gcDVxCen+SEqVxLeoXtMxszhWZdgzaT3EVrkM44OteI79LMk8yLpCcn2a+V
g7QPE0xizqktzE9zWvK7SX9LZlzrncmZnJoTg+7oz7c8tjVLyewmfIz4TMvb
Dc8tzdL1P+k14YfEOW1eeqI7Yjdpadk2Y9t5ic7T5FwZfJ7WnWGek+yRnG2D
l9J9of0teWYzg03dpaVrmgNtM2zjMTrXbDtdi0mSDEnk5lStWvWkuYJmsFY+
GnRN8FXr7id5NzUDhE6Td7FpPKkpuubJrDfw9pYcb52Trj/BLckZTs6nYU4M
c2jT/lQNDXulOXds/knkeOudNHsQPaLZkqgtnR1JjrLtSmbubfmPIWcN3pXc
rQg/bHkszTwP6ZFtn7JxzlQWE7WlZ7u1q9KzN/VOg/8YvMvmja13GtjbkPVJ
jqLPaTvz1JwQZ57i3qnvGjzBwCotvWzhhCTvEXex8TnBUQSH0OxH+2drR7P5
ZJKL6H3EwDN0Hhk4oXXHZL7Q838yV63dKulpyTncyKiGs9FZTzAqwTPJfG+d
k6h5Szt01ht8teUnhp3OlsU0j9H8bHtni3+I/bS1E7X6RfO2IY+SedfK7uTO
m6wz0fctLETMWIsbkxzS8jHDHQ1ZT/shPfM2fyP6Tuzghl14Iwslv0vXKskh
U3ehNWW4YyvrDT5JZ0qSG09mO+nPyZzawkLJ5y21NfMYnXeGO05lfdIzkzNP
7z5X8tupDCV2YYMGDe9sZZBhHgx6JHzYNjNTfpj0oqQe6RluaTPpOWYNEvey
8X8rU1r7l4HNTvyTmJlWrZJ5YahDa+Zt7GHWYJJtaP0SLGfo19T5kzsX7QNJ
jjIwicHDk9pp6cW2j9B5dyWmIrIp6ZlT+wLda8MM0EzS0nuyd1N9pL+bZP4t
50my6z0wleG+hlrR7GfQpk37dO+u6g80/2zUr6HvW5jK5kvJWtH8NlWfZDYZ
tG/2qJY/0IxtO6fZ66Yy9x3LdVnXoHGal5K53OqF+cyG/LKxxJacmuITQ2aZ
WW7LDBP1ufUzrdkz+J7ZSw2cltSOIeuTfkVk3/ZnWwZNzTAxJ63dxDDbJ0xo
81I6W7fkJpFBybki7tXiTxvLtXJnu68m85HWET1vNmaY4gFbbrb0stEn6Vzb
crakfunatnhji17o3SHppS0WMvQimafJzxu81PCe5DsJ/drObJiZ5E7U2t3o
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
       "], {{0, 128}, {128, 
       0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1j+qXucVxWGRgMkAMgF3rp3+QrrUzghkiCuBwSlCuiTjyRhSxONIGVeG
dMalbXCRxiDxfeee5/fuXUgsCenctdefvd+PP//ysy9+9ebNmz//5sffPnv7
l99/9dXbv/7xo5/+8Ke373736btf/wj/9vOvn/C/vvn65X8f//3ln3/47csv
4W//8d+Xf3/y/ct/vnv3i/hDv/M+//4RPo9wfta/eeSbj3B4ROcP1e2Rv7/i
/1497yPfvELzZ/lyl3fPmvcRns/aFVd4cfVefRaHZ+HX7N3is/FmYHEdX/3O
eeT/XvH2vkvbxV28GVhcx3fdiCve21d/82pthTwsfq6Pm4HFAi6+/wV89Q3d
neBgIW+bgcWVDD/rvghY6GxdwwqWdZa5LXbwa+bkpHdL8f1f17zidaVTm4E5
uPKG13I7YQ9rfCodec3vy9wWO1jLiYbl/Ne9E/Iv6DAZC/5OwILXgu/C7B+q
g8BzwluxwrOIV9uZOt/FR8uVsIcFzsK8FZ5FvNrO1PkuPlquhPe/wFnQcJpu
8v7Rvl/Bms51PtrdOQnXva7oJu8fDQsaFnXW+Fd0FrJUz6owo6DbcjuPv8ZT
6/LV7/NTfRSyoX2/ottr6iBzO4m/xlP7voYrPhY7daqGWqcq3E76vsZTw5Vu
aj4Kmgi3SeAv9Gjx4u3m3l+Bs5alZ/HXdFi8WMvkqd2coLOmifb9yn1cfB7W
Mql9v4IFnQUdZHzq22yxj7V9ouGrda7ca1nbCn6WPuvL4vp+EDSRu3nXvZa1
reBKp6b5MgFrntb5nIqL2gr9ErIt5Ef2ZQLWPK3z0XyUd9Q07+7Kdl0HYU/W
sda1Op/6m62im4Cnda3CU9irGhb6Mjkz2putopuAhb4IHmk8N6u+JtMyo3Vc
+46M6zNWvBZuouyjoKHWHSEnQsa093+xa/UZhTxP0K2Y1WlZEjwS9rOWecFH
rTva9+sdOem+C7tUzpLGX/BIuAtCDgWdZVzprKaDkFXNI41PMQMTOijwFPSX
va7/XC3z0/ol71XBI2EXad2f8Kaq7zft5072va65hjW/tJxMvtdC34uaF73W
fK9rLmg4Qc/KW07OlcBB9kLL/Em+C/6+5t7TPK3rede90HwUsiHMKHRH00Hw
/VSvT82Mpqf2/q/oJmSvzr+ig6ZbkXN9T9b11O5F/b4Is1f4V3TQdCty1vZY
PQPT9qqmg3yjte/flYE6n2JWK72WPZI7pe15TYfJuOKFxqeIK72ueKrNW9Ht
av7CjdZwxYt6ZwUsdHny3ZnmV2VeoZunaqt5NyEb2oxCTnYPO/iueSfofOqM
Qu803bQZNQ01fep6VvSv+y5rq801gY+2t7XsTfu+kMmiPtpcAoe7ZtQyL/AR
dq+8N6ZhrcuCJu/DX+BW7/5dXmiZFPhoe1j7fh0L/X2kyxV9KjzlLgj5FHaU
8AbQZhQ0lLE2r+bXqW/OCdmodErLhoCF3VjM3qmZPCnb03A9q5WbXtxRGue6
5vVManoudrKxb4x7ddhsdL+v6b+4i6dlu/KWE+bdbPgeyd1f7GAhz0KWtJ2m
zStgoS+TM7l+dbHm3V18hD32mp3SfD+V80mZXL+6uJ6NZ/GpZ1LYA1frU+R8
0l0TciX7JeNT97aW1bqPAh8tG5qGq4/ZTQELd1ne2/Lek3UQsqThaZk5lb+w
t7Usad7dpY/QI7lTQhfq2a57pPGv6DZBW23eSjY0/po+guYCZ7mblb0t+K7N
qOHt1Bm+F/ekNqPgYzEzAk9BT62Pwi0WvDjJd4GPdlu172v4WfNqvgje1flU
sqHhYhfqbyoNCzkUMiPoPKGPJ827nTJzUvRIy8CpfIpZndBHeV4tw6fyKb6p
NCxoPpmPnKsJM17RfU23Oh9t3snZPjVjlTdPkYMwo7AfNJ4aH23ezfZ5Gavc
3yvmEvIgZ+kkr2U+WteKGmoerT7mW1rIhjDjFfoUvS52Ss5JkbOcAUGTIha8
07J0avbqcxVzommi8T9VH+E9rPmocS7uk6JuGv/iG6n+fS0zd2WyroPQX43P
XZprumnfr+ekiNejM3aa0F9hRmE/C/mUcf3uFPF6ZN6pCk95xoqGQs4ndGqy
/oLOskfaz63oJsxY0bDo3Unzanx2xu4brz5X0btK9ir3qHLf63wmaK7xX3yd
7wKHYvbq91SbV+MzQXPt+3dlXuCm7UAtG3dlT7jj8h5e/j5nDVf2obDbr96B
Qh6E7GnZ2A6ex1/YIfV9dcX3NR/lPVnBFd32++d9f7tm7q5p3a9wKPIXcr74
bCz0S+iaxkfIxtVvkrrXd70ZhJ4ubmEtY9quqOz5oi+aJtr3K/dxsY+1jGnf
PxULvgg6yPjUN8Nif89P26t36a/5LmChL8Vuri+Lhf7KmancQW2uohcarnRw
mi9FrHlU57P4Ol+KnItdEPIj+1LEmkd1PoKn78Nfy5Xgheb1XV2o6yD0TsNa
d+p8tEyuzg6e1s0KT2EPV/bAZuCMO3uqzgIW+iV4pPGckFVtxmkZEPp7xZ7X
dBZwfcZTs6TtHME7zSNtXk3PSpfrugnZq/M/NRsCn92r/n6Q/ZKzrfGpeCdr
OMGXK/gIu1TOhsZf8OgKf7driysd13QQOOxe3TeVoLPmy0ne1buv+SJku9gX
ea8KO03eLdu1rncVzQWvJ++cndHfbxqf7Zrj3amaF72u52TCjMUuaPtW6IuW
Q4GD7FGlI5ovRQ7CjMUuaB3RfBRyWM+GpvnqcJ0+wq7bDJynzzSdBS/q/FcH
JyfC22wz4Oij/Vz57miaaPxXB0efuuYaHw1X9Be00rpT/35lJ1R0kLujcd4M
mG8tTWehO3W8XphZFThoe1vjr2VA0FCYS7jpGn6WhnUvtKxewWfCjJMzcKrO
9XkFLOgseCHMOGGHyO86QZMJ+0fTQeMzeUat49q8Gn9hxrqGGp+K73U+EzTf
nTDnrgkcZP5aJle37drV3xe0mnynrtBf4HCSp1r3VzeHv8BTwNpOEG6T1mVN
c81ToUdX6FnXrchf2CGCVoIXsi/7JnH25En7p6hb8ftaluqZlL2u6ynkqq6h
nElBk8Wtbmo8BS/kjlc4nMRfyKGgw+JutrXsadkW+vuh8wocZM3rmVzcxXdl
W+vIdvz19dQ00b6vZXJxF0/L9kl7sr5jBR1krGVS2FeLZ+6fSuY1HQSvNU00
rGVy/epizbu7+Ah7rP4+PzUblXk3Y4srN/0uPvVMCnvgan2KnE+6a0KuZL9k
fOre1rJa91Hgo2VD03D1MbspYOEuy3tb3nuyDkKWNDwtM6fyF/a2liXNu7v0
EXokd0roQj3bdY80/hXdJmirzVvJhsZf00fQXOAsd7OytwXftRk1vJ06w/fi
ntRmFHwsZkbgKeip9VG4xYIXJ/ku8NFuq/Z9DT9rXs0Xwbs6n0o2NFzsQv1N
pWEhh0JmBJ0n9PGkebdTZk6KHmkZOJVPMasT+ijPq2X4VD7FN5WGBc0n85Fz
NWHGK7qv6Vbno807OdunZqzy5ilyEGYU9oPGU+OjzbvZPi9jlft7xVxCHuQs
neS1zEfrWlFDzaPVx3xLC9kQZrxCn6LXxU7JOSlyljMgaPL/+AeAQA/I
       "], {{0, 
       128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2T+qZEUUB+CHgrgIE7fgxM7DwA2MK3iCRgPCGIiYmLkA43EtJsbG5mau
wEScAQMNhL5d51SdqvMFyqf0u923/vx+1bc//PyrF1++8/Dw8PX7b/714umb
T169evr2s/fe/scXTy+fffTy3Tf8/p9/3vr31x88vv7rj49/+PXTx+9+/OX5
n789Pv/p52f/8b9fc4tvuc7I9TP8f5/5ls8ZdY9Xx+3qa6KuuWoust9r5PUZ
8xU1RxlreGSPZKy3Cp8/IzNHnPG+UXu2Qv7PnK/svRCVIavmK3t/Ra2NjP1e
YX2uWhtRXTbz82fs2ai5y76v7DGp7FXzlXH22z1jK3wvyD77rVqfGZ9tZm7M
PBuvOh9mzF32mUH+z8nYqLmo8DkrrKWMDp15Dl+VJ1F9l33mX9Vx2c7u0AoZ
smP+r8rYVWe83Z09d1FzlJH/M8+W2deP6tNVXbyquztn/o75n5EVFca/wrzP
PANn98uqs2X2OFQ481TI/+xzQofM32XcMtZz5y7IOCvOPEet+i6Qsa5G7mXV
mUf+19nLp+Z/9nfejHPv7s7Iq+zzwKr8j7rmyPuuOvNUzv+Z3XqSK+R/1H7J
3oMdnNGPO+Z/1FliVW5n3/uq/M+Yi845MDP/M/piJOez82oX7zI+M3Mg+/UZ
/ZJxjqqW/9l5HtXduzgj/0eun7G/Ms5mHVxtfGbmz8x1OLMLMua3Qv5n92C1
vVBhT2V0aNQ5aqT3K8wLr83/jHUYtYarZf6OXRDVyxX2RfY8rjoPZHzmDp1+
qitkTnYORJ1jZ37OyvmfMeYV9kL2eos6Y2d3dNR3wFPn9yRXyJyMTBh5r1V5
VWEuova7M/+c9RmVt6u+X3DNdVshWzIyP2ocTp0LOZA3pxlZnfEac93HFTJn
ZM3MfN/sLqgwFzI/bx4zxifq+1pUZ3Wb691dIXNGPk/UuSV7X+wyFzK/Ti9k
ZH7GejbX+7pC5mTshYwcy869CnMh82t61XfY7O+8XGddzcyckdzIOP9n77vK
cyHzazojq6Ouad7PcOX8j3pGlN0X3fLf3p+f+SPrcNW5heu7Qv5HrdWMe5m5
5qvlvz2+dg9m9IUzPK/KnJE1HJVd1TK/Wv5XWJM83he6gCtkzsjnqZB7M/fF
Lt/FuI6jnvnogp7Ofmay6rnNjrlX7btYhfXJt6+ZqGd3uqCPZ+Z/9t/unnur
votVuHeOzfyZe5z3dYVnzt3O+RX2abV75/syf+R5Tvb3eq7vU/N/x9zL2Ke7
3DvfN18ja0D+80n5v3vujczF7vfOsWvj6jXlf0/vnv8n5V7UXtvx3nl8TqPy
XP738Y75f2ru2YO8qguurjFr7wzvkv8dMn9kjircC9dfP1F7zdo7w5Xz/9TM
j9qnp44Dz++CqPVZYRx43/zvnPkje+3U8eE6+zqqg7iOK+R/57UU9dy1w1jx
/H19y99WuF/eK/87Z/7VPWU/coV9be2d55n5L/Pz9o79yDP3tbV3hmeuE5mf
96zVb3M8c1/rgjM883eibuthZI9k7Ltu49/ZFZ7r6oL6zvidSObcd+/Ze6rz
XHTzqvzXBXs56vwpZ+4b84zff40/V8h/XVDfUc8KzOP4+GSMuXnp6Wr5rwtq
OuosyuNjHpXz5ogr578uqLk2rq6fCveyizOe+Yxcn8/2LvmvC+qsk6jffHm8
Z1e9hs/wjvmvC+qvDXkS27OrXsNne/f8t7bXro2R/8/3ZfXV+RrZ7xXGh+W/
Ltgrl4z5+Nhe3Y8jrzd3PX1q/sulObm06po7OuO3kl2uyTXdIf91wfh+vzo+
Gdfc0SPjtvs1ub675b8uuG/er66NkWtWGJ8KvTDy3GbmNXlfd87/zl0QdZ6P
GrdTx3lmF2dfk8+z/NcFV+c9av1UuN8KjhqTatfh+pb/uiDjOYBnC8z1Lf91
wch9XX3NSWPFvLvlvy7IeOYzcn1mlv+7eMcuyDjbZ7+GmeV/Ze/eBSP3ctKY
MHew/O/ZBSPPeaJeU21MmLtZ/vfpgqvvG3VfI+9VYY8wn2r5f3YXjGTy7tdk
Zvlf2RldcPVvo57zVLgmM8v/HZ3RBSOZHJXhGddkZvl/qld1wdXPk31NZpb/
nZ3RBTO/U8y8DjPL/1Od0QXM3NPyf1/rAmaW/6wLmFn+sy5gZvnPuoCZ5T/r
AmaW/6wLmFn+sy5g7mn5z7qAuaflP+sC5p6W/6wLmHta/rMuYO5p+c+6gLmn
5T/rAuaelv+sC5h7Wv6zLmDuafnPuoC5p+U/6wLmnpb/XMG6gFn+M+sCZvnP
rAuY5T+zLmCW/8y6gFn+M+sCZvnPrAuY5T+zLmCW/8y6gFn+M+sCZvnPrAu4
s+U/sy7gnpb/zLqAe1r+M+sC7mn5z6wLuKflP7Mu4J6W/8y6gHta/jPrAu5p
+c+sC7in5T+zLuCelv/MuoB7Wv4z6wLuafnPXMe6gOU/M+sClv/MrAtY/jOz
LmD5z8y6gOU/M+sClv/MrAtY/jOzLmD5z8y6gOU/M+sClv/MrAt6Wv4zsy7o
afnPzLqgp+U/M0d1gV7Yy/KfmXVBT8t/Zo7qAs+L9rL8Z+bsXtAFNS3/mVkX
9LT8Z2Zd0NPyn5l1QU/Lf2auYF0g/5mZdYH8Z2bWBfKfmev7b6nT3ts=
       "], {{0, 
       128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2TFKA0EUANCoIFY2OYDkCtpnsbCX2NqsoFVAiIXYqEfwHB7Ay3gBSy8g
mIDtQpaZvzsTX5HwEpLN8ufP/383s5v7xd3+ZDJ5OFo/LdrH89Wqfbo63Ly4
bZdnp8uDNV//HhvvvX3MT46nzefse97l5/dp8/Vz2bxcXzRd73c513G6vrvN
8bf5fN/v9v3dvjFJiVvKGqXEMyJW0efZN/dS4pkrbinxybUHU/Z7rtxO2V8R
cYteu9Jqb0pMonN7Vx3d1yJ6cUpejVWvos8/eiaJ2PvR8RyyBkbX9ohen6vf
RdSfEualEupzaXtqrDpWQk+xXuOeW8RalzAbR885KTNDCfU5us7Uktu1u7TZ
2PqW2YMi6kmu3Mh1zCGvm6LrdnT+DHk/reQ853F7CpfjWtZryDkzeq4e8t7g
WNcpteQVM9fl6Jk8usYOGZ/S4szMHFFj/b+ze3Fm5v/pGu8/1Fgba4wzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzPn9S8B8GCU

       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2c1KQkEUAGApkKCn6AmE2qbRtqXtA4NaCYEtKmhRb1HbNj1JDxUEpdDC
jZDcOTNH+xbKp9w7M54583PHg8ub8fVOr9e73Zu/jSd3p7PZ5OG8v/hwNZke
HU5353z6fS189v066j++HL/tf4z6X5/DweB5ePF+f7Ls5WtWedW965bZ5d4u
5azb/ohyItrQ5ft1r2mVGxH1dunfUjEslfOtyozIwy5xK5VjpcZCxNipOQ+X
6q+I+SSirug2R/yuUutUq7iV2p+0cvS6UGoNith3dam35liruRfKsLeJ3uO1
Gkc12xMx9jPsIbPFM/M+pNUYb7Vudnn+jW5nzbWjZm5Hz0WbMnayzUsR8c+2
J8kWq03Mh+hn8Oh1M2I+b/UsXCpnWp3/ZMhJbjun6a/83qZ+yXy2nO3MIXNd
2WLLZfNBf3HN3MtwHpghVpktVttnfcqt8k3uMTNvt7fpP3dmZv77nF/zXmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZv6f/gELOYk4

       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2z2KZVUUBtDCBjF1CE5BQ6EaRyC0YGBWikYNQhmImakzaEwcgONwJuY6
BLvBVKjn2d8++9RdgbK6ePX63vPz7X3Pe/3R19+/+u69u7u7Hz54+79XDz9+
9vj48NMX77/7w7cPrz/5+PWLt/z53//e+cUff91//uarl79++fv9U/zpN3/e
//L3/cvHD39b+vl/veZWV13nrddz67itjO1Trq3qXqruMTFWT7nmxHx13kt6
Xd06hum1WrXfV9ZJYo2lx2fCuk3sx2l1ZNf+TayHqnHe5aq1MeFepmX+rp+v
5GrnGq66x/S4TVhLK3VqV/8/LR8SzwIT1lJiHZ54L7v2aXq/TOjTdvW9nfs9
fe/pZ6Vd66pzTjt7j1P2UeLeT6zv02pi59lI1Tzu6ns7a0HnOCTOFqrWRqLX
PaUWdO7ZCfd7tXvsrInp3KjKh868Su+1yeu887yls1Y+p9zY1edMuN9pvc0E
V+3N9BrrzKVE77qrDk4b812vr6o16bp8onc923Zez7R7TI/Pyh7ZNY9VfXWi
J58wJom1kf7dxN9VNddV1zlhXaXrZnofVV3PyuunZUViPad7m6r9uDLX0/bp
Sl1OZ2bV+t/1/LKrrzglN9JZset6qnK+8x4TY5XI/F3PWYncm7BP0881iV4o
nbfpzE9kRboH49r1nOidJo9DVR52ZkVnb9A57yvzku7Pq9ZGYg+mMzy9riZk
xelOz90ptTuxzif0YxOuLTHviXxYydj03knX5cTzXeeanJAhpztR00+p3Z1n
Aol+LJ0Jnb1xZx+SqL+JZ7dEzU0/K6XvnXOZX7WWTpzTqtzr3F+3XkNV7U73
+Z05n37mStTo9H7vHMPO58crO5Fd6ddMyPxE3Uxn767e/gpzulJz0/W3sz5W
1S/5P3OPdL5mwr1X9VdVWT1hThP15ZQ5rRrbqjqSzurOuUiMCdeu4ar1OaEW
pNdb4nygs1dMr590zuya05WauOsZeVf/My0TruDO841pfUhnJiT66qpcTT9T
TJvf9LlHOttPr5XpesF76/vk9+ysm7uuP332UtXTTpvfRC+UqAWn1MqqnJ82
Jic6MY+nvOeEzE9ff+LZoWqfpnMgXSvT+yvx3H1KnlQ9L08YkxOdqLO73nNC
5u/KtAn9/IQcnpDVVfnWuQbSY1uV/6fkxolO9JDpvnRX5ifGcNpcJ3638/W7
6uApa2DC3kn3lhPG5BRP60MmnO2s7PFEfZlwv4kxmTDvVdd8tbOLqv480UMy
V+39qh5v195PPGclng0nZ1c6307JtGk93injxnNctWZ2Peemsy4xbhP2abov
rap9E8Zqsqs+I+DrOL1mpn3ekTjH6Dw72lULVvI5cR4yYawmeNr+4vnuXDPp
54h0Hey8ngn7NJHbVWtv2lhN8Cn7i+c43c9PuMeqzN+V/9M+B6nq1avqr2cB
5jmZecq+W/l8szN7O2vQKbVv2twxX8ETMmpXvk07h+/8e3dl/kpdmDCGzFfw
ifvrlM9hJ4/Jrsxfec2EcWbmOXWq6ucnetd3ADrP9p/TfDHzetalv5dyitPf
Aajq4Vfen5mv6V1nF1fw5O92XnlemK/s9BmC/vP/5XlVjTD+zLwrT678meOu
72Q682fmRD4kzvyfU/4kznkSZ3ETxoqZ57iqL73ymUP6M5SVnzMz35oViX7+
OWVU+vMO/4aLmXflWFXOP6dcSp/npL/zw8ycOPNZef9TvKuf9yzAzOnsmvaa
0131b7WuVmeZuSeXEt8LvfU1V3BVLUj8LjM/b087o75yLu269yuPOfPVnO4h
E/3qhHE7xc7/mbkqk09/T2bmq3nCd/V3vSczM69n8q7v/8t5Zub+WtD5/X+Z
z8w8J/9Pfx9mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmzvkfENVvKw==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1zGOHFUUheGRjSxyVmCxA5zCCLZgr2BAdmQJyQTIGayAgAh5CyyCZXgT
SAQsAFsicGJpnt+9r8459w9Av0fd1dV1q773+vH3Pz598eDm5uanz9/97+nd
z9+9enX3+tmj9/94fvfyyVcvH77LX/7/733//u3ft39+8evXn/371+0PD9/c
vv3ty2/+eP3P7cf+fp/XfPj31f7YZ92nV8955xyqvlfVezuuz8ljdl/D7vtt
9bMUvq/CM7h6Pquv6bjPu83cuc4n76Uq/3euQ9V8d57NjufoKm+7j3ny+nSc
j/KeR3ktqNprdX/uVevy6v151f68o0/6cNK3q6zr2Gt135MKe86qv7uvQQpW
d7/3pCdV+4Gr9ucT/D9pQrf5V12T7r1ux3PXsa51f273c929h7/KFuVn5OT6
otbK/nfs2bqfHeV7++T+v3uv1f3e7jXo5L70qvNU2yOtvvfkuj/Z/47n9OR+
TMHYqmfh5HOn0FeZ3L2XmOZJ9zOO/+fntWPvyT3YSWN3zD95bsr+Vz37HS7t
3EsKRp30pPv7JjmvPK+q3wInr8/Ja9W9J+yYo/JvgZ37f+c1Vc9j1R4g1RMF
V11aYf9fZZT7WrBzPieP6eJ8x31y0vOO9yZ5gv9e8+q+bx3Xgp1jdpyni+Fq
VqiZrPC5+K/fCs++wn3bvRZUXfOr1iP3vsr/k/f2yd9BCp7gv9e8JqwFq9e2
ex3pcMOxT1rRsb5XfdZV66D7TFNbzf+ktaDqe1V5Mm3Pr+z/6nurXo//tIv/
jmvByXu16voozDfV/53zdPQN/73axX/lteCqZ7l7P5nU3VbsPEfu5uO/bzv6
r7AWqN2fVXt+x3tAYRZVn+XuGP57ddKz370W7OzZus2p2lsqzNHRCoVzUGj8
9+pUB06uBTvn1rEGrZ5z0txPWqG2H1Bo/PfqCQ5UrQU71+qqe3Wy+Wr7/479
gFrjv1dPM6HD7aq/Y76X/477gSRPUq9h6ryUe/Ve2jH/5P5z8kwV/FfYD6R6
knoNU+el3FXfvcpqzNe3YuezuvcDEzzBf695pXbHdcN8TSs63E5aC/DfqzFE
p5mXpv/dc6w6pkLjv1fjiaZLq/e5wndR7p1r2PH7q2ruao3/Xo0nOl01R7rv
2q5e/9XX7JyDQuO/V+O/jktVJih8L4Xu8GH1+DszUvBB2RP895oX/Wn3cIct
E7rb/53PqnqNWuO/V2OIjlE75jO7Ph92Zrd6bu6O4b9X47+m+QrHdO8dH3au
edVvB0fT8N+r8f9a8xX8Se2d+3zn2dkx330twH+vxn+d/We3P9Pme3LN7XbJ
ZS3Af6+e7MNV/lfZsnN8heujYEL3eqF8fHdP8N9rXvT978+q+1zh+yr432Hy
6v58Zz1yMRD/vRr/dVzq2M8z00/z1v33wgRP1L67Y2OFpkU7zjPHffOrPKla
rxWsUPPE/VopNP5fa9HqLKr2rqnd4XDH8+Wyn1f2xP1aKTT+n7HI5TWOvfN7
6uRaMKHx36sn+KDQO3u8jte4987vnZ3ro/DMKjf+ezX+65jfsbdPWguqzr/j
eaHx37Hx/7z5O/vYq/a97o0VeZ4wU695pfaOye7HdGmsyPOEmXrNK6lXr9Xq
/lz5mI6NFXmeMFOveU3oVZOrDO84ZlJjRZ4nzNRrXtN69f5cfW/VMSc0VuR5
wky95jWtq66n2nEcGyvyPGGmXvOiafzPbvz3avynJzRW5HnCTL3mRdP4n934
79X4T09orMjzhJl6zYum8T+78d+r8Z+e0FiR5wkz9ZoXTeN/duO/V+M/PaGx
Is8TZuo1L5rG/+zGf6/Gf3pCY0WeJ8zUa140jf/Zjf9ejf/0hMaKPE+Yqde8
aBr/sxv/vRr/6QmNFXmeMFOvedE0/mc3/ns1/tMTGivyPGGmXvOiafzPbvz3
avynJzRW5HnCTL3mRdP4n93479X4T09orMjzhJl6zYum8T+78d+r8Z+e0FiR
5wkz9ZoXTeN/duO/V+M/PaGxIs8TZuo1L5rG/+zGf6/Gf3pCY0WeJ8zUa140
jf/Zjf9ejf/0hMaKPE+Yqde8aBr/sxv/vRr/6QmNFXmeMFOvedE0/mc3/ns1
/tMTGivyPGGmXvOiafzPbvz3avynJzRW5HnCTL3mRdP4n93479X4T09orMjz
hJl6zYum8T+78d+r8Z+e0FiR5wkz9ZoXTeN/duO/V+M/PaGxIs8TZuo1L5rG
/+zGf6/Gf3pCY0WeJ8zUa140jf/Zjf9ejf/0hMaKPE+Yqde8aBr/sxv/vRr/
6QmNFXmeMFOvedE0/mc3/ns1/tMTGivyPGGmXvOiafzPbvz3avynJzRW5HnC
TL3mRdP4n93479X4T09orMjzhJl6zYum8T+78d+r8Z+e0FiR5wkz9ZoXTeN/
duO/V+M/PaGxIs8TZuo1L5rG/+zGf6/Gf3pCY0WeJ8zUa140jf/Zjf9ejf/0
hMaKPE+Yqde8aBr/sxv/vRr/6QmNFXmeMFOvedE0/mc3/ns1/tMTGivyPGGm
XvOiafzPbvz3avynJzRW5HnCTL3mRdP4n93479X4T09orMjzhJl6zYum8T+7
8d+r8Z+e0FiR5wkz9ZoXTeN/duO/V+M/PaGxIs8TZuo1L5rG/+zGf6/Gf3pC
Y0WeJ8zUa140jf/Zjf9ejf/0hMaKPE+Yqde8aBr/sxv/vRr/6QmNFXmeMFOv
edE0/mc3/ns1/tMTGivyPGGmXvOiafzPbvz3avynJzRW5HniPtP/APt3e5s=

       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1z2udVdWhWELJEQXIKsWlIQjAmyqCy5SAiNBZAnJBIiMDtAC+uOUDkCA
6AURLomgEiR/2vMZY+x7CWwdW+fus9b8ece7f/U3f//d3/3BV1999Q9//PO/
vvv+H3/z44/f/9Nv/+h3//G33//w9Z/98Ic/f/zn//3nd59/+uuvv/3pv//1
m3/5j3/75td/8uff/ue//9Vf/Ndf/um3v//5l3znS//2ye9+6Xm+9DlXNfn9
7/xfn3/J96/u/qSPT2r75F5P/v+Tz6I+CzUR83bFBz1LVz0SM3P1fDHDV2wR
OdLKFD3byXtdzfkC38T+XjH8IzFfzL9mvpifpPtpB9Y523LUq7wQuyxqK/wn
ue8LzBe7/HbmJ++V3JHkzGjuJWd77ZlXvdMzL+ogHODqXeMtzL/q3UdifjLf
kzuSnJmrXWvtfnJOknl9ldGt2or3mivfeAvzNUMWanU1P8vMF7MkdkGwVOej
npNW75aZ/2QORY60uLGQ+5+B+Qs9TXqOmJnk7ojdT87Jk+xby0S9g1dsFBkh
uKHv+P/Mz+d7ckeenOFqF/TePdmLVpY9meErpunZFn1c8BnNDe354mxvZH4y
35M7Ilinc0G7cTKPWvOj2ZjcQc18wUYxt8nc/wzMT+Z7ckeumK85n3RjMYdJ
3govFbzSLE06sMgL4fwiU1o7lXQMne/JHRGe3/KopH8K/9fcFvV5ez3F7ous
1My/qttHYr72hNaOCM9veZR2KvF8PWN6TpLzrN31qi8iKzXzrzzkIzH/ahdE
1mumtZiTdLYFRokZ03Oi3ebKE7QD66xc2IvPxnz9jqDdWDNfMOfKPRayrDVj
SccQbqNnXvRlYZfFXnw25r8llwVnWswRs53s+4LT6uzTbpN0DJGPrV0We/HZ
mJ+sYbK/yfuK2Ug6ld7f5fy6mh8x58nsTn5fu5Pe2bcz/8rxdC6L3xUsFT1N
MrnlWq38esJePecLbt/qkeCb9pa3MF/UTeSymLHWu8Pa+1Fyf5O7qesvap7M
0yTnW8/R72VvZL5wIXEekRetdwfBbeF+Yn+T2afrL97LWvfVnG99R+/XG5kv
5lycZ4FXyTsm3480Y5fz62q/kt6oc0RkR+uz3q83Ml/MuX6na/FK54jY0wXG
tnr6ZCaTnt9ytifPFI4tPrfmfJn5V7+rz7PAK7GnV3dZZo5+X7tymCTzxS4k
PfCKLS3m6zlPslfwM8n85Gwn+9hi3QJztNsvOFXSN8R9r2pyNSdJz9fn1+xt
+WSSw1ezveCrSVdpMWfNVxeY32KaYN1VH1uer8/fqqf2SX2eBZ/RmaVdpeVR
glFXWbPg+UmmrbGlxXzhlklnE9zTO5LcfeHhC56wsGtinluz3XK8J325ytxW
/VvMF26ZdDYx8wtuoJn/ZK/FObWrJJkv9k7PdsvxBPPFLoj6a/4n3TLpbLrO
LTcQvbvyLlET7Spi18Q8t56/kNcth0zm6dXdF9jVcjZd55Yb6LnVd0y6+tXd
hUeJOXn7vq85pOCM/r7O3GVn03VuuYGe2+TZkne5+tuFd5DkviT3PZmbX7r7
V3VYZn5yX4Sz6SzWTBM7eMW0JOev7nLFyYV3EMGuqz5qD2/1WpxtjfnJfUnO
XuvMV25w5SHaaUUuJJ8pmN/yBJ0pV0zWufak1yI71pgvfOxqBpKMFXOr76vr
k/TG1jO154t3nytfFexdyLUrjrX8Ien5V44nZl5nStJztJst5FfrvWP5Xnrm
xc4m7yvuKOqva5v0fOHbV/W8+lvh+WJ+BP+T+dXiz0KmP+lv0ld1zQU3RAbp
z2vM13manAftUckZE7ORzK8Wf5J5pDmgfVX7zxX3tFNdMfaqtknPF3manAfB
HJ1BV/O/MANr/NF51PI64Z9rfpXMXM3/NeYn+yv8Vru0rsMC80V+LfNH10Tv
+JWvXt39av5bDvnZmJ/0Zz0PwqUFB9aYr/dXe3vSQ97YRz0PyR1POslHZb5m
uDjbwrtDMneSfij2uvX95F2W+6jnQXOv5SRXHF5jvma4OJvou2bjMvOXvXHB
za4cstVHPQ/Cr67cTO/vG5mvGS7OpmdVsFHk0doMLHBe7GmSRXpfxDyI+Rfn
F/v7RuaL87T8UOzy1d2XmX81AyKLdb+ESyf3S2dT8gwtf0ju3QLzxX2THE6+
Iyz4vPbDKx9r5f6CS1/xUHuLyIu1eRMe8nbm65kUZ7tir+jjG5l/NQMii8Xz
kxnUykfxWZ/h6t3kygE0KxY8X8ykrq2Ymc/G/OT3Wz6WdOlkfglWiEwXNdde
qlnRYv4bnUow/6pHb2T+1QwIBmpWCJcW9U+yN1nn1vxoh1lmvp7JVr4LLi2w
XXv+gq+2niMy6Kr+SfYm63zF7St2JVmx1q/kvIneaR9Y+/8LM7DQC+144pz6
c9IbNQd0LidZseD5mhU636/2boHhSea39lFnh3C8pG+I3dfeKJgv/FDk/luY
L/JOO5Xu+xuzYGEGhJcmvyNm7Kr+y8xfdkvtosIxkp4vZjXJEzFLOusXmH81
A1cc0/1KZoTgwxrz1/is/VDfPen5Se8VPBHukWTpgudrf7uqp/bhZT6sMf/q
PIKZwg9FL1pcSnJY8ETMUpIVC55/dS/BfM3/t/Bh4TlJJ7/alwVvXGC+9jq9
O8ls0vdtMV84kmD+G3dE8GHhOVeOl3SnZNYsM197XbLmOpv0fReyKfnOcpXj
yzvyGZgv3EC4k/78Fua3eif8XGeTnr2FbNJ7J7K4xbSrfX8786/4pt2p5Qlr
zBfZlNwd/Y5wlR3inJqlotfJ/i7syGdg/pN5TrrTG2uSPJvu3dXuJN81NCsW
sumK+Qv9XdiRz8D8q1nV7rTgCQvMv2J7a3fEZ+G6ybu0ZiCZTVe+p+vzGZgv
WC3caa0mLeYnOSB2R9cqeV+943oGxLvAFcNbO/IZmN/iknYPnTVJjiWdsOWB
C8x/wkPBOj0D2vc0M3U2fVTm63erlnuImizkUZJjC3mUZH7LSa5YesVwPZ+a
+aKeH4n5rZpr9xA1WWD+VY4nvS7ZxyRLr5xE/O6CYye9OtnrtzP/6o4LDi8y
K8n55NmSrpvc/SRLr3ZKe3vLsZNerR1G1HDB85/Mif7ccpWrvNP9WvAfkUct
z7/yEJ1NyX3Xnrawv1cZvcz8KzcQrrvgKld5p/u14D8iO5ZZ2mL+1Qy0dqd1
x6s5fDvzr9xA87/lKqJWa2fTPdVe3WJpi/nib5Pz2brjlbO9nflrzrbA/CsH
fsvZdE+1V7dY0WL+1Qxox9bP0exaZp3eu6SzLTD/yoG1R4kM0h4uvHrB8Vqe
f1XnJ2e+6pG+Yytf1pi/5mwLzL/yw2TNk9950hfh1S2WLni+dlFxttYdW/my
xvyr/V2oQ5KlV2wXjqQ/i5lZYP7V95PZJGZSn611x1a+rDFfOE+rDlfMv9oX
4bHibMIfWt9PsnQhmwTPl31D7LjOlzXm616/kfmiL5r5YmaSeyTu2/LGZDbp
fRFnE3N45agiX9aYr+cwWQftAGvM1zOT3CPBW83ShWxaY36S/1e+dOVRIjta
e5rc5QXmX7FaM3/Br4Qnt/xc56/Ipqu5umJ+yz2EcyZ7nWT+1eerXV5gvphn
7fnJvdOerJ1BcPgqp5LzqT1/mfnib69qkvR8nSlXGaqZr1kn5naB+SK/BN+u
3DX5HiHmU3t+cg61L+letzxfZ8qCt7ScU/NqId+FHwrmtD4LziSzUv9Wy/OT
s7rA/KvfuqpP0iWSzimYL7JJ9Poqj1q/28pKcUfhKq2aJ31Js6Xl+YL5T3qn
XSLpnIL5Le/Sjr32u5r5oiZJRxX3Snq+cGNR8+SeXs3zmksknTM5P9q79O+K
XBMzv+xF+pxillqen8xiMRtiT8WcLLhEsqeteRDeJfZIO0DSrxa8SGe6mKWW
5yezeKGPC2xpuYQ4m8ialm8kM+UtPpb0Zz3DuiZi3oTni/OLvda7mWSLzj7t
hC1f1b4hPC3J85YnL3iR9re3M//qbHqeRR+1MydrIrI42UedOwtzpc+gfUx7
vu6d+N03Mv9LZ6M1z8LDtS/pM+gsTvZRzMPV56t7idlI+pj2fNFr4cZvZ37L
J69yKukzSXdtcSaZucJbxGdRwzf62BWjtBfp9wvdl6Tnr/E26VHJ3dF90R7V
8kntosv3WvAxwV59hifPb2Vx0vPXeJv8zpM+Jjn2ZHeumHlVn6Q/tDw/mRGt
9xThNsm/1VxaY37y7mIvBOsE00QNk3xLZqLwh5bnt+og6inYK7xIv1+I7G55
fsszhVcIDxEs0jm1zPzW+1rS8wUTWvVMOmfyb0XWPNmXZM313a/yKMl8zSLR
l7cwP+kPLc8X52zVM+mcyb8VObXM/OTdr9gl+C+4LbxFZ3HL81t9FMxvzZuu
Z9I5Ba+0q7yF+cm76x4JViTdfiGLW57f6qNg/gKX3sJ84UXi+XovksxP3v2K
XS3PT9awlcUtzxdOrnNwjUu6nknnFLsmPr+R+TojrtxMu2LSw4U/iN1Men6r
j63MbXFpjfmiR9oPF3L5quYiI67qdlUHfX7B5CfcWGb+Qh9bmau5lNypJB8E
e1uOseD52lv0LghWCCZc+YDO7uVsEm6T7K/mUnKn9I6L94hWtray+Ko+gmna
UYUnaCZfZXSSgTqbhNtcMV/vnWBRi/lP5kq7jXaMZBZfPV8wTfuA8ATN5AVO
as8Xu6BzMHmX5Dy3PF8w/8kztWNovxV9F0wTzNHc00wWuyxmMplNSb8V92o5
jNgp7eEfaR+vziZqktxl4ZOidy13XZsN4cOa+SIHF/y5leNJD/9I+3jlb1c1
b+3yMvP1fVtOLvZF5EXSbYTP6PsueK/2io+0j1f+1vr+1X4tM18wVsxYcjaS
9Uy6jeDJGvO1+yX36437mMw48f2r/VpmfvJvF3ZZ9K7FySdcveLJGvPFc7RX
XM3zwj5e+Vvr+1cMX2a+dsJkvrR8SXBY3+vKZ9aYn+yj3q9kv4RjtJxN7/7b
ma+dcG0HtZvp/mq/Ss7qW/xcfOeKkyKLBW+TztY651uYrx0jyVLtG7omyXvp
M7eY3/JSsV8LDNF80L+bPOdCv6687upvF3b5KsfFeZL3ar3LLMzzmu9dzXnL
86/OLH43ec63MP/JLug6i10WPUo6xtW9NJcWPL81J605TzJf8C3pjS1vWWB+
Mls1S7VXi3rq39WeLzim51nPiZiNNeaLnEp6Y8tbFpivPUfnRdKr9X3F72rP
FxzT8yZ2Qddnjfn6DNobNR+Wmf/knOL5Czt75dvJeV5zaVE38Zwnv3uVxWK2
NfP1GbQ3ir6/hflX3NCOlNzZqx1PzvOaS+t3k6vnaOYnZ17Mg7iXqI+YsY/K
fJ3Lmp9rzE/yYdmlW45xtS9XzG+5aCtbr86g66lZvcx8nctX/RJ7IZivXf0t
Lt1yjAVnSPZIc0/M80I9PzPz176v9zfp+UlfWtj3Bce48jrh+UkXbblcy6nE
zHxU5msXvWKmqIOeyaQviVm92vGWMywwv8WTVl+0M+hc/gzMX+B80tk087Wr
J3kiOLyQoS3PbzE/2ZfWPIid/ajMX+C83oWW518xp+WQgsNJZ9C9WONJkhXC
1cXvigx6O/P1DLxlF/Q8a39reb7wh6u7616s8UTvu+6d+I7IoLczP7n72osW
mP+Ew2L2BPPFLAlmLjA/yRO977p3C791lePLzBcOk3zOGvNFH1sOqWe75bEt
z9c8SXr+k8/ivle/pV1ugflXTq77q3dc56D2fOGQYv71PFwxXGSZ5one9ysm
a6/TfbnaqRbzxcys8SfJ/KR3aYcU86/n4WoHRZZpnuh9X/BP/VvJuV3w/KuZ
WeNPy/OF4yUdUrNL1CTpzzrTteeLOdd5pH9L5MUa81s7vpAdSV9NcjJ5x6ua
aMYKlupMT+aI8Ki3vFPovFhj/pp/tnZ8gcNrDnl1l6RL6J0S/LyabdELwWQ9
8635fwvztdto7iXZrjmczOVWX1qO2mJ+crYFM3/J8/8HAuVOQg==
       "], {{0, 128}, {
       128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}]}], "}"}]], "Output",
 CellChangeTimes->{3.774189172988782*^9, 3.77419363293056*^9},
 CellLabel->
  "Out[152]=",ExpressionUUID->"233f36f9-4ff4-4248-b76a-6058ca299c46"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1jFKXAEYhdHBgMwyzBZMZZNnqpSCljaOwVQSxRRi5ypcQxaRwvW4g3Qq
WNgI85g3913IOaB8go4OM3L/z+dXxz93FovF7+XLp+PV7bebm9Xdye7rFxer
yy/7l59e8v7t47VP/x4O/x6vh18HR1/f9/fdH8PDcm94+nM2vO+Pvn9sr/OY
Y79nk97k8cc+33UeZ9u/d6rXaKrnOPZvmOv9s4333iZ/51Sv11yv+1zv/7HP
faqfnep/dqrntQDgv7SNG0ZrrXV/z70/AMyjYYO01lq7/wHIaNggrbXW7n8A
Mho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGut
tfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyG
DdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+
ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO0
1lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHI
aNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW
7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2
SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsf
gIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJa
a+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCj
YYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7
/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNgg
rbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8A
Mp4Bv/Xysw==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1sEqtAEcxeFByQVQtm6BrbzZuACUhdAoVkqxkJ0rc0GuAmVho2je98wp
z1P0+6RvZhj9z871/fHt6mw2e9z4+HQ8fzp8eJg/n6x//uNmfre3e7f2kS9f
H599cH45XL1tDY97p8PK1tmwf/F6sLl9NHz/+hT902P99Tn85vu/f89Y/Zv/
f5HX/tfnMMVjjfUax3qsRX4OU7wPp37PLPIal/UcGn6/Y/1dL/L+n/r5jPW4
MwD+pal3vtZa685e9v0BYDkabpDWWmv7H4CMhhuktdba/gcgo+EGaa21tv8B
yGi4QVprre1/ADIabpDWWmv7H4CMhhuktdba/gcgo+EGaa21tv8ByGi4QVpr
re1/ADIabpDWWmv7H4CMhhuktdba/gcgo+EGaa21tv8ByGi4QVprre1/ADIa
bpDWWmv7H4CMhhuktdba/gcgo+EGaa21tv8ByGi4QVprre1/ADIabpDWWmv7
H4CMhhuktdba/gcgo+EGaa21tv8ByGi4QVprre1/ADIabpDWWmv7H4CMhhuk
tdba/gcgo+EGaa21tv8ByGi4QVprre1/ADIabpDWWmv7H4CMhhuktdba/gcg
o+EGaa21tv8ByGi4QVprre1/ADIabpDWWmv7H4CMhhuktdba/gcgo+EGaa21
tv8ByGi4QVprre1/ADIabpDWWmv7H4CMhhuktdba/gcgo+EGaa21tv8ByGi4
QVprre1/ADIabpDWWmv7H4CMhhuktdba/gcgo+EGaa21tv8ByGi4QVprre1/
ADIabpDWWmv7H4CMhhuktdba/gcgo+EGaa21tv8ByGi4QVprre1/ADIabpDW
Wmv7H4CMhhuktdba/gcgo+EGaa21tv8ByGi4QVprre1/ADIabpDWWmv7H4CM
hhuktdba/gcgo+EGaa21tv8ByGi4QVprre1/ADIabpDWWmv7H4CMhhuktdba
/gcgo+EGaa21tv8ByGi4QVprre1/ADIabpDWWmv7H4CMhhuktdba/gcgo+EG
aa21tv8ByGi4QVprre1/ADIabpDWWmv7H4CMhhuktdba/gcg4x3Q00bG
       "], {{0, 
       128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1jFKmwEcxuEQoXiFjl7Bzk1wL1hiL5CCTgHFDsXNk3TreboK3sFR6CIm
0LWQkO9784rPA5Vfi5rEqu//5Pv14mo6mUx+HK/fLJY/z25vl3cXHzZ/uVyu
Pp2ujtZ5/+/Ppj/+OZ8//36ZPT3+ne3aDzdfPi+vp/Ovv77Nt/n3XT92jM+/
zWNt8xyGeqyxP+eur3Gbxx37+Qz1vTfG/+9Qz3OMn6kxvvf2+RoO9VqGeu1D
/a471O+Wfb7+/3ufCQDv0j6bqLXW+u32ofcHgMNo2CCttdbufwAyGjZIa621
+x+AjIYN0lpr7f4HIKNhg7TWWrv/Acho2CCttdbufwAyGjZIa621+x+AjIYN
0lpr7f4HIKNhg7TWWrv/Acho2CCttdbufwAyGjZIa621+x+AjIYN0lpr7f4H
IKNhg7TWWrv/Acho2CCttdbufwAyGjZIa621+x+AjIYN0lpr7f4HIKNhg7TW
Wrv/Acho2CCttdbufwAyGjZIa621+x+AjIYN0lpr7f4HIKNhg7TWWrv/Acho
2CCttdbufwAyGjZIa621+x+AjIYN0lpr7f4HIKNhg7TWWrv/Acho2CCttdbu
fwAyGjZIa621+x+AjIYN0lpr7f4HIKNhg7TWWrv/Acho2CCttdbufwAyGjZI
a621+x+AjIYN0lpr7f4HIKNhg7TWWrv/Acho2CCttdbufwAyGjZIa621+x+A
jIYN0lpr7f4HIKNhg7TWWrv/Acho2CCttdbufwAyGjZIa621+x+AjIYN0lpr
7f4HIKNhg7TWWrv/Acho2CCttdbufwAyGjZIa621+x+AjIYN0lpr7f4HIKNh
g7TWWrv/Acho2CCttdbufwAyGjZIa621+x+AjIYN0lpr7f4HIKNhg7TWWrv/
Acho2CCttdbufwAyGjZIa621+x+AjIYN0lpr7f4HIKNhg7TWWrv/Acho2CCt
tdbufwAyGjZIa621+x+AjIYN0lpr7f4HIKNhg7TWWrv/Acho2CCttdbufwAy
GjZIa621+x+AjIYN0lpr7f4HIKNhg7TWWrv/Acho2CCttdbufwAyGjZIa621
+x+AjFc5zATq
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1jFKmwEcxuHQgjj0DkXwBLondOoqEUeHCO0UaImU4uYBnJ08Sq7QnsXB
A6jg4FKIfPnevMXnAcuvpabxS+H9H1z8mH//MJlMLveffpkvfn9ZrRZXp3vP
v/m2WB4fLT8+5fXL13Mf3v+Z/jw7md3+Op/dffo7/bx+mN6sv85e//km/fp7
//U6b/07Q/7dTV5nW+9nyHN76/sZ+/lv8nMNeeZDnsmQ9zn2a479WW/yzLf1
OkOe1ZDPYlffu63/e2N8jmM/nwkA79K29khrrfX/1bveHwB2o2GDtNZau/8B
yGjYIK211u5/ADIaNkhrrbX7H4CMhg3SWmvt/gcgo2GDtNZau/8ByGjYIK21
1u5/ADIaNkhrrbX7H4CMhg3SWmvt/gcgo2GDtNZau/8ByGjYIK211u5/ADIa
NkhrrbX7H4CMhg3SWmvt/gcgo2GDtNZau/8ByGjYIK211u5/ADIaNkhrrbX7
H4CMhg3SWmvt/gcgo2GDtNZau/8ByGjYIK211u5/ADIaNkhrrbX7H4CMhg3S
Wmvt/gcgo2GDtNZau/8ByGjYIK211u5/ADIaNkhrrbX7H4CMhg3SWmvt/gcg
o2GDtNZau/8ByGjYIK211u5/ADIaNkhrrbX7H4CMhg3SWmvt/gcgo2GDtNZa
u/8ByGjYIK211u5/ADIaNkhrrbX7H4CMhg3SWmvt/gcgo2GDtNZau/8ByGjY
IK211u5/ADIaNkhrrbX7H4CMhg3SWmvt/gcgo2GDtNZau/8ByGjYIK211u5/
ADIaNkhrrbX7H4CMhg3SWmvt/gcgo2GDtNZau/8ByGjYIK211u5/ADIaNkhr
rbX7H4CMhg3SWmvt/gcgo2GDtNZau/8ByGjYIK211u5/ADIaNkhrrbX7H4CM
hg3SWmvt/gcgo2GDtNZau/8ByGjYIK211u5/ADIaNkhrrbX7H4CMhg3SWmvt
/gcgo2GDtNZau/8ByGjYIK211u5/ADIaNkhrrbX7H4CMhg3SWmvt/gcgo2GD
tNZau/8ByGjYIK211u5/ADIaNkhrrbX7H4CMhg3SWmvt/gcgo2GDtNZau/8B
yGjYIK211u5/ADIeATha1MU=
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1k1KWwEYheFrCiHb6Bbs1B/sEnTmLAUdSECJA+msoy6ge+guugdBN1QF
pwHDvTk54vOA8ir+c/E7X3/cnl/PhmG4X7y8Ol8+nK3Xy58X89c3rparb4er
Ly/56+3ltS9vno9nB/PTu2FxuqnXR08n//48nvz9/f1dvelzt33/tl9/08eM
+b7v+dzk1x/z82z7txrzO455fvb1jE31u495JnfxM0/1LO3iOZzqGdv1MzzV
/6hd/6/b9u8zAPApTbUftNZaf6ze9/0BYD8abpDWWmv7H4CMhhuktdba/gcg
o+EGaa21tv8ByGi4QVprre1/ADIabpDWWmv7H4CMhhuktdba/gcgo+EGaa21
tv8ByGi4QVprre1/ADIabpDWWmv7H4CMhhuktdba/gcgo+EGaa21tv8ByGi4
QVprre1/ADIabpDWWmv7H4CMhhuktdba/gcgo+EGaa21tv8ByGi4QVprre1/
ADIabpDWWmv7H4CMhhuktdba/gcgo+EGaa21tv8ByGi4QVprre1/ADIabpDW
Wmv7H4CMhhuktdba/gcgo+EGaa21tv8ByGi4QVprre1/ADIabpDWWmv7H4CM
hhuktdba/gcgo+EGaa21tv8ByGi4QVprre1/ADIabpDWWmv7H4CMhhuktdba
/gcgo+EGaa21tv8ByGi4QVprre1/ADIabpDWWmv7H4CMhhuktdba/gcgo+EG
aa21tv8ByGi4QVprre1/ADIabpDWWmv7H4CMhhuktdba/gcgo+EGaa21tv8B
yGi4QVprre1/ADIabpDWWmv7H4CMhhuktdba/gcgo+EGaa21tv8ByGi4QVpr
re1/ADIabpDWWmv7H4CMhhuktdba/gcgo+EGaa21tv8ByGi4QVprre1/ADIa
bpDWWmv7H4CMhhuktdba/gcgo+EGaa21tv8ByGi4QVprre1/ADIabpDWWmv7
H4CMhhuktdba/gcgo+EGaa21tv8ByGi4QVprre1/ADIabpDWWmv7H4CMhhuk
tdba/gcgo+EGaa21tv8ByGi4QVprre1/ADIabpDWWmv7H4CMhhuktdba/gcg
4z8JACT2
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1j1KXAEYheGLAZltJKSwdsrADaliY6OF9QhaGQKGENJlJZJ9uJn0WYOg
AxY2wlzmzpkT8jygvIo/4+933l5+Pbs+GIbh2+Lp2dnqx6fb29XP88P1C1er
m+XxzZun/PX8tO73f5bjxdH9+P3d7w+b9JfPf8eH08XH1cndOPV95/qYL99+
k576ead+/E0+7zav38XXsovvw9T33eZrST7ObX4/237Wc/19zfX453qcU/+f
7Pp3Y67Xz/U39VoPAPyX5tq6Wmut/63e9/0BYD8abpDWWmv7H4CMhhuktdba
/gcgo+EGaa21tv8ByGi4QVprre1/ADIabpDWWmv7H4CMhhuktdba/gcgo+EG
aa21tv8ByGi4QVprre1/ADIabpDWWmv7H4CMhhuktdba/gcgo+EGaa21tv8B
yGi4QVprre1/ADIabpDWWmv7H4CMhhuktdba/gcgo+EGaa21tv8ByGi4QVpr
re1/ADIabpDWWmv7H4CMhhuktdba/gcgo+EGaa21tv8ByGi4QVprre1/ADIa
bpDWWmv7H4CMhhuktdba/gcgo+EGaa21tv8ByGi4QVprre1/ADIabpDWWmv7
H4CMhhuktdba/gcgo+EGaa21tv8ByGi4QVprre1/ADIabpDWWmv7H4CMhhuk
tdba/gcgo+EGaa21tv8ByGi4QVprre1/ADIabpDWWmv7H4CMhhuktdba/gcg
o+EGaa21tv8ByGi4QVprre1/ADIabpDWWmv7H4CMhhuktdba/gcgo+EGaa21
tv8ByGi4QVprre1/ADIabpDWWmv7H4CMhhuktdba/gcgo+EGaa21tv8ByGi4
QVprre1/ADIabpDWWmv7H4CMhhuktdba/gcgo+EGaa21tv8ByGi4QVprre1/
ADIabpDWWmv7H4CMhhuktdba/gcgo+EGaa21tv8ByGi4QVprre1/ADIabpDW
Wmv7H4CMhhuktdba/gcgo+EGaa21tv8ByGi4QVprre1/ADIabpDWWmv7H4CM
hhuktdba/gcgo+EGaa21tv8ByGi4QVprre1/ADIabpDWWmv7H4CMhhuktdba
/gcg4xGdfU5v
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1jFKmwEcxuFgQQQP0FmcXHWsJHiAthBPkEKdAoFkkG4depNewhs49CwF
LyBUwcHF4eNL3rzU5wHLT4hp1Kb/9+Tban5zMJlMNkdPf8wXt1fr9eLH9eHz
J98Xy4vz5Yen/Pny8dz3jx9nf+5+Tz8//Lr8eraZ/j3+Mvu0Op2+7tePeevx
bz1m6NcOfQ1jnnPMa9jXz2fo97utrx3zM9nW6xn6exzzuxjzd415/jHPuev3
2rbej7t4/bv4t7rr9++2/o8a831NAHiXhu4rrbXW/0fv+/4AsB8NN0hrrbX9
D0BGww3SWmtt/wOQ0XCDtNZa2/8AZDTcIK211vY/ABkNN0hrrbX9D0BGww3S
Wmtt/wOQ0XCDtNZa2/8AZDTcIK211vY/ABkNN0hrrbX9D0BGww3SWmtt/wOQ
0XCDtNZa2/8AZDTcIK211vY/ABkNN0hrrbX9D0BGww3SWmtt/wOQ0XCDtNZa
2/8AZDTcIK211vY/ABkNN0hrrbX9D0BGww3SWmtt/wOQ0XCDtNZa2/8AZDTc
IK211vY/ABkNN0hrrbX9D0BGww3SWmtt/wOQ0XCDtNZa2/8AZDTcIK211vY/
ABkNN0hrrbX9D0BGww3SWmtt/wOQ0XCDtNZa2/8AZDTcIK211vY/ABkNN0hr
rbX9D0BGww3SWmtt/wOQ0XCDtNZa2/8AZDTcIK211vY/ABkNN0hrrbX9D0BG
ww3SWmtt/wOQ0XCDtNZa2/8AZDTcIK211vY/ABkNN0hrrbX9D0BGww3SWmtt
/wOQ0XCDtNZa2/8AZDTcIK211vY/ABkNN0hrrbX9D0BGww3SWmtt/wOQ0XCD
tNZa2/8AZDTcIK211vY/ABkNN0hrrbX9D0BGww3SWmtt/wOQ0XCDtNZa2/8A
ZDTcIK211vY/ABkNN0hrrbX9D0BGww3SWmtt/wOQ0XCDtNZa2/8AZDTcIK21
1vY/ABkNN0hrrbX9D0BGww3SWmtt/wOQ0XCDtNZa2/8AZDTcIK211vY/ABkN
N0hrrbX9D0BGww3SWmtt/wOQ0XCDtNZa2/8AZDTcIK211vY/ABkNN0hrrbX9
D0BGww3SWmtt/wOQ8Q9pDfwS
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1sGKFUcUx+EhkkTXWWSdV4jb4KAB12F8ghEUAkJAF+JOyC5v4pP4WlF0
4WbA4U7P/P7wLW5TXdTtrnO6TtX32/N/Ll7+cHZ29ub+p8vF5dvHr19fvnv2
0+ebF5evHv7+6t6n5vuvv8/tD389f/Tx6a/nf/98cf7jvw/OXz7579GHX/78
49v+q9pXjf+2/7rPvG77qnd9zxxOmdv3/Pe6Y647z1Oef0rejv52R8Ry9Jq5
qfcencNT5lOL/ZQaOaIubqqmjsjJTdVXOed3dXbc1Jgjztmj19LRe+nRsRy9
zxxxXt/V2ijEXltLt+nnWk5qOef/2zHz0fVym3VRMHBhT16MvWzRo+v6rnJS
zjn/8z//988a/ud//ud//u/syYuxly3K//zP/02z8T//8z//8z//rxuY/5sW
5X/+5/+m2fif//mf//mf/9cNzP9Ni/I///N/02z8z//8z//8z//rBub/pkX5
n//5v2k2/ud//ud//uf/dQPzf9Oi/M///N80G//zP//zP//z/7qB+b9pUf7n
f/5vmo3/+Z//+Z//+X/dwPzftCj/8z//N83G//zP//zP//y/bmD+b1qU//mf
/5tm43/+53/+53/+Xzcw/zctyv/8z/9Ns/E///M///M//68bmP+bFuV//uf/
ptn4n//5n//5n//XDcz/TYvyP//zf9Ns/M///M///M//6wbm/6ZF+Z//+b9p
Nv7nf/7nf/7n/3UD83/TovzP//zfNBv/8z//8z//8/+6gfm/aVH+53/+b5qN
//mf//mf//l/3cD837Qo//M//zfNxv/8z//8z//8v25g/m9alP/5n/+bZuN/
/ud//ud//l83MP83Lcr//M//TbPxP//zP//zP/+vG5j/mxblf/7n/6bZ+J//
+Z//+Z//1w3M/02L8j//83/TbPzP//zP//zP/+sG5v+mRfmf//m/aTb+53/+
53/+5/91A/N/06L8z//83zQb//M///M///P/uoH5v2lR/ud//m+ajf/5n//5
n//5f93A/N+0KP/zP/83zcb//M///M///L9uYP5vWpT/+Z//m2bjf/7nf/7n
f/5fNzD/Ny3K//zP/02z8T//8z//8z//rxuY/5sW5X/+5/+m2fif//mf//mf
/9cNzP9Ni/I///N/02z8z//8z//8z//rBub/pkX5n//5v2k2/ud//ud//uf/
dQPzf9Oi/M///N80G//zP//zP//z/7qB+b9pUf7nf/5vmo3/+Z//+Z//+X/d
wPzftCj/8z//N83G//zP//zP//y/bmD+b1qU//mf/5tm43/+53/+53/+Xzcw
/zctyv/8z/9Ns/E///M///M//68bmP+bFuV//uf/ptn4n//5n//5n//XDcz/
TYvyP//zf9Ns/M///M///M//6wbm/6ZF+Z//+b9pNv7nf/7nf/7n/3UD83/T
ovzP//zfNBv/8z//8z//8/+6gfm/aVH+53/+b5qN//mf//mf//l/3cD837Qo
//M//zfNxv/8z//8z//8v25g/m9alP/5n/+bZuN//ud//ud//l83MP83Lcr/
/M//TbPxP//zP//zP/+vG5j/mxblf/7n/6bZ+J//+Z//+Z//1w3M/02L8j//
83/TbPzP//zP//zP/+sG5v+mRfmf//m/aTb+53/+53/+5/91A/N/06L8z//8
3zQb//M///M///P/uoH5v2lR/ud//m+ajf/5n//5n//5f93A/N+0KP/zP/83
zcb//M///M///L9uYP5vWpT/+Z//m2bjf/7nf/7nf/5fNzD/Ny3K//zP/02z
8T//8z//8z//rxuY/5sW5X/+5/+m2fif//mf//mf/9cNzP9Ni/I///N/02z8
z//8z//8z//rBub/pkX5n//5v2k2/ud//ud//uf/dQPzf9Oi/M///N80G//z
P//zP//z/7qB+b9pUf7nf/5vmo3/+Z//+Z//+X/dwPzftCj/8z//N83G//zP
//zP//y/bmD+b1qU//mf/5tm43/+53/+53/+Xzcw/zctyv/8z/9Ns/E///M/
//M//68bmP+bFuV//uf/ptn4n//5n//5n//XDcz/TYvyP//zf9Ns/M///M//
/M//6wbm/6ZF+Z//+b9pNv7nf/7nf/7n/3UD83/TovzP//zfNBv/8z//8z//
8/+6gfm/aVH+53/+b5qN//mf/7/0/w/UeBcG
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
e0XIneZA/jO7ZPck/115Ee72ze76t14AwXWCfw==
       "], {{0, 128}, {128, 0}}, {0.,
        1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1kFKWwEYhdGgIG5DxA3o1Bo6cmiJK3iFCoVAQQelk9KxK3AiFJy4sq6j
EZwKhvfezS09B5RPIRqNeP+jz99WN3uLxeLucPNuNXz/eHs7/Lg+ePngy7A+
O13vb/LX69tLP95/Wv68Gpbnf54vjr9efvj9dLE8WT+8q9967LafH/O9pnqe
Y57ze77OVF9zzM8y1Wu0q8eOed3HvNZT/Q3M8Rpt+3ub4+9q28eO+b5z/LxT
Pc85/ufM/b9lAcB/aapbS2ut9b/Vu94fAHajYYO01lq7/wHIaNggrbXW7n8A
Mho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGut
tfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyG
DdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+
ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO0
1lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHI
aNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW
7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2
SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsf
gIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJa
a+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCj
YYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7
/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNgg
rbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8A
Mv4C4lst7g==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}]}], "}"}]], "Output",
 CellChangeTimes->{3.774189172988782*^9, 3.774193632948462*^9},
 CellLabel->
  "Out[153]=",ExpressionUUID->"be30ef96-2b5b-4e45-b1ca-a8f50075d993"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Network XIV - BatchNorm, 1024 linear, dropout", "Subsection",
 CellChangeTimes->{{3.774202761342402*^9, 
  3.774202772784957*^9}},ExpressionUUID->"115e0f41-1d29-42b0-b160-\
97fe4796a451"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"netECA14", "=", 
  RowBox[{"netEightCC512drop", "[", 
   RowBox[{"128", ",", "128"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7742027753076267`*^9, 3.774202787786147*^9}},
 CellLabel->
  "In[159]:=",ExpressionUUID->"999b2472-a408-4b22-87c5-6f38ad3905f0"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["15", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{24, 3, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 24, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 3, "$InputSize" -> {128, 128}, 
                    "$OutputSize" -> {126, 126}, "$WeightsInputChannels" -> 
                    3], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "bat1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{24}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 24, 
                    "$SpatialDimensions" -> {126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "ramp1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {24, 126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{16, 24, 2, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{16}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 16, "KernelSize" -> {2, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 24, "$InputSize" -> {126, 126}, 
                    "$OutputSize" -> {125, 124}, "$WeightsInputChannels" -> 
                    24], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 125, 124}, 
                    NeuralNetworks`RealT]]], "bat2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{16}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{16}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{16}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{16}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 16, 
                    "$SpatialDimensions" -> {125, 124}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 125, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 125, 124}, 
                    NeuralNetworks`RealT]]], "ramp2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {16, 125, 124}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 125, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 125, 124}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{24, 16, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 24, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 16, "$InputSize" -> {125, 124}, 
                    "$OutputSize" -> {123, 122}, "$WeightsInputChannels" -> 
                    16], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 125, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 123, 122}, 
                    NeuralNetworks`RealT]]], "bat3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{24}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 24, 
                    "$SpatialDimensions" -> {123, 122}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 123, 122}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 123, 122}, 
                    NeuralNetworks`RealT]]], "ramp3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {24, 123, 122}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 123, 122}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 123, 122}, 
                    NeuralNetworks`RealT]]], "pooling" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {120, 112}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 24, "$InputSize" -> {123, 122}, 
                    "$OutputSize" -> {4, 11}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 123, 122}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 4, 11}, 
                    NeuralNetworks`RealT]]], "flatten" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 4, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1056}, NeuralNetworks`RealT]]], 
                    "linear" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1024, 1056}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {1024}, "$OutputSize" -> 1024, 
                    "$InputSize" -> 1056, "$InputDimensions" -> {1056}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1056}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]]], 
                    "drop2" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.2, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]]], 
                    "linear2" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{4, 1024}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{4}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {4}, "$OutputSize" -> 4, 
                    "$InputSize" -> 1024, "$InputDimensions" -> {1024}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]], 
                    "softmax" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pooling", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pooling", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "drop2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "drop2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3, 128, 128}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {128, 128}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, "Interleaving" -> False, 
                    "MeanImage" -> None, "VarianceImage" -> None, "$Version" -> 
                    "12.0.10"]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {1, 2, 3, 4}, "InputDepth" -> 1, "Dimensions" -> 
                    4, "$Rank" -> 0, "$Version" -> "12.0.10"]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"128\"", "\"128\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bat1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ramp1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"16\"", 
                    "\"125\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bat2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"16\"", 
                    "\"125\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ramp2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"16\"", 
                    "\"125\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"123\"", "\"122\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bat3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"123\"", "\"122\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bat3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ramp3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"123\"", "\"122\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ramp3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pooling\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"4\"", "\"11\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"flatten\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1056\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"drop2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"softmax\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   ImageSizeCache -> {298., {129.9169921875, 135.0830078125}},
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.774202788683174*^9, 3.7742028175913277`*^9}},
 CellLabel->
  "Out[159]=",ExpressionUUID->"10128053-4d01-4f68-902c-88163b34a6aa"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"netECA14", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"netECA14", ",", "fullTrainingBigC13", ",", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", "20"}], ",", 
    RowBox[{"BatchSize", "\[Rule]", 
     RowBox[{"256", "*", "4"}]}], ",", 
    RowBox[{"TargetDevice", "\[Rule]", "\"\<CPU\>\""}], ",", 
    RowBox[{"TrainingProgressCheckpointing", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Directory\>\"", ",", "dir"}], "}"}]}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.772359301378972*^9, 3.7723593151826487`*^9}, {
  3.772692972974709*^9, 3.772692978955448*^9}, {3.772693103833131*^9, 
  3.7726931061383677`*^9}, {3.7726954327396307`*^9, 3.772695433052311*^9}, {
  3.773129922404114*^9, 3.773129928369681*^9}, {3.773159589015329*^9, 
  3.773159589253455*^9}, {3.773159731047542*^9, 3.773159755478558*^9}, {
  3.773160016071207*^9, 3.773160037844142*^9}, {3.773163441661957*^9, 
  3.773163451374845*^9}, {3.773164439689281*^9, 3.773164440226226*^9}, {
  3.773190755014002*^9, 3.773190759153596*^9}, {3.773214805205216*^9, 
  3.773214807559754*^9}, {3.773215293310206*^9, 3.773215308393745*^9}, {
  3.773254986921338*^9, 3.773254987629869*^9}, {3.7733289965083933`*^9, 
  3.773329001497841*^9}, {3.774171842022563*^9, 3.774171860396275*^9}, {
  3.774202833264744*^9, 3.7742028356331*^9}, {3.7742267154809437`*^9, 
  3.774226717906592*^9}},ExpressionUUID->"2b78ba2b-ca69-40f7-a718-\
85bd1ee0fd5e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dir", "=", 
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7733290093954697`*^9, 3.773329016503849*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"2d49fee6-0fc1-4f2d-be82-8cb69efbe488"],

Cell[BoxData["\<\"/Users/thorsilver/Downloads/Wolfram notebooks\"\>"], \
"Output",
 CellChangeTimes->{
  3.773329017635899*^9, {3.7734927077811537`*^9, 3.773492718275812*^9}, 
   3.774171834122046*^9, 3.7742267514462214`*^9, 3.7752215814152193`*^9, 
   3.775222120731801*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"560a82c9-5362-4524-9585-da4b03fbea58"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"netECA14", "=", 
  RowBox[{"Import", "[", "\"\<netECA14-r20.wlnet\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.774226756471808*^9, 3.774226768170888*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"76c414b0-2354-4828-b57c-fffb57f07863"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["15", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{24, 3, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 24, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 3, "$InputSize" -> {128, 128}, 
                    "$OutputSize" -> {126, 126}, "$WeightsInputChannels" -> 
                    3], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "bat1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{24}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 24, 
                    "$SpatialDimensions" -> {126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "ramp1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {24, 126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{16, 24, 2, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{16}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 16, "KernelSize" -> {2, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 24, "$InputSize" -> {126, 126}, 
                    "$OutputSize" -> {125, 124}, "$WeightsInputChannels" -> 
                    24], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 125, 124}, 
                    NeuralNetworks`RealT]]], "bat2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{16}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{16}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{16}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{16}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 16, 
                    "$SpatialDimensions" -> {125, 124}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 125, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 125, 124}, 
                    NeuralNetworks`RealT]]], "ramp2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {16, 125, 124}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 125, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 125, 124}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{24, 16, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 24, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 16, "$InputSize" -> {125, 124}, 
                    "$OutputSize" -> {123, 122}, "$WeightsInputChannels" -> 
                    16], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 125, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 123, 122}, 
                    NeuralNetworks`RealT]]], "bat3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{24}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 24, 
                    "$SpatialDimensions" -> {123, 122}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 123, 122}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 123, 122}, 
                    NeuralNetworks`RealT]]], "ramp3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {24, 123, 122}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 123, 122}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 123, 122}, 
                    NeuralNetworks`RealT]]], "pooling" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {120, 112}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 24, "$InputSize" -> {123, 122}, 
                    "$OutputSize" -> {4, 11}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 123, 122}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 4, 11}, 
                    NeuralNetworks`RealT]]], "flatten" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 4, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1056}, NeuralNetworks`RealT]]], 
                    "linear" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1024, 1056}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {1024}, "$OutputSize" -> 1024, 
                    "$InputSize" -> 1056, "$InputDimensions" -> {1056}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1056}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]]], 
                    "drop2" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.2, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]]], 
                    "linear2" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{4, 1024}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{4}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {4}, "$OutputSize" -> 4, 
                    "$InputSize" -> 1024, "$InputDimensions" -> {1024}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]], 
                    "softmax" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pooling", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pooling", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "drop2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "drop2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3, 128, 128}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {128, 128}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, "Interleaving" -> False, 
                    "MeanImage" -> None, "VarianceImage" -> None, "$Version" -> 
                    "12.0.11"]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {1, 2, 3, 4}, "InputDepth" -> 1, "Dimensions" -> 
                    4, "$Rank" -> 0, "$Version" -> "12.0.11"]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"128\"", "\"128\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bat1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ramp1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"16\"", 
                    "\"125\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bat2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"16\"", 
                    "\"125\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ramp2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"16\"", 
                    "\"125\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"123\"", "\"122\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bat3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"123\"", "\"122\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bat3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ramp3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"123\"", "\"122\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ramp3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pooling\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"4\"", "\"11\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"flatten\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1056\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"drop2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"softmax\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   ImageSizeCache -> {298., {129.9169921875, 135.0830078125}},
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.77522212415726*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"83f18fae-4edf-448f-88a8-3584fd7af270"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generating test data for Network XIV", "Subsection",
 CellChangeTimes->{{3.7742266909286623`*^9, 
  3.774226701142276*^9}},ExpressionUUID->"c219e134-7847-4218-9bfc-\
805cb9970bbf"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"testDataECABigC", "=", 
   RowBox[{"dataC", "[", 
    RowBox[{"128", ",", "128", ",", "1024"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData2TBigC", "=", 
   RowBox[{"genData2r2C", "[", 
    RowBox[{"128", ",", "128", ",", "1024"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData3TBigC", "=", 
   RowBox[{"data3T2C", "[", 
    RowBox[{"128", ",", "128", ",", "1024"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData4TBigC", "=", 
   RowBox[{"data4TC", "[", 
    RowBox[{"128", ",", "128", ",", "1024"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData5TBigC", "=", 
   RowBox[{"genData5TCC", "[", 
    RowBox[{"128", ",", "128", ",", "1024"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fullTestSetBigC", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
    "testDataECABigC", ",", "testData2TBigC", ",", "testData3TBigC", ",", 
     "testData4TBigC", ",", "testData5TBigC"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "fullTestSetBigC", "]"}]}], "Input",
 CellChangeTimes->{{3.7727181209651337`*^9, 3.7727181544477663`*^9}, {
  3.772718196797276*^9, 3.77271823838671*^9}, {3.7727184594178867`*^9, 
  3.772718461126959*^9}, {3.774192047474938*^9, 3.774192068250688*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"cbb6c1a1-3c82-46e6-ada1-b2f828f91bc9"],

Cell[BoxData["10240"], "Output",
 CellChangeTimes->{3.775222319601818*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"8cbbf700-8980-4f97-a87d-175854524ffc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomSample", "[", 
  RowBox[{"fullTestSetBigC", ",", "10"}], "]"}]], "Input",
 CellLabel->"In[59]:=",ExpressionUUID->"24a3e4aa-8895-4fb0-bfba-81f3bdb3c37c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2TGqJkUUBtCHgrgNcQeKmcwguIJxBU9QkwFhDEQwMDKfyE24AMVE92Rg
6AwYTCJMV9et/ur2CRyOQ9vv/XWrvlv/9YMvv3329TsPDw/fvf/qj2eP33/2
4sXjD1+89/pfvnp8/vFHz999xZ/+++e1/3r45ck3v3/y9PMPH5++6V9/e/nk
x3/+/vTnP/948qbf5vlZ7zz6nv9755nff9bPmrWGs37nijWZtQ5n9k/Fz521
H87UZeV7zqxPxf5ZuSazMvCq+s7Kk4qzVv1ZKvJwVp5X53DFOldnZvJ/W13r
BM/Kjer7TMU6r/wsybWrzt6r7rfVOVydq1ed31lnJyHfrsqBhM91VeZflTmz
7nUVd5tdanfms8zKuup7b8X9duVdtDrzK3pEQu5V5MAuvSAh82dlTsWelPlz
17/6Dp98H6j43pF8NtOyLuEemLA+u2f+rLvTrLp3yvyV+7a6XyTcB2b9/sln
s+I7Qqf8T+gFO2b+ynvdVc+n1a76XK/Mlop8rj77aee0eg8kZP5VPTftfpW8
r6rvFWl7OGHdKvL5qt608n57B1ff0+6Q/xW9IDnzV65b9X7olPkVd7+renr1
PaTrOVrZHxNyPi3/K37uHfbqLt8rEzI/IW8raurs5GRR2p1qx/zn3vmfljlp
Z2TlfZ7n7plZeyzhbNpL+d4l/9Py6uied0bY/CenFpyf/2mZf2bdjj7DPWz+
Y28nO21fJWd+RYbrBfe0+Q8nOCH/Zf75mQDn2/wnpxZ8bf7vnvmz5jzOUW+b
/9i3yV65r3bM/FlZPeu+l7A+PHePmf9wwj6s2G87ZlrCnS1hHXhN5pv/cMKe
nLXHdsz8q85v17XisTqa/3DC/pT557P6zPf6hM/Oa/aV+Q8n7MOj+61r5ldk
tVkQm//k1ILfPpfOvGd3z/o+fmbduq7tHWz+Y98mW03XZHJF7+B9bf7DCXvv
6DN3q+msO9iZdb7bmne1+U9OLfj8Xkr4/RMyv/rs3239O9n8x15N86x7bKf6
rvw+XtGjE9aQM/eb/Oej+X/m73dxdVZXP9OpFnew+U9OLe7sM7Xb/f5Zkatn
9v+s/1/AmTb/sVcTXJHbu/eC6qye1U93X1s+v5cSsl3+7+WKuXT1rDvBs7K6
os8mrA/XnceKMyj/7+OK7Lrb3XXH35kzbf7jHO24344+I0uZx86p+Q9ftd+O
1q7rzIc57Qzu2Avkf46P3iuueidzV5v/yIEEn/m+OeudzHz+PCZb/ue4YuZz
5v3Md7b5T04turribl/9DHNXm/84+wl77+j+qXiGmcfOS0K2y/98z6rLmWf0
AuaxDJ/1Hvl/H1fcJWbtW72A72zzH+d9ZeafWfNd3sm8u81/+MyemfX8Lu9k
3t3mPzm16OSKOcxV72TuZPMf5z1hv52pV8U7me9s8x9emf+7v4d5d5v/5NSC
mXll5lf0iITMl//MzGN9wfyHmbm3zX9yasHMvDLzK3pEQubLf2bmsb5g/sPM
3NvmPzm1YGZemfkVPSIh8+U/M/NYXzD/YWbubfOfnFowM6/M/IoekZD58p+Z
eawvmP8wM/e2+U9OLZiZV2Z+RY9IyHz5z8w81hfMf5iZe9v8J6cWzMwrM7+i
RyRkvvxnZh7rC+Y/zMy9bf6TUwtm5pWZX9EjEjJf/jMzj/UF8x9m5t42/8mp
BTPzysyv6BEJmS//mZnH+oL5DzNzb5v/5NSCmXll5lf0iITMl//MzGN9wfyH
mbm3zX9yasHMvDLzK3pEQubLf2bmsb5g/sPM3NvmPzm1YGZemfkVPSIh8+U/
M/NYXzD/YWbubfOfnFowM6/M/IoekZD58p+ZeawvmP8wM/e2+U9OLZiZV2Z+
RY9IyHz5z8w81hfMf5iZe9v8J6cWzMwrM7+iRyRkvvxnZh7rC+Y/zMy9bf6T
Uwtm5pWZX9EjEjJf/jMzj/UF8x9m5t42/8mpBTPzysyv6BEJmS//mZnH+oL5
DzNzb5v/5NSCmXll5lf0iITMl//MzGN9wfyHmbm3zX9yasHMvDLzK3pEQubL
f2bmsb5g/sPM3NvmPzm1YGZemfkVPSIh8+U/M/NYXzD/YWbubfOfnFowM6/M
/IoekZD58p+ZeawvmP8wM/e2+U9OLZiZV2Z+RY9IyHz5z8w81hfMf5iZe9v8
J6cWzMwrM7+iRyRkvvxnZh7rC+Y/zMy9bf6TUwtm5pWZX9EjEjJf/jMzj/UF
8x9m5t42/8mpBTPzysyv6BEJmS//mZnH+oL5DzNzb5v/5NSCmXll5lf0iITM
l//MzGN9wfyHmbm3zX9yasHMvDLzK3pEQubLf2bmsb5g/sPM3NvmPzm1YGZe
mfkVPSIh8+U/M/NYXzD/YWbubfOfnFowM6/M/IoekZD58p+ZeawvmP8w9/O/
HYDJyQ==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztmTGubkcRhJ+wZJEiyBEbIIDciC3YKzASRBZYJkBkLIFlsAkWQsIyiLEl
gkMwVpWrvp7+731XAo2Pzj+np7u6qnreL373p8//8KMPHz78+cff/t/nX/7l
t9988+Vfv/j0u//4/Zdf/fpXX33y7fJv//vfd+t//PST3/zrPx8++/onv/zN
af2zT//+2T//+PVn//7i5/+3dt9X9nHfT+Jv7Z/kzX3n1v6TeVD2SWrt7u/i
h65X8n5S31bv0Ofa0IM0n7T4QfnWh8PfaX/3HWX/03M3fjfmpEbKGZM80PvT
+FG+5a6TcyWYn6yRG2fCV0luEw11z7WhB2k+cWuhxNnq8cQXPWNreTNiHkn8
jIO178tDsqeb56THlZhbWKIxkPBnq0ZJn572V3gj8Z/Kdwn+mezBlldPvKvb
a26NkthO77e0z/0j/F4LhwnelLMTeHPfV+Jv+X+3psk7Sp6TGilnad0zJDgh
PG1yLzHZgwmuXN/Syr/bm4SnSjB2qqMbc2vGSerSWit4TvB2ix9acyUxXxA1
annOSR/b8o2tXNE9mPB8y7e05o4Ew8S9QUunXB/VqukkDol5ytXHSX5I5sqk
pm5+btU0iS2ZfZS6tOo4mZPEOxG+RelZF+eTOU9ivtVHiY5PnuWWJ3drquB8
A2636XuS85aPbfk0oo6tnLS8E613ScxJHZMeb3kPGjMtLpr0kBs8OcEPRC8n
Pav8dnNN3Xfosyd1vIX/WzNIC9tuHQn/M+k9iNltWw5veXKCH1pa06r7pL4T
NXX/6LMn9W3lJPHGrXhob+CeUcHD6blbd9p7tPZMdIHOYZKTlidv8UPCaa3f
3tJ3uqansz//XK6medKtF+G1CC5qxePGdstztmJ265LsmazpHN6a2QmOeu5D
4LM1axD6fqump5y3+ouOk/ZatEYk8Zx+2+rfVu/TPNnCdutcSj4JrSTqSM9r
RN0TjnVr0dKUWzVNdPO5f6LLSZyEX1UwMOmfT3lO+lSpXeJPaJ5sYVupdUvX
lDq29mzN7Kf8ELVozdpuzAlXtzRlsqZJL7e4l7gPmfS6bk1veXgFS8msp+SB
4DQCY621G7+SQ7qOhO9K5oWWr3ZjdvGc6PtkTZXn7m9b/jbRSpoHCD9JaGJr
BlH64oRbmicJjCn1SrSsdRaijsk+rXmW9jz0WRJNecWaJrOby4fJzJXwgPut
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
mrb8W2v/V+kvwmu5mriBz1v1JfDW0s1kTlF60/3WhucJ5yT8SXyL9nuJx6D1
2u2FVszJuW71F+G1kjy4tdvg+d13XLy1dNPFVQszbh4mn9Pzb8sH3uL8Fi+d
ct7Sa8LLKTEnXutWfxHeifacr75Wzq7UNNHNlo+i+Y1+Ts+/iZ62tLg1myTe
lfCZBD+4MSu9duplt8db/UV4syQPLY+9ee3WuuUJ3Rwq79zSmtbzltdye7xV
i9Nz+m6n5V0JvVbySeup2y/PP9rLJZhJ3n9v3r7FM61ctfKsYJXWmhZHKb2Q
8JKbq6SORJ8qunP6I3S/da4ED8S8Q8xldO8o7yvYcM/yimsFV609kz5N9IvW
mlPMynPlvIrXcvch9LEVW+tcz98SPJ/0kbs/zZn0XDbZO6d3CF1+S2tlBqS/
5dbCja11LnombeH2dEbCXyWxuRhQztXSuFvYJjiTyKEbJ9E7kzPLW1qf8Eno
o/stujdbWtOaSSdnbYUTEt5o8Yx7LkLjNmCb8OFJrpKa0n6DjuEtrSf1sVWv
pDeTdxQuVTjT5bTWrE33zulbLe0j/LBb90lsn2Ij7liUdwidTepI5LmFh81r
F1etufWW7tzyePQZFdwScdJ1JOYjwmNMYtv1G/S9SktnW149iZPwnK+ybt0J
uN+idYfO1YbZk+DAxG/TPrDVs/RsS+RkUq8JHibmWaIu2zznZh/b8qjK81u1
OH331uypxJNoR3LGpI4tn+zG0PL/yndbOWnpdaKn9J7K/q26JN96xfXkfcWG
OZ3IW4u7Wj7WxfwkZlp+lY7Zzc/k/EXv3/LAyvtELxD89pbWbs6JuWnDnE54
iUQv3Bw+n9PYTjDT8qtu/lsxT2Kb4J9X4bfWrJHU/Ra3bMs5MaMlHvX5dwvD
xAyb5JCe1xLMtDxtCwPEvNbCdsJ1BE9Ork+5asXm8ttmfaRz7r7j9g5xV0Bj
OOkjmquJeY3Q+pYfdjHgxpz4n493Czk/n/JJ81sLM6+ynrynnVxvyy3B1ZPz
WqL1rlaenk/i5JSfVmxurt7q+nl2wuO1Zs9t3NLKOYHhyf7d1lNKHhKubvmW
1v22e5ZEK1tYcnvh+U7CIa1cvaU1rd1JzrdxC53/BMOEzk7eadB4Vvg54Vi6
d1y9U/ZR3ndz0pqnaB/o5uotrU/nJTzeSccVvD3/NnALkf8W9ibveLf1lItD
957TPdfkfJTc2d7yeBty+FbvFpI8JM9PdSHuGSa5hc55gj0lD6d3lP5NZvYN
PeXGSd93Ed7V7RclJ8m5lG+1dGGyX97SWqmR8lzB0uSd8+b1Buwlmt7yAxs0
N8FqcnaldxL/0PJUhMcj+GoDrl5xTd8V01jdxi2b10q/KP3l/vZVzq5gNdk/
4VgF57S/Sr7b6tNWDt/zWqljoh20b0lifs/rpN9PvfYqc1mLl2judblx0msl
/di6q3kPd8K3+uLU760eSXqn5eve25rmq81zmfLdhJdo7m1hfvKuVel9Fw/v
4U74Vl/Q+Wz5BJfHNuR523qSrzbX4sRFCi/R3NvCvPtbQtMJHXkV77F5Tddd
6RHlecItH+s+z1fJd2/hX8Ebzb2JL0p+S2i6cvZER1q5em9rApMt3U80aBu3
bFtv85kb8O/eIRMc5fbpKR4lziT+lpc45T/5lpurDf24YZ1g0q1Foh2JRrzn
ddLvhM90Y5vUwdYsTHCRq02tGU3pZSUnrs4m/f6RH34YhyuYTGqhfCuJZwO3
vMo6qQVRx1s62Pp3jZaO0DErez7fcWNu5YS4f/jID3qtXcxs8Fof9f2HYSC5
A2lx3a2zKzkh8ulyURJzS79cfac18fTdj/zw/Xlr6e8pzy08tPhqQ/43rIk+
JbiOPrsbg8IzLU5uxZzoC6EXxJySrN8bP7T0V8lngofJs7zn9eSdxoZatLDR
OqPC7TSeEw5s9W/rOTFrvPo6wVWCzyS3p2+1zrKhLhvwoORkcmafxH/yjoLP
Vm4J3r6VTzeH7ndfcSadXCfePvF4SW4Tr/Ue9D3JZ2vubv1285q++3qrvETP
jAneXhGHiV4rf0nPPvdp+f9TbO65Tvu8h7VydkJnN/vYJG8tHlPuTjfkgc5b
wgMJn78Hfjhh7IQ3QnPd3Cb/jqOccUNdNqwV/Cu5dX+74exJH7U07j38GyXt
4V1MJnr0Kuvn2ek7sda/7SY94v4b9Kv3FNGbic6+1X9rU/gk4Ry3FhtykuQt
yY+SqxMmXU5T3tm8nrxzc3NF98hb5SKiN+ncvvqdNnHeBP+vmDeXk5W/Fte9
4vq/lr1pzQ==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztlzGqZlUWRgsV6RkYd2SuYFiF4Ag01aAEjQTBDsTE7tiR9CwMnEv3NKwC
AxPhHs/Z965v7xUoS3nvf/ve831rn/+fX3//+bfvvHjx4l//ePOvz1//+OkP
P7z+6Yv33/7HN6+/+/ij7959g//545+3/O//f//q1w/ee/nrRz+/+uqTX15+
9r8PX/323y9f/vn//xX/1c9f+Zw//8zq5+z83VPzXOFTn1/xDlfPtPocT73/
nb9b/X6qn2Unq6fmPNW7lH7dmY3q91aR4WovnepyxXs+9W538lbx/k95oNqN
dz7XnXeYHXfdmeFqn9zZr2p/3rkrT3Whwv8V51X9XKfuFU/NTL4bV/eo+p5A
uEc95fw73wPhbnxnB+/ciU/dHwiOrdizhDmrM3bqu1vF71bcf1bPvcL/p3pR
fW9/6jsm4d1WvJ9Td5in7g+0ft15ZyDvAto57pz7qV6feq4Kl1a85zvvCae+
uxHebcW98c476lN3Qlq/Ku7MKf4nnGOiK9L9X303rt5Nd77bU++K7JmdTlX8
PM3/nZh2jmRXnLofEvx/yoF3Op9wT66Ys/pZqp1wyhuE+9Vkrugd+f5/pwMJ
/t85o1PdJ5xv9f6qzsBTTrjzDvDU/WoyV/SavAt23HKqCxW+ot0HyLug2l0V
GSA4/6m7X6fdSuanek3YCxXvqsJX1T5ZzQDNCXfeXWlnV+3qO/dpp92ayO6C
ezpV4Zmn7oSnXF19VzzlavLZnXL1U2edvls7sbvgbKcIe6qiU085/9Q9v/qd
ELy0c46EzJN36wSevAtOeYa2C3Y+h3DnPzU/bZ/e2eWKLlSfKe19TuOuu2DV
83c+OyH/ZOcTPEC+o57KFWGPk3frNO66C648I+FeVJ1/ghNS/E/w/M7ZPdXf
CreT89CVCVm68x5CeMaKXUB2fqL/E/tIy/addx555i7Y8QnBkxW97npeXflO
lz5176q+v8kzd8Gqz2n+33EjbX79X+f8U+f71Oecco7sLjjlRvKzPNVr/f9s
j9J3fcW+kzlM8Gf1vYjcr3Se7P+K3tHOdKdHhPcsM3fBzmx3fqas/yf4v6Jr
5iGXK3bBzudXzEzoXTrb9x7+X/W8d/45fGoXnLpjPDWPrP8n+H91fnfBHH4q
J6ecQ+hXJ9b/Pfx/Z2flflxxl9jJpHd+/U/mlExW9F3uwU/dQ3ZySOhUJ9b/
/fx/qvuE9yzn5nZnhqf21zTW//wenbp37fSL8M5lfm5PufrK7xJ6l872ndmj
p/pIeLdyVm53Zrhzp8j6n9yjauevzkl4zzIzt6ve2LnbV+wUWf8TelR9jqd2
BOGdy5zcnvrdnV1A62Ai2/ce/q/umtyDn8rt6mw73xcIvUth/Z/Vo+qumYHe
fGdudz5/1UuE3iWy/uf3qKJrO88o5zItt6fu/ORnIbN9n9OjnU7JPTglt6cc
RZifzPq/X49O9YLwnuU5ud1x1M73iMms/3v0qMLt5qEf03JbfQ8hzE9m+967
R6u9ILxb2dzueCnlGQms//v16NS9iPCe5Tm5XfXSzv+X9X+nHlW43Tz0Y1pu
d763rmaV8Fw0tu/2yHOfw+TcVnjbXaD/7dHfyz/hPcu9c7sz/52f2ZX1f78e
VewIwjuXe+R2NWMVuSW8BwLb99we7XjeO/9MJuT21F1lJ+eE90Bg/Z/bo1N3
e3fBHO6U2x13EZ6XwPq/R48q3G4e+nFibney7Z1f/0/o0arnvfPPZHJud7J6
6jOnsf6f06Ode5Tcg2m5PTXzjscInSW8f7vfo0fVvZNzmZDbK3+X9jNd2b7n
9mjH8975ZzIttzt3j4qfmcb6v0ePdu727oI5TMjtqdl2fsZdoP/Te7Qzw84z
yrn8VG5XfVuRz1OzdWL7ntUjQu/kXL4ztztOTv/MFNb//B49lWfCe5azcruT
sfTPTGT9z+zRnb1bfUY5l5/K7aqTTzm84jM7sX3P6tGp7wLe+WcyIberzln9
3VOfOYH1f26PTt3t3QVzmJDbU3+X9jmJrP9ze7Qzw84zyrlMy62s/xM5pUdX
5vfc53BKbmX9T2Zyj1bndxfMYXJuZf2fwrQeVbjdPPRjWm5l/Z/IKT26Mr/n
PodTcivrfzKTe7Q6v7tgDpNzK+v/FKb1qMLt5qEf03Ir6/9ETunRlfk99zmc
kltZ/5OZ3KPV+d0Fc5icW1n/pzCtRxVuNw/9mJZbWf8nckqPrszvuc/hlNzK
+p/M5B6tzu8umMPk3Mr6P4VpPapwu3nox7Tcyvo/kVN6dGV+z30Op+RW1v9k
JvdodX53wRwm51bW/ylM61GF281DP6blVtb/iZzSoyvze+5zOCW3sv4nM7lH
q/O7C+YwObey/k9hWo8q3G4e+jEtt7L+T+SUHl2Z33Ofwym5lfU/mck9Wp3f
XTCHybmV9X8K03pU4Xbz0I9puZX1fyKn9OjK/J77HE7Jraz/yUzu0er87oI5
TM6trP9TmNajCrebh35My62s/xM5pUdX5vfc53BKbmX9T2Zyj1bndxfMYXJu
Zf2fwrQeVbjdPPRjWm5l/Z/IKT26Mr/nPodTcivrfzKTe7Q6v7tgDpNzK+v/
FKb1qMLt5qEf03Ir6/9ETunRlfk99zmckltZ/5OZ3KPV+d0Fc5icW1n/pzCt
RxVuNw/9mJZbWf8nckqPrszvuc/hlNzK+p/M5B6tzu8umMPk3Mr6P4VpPapw
u3nox7Tcyvo/kVN6dGV+z30Op+RW1v9kJvdodX53wRwm51bW/ylM61GF281D
P6blVtb/iZzSoyvze+5zOCW3sv4nM7lHq/O7C+YwObey/k9hWo8q3G4e+jEt
t7L+T+SUHl2Z33Ofwym5lfU/mck9Wp3fXTCHybmV9X8K03pU4Xbz0I9puZX1
fyKn9OjK/J77HE7Jraz/yUzu0er87oI5TM6trP9TmNajCrebh35My62s/xM5
pUdX5vfc53BKbmX9T2Zyj1bndxfMYXJuZf2fwrQeVbjdPPRjWm5l/Z/IKT26
Mr/nPodTcivrfzKTe7Q6v7tgDpNzK+v/FKb1qMLt5qEf03Ir6/9ETunRlfk9
9zmckltZ/5OZ3KPV+d0Fc5icW1n/pzCtRxVuNw/9mJZbWf8nckqPrszvuc/h
lNzK+p/M5B6tzu8umMPk3Mr6P4VpPapwu3nox7Tcyvo/kVN6dGV+z30Op+RW
1v9kJvdodX53wRwm51bW/ylM61GF281DP6blVtb/iZzSoyvze+5zOCW3sv4n
M7lHq/O7C+YwObey/k9hWo8q3G4e+jEtt7L+T+SUHl2Z33Ofwym5lfU/mck9
Wp3fXTCHybmV9X8K03pU4Xbz0I9puZX1fyKn9OjK/J77HE7Jraz/Cfw79fqp
/g==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1zHKX1UQBfBgUFyFYGysY2FlgluIjWAVQauAEBGxcwNux8qtuBcTsA18
H+/Nnd+ZewtllOS+mTPnnDn/z3/85dXPHz158uTXT9/969Xr3799+/b1H999
8v4/fnr95qvnb56+K//8/5/39fPPnr74+rcfXv797N8XX37/7OU/z//65vnH
X7z80P//0J95yJ+/Uj/2Wx/681d6voLVXX0+pP+KeSv4cGWWal514XYX367M
spJjVzCpwHYl/yt4eIVLFfVKbVb3X+0PFXdthzqRV7vVZ0dmvTJHrXxnN75V
YKLV1XdTmDG9Pjvap073vUS+JfacyDFh9pT67GifWs7n1VyVMdd6FnatfWtS
fXa0Ty3n84osIfAtsecUju12T8+OTp3iP4k3RdBXokZWcmy3e3p2tM+OEv1n
pY9p72j37nBsxj09O9pnR133Xe5TqytmqcZqZ47tNsvUuSbNImAlZ8VEDO/6
bVv9fhcmwk6nzjJ1rkmzdGEleG/KHqfm/+rvChzbbZapc02aRcCqy3tT9rgS
Q9nDu+p0jchZJWWuSbMIWHW9mbLHLgw1bNN52/UtOavI70+dJVE7u3l1Rf+T
8r+W67RvyfxPmWvSLILnH6++d14Zc62flTcx5f523Wt5rkmzCJ7/kD+/g1dr
2aMLq93u9Q7398zlzCJ4fmKd4kvV2aBrFoFvwu/odH/YbS75dnTl/Me+o+1L
86VqXgm9Jd7rdH6eufxZuvSSqGthlkn5KmWWakyEGRN5O2mulJ6rc+BKDAXf
kHNIyt5TtKb5icYT4f2V303BSr6tKd8S3pd9UphFw2plD12zC++v/K6MVZdO
hdwlf0vzsR08WctXd/3drp5TdNE1l5YlUn77aH6l3W5hLg1D4TfOqXt10TWX
gFXib5+V907zE+F2VO9d0/td/Dm1mWm1uTT+r+xzJf4yVyd9N0XvKT6TWGuZ
VphL47+W/2W/2s3D030jXYOJ9c45YWWuFnQn7PqxvcleKn9X9o0ubgt+K9Qp
fiW8r907rR/hFk/1cG2/6Xlj51uQ6Fdd72s5TXtnpVfs5uEn/2RlTrmuuNcp
OSElh8i14BVTPVzoX+htUtYVakF3mo6m7lrISNV7TPdwQTtCP9V6rMBE0KZ8
Z+WbNQmfFMy1WuCevEeZexqHBc2m7z2FAwI+MuYre5M50IVnYv5J8WoBq0l7
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
       "], {{0, 128}, {128, 0}}, {0.,
        1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzlmr+qb9tZhg8KQUQIBAIp0ngBNtF6H9JZJ4j1EU0VCCSFpPM2vIXkGkKu
wCqljVVKwdbKBCx24YT34XnfMcfaFvswz+K35m+Mb3zf+2+sv/yHn/3oJ3/y
1Vdf/eLP/vCfH33zzz/8+c+/+eWPv/XH//mnb3761z/46Z/+4fFf/vffH5//
6m9/8fV/f/8/P33vv/7109//3T9+/Z3f/fmn3/7+u19//vOn56fPJz9vPZt1
LvaSvN+sZ1HPt76Xrsf0AO0TU59W3RbvX6+zNRetWq17rFXbxQwmn//9b/7m
67/4t//49P1v//unX//qV//nv8/f8/SZp/d8/vPPn82cPn1Xss7kH91LUkP6
ebpOU0O6ntY5Jut5+q6kB5Ln1vnS95vepu+n80LX2ZqLFg7QM6V1S/4teoye
NX1ucVnr/QstTZ9NDWlN1j7oqSZmPQvtbdZDsYue9dPe6fkuZuot3W7mYu13
WmtreYST6zH9TLmM1odqNqOlqcb4KBhutKKZ/YX2bmFRC0OobqHzmPTqon9a
ut1w99rv0DNdzOCiVgvsSvZlcifqU4xOMzNycgZbWGp4n2ZB9Hsp/tD1UA9u
zvrpdw0WtfqK9k9LH5qeXGitBDcoLy+yCLr3RT9//kz3m8xsK4dp/e5TPVvc
scZwc9ZmFuh8tTy7Wb/JZCiXGf3T0gYGQ+i5m0wg2aPpDeoNzftpFtHC6pbu
TXQ1nWXj16g/NZ5l4U8XGL7QkPT9rTyH9kDLY5o60H42ON/iF6NhKFbTdVJv
0sIcel50Rqhvekv3tuY98d2t+y+jM9f+lOrhlnY1ezfZL32nwQfjMalXNZn8
oj8Nv1ANYzI02gOtTM/kb9TjLPQ2rY/RvfTzT+feyjbNXQnVEgt/aupMMa2l
yZNZSPq8xY8trb7g/ZafMvhp8Ir601Z+tc70zPqNvzBZwaI+LV+ZzKbxg625
TvgowVUzswaLzN6NJqf7Mn6tpf+Tc1zwvjlfquVMz7RmvKUh15me2aPxEVQz
tOq/0BWtfmvNXXJexnMl2QvV4a37HYppCT638If6tYX+p1hheJ/mJGuuT/p/
MfsGYxeZntnjwi+sdXhy7i1dYfRbS28ns7zWok89Q/GQ/m7Lt5rvXWjjk/l/
svfk53SdSV5qdA6dhdbst3RjK/ege6QepMU7hqdo1rfwTWb2KRa1+LqlRZ98
n+Gg1h0BXdvifqGFmSc5Ivm5mc0Fpi10wvrZ1JNySsuDUPyhGthwccubJOey
zj9p/rbIDI3+T+pjsMvsMek90z9mZhf5v9HnRk+2fGVrxlt61TwvcC/RY8ke
qT5MdK/pN6O96VmbPm/lnwv/QutjNOSCi1t3BC2so+fY0jBrjjipmek7F7n3
gtfo3lt5OM33Wt7f9KrBloXvo2dhMp9W/Q2GGxw2upfu3eiKRc8k50h1V5JN
LTiCclYr4034vXVe9P0LzE/6PPn84ntp/1D/Qs+IYrLxfaZvKZa2spdWZmg4
iJ6F4SDTnyf1eUsLJT2/yP8TzmrN7yJ/M15vgb3JGSX6dpEf0v6h52W8idEh
i7Mz2NXKXpI5amEX5Y5EX1EOolhE57qlzxdezGiJk/q/pQFa+VtLp7Uyeap7
W5lbKw8xs2Z0tdEhRucb/dnSz2beFxxE55dquUV9Wmfa0qK0zsksvKX/6ZoX
/WA85iJ3pbNmNBjlPnN2i8yqxXctjk7O0Xhhk70kc5T4x4V/MXrG9KTBLnOm
FENaesPkGC39T3/3JIe28mfqbemsUU9N+eiktkzq0Oq3BUcbbUb7sKVnzEzR
Oi90GsVM408XPUD3aPSGwYGW/qdrPsmhhgfpWZtZW2Ru9LmlLQ2+tTSY4ejF
c0v3tjQMrclCt7dwINkL1f9rXjDvbPV8UkOzX+ptWxxKs4iWTjAeP+FNiocU
/422NJrTaCGKh09rW+dCJ70MnSl6R9PSaUbHtvxUqw/NLLe0hOHr1j2d8bCG
QykvLHLCRV7d4iOK+bSvaI8tdHXL57a0X6J5WnnjQkMmWtF4Dbpfil1v4Tz9
ruQzLb4wHtzwONU5re9qcZmp7WLvCR+tca/F9UZHtXxuKwdoac5Wrms0pNkX
7Y3WGtZ64+QzvbtsYTJdQ0uDGb1kNDz93aS2xs8arULPcc2/LYxNchuqFVtZ
EO2HRf5Pe3u9r5Y2O6n3bnum+UzrXsb4LKrBEv3Q0i1J3xq9QeeX7r2lRSnu
neT6he9Y+BSagdD6Jz6OcuIim6IYRTXVWu/d9pycu+GOJDcwPWBm7WmdrTvT
BENa2pv2XsKbRrMZ/077inL9wncYf0Fr3soJW9xq/FFrXwseb+m9G3CeatEE
EwzWncxvzZ01faep+UJvmzk6eZ+Y4K3BsQRjW352cXbrnJByawtXk+99WoPR
mYZbP7rmX3jSZMapHzxZW4MbpuYtXWqyTTMXlDuoVqScS3sy2W+rJ+nZGe10
0iMYvUG1BO2ZVp5jeu+GZ6oNjCc1fnCR3xoeN7rd6BajSxOcMdlpCw/f0tiU
601P0rNLPJHBIpNrtfrfZIPGYxqeWvTn+rmVq9NeWuiTRU0WPUDvyExus8hJ
TE2S9bc4saVz6M9NT9Kzo1r3Bs5dZIP0vIzOuS2XWGgh8/kWttDcb13zRQ+0
akX3TvWhyU5v4MT1vbM5l7U/Mv5xjWmtbLClW1pzus4lFpiWYGni91vYss4b
F1ol6QGTGSY1X98dG/w5yYkGc5Ka01kwd14J57buNZKzMD3W0mx01ijumRzs
5izI6DTKxQZbbrtPaeUhplYJbpjea+EY7cMWJxrMad1Jmbols0A1sPEIrb5q
zfJTn7Qy5JYHP5lLrL1A0idU+y306smaJPUxd7IUo9bef8E7C/3Q6iuTEa35
upWpGpw/iWmt+wKj7alWWecSay9AP099fUtXnKxJS0ss8plkL+Zem2LXSf3Q
yoiSuaZ43uJrujY6j0az3eDBk5lteYSW7vrozwk+mHm/YY/JXBg9sFhD0v8J
tqx1ptEPRvsZbbnIXhY4luTh9NwXeaPp+Za+Teqz1l0f5XmdS9xWNzOP6x5u
9eECV5N1Uv1AOcVkOC0OMnWjONbii1afL+bO1ITWyvCR8aG3PZsMIXlny7/f
wAutPK2liyieG1w1WSvVmS0Pkqy5lb2s88Bkna330NreMLPJHs3fJNAeu6EO
LX6kuUTCFx+lbid5qtWHJ7nbZK2Ua+g7W3uhPNvqGcOPpv7m8zdotkRvrP+2
4aPzYwvP39JLrfqYbOdL5e5kBo1HoLxw0m/S/mz1jOHHBOvo/e/N+o3qgeS8
PnoWlPCUybeNf7+hbh/lb73e4m6jw01OZbT9W3jV+luahXZK3tm6N79hLha5
YnLWt3HimrNadbitbjes5y3upli6uNejWGR4ZDFfVOdQ7U3vNBf48JZ+M71h
/C/VJLdlGgvOMnVo6aXb9NtH5O7k5wbfWnun+LNeZ8Kt9PP0rCkXG3y4LSM1
9xc0t/wof99C70QWXrLFoW/10g3rWXO30XIU38zen+pg8MesM9EGT+83OcMi
66D4YDK9xVzQXNTkWrfljUY3mp4xep7Wc13Dln77KNydzNHTHpPPGN9kZpZi
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
jK1+o54uweFWNpisJ9Ek69lMMG2RQdHvNRhi1knXYLxhK+9q3aGveaeFM0aP
Le5DjTdp9TzVXWvt1OKjFn62+qqVzyTz25pNkzOYPbZ6O6mP8V9Uk9N5pOfY
ysmTWV7r3tZdRnK+yR7X55jgVSu/amFaSzu1+Ih6N8PpFEMW92gtL0l7yfRw
glfr+rTqYLzV05pbmRXdC53lhX8xvbo+L6pnFvdBi/tKimnm8wuNbTTwyb6i
c23uJlr7avH7Iv9s1cdgGvVW9J6ota+WnjHvXNwD0rXR80rqQM/RrN9wFuWj
lv43557Un+KJ0ZNrvUHzE5oP0H0ZTHham9F4rfos8knDcQaLTA+37qHWupfW
eeFHWv6Irr911rQ/jf5v8XurNww/mvUsMhDTw8m+DCaYjGVdH5PfLjiudaat
nPxpXy2sbumQt3J4io2UHxdagvZna0YW+oqeKT2vhVY5eabGo5m8mmLd4l6D
rtNgXesegfq4lnY1nGu4w+gQ6vtafoRiY0srmh77vA5GHy70QOs50TmUy1pZ
0Fv6MFnD03pMZmJ8xGK/iY9Ozt3wqckDW7xv8oHW7Bjdm6zNvN/owwWmGS3R
0uE0r7iBC1pc1sqCTurD5J7R4M/izoh6tFbm2eLflvenn2nxJvVfCw+Y9Dz1
Qet6mnOn+tBg+JP+X+PqyWdTN+OvTQ1b+jDx6UYzmDVQHUUzyYSXTb5nsGit
iwxvtjSSmTXTDwkOGy4+ee4tHZK8k+oliqstHlzXjfK70ZwLfUj1+YJPF2sw
+aTxVskeW7VtPRsvQ/VAK6sxnmWhr5J6njx3qkNaM2XuGpJ3npyFhUaimnOt
D1t3YeadrTVQfWVqRfV/0mMnNY/xMgYPk/ckein5Xarnjb4y9VxkPnQ95m7L
6IQWX5+sW4vXFnVb6ECqdek7zRoMdi14gWKRqW1rnXQvZqbofC1mrcX7pp6t
c29lRK2Zpfxuemah5ShOrnFmnYkl72xlvK01GBw+yZs0P1z3lfHdLV5urfOt
OfqS9B7FwyT/b/lKk78tnhNPusCZRSaW3PMmWcpC8xj9bLCrxZs0F13fhSXn
aLA3mWWavSxqYuaI1vBmvWf65/N/Jic0M/4WJ5oMvzWzLW1AcamlY1t3Rmbe
W/1A7zdb+SG9D6J+zeRCBicX94Nmjlp9eIPea3mBRJMbbXab5jf92eKadcZC
z4Xq2FY9aX648GhGG5ueMX2VYEgrF6L7avGFOSOaPS70+VrvrfWw6ee3OM6c
S1KfFs6cvFdq4UCrngZvWx7NaGPTM8YX095bnEWSJRq+SLg+2SPVCS3sWuu9
tzwC9YYfkeMWvEZ1SOteqYXJVM8ssgiDV0bnGE40Z5fwziKHTHDA+Mrke02e
YM7uZB5rtNxaD6+x6AYuSPqzlTGae1jD1waTDfa2sgiaGVKPZjCcaldzdonf
aekf+s63OLR1t0WxsfX5Vv0XenjtHW7guJZOo9l7a5bpWRitRfGK9ob5PMUc
msO0craWVmnpK5rtUO+w4FDKKSbbp56rpfcWdxC0H1rfexvHUZ9LeY16jbVX
MhmX4dZ139IMwTzT82rdTVMOSj6TnJHJWMz6F2fX8qrUNxlvQtfZmqOnfqDf
exvHLTgo+d1kvgxnGdygGtjo81bfUl9vvtfwprmbTj7fytCM7l34ylYW2prf
Fie27hwXerj1Xa3+bJ37goNaWUFLg1HcMNnvW3kdxdtFzyS8afQGxROD50mf
L3JLk/OvtS7NuFrafqHH1pi55ta1PjTebc31iQaj8/vRcf6pPxdaiPIm1Vc0
E17ccdM83Gh4+q+Vm7W0bivPMbO5ntPWXaTh1gXHtfxdUn/D9bT3kneezGTW
zzRzaPUMzbcN9i7y4ad+MJ5iMVOt3GztBajGa/XtyRwsySta3Jp83uText/R
NRiupxqM+o4bMHzRn609mh6gen6dD5t3trIIqkMW9xcLL9DitRtmM8GZROtS
HKafWZ+p6TfqYVteI3kP1ai3PdP+pHs0etho15aeN9re9GQrwzdeddHPJ3nt
rdmk95IUAxd51OJMqd5LPk+53ngNeqbrzOSt/mztMTmjFrYvtCXlLDN3lI+M
bqGcu8YZw2s3zKbRBlRv3IAhrZla/J2D+XxrXzdgvunPhXejnE5xtaUtKYe2
vHZrXug638pPDK+tdYJZP+W1Vo59Gy+0uD75R3/XnKnBopPPpj9pjm1wdXF3
Y/Rwsk7jQxcY0sLJp7UtsKKlA1s6wayfcnFLV9+cORiub80vPZdFtnDyjEx/
0p40upF6XpMjJXo4WWfSVycxhPos0wOLHjY6kJ7pYjbNvY/R1TfnDC2uN2dt
5oLqzxt8tOlP01dUN7ZwPtkjvV9IPk97bIEhtMdaWqvVzy0dmJxp0ntm/RQD
13evN2C+4frWWbe4tZUtnDwj+l2tbI3OmslMWj1j7kFoX7X6gfYY7U/6Nxsn
dWBLV9OzoNogWaepofnMyWeq4Vs9bNZMvfANf4dg1pNgi8GlFobQ+W3xeOsO
zmAI5Vzae/T+1OQnLT41mR49i0V28REz/BbXLzzsAmOTnqfacpELtbQr9ZXU
O7QwxHCcmX2zfoohJq9rZWuG640ONPO4ztNuyC4+yjPtQ6PlFn5wge0tDWww
NvH7RkNSbbDuK4obCTZSPjX4mXCu4UTzvTQDpHrYzKPhsmS/Lc3T8sI3PNMs
0fy8hbGtvkq+12hIOuMG95I1G++Q4KTpK+rRTuIwrZXRses7Mvpzky9RL/NU
W1r/Fia0cOC2Z4Of9OdGHxpPbbC9pYEXmXYL02j/0/uUBW4YnbDAYTP7J3Xm
U2+0esZkbob7qEc2+VUL6257TnAvqTPl6MQnUi1nsJ32fKJVWpn2Iq9uYZTB
T6MzWxrsBhxe7JHyqZnBVsZo8LmlPZJ9Ge98wzPFTzPv5neTs6B9ZbRH6/6x
pT+Ts0s+38KoZKbMmbY02G04vNaZ9OxMrVo4Q7m4pT2Mdro5C1poJOPv1t7Q
cFPLU7TqSX360/pbuc1CzxvdQrOgG3CY9iHVmZRnF/N7kqdoDRf3L1/S88Lf
md+l90RUqye838qLzB2TuS82vmOh55Mzpf3TujNa4LDRwMkeb7hTXuAMXc/J
LOhLel74u5NzYXyc0betepq+bT23cq2W3kv652YcbnkE+nmanxjcpu9ca++F
b70Bn08+tzLP9VxQfZJkCIm+bd1VtXCgddb0TJ8+Qz1a8p7Fvfkahw2WJjVs
+Uoz16bmLZ6ic0rr1uLNm58Xe1zMRWsvRhubu6oWDiz0m/kumqWbmi80ZAuH
kxq2chXjK2/DGcpTyQyae5+ndX5JWRDVVGtsMRoj2UvC+wavTA8nOGDOZfFd
VJ+bmtN7jbdw2JwX5Z3WndRbOEN5qqUrvlQ8N5pt8bdP65q3dGMyX2ZtFFtO
zib9Lqq7TM3X/NvCYXNercyE5ngtvWfmlK7ZcN//Z5xP5p36oLc0BsUKcxdM
efAJE2gOuZ7N1neta27yipaGWeP5yZlt6T0zpwm2J2s+mWv9DzAcsCk=
       "], {{0, 
       128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztmbGqXVUURYOCKFhY29naCNpY6HsI/oDxCyIqFgEhgqKV36CFhVgKdjZW
4gdYW9taWFjbmoBCmgvnsPeac1wzisg1vNzcdeaYa4338tJ7H9/98Kk7d+58
8uzD/9y999lbDx7c+/zdZx79zwf37r/26v2nH7788t9fj16//tt3N3/+/MXt
Dy99dPvXT6/c/vH3ndvnf33x9sjvX3p95Osf/5ojr8++z9mvWXm9axbasz37
nruYSX7+6c+QfA67ctn1fFbec6IjtBwnds7Z9/nxq29u3rn/+83NLz+88fjr
h6fh9r9fl77m65e/ffPt91+4fe7T728ufc3K+5/9mrO/Ls1y5PWuWc7+XdPP
9uyMR57tyvtPfP6zbKw85+nncLYX0+9z5Osnurnr80znuGvGXc/t8dtx9usv
vT7yrHa9XnmGl2a/NNfKczvyZ4/8/sSzPZLp2Xu08v5n8z3L5Nm/a9cu2vUc
Vnxs4mtWXGWlm0d+/+xnmMjxSC927YFd+2oXk2d37EpHVnjYdY9WPvMKh9P7
9tLfe+T3V3bprmc14UUrPV35PGd30cTrs5/zyGfe1c2zrK7McpbzXXMlOZ94
Prs6e3annXX7XfdoZT+vdGSFt7P5nr1TEz5wtu+7bvSEF610f+L1xI7a5TYT
e/Ls51xhbNceWHluE8955c5O+/PEn534+cbKs53Ot7VDkv4/ca/PzrLrFk/s
4QlnWGFmZU9Ofx837RXTTrjC5K7OrvRxhecJV9zl4bs+88TO2bVDJlxi5eec
E/5Pc36y/+/6e6e/j5v+3nbFCc9+hl05nu3spbyS93eXK+565keez5HPnNw5
1+L/u753Xvk8Lee/Fv9fcZVkjsl7dNYJj/zZXU64a67pnyev/Mx/F+e7vs9a
+fcR2g6Z9v/pnzfq/3s7nrwv03dk4n2O7JZLf3b6e/9dzpBkctfPaiae+cr3
Ate4Qwj+P/3zf/1/7vk8Cf4/vdtbcyWZTP4ccvqZJzs7kRfB/5PeSOCn5RL6
P9MHCHe2xWTr5ycrz3zaK1p5Jf1/5fuFlc9DY0n/n2OS1tNk98lMXqOn0fbM
Nfr/xL/XXztX+v/cHdH/r9f/ybnQ9gzZ/1dmufTMr50r/V//J9zZFpO0/Unr
UTKvCf9f8bQnjSv9f+6O6P/6f+v5X+MOIfj/k8CV/q//E+5si0na/qT1KJkX
wf//r3c5ebtpz0f/73Ku/z85e0b/vy6u9H/9n3BnW0zS9ietR8m89H8mP/q/
/t+aS//n9CiZl/7f5Uf/n+OKxifhzraYpO1PWo+Seen/TH70f/2/NZf+z+lR
Mi/9v8uP/j/HFY1Pwp1tMUnbn7QeJfPS/5n86P/6f2su/Z/To2Re+n+XH/1/
jisan4Q722KStj9pPUrmpf8z+dH/9f/WXPo/p0fJvPT/Lj/6/xxXND4Jd7bF
JG1/0nqUzEv/Z/Kj/+v/rbn0f06Pknnp/11+9P85rmh8Eu5si0na/qT1KJmX
/s/kR//X/1tz6f+cHiXz0v+7/Oj/c1zR+CTc2RaTtP1J61EyL/2fyY/+r/+3
5tL/OT1K5qX/d/nR/+e4ovFJuLMtJmn7k9ajZF76P5Mf/V//b82l/3N6lMxL
/+/yo//PcUXjk3BnW0zS9ietR8m89H8mP/q//t+aS//n9CiZl/7f5Uf/n+OK
xifhzraYpO1PWo+Seen/TH70f/2/NZf+z+lRMi/9v8uP/j/HFY1Pwp1tMUnb
n7QeJfPS/5n86P/6f2su/Z/To2Re+n+XH/1/jisan4Q722KStj9pPUrmpf8z
+dH/9f/WXPo/p0fJvPT/Lj/6/xxXND4Jd7bFJG1/0nqUzEv/Z/Kj/+v/rbn0
f06Pknnp/11+9P85rmh8Eu5si0na/qT1KJmX/s/kR//X/1tz6f+cHiXz0v+7
/Oj/c1zR+CTc2RaTtP1J61EyL/2fyY/+r/+35tL/OT1K5qX/d/nR/+e4ovFJ
uLMtJmn7k9ajZF76P5Mf/V//b82l/3N6lMxL/+/yo//PcUXjk3BnW0zS9iet
R8m89H8mP/q//t+aS//n9CiZl/7f5Uf/n+OKxifhzraYpO1PWo+Seen/TH70
f/2/NZf+z+lRMi/9v8uP/j/HFY1Pwp1tMUnbn7QeJfPS/5n86P/6f2su/Z/T
o2Re+n+XH/1/jisan4Q722KStj9pPUrmpf8z+dH/9f/WXPo/p0fJvPT/Lj/6
/xxXND4Jd7bFJG1/0nqUzEv/Z/Kj/+v/rbn0f06Pknnp/11+9P85rmh8Eu5s
i0na/qT1KJmX/s/kR//X/1tz6f+cHiXz0v+7/Oj/c1zR+CTc2RaTtP1J61Ey
L/2fyY/+r/+35tL/OT1K5qX/d/nR/+e4ovFJuLMtJmn7k9ajZF76P5Mf/V//
b82l/3N6lMxL/+/yo//PcUXjk3BnW0zS9ietR8m89H8mP/q//t+aS//n9CiZ
l/7f5Uf/n+OKxifhzraYpO1PWo+Seen/TH70f/2/NZf+z+lRMi/9v8uP/j/H
FY1Pwp1tMUnbn7QeJfPS/5n86P/6f2su/Z/To2Re+n+XH/1/jisan4Q722KS
tj9pPUrmpf8z+dH/9f/WXPo/p0fJvPT/Lj/6/xxXND4Jd7bFJG1/0nqUzEv/
Z/Kj/+v/rbn0f06Pknnp/11+9P85rmh8Eu5si0na/qT1KJmX/s/kR//X/1tz
6f+cHiXz0v+7/Oj/c1zR+CTc2RaTtP1J61EyL/2fyY/+r/+35tL/OT1K5qX/
d/nR/+e4ovFJuLMtJmn7k9ajZF76P5Mf/V//b82l/3N6lMxL/+/yo//PcUXj
k3BnW0zS9ietR8m89H8mP/q//t+aS//n9CiZl/7f5Uf/n+OKxifhzraYpO1P
Wo+Seen/TH70f/2/NZf+z+lRMi/9v8uP/j/HFY1Pwp1tMUnbn7QeJfPS/5n8
6P/6f2su/Z/To2Re+n+XH/1/jisan4Q722KStj9pPUrmpf8z+dH/9f/WXPo/
p0fJvPT/Lj/6/xxXND4Jd7bFJG1/0nqUzEv/Z/Kj/+v/rbn0f06Pknnp/11+
9P85rmh8Eu5si0na/qT1KJmX/s/kR//X/1tz6f+cHiXz0v+7/Oj/c1zR+CTc
2RaTtP1J61EyL/2fyY/+r/+35tL/OT1K5qX/d/nR/+e4ovFJuLMtJmn7k9aj
ZF76P5Mf/V//b82l/3N6lMxL/+/yo//PcUXjk3BnW0zS9ietR8m89H8mP/q/
/t+aS//n9CiZl/7f5Uf/n+OKxifhzraYpO1PWo+Seen/TH70f/2/NZf+z+lR
Mi/9v8uP/j/HFY1Pwp1tMUnbn7QeJfPS/5n86P/6f2su/Z/To2Re+n+XH/1/
jisan4Q722KStj9pPUrmpf8z+dH/9f/WXPo/p0fJvPT/Lj/6/xxXND4Jd7bF
JG1/0nqUzEv/Z/Kj/+v/rbn0f06Pknnp/11+9P85rmh8Eu5si0na/qT1KJmX
/s/kR//X/1tz6f+cHiXz0v+7/Oj/c1zR+CTc2RaTtP1J61EyL/2fyY/+r/+3
5tL/OT1K5qX/d/nR/+e4ovFJuLMtJmn7k9ajZF76P5Mf/V//b82l/3N6lMxL
/+/yo//PcUXjk3BnW0zS9ietR8m89H8mP/q//t+aS//n9CiZl/7f5Uf/n+OK
xifhzraYpO1PWo+Seen/TH70f/2/NZf+z+lRMi/9v8uP/j/HFY1Pwp1tMUnb
n7QeJfPS/5n86P/6f2su/Z/To2Re+n+XH/1/jisan4Q722KStj9pPUrmpf8z
+dH/9f/WXPo/p0fJvPT/Lj/6/xxXND4Jd7bFJG1/0nqUzEv/Z/Kj/+v/rbn0
f06Pknnp/11+9P85rmh8Eu5si0na/qT1KJmX/s/kR//X/1tz6f+cHiXz0v+7
/Oj/c1zR+CTc2RaTtP1J61EyL/2fyY/+r/+35tL/OT1K5qX/d/nR/+e4SvL5
D5SJ8Rc=
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztnD3LrVcVRaNCtBT8BfYiooVV8mJpJcTKRriCGiQiJEXwoxAbwcpO7BR/
jv4dCzsTsLgWB9ZkjrH2PjcplJ3Lec/Zz9rrY8z5nOd8/Se/eu9nX3zrrbc+
+son//feq4+/9+GHr379w7c//Y+fvvrgO9/+4EufLH//v/99un75zY9e/vOH
777z0b9/+/Ktf/745Qcf/+Ll79/487uvr19/zaP1o9dP3jP998ke0r9Nr4va
Z/NZzd4evQ/1/lQ8m5xpPutUfNK9GfnWXDt1LlTONHt+lng2OfP6v3/hm797
50+//OrL+3/9x/+tH73m0fs/eh/j/Zv9T17frJtrSWNr/G0TE+pv7TO97RrT
PN+sHbvW7LMwcuNUPKm/bdh4sv7aX/74zs+///bLl//2r3dfX9ufm+7N4Apb
dxh/a+us9G/TnKFybPMaPwvr5lw+j6e3Tll9sk7PztjDZG+TfDMYYJPhm/0Y
vDH52zRvqTw/xWNv6ro5l8/jubN+xOfpOu3tj/ottZ90bzZXpDrI5v9J3E4x
yaO6bubCoxy7gcGMnD+1ntQaleefhXhunpfhdRh/a/swFFekcbD5P/2sTY1m
8/8pLdzkxrOsqVpr6u5NiufNa1sLp94L5cNQzEz1T4r/G9/D1mg2/zd94wYd
evOaqrXJ+X4W4nnz+gaNTGnGxntp4jPpLU0/T+eXcRZNXlH8P4lzc3Y3sPGz
9AHjXvybFM+b17fdZ0n3nHJj+p6pZmlmjV0vzVlQZzR5vc0St+nQGzg2vRYq
35pcujmeN6+b+W6sm/726DWUDjXYI+2HTb1Q2sRmNmpmGff6T7HxbX1gUmuT
fGvifHM8b143830zDzfzmepFjS64TS+n19swm+HVp/x/Soee4tjm/p2Rz1Rd
f64L+himLE3lIVWDVP+Z9CLKf9j0x9K6bvRXqh+bXG32v6lDjVza5CKq1tL6
ffTvp+L5LOuG5Tbz0P6ePPX9jbTfUr3R1svNrGk0XTorjRln9ITm/SmOpXo1
VWu2Nrfj+Szrxn+gZjS1n4Z1KY1J1UXaG6nXUz4SpTsMbyGdcVRuGxy7ubaf
8Uzfh9IR9ky5bZ329htyr6mdRoOn729oqzSfKR3dcA6layhv4Ya8Nd6f6o2G
n9nUwqP3ob4rQsXzWXRBWi/Gs0tNbO25bNfgZk+wdTTlY1Dv2cx3O28p7WP0
RsPPpLS2UddUPJ9FF9h9w8i9lP/te0ZNzjR1ZPiuhnamvD5D40zif8N3kjfv
d6e9wvYz7fq1ueU2XWDM4sZXafIwrR2bpdN6aerI/k0tQztvapbmPvVm3jav
T1momb/N3qhZbOcY1aup/Z/ifOpa0rxKObC5XpulqTmY/q1RF02Nb2oW47qM
vG30C5X/Rp9s/Mz0Go0ca2JI7Z/SBY02T3VBqrOanjmJf6r1Tv0Gl+GNUDXS
aEP7t84MlrNnfaNfjPvdVJ9s/Eyq9k99H/uUTjk196nPojjq5ms8dUZNjRjx
MfTpZC6k72/Memr/VKyoPjnZP6VlGl+60R1p/ts6ZZP9DJ1L9RbDf9jU8sYZ
GTXSxIf6dyqXGk2afhalhQ39QvmNaczt34ZKc6zRJg2X2t9NtT83vUbDM5mc
0Q3PwNpnRPlUmx5dExP7uhpmeHb9QtVj45OkbEbFvGEqaj6mPGbMfUq3UhxF
zdxmvjcxsc/I7sOGPqLY3u639nePb9MvTT2m/TD993R+NfcvqPsFqUaenO9k
zw1vNz4GxVEpX03OxdjPqTOi/BPbozM0y6mZ0vSrm/ULlf+GN9iwDfVMRBrn
TTY7tU5ZaPP5uMZ/uyG2TU42fZiaR4aeSjmNmikNv92sX+z8N/yZRvtPmLDJ
bUOn3LZOrzHNDUMXpHPE4CiKwSivlarNNJ8bDmzOMZ0pm/3qlH4x8p/yBqlZ
0/SK1Pew2ezUehJbKt+ofp72H4OjTv0+ADVbU68v1YZU77KZwehXp/SL4WE2
udpcIzX3KZ6k+swNa4ol0pg0Nb6pVTfjb7xP2qOouFH+szFT0h6Y9quGizb1
S1Mv1HWlOWbMfcpranTK5pq6v2PnXnNem/eqmvgb+nryemPuUzxpzJTms9L4
NP3K1i9N7lG6Y7PPNLE9pVNOcX4Tw01vfJNjqfO6Yc+bTEXVFDVTKMYzWNHW
L7f9pp/dZ4zea+sUmzObGKa5fYM33nBswzmGJm32bPQoSsukLJ3mA8V4Biva
+qXpbzbLUdfYzH1Ds9gz0eD8lAE273E0/bDpwzYX2Xu27y02caPuC6Q5QNVO
k7cU81BxM3SEfY0ND5zSzqdyvonho7+1f+fhFBc1Mblhz1RPs/2oxsMxOIrS
6WmtUT7DqXvBBtdRGs3Qy412vsF/m8Sw6QlN/hj6rrnfRHGRvWeKJajab2af
7Z/Y/nw6oynfzGAVw6Nu6pHyA9OefOo7YMbZUfxJ5Q/Vi6jZYc81m+Wo56yN
2dHUAjVzN/tkOndS38z2cGyuszVamleGH3jb2VE+la1lqPM1OLaJocFyzd8a
s4/yoin/JGWzZ/zOjD1/Ka7b1GiGRjY8dvvsGoac6CBKyzQ9nDpHiqttlmt8
PKNe7DxP90lx6SnNbqzTukjzx15TObl5j4nKDWM2NT5VqnMf8VXT2zfPbpKT
p/LfZgbjXobhn1DsSvXJG37LxWZOe2ZRPYSaL42utz3MlEtTn8rQGs152T2n
0aR2/jceIzVb09lh+4STujvFrg1TNesmJ9P8t39/jIozNbspTrN1pZHDjdZo
eq/dcyj+bziw8bE3zzrtvYZPSGmKU36LsW5y8tSMaxjP9gqaPRsepv2MT8MA
kz5s8H/Tcwz+p3JpkxNs/WX4hI/yrdHFm36LwfmU7rZnXOqfGDzTMEbDFXYP
nLy+yWHKr6DyxGDFJg5NLqV/a2hYSn8Z2oTy4uw+bOsCQxNRs5jS1JS3cCpX
J0xO9cCmZtMctrWGcRbpudu8ajAbpUntujY8TOO+CeW3bOrENM+pmDc9itJr
z5irlAZv8spggEZrNHO/ORdjBhl+8iYTUnVteJgU/xt92NCqqR6krrGZcVTv
bXjmtlxN42b0gSaXmvnV8KdxLzWNZzpr0lyyn1k27vfd8D4G/1N+HcUSaQzt
OdJ4ZdR5bXoLxvtQjLGZS2mPatjSiFsTT+p7a40WS+cUpVOoWUm9j83/xtrW
g01/aOYjVZsUU6VcvZnz1L9TvErl0mTPRi8yfA87DtSem1qe1BQ1K6n3aa6L
4snb9KDh6VEcleojg4dP5eop3Tfh1Wb+UvcsqF40WVNsYGuQZs/2fgzdau/Z
7smn9GDD+ZNYGUzSnFc6v6gZZ+saitVT3yC9Xmru23XdeJg25xh7NvSFrVvt
PRv5TPVnW/sbHprBUZPzMph5M1cpxqDinM7NTf6ndPRE4ze10+QndZ/a0BfP
8puW1DOPVO+1vRSK0+xnzKk9NLOMmnGba8N/Np5PtPm/0dHNWRv8b7PNJhvb
3rjNh3YfbjiT0mIUJ6T5YHsjaa8wnksy1o3mpTyf5v0p/k/rlMorm/8NtjFm
aKOz7HUTQ8obsTlz8/fxmplCsR/l0VGe3mY+24xhcFTT9yjtnNayPVNS7daw
jTFDjTqi1hQfUnrZ/r2+NCYUJzRxMz6L8qgb/8HIZ0ODpLOs0QjUXDD6qt2j
7ByjYtLMWdsbT+NM6dk0f6g5Re05rfeG/6n7F+lnUXWxWUcGlxrfJWv0QsOu
jb5ueg7VozbnV9OH7Rq5YXZTfgvVAyn/djP+jcakmOfUPV+qjgw2aM6OmrPU
7+s2+vqGHpXWbzO/jFlj+NinZvckVylf4obndIz42/lGadvGFzX89qaWmx5C
zRdKL6Sc3+jrzT7WxGQzxwwP8FnuZzU5afclqidTZ7fJNk3vmuRtyr1p/zml
xVLeaDzSRi80NXhzH6Nispljm8+TNmt7dje9etObpZ6pp/iKyjf7Nwkp/42a
NadymPKm0hkxiUNz1jf0sXTPTW+nZkTjAab1kq7t2Z3mZHOmjY6g2JXi9tQ/
p7iayplN/XhDDjez0uifFP/f0McMn83o7U1N2X3shp5ps4F9XyP9LLsHpn2p
iVVzdgZ7N7m3mcMG/zf/3pzdZtyovmHnWOOvNl5u0682e6ZxLalWtfvw5jOq
Rt0Z9yBSD+GG3wChctjmf0NDUTOuiVvD/03uUfxv3Fc91cdue/9JvqU5b/vA
aZ409yAMbWL0JYohT/XMZlY2eW7nrTHjmrgZZ0fpxOazqNrc7GOn3r+JueEJ
Nyxq98NJ3TV+UdOXDCa3vSZ7VqZ5Yt+/sL9v0+S/oZcb/ZLm56T/TM5os481
n9W8v83/m7N+8v6GF7HJS6e+S3xDz0x7S3Ndk8+i8jb995R7m1re/D5bs57U
pl2zt+kpm4Gp+w4UizZ9wGB7ipfSfLPvfWz2TJv/05xsWKLhk1PxNHLA0IlN
fCh93TAkpac2PYFJn7TnYNMHTt13oOapoVWNWU/prFNz/4a83Ywn1dMMzWjo
naZmG4Y09NRtngDFpU1+pmedcnWj05saoXoItTejRm7IPSNvJ7OVmms3fM+E
0hfUehJPSl/bemoz/xsGS7n0BmZLe04aH6oPU/ou3dumztrMPft3Xaj+1sST
8l4azULlqr1ngyFtD4fKfzuHJzG/gd+a3t7U4ylGSvN2s0bs3GvWaX9O+0BT
O01PaM7L1h2bfdiutVMeDqVHKD/nNn6j/NvJNVKcb/PSDWuDo5q5PznT1Ftr
5ouhcw3NYsw+qg/bXGrHzdBZhj9seNoNv1G61ZjFFCNt5rmRwwZHUWdh6MSG
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
3tCjXn/9fwET4TwR
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzd1zHKbncVxeGLQrBzDDYOQGu9OIVYaXcFUwWEWAQL0TLoAByL4FQsHIaN
mEAaCyGXs5+11vsVCed+nPec/d977bV+50e/+d2nn33v3bt3v//B1//79MOX
v/jiiw9/+OUn3/zjtx8+/+lPPv/+15d//va/b67/89cfvv/kL3/72a+//NP7
f331z5//498/fv/3P/7qf64/9p7vcv2x7xLPf/Kuj635ST//3z1Xs3hS55Vm
nszoSU/WNNx6ptbqlYc80Z7W1cfuiKg/OTuhN7HjQttJ/9R5JPJXzG5hZ9d8
W/RQ9HM5c5/sUYtFW5wptJTMlwVPbvFti+GFJ+udXfNAzZ9Jvel36R1PsqjQ
qp7jVR5dZWLLk5N9u3pvMkdE/wV7tHZHa1jPXWtMM7/wf/2u5H6tsVzSB5I1
6Oxb++2CJjVbitxv8clarunMEpppcUvrLE+eI3xmoQbx9+XrBU0meyjyS7Cu
8M81PhTaa/G2uBZeJ3JQz13UoH3+Sqst3xOZIljuymOv/FDnpt7ZZKYnPVzz
p87oV2QPrbGFDE3er+fb4jRxz7JHiYwWuaPzV9Sv+y/yKJk1C+zd4ivh1a1d
0zvyRJ/iu2PZnxd2/IofNDcms7LFWprtxc5qP2/1/+oe7UWit61MF3y14M9C
S9oHRA9bWk1ymsiahRxM6kH0ZIHDRc1ir3WmC02K/RL+I/QjdnnNh6/mLvp8
5fN6RmIWLZZeyNBWD1tnFN4u6hHnEl6ha9PZJ3xY+Ia4P8mcLc4RWk1+I7yi
v7XY/mpeyR0X+7jGxk+0p88iOFDkvn5+KxOT2aT7JjhE5KCY0do9SX5O+t6V
Fy34j2YewbT6XJolNEe1WFf7g5iX0OTarPU9Vz6ma9PP0f1fYLaF+q/em5yv
zimdmy2eF16drC35/LU90t8IQrdX+3u175o5hcYWfGONbwVT6e8Cvcstjlrg
SZ1ra9wlei52p3XGpJ9rTQp/0AwmdiTJq4LNknsk8ld7V4vnW98aV76kGSnJ
6kkNtPxhIeOu5pX0JcG02k9EFmg2W+6n3lPBJIK1Wpyp9ZZkTtEH7VF6j4Q+
BT8ITxAem6yzVY9+ptiXpG+IObb8WWhJM+dVRmvGe/LMJ7mQ7K1gmCfn0rPW
sxCZIvjhqrdX3rim7SQril0TcxS8ceVvgseW35vUlZ71Ew8Xz9F7J36r90i8
V8xr7b2tuYi9W9CD8Mzl32r/v/LGq11L+n8rs65msazbZNYv/FZ4oDiLmJfO
jtauJa9FH644IalzzSS6hmS+i6xfyKbl6+Xvjqu9E31YyM2Fa+2TIi+Ezq+y
ST9H+PnCWbQHXml4YU/XvjvEN53Y61ZuLmgp6aV618S3hvZVzV2tbw3NGzor
hbfo/rT8RPREZJDoT2uvWywk5t7yrgWOFXmk+6M10+LVpGbETulsatXf2gXh
YyLL9G+TfLigmVbOikxpeaboiWbX5P06g1oZl/Qx7Sctvekarrzoim0EV2iN
tZg56fl6jq+Ss0k/1P0XHqXzemGnkjNqzXeNVZ5ktPYHkREtfl7mumTOCp4X
udzKo+WdFby0wNJivpppF/Z32QPFLieZWXCd5kPhz0mvS563Nd9WnaKeBd+4
0obI6Cs9L2hSeLvgMeHnQqvaV1ss1OKit8SNLU8Q/NDSXpKLRG5qn0nyg9Zz
klsEy2neuJqXPrvg4WVubHnC8nmFfwqP0oy3kDULNbe4Rby3xYHJ8yYzZYFR
W2y2zMnJsy/4gM73qzPqfibz4qo28dsWBwrfaN1/pbEFj9X8s/zeqxoE3+q8
EIytM0vP5aoPV/4suEXkqdbAgs9rtkly+AKHJH8r+q89Vpw9ucuamcXfr+oU
XCHyfZm1krmg+9maUZI3Fq6Fr67l9ZVu9dmveiLySHzv6Ey/+j5aY+zlPdXs
kdTSW8qFli8l81p79fK5kruQZLOFHF/IBfHeheeLWSR9bMHbF1hR6EQzScs3
rvxNc53er6t7rnJcz+Uqv7Qmk1mptaq5tPW90GJFocOrs4j+PPENMYs1/xQ9
0Syt/UHsZjKLNesKrV7tdZKfk/NKZqLmHJGbQrdab1eavKpZeH6yzhZ7ay0l
WVowlWDvVu7rebV09So5suafVzWLnU327UpXgnMEDwvvErksZne1+2IWmk9e
hY21X+kc0XmtvxH0N4tm1IX8utp97YFrXiH08Op+rlm6xcY6yzRz6rxO1rPg
21c+vMYkwj8Fwyxnjc7iBT/Xu5NkkqRX611OcovOQb1TST1optWeKbQh7k9m
jeafBT8XOr/yigUe0/0RvNri9iQfJtlPe6z2gRb7LTD5FbvqfNdZn8xWXcPa
rK/eqxlY55SeqfBY4fMtdhX5cqX/V8ygJGPrZ+r6xdx1zl55keYWrZkWC+nc
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
eX2lW332q56IPBLfOzrTr76P1hh7eU81eyS19JZyoeVLybzWXr18ruQuJNls
IccXckG8d+H5YhZJH1vw9gVWFDrRTNLyjSt/01yn9+vqnqsc13O5yi+tyWRW
aq1qLm19L7RYUejw6iyiP098Q8xizT9FTzRLa38Qu5nMYs26QqtXe53k5+S8
kpmoOUfkptCt1tuVJq9qFp6frLPF3lpLSZYWTCXYu5X7el4tXb1Kjqz551XN
YmeTfbvSleAcwcPCu0Qui9ld7b6YheaTV2Fj7Vc6R3Re628E/c2iGXUhv652
X3vgmlcIPby6n2uWbrGxzjLNnDqvk/Us+PaVD68xifBPwTDLWaOzeMHP9e4k
mSTp1XqXk9yic1DvVFIPmmm1ZwptiPuTWaP5Z8HPhc6vvGKBx3R/BK+2uD3J
h0n20x6rfaDFfgtMfsWuOt911iezVdewNuur92oG1jmlZyo8Vvh8i11Fvlzp
/xUzKMnY+pm6fjF3nbNXXqS5RWumxUI6d8S79G/FjrQ856r/OoPWuDqpc32d
zPRkPdoTrpj/6n6dg8nzJvnqamf194LwfJFfyczVmZLkZ9GTpA5b/pDsW4vl
9HOWOeEqNxfyXc8uyRhJPlnLSqGTBc9c9ocFj23lxUKfNScIrl6Y1xWnrXm1
yDjBKsnnX+1dMgc1M1xl9MLOauZ5ojfBQmJ2C9mtWVHslL7WHiK0l2SYpE8m
81ewqPA04bEtDSS5qJVHoictn9Tn0r6qWeKKwcTzRW1Jn9cMr/lQfy/oXEvq
/Gp2V/drftM1rz1T93AhT1+RAZL5csXtOtM1+4kMEjoRrHuV3Qv8kOx5y9uF
Nt7S2XX+JueV9I3WLrf84apmzRV6B6+8IskPyZ5f3Z/0bTG7q7Nf6VPn2tUz
hV8lvaWVy6LPT/yzNaMnderdSeasPnuyNu1jyXrEXMQ+Jn1ygXWFT+pMT/q5
Zk69j7onVzsuahAcm8wL4TOaM7UftjxN5K/WvM7utTzSrCv6rJlcc1or40T9
SU5I8lVyv4QP671IMlVSq7oP4l2t3Gwxnti75LeJqPMVd3DNT5LfAtqXknwi
ahO9enKWJzps8arWgNanzh3tw098RmssuYMt315m5mQut3JKc7v2bfGuJAtp
VtcckvRYoTedUzrrRYaKndUsrXu4wEWa+ZOsKPY9qUntUVp7mnlEbTqbruau
5yXq1IwnsrKV9ZqLxKyFBgRL6BoE8yTZI7mnC7kvuFefRWfQE3/Qs/4u1/8F
N6jrDw==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt10GKXVUYxPFGQdyBIwcZuAGdp3ELcQURdBQQEjA4cwvO3IArCIh7cCVu
QkzAgZOG97xf1Vd173+gtHLf63NPnVPfr599+8OL7z96eHh48+n7f714+fbr
169f/vTNJx/+47uXr7768tXH73/8+d9/Pvz8+NkXj29+/ev5sz8/f3zq57e/
/f78j3c/Pv7y94snf77lecXveuqziu+/9x2d767Y/1uev/d7juR4ZG33ntUj
ezj1vlNnW52L85m0vBR3P6FnnH2r6G3F90/dna21qT+7NacUPaDYh61npt53
65mWvJyu2zKkIseEGeS0wdbanOZ3zilFDzgNufV3gaLfnOtMzmvLdYq/LzD/
rG221qb47NacUvRAgiHVz6j7Tb3O9rycudw709V9ewXzq98d82P+NNtgft35
dFod8+/O/a0uVd+7qXuq6IFGQ26ZX/13wVnzUufivONqm2F+zK82VaMhk22D
+bvM75xBzlmWdi+21ub0AObH/Ef+LjhrXupcnHdcbTPMj/nVpmo0ZLJtFD3Z
nleL+W/5vZhfN/e3ulR976buqaIHGg3Zbv4jGTXmpc5FsTb1eVPMsq39x/ye
OYX5M22D+c9hfqdXMT/mx/y6ZxI6cCqjxrzUuWytbWu+JLja+e6YH/Mn2wbz
Y37192D+2S5V37upe6rogUZDYv6uvNS5JPQS5sf86jmF+TNtg/kxv3O+JLg6
YQ+dn92aU4oeaDQk5u/KS52Ls5cS5kuCq53vjvkxf7JtMP91zK/Iy7knznux
tbatHDF/zjMJHTiVUWNe6lycvaTOC/NjfrWpGg2ZbBvMj/nV7sX8s12qvndT
91TRA42GxPxdealzcfbSlsnV358w9zH/8T05qyGTbYP5Mb/a5Jh/tkvV927q
nip6oNGQmL8rL3Uuzl66dz0Ja9i6F5h/dk5h/kzbYH7MnzDL0u7F1trUdxDz
Z/ZnWgdOZdSYlzoXZy9tuUuxJ2lzH/Mf35OzGjLZNpgf86v7BPPPdqn63k3d
U0UPNBoS83flpc7F2UuYH/NvzSnMn2kbzI/5j+y/c0+c92Jrbeo7iPkz+zOt
A6cyasxLnYuzl9Tdhfkxv9pUjYZMtg3mx/xp8zrhXmytTX0HMX9mf6Z14FRG
jXmpc3H20tY9VexJ2tzH/H5LtBgy2TaYH/OnzeuEe7G1NvUdxPyZ/ZnWgVMZ
NealzsXZS+p7esv6E1ytnq2Y32OJFkMm2wbzY37178L8s12qvndT91TRA42G
xPxdealzcfaS0/zOzybMfcyvs0S7IZNtg/kx/1YHJt+LrbWp7yDmz+zPtA6c
yqgxL3Uuzl7C/Jh/a05h/kzbYH7Mr+7ANFcnr019BzF/Zn+mdeBURo15qXNx
9hLmx/xbcwrzZ9oG82N+p/lb7sXW2tR3EPNn9mdaB05l1JiXOhdnL6WZf6uv
nPMO82P+ZNtgfsy/Zf6E/VfPO0WXqu/dVl5nNSTm78pLnYuzlzA/5t+aU5jf
7wfMj/lbzO+0MebH/Gn9mdaBUxk15qXOxdlLLeafmoOYP2dOYX6/HzA/5m80
f4INtu6s+g5i/sz+TOvAqYwa81Ln4uylRvNv2QDzz84pzO/3A+bH/JjfM1ud
Xaq+d1P3VNEDjYbE/F15qXNx9lK7+ZPnPubXWaLdkFt+wPyY/0zmT5v7W12q
vndT91TRA42GxPxdealzcfbSmcx/y3di/pw5hfn9fsD8mP+s5r/l+52z1dml
6ns3dU8VPdBoSMzflZc6F2cvndX8abMV8+tM1WjILT9gfsx/BfPf+52YH/On
9WdaB05l1JiXOhdnL2F+zL81pzC/3w+YH/Nfzfxbs9XZpep7N3VPFT3QaEjM
35WXOhdnL2F+zL81pzC/3w+YH/Nf2fz3/n/nPHJ+dmtOKXqg0ZCYvysvdS7q
tW1ZWj0TW+Yd5sf8CWfb2ZPteWH+85lf/V7OLlXfu6l7quiBRkNi/q681Lmo
16buLszv71LM32XIhLPt7Mn2vDD/uc3vnHeKLlXfu6l7quiBRkNi/q68tjon
rW+d75UwfzH/7JzC/Ltn29mT7Xlh/uuYP20eqe8g5s/sz7QOnMqoMS91Luq1
qbvrTOZPOBuY/3yGTDvb6p5szwvzX9P8CXdWfQcxf2Z/Jp9tzI/5r2D+5C7F
/F2GTD7bmB/zY/6uLm2ZU4oeaDQk5u/KS52Lem1qb2B+f5c2zinMn3m2MT/m
x/z/7zu3urRlTil6oNGQmL8rL3Uu6rWpvXE18ytmB+Y/tyGTzzbmx/yY399R
zs9uzSlFDzQaEvN35aXORb02tTeubH6n27d6EvP7n0nrwKvlhfkxP+Y/fk+d
87S9P9M6cCqjxrzUuajXpvYG5vfco62exPz+Z9I68Gp5YX7Mr95nZw8r9hDz
655J6MCpjBrzUueSZtGp36WeiVs9fO/aMD/mTz7bmB/zY37/uzt7WLGHmF/3
TEIHTmXUmJc6F6dFMb9nn7fMg/kzDZl8tjE/5sf8undP6GHFHmJ+3TMJHTiV
UWNe6lycFsX8nn3eMk/arMH8mL8xL8yP+dVrc/awYg8xv+6ZhA6cyqgxL3Uu
Totifs8+b5kH82caMvlsY37Mj/n95ld7QL2HmF/3TEIHTmXUmJc6F6dFMb9n
n4+sDfOfz5DJZxvzY37Mv2t+5x3E/Jn9mdaBUxk15uW812qLYn7PPqvXhvm7
DJl2ftR3pD0vzI/5t9Z2y/Pqezd1TxU90GhIzN+VlzoXp0Uxv2efEyzdss4r
GDL5bGN+zI/5M82vthPmz+nPtA6cyqgxL3UuTotifs8+J1i6ZZ1XMGTy2cb8
mB/z55vfee+c67yCITF/V17qXJwWxfyefU6wdMs6r2DI5LON+TE/5u8yv7OT
MT/mx/yYH/PnWDrBMGpLtBsy+WxjfsyP+XvNn7xORQ80GhLzd+WlzsVpUczv
2WenpVvWifkzzzbmx/yY/xzmd9oS8+ueSejAqYwa81Ln4rQo5vfss9PSab9L
bapGQyafbcyP+TH/+cw/9b6YH/NjfsyP+bvMr75raku0GzL5bGN+zI/5z23+
rb8vFD3QaEjM35WXOhenRTG/Z5+dlp4ymHqdmD/zbGN+zI/5r2N+tffUPdBo
SMzflZc6F6dFMb9nn52WTrhHaku0GzL5bGN+zI/5r2n+W84J5sf8mB/zY/7z
mf+WM6Po8ysYMvlsY37Mj/kxv+KeKr6/0ZCYvysvdS5Oi2J+zz4r8lUYLKHP
r2DI5LON+TE/5sf8yTOi3ZCYvysvdS5Oi2J+zz4r8lUYzHlPMX/m2cb8mB/z
Y37FPVV8f6MhMX9XXupcnBbF/J59VuSrMNiR86z4/rMaMvlsY37Mj/kx/73n
B/PrnknowKmMGvNS5+K0KOb37LMiX4XB1OcZ82P+xrwwP+bH/J5+uIIhMX9X
Xk4jqS2K+T37rMhXYTDFrFGbqtGQyWcb82N+zI/5nXd/612S+zOtA6cyasxL
nYvTopjfs8/qLk02v7MHWgyZfLYxP+bH/Jjfefe33iW5P9M6UDH3W/JS5+K0
KOb37LO6S1vMr9i3RkMmn23Mj/kxP+bfmlNXMCTm78pLnYvTopjfs88JXZo2
p65syOSzTV6YH/NjfvWcSniX5P5M68CpjBrzUufitCjm9+yzs0vV7pqaU+qf
kw2ZfLYxP+bH/JhfPacUP7cYEvN35aXOxWlRzO/ZZ2eXqt01NafUPycbMvls
Y37Mj/kxv3pOpc2XtP5M68Cp89aYlzoXp0Uxv2efnV2qdpezk//72X8AJ5HK
ZQ==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztW7HOdUlx/IUlizdw7JTQjgE5dApPsEh2tJIlbBnZBMA7EJL4sSzxEDwC
IDs4Qsxu1VZVd829t6Vdff/RTE91n5nu6j5z//5n//aTf/3ely9f/v37f/rf
T776xT/9/Odf/ddP//bP//iXr77+x3/4+m/+9Oev//+/P//9u//+zx/+3f/+
6sc/+MV//Bj5++vf//KHv/nnP/zol7/9nx8lxjyfs2OQdRNrJWxp81X670k/
K/shYVfb2UmfIwVPGmca25avXPun4ew///7ykLQ/vxzEtU8S51fx1ZZdCT9P
8gHELtdZc+2H9DlCxp/wpHEivlWwJc67gmGSD7vO/lMS+JG1lDGsKOf3hI19
jy5bXHaxfp7kA0oOcnFFxCeID13niPXJCedpTCJfI75FsCl7VfHV6bkS/xP5
GtHJxl4lB7G2IMJyOcR2Zb+xe1uxJYEfsev5PM0H2Bg1yedd/nTVVsh7QbAp
cZ59LwlexO7/hK+UekfJ12yeYm1ka1s2v7P7XMGZEFdOn6wdFD8rcYz1w+m5
UoOw/lHyF4Kf9TMy3hUP2bOs1GWIfiX/JnzVUPsj9rp46WktNvel+zDImC3u
nXieOC9PcfVtELsQG101SIIfnvS46hQ2lrLYTv5J8DqWW57GKDUj6yvXe5mM
SwoXYoXlA6e5yHNWXH2ANkn3W1x7WPGn0s9Jc2mFKyp8iY3PiE5kjDJ+Mha5
+ntK3aT0TxI8Od2fYc+RIq44huhn103/jeBBbHSdQVeMcnHySS7tWpftnyjx
ObHflDjJ6nfxFqVPm+ifIBgSeSoxXqnxWR+6uCU7V8ndkzWIssfYs5bgRa4z
lc5TLq6o1FDIXOR9nfSf7ELe3QmnKxaxmF11k4s/IBhYG115nK3xlb2UiHuu
GHgao+BEMCDYXFziKQrfdq2bOAvp/Mvid8X/p7DnVNnnbBxgcx+CR4ljSi5z
1TXf9C4ZGxWuhWBQ6ujEu1Piw1ZvyoXfFW8VcdnyFOVMIXoUv6XPIBujXPE5
watZ3pjeq09R6iOllkyc2UTvPVFHu0SphRH9id6UEn9uz1OuelOJpSf9rC3s
ugn+n6ivXdyM5YdK/03Zt+me2GRfyNV7R+xSuMRkzEFEieGK/sR+uCVPKT5M
9KMQW5R4gqzLxkZXfe3iaUrMd/WOEnMVP6f7Qok6zrUWWwe5Ys4kdz2NYfWz
dp3mNucpBUMiH7n8qZyLkx42TiK+PWFwxSW2/+PKF4iN6XM02Rc62cg+V+rx
03PWD66Yc3uPBbFLWes0Jm2Xy/bJelCx8TSXzR1snEQwI+uycSnB+RP5LnGO
WP8ofaHEnk9/9zmNcfFw5bmy7mQ8R/Aoek46E3Wo0kd18b0GTsj2PVh+pfhT
yWsK51fqHYUbJOID4mdX7HXxk8QYZJ+wa7lkq8eSwMPqSdcd7JjEGUnkI6X/
oMR/pafk8ieixxXb2dyHYE6co4R/EAzsuoi9LnHVsCdJ8zoFA4tTwdOQpxQ9
J3H1CRP5KGELexYSZ0cZg9jrqmvY+oX1yWmMK9e4eiDIukpcUuKqK4+78qzL
n4qerVyczlOsHnb/pHMNKy5bFC7kOjsuYeO2q3+V5v8unUod5zqbCjalt8/m
cdc7bYh1Lj1b+wHBjOhh90/ijEzWjMqeZ/2v1A4un7j2HluvJfh/4nwhONm9
pNiCYGP1T553BCciiVjn0uPiS+l8wdqr7E9lLyW+BSB2sTiV89jwfQTxyVZN
p5xBRCdrl/LdhNWPjD/ZhYxReBqrk9Xf1kM4SaJv+ZQ0P0TtZPAo385YYXMW
ayObFxBsylz2jCs+maxNXFw9rcfVD3RxeNZGhfOzOhU8p/GTPQRXjygx/iSJ
uoPFgJwRFkOCD7g4P1vvKL2gZpmshVlsyL5iY53SD0RwumxE9Lti3eS6iR6C
sj9ZX7HjXX5G1mXxPMe4vhNN1pIs50diCPLcVY83cKEtzqO8a5afKP3AdIxN
S9u6aTyuXOwan+CHLr6t5NN07ZPAz/JJdvzkd5PJbwrs+ETcS5zrZv4/2euY
XDeBR9HPzlVsRPAovIjFz/Z20vciEvWRwu1dNUIzB9viPFvnmv22tYVtstcx
2QN04VHsdc1NxPC2frKLn6dxIhiUXpCrL/SUNg52wubSeRLFV8qebKhNFD23
rMu+o0TvaJLzKPayPCQdQxR+ztqbxs9ydeXvdC9r8jtL4t0hayG+Yvck29tM
+4rVc8u6ifGInkn+z2JI7P+t/jAi6dpTuftxitXK30j8T+RQZHxD3wBZK3GO
lHot4StFzy3rusYnYnu6j+fCls4jiVrDhcE119WrQfS3fYc9PZ/sG0z2ChDO
j+yByd4XIlt4GvKCwh8QDAp+BAOLzRUrXD5J8DrFFgU/G/9duTgRkxt4iGst
BRt750rp3aV7hlu9uIY4n5bJWJTosSTyiBLfJjmkgl/p/yh2uSQdE056Gr4v
INjYeM4+n7zT6/LJ5Lqu8Vu5TMHP2sXarmDYkjS3Qea67vywdrVxsMm8tnVP
z/WulXpB8duWnsk4mc5fW70I17vbuiuYjldb93WR887W/ie7GrgfMjeR19i1
XJhP45V3rXzTZ/2p+GGLkyfWapjL6pncAwiGrb8V/Ii4+L/CAxFsLhuVuZP7
StGfxux61y4/3H53KLFWw9zJHkvD/TeXpHsjLjwuHqjg2drzCh7l+RZm17tO
+KdBPvz//2Syx8LiZ3Gm8Su2bPXr2Podee7Cg9j4bX51+oddC5H0Oz09d33b
TcTwxHnc6gspcxu4ECvpOJb2w9Y3FARb+qy54oMLm2JLes9v8ZwETjbmI/vf
5ZOtfuy78X/Xfk7EsebeckMNq7wv9ryw/Z8GzubCc9KZ5jkunEqfB9HJ1h3f
9q7+Uj8yPq3zVfl/w3fMrVoygW0r7iHvi63fXfc92u6qufa5woVc/kH0I/hd
eyPBG0/jt3oFibnIeNdcVg/y7ibfi3LeFT+w4yfvDqU5HmtXgrezc1mdrhjl
WlfRw+5PJI+f1kr0Bl2ch9XZMDcdM1n8iKR7bpP1CIttcq7rXCscFckLSl8C
wZPuF7kwuPS7MD9FObOJ3iCLv0FPM/9P9yERPImzkKhHGnL0d/HLXxOlV6Nw
/nSPgrUX0blVY07mPpYDTPYGWRuRuWk96bmTHOYpk/3/NHfaug+QmKvkYsUP
Sr2g5GiXr5C5W9+80nVx4pssgk25L6RgeGf+v8Xhm7kT2384jWHxJOYqtbni
2/T5TXzbRfS4nrf1oBCcLP9n9yfLSRC72nJEeq4rPmzxmQbupEjDnlHwuHKT
6/vgZAy8pV6ezCNILkj4gR3jsmtSzxb/Z/Wk+YwyxrXnG86UCyeLR8H/fK58
11MwbL2vyXr5JOm7r0pPZvJct53Tk5703K34MFk7bN0Xaug5nHCyeFwxk60f
E+d38n1t1cvpPPIUNs4jvF1ZV9FzGtOQI9L8v/kOTwN3QnyS1t/Wc1DuWrDr
IuMVDAnfTtbLLswIBtZGNr8j+rfOO4LzFv6vyKv2/9Nn7faeAzLm9joawdNQ
L7swT8bGyVjBYtvqDW7NbebwrB5lrZPf0netX6nngEjzOUrUJpN7nsU8iT/R
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
       "], {{0, 
       128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7752224028511353`*^9, 3.7752224120281754`*^9}},
 CellLabel->"Out[59]=",ExpressionUUID->"544bbaa5-7a86-4aeb-b152-91611f0ea1e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetMeasurements", "[", 
  RowBox[{"netECA14", ",", " ", "fullTestSetBigC", ",", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Accuracy\>\"", ",", " ", "\"\<Precision\>\"", ",", " ", 
     "\"\<ConfusionMatrixPlot\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.772718835348043*^9, 3.772718835872539*^9}, {
  3.773157558742169*^9, 3.773157559675911*^9}, {3.773291266369521*^9, 
  3.773291266873107*^9}, {3.7733482373548822`*^9, 3.773348237428149*^9}, {
  3.774188635136705*^9, 3.7741886352042837`*^9}, {3.775222426547949*^9, 
  3.775222426622118*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"91ef8e70-ac8a-4d13-be6f-95353476855e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.63701171875`", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "0.8012958963282938`"}], ",", 
     RowBox[{"2", "\[Rule]", "0.6278493557978196`"}], ",", 
     RowBox[{"3", "\[Rule]", "0.499466097170315`"}], ",", 
     RowBox[{"4", "\[Rule]", "0.8756892230576441`"}]}], 
    "\[RightAssociation]"}], ",", GridBox[{
     {
      RotationBox[
       ItemBox["\<\"actual class\"\>",
        DefaultBaseStyle->"LabeledLabel"],
       BoxRotation->1.5708], 
      GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQGwI+2KPTb2cuvC/354n9jW+8169kvbBXVjTpiil6
Y3+pu+WCRtFte4cJEWXi2Y/tj//t2Lda6pX9Fk0OL42lN+23HG5/n3Xmkb1f
pNKlgAsvMcyF0YukLmcs+vzSPkNGjF3h2mv7BZptP9p43tnvsBMQ+r/imr3J
t5j/qUcf2tv1HYgVCH1pr7z69IbwXy/sJXq7uFu0XtuvYO3xlNnz1v7ku6t6
xxnf2O/LbD4d4PDWvkp6hYPDtnf2586Agb1TwtMLSrfvQu19Yb9/c4Jkyc9X
9lY3TiyN7npj//q7ueafhHf2HnF3nwn+fmPP95Pv+JvXb+2L7Be9X8X23n6h
pRCzj+Rz+xS3VUfj7r+0ny50xuq9wlv7q5sfZYlOemz/7Zqi/JzC5/YmDEe9
J/99bf9fSyPJVv+dfdSyS8sFDryz1zQXPSuc9d6eLyZt6V7R9/bPihbr7Y17
b7/odvXOvC3v7QEO8rSl
        "], {{0, 0}, {4, 4}}, {0, 1}],
       Background->GrayLevel[1],
       BaseStyle->Directive[
        FontSize -> 7, FontFamily -> "Verdana", FontWeight -> "Thin", 
         FontTracking -> "Condensed"],
       Epilog->{{
          InsetBox[
           FormBox["371", TraditionalForm], {0.5, 3.5}, {0, 0}], 
          InsetBox[
           FormBox["730", TraditionalForm], {1.5, 3.5}, {0, 0}], 
          InsetBox[
           FormBox["9", TraditionalForm], {2.5, 3.5}, {0, 0}], 
          InsetBox[
           FormBox["6", TraditionalForm], {3.5, 3.5}, {0, 0}]}, {
          InsetBox[
           FormBox["92", TraditionalForm], {0.5, 2.5}, {0, 0}], 
          InsetBox[
           FormBox["2534", TraditionalForm], {1.5, 2.5}, {0, 0}], 
          InsetBox[
           FormBox["122", TraditionalForm], {2.5, 2.5}, {0, 0}], 
          InsetBox[
           FormBox["74", TraditionalForm], {3.5, 2.5}, {0, 0}]}, {
          InsetBox[
           FormBox["150", TraditionalForm], {1.5, 1.5}, {0, 0}], 
          InsetBox[
           FormBox["1871", TraditionalForm], {2.5, 1.5}, {0, 0}], 
          InsetBox[
           FormBox["168", TraditionalForm], {3.5, 1.5}, {0, 0}]}, {
          InsetBox[
           FormBox["622", TraditionalForm], {1.5, 0.5}, {0, 0}], 
          InsetBox[
           FormBox["1744", TraditionalForm], {2.5, 0.5}, {0, 0}], 
          InsetBox[
           FormBox["1747", TraditionalForm], {3.5, 0.5}, {0, 0}]}},
       Frame->True,
       FrameLabel->{None, None},
       FrameTicks->{{{{3.5, 
            FormBox[
             RotationBox["1", BoxRotation -> 0.], TraditionalForm]}, {2.5, 
            FormBox[
             RotationBox["2", BoxRotation -> 0.], TraditionalForm]}, {1.5, 
            FormBox[
             RotationBox["3", BoxRotation -> 0.], TraditionalForm]}, {0.5, 
            FormBox[
             RotationBox["4", BoxRotation -> 0.], TraditionalForm]}}, {{3.5, 
            FormBox["1116", TraditionalForm]}, {2.5, 
            FormBox["2822", TraditionalForm]}, {1.5, 
            FormBox["2189", TraditionalForm]}, {0.5, 
            FormBox["4113", TraditionalForm]}}}, {{{0.5, 
            FormBox[
             RotationBox["463", BoxRotation -> 1.5707963267948966`], 
             TraditionalForm]}, {1.5, 
            FormBox[
             RotationBox["4036", BoxRotation -> 1.5707963267948966`], 
             TraditionalForm]}, {2.5, 
            FormBox[
             RotationBox["3746", BoxRotation -> 1.5707963267948966`], 
             TraditionalForm]}, {3.5, 
            FormBox[
             RotationBox["1995", BoxRotation -> 1.5707963267948966`], 
             TraditionalForm]}}, {{0.5, 
            FormBox[
             RotationBox["1", BoxRotation -> 1.5707963267948966`], 
             TraditionalForm]}, {1.5, 
            FormBox[
             RotationBox["2", BoxRotation -> 1.5707963267948966`], 
             TraditionalForm]}, {2.5, 
            FormBox[
             RotationBox["3", BoxRotation -> 1.5707963267948966`], 
             TraditionalForm]}, {3.5, 
            FormBox[
             RotationBox["4", BoxRotation -> 1.5707963267948966`], 
             TraditionalForm]}}}},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{All, 36.}, {36., All}},
       ImageSize->300,
       Method->{
        "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
         "RangePadding" -> Scaled[0.05]}]},
     {"", 
      ItemBox["\<\"predicted class\"\>",
       DefaultBaseStyle->"LabeledLabel"]}
    },
    BaseStyle->{
     FontFamily -> "Verdana", FontSize -> 8, FontColor -> GrayLevel[0.4]},
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxSpacings->{"Columns" -> {{0.5}}}]}], "}"}]], "Output",
 CellChangeTimes->{3.7752227981587543`*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"ef4549d3-d52b-4031-9d4d-6abf6d1672ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"entropyImagesBigC", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{"Keys", "[", "fullTestSetBigC", "]"}], ",", "500"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"entropiesBigC", "=", 
   RowBox[{"netECA14", "[", 
    RowBox[{"entropyImagesBigC", ",", "\"\<Entropy\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"highEntBigC", "=", 
   RowBox[{"entropyImagesBigC", "[", 
    RowBox[{"[", 
     RowBox[{"Ordering", "[", 
      RowBox[{"entropiesBigC", ",", 
       RowBox[{"-", "10"}]}], "]"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"lowEntBigC", "=", 
   RowBox[{"entropyImagesBigC", "[", 
    RowBox[{"[", 
     RowBox[{"Ordering", "[", 
      RowBox[{"entropiesBigC", ",", "10"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"highEntBigC", "\[Rule]", 
   RowBox[{"netECA14", "[", "highEntBigC", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"lowEntBigC", "\[Rule]", 
   RowBox[{"netECA14", "[", "lowEntBigC", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7727190003310432`*^9, 3.7727190300142097`*^9}, {
  3.77306943758751*^9, 3.7730694509663277`*^9}, {3.773158502088438*^9, 
  3.773158510047945*^9}, {3.773291269588808*^9, 3.773291277379661*^9}, {
  3.7733482430458937`*^9, 3.773348252369199*^9}, {3.774188641350009*^9, 
  3.774188648929162*^9}, {3.775222905853323*^9, 3.775222915581979*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"fd04d8fe-82e3-4369-9c2f-ac111acf8e24"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztmDGKpVUThhsFcQMuwHRCTWWaAVfQExm2oBiMCCMyGAiuwsTYDbgGN2Rm
aA8YmDTcj3PqnKfe8wT/z+PQfe936616qm5/+vUPD99+cHd39+PHT//38Pju
1du3jz+//uj9f3zz+Obzz958+IS//ve/9/z45V8vH77/7v6LX/58+X/+7Y9P
7v/+6sX97//8dP8cP/e7z73OLa9/y2uOPPMtz1P9DCOvv7Lm1T0w8l7Vz3C1
bld/N7XfrtZqJJfq56H5ZJc3rtZ51uxXuK4irwoXVedY7Z/qWlX0W0UuK2uy
st9mzfVKb8zy/Er/E3hkXir2b4Ufds3IruxW9sPK23vW563uB8JeqO7zXXf7
rPc62f/V319m1XmW87vnNWufjvRDxX7f5dJdtxP5s+zy9sobUv+vvw0qvl9U
+4TGFfdz9bxX3wYE51fMBbnfRnqv2iHVTOg9GhP6vCJfGs+650c+7667izyD
p93/s3bErv5J6j0C7+rz6u+JhNoS9m/FjHefwRPu/1kzRfZ5x96j8a57W//X
3WbkXUDLK/X+vzpfK72h//nOqa6h/p/7ea/WZNcuIOR1wv2/8n4guL1L7xF4
liv0//r9W32zVe8CWl6p9/9Iv836GRqTMyL0/Kye0f91n53gou4zeML9P1Ln
Xd8N9f9e5698Tf0/9/tXtYtS8+qyc2l7sOMu6JhRdW+PeLui/idkutIzFbu+
e16n3f+7epLGhN7b1dtXazLr56v3S5dMr9ZkVha7+qpLXt7/4z3ZZRd0zKji
tqnYC7v2CznTiltx1y5I8v/J9//I86+86/Q/585ZmcVIdoRMR+ZilvMrdkGS
/6tvDMLnqnielfOu/9ffOQSucCOBZ92cFfN7mv9Pvv937X0CE3qPliMt06u+
6jiPs+qz62br7v+R/ul4/+t/Zu/RMqXle/XZyPM4a39V364j3wu6zKD3v/5P
zav7LhhxDjnfkbu6wre0nyfk4v2v/0/mXbtglt/I+Va4ZWXNK5zp/c9n/X8m
074XpDq/4ucJe2HWZ9yVkfe//pc5u6DLrM36LFc/F2F2KnYKoZ9pz0+YfYLP
9T+nHyp6o6Pzq3fHLMfOymLkcxHy9f7X/4Q6d+SKXXDCTHWZr5H6k+fR+z+j
P/U/h0d2wWnO7zJfI8858nl31d/7v1d/6n8mj7jitFzI87Xrs9BulZF90Z3J
/an/mVzhkFSmzddIFrOcuWsXeP/z+1P/y0lMm6+rz7by31feJ97/zP7U/3IS
0+Zr5Dln/bv3P4dp/an/5SQmzFe1G0f+jlQxp97/vfpT/8upvGu+Vvqz4jNW
1N/7n9Of+l8+gVfOV0X/z/o7z8rn9/5n9qf+l0/jJP/P+psS4fm9//W/LCfN
16z+n3UDE56/IhdCX3XsT/0vn8Zd/F/h9lk/P6v+3v/6X5ZT5+vq+474s9q3
3v95/an/5dN4l/+vOnzWe81ysvd/Xn/qf/k0rp6vlc8wa76qb2/vf05/6n/5
ZK6Yr1tep7v/b/ndlX+PSnWL/pflvvM169l2+b9i31XnQuirLv2p/+WTeeX9
v9J7tL9BVTzP1d/tyPpflnvN14jHyP9esQuq37c7639Z7jVfI+9F+Pdqz1S8
fqpb9L8s8+drxJ+7nF/xWXQLsz8JnJqR3JcrPDnyvhXOr5g7gk9OcIv+l+W9
80Vz6azfTXJRqlvINTcjuTvP6mfyXM+aO7KLUt1CrrkZyR151t98uri04zPr
Fn7NzUjuyFd7srtLOz6zbuHX3IzkjjzSn7f8Lm2u9T+n95JqbkZyF57l7Vmv
qf+Zn5HG5JqbkUzmkf6c9Zqzvl8Q5o7solS3kGtuRjKNr87L1Zki7xf9n+cW
cs3NSKbxLN/OmrWV+0X/57mFXHMzkrvwLveS3yvJRaluIdfcjGQy39JjhLno
MndkF6W6hVxzM5K78Mm7QP9z+jCp5mYkd+TTdoH+5/ReUs3NSO7OJ+wC/c/p
t6Sam5GcxKm7QP9zeiyp5mYkp3LSLtD/nL5KqrkZySdw912g/zm9lFRzM5JP
4467QP9z+iep5mYkn8xddoH+5/RMUs3NSJb5u0D/c/okqeZmJMv8XaD/Ob2R
VHMzkmX+LtD/nH5IqrkZyTJ/F+h/Tg8k1dyMZJm/C/Q/J/ekmpuRLPN3gf7n
ZJ1UczOSZf4u0P+cfJNqbkayzN8F+p+TaVLNzUiWObvgqjeSXJTqFnLNzUiW
+/ohyUWpbiHX3Ixkme+Hq7/b0UWpbiHX3IxkmeOHkXkc2Sm6Rf+fnJEsd3HC
yB6p2EG6Rf8T6izLXZg8U7pF/5+WkSzTHHuao1LdQqitGcky0wOzfr67o1Ld
QqitGckykwlzRHAUrSZJtTUjWZbJjkp1C6G2ZiTLMtlRqW4h1NaMZFkmOyrV
LYTampEsy2RHpbqFUFszkmWZ7KhUtxBqa0ayLJMdleoWQm3NSJZlsqNS3UKo
rRnJskx2VKpbCLU1I1mWyY5KdQuhtmYkyzLZUaluIdTWjGRZJjsq1S2E2pqR
LMtkR6W6hVBbM5JlmeyoVLcQamtGsiyTHZXqFkJtzUiWZbKjUt1CqK0ZybJM
dlSqWwi1NSNZlsmOSnULobZmJMsy2VGpbiHU1oxkWSY7KtUthNqakSzLZEel
uoVQWzOSZZnsqFS3EGprRrIskx2V6hZCbc1IlmWyo1LdQqitGcmyTHZUqlsI
tTUjWZbJjkp1C6G2ZiTLMtlRqW4h1NaMZFkmOyrVLYTampEsy2RHpbqFUFsz
kmWZ7KhUtxBqa0ayLJMdleoWQm3NSJZlsqNS3UKorRnJskx2VKpbCLU1I1mW
yY5KdQuhtmYkyzLZUaluIdTWjGRZJjsq1S2E2pqRLMtkR6W6hVBbM5Jlmeyo
VLcQamtGsiyTHZXqFkJtzUiWZbKjUt1CqK0ZybJMdlSqWwi1NSNZlsmOSnUL
obZmJMsy2VGpbiHU1oxkWSY7KtUthNqakSzLZEeluoVQWzOSZZnsqFS3EGpr
RrIskx2V6hZCbU/O6F/pvTGj
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt3cGqJsUVAOBBQQyuxF12LnyBZO0dsslanCcYIVkZQhQRd7OTxKWbPEA2
Ie8QH0AGMjvXeZKMGMIvoeCce+r0X931La58/vy3b1V196nqquoz73/yx49/
/8aTJ08+f/v1fz5+/uVvPvvs+VfP3vrxf373/NNf/+rTN1/zxX9/fvS7v/jm
4fu/fffw7z+/8/SjPz17+q8Xrx7+8tf3fubb74w8+t2IR8eJ/N1seY4sc8fn
3ecle8xK+1fOe8fxK23S3ebZenWc31n3wqwyzyrDrPt0VmyplDNb5tddwP9+
Xj779uHlF39/+OAP7/3Mo+9Efjfr22Nmj99RnsrfnfX5keclcszIT/b8Ro7T
cfzK9d/d5kfeI5Vj3ismdMelyr1wZPyptOFtX/D8zVcffv2P3z794Z+/fBg5
8v1sXzY6/uhvjX53VnmyZY60T/bzbH0r5yVyzKyPPOaRx8862+aR8z7rHsm2
yay6zIoJ2fM4676e1W7dzpZ/9LuVdhv1R9l2nnU/VvrQ7HVVeSaddU9V4tVt
OSPtk30mrRyzu8wdfcEsV+6RSFt194mVmDDrPGbv62wZOuJPJUaNyl85d7P6
yux82qz7pTI3mz2/kWfDWfdUd8wZtU/2Hs8es7vMK7v7Hsk+g8y6B7N16X42
nNX/HrlG0H09VGL4rHnaWfdLZb4022d1j+W65zRG10/kvGTLMzrmrDmTWcdf
wbPukXv1WZF7rTKWy5ahcpzstX3k+kj3uYv83ci8d6Q9KzEt8owWGW9k11Mq
11L39XzkGCD7nY7x/5Fz/h3Orq2sUOZsOSt7V+7V/2afMWetEWRjbMe5i/zd
yP0+il2VefJ71T07D7PyWK4yBsj+zOq/7tU/drd/x16FFeoSGbNFrpPuvi8S
uyJj4I410461xex4ddT+lfg2Ou+V+6Wj7pX+8YxjuexcbtYr1HE1z1oHXNnZ
+f9KjK3c+5G/2zGXW1l/nHWOZvXF2fbMtm133Svx7Yxjucoem6vuw7lXPztr
r8IKnvV8d6/zMooPkTpW9hdlx+SVtqrMcWXXr7N9Wfd8cnbOp+O9mBXu0+y1
UTnvO7uybyG7DnUld9cx2+d2x5zsmnL2esjuo6jExmw7RNpkVt0r6x0d19XK
91qlX9shRmWd3Vs+GkOuUJcrObs2MSvmZOeTj9xHEZmvq+wPya4Rz6p7ZM6n
+7paeSy3wxzFvdozO2aoHJPj5yW7NlGJOZW4V5lDzu79yNYr8lM55qgulZiW
vR4q19XKYzlzFH3t2bFvYbW1pLN41rP8rDgQiXvdc8iVtYBKjM32s9m++Mh9
6bPeq1rhHjFH0deeKx+T+/qX7Bx7JcZ2l7OyTp19rpk15unYlx6Jh5X9Qkde
t+Yo+tqzew1x53Ze2bPiYWWuvuO6yj6nZL8/a/9M9zrCKDZG5tZW2BdkjqKv
PSPrXJU1RPts13Tl/crKd7qv1VnzNqPvZ/cWRo4z6rMi3+8YA1Tap9vmKJj7
nJ0nmfXs0F3+WXF7FDci64yVNu8eA1Ta58i+yRwFc18cGI2xV8gLly1/dg4n
sj8k+6yR3Zd4r+fls5xTcxTMx7iyDti9dzESx7JzL9l5sMgYcrW59Gw/lT2n
K1y3zPw4Z9+vjBznyDmf7tgY6XeyMfPI+Bl5VqqcU2Nm5ms4O88fiY3ZPduR
WNSxJyS7lhF51ujeH5V1JYfeas8yzFx3di2gY799JY7Naofs+8KRmNmxP6rS
p0e+UzmnK1zPzDw3bszab99Rnll7QrJ1r7wrceSe/+xzU/acWj9lvoa788J1
5AWq7AmZNdaNjPMj4//u9fHKmkXkc2a+hiN5Ce61578jNmbHutnx/JHj/2z/
VXl+Wfn8MvPj4kZHXrgVxo3Zvilb9+zvjuJwtl7ZZ6VZfeIK1y0zP873ygt3
5LhxVm7V7rXUe533Sp+4Qp/OzHVn9+1kY92R+15mOfJvSFXWUleYK6u837FC
+Zn5cT4yL1z3vPeR/WDkdyPHPGMdj8wLwcxrxoesj9z30tEPRtZAV37/q1LH
St/HzOu7Oy/clWJFtu73ev+r4kh/vXNefeYdnB33jn737HsIK2P4I/d/dtRx
VE77gpiv5468cGeMFbPyp91+vto8WGXv6Gr7mph5rmflgTl7rKjkTzt73SN1
WW1fEzM/zh154c6YQ6ay5/9K//7IynNWzHx8POx4N3YFV9Y3zzjHNautVigP
M/fd45W8cGdc/83mT7vSPA8z860reeHOMjau9HFnnONiZo7Ew0peuEiMvVcd
s3P1Z3nPl5m5Eg9HsX0U9yLxcIX3YSu+ar2YmbOxLpIX7uzvw2b3NZ2lXszM
2ViXzQuX7TtWaIds/xhpwxXKzMxciXVZR/qOUfxcoe6jslX+fYEV6sLMHIlX
lbxwo34k8jkzM6/jSl44/7YsM/O53PHe61neC2Bm5p9c2QPpnVlm5nO5ktst
sl/IO7PMzOdyJR9y5HNmZl7Hlfkc67/MzNdwJC9cdv5nhXoxM/P/u/IOr/xp
zMznciUvXGUvkLkgZuZ1nI3bldxBK9SXmXlnV/LCzVojXqEdmJn5J2fzv0Vy
Jp8xLxwz8w7OvgsW2dvpvQBm5vM6Mv+f7VO8F8DMvKYjeeGyezu9F8DMfC5H
5v/lhWNmvoYjawGjuC0vHDPz9Zwdw1v/ZWY+r7PPAvLCMTNfz6P3v0bfkReO
mfm8jszPV+Z/zAUxM6/jSF647DyPvHDMzOfyKFZnc77JC8fMvL4ra77ywjEz
X8/Z/G/ywjEzn9eROfzRfk554ZiZr+3s3k7vBTAzn8sduX28F8DMfC5H1gLk
hWNmvoYj8/nywjEzX9vZ8fyov4h8zszMa3o0npcXjpn5es6+wyUvHDPz9Tx6
h0teOGbma7iSz01eOGbma3i0/1NeOGbm6zm7/1NeOGbm6zmSI1ReOGbmfSwv
HDPzPh7Fc3nhmJn3sbxwzMz7OLsWIC8cM/O1LS8cM/M+lheOmZnlhWNm3sfy
wjEz7+PRmFxeOGbmfSwvHDPzPo7s/5QXjpl5H8sLx8y8j+WFY2bmW8sLx8y8
j+WFY2ZmeeGYmfexvHDMzHxreeGYmfexvHDMzCwvHDPzPpYXjpl5H8sLx8zM
8sIxM+9jeeGYmfnW8sIxM+9jeeGYmfnW8sIxM+9jeeGYmVleOGbmfSwvHDMz
31peOGbmfSwvHDMzywvHzLyP5YVjZt7H8sIxM7O8cMzM+1heOGZmvrW8cMzM
+1heOGZmvrW8cMzM+1heOGZmlheOmXkfywvHzMy3lheOmXkd/wfavAhy
       "], {{0, 
       128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt3L2OHcUWhuERSIgbICEjJYTcI2IyEyECNAiILCGZAJE5RIgb4ULIuRhy
sCUCJ5amp9a71le13+AcPWc03ru7ev1VtY8/+e6n5z++d3d39/OHr//r+cMv
X7x8+fDrVx+8+R8/PLz4/LMX77/mq///88Zf/vPvs29e3d3/+ddvz972p39/
f//x79/e//HR1/dv+12/f/VzHvOZ7/qdq59J3MvV6+m8F2IdiHt/zOevXE/V
z69eP/GZnT8n8oJYq6lnROdpVU2uqj90LnfWt4Qa2NmzqvpyVf+6Gid0H1x5
7p19J6Gvdc6KVetM/1l6hqnKL6JGddZ8ej6hayDdC6rmDaI20n2EniuqcjOh
RiX0rKr5pNNED91lPTtrftr6J8Qqke+d3zU1v1XNS1XrmRYnnTMDcZ1pvaAz
1+j1pGs+PVMRPaUzx6ueO/G8iNpCrFXCuiXUfPpeiOe+S/3vnJeI9STupbP+
E+tZVTc657eq/k7sHei1Itaz8zPp+E+YMXas81XxtpLLU+uZMCtW9USirlbV
t4T8JWaYznwn5qiEHJzq751zVEJt73wWU79Pz3XEfoSef+hcq1rPqf0jPfsR
+Ti1P52qaXTvnoq9HZ1W56typCre6J7SOYNNzcNEvlftcei+TM8PVZ+fXPM7
139qHkhz5zxPz5/0NaflHd0HibmLWMOpvVVCLCXUsc4+3tl/E+pzcl9I2EfT
MbBj/a/qF51nLLvn3dR+Z2qmpet21TyQsFa7eyqu6DpG1M+050XUqKq8S1ir
hDWvykE6PumcIvb4U2u1u6dyuWrvTOxDd6lpVbmzcu/J+6apNe+MMWKWpu+l
ar+ZcAa1o3fJ5eR9bsJZUOes6JnPel4QdY/e83b2wao6llZb0jy15vRcMVVL
E55XVf3prDnJrqrVnT2U/l4iRxLmyVNjeBdXzVSdeZSwVlUz/0ouJK8VPQ8k
rDm9pyDuN622pF3zrZmYM+n9dcL60P2OriEJJs4QiDVPiKuVvUBC7nT+Wc31
64Q/S8cG3RM7zzROyqPd6wnRr3fpBTrHnWfRVbWUjmG6B02d7ZjvOblW9ftV
55DGxm2aOBcl+lFnDBPzdtV93dqcfwvunAFWYl6f4c6zfSL+iV5QVVfT9kcJ
8aa53KTfmxhLZ3jqzKGqF1TtbafO7Tufozm7l4mYX/ku4+oM0+cYCdfcWSen
ciSh7+icPH3Mn6X3CwnrptdrBVFXO+tb5yw0dSbmbHae6TOcq3GesCaaqxX0
XqBqlq6qsZ3n51PvQczlvTx1Dkn0HZ0TS1d/TsdM596TuJ6EGtu5r9ezeUrM
TsbP2Z7aP3bOuisxX3UNU+8+iJ/rnPpfFdtTM5XOqfmd73foekifU63kQtq9
T/UpPdsLiPpv/GS6qgbS39u5B1m55s7vrbr3hM/U/b1gJbbp79WZcbJLPSTe
KXTWUnruSjgf0zn5Tu8LjI3zTLwPqopD4tw+eUYizrKm9oZ6tv535oLey/T5
ScI55FQNJM5vr34O3UN1Tv4SNd/nfranzgE6ayl9DVNn/sR+ynzPd2cfNzbO
c3JNSNh3rKwPceZPPCO6Z+memj/1PsjY2NdTcywR83QeVfWXqb0G8fs6M0+J
90FEbOucuErr9Z1zbOcMT+Rs1fltwnPXtfFTVbd9R3CGd+/1RB2rmouIvKjq
0VXPyxzPqflVcVI1/9gL8k3Pomm9gKjzRE+p6sVp/VrX9vrOHk3nl86p+VOx
mnC/9JokrGfCc9FcjU3OL+MwpwZ21qip9wVT5yH0+xRz53ZMx9Lu16MfXx8S
zsA77/fqmhDrTDwjfbbT3s2lXY9er4dVfSHt+XbOJ75H050xfLXGdp5nOs/k
e+q951S/I+aTzn2Qe+rb8VTd3uV6dG1trKpLUzW/qh9VzfBTc755tK+n3s1N
vatynsmMt6rekfAeaupzqvqpOXK2q/bUnXtw4nrSZshTTZz5rPQI+l6qehYR
h+aIJs5hEur/1Wuma8Utm5jtq/oLEXv0/J/2+ebIeabPW4hr67wvzT27qt+h
63PVdxHnYMTnmyNne+psP/m7Ep7L7q6aOek9QlW+EPWfPkfyzF9P5S/xHoHe
p+v1mKmKAfq7OvtR53pW9YuEeNP5+Vv1vqBqVrEX9MQMcV5N7+noGb4q5qfu
3Xw5z51nNSuxmnCder220J9Jzy1V13Bqnup8J9RMInem5ka9Xns7P7PqeuhZ
IjlP9XlO2G8m7HM11wsSzgbpWZqun842mo6lzhzp/LOe/8zW/87PqTrDSTgz
MZ41nZsJcxcxv1X9XOf46nNfiZmEmm8866ncWfmchHtZ6WUJz0uvP6POfW5C
nhrPuqpOEjMScS9VuWDu5Jh41sm1lPgu4/k2Texh0/bCVbmf0Nf002Km6lmn
1efO/U7Cc9f9uUPU9s4ZiegR9Drr2jp5NTaqZgDivIjYd1fNRfo8E+/FEs5/
0s6sdE98Er2b6DXEviPt/YXOdOf8Q5//EHOaubBXfNLfS5/5rPQ75xw9lWvJ
9T+hnuja+Jw6VySuZ6WeJ/dQva8T9trE5zgL7eW0M0YiljrP7Y15XVVXd4mf
U+/rVCfsMa9eD9G/OvuIMa9vrR6eel+7O2GPWVXDV2ov8V7AsyCttX5aH+l8
/0tcW+e+SWutd3TCWXrn36Ow/mut9dPqML0vIP4Ohu8CtNZ6vf5f/bOdv5/2
Pl1rrXfx1Zl5qi8k/51trbXexcT7087fsZ5rrfV6/V85/686e7Fua631XjW/
6lzIXqC11pk1/2o9X6nt9gKtte6v+Vc//+rPp97zaq31qU7+9xYecw0r95uw
/lprnVbzV2opfXaktda6tv53/n+y/PfWtNY6s+ZX9YWV701YN6213tH0v59J
nPNY/7XWmqv/xHveqjpv/dda656+kPD38H3/q7XW1n97gdZaczU/rV/Q16+1
1rdmouY7z2ut9XnurM/2Aq211lprrbXWWmuttdZaa6211lprrbXWWmuttdZa
a6211lprrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmuttdZa
a6211lprrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmuttdZa
a6211lprrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lrrHP8HviS2zA==

       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztmL2KJmUQhQcF8S7EWDDQ2FnMzIQ1MR1BowVhDcTMTDDazNzMi/AKzL0I
vQl3wcBwmreec576xmCXHvi6u96q81f9/lffPv/mrbu7u+/eff3f84fvP335
8uGHL95588fXDy8+/ujF268vf/z335vrD355df/Tz3/f//7e58/+e/3bX39+
8sevn92/+vDLZ4/5zcnvH3P9mNoeU8PJ9WPee/UsV997tYaTmSZ7S2CGwOcU
F4ien+CEqHnq+QYe0bOY0l7imQYtJWad9LWkbrQ0mcDDlB4m+0PU1uICPSMD
JpO6Z8AVjYGkVmyf19TZW5o85e9TXpnsDz0vYsehcWXG5Mb3GvrcmmnSp2zX
xO5A6MxUDQasJrPxVG9pnNi+A9h0r9Wf5HNonaHnYt4XDHUmv0HR+mzAWMvf
bfmE9qApLUreS/vORg1MYo/22S0+vtGzWp7Y0kBDT56CniT7djLT1v5o6+GJ
D9Ka1vJxMzZaPaS9LKnnG/cRs7bYMkmr/wZPn6rThrcWl4l80to9p3bwFjbo
fEL4bDK/GXiazCQtjhueSWfsVg5pcdl8djqLGvBs8xr6XIZ3GfpmyD+0pxDf
Ewwz3aJLNmzQedvwnYfI2DR+DLmUeNfG3aSVb2kcbsyiLX6Z/WvqvS2/Jn5P
vJfQN1supblj0xxbvqWzH43PZFak60/6bMvfbffarumet3Kpjfv0e214pv3a
9pyp97a096pf0Ds7sYMnrw3anuw5nXNojTX0OekdyfxJ5wozJqf2BQJjyf3l
VvW2pTMtfSA8hT4Lfe8U9wnMJ3+/MftNYTLpgwQ2aJxs19uWziQx0MqQNowZ
aiN4fTJrAp8tLBlmZ860yXxi01tD/2k8ENmVyDAGjtC12c5C4LN1RvreW83b
9G5r09uWL9NYbZ2F9gtDPwkduNW9aeN+YcjtrZ2ohZ/WjtbySlsGTmY5IkMa
+pnM0gbMtDiVxKQt29D7u22+yaxF+34ro06d5aRvNk2YyvxmvSU83cCpqfcS
+klkmyR+kvNN5pkWl5PntWHpKi8IvNFeTL+XftdGThHZrHXd6k+Sp1tyIL1n
0fvCRq4lM0BLo6b0lubLRk4ZepJ878lek+T+iR4mc6DB61t5hsYSnVeTmYeo
M+n7Uz2xcSrZk+R7p/ayZObcMjtb7qLPQmMpud8Z9GdKP5PYtmG+NQvbvQZv
nfKmZI6iM1LrmbRftLA0hX9Dn22ZqpU3/sd/xiuT+So5a9u5kpi0fUPY2POp
Og3eQf8+2Vui57Ydn9BPw73ErM3nos87pUuG7wmtnhN6S9xr8IVkb5N5ieBI
K2MYrg2emzzXVX5NYdjG3yRnp3y8lW9tOmbWRiIvJTMqnRMIPrY02dATmw7Y
ss3UnmXoD5HDkx5qyM9T2pjcJZNzb2G+pRVb8knyjGZNMOhGy6O3aJQtP5uv
aT8idk8aq1t+T2ceW05oacKUV7Z43dolk/5u8CaDnifzg23/3TiXLfmEnhHh
I/Q+TucN+r3JrEV4q8FnbfUkcZXU6ta5DPhJ+mBSB5L7He19rXcRWY72cYKD
rZ3FvIfSu16y58S5DPvCFj8yY4DGjME7Tupp+TixE5nz7Ynf0fcadI+YL51D
bH5t0HkbBmgfIfQ8iR86B5rzBtETQx8MvpzcKejzEnhLer1BZ2gM0DnW8Bxb
RjLg0OCPrT5sqcFcD+01hppb+6wtN9KelfS+ZEYy+EhLkw010x6X1EmzJrS0
xeChrZ2IngXBl5b3PYXs1PImOkcl97vW94cWl5P+SGQwOnNO9dOQYWieJv0i
+XxbdprSmSTeDP00ZIApbBv0OalvRJ9t+ymBYbpO2i9aPTRkp2R+Tvah5TtJ
z6I1cCrv2TzagKukjxN5IJlPDL2ivxXQ2cmsIcReSWSzll7RfbNlMxpXrT4n
/dGQPYhMuOUsrTzcwmfSEwmta2WeqT63siKh1VO4ovWnlRuTOmPw0ynO0jvR
FDaSvWr1n+YgnanofEs/k5gjzcGWB7Uwn9QZoue0Rxuuk72l81irV7TGEl65
JS/dEr8Ij7Z5K60zNGaSedKMQwKfxO5MY8DgI2ZcXe0hsUPZznuC8yRPDZpJ
PN+2Oxi0ZQqT9DcQ4lytfTOZHwx4prFh2Bda+jP1LYXQCqJvBu8w6DDRT8Os
zR5KaHgS24Y8Sesn3X/6OS2vIXbwKRwafJ/uD6Et9BkJvBk8tKWlRC6a4guh
G2Y/sl1v2TeTz2zpdhJvG/vf8uWkNtL63NqLT87e2meT/pLsc1L3krwjzk7v
UEmc03uZgWtTudHAWUM2IPYdArfEubZ4qI3vJ1pHn5H4npD8JmCYBdHDFi8M
ektz2ZAJCb63+mzmcpLvhhy1JQuZ9byFw2TeMGgCzWX6XMk6zTikPSjpI0mu
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
DS2ubcEwjWdakzdqVPI7DF0/wRFbbkzm3uROZMgn5hpsOYHYfZK5gtYKwlNs
GCY8LundtD8a5rIlbyTzibkGQien3nsVb8kaTuaV3JUIfiW1l+5P69qswy1d
svnaLV23djpai64+P6lFrQw/de/GDGy7pvfN7f0x+NotXSf9lMi3hCYT30YM
vknXRvc5uY+YeZf0U4NGGTR8S0+IXiX3qWT+Sb63pQPJHWGqzydzoWdKYLv1
TFt/DL6/pSdJnyL2KUP+IWpu+SaBZ+JbE6HVUx5h89AWTrZnvykMG3qS9Cma
+61MldTtVs8JTE7tVkm8TdV2wjW6tta9tuxn1isDr80eRPRhytNtO90Ul0+y
k+28U9ggepjkoLnPxNnpfEt4WSu3EJmB/s2U19M9NPCx9XzDTkfow1O7pr+N
TGl1C/PmbED7EXEWmtctDCd3xlYPzTud2VsN18n8k8Tq9jzQ4nsLG+bcQvSt
dS+NPZuPG7hmuCa+aWzviUHHDHwn/ILmUWuX2XJN+5RtLvRvDN8lknpyS3uc
IQ+0vg/QunqSH4j+E15pxjBdG/39p/X9oaUb5ndt3+NaXpmsjZ6vOZ9PeV/r
+4Ytk9C+PzWXKY2yZdokxmy4TXq0ube0zxL+QufzJFYJ7tO+OZUNaD008Kvl
vyd9buVSW95reUcr82+8JvyC1u0p/ib9scVHuv9m/WnNt7Vf0Nc0Pmle2zKJ
Lf/QfaNraOnwVN6jfTa5oyX1h84hdEZKegrBcdofW1q90Rc21tzC6pSeTOVe
OmsR50ryfUoHCH1r1WzYuej+02dp7fhED801m30tiR+aO+bdh85+ScwT2Z7G
iW13vnovfS7bjraxZrOvJfFDz47QqOTuY8DY1O//AZZXiSs=
       "], {{0, 128}, {128, 
       0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztlz2qZlUQRRsFcRbiFBQEA30IinkbG7SgiQ1CC4qZYxDMHYaZgzB3HmYq
mApfWbXP2VW1AmX1x333p27V2nXf/uKb51+99uzZs2/f/Pt/z198/9GrVy9+
+OyNf/7x5YuX777z8vW/8cd///uH//juraef//zpw9/ef+8pyr988t3T759/
+vTx179+kDnPI+d/5Fr/dfx//e0jv0fPk7luVR3U7/GR5z15z+r3FX0XJ9+R
4p4z7049p7eepXtvnJxN9Vyf9Js6X9y8qvaG4j2erFvUA255p/abeq9Q53jV
OW/1hvpaas8ojq+qW9UOdnLGTzpf3ZOKPafqftz2OnWuqb9H1M+ryJGTvVGV
Zc4Z4bbfnnSOm8ccPOng/5Mzpd431Nc96caTO6T6u+nkbuDs/1vOV3sgcw9q
jynmq8qTJ/2v/g5S73WKGVF89936hlLURPG3VR7Y7P+q2VH759bxDvverW8x
tz3z1l5Xdd2TO8lJb7hdSz0vDt5W1FPx7ZbZ0255/qST3XYzhz1Tvb/d2g+r
9uGpXlL3ttv5HeqmOKbKt7c8r/4mddjDT/pfsYc4/K7Od4fsduOT35gbau68
b7uxOh8VfeW8T6rzTr3P33LIVBfdyoWqvc6hDmrnb/C84tlP9pUixx36tqqf
b3lA/Q3S5X059Mat3cCtDpkehj1d6rYP3+rnW+e89V3Z5d3d6v9t2Rq9/6rj
YR//39qHb+1y0XuuOqfimytzvMP7cmDF+3Wu861ndPCtG5/0v/M+rNjlHFyq
yFnF8zp4yblnumeuet4VO8wGVvvfeR++1dsKlyrmTpFBzo5y8KF6rjvWGYf3
8r/bPuzwXaC4T3X2nXR7d0c5O617nfH/DP+r92HFDnzLmW7PnsmajP+7OKqL
0zpmAf7v5X/1PtzFFZl34eDJzDkVPeb2frs7rUsWONRqKqvnq2o/VJ/zVq8q
3O4wv10y2qE+Dk5zzgK3Wk3ik96I9lX0GOdeVdTE4XnVOT6VnZ3m1m/OterO
6nmsugf1zuywD2f87/a8eH6G0xyyoEutOrJiThW7vfoYh77Ft3u4o9NuZUHH
WnVhtTeqesmtJxU56HDPMP53y4LutXJmhf+rrpU5xs2rmR528BXs0w9urJ67
SbVy4yr/R997VV912bHVOQj34qlOU8zd1Fo5cMYzit21yzkV9+CQUzD+d8uC
DbVye0fqd1eVOyfPeXLG1fcG438Hzyi8BOt2y8w5M8efPOfJGc/8DvdlnJbv
c4f778jqXTrj6qodwMGfit3GwV0w/j/poujfwv+v5grnZM6puAcH5zucE8b/
DqyYC7j2XWS8fbIfHGa56hk31G0zb/Z/lVu21c3N+Yrviy5Oiz5vVU261w3G
Y9E6ULe7zq96F5lzunHVPh89pup+YM/+cfBDF/9sq5u65rf2zIz33Fix/0yq
D7zT/wpvkwU6P6j9f/JZbs1ypm6Kc8I+vMH/6t1J4ZnuXOUH9bt45FodXZfZ
VarOCfvzVP8770UO9XGrv/PxXfxf9V4yfetQBxj/V/VtZi+aWlu1Zxw834UV
Paw+BvbhbY6qqknVPjaVozXB87WzHJ1rxTGwP2/wf1Vvq8/ZndX7Kp7R5WnV
e+Ed9eJtvlLvThtq6FAfh9lxmNmqOmeOJwv68gb/V9Uhui9NrWfVzlnlKIc5
uuX8TB26nBPG/+q91OGY7pzpq6pcnsRVO0zHc8L4X73/3zpmKt/qPYc5cphZ
Rc6qzwl79pKDT046X7Hbb8gCxR6ovu4kVvSquv9hH57k/6q9pcppG7KgyieK
3zdw1bO7nQfG/1Xf/lPP6cCZvqr6HefA8B7/R+8z6g3nczpwJr8yzo9e12G+
YNiZO/qnyslVDlec040VPXayVg6zBsNu3N1LmT0zWgfFOZ05+rxV/aZwPlkA
w/McdXJvdDiPQw2r+i3zXYD/YRj/w/7+j16rKgvwPwzjf/i8/xVurzreYe5g
2IHxP5zxZ5XnFbmA/2EY/8N5/0cdXnWtaN9msgaGtzH+hzM7fJXzFVmgyB0Y
nsT4H37kvXf3f/RvYXgD43+4yoEO/j/5vDDcnfE/nPFwpn86XheGJzH+h6P9
sOF3GN7A+B/O9Eb33/E/vJnx/05+pB8mfS9En9dhNmEY/8Nq52f6xMHt0Zw6
WTcYdmb8P5ujDo/2zK3vBcV9qusGw26M/2ezwqXRPqk658l+xv/wBsb/s/mk
/6PniWZE1fcF/odh/L+BFf6PXivzjRDt28z94394G+P/2VzlzCqvqh1blU34
H97A+H82R9/1ySyocmzG+VX1geGOjP9n8y1Xn/w2uZUpMNyd8f88rnJdZpfO
9Fvm3hSZQhbAUxn/z+Co9zI7/MnsqMqXqufK3BsMuzH+n8FVTs70RpU/FflV
dV38D09i/D+bFV5V/60i79jzYRj/b+PoO93We+pcg2FndphB+G4u3HLdrd57
5FoOswnDU2cQ3ul8t94jC+DN7DCD8B7nO/ceWQBvY7cZhGc7v0vvkQXwBnae
QXie8zv2HlkAT+UuMwjPcH733iML4EnccQY3c3fnT+o9sgDuzt1ncANPcv7U
3iML4I48aQYn8VTnb+g9sgDuwlNnsCNvcP623iMLYGfeMIPOvM35m3uPLIDd
eNsMOvBm59N7ZAHsw5tnEOfTew5MFsDM4DzG+fQeWQA7MzOI8+k9TyYLYGbQ
n3E+vUcWwB2ZGcT59F4vJgtgZhDnd2d6jyyAmUFnxvn0XhcmC2BmEOd3YXqP
LICZQQfG+fTeVCYLYGYQ57vx5t5z6HmyAN42gzjfh7f1nhuTBfCGGcT5nryh
97owWbCTp84gzvfnqb3XncmCPTxpBnF+L57Ue1OZLJjN3WcQ5/fl7r23jcmC
edxxBnH+DO7YezBZMIm7zCDOn8ddeg8mC6ay8wzi/Nns3HswWbCB3WYQ5+9h
t96DyYJt7DCDOH8nO/QeTBZs5lsziPNh/L+TyQIfPjmDOB/G/zBZ4MPqGcT5
MP6HyQJPVswgzofxP0wW+HPVDOJ8GP/DZEEvVvif9wLjf5gs8OfMDOJ8GP/D
ZEFfxuewc+/BMFlwZgbZ82H8D3dnsuD/zV10Nh2eBe7L+B8mC3xmMFNbGMb/
sDOTBfm5e+Q8MIz/YWfenAVRn+N/GP/DU3lbFmR2+2g9YRj/w114ahYonoUs
gPE/PJW7Z0Hmeauc36VWMP6H4e5ZkLlnhdvd6gP7MP6HO7JzFkTvoeoZHZ4d
7sX4H+7Ozlmg2O3JAhj/w7B/Fjxy3ei94XwY/8Nw3yyoyoVoHWAY/8Pb+FYW
ZO6taucnC2D8D8NnsqDKydFj/gIn5rVD
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt3L+qHVUUB+CLivgKYuUrmFbvxc5OiKVYXEGrgBALSWdlYSf4BPY+gi8k
+A4mYJFGuMNevzVrz/mKhC+Xyc7M3mut/edMzsff/vD8+3fu7u5+/OD1b88f
f/r85cvHV1+9/+YP3z2+ePbJi3df8+f/fr3x759++fDRP+89fPPbF/d//PX1
w6/3f37294e/3P/fz1f8dptHfbTNo//u0TZXnivxd1f6JzG+E9o82j9Hr1kZ
o3TcVv08UR+qcn9CbTmrNq7EaufzVsVkOjcT95NwuoZc1bv0VWLeT8zRE/K0
s7acVRur1p9nzQXpOlwVh51rv3TsVa0Zdnd6r9d5n4k1RrrPE7U3Uceq9h2J
OTTd/kpcpceus/30faZjqbP/Jzuxluis+YmYmfxcZ9WZaXvACfvNzjkxsR7Y
ZdynrSEn1O2zcicR/xNivnMvkDijSPdnZ+2qGq/O+t85R1f1SdV97lIzV/pn
wv135k76DGFaHThrj9NZzxM17aw1wIT8nbAu7VzPdI77WfP1lep/1Z6u6ppE
rUvf8y5xPiFmEn01YX7s7PP0Oi09n07OkbP2+9OeNz2HJvaG084urhQniTpw
C33VOc925lpVbEwY98T8OCF+qua4RH9WxXbn3LTSVxPivHOdsNKHu/fVhDzt
PPtK7Is7x71qrzQ5VjvjpGruSMTMhDOKHWPmrDO0s2rChD6vmgs687Qq1ybU
/AltpuOqKiYn31siXyacX50VJ51ruck5Na3+T65vE9bPnTXhSnE7+bnS+bLS
zuQ6n87Z9F5plz5M9PnKWKTrW1VepNeWVTWhMy8mxOG0mlaVL+nzjV3GPVHD
J88101wVM+n4T8xBidxJ7PET+6BdPO3+V84iqtaZnechuzu9X5jwjFUx3Hne
0rn2npA76blv95ic7M4cqZqDxIN8WaknVfGWOLfpfN7O+eisNrl2XNLne2Ig
N3YT7v9KfbIyX3Q+bzoeEvl7y+uZCXk07RxSDOifaX2SPt+e7MSZT6Ju8HqO
dJ7hG1+e7MR50YTnStSKCdfw+vieVf+NL09w+vPcHeM8fT5wpb7axZPP7ow7
T6hvVWeYO655qj5fXrlml77a3Z3vRTBPcOfnXJ3v6qTrQKIfnBvPH+ujeTQt
tplXYjJ9dnFWjiTWb7u0eWtO70mNC+/uxLsu0/IiMTft0uatOb0n3f2ck3mX
+jatH876DHFav01253p+l3NO5sn1bYIT68bdPx+5BVd9RpOYj5gnxPyVzoLS
eTqtHa7tW+9u8Y7uXM9YF/FVfdX9L9+OE+9wWhfxrflK+1++thPvP1TlxYT+
YU7U/5U8Yk7X/Kdcn1jnmAt4dx99F1Sc84SYvGqbzJ35lfg5c1VMrly/S5vM
Z+Va4r1f5s55YcL7/3KBJztRt80FPGEu8P+bmJ9en1fqts8IeEI8X6kd5nSO
JN6FsEZiZp7jqvX80Wuq7oeZmXPzQuLzX3WemXmOd3lHjpmZe+aCs96RY2bm
c2t++h05cwEz87k1f5drmJk5Nxck3gs9eg0zM8+p+U9p5+g15gJm5jk1/ynX
+45cZub53uX7bH1GzMxcW/Orrt+lTWZmXq/JviOXmfl69h25zMy36Wnfbav+
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzM/OK/wUuHgvY
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt3DGKFUsUBuBBQVyAGzBwA5oJvsHIfMyFETQSBF8gL3uJK3ABJgYGBgZG
7sW9qGBgMuClzl91avoLlM+h7emurv7PuX3r3rvPX1+8vHF2dvbv7Z9/XVy+
ffzmzeV/T2/9+seLy1cP7r+6+ZP///7zy98efn30/dO988/vL84/frlz/uXD
k/Nnn9798+fPr9rmqu2v2ubU/ztybCPHM/K7TvWpx3zqPqvOPXHtEvOt6nqN
zI308Y/M8/T1qjqvVXMmce4j8yeRLVW5NDNjE9m1KvMT90jiuqTnT/p+r8qK
xHVJ5NXM3mlm/U0cT+J3Jepjui6syuqZx9wt82fWgkQNTfcPVffXzHuhcw50
uDer5snMuZfubbo5PR/SPcmOmd+5FqRzu6rfTuRDohZ06CVW9fMd6lHVOKwa
tw7Zkt6+6v7aMfO71YL0WM28vjP7ig7zbVU/36EerXpN0aHuz6yPVb3ZzD52
l8xfVQtmjlXinqrq63YZw1X1Ir19ukbMnKud50DVuFXdL0e+B1fVglVjtar/
371udptjifOt6j9nvlYd+XkHp1+L6fP73Kcdxird/6ePocMY7j7fOmR4Oht3
fxaUrssy/5iemf/pPs18m5PJq/qTVa9rup3jyPHLfE7nf1Xm7/j6/Tp51Tgn
njfOfIaZHtuq3Jb5nH720u0ZAvd0VT8wsn16jlVlflUtkPm8qsc2f3hkPlTl
/C7zc2b+7zImXDuvuj0XZU6897TjPE/nv8w/jnfvhfh6O5FLu2ddIv93HAfu
UxeYZ87Jquw6cv/v3mfmzk488xnZfwen12l0OEdmPqYTvX16mw7j41kuM18n
J9ZwJtYIdRiTVev3mJlXZf7f7OfUbbrVgqpz6XB9mZlH8rbqc147vkecWOfD
zNwtx67rPkeOoaoOdpgDzHwcd1irv2qf6fwf+Tkzc+e60GH9/6r8THzeucN1
Z2auyrFENnbO/A77ZGZO5//u+xnJ55Hc9h4xM/NeTqxr6vx6h5n5aK7q50/d
pup4mJm5Nv+r1nZ65sPM3N+7rHdlZuY5tWDVeldmZl6b+en1rmoBM3NPp7/v
7tRtmJm5NtsTazh9LpiZub9H1uSPbKMWMDP3yfy/yefEc361gJl5TuZ3+25q
7xEzM8/J/PR3kO74fdfMzLs70YdX5by1QMzMPevC0b7vmpn5aO72PdXyn5l5
r/xnZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmbmff0DbTyIOA==

       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztmDGqZlUQhB8KIrqEidyCGr9B3MG4gidoNCiMgQoGZu7BjUxqau4WRIzd
gDNgMMnA+z1dVV/dcwLlKv/re0539dfV96Mvv3329Tt3d3ffvf/qX88evv/s
xYuHH7947/V/fPXw/JOPn7/76vHn//55/fzBr3/df/PT509/+PvJ03/++PP+
099f3v/2y4f3bz6/+Zu3Pd/6e8XzY87wtt8o7j6Vk1vPdutvHhNfcYapuqj/
/1TMqRwqYqo1qeidKZ07tac4m6J2U++99Y4rOVFrL8Ve55x1ao88CwjsUsdM
zSmah1TPgpT3c/pYZ+1SXit1L/WcJWiPMAsI7CIwRDGnUtpWaHgqplpjap/m
rJ3TFylqOtWDKc4oOOD0maleUGsg5XPUuzDBXzk9v1OfBD2nvJAzvqIHFVyl
cUAxXxT8Se3atNo5+0Ltr6ZqTfB+qXMqfEtKD4T9RdG/Ts+gntHqO6rP4JxT
irq09AXZqxN07tQzoV7k/UKxW6lrp2aC845OH57Ss7Muqb4ge/WU93P2gvo8
KT0QdNLSs1NMU99RPZdTPlntV2l9QZizNO+niE/uTcJ7nbsSrWdTTHPuI+Tv
DATe0vip1qQz5+rdbYoJqd6kMSHV+86eTTGNEFO9t5L5RuanWj/OnDu9ImGO
pxhF04k6TiPTCDFb9JzygSl+qvXjzLn69yn9p74VODnj7P3UTHSehxyTpmeF
bqf2+hQDFT6WwAraDJryDI3sUu9KhJnoZBo5Jk3Pzj2d5nOctVBrqYXzU3VX
ey01u2jzizArd4hJ0DONk6k5S9jl1Xl27qSE/Svll8j9TnhWa48c0+nrnLpN
+fDUPJqqo7qPnLUg+Ar1twsF21Pzi9B3iv2IFtPpi1LeVeEDU35DPTfVfUTQ
g9NXpHy+eudy9oiz71bu2BKT4IfV3jXFUsIcV8xNNfdou4y6L1LsSvU74Zm8
nzbyh6Bbp1ZpfiO1y6vrleKPui9STFDvXORnJ8doMQl+WKFbp1bJc1zNcAL3
VjhG6AvF2RQ9Qpi/tDneGNNZR6dunVpN9SztG0WKe+o70vaLKZ0r/lahW6fP
X7lXS0zyHqH2mVN3TPVsyjOQ9yCnltR8S/m3dg9P9jaEmE7+pPxVKm/qmITZ
NKUrtW9X8zzVj87dWT3jCD5f7W0IMcl7hLMfG/VDmE0rDCHvQYpdlTCjaTlP
PSvu2BIzxYQpzpPzlvLGtNnXvgcp2JvqR+d9yc+KO7bEbGGCYi6o85aqNW32
KXSV8iTq2UHYH505Tz3T5qkzZgsTCPFbat3oGVJ8du4pU+9NzX1Fzmk+PzVP
23047fxqfdJqTZu5Cp6oZyXh7op+pOUt9Uybp86YLUwgxG+ptWJHSPlkdW5b
vnsQepzmtWj+tiUmwYerzz8Vv6XWKXY5eeLMreJvU7uksxZk/684W0tMZ+1S
599NP4o5ReOJM7eE7x5TvdnyDSrl8wlzeQcfrj6/WmO0Wqe45+SJM7fqWqhn
Ymp/dPqu1AxtjOmsV+r8jfdyfmdo4YCCq4Q5+Jh7EVhK9l0Ef9sSk+DD1edX
75i0WisYRdDVFFed+XH6qxQnCb6Lln9yTGe9UuffTT9TflgxFxRxaPxRz8GU
5hW7p3Nmqf1tS0yCD1efX60rWq1Xelbt9xS/ofHHyU8nS2leKzW/2mOm/I/z
/I33Unsqxe+vtGel9EC7i0LPhGeFH2iJSfDh6vOnfF2q1k7OO/NM2+8ItZva
3VK7Z+P8ao/p9G+p8++mH/X3B9rzlfYOwkxR5Nk5m1I+oSUmwYerz0/2PylP
NcXJVM9ede9QzJQp3qpnHGEuK+5Ci9niEwjxW2qt+FtCn7afR107dU4U+0vK
Vyh8QktMgg9Xn1/t92i1JrCR4PNp51HXTu3/FWyn+bQdYjrz31jHxloT2EjI
P+086to5z5aaR1NaVfRCS0yCDyfXsbHWBDbe6iHJum2pneJsTs+T2kMJMzHV
s1fdIxrv1e6pnBpL+fmW2inOpvA8U3FSPqElJsGHq8+f2hNTtSZwcmreEXRL
m3fqmT41L5zziKD/lpjOnJM5Q3uvmpmp+b4y7wisaKyd8+7OWUPzCS0xCT6c
wBnae9XMTM33KT9J2O/aa5e6O+FZof+WmE5vQOYM7b1qZqbmO1n/BD04a5e6
O+FZof+WmAQfTuAM7V5OZjp7f0Vjqfo69UCr3W4+f4eYTh+VOv9u+knNdPX3
jRa27FC7KYbQfP7K2VpiEny402PsoJ/UTJ96l4KZLTxpqV37vFbksyWmsy6p
8zfey8nMqZnu7H3yt4Wda9cyrxX5bIlJ8OHq8yv6glxr8nyf0tgKb8k8aa+d
ur7kO7bEnPIn5PPvph/yfF+Zdyv5aeFJe+0UPHfO5ZX3tsQk+PAWrbbUmjzf
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
hts1dpjJ7KlUXxD4pthTyLr9F5FhARI=
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2z+KFUEQB+BFQbyGV1AQE32IhkYamriCRgvCGoiZ4G2MvYmBiblnMBB0
wcBkZZ9Tv+6amS9QPpd5z/lTVV3d03vr5Zunr6+dnJy8vfn7r6en7x6en5++
f3bj4h+vTs/u3D67/psf/vy58LuPLw53v90//Hz05PDj8/cHn748Ptz7+vzw
988v81WOP/Y7r/LZqp9fdsyS44/9niovufbEPTz2XlU9i6pzS8TPkv+rKq6W
nGf6s1U1pOo+J+rYyFqRyMeq+jnyOSZqzsjzrBqPEueTrmnp5z6rnqTzIl3z
E7FRlXeJnmfkdyb6og49w6w+Z2QuJHqDRA9Q1auke5iqPn9kPzOrPif6wA5j
wazeLN0zz8qFkT1zetzpUPcS9SfdW6bzMd2fp+MzXetG9p+d63+H8SJRZxJj
SrpnS8fhyDrcoe6N7NM61IRE3zKr7xpZ8xP3ZEs1f1ZNGDkGJeYds8bckbVo
1nOcdR86xHBVn1B1XR3mxYnnPrLf25LXUj9H9kgj61u6hnS49pG9Qfr+j4zz
JXmRXrfp3IOtMRe6edZ9G9nPzKr5ibFgD3G+pV6xqlZ369U73FvenqtyZC3z
l1ljSjdvqVdMjFkd1ovS4w5zIv4TMdltTUPe9Y/bqjqcyIWq9wLikKtqaWIe
2m0doOqc5V2fuD02Bo7NhXSdT8R5h+fFPT1yLaXDdaXvCfeJ5/T706rcGfm+
oMMz4j5Ox16Ha0zcky1d79qdmAuMHFOq5qTWKrlzrnU4/6rr3erYtyWP7I3T
8+XEfKHDM+JteKtxtca1rz17ZG+cmEeYezL3ceI9OI+v/4mxo2otqOqzYo85
V0Oqfs49nd7nU+X0OMi8Z1ftFZSD63Ji/6d9aMz9PeudIPdxel9Qeg+qGGNe
nu/ptVl52sez+vYldT59/sxbddX+kCXHH5v7PCYGEscn3hFUjR3Me/PIXE6c
D/ePjVn9g/6feXnuJ97/ysf1euR7gcSav9hj/r+8SL+z63AfeHkNrxpHquq/
GGOuzc1EnnIfd9ifY82feW7Nr9q/YS1oG07sz0mMKeKKOZfLs47hPl5SexP7
QsUVc20uzzqGezqx5i9OmPvX/CU1QY7v04l1fnHCnKv5Vzk+sc4vx7ft9Luk
DtfI3M0j9+91+07u48ReTXHC/O+8qDp+Ld/JfZx4L3ysO9wH5g6e9TuVie/k
nk68503sSWbes0fmWmLuz33crQcwF2BenrNr/B7uGVfpHsC6EDNzz/qf+Kz5
JjPztu33gpmZ92nrOczM+7G9wczMrM4zMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMz81b9CyqP2P0=
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztl7GKnVUUhQcF9RUsU9pqP+IrREhnMUIsJCDEQgQLwdJCyENY+gLWPpZg
AhZpZriXe/Y539r7KxJuhsm/1l57rf2v++zbH55/98Hd3d2Pn7z96/nDT1+9
fv3w89cfvfvHy4dXX3z+6sO3H3/9/8+7z7+//PP+j1/e3P/76W/373/+5p/v
7/9+8+L+r88+/vL9z4/9/i2fH8N6DHcVt0twr+W2aq5rf75KhwqtKmas2MVO
PVflrlq3U7lb5dVVOarOO2EXFb6q1rbi3lZruFPPVT4kv2dX7aI616fej6vu
yc7crfLqqRxV3LHq9351L6ruxuR7u/MdtPN9SpuR3E9OvR9P3ZPqd+jO7yaE
O1Z9n6t9W92Nq3sgOe8VP6/IUfWMif2kgvPO274qd6c6TEWOqjv5zgyu8i3h
+YRbtPNGVcxLnjGxn+zcUcU9OdXZVt3MlDtZcWeqbyyh86/6TM77znkJnf/U
97JT3KqfWd15aB2mOkeEbknodYTnJ94i8rzVOSJkh8Ct+pk7udE6TMqtWKUz
gdvkzt913q7ZIXCrfuZObrQOQ8hOdbcke35a59+Z95S8kLND5nbLM2k3h+Cl
xFtR0S3t/D3yTs5LSnbI3G55ZiduhA6T4vlT3eDU7Cl7qc4FLS8p2SFzq/iO
k8jNzl93kyu4kW8UbS+0eadlJ9E/q3oFmRuhwxB2XY1l52fu5dS8E7JD5lZ9
P1O42fmzPE++UeS9VOiwMy+ddCNwq76fZG6EDpOy61UesPNz9nJq3gnZIXOr
wFql1U5udv49WKu4kW9U4l7s/PpnFdYl/5fGbRVnwow0LDs/cy+n5p2QHTI3
AhaN2869E/RP3DX5RiXuxc6vf05hpXCr2DthxpRd29k4Otj59c8qrBRu7vrs
rsk3Kn0vdn79Q8Aic3PXt2PZ+Zl7od3DTroRuKVgdfVDiv6nsAh8OnnPzs/R
jcCNjEXmtsoPXWdM3y+ZG0EHO7/+ofmErEOi/qewCHw6ec/Oz9GNwI2MReZm
59+DpfeYOtj59Q/NJ2QdEvU/hUXg08l7dn6ObgRuZCwyNzu/nZ+mlZ2frxuB
WwpWVz+k6E/A0nvMDFbfw666EbiRscjc7PxnsfSenT9RNwK3FKyufkjRn4yl
987qUH0Pu+pG4EbGInOz89v5U7Sy83N0I3BLwerqhxT9aVirfn+a9+z8HN0I
3MhYZG52fjt/ilZ2fo5uBG4pWF39kKI/DcvOz8lg9T3sqhuBGxmLzM3Oz+n8
t/z+NO8R5p1wJ8ncUrC6+iFFfxrWJc/Xe3syWH0Pu+pG4EbGInOz8zM7/yXP
nOw9wrwT7iSZWwpWVz+k6E/DWvX8ad6z83N0I3AjY5G52fn5nd9bZOen6Ubg
loLV1Q8p+tOw7PycDPqe1T8En6TokKI/GWvV86d5jzDvhDtJ5paC1dUPKfrT
sOz8nAxW38OuuhG4kbHI3Oz8dv4Urez8HN0I3FKwuvohRX8aVsXzJ3jPzs/R
jcCNjEXmZufv0fl9j++fd8KdJHNLwerqhxT9aVg7n9/Je3Z+jm4EbmQsMjc7
f7/O31UrOz9HNwK3FKyufkjRn4Z1apZEraozWH0Pu+pG4EbGInOz8/fu/Cnv
o1MZtPPPvF1kn5B1SNSfhkXYV4pW1RmsvodddSNwI2ORudn553T+S3DJWtn5
OboRuKVgdfVDiv40LEJ+U7SqzmD1PeyqG4EbGYvMzc4/s/Nf8hyaVnZ+jm4E
bilYXf2Qoj8Ni5ZfslY73307P6frRuBGxiJzs/Pb+a/9LkCYhZC1CXeSzC0F
q6sfUvSnYZHzS9OqOoPqNud2kXOXokOK/mSslPwStLLzc3QjcEvB6uqHFP1p
WIn5Jcxi5+foRuBGxiJzs/Pb+e38dn6Cnl2xuvohRX8aVmJ+CbPY+Tm6EbiR
scjc7Px2/mu5EWYhZG3CnSRzS8Hq6ocU/WlY6flN3Iud39uVnjuCDin6k7HS
85uyF4KeBA94u3rkjuCHFP1pWBPyS9uLnd/bNSF3O/3QdcZqrE75Je+FoCfB
A512moLV1Q8p+tOwJuSXthc7v7drQu52+qHrjNVYE/JL2AtBT4IHvF1zcmfn
Z2JNyC9tL3Z+b9eE3O30Q9cZq7Em5JewF4KeBA94u+bkzs7PxJqWX8Je7Pze
rmm5q/ZD1xmrsabll5ZBO//M20X2CVmHRP1pWJPzS8tgtZ4ED3i7zF2FH7rO
WI1lfu38ZD+TuaVgdfVDiv40LPPLudXVnAk6e7t6e/uUH7rOWI1lfu38ZD+T
uaVgdfVDiv40LPP7NNbODFbrSdZ52u0yd2v90HXGaizza+cn+5nMLQWrqx9S
9Kdhmd+nsXZmsFpPss7Tbpe5W+uHrjNWY5nfp7Hs/N6udKyufkjRn4Zlfi/H
qs5gtZ4pOk+4XeZurR+6zliNZX5vf1eeylpXnSfcLrJPyDok6k/DMr9rsez8
3i4aFpmbnd/OT+CWeHvVOStr5s7OT8Ayv2ux7PzeLhoWmZud385P4LYKi6xn
os5kbilYXf2Qoj8Ny/yuxbLze7toWGRudn47P4HbKiyynok6k7mlYHX1Q4r+
NCzzW4dl5/d2EbDI3Oz8dn4Ctwosmp6JOpO5pWB19UOK/jQs87tfZzu/t8vc
rfVD1xmrsczvWZ3t/DNvl7mz8xO6qPndj2Xnn3m7zN1aP3Sd8VQXNb97sOz8
M2+XubPzn8Iyv0zf7vyconOn22Xu1vqh64zVWOaXo0O1noTZvV0cvxG4uev9
WOaXr4M697tdZL+l6JCiPxnL/HJ0qNaTMLu3i+M3Ajd3vR/L/HJ0OPU9IkXn
TreL4DcCNzu/nZ/AjaBDtZ6E2b1dHL8RuLnr/Vjml6ODnX/O7SL4jcDNzm/n
J3Aj6HAJ1jSdydxSsLr6IUV/Gpb55ehwCYfJOne6XQS/EbjZ+e38BG4EHa7F
naAzmVsKVlc/pOhPwzK/HB2q39eE2b1dHL8RuNn57fwEbgQdbuHQVWcytxSs
rn5I0Z+GZX45OpidObeL4DcCNzu/nZ/AjaDDqsx20pnMLQWrqx9S9KdhmV+O
DvafObeL4DcCNz1v5ydwI+hQkV/a7N4ujt8I3Nz1fizzy9Hh1HskRedOt4vg
NwI3O7+dn8CNoEN1lgmze7s4fiNwc9f7scwvR4fqXBNm93Zx/EbgZue38xO4
EXTYmesUncncUrA65S5RfxqW+eXocCrXKTp3ul0EvxG42fnt/ARuBB2qc30J
f5rOZG4pWJ1yl6g/Dcv8cnTYmetrvwsQdO50uwh+I3Cz89v5CdwIOlTnOvE+
kLmlYHXKXaL+NCzzy9HBzj/ndhH8RuBm57fzE7gRdKjO9bWzEHTu6gGC3wjc
3PV+LPPL0cHOP+d2EfxG4Gbnt/MTuBF0qM71tbMQdO7qAYLfCNzc9X4s88vR
gdb57Qy9/UbgZue38xO4EXSozvUts3i7crE65S5RfxqW+eXoQO78l/CkzUj2
AMFvBG52fjs/gRtBh+pcV+tGmDHFAwS/Ebi56/1Y5pejQ0rnT5mR7AGC3wjc
7Px2fgI3gg7Vua7WjTBjigcIfiNwc9f7scwvR4fEzr/Tb51uF8FvBG52fjs/
gRtBh+pcV+v2H6+qkdo=
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.775222899011693*^9, 3.7752229280013027`*^9}},
 CellLabel->"Out[71]=",ExpressionUUID->"8c4544fa-c1a7-4dd6-8149-88b8ee7c1ef4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1kEqhAEcxuGJkmu4AmsjGxs7TjCK1ZRiITsXcA+ycwZrLiFb5QRMWdgo
0+d7veV5in7ExPTV+984Oj04WZlMJufrH58OZhe7Z2ezy8O1xRfHs/nW5nz1
I68+Pxb9/DDbuXt7nb7s7+187afH++2b2/Xp9fR5+yc/85P+7nWWff2G3132
/x3y/iz7+kO+P3aP8Xcu+54PeU5+61kau4f8PWP8fPL5+a1nfozXHOPZHvJ+
TgD4l5K3n9Za657+6/0B4G80bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8D
kNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVpr
rd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0
bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3
PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuk
tdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9A
RsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21
dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGw
QVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/
AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDW
Wmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZ
DRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba
/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMG
aa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9AxjsuN+sK
       "], {{0, 
       128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1j8u5AEcxuEJibiGxgEoVEw4wCQ4wUioiMQWG41oXMId3GDbLfcoewS7
SLSS3+Q33nnD8yTkozB/BO936+z65GJtMpn82Hz9dDL/eXhzM7893Xj74nx+
ubtzuf6a9+8fb/3rbjZ9eJxN947+H3zU//4cT38/b+9fPf0d1Mt6nCGPP+R5
F30Ni37vkOcd8xo+47WNeS9DXueY9/UZ72XMcy3rZzXmuZb1u5H8fR7zOKv6
H9Lwt5n82U4A+JYW3RGttdZfo1e9PwCsRsMGaa21dv8DkNGwQVprrd3/AGQ0
bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3
PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuk
tdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9A
RsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21
dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGw
QVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/
AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDW
Wmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZ
DRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba
/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMG
aa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8D
kNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVpr
rd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGS8
AOoEnoQ=
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1rEqhQEcxuETJddgcwMGVp2TTVKKsh/FpBSDbC7IZnYdBiurwa5QBos6
cr7XW56n6Ke+OA71/lePzvZPFkaj0cXy+6f96eXW+fn06mDp44vj6enG+uni
e15/fnz068ve5H5ne/Jwtzt5urkdHz5vjh/XVsbf9SzPf33mu+dneWaW52f5
/s2v/6fv87x+93n93Yd4PQ3/M/Pqn763Q/yNhv65Q/w//OY1z+v1D/H8EL/X
b96HEQD/0hA3j9Za6/7+6/0B4G80bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21
dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGw
QVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/
AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDW
Wmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZ
DRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba
/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMG
aa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8D
kNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVpr
rd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0
bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3
PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuk
tdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9A
RsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9AxhvvRO55

       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1kEq9AEcxvGJkrUb2FmzFJOtjWJhPUSRUohs5EAsncBNXMEFUA4w/8w8
Hvl8yttXzTuYoee3enS5f7owGo2ulz//2Z/c7VxdTe4Plr4+OZlcbKxfLH7m
4/fHVx/fbo73Vt63d1/XxtP04cv5+O3meevs6WHw46f5v0MfM/T5h37dn3yt
efzsP/nepnn80OeZ1c877+9/Vs859Pdq6OuWfN/n/bc/q9d5Hu9R8n1PvhdD
X88RAP/SrHZNa6313+rf3h8AfkfDBmmttXb/A5DRsEFaa63d/wBkNGyQ1lpr
9z8AGQ0bpLXW2v0PQEbDBmmttXb/A5DRsEFaa63d/wBkNGyQ1lpr9z8AGQ0b
pLXW2v0PQEbDBmmttXb/A5DRsEFaa63d/wBkNGyQ1lpr9z8AGQ0bpLXW2v0P
QEbDBmmttXb/A5DRsEFaa63d/wBkNGyQ1lpr9z8AGQ0bpLXW2v0PQEbDBmmt
tXb/A5DRsEFaa63d/wBkNGyQ1lpr9z8AGQ0bpLXW2v0PQEbDBmmttXb/A5DR
sEFaa63d/wBkNGyQ1lpr9z8AGQ0bpLXW2v0PQEbDBmmttXb/A5DRsEFaa63d
/wBkNGyQ1lpr9z8AGQ0bpLXW2v0PQEbDBmmttXb/A5DRsEFaa63d/wBkNGyQ
1lpr9z8AGQ0bpLXW2v0PQEbDBmmttXb/A5DRsEFaa63d/wBkNGyQ1lpr9z8A
GQ0bpLXW2v0PQEbDBmmttXb/A5DRsEFaa63d/wBkNGyQ1lpr9z8AGQ0bpLXW
2v0PQEbDBmmttXb/A5DRsEFaa63d/wBkNGyQ1lpr9z8AGQ0bpLXW2v0PQEbD
BmmttXb/A5DRsEFaa63d/wBkNGyQ1lpr9z8AGQ0bpLXW2v0PQEbDBmmttXb/
A5DRsEFaa63d/wBkNGyQ1lpr9z8AGQ0bpLXW2v0PQEbDBmmttXb/A5DRsEFa
a63d/wBkNGyQ1lpr9z8AGQ0bpLXW2v0PQEbDBmmttXb/A5DRsEFaa63d/wBk
NGyQ1lpr9z8AGQ0bpLXW2v0PQEbDBmmttXb/A5DRsEFaa63d/wBkfAAY3Iyq

       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1rFqUwEcxeGgID5DNzs4S+1qQp9AqKsgEXQKFKIgduoj+DQ6O/kaLr6C
swl0yBLIJfeeHOr3Qcuv0DahTXv+z97fXH98NJvNPj3dvLtefrlar5df3zzZ
fvBhuXp5sXq8ybv7t23/+vxt/vv188WPs8v5n7+3i7cvfr569/18sdu7n7Ov
933+Id9n6NcO/Z6H9NDHPeY5jPVYUzyHsR536tfVFD3Wz3Os1/Yxv68pntsU
f7NT/502/M+Z4vU81s9nBsB/aej+aq21fhh96v0B4DQaNkhrrbX7H4CMhg3S
Wmvt/gcgo2GDtNZau/8ByGjYIK211u5/ADIaNkhrrbX7H4CMhg3SWmvt/gcg
o2GDtNZau/8ByGjYIK211u5/ADIaNkhrrbX7H4CMhg3SWmvt/gcgo2GDtNZa
u/8ByGjYIK211u5/ADIaNkhrrbX7H4CMhg3SWmvt/gcgo2GDtNZau/8ByGjY
IK211u5/ADIaNkhrrbX7H4CMhg3SWmvt/gcgo2GDtNZau/8ByGjYIK211u5/
ADIaNkhrrbX7H4CMhg3SWmvt/gcgo2GDtNZau/8ByGjYIK211u5/ADIaNkhr
rbX7H4CMhg3SWmvt/gcgo2GDtNZau/8ByGjYIK211u5/ADIaNkhrrbX7H4CM
hg3SWmvt/gcgo2GDtNZau/8ByGjYIK211u5/ADIaNkhrrbX7H4CMhg3SWmvt
/gcgo2GDtNZau/8ByGjYIK211u5/ADIaNkhrrbX7H4CMhg3SWmvt/gcgo2GD
tNZau/8ByGjYIK211u5/ADIaNkhrrbX7H4CMhg3SWmvt/gcgo2GDtNZau/8B
yGjYIK211u5/ADIaNkhrrbX7H4CMhg3SWmvt/gcgo2GDtNZau/8ByGjYIK21
1u5/ADIaNkhrrbX7H4CMhg3SWmvt/gcgo2GDtNZau/8ByGjYIK211u5/ADIa
NkhrrbX7H4CMhg3SWmvt/gcgo2GDtNZau/8ByGjYIK211u5/ADIaNkhrrbX7
H4CMhg3SWmvt/gcgo2GDtNZau/8ByGjYIK211u5/ADIaNkhrrbX7H4CMhg3S
Wmvt/gcg4x/mVWRX
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 128}, {128, 0}}, {0.,
        1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1jFKXGEYheFBiaRXAmkEmyxAyxQXtzAhCxhBK0HQQuxcQ3aSZWQBLsE6
TYqUUUihxYCD9z8e8Hkg4Q2ME7ljcr6Dk4vl2dZisbj6+PDbcnV9fHm5uvm2
8/iH09X50eH59kPe/v/12F+/7E2f7nenv7+2pt8/96c/3z9PP+4+POunr1n3
+nWv2fRr53rPl7z/pr3p9z/i+3nN5zXX85zrGY74mRnxHOb63Ec8qxHvP+Jz
fM3fO+Lf11z/L41+5nP9DKz72gUA79KIu0VrrXV/v/X+APA2GjZIa621+x+A
jIYN0lpr7f4HIKNhg7TWWrv/Acho2CCttdbufwAyGjZIa621+x+AjIYN0lpr
7f4HIKNhg7TWWrv/Acho2CCttdbufwAyGjZIa621+x+AjIYN0lpr7f4HIKNh
g7TWWrv/Acho2CCttdbufwAyGjZIa621+x+AjIYN0lpr7f4HIKNhg7TWWrv/
Acho2CCttdbufwAyGjZIa621+x+AjIYN0lpr7f4HIKNhg7TWWrv/Acho2CCt
tdbufwAyGjZIa621+x+AjIYN0lpr7f4HIKNhg7TWWrv/Acho2CCttdbufwAy
GjZIa621+x+AjIYN0lpr7f4HIKNhg7TWWrv/Acho2CCttdbufwAyGjZIa621
+x+AjIYN0lpr7f4HIKNhg7TWWrv/Acho2CCttdbufwAyGjZIa621+x+AjIYN
0lpr7f4HIKNhg7TWWrv/Acho2CCttdbufwAyGjZIa621+x+AjIYN0lpr7f4H
IKNhg7TWWrv/Acho2CCttdbufwAyGjZIa621+x+AjIYN0lpr7f4HIKNhg7TW
Wrv/Acho2CCttdbufwAyGjZIa621+x+AjIYN0lpr7f4HIKNhg7TWWrv/Acho
2CCttdbufwAyGjZIa621+x+AjIYN0lpr7f4HIKNhg7TWWrv/Acho2CCttdbu
fwAyGjZIa621+x+AjIYN0lpr7f4HIKNhg7TWWrv/Acho2CCttdbufwAyGjZI
a621+x+AjIYN0lpr7f4HIKNhg7TWWrv/Acho2CCttdbufwAyGjZIa621+x+A
jIYN0lpr7f4HIOMflbTlLw==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1kEqhAEcxuGJkizsLV2BpZhE2bNXo8hCKRaycwNHcAEHcghrtigLS9N8
884rz1P0U+Iz5P1vnl0fXyyNRqPb1c93x5O7/Zubyf3JytcH55Or7a2r5c98
+H776vXn973Lg5edjdPD8c8+WpuMH9/Ox0+br7u/+ZxZPn+WrzPtMw/1bL95
5kU9z1Cv+bTPP9TvdNrnmfZ7zfK7SL4+s/y8Q71Wi3qGefwfSD7zPP7XzePv
bQTAvzTUjaS11vpv9aL3B4DFaNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+
ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO0
1lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHI
aNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW
7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2
SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsf
gIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJa
a+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCj
YYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7
/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNgg
rbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8A
Mho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGut
tfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyG
DdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIwPG0wKjA==

       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1LGKpwcZRvFFQezSmSqFt2C6FLvkFmKKFDarmCogxEJSJX2uJYWF4J1Y
5yas3YUUaRZ22f+Q33l8ixnOwPCfZ875vvf3f/7bZ1/+6tmzZ3//7atvn738
x6dff/3ymz/+5vUPf3351cd/+OrXr/C7n75e87c/fPj8P1/87vm///Sv52/i
z//yyYv//vjRi+//+cGLt/mdN/G7fuajPv9R+99189v8v4/6u+/6OU+x5yl+
51GeH/U8v89nPkW7R3V/inf5fZ6xR3l+ny5P/Vw9hZNH3cOnfm5/qb/11O+O
/L5X+H3cCu/4//PzoL1rMv9SzoX99XdE6L7KwrtZvAOrLDRa6i7sr7i6+99y
W2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6K
q7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa
6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TB
ucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/
LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7s
r7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxC
o6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdF
FpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6
+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xu
wv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzL
LDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99y
W2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6K
q7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa
6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TB
ucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/
LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7s
r7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxC
o6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdF
FpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6
+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xu
wv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzL
LDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99y
W2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6K
q7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa
6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TB
ucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/
LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7s
r7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxC
o6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdF
FpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6
+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xu
wv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzL
LDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99y
W2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6K
q7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa
6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TB
ucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/
LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7s
r7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxC
o6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdF
FpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6
+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xu
wv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzL
LDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99y
W2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6K
q7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6XuP9/wPzVwd5c=
       "], {{0, 128}, {
       128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2DGKJAUAheFFQUxM1At4BU1lxCusJ1jBjRaENRAzD+A1PMWmBmZeQcwF
QTMTd8HAcIbp6v7q+Qcz9ED3P6+7q7+qmY++/Prp87eePHnyzbuvvz199u3n
L18+++6Ld9788NWzF598/OLt1ze///frze1f/vrt7r0P/rh7/+8/737/+Ye7
D3/69dNXPz7/7L+3H3qf+9z/6M599l9q5332P/R5XfO5P/R33eexj3nujzn2
HvMaHnHsHfFcLnWfSz32mg5cc/+l3tMjjofHHP9HuPRQ947oXPN4e0znMa/5
rXYe4f81z4nXPPaOduZW53TNgSP2X6p59J5LXYdo7h3xGbymV9q2SzVvZemt
rg9vdS645n75+uea+6+54ehz01k8yf9zNQVLz+7/EdsEE87i/xHnslv9zXt2
T87yGTz7a5v/+X+W4/9W9sobuv7Pf6EpWJr/+a99Rm71/8Oze3KWz+DZX9v8
z/+zHP+CvcIG+b0W3vf/w36tKVia/6YJ+Z//Qmdpv9YULM1/04T8z3+hs7Rf
awqW5r9pQv7nv9BZ2q81BUvz3zQh//Nf6Czt15qCpflvmpD/+S90lvZrTcHS
/DdNyP/8FzpL+7WmYGn+mybkf/4LnaX9WlOwNP9NE/I//4XO0n6tKVia/6YJ
+Z//Qmdpv9YULM1/04T8z3+hs7RfawqW5r9pQv7nv9BZ2q81BUvz3zQh//Nf
6Czt15qCpflvmpD/+S90lvZrTcHS/DdNyP/8FzpL+7WmYGn+mybkf/4LnaX9
WlOwNP9NE/I//4XO0n6tKVia/6YJ+Z//Qmdpv9YULM1/04T8z3+hs7RfawqW
5r9pQv7nv9BZ2q81BUvz3zQh//Nf6Czt15qCpflvmpD/+S90lvZrTcHS/DdN
yP/8FzpL+7WmYGn+mybkf/4LnaX9WlOwNP9NE/I//4XO0n6tKVia/6YJ+Z//
Qmdpv9YULM1/04T8z3+hs7RfawqW5r9pQv7nv9BZ2q81BUvz3zQh//Nf6Czt
15qCpflvmpD/+S90lvZrTcHS/DdNyP/8FzpL+7WmYGn+mybkf/4LnaX9WlOw
NP9NE/I//4XO0n6tKVia/6YJ+Z//Qmdpv9YULM1/04T8z3+hs7RfawqW5r9p
Qv7nv9BZ2q81BUvz3zQh//Nf6Czt15qCpflvmpD/+S90lvZrTcHS/DdNyP/8
FzpL+7WmYGn+mybkf/4LnaX9WlOwNP9NE/I//4XO0n6tKVia/6YJ+Z//Qmdp
v9YULM1/04T8z3+hs7RfawqW5r9pQv7nv9BZ2q81BUvz3zQh//Nf6Czt15qC
pflvmpD/+S90lvZrTcHS/DdNyP/8FzpL+7WmYGn+mybkf/4LnaX9WlOwNP9N
E/I//4XO0n6tKVia/6YJ+Z//Qmdpv9YULM1/04T8z3+hs7RfawqW5r9pQv7n
v9BZ2q81BUvz3zQh//Nf6Czt15qCpflvmpD/+S90lvZrTcHS/DdNyP/8FzpL
+7WmYGn+mybkf/4LnaX9WlOwNP9NE/I//4XO0n6tKVia/6YJ+Z//Qmdpv9YU
LM1/04T8z3+hs7RfawqW5r9pQv7nv9BZ2q81BUvz3zQh//Nf6Czt15qCpflv
mpD/+S90lvZrTcHS/DdNyP/8FzpL+7WmYGn+mybkf/4LnaX9WlOwNP9NE/I/
/4XO0n6tKVia/6YJ+Z//Qmdpv9YULM1/04T8z3+hs7RfawqW5r9pQv7nv9BZ
2q81BUvz3zQh//Nf6Czt15qCpflvmpD/+S90lvZrTcHS/DdNyP/8FzpL+7Wm
YGn+mybkf/4LnaX9WlOwNP9NE/I//4XO0n6tKVia/6YJ+Z//Qmdpv9YULM1/
04T8z3+hs7RfawqW5r9pQv7nv9BZ2q81BUvz3zQh//Nf6Czt15qCpflvmpD/
+S90lvZrTcHS/DdNyP/8FzpL+7WmYGn+mybkf/4LnaX9WlOwNP9NE/I//4XO
0n6tKVia/6YJ+Z//Qmdpv9YULM1/04T8z3+hs7RfawqW5r9pQv7nv9BZ2q81
BUvz3zQh//Nf6Czt15qCpflvmpD/+S90lvZrTcHS/DdNyP/8FzpL+7WmYGn+
mybkf/4LnaX9WlOwNP9NE/I//4XO0n6tKVia/6YJ+Z//Qmdpv9YULM1/04T8
z3+hs7RfawqW5r9pQv7nv9BZ2q81BUvz3zQh//Nf6Czt15qCpflvmpD/+S90
lvZrTcHS/DdNyP/8FzpL+7WmYGn+mybkf/4LnaX9WlOwNP9NE/I//4XO0n6t
KVia/6YJ+Z//Qmdpv9YULM1/04T8z3+hs7RfawqW5r9pQv7nv9BZ2q81BUvz
3zQh//Nf6Czt15qCpflvmpD/+S90lvZrTcHS/DdNyP/8FzpL+7WmYGn+mybk
f/4LnaX9WlOwNP9NE/I//4XO0n6tKVia/6YJ+Z//Qmdpv9YULM1/04T8z3+h
s7RfawqW5r9pQv7nv9BZ2q81BUvz3zQh//Nf6Czt15qCpflvmpD/+S90lvZr
TcHS/DdNyP/8FzpL+7WmYGn+mybkf/4LnaX9WlOwNP9NE/I//4XO0n6tKVia
/6YJ+Z//Qmdpv9YULM1/04T8z3+hs7RfawqW5r9pQv7nv9BZ2q81BUvz3zQh
//Nf6Czt15qCpflvmpD/+S90lvZrTcHS/DdNyP/8FzpL+7WmYGn+mybkf/4L
naX9WlOwNP9NE/I//4XO0n6tKVia/6YJ+X9e//8BvdxHyA==
       "], {{0, 128}, {128, 
       0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.775222899011693*^9, 3.775222928227092*^9}},
 CellLabel->"Out[72]=",ExpressionUUID->"6e6a1f48-ffb6-44fc-8a31-c068f2038304"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Network XV - Transfer learning with pre-trained image recognition net (VGG-16)\
\>", "Subsection",
 CellChangeTimes->{{3.775223213097083*^9, 
  3.775223233659657*^9}},ExpressionUUID->"d3c24268-4836-4377-8821-\
dc4f21d4aaaf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"netECA15", "=", 
  RowBox[{
  "NetModel", "[", "\"\<VGG-16 Trained on ImageNet Competition Data\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.775223283904462*^9, 3.775223299624886*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"337713f2-355c-4d38-8249-9195f5d0c538"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["40", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "conv1_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 3, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 3, "ChannelGroups" -> 1, 
                    "$InputSize" -> {224, 224}, "$OutputSize" -> {224, 224}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 3], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]]], "relu1_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 224, 224}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]]], "conv1_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 64, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {224, 224}, "$OutputSize" -> {224, 224}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]]], "relu1_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 224, 224}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]]], "pool1" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 64, 
                    "$InputSize" -> {224, 224}, "$OutputSize" -> {112, 112}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]]], "conv2_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 64, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {112, 112}, "$OutputSize" -> {112, 112}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]]], "relu2_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 112, 112}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]]], "conv2_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {112, 112}, "$OutputSize" -> {112, 112}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]]], "relu2_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 112, 112}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]]], "pool2" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 128, 
                    "$InputSize" -> {112, 112}, "$OutputSize" -> {56, 56}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv3_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu3_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv3_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 256, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu3_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv3_3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 256, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu3_3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "pool3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 256, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {28, 28}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv4_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 256, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu4_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv4_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu4_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv4_3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu4_3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "pool4" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 512, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {14, 14}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv5_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu5_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv5_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu5_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv5_3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu5_3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "pool5" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 512, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {7, 7}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "flatten_0" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{25088}, NeuralNetworks`RealT]]], 
                    "fc6" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{4096, 25088}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{4096}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {4096}, "$OutputSize" -> 4096, 
                    "$InputSize" -> 25088, "$InputDimensions" -> {25088}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{25088}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4096}, NeuralNetworks`RealT]]], 
                    "relu6" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {4096}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4096}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4096}, NeuralNetworks`RealT]]], 
                    "drop6" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4096}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4096}, NeuralNetworks`RealT]]], 
                    "fc7" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{4096, 4096}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{4096}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {4096}, "$OutputSize" -> 4096, 
                    "$InputSize" -> 4096, "$InputDimensions" -> {4096}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4096}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4096}, NeuralNetworks`RealT]]], 
                    "relu7" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {4096}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4096}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4096}, NeuralNetworks`RealT]]], 
                    "drop7" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4096}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4096}, NeuralNetworks`RealT]]], 
                    "fc8" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1000, 4096}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1000}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {1000}, "$OutputSize" -> 1000, 
                    "$InputSize" -> 4096, "$InputDimensions" -> {4096}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4096}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]]], 
                    "prob" -> Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "fc6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "fc6", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "drop6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu6", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "fc7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "drop6", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "fc7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "drop7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "fc8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "drop7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "prob", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "fc8", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "prob", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {224, 224}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, 
                    "MeanImage" -> {0.4850196078431373, 0.457956862745098, 
                    0.4076039215686274}, "$Version" -> "12.0.11", 
                    "VarianceImage" -> None, "Interleaving" -> False]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{1000}, 
                    NeuralNetworks`RealT], "Type" -> "Class", "Labels" -> {
                    Entity["Concept", "Tench::q9r2d"], 
                    Entity["Concept", "CarassiusAuratus::f73xs"], 
                    Skeleton[997], 
                    Entity["Concept", "BathroomTissue::ts4sr"]}, "Dimensions" -> 
                    1000, "$Version" -> "12.0.11", "InputDepth" -> 1, "$Rank" -> 
                    0]]], NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv1_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu1_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv1_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu1_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv2_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu2_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv2_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu2_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu3_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu3_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu3_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv4_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu4_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv4_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu4_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv4_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu4_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv5_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu5_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv5_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu5_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv5_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu5_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"7\"", "\"7\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"flatten_0\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten_0"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten_0"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"25088\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "flatten_0"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"fc6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "fc6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "fc6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4096\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "fc6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4096\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"drop6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4096\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "drop6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"fc7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "fc7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "fc7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4096\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "fc7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4096\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"drop7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4096\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "drop7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"fc8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "fc8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "fc8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1000\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "fc8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"prob\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "prob"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "prob"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1000\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "prob"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   ImageSizeCache -> {272., {317.4169921875, 322.5830078125}},
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.775223490032282*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"057dbb7d-543e-4477-a4f5-3e4cb69aa8e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"subNet", "=", 
  RowBox[{"NetTake", "[", 
   RowBox[{"netECA15", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<conv1_1\>\"", ",", "\"\<flatten_0\>\""}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7752236486335697`*^9, 3.7752236750107737`*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"0583ac7c-345c-48fb-bd03-f281533caac7"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"25088\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["32", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "conv1_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 3, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 3, "ChannelGroups" -> 1, 
                    "$InputSize" -> {224, 224}, "$OutputSize" -> {224, 224}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 3], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]]], "relu1_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 224, 224}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]]], "conv1_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 64, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {224, 224}, "$OutputSize" -> {224, 224}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]]], "relu1_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 224, 224}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]]], "pool1" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 64, 
                    "$InputSize" -> {224, 224}, "$OutputSize" -> {112, 112}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]]], "conv2_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 64, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {112, 112}, "$OutputSize" -> {112, 112}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]]], "relu2_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 112, 112}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]]], "conv2_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {112, 112}, "$OutputSize" -> {112, 112}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]]], "relu2_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 112, 112}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]]], "pool2" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 128, 
                    "$InputSize" -> {112, 112}, "$OutputSize" -> {56, 56}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv3_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu3_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv3_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 256, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu3_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv3_3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 256, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu3_3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "pool3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 256, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {28, 28}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv4_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 256, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu4_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv4_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu4_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv4_3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu4_3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "pool4" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 512, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {14, 14}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv5_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu5_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv5_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu5_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv5_3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu5_3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "pool5" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 512, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {7, 7}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "flatten_0" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{25088}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten_0", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {224, 224}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, 
                    "MeanImage" -> {0.4850196078431373, 0.457956862745098, 
                    0.4076039215686274}, "$Version" -> "12.0.11", 
                    "VarianceImage" -> None, "Interleaving" -> False]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{25088}, NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv1_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu1_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv1_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu1_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv2_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu2_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv2_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu2_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu3_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu3_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu3_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv4_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu4_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv4_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu4_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv4_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu4_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv5_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu5_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv5_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu5_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv5_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu5_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"7\"", "\"7\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"flatten_0\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten_0"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten_0"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"25088\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "flatten_0"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"25088\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.775223675736868*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"37daaaee-8961-4c9e-8f3f-24f6eb0867ba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"joinedNet", "=", 
  RowBox[{"NetJoin", "[", 
   RowBox[{"subNet", ",", 
    RowBox[{"NetChain", "@", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<linear_new\>\"", "\[Rule]", 
        RowBox[{"LinearLayer", "[", "1024", "]"}]}], ",", 
       RowBox[{"\"\<linear_out\>\"", "\[Rule]", 
        RowBox[{"LinearLayer", "[", "4", "]"}]}], ",", 
       RowBox[{"\"\<prob\>\"", "\[Rule]", 
        RowBox[{"SoftmaxLayer", "[", "]"}]}]}], "|>"}]}], ",", 
    RowBox[{"\"\<Output\>\"", "\[Rule]", 
     RowBox[{"NetDecoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Class\>\"", ",", 
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", "4"}], "]"}]}], "}"}], "]"}]}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.7752237068339233`*^9, 3.7752237913846827`*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"fa34565c-9bc2-472d-a0d9-f7bb1a430d20"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, BaseStyle -> GrayLevel[0.6], 
                 ImageMargins -> 0, ImageSize -> {36, Automatic}, 
                 PlotRangePadding -> 0], 
                StyleBox[
                "uninitialized", LineColor -> RGBColor[0.66, 0, 0], 
                 FrontFaceColor -> RGBColor[0.66, 0, 0], BackFaceColor -> 
                 RGBColor[0.66, 0, 0], GraphicsColor -> RGBColor[0.66, 0, 0], 
                 FontFamily -> "Roboto", FontSize -> 8, FontColor -> 
                 RGBColor[0.66, 0, 0], Background -> GrayLevel[1, 0.65]]}, 
               Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["35", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, BaseStyle -> GrayLevel[0.6], 
                 ImageMargins -> 0, ImageSize -> {36, Automatic}, 
                 PlotRangePadding -> 0], 
                StyleBox[
                "uninitialized", LineColor -> RGBColor[0.66, 0, 0], 
                 FrontFaceColor -> RGBColor[0.66, 0, 0], BackFaceColor -> 
                 RGBColor[0.66, 0, 0], GraphicsColor -> RGBColor[0.66, 0, 0], 
                 FontFamily -> "Roboto", FontSize -> 8, FontColor -> 
                 RGBColor[0.66, 0, 0], Background -> GrayLevel[1, 0.65]]}, 
               Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "conv1_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 3, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 3, "ChannelGroups" -> 1, 
                    "$InputSize" -> {224, 224}, "$OutputSize" -> {224, 224}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 3], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]]], "relu1_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 224, 224}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]]], "conv1_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 64, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {224, 224}, "$OutputSize" -> {224, 224}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]]], "relu1_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 224, 224}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]]], "pool1" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 64, 
                    "$InputSize" -> {224, 224}, "$OutputSize" -> {112, 112}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]]], "conv2_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 64, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {112, 112}, "$OutputSize" -> {112, 112}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]]], "relu2_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 112, 112}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]]], "conv2_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {112, 112}, "$OutputSize" -> {112, 112}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]]], "relu2_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 112, 112}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]]], "pool2" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 128, 
                    "$InputSize" -> {112, 112}, "$OutputSize" -> {56, 56}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv3_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu3_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv3_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 256, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu3_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv3_3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 256, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu3_3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "pool3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 256, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {28, 28}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv4_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 256, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu4_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv4_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu4_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv4_3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu4_3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "pool4" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 512, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {14, 14}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv5_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu5_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv5_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu5_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv5_3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu5_3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "pool5" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 512, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {7, 7}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "flatten_0" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{25088}, NeuralNetworks`RealT]]], 
                    "linear_new" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{1024, 25088}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {1024}, "$OutputSize" -> 1024, 
                    "$InputSize" -> 25088, "$InputDimensions" -> {25088}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{25088}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]]], 
                    "linear_out" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{4, 1024}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {4}, "$OutputSize" -> 4, 
                    "$InputSize" -> 1024, "$InputDimensions" -> {1024}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]], 
                    "prob" -> Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear_new", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear_out", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear_new", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "prob", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear_out", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "prob", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {224, 224}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, 
                    "MeanImage" -> {0.4850196078431373, 0.457956862745098, 
                    0.4076039215686274}, "$Version" -> "12.0.11", 
                    "VarianceImage" -> None, "Interleaving" -> False]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {1, 2, 3, 4}, "InputDepth" -> 1, "Dimensions" -> 
                    4, "$Rank" -> 0, "$Version" -> "12.0.11"]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv1_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu1_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv1_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu1_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv2_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu2_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv2_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu2_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu3_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu3_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu3_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv4_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu4_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv4_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu4_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv4_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu4_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv5_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu5_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv5_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu5_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv5_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu5_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"7\"", "\"7\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"flatten_0\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten_0"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten_0"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"25088\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "flatten_0"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear_new\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear_new"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear_new"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear_new"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear_out\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear_out"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear_out"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear_out"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"prob\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "prob"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "prob"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "prob"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   ImageSizeCache -> {280., {279.9169921875, 285.0830078125}},
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7752237932884197`*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"a1f40a01-d436-46ea-b764-b33b91d4ac72"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"netECA15final", "=", 
  RowBox[{"NetPrepend", "[", 
   RowBox[{"joinedNet", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<augment\>\"", "\[Rule]", 
      RowBox[{"ImageAugmentationLayer", "[", 
       RowBox[{"{", 
        RowBox[{"224", ",", "224"}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", 
     RowBox[{"NetExtract", "[", 
      RowBox[{"joinedNet", ",", "\"\<Input\>\""}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.775223813581211*^9, 3.7752238432431383`*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"6a0167fa-8681-44df-b870-544cf332c82e"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, BaseStyle -> GrayLevel[0.6], 
                 ImageMargins -> 0, ImageSize -> {36, Automatic}, 
                 PlotRangePadding -> 0], 
                StyleBox[
                "uninitialized", LineColor -> RGBColor[0.66, 0, 0], 
                 FrontFaceColor -> RGBColor[0.66, 0, 0], BackFaceColor -> 
                 RGBColor[0.66, 0, 0], GraphicsColor -> RGBColor[0.66, 0, 0], 
                 FontFamily -> "Roboto", FontSize -> 8, FontColor -> 
                 RGBColor[0.66, 0, 0], Background -> GrayLevel[1, 0.65]]}, 
               Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["36", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, BaseStyle -> GrayLevel[0.6], 
                 ImageMargins -> 0, ImageSize -> {36, Automatic}, 
                 PlotRangePadding -> 0], 
                StyleBox[
                "uninitialized", LineColor -> RGBColor[0.66, 0, 0], 
                 FrontFaceColor -> RGBColor[0.66, 0, 0], BackFaceColor -> 
                 RGBColor[0.66, 0, 0], GraphicsColor -> RGBColor[0.66, 0, 0], 
                 FontFamily -> "Roboto", FontSize -> 8, FontColor -> 
                 RGBColor[0.66, 0, 0], Background -> GrayLevel[1, 0.65]]}, 
               Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "augment" -> 
                    Association[
                    "Type" -> "ImageAugmentation", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {224, 224}, 
                    "ReflectionProbabilities" -> {0., 0.}, "$Channels" -> 3, 
                    "$InputDimensions" -> {224, 224}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT]]], "conv1_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 3, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 3, "ChannelGroups" -> 1, 
                    "$InputSize" -> {224, 224}, "$OutputSize" -> {224, 224}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 3], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]]], "relu1_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 224, 224}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]]], "conv1_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 64, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {224, 224}, "$OutputSize" -> {224, 224}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]]], "relu1_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 224, 224}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]]], "pool1" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 64, 
                    "$InputSize" -> {224, 224}, "$OutputSize" -> {112, 112}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]]], "conv2_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 64, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {112, 112}, "$OutputSize" -> {112, 112}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]]], "relu2_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 112, 112}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]]], "conv2_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {112, 112}, "$OutputSize" -> {112, 112}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]]], "relu2_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 112, 112}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]]], "pool2" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 128, 
                    "$InputSize" -> {112, 112}, "$OutputSize" -> {56, 56}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv3_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu3_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv3_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 256, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu3_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv3_3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 256, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu3_3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "pool3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 256, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {28, 28}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv4_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 256, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu4_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv4_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu4_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv4_3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu4_3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "pool4" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 512, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {14, 14}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv5_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu5_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv5_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu5_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv5_3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu5_3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "pool5" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 512, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {7, 7}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "flatten_0" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{25088}, NeuralNetworks`RealT]]], 
                    "linear_new" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{1024, 25088}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {1024}, "$OutputSize" -> 1024, 
                    "$InputSize" -> 25088, "$InputDimensions" -> {25088}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{25088}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]]], 
                    "linear_out" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{4, 1024}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {4}, "$OutputSize" -> 4, 
                    "$InputSize" -> 1024, "$InputDimensions" -> {1024}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]], 
                    "prob" -> Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "augment", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "augment", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear_new", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear_out", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear_new", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "prob", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear_out", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "prob", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {224, 224}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, 
                    "MeanImage" -> {0.4850196078431373, 0.457956862745098, 
                    0.4076039215686274}, "$Version" -> "12.0.11", 
                    "VarianceImage" -> None, "Interleaving" -> False]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {1, 2, 3, 4}, "InputDepth" -> 1, "Dimensions" -> 
                    4, "$Rank" -> 0, "$Version" -> "12.0.11"]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"augment\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "augment"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ImageAugmentationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "augment"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "augment"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv1_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu1_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv1_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu1_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv2_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu2_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv2_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu2_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu3_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu3_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu3_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv4_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu4_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv4_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu4_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv4_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu4_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv5_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu5_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv5_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu5_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv5_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu5_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"7\"", "\"7\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"flatten_0\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten_0"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten_0"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"25088\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "flatten_0"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear_new\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear_new"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear_new"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear_new"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear_out\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear_out"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear_out"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear_out"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"prob\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "prob"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "prob"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "prob"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   ImageSizeCache -> {318., {287.4169921875, 292.5830078125}},
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.775223833289269*^9, 3.775223844394623*^9}, 
   3.775224959251832*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"f5c3c301-9a2d-4337-9215-356eae9ff090"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataECA15", "=", 
   RowBox[{"dataC", "[", 
    RowBox[{"224", ",", "224", ",", "8192"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.772355752786458*^9, 3.772355821872775*^9}, {
  3.772690743490674*^9, 3.7726907773276663`*^9}, {3.772693549217153*^9, 
  3.772693583566229*^9}, {3.77312988440252*^9, 3.7731298847595797`*^9}, {
  3.7732152150950327`*^9, 3.773215215437931*^9}, {3.7732950325697002`*^9, 
  3.773295032668089*^9}, {3.7741710812201223`*^9, 3.774171081293769*^9}, {
  3.774171112241376*^9, 3.774171114625349*^9}, {3.7752232374385*^9, 
  3.775223237507818*^9}, {3.775223856901599*^9, 3.7752238586204348`*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"f6c2c066-47ac-4576-9cb4-e62c61563517"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataTotalistic2BigC15", "=", 
   RowBox[{"genData2r2C", "[", 
    RowBox[{"224", ",", "224", ",", "1024"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.772355752786458*^9, 3.772355821872775*^9}, {
   3.772690743490674*^9, 3.7726907773276663`*^9}, {3.772693549217153*^9, 
   3.772693588670415*^9}, {3.7731298879079638`*^9, 3.773129888266445*^9}, {
   3.77321521750358*^9, 3.773215217885929*^9}, {3.773215262293749*^9, 
   3.773215271744378*^9}, {3.7732950346821947`*^9, 3.7732950347840853`*^9}, {
   3.7741710833169518`*^9, 3.7741710834211483`*^9}, 3.774171123101664*^9, {
   3.77522323934326*^9, 3.775223239421975*^9}, {3.775223862918338*^9, 
   3.775223864065777*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"9c0dc13f-bb60-46aa-a091-0b52af3fa262"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataTotalistic3BigC15", "=", 
   RowBox[{"data3T2C", "[", 
    RowBox[{"224", ",", "224", ",", "512"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.772355752786458*^9, 3.772355821872775*^9}, {
   3.772690743490674*^9, 3.7726907773276663`*^9}, {3.772693549217153*^9, 
   3.77269359306248*^9}, {3.773129890386211*^9, 3.773129891320112*^9}, {
   3.7732152196732883`*^9, 3.7732152200277443`*^9}, {3.773295036430442*^9, 
   3.7732950365479527`*^9}, {3.774171084960733*^9, 3.774171085057392*^9}, 
   3.774171127062512*^9, {3.77522324115222*^9, 3.7752232412345657`*^9}, {
   3.775223867229121*^9, 3.7752238684731903`*^9}, {3.775224312161384*^9, 
   3.775224312476309*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"ded4704c-f9b6-481d-a314-d0f169695709"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataTotalistic4BigC15", "=", 
   RowBox[{"data4TC", "[", 
    RowBox[{"224", ",", "224", ",", "512"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.772355752786458*^9, 3.772355821872775*^9}, {
   3.772690743490674*^9, 3.7726907773276663`*^9}, {3.772693549217153*^9, 
   3.7726935982412777`*^9}, {3.7731298932839537`*^9, 3.773129893667457*^9}, {
   3.77321522172605*^9, 3.773215222093884*^9}, {3.7732950384695063`*^9, 
   3.7732950385858507`*^9}, {3.7741710868618593`*^9, 3.774171086932007*^9}, 
   3.7741711304700937`*^9, {3.775223243701316*^9, 3.7752232438720093`*^9}, {
   3.775223871951981*^9, 3.7752238731420937`*^9}, {3.775224316727125*^9, 
   3.775224317027165*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"a9d7de35-260f-42a0-af13-5962bbea7bf7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataTotalistic5BigC15", "=", 
   RowBox[{"genData5TCC", "[", 
    RowBox[{"224", ",", "224", ",", "1024"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.772355752786458*^9, 3.772355821872775*^9}, {
   3.772690743490674*^9, 3.7726907773276663`*^9}, {3.772693549217153*^9, 
   3.772693602628367*^9}, {3.7731298956689577`*^9, 3.773129896025247*^9}, {
   3.773215223612338*^9, 3.773215224001829*^9}, {3.7732950404115*^9, 
   3.773295040558866*^9}, {3.774171088543384*^9, 3.774171088609951*^9}, 
   3.774171133328553*^9, {3.775223245916102*^9, 3.7752232459988337`*^9}, {
   3.775223876722844*^9, 3.775223878713914*^9}, {3.77522414794558*^9, 
   3.7752241480817738`*^9}, {3.775224185427081*^9, 3.775224186170479*^9}, {
   3.775224320043972*^9, 3.7752243215500183`*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"5fadb808-2927-49ed-a0ae-418db10e5e8c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fullTrainingBigC15", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
    "dataECA15", ",", "dataTotalistic2BigC15", ",", "dataTotalistic3BigC15", 
     ",", "dataTotalistic4BigC15", ",", "dataTotalistic5BigC15"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "fullTrainingBigC15", "]"}]}], "Input",
 CellChangeTimes->{{3.772355752786458*^9, 3.772355821872775*^9}, {
  3.772690743490674*^9, 3.7726907773276663`*^9}, {3.772693549217153*^9, 
  3.772693602628367*^9}, {3.773129897972353*^9, 3.77312991704902*^9}, {
  3.773215225791395*^9, 3.773215243291334*^9}, {3.773295042430605*^9, 
  3.773295058617936*^9}, {3.773329034384303*^9, 3.773329038122735*^9}, {
  3.774171090243143*^9, 3.774171104146511*^9}, {3.7752232478763514`*^9, 
  3.775223260724506*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"f138e990-720f-4263-aca2-af74ff607ee3"],

Cell[BoxData["16384"], "Output",
 CellChangeTimes->{3.775224818428664*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"0876791b-6f2e-4c4d-a283-7755a3e73fe7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomSample", "[", 
  RowBox[{"fullTrainingBigC15", ",", "20"}], "]"}]], "Input",
 CellChangeTimes->{{3.775224830341238*^9, 3.775224837041753*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"4ed811be-0d6f-43ac-8b14-b037dc05285b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
4bfmf1uHXJ9H6H5C9275p9bt1+cReoicd613XWJyObOcTZdnPkmbgkdd7kXg
jLyLlc62Mo/WkYRvgUvML+8l+LOcKfJsCU5qXi1oWe7Dl/6T9mdZm8IMl7nZ
4qHgLYJOL78vhHlW8G99C6Sxat1L06PgIfJsl3fX7nKp5cv8FbSv5amgTWGG
lTxtdUuZD5rvaVmveY6m2ZY/r+tC5omm5cu8S/B80XPk/NU0KMx8qU1hBuFd
mndp79I6m6bZVkfVtCPsXfY9zW8Fv5L9Tebziudc8vaTPqx56SJvn+oPb+CA
9i6ZwxqGl3hq2hH2/knutHpCCzehz1/25DT+Qg5qnnPpq8LeL/uGdpdLDqx3
LY0Dl++Vu00rWzXf1uaUzxHyQnuv0CtaWm5lRCsHNW+Uc1DbtdBttPwS/EHg
m+ADsue0OCzvS/BGLQu0XtHqzC2/lfuDkIPCN0gro9N9Jo2b1g8TvqTxVuha
CX9odfh1Lci6a3WVlX1pcwrdMtErhHku+5vcH1oYCroTOrzApcW7J2Zu+YBw
juAPQm4uakHWnTCzvK+VjrcyfzrfNf4v9gdhnhZvE7O1tC/w/PLurZkv73t5
Tss3BO2sc0P4LtM6YSvTtflbnBe6sdA9Wv1N7g9PypT0vhK4pTWu8TPte61v
q0ttCrmTxkT4VpK5oT1rnVDICGF+TdfrfNDOF/ae9gQ5Uy4xSXvXIs5C1xX6
Qyt/L/fbyu4V7xJ8QOB2qxOu56bW8Va8TsNzxdsv+4OM7co3kcyZS5wFXWve
leCn4D8tr1vxLjmDhM62cv7bOnPLi1oZ1PoG0bz9sj+s7ELWu5YpLZwFnWre
JXd1YdeXGhf4KWSQ3Jm18zXttzqetpeV92rZKuCzsgtZ71qmXHJP5swKD1td
SL5jQl8Cf9KztXbU4vCKRlrnt3Kq9Xvtva1eIe9lZReax7Z6l8a9lc4v87DV
1eU7XupL41IrWz85U+jwskZWOrOAuZCP6x6i7XdxF4k7LvYuTYMrnV/m4Yqm
ZD9J8FPIi5VMWdTypUY0/J+6R81LtfvKc2q7kL1X6IotDa50/hafW5gL5zy1
J2t3SXNM8P8VvWvPwjedcF/BA5/Ur4Se0OK80Ocve1fr+1fITcH3LjuPpinZ
TxJ7XPf5NMfkLNY6mzb/Ys5e+nMrN1f6lbCXFucFn1/sVytzrme3rEH5+0Lu
ydpdLvn2LQwFLV92Nm3+xZwV3nvpgXK/EnTxNsyf2nm0ORPcE961ONviTi+9
SOaMwDdhF9odVzrYioe8rUu3+pWgC41Llz7/pM6j5eylHwreK88m9Jk38C3B
mUu9p/NXyJ318wVOyt1Y8JlFnlzed/37Quuxmka036d39y2eX/K/xdvL/ixr
8JKH35rz0mcus+kSw8XztXk0jxJ8RtjLYh9b14LQY9+g2QQml/zXsmDd3+SM
u+xU6VxY12krd9Z/r+W45lGCzyzyROhjrbukMb/ssYu9Qta40JEutfwGfxM0
mNZO2kvTer/k9s9zNy80Xbe0uYKzhs8nc677cKKHXL5rRbPCd5DgA5d9WHsW
fEDgm6DBS9++9L2f5y3/X/EiwWcEnmj+3MpcjfOavgTNXmpcvqOsNdnfZG9s
+UNLX0/qEk99XsFZyxfBtwUcWl06gY/mw4t+LjxrXvRUbgg9TfC3RW+Ufb6V
ueu+tPKs+bOWlSvfRNoe0zgkfr8ys+znwnNLa4neInPjUmtaDl72OsHrBC1o
mav50sqz5s9aVmr8XNmj9t4nzSz0atkn171lhRuJe7V8WOhOi/y5vIvQhWRf
WnnW/FnrFa3MFTJI6PCC7rSZ5a4o72vFW7S7X3pji89Cd1rkz+VdZF8VfEno
kwIOK3hqOXLpgXJOCTzRZr7MmpaOhLto/NG4IfeKVn/+5I6Cz2h+Lvvqb52h
1ZmFnvkzp6M1wQOFnJV5os18mTVpvskdSeNkos8I/BT8U7ijwMOVu2i8vTxz
xfd+5vzu+RpPNK9odQ+5j2n5uNIrWh1J8y6NG0J2aNoUvk3k/iN3Bm2naR9r
7ehnzpvOk/695hWt7iH3sXXMW72i1ZE0T0jkl4yD7LeXHUPAX+CwlmXpnQp+
ntjRz5w3nUebJ+0Vb+PD4q5ln0/svXVHYe9y37vMdO1Z6MOX/Uf4HhEy8ZN3
Xfq51uGfNGeLz0IWX+rxqXyQuXeJlbz39Aytu1/qXesh6z6g9d50/xH4qXXU
9LeJ5u2aT653vFZHap3f6hIaH4ScEjiT1kXCq1ta1jyk1feEfrWu5Za3y9oR
OvlvPSehEa3ztDJCm1Pzyad2wjSesrcLGZHmzGV/+NYdNU4K/UrY0VM73qVv
C11C086K36Y9ueUJAq+EOTXvanU8jQ+aLoTnVrf8ld+38PzkjhonhX4l99j1
jnfp2yt7udyXlpW/ck7Ck1vcE3glzNnildbxND5oupA7Z9pbZP4k7qhl1qVn
ClkvdOkWby/1Jezlcl9aVj51nhUNaj7/NpwFnxE8WeveWidZv4ucTZrntLJe
6NJpjbT8U9uL0Mdavv0JzsI8wu4Wu8cPzlu81eYXelqrkyzeJdG7VjSodbYW
N1odT/BPeS+ar65w41t9Xs6Lyz2uzL8y5wo+WqcVvhFaM8u+99QcFLTf4vOl
VwgdT8v91l40X13nxm/lvJwXMm9b86/MuYJPy5Nb/iN412UX0vCXNa5lZZrP
WqakO57mqysZrfFQ4Ebib4W8WPSTFg7anCv4tDxZ5vnK7hbxl71Uy8p0t2l1
y0v/Efh5uev0HQUeyrhd5svl7gRtyn4l46zhs57jwn41bsv4azkofH+1MNG8
NOE/wi60Hqj5RrprXeKm+cCl56/7dhq3lY6Xvu8KH+R7ady+9EYhizUPWcFE
42eCh2nfkP0nccfLnibr63L+lcx96u9bzxpvtXut4yZkd2ungt8K/TmN/5sx
SXcJQTua/1z60uW+BH0JnVPL3Kc+p799VjztbfxZn3/FS9ezWPYK4Tu0hUk6
o1t+KPtS+o7pLr2oLxnbllevP7fuq3maoH1h7yvzCxwTvPQyZzWvELJD0Mtl
LgvfPus4f8KrSw4L+vrWXlbm1Dgv60jWr9YfBP48tUs/yUsXdXo5QwsrAZO0
lld8chFngT+XfijzWZsz8V7teQW3tKdp2tf6mJCtGscud72i08sZWr1FwET2
xlZHSs8jz5A4R9PXJ/N86zdChi5m8SJuGp6tPNXm17r0YldJ+L/gby2ctW6W
1rugNaEjpc+RZ7jMX61LXPZqIaNb/ql5QqtTtfDUesvKXi73tdJVPnnvCp8v
M2vRKy5zU8iXNDcS58gzXPqw1sES2pFzp+Wfmie0OtU6/7U+s/J7Ie8EDWo6
FTqS5r0JTGQ+C35+eY4wwyU3Wny7zMpPZtb23urMWpdY6VoaHzSdavsVuKrl
snD3S81q3tvyB8GjBF6lzxFmeFIuyN9Kn/ChtfeVeYTOIGhqJdcEnV4+J7Jg
ReOfzKn5iexFgle0/nZlBm2nwgzruaB1jEsPT+x9ZR6hMwjnr+Ra6/xFX3pS
h/xWD2/5icDJlpYTPVy4l9Cv3nB3YTa5GwgdQOjeAg4tDBe71vo8rfvKviR4
vjyn8HzJyVafSfTwVr9qzSB0Sw3/y9me9A0oZM2i78lZL3enlqet9wetc37S
YZ7aIYVvhPR+01ksaL/Ff0GDgm9odxd4ldiX1i0TvVHQyEo3aO13pVNp86x8
gwi+JMwgzCk8J3w+jY/sV0IWX/arxT6zyKtL/WrdckWnrVxY1+xK9q3sMT1P
C4dP5nlqh1zUYGKPrSx7Km7CDJpmBfzlHEz48FO7ZcvfnoT/im8L+bXSH1r7
beG52CEXNZjARPOEddwuM0XzSeHuAq+EXiH0ZFmnmresaHYF55U9al6k5Z2w
0zdrMDFb6xtB4F4Ct0vNaj4p3F3uSJe9QssgTaeaJ7fwl317sXtrvUXD/xKf
lV3IHBD0pXFSw03DZ/E5gb/QkS49SsugT+4o+Fsr6zUf0Dqhlvvp/a7jfznP
yt1lDbYyTuhOCe4tvkvzRiFPW96oedFi17r0XiFfWp1E0OaTtKPhvIK/No9w
d1mDAlZat5Q5JuAjdMh0nsr7EvJLwHxl11q2rnfd9e7X8tsWT9L4a/Ncaqp1
ThrzFZ4IXrr4LkGbLT9f3JeQXwLmgo99MtsKnisdRutmmj+0eNLqPwIfWhp8
QwcQeCJoavFdaU+TO+eT/Ody1wLm63xb73iC3wr4rGToSg9p8TDBhxWtaRpc
4YmgqUsctCyQu4GgWYEbl16h8VDmm5A7K5g8lW8CZ4QekuankIOa1hY7gMAT
TVOXOMheJ2Sfll8tblxqJI15S++CHwodr4VJq6M+yQ9lLxXyOj2nprVFzss8
ae3r0m/T869nX0s7GjcuPU3Yews34Y4ar1o5JexiURcr82t5J3cYbUeXuSn0
4TQ+Qre5nE3OvpXcbPXeRf9s+eFKDmq80rxO45umi5X5tbwT8mtlR9qu0324
xb1WDra0I2TfSm4KXWLFP1t+eOk5izgLd7/Mr/VvgfX55a7Yyq+VHWm7Tuui
xb1WDq549eU5Wm5+4j+X+xL8s9W1Wlnf6r0rnWflHM0PW/cVfEzo2JcdRtuR
tuuWJwseK+fgipbT3Uneb8t7L/1Tw0fwNwHnN/iGoOVWXmvnr38jJPLrqd8R
ra4i5FHaY1udR/B8geet3BR6yye/v/RPWSPa7hYzd9E3LnnSymvtfK0Ttnzp
ktuaBgXNLvbbFb1rGr+8ozCbxlvB6zSNyH1jJXNXOLnyTfTU37f42eokn5yj
aVbbtYztJZeeqnchf7+F/2J+yf1W8HxhR5f61TL3Sb4heMtTn7VOqPFN9kBt
1zK2rV4haFzrPG/QbGIv8q4vZ3iSdi65reEv+8aKRhaf0/hr+21liuCNrV0I
2Aq9QvAZofO0eC5oMPH9Iuw6gc8btHPpmS2fb2V6Wi+CRhaftX1pfFvkwwpW
l9hqntDildzVW94l9BOtJwt9Q9tvAk/hO2JFv9p7BY0sPi96o5BTMh9WsFrv
eAn/13zsUrPa7y/7ieAnsg8L+xX64WXvXdHjOk+0jJB9RrhvSxcyPpqHtLwl
PVvC/zUfu+zq2rOcO4KXPqmPae+9nHlFv6151vNX6Jnr3ijzX8BnRbOXnTYx
m4az0F01LWgd7JLzl1l5yecWh+XOJviYlvVangq5IPjtojfK/Bfw0Tip9Svt
WdD1JZ8FfFodrOXDLU8T+LzoS5rHCv7W6sbruP10py4fBA/UsmPlHI0DsvY1
fQleoXmj0JdaZ17yeSUjBL0LOmp1Pw3bJ/FT6E4tPggeqGWH0Dcud6H5cwIf
TV+tziN7o5ALrTMFXmkZIehd9rc36F3QvqYLDZ/084qO5LtoPUfz5wQ+KxgK
Xiqf09LOendazAhhNtnftA6mnaPxc6UnCBqRPTCRHRpntK7YOl94FnS0ws/L
uz/pWdi1kBGfvFfrb8IMi3oXtK/pQvAoAbeW/1xipZ2jfW+2vPHyecX/BX5e
niNwQ/7mutRaawa5vz3JQwS9X2p/ZV+Cd2m6TvjPpWdqGtTu9QattbjxZp7/
yjkCNzSvbvEt0ZnT3yYCV1c8RND7pfZX9qV5oHavtC8lPPNtnGztSNZaixuJ
u6/wPMFPoVtecuaSbysdQPDeRQ9Z1LuAj9adWj6maVDAQfAfgZNaXgvza7r4
5L0rPJc7mOzVwi7kDnDZyYUdtfJC0LuAT6vztzxQ84dWz5HvrnFSy2tBa5ou
Ev6p8VzuYJc813jyLXy0jnTpvZc70jiv5aPWB9Y13jpnfX7NfwRvaXmXoLWW
T15ipfH8Ui/Cd5bwrkt85I4keLLmt63zV3JQ0LWgcdnn5fk1/xEyrqU1mTNa
nmq6FrS/0n+Ed13i0+L8J+cLPaHlt63zfzrws++l4bPYN1qcaWlf4+QlZ57a
IdPcvtTspdYuZ0i8S+4bcke69PyWHwq8FTq2wIEn3WuFP4Jfreyo1WlX7pvg
zHqHvOSGgInsJ5f3be1O0G+iBwqdPK2jS94KfNC64vq9WtmnnS97gtbbte4h
4NPyYeHurexLvFfwk9Y33aVvJ3qdMNtlT2h1klYuvK1jPPVegs8L5yfm1DxT
86jWfZ/UHzRfStzlMnMFP2nh0/oGSXtCS4NpPbZ8r9U539YxnnovweeF3wv5
1dK+xvmW1y32B82X5F6XwE24i8Bb2ROE2S71KHRsOY9WOsZKN9Peu/J8eV9N
+605te4taGRlR5dZKfBE6IHabILf/uDz///+UrOLebTSMVbu25qn1Qe0TBE6
zEqetrTZ0rLwLs1/Lnm4qNlExxC8/Q34rPSHNOdlbsgdY+W+LT/R9tvKlEXu
aZl12fEuuZ3IxxUfkPuzwMnLjiFk2Rvw0TDXsNW4oXWMlfu2uK3tV9OdgPm6
h6xoXO5jK5gL3zgyl2QP1N7VwkfwgZZmhfzScGh5u5aP6xmX5oOgr3UMNU62
uC30sRXML71FwEfQ+JM6vICP4AOXXUjbnbavli9p+bieca17yZ6gYbiyO62n
vRnzdc95w8xyhxfwEfrwJ/pKe04rc1u+3eKPpuv1XtE6/9IbV3bX8l45p9Ka
1e4i9BDBc94ws9z3BHwuuSHosZWhWjfWOpima20eDQdNj5dnalq47HJy1sh3
EXqI4DmLPinrqNWpLntvAp8WD4VsFXgrc7uFjzaP1u0TGtT8R+OSxjEta9b7
Q7qHaJ4j43mJ22Xfu7xLS+8C51tnClks60XGZwW39H1b+73sGytc0jjW+o4Q
dqHpOq2d9e50ObOgI9lvhW55qcfWt2Eriy85JnR77Xwtr9f5KTyvYLXSowTO
r+t6URetMwWNpHUk80fW++KOWpmucWzFEzTP0TJR42erSz+pb2j3EuZfmfky
l4XervnkJc6XPVC+16XeF3eU3t2KR2mevOI5P/x0vHGF2xrmKxpZnFnbheBd
8vOllwrfEYsZsaKv1u5WPKrFK+1Z0PiT+CngpnE73VGfuuvFmbVdCN4lP3+C
yeXuLmfQfEPovfLuBL996o4Ez2nhs8JPATeN263dre86kZstfgrnvM3b05i0
9JieQfONFX1pvqrlxeKOBM/R9qjdS8BN43YL2/VdJ/qA1v8vzxE6kvYsa/My
v2RdJ/Te6kuXHqX5uealK56j7VHjp4Cb5j+t3a3vOnF+i5/r3BP4KXD+8u6f
eJ2MoZDdrX512T1WOo/WgVf0sp7LK79P9A2tJ7S0o+068XvNr1a4J/BTnjlx
95XvAs3zL2f+BP+W9rXO0/LS1vwC94RcXnlO9A2to2qd9uf5HnONe5f9Wc6p
y7tf7kjI+sUsS2Cl6eupXa7VpWXuydpZyQhB45ont7T2hucWNwR/W+Sb5gmt
Hqt14zTmGn9aHHtzl7vUiICn4LfyPJdzrnA13Sue+p0i8LPlY5f+tsi3lc6f
7jNCR0pnq6A7mWPr+ajdS8NT8FuhLwlzapwRerj8XvlZ88/FHL/k20rnb/Wc
VjfWOpXggVp/1vJR4InwXtlvLzNLnlPjzDon39xFNc60fHKl12n5KGRBSwty
p2rNfMkxrVsu8kTODg0Hbe9CFq/vqMXJ9awUcmEFq0ReX/JNy8dLPAVuCFq7
vEtiBu1Z8zrBZ4Ts0HDQ9i70Fg3zFU62Or/wrPmAfN/1bL3Ef5EzaQzl7pTA
RNN+eu8rPNF8bx2f1r1aPra4i5Xdyd8X2szrXUjmlYbDt87XOJPuGK35L3NK
2GNr71p31Tr5io40XrU0K+TI23anaVP2k5b/XN73Sd6offcJnBG+r1s4tPJO
0Iu2Ly1HtO6k4aP5ySXfVnaxsruVriv4SUsXK/fV9Chzu8UZYS8tHARvbOlF
85bW/IIHyvtdf2+ab4seuzLnugYvs0brCYu7kPeewFP7rlnJDsH/L31vxYs0
Psu+JO93/b2Xv1/xWG13T9Xgpa61rij78CXPFzWu4allx1N5pXVXrUv83Pe+
UwmZ2MrK9ZyVd/dUDV7qWuOw7MOXPG/h/MldtKxp+a1wL1kXLY9a6TA/9+3i
sIK/3OW0rqV1b/m9KxxYyaPELhKzaT7Wygs5C7SMW9HFOodb5//c9waHFfwF
rFa6lta9NQ0KM2t6T3NV8ASBDy2eLPqqxp9fua+gi3UOr8/51Pum+4OG/6U3
rnTXlfk1Dco529K71l3f5i2LnBdwFuZpeea6t7Q6jJbLK/dNZ4qGv6xZ7XtH
m7/ldYu5pnVI4b1v8JZFzgs4C/MkuC34pNYZ3tZttPu2vGhlj4v5vsJhjRtC
xml3X+n5v3KOxkPhG0TgvMYlrZulfUPz/5VvEM3DV+6r8Ufb46VmtV1rXNW0
mThfu3tLX9p7V7xF6PYrWabNo3F1/Zti/V5Pve8KzitZLOT7CpfWtZngWEsX
rXkEzLUZtN7bwn/Ff9LZ+ivzJPalaVn7BlnRoHbfFZy1HpLQrKYp7XxNmwJn
1rm02BNknmja/2Qe7Y6tbE3Mf3nmYocX7rWCf8uTV+ZP+4zsXUJWPkmbwnPL
z9O6k3uCsHdNm4n5tTtqnepSR7IntDp86xwNf83TtPlbfBa8S8jEJ+WpzI00
/1f8JKG1N/BhnVeLd7nMhYQHaj6fxnO986x78sr8b+gVi3dcz6MWnq380nJZ
7jyLfNByXPYf7feX/VDo6ivvlX1j0ZNX5l/kQ+u7SfD5lTxqzdnyw5autXme
yofWPNr8rZ62wu3L/Fp/79v2pWWT1pdkPqxgonn+G+ZM60vjcCsXPnnvIh9a
+aWdL/uhwDdZ+9p7BS/SvPGSt1pf0jIx4XUr/WQlT4U5Nf9c6R6X91rkw7rP
X/qw1kUTPi/kl7aXFa2tnPPU32v8vNTUSj9Z0bgwZyu709yTMb98b4sPmm8L
3xqaHwqcFDphay8rWls556nPWudP5MhKvq9rXJsz4Q+XPBdypKUpjQ8/OfLr
PtzyQ1kLwndEei8rWtO65aU3Cs/aXi51pOW7xu0VDX5yzgqXtHxvaaTFB+Fe
wvNiV7zUgqbrVsdezNmVLrT+rH07XOpI0/5K/9E0+Ml7Wz7WyouVbtzKRPle
wrOsqRXfa/EhvZf1nNU6qsCZRR6mcfvkfC3fV/qPpkEhI2SeX3JGuG+CD8K9
hGdBpyu+J/jGm7uTttNW59eeNX+4nH8lT2UfEzr25XtbfrviY8J9EzsS7iU8
J+ZsdQPh+fIub+tOK/mi7UXzkLQ/CPvS8nTdkzWcP/m9PJvgY4u6TuhU04KW
s0I3eFL+XuaO5jna+a3cX+H/em9JzP/DgRvPb+Es9HlhNrlbXupazvcVH/7k
9+vdQ/bJhM9rnqP9vsU3bZ5032jhebmvt3FgnRtCpsizXc6/7sOtfF/X2hu6
RwJbYV9v4Nglb1c6mLZfrbdc4tzSptbnV7ghZIo82+X8T9VOOt8XfVLAU+4Y
n9z3cl/rHezHM7e6nJYpWi+69C6tz7fu25pfzs2Wf7a4rWknne8tP1/HU+4Y
CS0k9qVxcp0Pwk7lLqdlitaLBK62ckfTZnp+oUusn5/eXUs76Xxf8VsNzzf7
dos/WsfQ+KDxSvMWLVPW+ZN4l5YvGrYCt9d1p+Wppp30DCt+K+OpZYTgyYnz
tZk1PmiepnmLlhFa50zMv64pDVtZ+yu6E/L08rml2d/auzS/lfFs3V3z7bQP
aF60ooUWzzVvEfxf6KKX+K9rSvMcWfuCpt6gX1nvl98s6X1p+bXot8Ldn/Sc
5qqmwZY2F7Wv6XGlh2iaeqq/XXJJ6F1P0q+s90+wWtG4nMua3wp3FzS40rXS
2GpafmonF/R4qU3BoxbzQvCuxDnrWGn6XdH7t/SlaVzrxkIWt3a6qMdLLWuc
b53ztk6+ci+hh2ia0jij9SUBcw1DjRstzn/rXZrGtZ4gZLHcGTQ9XmpZ43yL
b2/r5JqXtn4v70LIC8G7hHtpWGn61bpxok9e8qF1/qU3/nQGR48CVzVNrXSb
lies3LfV4RMZ1MJW6/8aNy57iJYFmm8v+oDQDVrnX87ZyjItQ4U9yl1F8xzN
01Y6uealcka3dqHlhcb5y3s9tbdr+aL5wLdmk3uO0MeEzBJm03qa0FVaGpEx
F+61ct+V+eV+ruW+pmUNf7m3r3QMwcc+mU3oLXIf074vWrN9C/O0Nwo5pWnh
EvPF3BR0Ie9L7ucrO1rvMzI3NH9O5/iKjyX6qtxzNP7LPvzJnJrnC96laWHF
G1f6gMa3RZ63uKphtaJZmRtaPmo+KXSeFpeEvfz48E3nae1F8K4W/isa1HJT
ywKt8yfmFDxqkRsaBwRuaPn4w9Utr9D62Bt8WNtF2meEewmdSvNGrTvJHBbu
9cmcGmdWuLE+f4IbGmd+uPpdvWt5p+WpjG3LD4WZBQ5rnUrzRlmbl96inX+J
Q4sz67mzMn+CGxpnNAw1rqb5sOKrWt8QuoeQ74nfv0HLLR+45JX2LaDpdMXr
LrWgcbKVjxq3L31b63javS59I8EHuXvI3ziLnWS9az1Jyy0fuNSUxs+n8lzQ
u7ZTLXdW5he0o/V57V6X2knMsN5DWhq/9OFW1gt3EfDR9r6Sm2/wZOFZ+EbQ
dvrUfqL1n4R2VrJe86sEbokZWvtN+63QXbVOInyzCM8yZ+T5Ndy0eVb4nDhn
hXvr/UTrP5e5qeld86tLPIUZtH4l5HgLK8HnhSxe5Iw8v9aZ1/e4ovdPztG4
p/UN7fet54S/Ld5d4OrKDK13pf0zMY8wQyu75c6p7UubX+vMb7tXS++J/qBl
ltA9hOcVT17Uacv/E3gKM6TzUdvXJ/MIM6SxlfW+whntfKHDyH7YyvcWbp+c
09KC7EvCcwuHRP/RdKpxPtFhnsQHbV9Ct9cyVMBEwG2la2le2vKQlXtp83zy
Xq1DatrROqesqVYOCv1K8BMty1a6isDD9cz6lfNbOhI0vv57LffXvWKlK6bn
lO/Y0o7WOVe8VOharfyVuS3ofUU7lzzUskDgg4Cz1pHWu1n6vSte0cIzjfMn
79XuqGHb0kIrgxJcWunPK/kl8CrBh3WveBImwvMlzk/NF81L0+doXtHCU9uX
5sMCJisaT2tNzjhhBiG/hG6T2MWKf17yUPOTBE80XQvdQNiLgKemCy2bWn0g
Mb/swwKH1zth6/cyVpp+5W6T4ENL43IP+fG97syavlr3fZtnrvBhBbdLH3gq
h5/KmdY3goCV1gdkbBN6TOOwmDstTDTfa82c1oXQM4WOoXmmhoOW70JGt3JT
zotFzixmjcY9jUuXWZPQYys3Be/64er9Xha51NrL2/K3hUO6uy72lrd1SO2c
9fdecqzlt61zEtjK3rLi/2ncnsTV1t1XuPSkLiHwUPA9oec8iZ8atpq3tDij
cVXggOYnArYaP+V9XWKo3T3B1f8LKpoiNw==
       "], {{0, 224}, {224, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{224, 224},
     PlotRange->{{0, 224}, {0, 224}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1jGqpnkVhPFBQVyBuVvQUGhxAYKMKxhBowFhDMSot+AOjNyCiSC4E0PN
xBU4AwYmDdN8p6qe9/YTKKPcOX1u/99T9fvhr377+W++89lnn/3u+1//1+df
/P5nX331xR9++b1v/sevv/jyxz/68rtf/+M//vefb/75T3/7+7t//+T9T9//
88/v/vr+L+9+8Md/vfvFz//z7v///w/9zId+/kM/823++UN/7rf554/d7WPn
fOz+H/s7pnf+2D83vUP67zPxd/vKd5K+qfTve3WDiTdd7dz8ZhLfQPO7auZG
+ttL5PDVt5TIw0SOXf09r+bTOu7qm1m99ao3VzlAs2hz56vdnmLRp7/d1Te5
ysC3ZFHCN5N+68R3pUVz33az19J52+z3dA6vLEq4nWaeNzNTi97uTMg6LapF
tejtGzXnrIyhRft5SPAJYT6542id1bzHZmZq0dudCVmnRbWoFr19o+aclTG0
aD8Pm3mrRbUorTe1aG5nQtZpUS2qRW/fqDlnZQwt2s/DZt5qUS1K600tmtuZ
kHVaVItq0ds3as5ZGUOL9vOwmbdaVIvSelOL5nYmZJ0W1aJa9PaNmnNWxtCi
/Txs5q0WfZZFCffYzEwterszIeu0qBbVordv1JyzMgah+7RoLm+1qBal9aYW
ze1MyDotqkW16O0bNeesjEHoPi2ay1styrRo891pvalFczsTsk6LalEtevtG
zTkrYxC6T4t2TEKbT+44gs1W97j6fbXo6zsTsk6LalEtevtGzTkrYxC6T4t2
TEKbT+44gs1W97j6fbXo6zsTsk6LalEtevtGzTkrYxC6T4t2TEKbT+44gs1W
97j6fbXo6zsTsk6LalEtevtGzTkrYxC6T4t2TEKbT+64VT8S7rGZmVr0dmdC
1mlRLapFb9+oOWdlDEL3adGOSWjzyR1HvqP0PTYzU4ve7kzIOi2qRbXo7Rs1
56yMQeg+LdoxCW0+uePId5S+x2ZmatHbnQlZp0W1qBa9faPmnJUxCN2nRTsm
oc0nd1yzU7SoFr3amZB1WlSLatHbN2rOWRmD0H1atGMS2nxyx2nRTmZq0dud
CVmnRbWoFr19o+aclTEI3adFOyahzSd3nBbtZKYWvd2ZkHVaVItq0ds3as5Z
GYPQfVq0YxLafELHNb+f1bvTelOL5nYmZJ0W1aJa9PaNmnNWxiB0nxbtmIQ2
n9Bxze9n9e603tSiuZ0JWadFtagWvX2j5pyVMQjdp0U7JqHNX9ly9f2s3p3W
m1o0tzMh67SoFtWit2/UnLMyBqH7tGjHJLT5q2919f2s3p3Wm1o0tzMh67So
FtWit2/UnLMyBqH7tGjHJLT5WrTz7rTe1KK5nQlZp0W1qBa9faPmnJUxCN2n
RTsmoc3Xop13p/WmFs3tTMg6LapFtejtGzXnrIxB6D4t2jEJbf7V+zYzmXBH
6XtsZqYW3X7nqx1W2Ut7Oy2qRbXo9u60aN8ktPnN+9WinN7UormdCVmnRbWo
Fs112epbShuD0H1atGMS2nwt2nl3Wm9q0dzOhKzTolpUi+a6bPUtpY1B6D4t
2jEJbb4W7bw7rTe1aG5nQtZpUS2qRXNdtvqW0sYgdJ8W7ZiENv8pfUfrr/Q9
NjNTi/bv4i3d5tPfTotqUS26vTst2jcJeT7h57WoFn2iZ9LdSr7Np7+dFtWi
WnR7d1q0bxLyfMLPa1Et+kTPpLuVfJtPfzstqkW16PbutGjfJKv5iVvWorl7
bGamFr3dmZB1WlSLatHbN2rOWRmD0H1atGMSLapFCb2pRXM7E7JOi2pRLXr7
Rs05K2MQuk+LdkyiRbUooTe1aG5nQtZpUS2qRW/fqDlnZQxC92nRjkm0qBYl
9KYWze1MyDotqkW16O0bNeesjEHoPi3aMUm6l7WoFk18M4S/W7Jn0t1Kvs2n
v50W1aJadHt3WrRvEi2qRQm9qUVzOxOyTotqUS16+0bNOStjELpPi3ZMokW1
KKE3tWhuZ0LWaVEtqkVv36g5Z2UMQvdp0Y5JtKgWJfSmFs3tTMg6LapFtejt
GzXnrIxB6D4t2jFJs+u1KOfdab1J+D6b/d7cmZB1WlSLatHbN2rOafY+4e60
aN8kWlSLEnqT8H02+725MyHrtKgW1aK3b9Sc0+x9wt1p0b5JtKgWJfQm4fts
9ntzZ0LWaVEtqkVv36g5p9n7hLvTon2TaFEtSuhNwvfZ7PfmzoSs06JaVIve
vlFzTrP3CXenRfu9qUW1KKE3tWhuZ0LWaVEtqkVv36g5Z+UKQvdp0U5valEt
SuhNLZrbmZB1WlSLatHbN2rOWbmC0H1atNObWlSLEnpTi+Z2JmSdFtWiWvT2
jZpzVq4gdJ8W7fSmFtWihN7UormdCVmnRbWoFr19o+aclSsI3adFX9+/+c2s
MmHVd7T+St9jMzO16O3OhKzTolpUi96+UXPOyhWE7tOir+/f/GZWmbDqO1p/
pe+xmZla9HZnQtZpUS2qRW/fqDln5QpC92nRvk9o88l9R+uv9D02M1OL3u5M
yDotqkW16O0bNeesXEHoPi3a9wltPrnvaP2VvsdmZmrR250JWadFtagWvX2j
5pyVKwjdp0X7PqHNJ/cdrb/S99jMTC16uzMh67SoFtWit2/UnLNyBaH7tGjf
J7T55L6j9Vf6HpuZqUVvdyZknRbVolr09o2ac1auIHSfFu37hDaf3He0/krf
YzMztejtzoSs06JaVIvevlFzzsoVhO7Ton2f0OaT+47WX+l7bGamFr3dmZB1
WlSLatHbN2rOWbmC0H1Pt2jiG6BZkZAJq76j9Vf6HpuZqUVvd9aiz3o7LapF
tej27rTo1ie0+eS+o/VX+h6bmalFb3fWos96Oy2qRbXo9u6eaNF0xzV9QptP
7jtaf6XvsZmZWvR2Zy36rLfTolpUi27vTotufUKbT+47Wn+l77GZmVr0dmct
+qy306JaVItu745s0WY2rnxCm0/uO1p/rb5hLcr0TLpbybf59LfTolpUi27v
jmbRVTaufEKbT+47Wn+l77GZmVr0dmct+qy306JaVItu706Lbn1Cm0/uO1p/
pe+xmZla9HZnLfqst9OiWlSLbu9uZVFCVhN8QptP7jtaf6XvsZmZWvR2Z0K+
aVEtqkVv36g5Z+UKQvdp0b5PaPPJfUfrr/Q9NjNTi97uTMg3LapFtejtGzXn
rFxB6D4t2vcJbT6572j9lb7HZmZq0dudCfmmRbWoFr19o+aclSsI3bcyEiEb
Vz6hzSf3Ha2/0vfYzEwterszId+0qBbVordv1JyzcgWh+7Ro3ye0+eS+o/VX
+h6bmalFb3cm5JsW1aJa9PaNmnNWriB0nxbt+4Q2n9x3tP5K32MzM7Xo7c6E
fNOiWlSL3r5Rc87KFYTuS/9eWlSLalFOb2rR3M6EfNOiWlSL3r5Rc87KFYTu
06J9n9Dmk/uO1l/pe2xmpha93ZmQb1pUi2rR2zdqzlm5gtB9WrTvE9p8ct/R
+it9j83M1KK3OxPyTYtqUS16+0bNOStXELpPi/Z9QptP7jtaf6XvsZmZWvR2
Z0K+aVEtqkVv36g5Z+UKQvdp0b5PaPPJfUfrr/Q9NjNTi97uTMg3LapFtejt
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
sOo7Wn+lb7CZk1r0dmdCvmlRLUr4c7WoFtWiufclfCerHFj1Ha2/0jfYzEkt
erszId+0qBZd9bUW7XxXaWMQelCLdnxCm0/uO1p/pW+wmZNaNNfpq3zTolpU
i2pRLdpxhRbt58Cq72j9lb7BZk5q0Vynr/JNi2pR2r+rRW+/q7QxCD2oRTs+
oc0n9x2tv9I32MxJLXq7MyHftKgWpf27WvT2u0obg9CDWrTjE9p8ct/R+it9
g82c1KK3OxPyTYt+mhZNe4DQQVq0//2selCLdnxCm0/uO1p/pW+wmZNa9HZn
Qr5pUS2qRbWoFu24Qov2c2DVd7T+St9gMye16O3OhHzTom/bouls0aJalNCD
WrTjE9p8ct/R+it9g82c1KK3OxPyTYtqUS2qRbVoxxVatJ8Dq76j9Vf6Bps5
qUVvdybkmxbVolpUi2rRjiu0aD8HVn1H66/0DTZzUove7kzINy2qRbWoFtWi
HVdo0X4OrPqO1l/pG2zmpBa93ZmQb1r0WRZN57kWzb3X6rtKG4PQg1q04xPa
fHLf0forfYPNnNSitzsT8k2LalEtqkW1aMcVWrSfA6u+o/VX+gabOalFb3cm
5JsWZVp05Totevt9NuesjEHoQS3a8QltPrnvaP2VvsFmTmrR250J+aZFORZN
ZKAW1aJpYxB6UIt2fEKbT+47Wn+lb7CZk1r0dmdCvmlRLapFtagW7bhCi/Zz
YNV3tP5K32AzJ7Xo7c6EfNOiWlSLalEt2nGFFu3nwKrvaP2VvsFmTmrR250J
+aZFtagW1aJatOMKLdrPgVXf0forfYPNnNSitzsT8k2LalEtqkW1aMcVWrSf
A6u+o/VX+gabOalFb3cm5JsW1aJaVItq0Y4rtGg/B1Z9R+uv9A02c1KL3u5M
yDctqkW1qBbVoh1XaNF+Dqz6jtZf6Rts5qQWvd2ZkG9aNHeDze9Wi26/n/Rb
p62iRTuu0KL9HFj1Ha2/Vj2oRZmeSfcp+TY/tbdrfrdadPv9pN86bRUt2nGF
Fu3nwKrvyP2VuMFmTmrRvme06HPfrvndatHt95N+67RVtGjHFVq0nwOrviP3
V+IGmzmpRfue0aL9t2veVzoDtagWTRuD0INatOMT2nxy35HtkbjBZk5q0dud
CfmmRbWoFtWiWrSTCVq0nwOrviPbI3GDzZzUorc7E/LtU7Yo4b7SGahFtWja
GIQe1KIdn9Dmk/uObI/EDa46Wou+vjMh37To9r7SGahFtWjaGIQe1KIdn9Dm
k/uObI/EDa46Wou+vjMh37To9r7SGahFtWjaGIQe1KIdn9Dmk/uObI/EDa46
Wou+vjMh37To9r7SGahFtWjaGIQe1KIdn9Dmk/uObI/EDa46Wou+vjMh396S
RVf3mDZDM8+16O0bNeesjEHoQS3ayUPafHLfke2RuMFmTmrR250J+fZ0ixI6
MW2GZp5r0dz3ufqW0sYg9KAW7fiENp/cd2R7JG6wmZNa9HZnQr5p0e19pTNQ
i2rRtDEIPahFOz6hzSf3HdkeiRts5qQWvd2ZkG9PsSjtHbWoFtWi27vTov3s
pc0n9x2ts9I32MxJLXq7MyHfyBYlv6MW1aJadHt3WrTvE9p8ct/ROit9g82c
1KK3OxPyTYtu7yudgVpUi6aNQehBLdrxCW0+ue9onZW+wWZOatHbnQn5pkW3
95XOQC2qRdPGIPSgFu34hDaf3He0zkrfYDMntejtzoR806Lb+0pnoBbVomlj
EHpQi3Z8QptP7jtaZ6VvsJmTWvR2Z0K+0W7zKe+oRbWoFt3enRbt+4Q2/+l9
R/CSFu3cKfl7IOQb7Taf8o5aVItq0e3dadG+T2jzn953BC9p0c6dkr8HQr41
f16L5n5fLbr9ZtJvnbaKFu24Qov2cyD981pUiz7RMOk+Jdxm+l4I76hFtagW
3d6dFu37hDaf0HdaVIs+0TDpPqXZUot2vlstuv1m0m+dtooW7bhCi/ZzIP3z
WlSLPtEw6T5d9UjzXgjvqEW1qBbd3p0W7fuENl+LalEt+vrOhHzTotv7Smeg
FtWiaWMQelCLdnxCm69FtagWfX1nQr5p0e19pTNQi2rRtDEIPahFOz6hzdei
WlSLvr4zId+a+2vR3O+rRbffTPqt01bRoh1XaNF+DqR/Xotq0ScaJt2nzW6l
7aZFtejqm0m/ddoqWrTjCi3az4FVx9E6K32DzZzUorc70/JNi2pRLZq7l9W3
lDYGoQe1aMcntPlaVItq0dd3puWbFtWiWjR3L6tvKW0MQg9q0Y5PaPO1qBbV
oq/vnM438p0+/R21qBbVotu706J9n9DmkzuO1lnpG2zmpBa93VmLPvcdtagW
1aLbu9OifZ/Q5pM7jtZZ6Rts5qQWvd05fWvkO336O2pRLapFt3enRfs+oc0n
dxyts9I32MxJLXq7sxZ97jtqUS2qRbd3p0X7PqHNJ3ccrbPSN9jMSS16u3PT
CbQ7ffo7alEtqkW3d6dF+z6hzSd3HK2zVsbQokzDrO7iifuQ31GLalEtur07
Ldr3CW0+ueNonZW+wWZOatHbnWn2o+1DfkctqkW16PbutGjfJ7T55I6jdVb6
Bps5qUVvd6ZlnRbVolr09o2ac1bGIPSgFu34hDaf3HG0zkrfYDMntSjfWlpU
i2rR/jeTfuu0VbRoxxVatJ8Dq46jdVb6Bps5qUX51tKiWlSL9r+Z9FunraJF
O67Qov0cWHUcrbPSN9jMSS3Kt5YW1aJatP/NpN86bRUt2nGFFu3nwKrjaJ2V
vsFmTmrR2+8w3a3kO33KO678oEW1aPq70qJ9V2jRfg6sOo7WWekbbOakFr39
DtPdSr7Tp7zjyg9aVIumvyst2neFFu3nwKrjaJ2VvsFmTmrR3P6ErNOiWlSL
3r5Rc87KGIQe1KIdn9DmkzuO1lnpG1z5Sove7k/IOi2qRbXo7Rs156yMQehB
LdrxCW0+ueNonZW+wZWvtOjt/oSs06JaVIvevlFzzsoYhB7Uoh2f0OaTO47W
WekbXPlKi97uT8g6LapFtejtGzXnrIxB6EEt2vEJbT6542idlb7Bla/eqkVX
+xOyTotqUS16+0bNOStjEHpQi3a6jDaf3HG0zkrfYDMn36pFCd8GIeu0qBbV
orlsWX1LaWMQelCLdnxCm0/uOFpnpW+wmZNaNLc/Ieu0qBbVorlsWX1LaWMQ
elCLdnxCm0/uOFpnpW+wmZNPtyj52yBknRbVolr09o2ac1bGIPSgFu34hDaf
3HG0zkrfYDMnn2hRsmfS3Uq+06e/nRbVolp0e3datO8T2nxyx9E6K32DzZzU
orn9CVmnRbWoFr19o+aclTEIPahFOz6hzSd3HK2z0jfYzEktmtufkHVaVItq
0ds3as5ZGYPQg1q04xPafHLH0TorfYPNnNSiuf0JWadFtagWvX2j5pyVMQg9
qEU7PqHNJ3ccrbPSN9jMSS2a25+QdVpUi2rR2zdqzlkZg9CDWrTjE9p8csfR
Oit9g82cJHyfzX5vfhuErNOiWlSL3r5Rc87KGIQe1KIdn9DmkzuO1lnpG2zm
JOH7bPZ789sgZJ0W1aJa9PaNmnNWxiD0oBbt+IQ2n9xxtM5K32AzJ9PfZ/pm
yd8GIeu0qBbVordv1JyzMgahB7Voxye0+eSOo3VW+gabOalFczsTsk6LalEt
evtGzTkrYxB6UIt2fEKbT+44Wmelb7CZk1o0tzMh67SoFtWit2/UnLMyBqEH
tWjHJ7T55I6jdVb6Bps5qUVzOxOyTotqUS16+0bNOStjEHpQi3Z8QptP7jha
Z6VvsJmTTZdq0X7WaVEtqkVv36g5Z2UMQg9q0Y5PaPPJHUfrrPQNNnNSi+Z2
JmSdFtWiWvT2jZpzVsYg9KAW7fiENp/ccbTOSt9gMye1aG5nQtZpUS2qRW/f
qDlnZQxCD2rRjk9o88kdR+us9A02c1KL5nYmZJ0W1aJa9PaNmnNWxiD0oBbt
+IQ2n9xxtM5K32AzJ7VobmdC1mlRLapFb9+oOWdlDEIPatGOT2jzyR1H66z0
DTbzTYvmdiZknRbVolr09o2ac1bGIPSgFu34hDaf3HG0zkrfYDPftGhuZ0LW
aVEtqkVv36g5Z2UMQg9q0Y5PaPPJHUfrrPQNNvNNi+Z2JmSdFtWiWvT2jZpz
VsYg9KAW7fiENp/ccbTOSt9gM9+0aG5nQtZpUS2qRW/fqDlnZQxCD2rRjk9o
88kdR+us9A02802L5nYmZJ0W1aJa9PaNmnNWxiD0oBbt+IQ2n9xxtM5K32Dz
m9eiuZ0JWadFtagWvX2j5pyVMQg9qEU7PqHNJ3ccrbPSN7jKTC3afyPad6JF
tagW1aKEHtSiHZ/Q5pM7jtZZ6RtcZaYW7b8R7TvRolpUi2pRQg9q0Y5PaPPJ
HUfrLFr+N3OM8PdM9ky6W8l3+vS306JaVItu706L9n1Cm0/uOFpn0fK/mWOE
v2eyZ9LdSr7Tp7+dFtWiWnR7d1q07xPafHLH0TorbQYt+lzPpLuVfKdPfzst
qkW16PbutGjfJ7T55I6jddYrc/4LuJdV8g==
       "], {{0, 224}, {224, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{224, 224},
     PlotRange->{{0, 224}, {0, 224}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzte7GuRbuS1BNIiAyJlARCUsjfiIRooiEiQXpIEI2ENASIkB8hJOAT+Bo+
gZyEGW0klubQW1WnquzuZZd0r85d8rbbdttdXe37T/7tf/iLf/93/vCHP/zH
v//X//qLP/2nf/FXf/Wn//yv/t7f/Me/+9Nf/vN/9pd/96///J//95+/+ft/
/fm//rP/8af/8sd/8Of//Y//5p/+7z/+13/5j//43/7hP/oz5Dv7W7YNMi5r
Jzuua16u7+xerPwt2yfbj8tXXf2vXB/X94QfptckvS+Je2blWrnuCmU9XT6c
PlOuv11xZNf9mfD/xBlcGTvSsTt9x+5ac6XNHwo821dtkN+6zvWzf8R+pH06
jiDriXxH+kfmlfhttW7IXJB+XL7q6n/l+rh8CQHrh+w9z66JyzZlTdh7prIt
sVbKWUNsTsRHZSxkTZT1d3HaxFlw3Z+uuOnaR7bPROxg7Ul/T3Bsdo7KHaJA
2ceqTSK/S8yxas/6g7I+ym9dua2S17A5DpuLsXNH9pHNcZS4g6xPwh+QfhQe
yNqjxBTEtvQdUgEZS1krRU9g7VG4FrvOiTOl3JmuO4Td38T96crFqnGr9VH2
hf2ezj0TNlfjuuLdLvsVpPMXJb9znR1X7HOtj8t+JbdV/Mp1f1Z9uuIy24a1
U1mfhD8otlVzZ2M0e5YVjor0n87lXRog0v/zu8L3kH7YfI3lY4htVRt2bV33
A3uHKNoXu4ZI+4SeU82r+q7ohErsQOalnGXke7WGSrxj/3bZr2BljFb8wfVb
pE0i91e0AnZtkTVRNPaEPa67AmmP9KPwsYQ+UNnAfnfpKom9ZnkOO8eV8Vfp
X/Expc9ne6Vuoviba75V/ytzENZ+5UyxtiXWIbFfSP8K/2fHddlc2cb6iase
sfLOrObCtlf0w8S4CtiYi/w2oX0lfIxt47LnCXZ/E3EZaaNoI9V8ke8VFP2H
XZOE/ua6t106gIJEHsTyc7ZPRWdQ8oj0fFmb2T6R/qs57rJNaYMgcb4S2jXL
8Vw2u/QrxE7XXdEhZ1FidGLN2TbsOjy/s/azOrkrR07n9Ql7lP1duQ5pLQtp
z7ZB7HdpU651YO9ttn9lHXatj9LexQmVu0vZF2V9qrkk7gol3nW7z1mkNY3n
d1cOksgFEP9X9CvWTtcduPLOdNVk2TVMc2wWrpjleoOh5HreldlrT7d1QMDm
I2kdL6GbKf2wYyk5XVqfSWgObHtX/KraK3p7gg9X7dN3haJHIXPsdo/twq78
N3HXsTZU9rv6Z3lIOl9Tzo6SX7jqei4kapdKjp/mGCx22dNtHSqwZ39lDuvS
zRLal4vnVPviumcS68OOpbRJ12jYuyuhO628K1z2J3S/6ViZ/yLtXWfQdVez
/bs4TOLORGxg+1d4KTKuC0pMr/p03YFpv0Xg4jAJv1q5DghY7sTaz+awigbL
zlfh2NU6VOO6eC8yx2q+yvoov2X/RuKRoo08wa65i2PsuisU+13n5U1Ymf8i
7Z9tEnUr9q6u1i3hS+m6W+JOVnSVDrneyrtX4Rsuv2XXhLUtkbfuWocKLo7N
cgakf4WfKN/ZWpKyR+zdu5LbIH2y39l7I2GzwiddNrPjuu4KxX72XK+8xzog
fb+5cjf2PCqxfqUvJWIBy+eRfU9oNci8EkjkR8odiPSp+K2yJsoZV9Y5Pa4C
1zlC1kHhEkisZM8pe08qdyDSRuEPVXvW36p+kP6r7y5/TuixLp6PjPv8vuuu
UM64cl7S99gupO83xW9d/NDFx1b6khILErpHNdbKWJAAu24uTqjkOIj9VRt2
TVxrxfaTHhdZhwoKR6rg8rGqTzbHQeai5Guus5++59k1Z32DPePId8Ue5Hv6
blfyl8RdodzPij+kuX0HKPkdG1sT+uqzPbt3ibtC8SWF/yvroNwnac6fgKI7
IXayflvZ4NKHE3zAlZsnYpOyDiuhxPf0mU3nvwn90HXPs3N35RpVn2kOz84x
fbe7dJIEb0zwQIUDdLjHWCQ4iZJHVH2y35U7p2rDrkm3WgkbX1idJM35kfkq
UPThtD+77pkEH3DlmMpcXHlBwk4W6fwu7bfKXFz9pzXJdJ6FxOIEh1fucNfd
7sr9n0joYIm8m+Xwne8xBK78TrlPlHqZKz+qkMitVtZKVt63rrxyJdh4jXBU
lz+77swEf2Zjk2uvlXGn+GQiv2NzdqXOy87FlV9X83Ll+yvjvsu3lbmzmoxr
XCX3R9okNEYXp03MHbFhJVxrrpxNV87oyo8UsPlgIi673ie4amcTc7HEmiBj
VW2QeylxzyPzUsZF2rv62XUnsEhrbq68JmGnS+tQOG0iR6vGQsDmSsrdm8hD
lTkq95Irl2H/dvmJa+7IfHfBtc7PPleeTYVfKeMi/bN3natWwn53nanpudgT
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
24vvUGIrorkh94MrvrP5r3stv4F9X5Sw06W1JtBBf3DdY0p7pB9XTFzJb9n1
UfxwV2yaGBM7nLsKrvVU9JDOOfvJ6Oy3F9/hqhWyHBU512nNlm3jAjLHNCdk
OUwaCu9C+lGg3GOJN6KJWkD1PbHmK2PErtg0JSZ2PndPKOup3LG77ueL75ji
txc40jU75Dvbptt9XiFR61HAatQrgcSRDvpn9d2lcz6/s1wX6bP6bWLNV+qf
u2LT9JjY4dw9oaxnQtvslrNffNDNby9wKGdq5Vu4ymbl+0q47kPFBuWudq0D
YtvzO+tjaa6u2Mb2n85Zdq15Bx0yHZumxMTO5w6xR8kR2LlX/Vw+sx5T/Pbi
O1gdzKVnuvY9zXUVsFqHS1ur4OJFaXTIL9J65koNh52v8l3pPz1WOjZNj4kd
zh3Sv8I/FR67q1Z18R3d/PbiO1w6mOs9m8t+tk0aypslly6k1P66rSHyPTGu
i7ev1HCUvUuv+Ur9c1dsmh4Tu+X1aZ2frfela1UXv0M3v734CSWeKnym6j9d
v1vpewqvS6wtW/vr8C50V37h0jmVfUHsTPh/es1X6p8VOuQyK8dl0Tmvd91L
rnyc7V+d/0WNzn578UHi3CF8JmG/a14u2yoo79iVtWX7Yduk17BzfsHa+Wyf
0HBc/r9yzXfpn7tymSkxsdu5c9Xpqjmy+Tgy3w730mno5rcXP+E6d673oq65
sPNy2VCBfaugvHNg27vO6cn5hVJXdWk4Lv9fuea79M9dsWlKTOx87lzvXpR8
PKGL/m41Lp7o7LcXH7jOXQd9TNFtkH4SSKxnuk7UocbUOb+o7Ky+I36b1i2V
fhJrnuZju2LT9JjY4dy57j0kv2Nz7W65w8UHHfz24ieUc8fGKWRcFxQNKmFP
BZaHIHuRqBOxWly6ToqMtSu/cMVElz8kvifWvJv+mY5NU2Jit3On1OnS93/n
3OE0dPPbiw8UbSqhA6T3dxcHrqBwD6QfV52I7XNljalzfqG8UUHWvBoXuW+V
7yvXfJf+mY5N02PirnOn1IaUPJrF1T97onO8OA2JGtkuGyok6tEusNwD6Ycd
l9UHKqTvcwQd8gvWx1jbEvmdci4Sa75L/+zAqVaO68LKc6fUvqv2rvt/+j6e
hg7x4jS4tKm09pWo0XR4n+PSNtn1R767+OdKPj8lv0D0q4RtSlxmddrEvHad
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
/PYErKyddbNH4X4u3qhoiYpex64Vgm5aaKKuzXItlx6eru0ia5KuPyr+vEsr
Rr5PH5dF4twlbFO+K5iyj6ehs9++Ca5acCLHT9uj9Kn8rdjj0j/TZ2flewnW
HoWrKHvK9sm+kVB0bNYGl1apxN8O+ufK2DQxJqZrOgk7ke8KJu7jaZjit9Ph
ereW0GFW2uPSqZQ6JrsOz/asXpfYO5bDpO9VV86i8H+Xb6zMEdj2Lt7Ltqls
S8eIXbFpSkxMnLu0nSt54JR9PA1T/HY6kDjI8sBEPErbw2oyis6ptFHWeSUn
7PZ+oxpL8SWW/yMcbxcnd/mtK9dTtGjWZuWOcq1n53FdUM7dLtsSPHD6Pp6G
zn47Hcq7NWTNXTwkYY/CLRHOptic4G9pTujiM4l7FeFL7N+uOe7SOpT6AlsX
QPbC1U8HHTIdm6bERGWPkH4Stq3kgVP28TR09tvpcOlmym932YP0ydYiK7Ax
OhGvV3JChc8guqILLq5YzR2ZI7JuiM3K3JXaAXLfKvkg208H/TMdm6bHROV+
S9u2kgdO38fT0NlvJ4I9RwpPSOh+Cd6SiE1sTHTFa5fmxvINls8ouqILLFdk
8yPXHiXmi6wDMkeX/a74u1L/3BWbpsdEV71MQQceOH0fT0MHv50Il67oqru5
2id4i+JLSuxz1ceRdXBxQkUPTKwJAmVNlP6rNq66gDIWOxeWq7virKtGgPyW
xa7YNCUmrvR5xTblu4Ip+3gaOvvtm6DUnV3aGqtHIXNh7Wd9yeWTCU7OckhF
B0uvbeJcr8xrnkjUBdix2H5cujobZ5XvK/XPlbFpYkxc6fMuO5HvCibu42mY
4rcToXCDqh8Xz2T5pzIXl/blelegcHLXe4ZqbZF1QPpX1oS1Aek/0f6JRF2A
HYtt8wTre4k8Tplj2rdXxqYpMXGlz7vsXMkDp+zjaZjit9ORrjkq+ifSvzIX
l/aVrgm6dDnk7Cg+4LI/wZ3YdVDaI3CdizRYn0HuAWTcxBuVhA5cfU/Epukx
sbPPr+SB0/fxNHT224lI1xxZLqpwTmUurlhWtWHnrviwonMm8n0lf0mf34Q+
z86xssd1Llxg8wUlv0i0Ub6z67MyNk2JiZ19vgMPnLKPp6Gz305Ht5oj8j1t
W1qjQMZ16aiKNqXwYZeemahzIXyJvf8TOVoHrSN9LpRcjPVPl46KzD0dm6bH
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
O5cO9zbiV7vem1VtXHVzdl7d+NLKPWJtmxITL5//YPo+nobOftsBK/VP5b1l
1Q/yHemH/a1yD3SIlWm49lrxPdf+dtPWErmYC+w7lnQ+u2u/puxR55h4+fx3
TNnH09DZbzsjkbshvMtVv3Cdd4VXJ+Y1Ba69rqC8r2DbuPhzGivfm1VgeaaL
KyJ9dtivbntU2dA5Jl4+/8H0fTwNnf22A9JczqVJuv7+3Sr9BKvnnPA+x6Vj
P7FS10rz57SdbBsXXPmX4g+u9i5026NqXOX7Llw+//23U/bxNHTw285wcSRX
DYKtr+1695KIiVPuCmX9Fd0scWYT/DmBN+Vfij8g8zrhTaDLTuT7Llw+/x1T
9vE0dPbbDkjon0oNQolTu969uGLixLuC3Wuk/UodMs2fXXDZ0yH/QrSgaq9d
NqTXAbFtV+45MSZePv8TE/fxNEzx2w5Q1ifBA9mx2N/+dp3Qflzar2JnAuxe
p/MCpZ8Ef1bmwtq8cp1Ze55t0jWLbnd4tz1CbOsWEy+f/44p+3gapvhtB7j0
TzbvU/bIVctLg70HptwPiTeu7B4pe53gz2l/Y+vR3fIvVt9m3/kobVzotkdI
n1Ni4uXzH0zfx9PQ2W+7gT07rrwP6R9pX427ck+V896BM1dwcbyqDWuPokO6
+POuPGKKls6Ou5KPpdF5j6bExMvnv2PKPp6Gzn7bDew5csVuZI9cnGcXr1Pe
G3S7K1jb0rk/q60lfIn9LTtfBNO19A7nNI0OezQ9Jl4+/8H0fTwNnf22G1x+
6+IJlW2I/Sx/diGR/3a786s26bPG7p3iAy59NeFvrrpDByjr3Bmd92h6TLx8
/vtvp+zjaejgt92Q4D8KT1C0rA7a1Gl1kHRtWtlr5M5H/lbypmpcZO7IvNLv
zRJQ1nm37Sim7NGUmHj5/HdM2cfT0Nlv34R0XGZ5QtVP4s5H7HlTHcSl5bIc
EtlrF59k16HDm0+X3p6G8i4lbZuCKXs0MSZePv8TE/fxNEzx2+lI19GQt6O7
tCn2znnTPZB446rwRsRPXHNR/E3BxP/vQOFgE2No5z2aEhMvn/+OKft4Gqb4
7XSs1JdYjTGtTZ2ceybOUWK/XLp69dtd/lbZ0FlvZznYxHehnfdoeky8fP6D
6ft4Gjr77XSk62iIlsXGr5t76kicow5aolLfX/l2kY0pu2KNK2ec+C608x5N
iYmXz3/HlH08DZ39djrSdTSkPfLbxDucDnfOLrBcovpt1X8H7Zqt7yNjpe/8
le/NErYpuVuHOSLoYP/0mHj5/AfT9/E0dPbbiUjU0VitQ9FGXPrJabknG0OV
2vdK7Zr9bSLnWmmDMq7LNqS98tvMzDhM2SPl+y5cPv/9t1P28TR08NuJSNTR
FL2L1UZcNfEOd85KpGPoSi3RxQlZv0pouZ3ffrDjpu+BXei8R5WdyPdduHz+
O6bs42no7LdT4OJ4iobpyhNdd0KHOyeNRAxNv99A5sLyHNa2xNvFzm8/XDqn
6x7oXCPu8D5nYky8fP4nJu7jaZjit93gqoUpa+7SjtJ7/abcMx1DV+rkifq+
or1XbZB9Qfrv/PajshP5bUJDTqPzHk2JiZfPf8eUfTwNU/y2M5Q6WvXdpXcp
GkhC/3xr7umKoYn3G8jauur7ac1Q8efObz9c2nWiJpJA5z2aHhMvn/9g+j6e
hs5+2w2uOhrSJ6t3KRrISg1qeu6ZiKGu9xtKjpOu77NQfCOdW7mgaNeJflai
8x5NiYmXz3/HlH08DZ39djpcOlj1XamrJtqw9r8p91RiqLK2iX1J1PdZKHOp
0O3th+vNg6ufDuiwR9Nj4uXzH0zfx9PQ2W+ngK2fVr99flc0K0U3c+mTp+We
rIbJcrmVWpmrvr8Lnd9+uM6Rq8axC533aHpMvHz++2+n7ONp6OC3E8Gum0uT
rPgA0if7N2t/tQ5vyj3Z+MhyuZVaGWLnlPuh29uP9Pnq9nYCQbc9QuxEvu/C
5fPfMWUfT0Nnv+0M17qxd69SS1V4ToJjI987w6VvV+2VWrOL5ytvAxCbXXBx
sHTsc52vtN6eQOc9Quxh26zE5fM/MXEfT8MUv+0GZd0UnUqpmSJjVXOs1kHp
Z6IvKZzNxfnZsVj7WXS7Hzq8/di1v+w67Iq5HfaIta1bTLx8/jum7ONpmOK3
3eDiFcody+oelZ2KRoqMe3PPD9gcRNEqd2kLSpu0PbvefrjqBchvkX465IDd
9gjpc0pMvHz+g+n7eBo6+21nsLwC+e2zDXteKig6DMKfq3kh832rXyHrw76F
QMY6mec/sUsTTuzFW32jg25fYUpMvHz+O6bs42no7LedwfIK5LdVG9fbLUWH
cd0hSv/IHDtDWU9WDz+N5yNYqfsl9kK5B6b4xtVmc/Z3uGNX8sDp+3gaOvtt
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
       "], {{0, 
       224}, {224, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{224, 224},
     PlotRange->{{0, 224}, {0, 224}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
1fsxbtpgxTrZd8FqOGuPROSaihyJ1V5kPSfbiZyxjdRKyjpnNXlTM9VaffUs
iJYqzmayfuyk22oNV3yPy/KHrDYQX1eRY9x83qxzSZFnr9hHgdgIm+OxMUvB
/2edL0biYMV+DES31ee8Kt4Ru0cUueeJn0jfj811X/X8IznbyRYi39yzal41
nbOazPIbajmJgv6zvoMgOUYkviD3z9Ikmy9V8F+R51TwFsn3Kvq9bB6F5DCs
Zti/i6yh4jzj6T4393++8nvV57mQ9ajlmax/YHvU7DfNiK/IimWRd8T6gayc
LZLbs3kX8t6VdZ51rqrCb1TkJNV5DquNyHcQRP+Reuekf7X8PIt/NrdRsGt2
PVnf1xBfl9XDZ69hfxfxA1lrjthdtf+/GffZuiaLz+77P5FnYfd/In6S9TmR
WHbzW1tEwxHNs9wiumXPlb/CbA88i1uFnKTinqyfZ3ljzztkrb96H2YkP2fX
wO55uNkLrbZlxKexuVzWfZB1srkxcj27Hz6y5ojdVXwvQ95phbYj/GQ9+83n
VcNInZg185D1w9Vn+l5hNjaxdTHrD7vk8+xcpqy/W5GT3MxzIveP/G5Wrvgq
72L3EGZ9S2L7AxX5xiufxmo+UkOx9lhhX6z+I/YSeZbqXAvJParzXoV8T21f
XLWviNRZFb0d1hdNwgg/kbmUp/so6xyJua/8A5uTsDVaJM9BYlxFXM7KFdn8
KksbWT6K/ZYU+bsRnhV8GvLusmZfsPaIrI21EbavwtbdyDqRa6q/l1Xnt6w/
ZK/pzoMCZn1mxP9HavlX2nhlCwqxQ4GTm7MvqnOSiA1mfYvP+paR5R8q9B/5
XonEhdM/9ltSxDey50wV4nvEXiKxI2KP7H1O7yXLftnYymLk70Zsk7WLqXgz
D0jsiMR9pLeD6Hlb/1NhPqcaZn3jqxiKvK/INYi9RHK5yDURO430nVjeWBvM
mvXB+j0kp2Wf8ZX/rJg/zMYO1tbYdbJriHyLP3HLapJdQ/X3sqz8tjvexkPk
OxoSH5E6Met7YkcciVNTcVYuUR1DIzkJGxeQvROnNSN8sv8idor4Clb/WfsB
KnJ4ZD8be1aU9SE37YjN/SI9fPbcZVYfFcnBkG8NbOyL+I2s/QA3feykWG8e
vu6X2GvYb/eIvW/ItU7PfnPftTKO5BI3Y2jk23rkm0LEliveC/u7bG7MXs/m
YKzdsblKtc2enuWmHSF8IjVUJHYgejitOau/HeGt4rtGxC8p+NgNeBsPkZ4M
8j09UtdvyLW26Y31w2wucTOGRnIh9vsXki/djI9Z8T3ybZTlNutbJ3I96zNv
+vabdpSFI/OIkGvYPmSWlpA1RL5rsBqueK6Ij1XQ3s14t4GHLL9dXR9N7X9u
01tW3FSo0yM2xc4fi+zHqIgjET+AxMrIt+bquQERDSDavrkGhXN8rN4Q+0Lq
lJPtRK6JaClSf7E+gbXNV/Eo8iyT8AYeWL/N2kWE8y61ufVWFzere1nVNpW1
/5PtjWTFETb2IRpmr0diN7t39GbehWiyWrfs876yo5Nu2e9oEc2wuorETfab
IOsfIuuMXJ/lPzd8A93GA2tfbG6QtbZX+rfedHhANKDQN2b7dVm5EKuNihyP
jYmR/TaIL0JqWOX6JQsr5L2vbDASv5CYWHGWP+JbWL8aqSsrNON9aLN5YP12
ZP8Sy1vEFhS4td5yeVDuZWXF7pu9XDaOROJ1lgaQn0dmEXjfywx8ygnZ+MX6
HGQ9EbvIqh3YPTw3990h+byCxl5peCoPkdqtOu502e9nveXycNIDkjt16WUh
66nQANuPRdaTxTmbD0e+gbKxWEEzxnGds5o/aZKds/TqGxay/tPaXu27sz3O
5oHd53yz54n4hy45hvX2Gd7cy6qosyIxIvItsuLZs+b2ILF4876XjhipT9m6
j/2OrxaP2G9q7B6Y6l6Q7XEGD4i/Rfz8Tb2ddI5c3x1311uFn5zay2KfNyuH
jKwH4Tbrb1VoTOG9G9f5EPaaSd/dkFiP+MlIzI3EKe9DMw+s/Wbprct+P+vt
jp/c1svKmn+S1Z9BOETiGvu32N9FnjHrnsY6mOl3ou996ne30zojfU7v/7wf
ExXWqWDjWbNcTjpHfMgkn2C94bh7rRF5lupnz6qDIucXEBuPcDVJP5txlu0g
8ei7P9/gn6v3eyM4yw90x5t5iHwbZXW+bb+f9fYZJ917WeyzVD97Vh3Ergf5
u2zvOsKngjaM79gO+98Smvrd7RRbq/d7R3KDbTa7jYdIXEA42bzfz3qL+0bk
58o4sg/t5rN3tKlJe/mMc20HyVGRONX9u1vFs2fZ0bZ9aObhTpzK6nVU9EwU
sPX2dV1172VFarSse7K4i00hMXTSXr5tOKu/gXxfY/c8T/rudnO/NxvTFfi5
qfPNPGTpNou3qT0K6w1/7917WWz+g/jzimfvXgd5hsY8zNoOO78lovmO3wgq
7L36XFJHbrOwefhMtxHe2Fg8CW/W26ReFrKGyJ7nyN9FYneX3MwzNOZh1nZO
ekB0gvT3kDUofyOosHfkGSM8dOS2ApsHXLfI+SD2Gwry80nYevssvkzKlyLX
V9i7mt0hdQpSwyrXL8af2Q6bF7Gxpvs3AmV7n8qtedDHSJ9zai/UevssvnTp
ZSH5EssPcv8I7lIHeYbGbMzWGsh7ZGezs7/bEb+y9+7fX8zDDDxpv5/1Vhdf
uvey2NkRp2sqdNKlDvIMjZ04Umsg/oT1V901o2zv3bk1D/oYiR1d9vtZb2/j
i3IOz+Y87LfFiE661EHIOjfP0JiKs/SP2Bq7npP/UdZMF3u3PZqHVzwjvkXN
Xqy3+/FFuZeF9C2Redfs72bpRIHDCo0prMcY117WDGq2NkF+PkljCvau3I81
D/Pw1P1+1ltdfKm4j8I7jWi7InYocJilsYr83FgHR/QfOes6SWPe/6mj4c08
3OT5ZO+IXXf/Fm+9fYaVaw32nSK2gFyfFTsm1UGbZ2hsw5G6NXJNd40p27tC
P1YBm4f7fqP7fj/rrY6Tjn0GZJ3sf3OEvT/yu91tKiuvMNbHFd8XEJyV3yrY
iLK9d//+Yh408dT9ftbbHc0gP++Cs74VVsepLjxvm6GxDVd8X2C1wZ6176Ix
BXtX7seah74Y8Rvd9/tZb3Wa6dhnYJ+Lfcbq5+1iU5EcA7mPsT5mvy8gOon8
rY4a8/5PHQ1v5kENd6kfrbe69z6pl5XVP6l43u51kGdoGEds6uSfWX9+8u0K
nHSxd4V+rAI2D28579jjst7izx6JI2o6YTUcOXsbWVvHOsgzNIxZH1LhK6rn
9Fbwo2zvXb6/mId5eOp+P+vtMx4QDaj5z9OakTiI5JbVuZNyHYRwgvDZpX4x
jvuQip4kkstVz+mdZO/K/VjzMBsjtqlsv9ZbLg/de1nIe4zMfIj8XQR3qYM8
Q8P49H4rrs/yCQo+SsHeu/Rjb2pjMw8KfmPSfj/rDefhpIdJvazIPs9q/Xep
gzxDw/j07iJ9jGrNq9V0yvZuezQPN7k92UXH/X7WW65/7t7LYnMkJF5k6b9L
HYSsc/MMjc3YZ/rm2bvt0Ty84hnxCWr2Yr3V+edJvSx2P9jpmmr9K3MY0ZjC
eoxz9Yn4Rp/p07d3tVxdwV9t5uEmz933+1lvuf55Ui+LzZMRW2BjK4vVOIxo
LCuvMNbBPtOXi73/U8dfbebhJs8n20f8Rvdv8dZbPO4orAd5v8i7Pmmb/d2I
/ifVQZtnaEzFiCZ9pm+GvSvn6uZhBp663896q+OkSy+L9e1Zs7JZzUyqgxBt
dNGP8We25jN9M+xdLVc3DzPwtv1+1luuZpCfd/HtrP5P11dopqNNbZuhsRmz
tsP6lizbUc7x1OxdLVdX8GObeajQ9ob9ftZbrma697KQtUVmZVc8exebQvKQ
bTM0tmGf6etr7x1zdfOwB6vZqfV2/71P7WWpzcruXgd5hsYe7DN9s+1dOVc3
D7PxqT5VsxHrre7ZT36yey+L1Xa1LXSvgzxDYw9G+pY+0zfD3tVydfOwB3fZ
72e93eEB0YCa/4xo+9Ws7FOcUrM7pE5B8vaO9ctm7DN9d2zK+z976dw4V/9s
L0hh/dZbLg+Telmsbm/Oyj7hLnWQZ2jMxmwuh9QmyPXbzvR5/2cvnRvn4g37
/ay3r/Nw0kP3XlaXWdld6iDP0DBG9OkzfX3t3fZoHl75kEn7/ay3uH/u2Mti
4yP7jFlxs0sdhKxz8wwN4y/tpeL6yHoUtNTF3m2P5uEVz4h/ULMX663OP0/q
ZSnPyu7CYYRzhfUY12kV+XbAXh9Zj3KOp2bvarm6gr/azMNNnift97Pe4v55
Ui+LzasRnSD3j2A1DiOcV+QYxjrYZ/r62nvHXN089MVILEZiR/dv8dZbbqzp
gpVnZU+qgzbP0NiA2ZrCZ/p62btyrm4eZuBJ+/2st/uxRs1nsrGP7e1n9VFP
a+huU5F8XmH9xp/ZlM/0zbN3tVzdPMzA2/b7WW+5mkF+roCRvqXarOzuNrVt
hsY2jGjbZ/r62rtarq7gxzbzUKHtDfv9rLdczXTsZXWZlX3CXWyK7WV137dj
HLcdn+nTsfeOubp52IPV7NR604kpar0s9p2y/f/T9Vmxo3sd5BkaezBrO2x8
qdC/Wk2nbO/Kubp5mI1PfS01G7He7seUjr0s9rvhKY+N3B/53Y51kGdoGPtM
3zx7V8vVzcMe3HG/n/VWxwOiATX/GdF51vVZcUrN7pA6Balhu9QvxrgtsLVG
Vh/1tAblHE/N3tVydQVtb+bhlf7ZulVh/dZbLg9Te1lsb//Vt4AudZBnaOzB
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
PHW/n/WG83DSQ5deFvtOkWdHrs+KHV3qIM/QMGbfO6Klar+hVtMp27vt0Two
+JCO+/2st1z/3L2XxX43POWxkfsjv9uFQ8/QMEZsB9EAa2ssVsvxuti77dE8
vOL5ZL/I9d3xNr1t7mVl9Wqq45Qyh2q8Gb99pyfd+kyfvr2r5eoK2t7Mw02e
u+/3s95y/fPUXtap98L2aqqfRZnDCp6N9THSt/SZvl723jFXNw99MVJvIrGj
+7d46+0zrOa3s9avMCt7Uh20eYbGVOwzfW/5fBUfN9useajDU/f7WW91nHTs
ZbFrZuNjhIdJdVCkn6ywfuO4PpH+BnL91DN9XexdLVc3DzPw5v1+1ltcM8jP
1XCXWdndbWrbDI3NGPGHPtPXy97VcnUFP7aZhwptb9vvZ73FNdOxl8XGx1ez
spG1KdsUm59337djjPvSiuuztKpW+3j/p44f28yDGlazU+vt/nuf1MtSnpXd
vQ7yDI2dmP12wF5foU+Fmk7Z3pVzdfMwG7/yDwp4s96m9rKQ52LjRdbzdq+D
PEPD2Gf65tm7Wq5uHvbg7vv9rLdcHhANqPlP5LkivZrq51Wug5B8Hqlhu9Qv
xl/XAPK+fKZP397VcvVX2Dxo+pOpvVDr7UseJvWylGdln3CXOsgzNHZin+m7
Y0fV9t4xVzcP8/DU/X7WG87DSQ8de1lI31JtVnaXOsgzNHZiRJM+0zfD3m2P
5uGVP+m+3896y/XPHXtZrG+P1FkRzXSpg5B1bp6hsRn7TF+uHSm8U9ujeXjF
88l+keu74216m9TLYn07+7yn6ys0M6kO6r5+46/rM/KufaZPx97VcnUFf7WZ
h5s8T9rvZ73F/fOkXhb73fD0XJH7s1iNwwjnp38K6zTO1Sryrk/XbD7T5/2f
Ov5qMw83ef7uz7vv97Pe7mA1v33zWaqffVIdtHmGxgbsM32z7V05VzcPM/Ck
/X7W2x1Ouvey2GepfvZJdVCET4X1G3/2fn2mb569q+Xq5mEGnrTfz3q7rxnk
58pYeVZ2d5vaNkNjG/aZvjqsYO9quXoXnRvH7XHSfj/rLVcz3XtZ7Dpvzso+
4S42hdSw22ZoTMJsLsf2NE7XbzvT5/2fvXRufAer2an1dv+9d+9ldZmV3b0O
8gyNPRjRp8/09bV35VzdPMzGbCyehDfrbVIvi42Pr2Zld6+DPEPD+KSHiusj
61HzS8r2rparm4c9eNJ+P+stzgOiATX/iWhbbVb2KU6p2R1SpyA1rHL9YvyZ
HpB+RXV/o0uOp2bvarm6QozYzIOCD2Gv6Yitty95mNTLQvIllh/k/hHcpQ7y
DA1jn+nra+8dc3XzMA9P2u9nvX3Gw0kPk3pZyrOyu9RBnqFhzPYifKavl73b
Hs3DTW5PdtFlv5/1Vuefu/ey2JwH6f2ysRXRmzKHyDo3z9DYhn2mr86OFN6v
7dE8vOIZia1q9mK91fnnjr0spG+pNitbjcMKjSmsxziuScR/+kxfL3tXy9UV
/NVmHm7yPGm/n/UW98/de1nsO41ouyJ2KHCYpbGK/NxYB/tMXxx7/6eOv9rM
w02eTz4BiR3dv8Vbb/FYo7CeyDtl+72n67Nix6Q6aPMMjQ2YtR1WJxX6V6vp
lO1dOVc3DzPw1P1+1lsdJx17Wcg6X83KnlQHIdroqB9jPI5ENLDhTF8Xe1fL
1c3DDDx1v5/1dkczyM+7YLVZ2d1tatsMjc3YZ/rm2btarq6g7c08VGh76n4/
661OM5N6WWwv91Xvt4tNIfnDthkaUzHSt/SZvl723jFXNw97sJqdWm/33/uk
XpbyrOzudZBnaMzGPtP3ls9X8bGLbzcPM/Crno8C3qy3qb0sVsM3Z2V3r4M8
Q2M2ZvWJ+BDk+qln+rrYu1qubh724Kn7/ay3z3hANKDmP09rVp6VfVqPmt0h
nCB8dqlfjHENnHzCKe+K3B/5XeUcT83e1XJ1hXixmYdX+j9xPrUXar19yUP3
XhYbH1/NykbWplwHeYaG8en9Vlyf5RMUfJSCvXfM1c3DPDx1v5/1hvNw0sOk
XpbyrOwudZBnaBif3l2kj1GtebWaTtnebY/m4Sa3J7vouN/Pesv1z917WWyO
hMSLLP13qYOQdW6eobEZ+0zfPHu3Perw8L/OclGt
       "], {{0, 224}, {224, 0}}, {0.,
        1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{224, 224},
     PlotRange->{{0, 224}, {0, 224}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztmzGudUuSlRuQABMfhISYAdhUqcUEUOOAg1QIMFBLSI2BehBMgCE0HrPA
YQQYLbAxmAHdEsbD2EV871srd55zw3ilqKt99s6MjFixYkX+f+9f/rs/+jd/
9Q/+4A/+/d/8i//5o9/9hz/8kz/53Z/+07/+l//nX//uj//hP/jjv/YX5p//
3//+0v7b/+W//+Z//JO/8tt/9uf/6re/tP/WH/7z3/6df/GPf/t3//Tv/6On
Z56ef7Lpt8xvjf3W+qkPzd/pM43nG7HUWJvxQzv2Ur5txKSx2zGTiud2vhu/
GbxKfcvEv4nbBra3z8LsK/XOdiy9de4NrL7NDycxv4EP//nP/uw3/7//np7/
j//rf/7m3/6n//2b//rf/sb/885f/n3yfvr8ZJ10779cQ3v9T3578uHT+yd/
p/ZkDfR545On95iYbPhtsk4TezRnzb5oTE5+a+LcxAw9a4NjJt+N32icmHM3
eGvWloqTyW/peRmMomtLvdN8K7WXxrmnMLYRtyk/pOIhhUvUn0/fvaGXN3yb
Yukv3/N0Lm9pF3Rthi9N1tl+/qT+luKZ5lzoMyYf6ZppTJr+tx0zqfh/Sx9o
aHqpGDM8jWJdCrvobxtaUzsfjd9MzjbOqO2fSTyn4raN1Y0YM/FP8eGtXt7w
7Ybf2rWD9nEnay79rnk+pZVN4qHNRdtcheYj7Qsm35r0qpP+l8Z5Aw/bOd7Q
D42mR8/u6VttXxnemML2htZkegF6ptRvdL+mfzSYnPIPXVujj05hdSPGDBZN
9mjqVxt/2jbl0qnaYepsil8ZDmZ4YMqHJqdSfmhzGHPWT+9prPPpHKkPJ7+l
nNZoDqkcp7k5iQdTo2mtoT1RI5ZSvTbNtZSeSTW6drylOLmJ87YWTc/a9HE0
bt+qKZRjTHxl+jgTb22sbtjmfE3tmNRH409Tcw1fNc9TH1INJ4XDDQ2h0TfR
umDWaXySiqtU/UrFp8nNBq+gMfMUD6ZfMLFk+GHKz0bPpBrdhOeYeEvxtFQN
SnGYdj9odKGUH1LcoK0Pm7wwfU0Kq0/ak/NN1Q5TQ01s03U2ane7F5vkF43J
lG6QyotJbFBtyqyz4Z/G+1Ncot3nGl2X8jSqS5u+soE5bT9P/EZjjO6d1uW2
bma+m8LJtv6Tip82plFuYGpuo8ds9FPtOE/ZhvM3MM3U5cnfJ30TrWtUrzD9
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
yd/JjJ72qicxuYHhFFsmvnraL72/NKmb9J2m7txc600cmmdoLKXmeu37Iak6
a+J/gj805t/SrFL401gP7eUb8dDA5Nu0nbXXvs1O9fgpnDHzxwYmp/Y72Uvj
bgPVb6nmnOLkhrffVutvyGXKr1J+M/dDGvdwaOxNfEtz/y2tfoLtE/xJ4S3V
GRp9U4pPTnLH8PmUtnMDLq29No3tyfMNnEntxWByCldpf21m9JO9GO5q/J/q
/em87CfMp2hPYWo9tU/OF2ic0FnMJO8o92hoVobXTXgUxVvqk0bfZHr8lIbZ
4PM7i1/7m2yTFwZn2nOEBt+e4LPhURPMSemEVCehsWRqFj2Xk7X+NpvmWkNv
NOdu9jjhSFR7pzblySe1+tT8InV2JpdTPDB1J8GsM6Xt7Cx+7U+0G7NLOrd9
a47wVh866dOpnjnZl+nrJ+tPzZ4me5z47a1af9KmcdK4g9E498ke2xzGcM63
NGeD/5NnTD+SOmuav1SLpho47ZfNLL6tV6+99kk7Nbs0XO4kDqf4dqoPpT31
xOdmJm7eM4mriU8mPDw1978hBxucIZVrRvMxvMXc2zEchupmN2jOJ2uE0XUN
T6O1yXBX04PQ2kHP+qRevfbaDTulpxku99YcITW/Nn3opD7SGtrGZFrfaf0y
88HJHj+l1rfz3dzBeHrenDvdS4pLTHij0YTbmvNbMUN13ZQ2TvOdnvukJhrO
SXVmimk/Gd/Wvt+e4PaEZ5p7NW/NEVJ8m/Kihk2x1GDyBBupFtSY9afO5Ztm
VSbXUnFo6jXNO5PvlPOY9xjN+a2YoRovjZ+n85rohCk90Mx6KD80MUPj51vx
be3PslM1JaX5t+cIKb5NNZ+TZ9fwrZmTGgw3v6XvuaHW35b7Jq7oemiMUd1+
ku+U80y0Yrrmieb8ln5FNd5JbLRxfvKMiT2qz5i8oLMbqlevvXbbNjMyyjFo
P9vGDcO3qV508uwo/lDcNnxywmlT+G/q8m21/q3cN3WN5qa5E2jmuSZPU1zd
6ISUa6ViZvI8xZC37sNQPdDgnsmLxrzMnO/aa1M7NUOhOGz63xRuGL59Q143
ZqaNOjvhJKn6NeEShm+/VetvyH0aA+aeTIpD0rXR/iKlQZn8Ohl7lCsarKYY
m7pzRed6JjbMXlKaRkpbWHttY5sZisHDCaal5ggnsf1kXhs+nNKiDZcw+53g
fypHvlUTmGgyjX4txVVMX0zvpqY0KIMbt8WJ4WMp3djgs8HJ1L6oDxuzmFTO
rr12o562udOkphh+9Ra2N/I6NUNPaUrUDzQOJ9ib0mcm8XMDH2jkfqqXmfiT
9jspDtnQe2ksTWL+hro/iRNzdobvpTiY0V5MbFBMm/if4pLR8G/AsbU/yzb1
tMGdJjhgat9bPV0jr00NNfFg1j+pEQ0tq6G1pt55W+7T+mW4d6rfSfVBRu81
fJKu4WTdn8SJ6V9SuG04mNFe6PMmNkzPbupI+87D2j/TpvV0oi9R7mS4buPe
YArbT+b1pH6ZeDB7MTwkpWWltNanNadqwVu5f0MvltKWaR9keA7NX6MHpjSu
RpzQ/iWF26l3tmcZFIuMP1P9YOP5tdem9dTwEzPnnWD1W7h6Q17TGtrWLgwH
SGm5tEYb/kP129ty/4ZejN6xSdX69t0b2k/RnLohTiZ69c1cpT3LoFoNxdtU
/0g19hs0+bU/y6b1dBJXKX6S4qhtXDX4k8prOjOdYJfptWls0PhJzfQpNzD3
DE9qiYb7vTVfM1o37WXo7KDBN1JxfkOcTPY7+ftbe6TaC10n7bNMrTT4nKp9
b2nya3+WbXqrSV40+AnNNcrHJphj8CeV1yf1k1SvbXTFFJdrzD2NH27QB96a
r1H/m/yiPDaV7w396q06bmZY9Hzbe3xrlkFxY1IrU9g1ydNUv7/2z7QnWt9k
LmA0JcMtG3zAYLvBSZrXJ/WTlNY68TO9z2m4XIq3m9i4gVdQrvUWN0tx9bc0
HNOLmfU34qR9vif3RdeW4m+T/VIttN2PNzBw7Z9jm/6IcgPKb2kemXi+4Q5e
o182uErPJcXZGr+lvOWtuWfjXpmJvdu4WYq3pDi24WxGv2qszeBk43xPYu+k
NqVmGQYnJ1g00QRS/fgNHGbt77Ab/VRjFtzghw2N6y2cTOknKe5H72RSzGzX
jhu0mjavMHypzc1SGmBDP6SaVQOTG99tcJLJ+b7FpY2+kerNDZ+cvPPpedqP
34BLa3+HPdEBKDdoaEoNfpjqE9t2W6M2tYD29fSew2T9jdoxwd52n5LSmt7i
LYabndQAT3KeFCa/tR7KSRr9YGOPtJdszGUac39jT2Lghrnh2p9lG0yg3MDw
qEmcU0ye9ICTZ946u7ZG3f6tuceb4mafotXs/OvX1foJ1rV1ywYmn1zbJKeM
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
pTo5XdskrlJ+oBqm0fMNd01pyDfrXZO4mvC01Iy+zcEaeDLxySSe3+qv1/Y5
QjGc1oWT353kY3uuZ2wzE0zVhdRM/C0MNLU1lTu3zZqf4uRkPE9iqZG/hvtN
tEej8xst1PRTKW4zyS+jITeeb8Q2nb+YGT3lcu18N71GKk8p5txQ63+CnTrT
VK1vfJdqpClNtZ2/xs/0GaqZtPVqahvNzeyXYuzJWfPTd9v6v4klqhVPvku5
H+1ZKNdqzBdSmm0DE0zM3KZ30bhq18QbZhwpPGn0aDdwsJ9mG+yl7zTzEfNd
U+snmka7VzIzwbZN8YGeRdu3RoNK4eFkPSexva3/m/sVjV7G4FJKj0phcgrP
Ta/a4AyUO6Xy3cS2iatUTaTx1sbYBp6k+prVPM/YjfszpkbQWEp9l2oUDX24
kV/t9TQw8KRvaf9r4ofWEbM2g+1GPzyJXaZfmGiYb8XnW/0jxZO3OL/J5bf0
rlS9o3hC463R77fxpKGbrX3eNv0jxQ3Ts6e+S2uQ2Vcqf01tbeRdCgNPYgjV
Yyfx+fT3dgynsH2y5hv0f8PJjXb3Vo1r948pTtLm/Oa3KUxIxSqtd+04aWiS
bTxp6GY3cLCfZlO9xeBGo/6a75rZGd1Xe85IMcTk3VMMmBnHbRjS0P8bMWx4
Ziqu2hp1ip+0ZzGNXuwGvW7iQ4qBFDcaHKlhN+pdI05SfavJF4NFhnvfFjM/
zTb3Z1K1xtTfNscwz7fvtLTPxXDFFF69hSG0tzrJwZ7OguoDqbg6qf+3+ZKZ
xaTik2JyW6+bxMBEI6XxM+FRKcy5oebS3EnFSUOTnOSLwUwz47uhp1t7jj8T
HP7EOxV0L5PnDbabs3jrXCbaDsWrtzDE8Oq37hqlMJzGFa2DbY3a8CXqz4lv
G/HZxtXUrNNw/pRPTt4Dadip2Ju8f4LnRvM3fHiS10bnOdnTrT3HH4rhTzFw
2zlO1mkwlmJ7qqafPBeKb2/NUFJ3qFJcpeH/FIanasok127gSxQDJ75t6JYU
N05ynpMxP/HJWzOIlG3yehInk15+cr4pXmFib5JfVLu4IQbWnteRT8/3Rv01
/Zqpj+1zofhmaqvRP1P4n8LVCU62c7DBz42umzqvtkY0+e6E3578VpvzUA7c
qAUmzm/jGyavJ+cy0R8mfmv40PDtCf5TfLtNK1v71+HJzflOORKNVdPrGb+l
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
k3q+cQ+q0ROZtb0VJ2uv/a12e56b0lhS+pvBJeNPWh8b75lwA6PNpmbN5tzN
OlN6PtV8Uhy+MVNIvaehM6fyOjVHoPjQiL2Ufk75Ib1TZGqNuftBeX67Xqy9
9k+2UxoFxdjJ8yn9zeCS8afhPFTrSHHClMZCMd+ce0rbMXq+8TPNu9QsPuUH
qhWnftvO6xQnN5iZwpkGPzRz6jbnT/H8dr1Ye+2fZrc1CoPnRgegc9XJ3s0d
RVrrzX0kys+pTmI0lpT2kqpl5rdG85nscVLvUrP4FB9I3YWgMd/I6/Y8KIWf
xg8NfmiwulFrKC+lz5h6sfbaP81uaxT0u091M3XfbPJ3g3upetrWSI2GaTSW
yftT8y/K3yax8bSelIZp7tdNvktznPKByXmd7EFMXr+l0TVwhuJkSgNMzdBv
4/wUT9Zee+1fhzltrKMaoMEEM2Mys7CU/41GSrkf3VeqRzC1L1WnUlou5W+N
3076F9N70vUbTd70MqbnvUGjM/lo+gWa46YumHg+aad8tfbaP81uaBQU6yZ1
kOJ86m6P4cBPdZPW05RGaubjdHbciEN6vqZnMfNcumaj8zTemfKn+VZK26S9
m7mjaPaeyh3Ty6R43YTnT3Bjggnmbsnaa6993ja8hXIAo4+ZWTDlALQOUpw0
9ZRqm6lzaczWTRxS22hTbb2FcgDKH1LxbPyZyp1J/FAO1pgjnNToGnecDFc0
90+M/ykGrr322vfYNGcbusdTPTI6m3n+Lb5t/N/Wo0ztM3FoznGijU/mrRPO
Y9ZGz4WuP6Wd0lnDZA2Gp6V+a/px6ue3NDqjA5sakbLpHm+orWuvvfbvr4Om
bhrdY1K/jB5L64LBwPasbcJbUufSmK3TODSzTloTU9qL6Vmohp/S8Sa5Rtdp
NHN6b8f81sQb5a5vaXRGB6YYaHTsCa5OzvQkdq299tq/LpeNNmL4WEPDnGC7
qb+T9TdmbWaOT8/FrCcVh0/PGL33qSamtBeztsnztKeg9xWp9ks5JI1neu4T
7jRZA+X/JvfbGp2ZcUxihuaU2UvKtzuLX3vtd23DzRo10WiYhldQbtzQcFL1
5envJ3lyqqZQ/jzRhNvfMlp0Q6sx+tuEg9G4SvHw9ux+gnVPf5/k/kmNjs44
qG9pj2M0B+PbG2ru2mv/ZJvWC6qHpPCQ1kejbVK9hd5hM/em2lzuJE+m9c7w
Z+OHxrcMt6dxQvM0xcnp3xs83MzfJ30EzXfT+xh8MOufrCeVC1R/Npi/mufa
a5+3U/cezUxqgocUW8xs0ei97efbXG5SNxs8OVW/TE1J1V+z97YGntK76Jpp
r0dzgXJpilcp3DvJMycxkOqpJ2c9sSdxQv3Z7uvXXnvtX2dTPKTPP9Um2sM2
+uvUnMjMgBoaY2qmTDlYIyZT3CNVu0/q0u1vUb5N88hohqlcmOjVT88/rZni
nukBT2K+ed7MuCe+ovFj8GTttdfu2RQPab14+ntq3p3CkzaPNRpsioeYmXKb
J6fq12312uRgWwOfPE/jrdHrGU4+wSuq2Zr1pHrARryl+gWKOeYe6SRfbsaT
tdf+aXYK86lGSmuE0VgMDjf4Sco2tWai/0zOscGTJzXI8KKT9TqVg5Qj0fxK
+ZDmkYnzlFY/iefJvibroT1+gxel7kkavkcxpz27eQtP1l577Tl+pjCcYpGZ
+5v7q+36a2rHpDYZ7md0iRv0uhvqtdEM6QzCvN+c18l7pFS/oryxoa2l7gid
vOPR7oVNPKdmN6t5rr32uzbFdoPhVP9M8SL6d8Px2hysXZvo2bU1nLZe167X
NAfNd+n7G/rqJCZPzgJu0NYaGl0K800epXKc9ixGR6V1Z+21187aqbpAMTxV
c6kWYeZolOOl7gNM9pKqTZSfmJp7g17XrteTc5/waqMTmruOlOfT2E7V+rfu
KBqt1Wh0qT4u1SObHDdnNNlj+w7D2muvnbVpbaWcgWKFwUzDXSnPof049XOK
z1OOMal9lM9P1nZSr2vUazNXTd1/Nvf3aL/5li5NfdLW1tr6LcVhis+TPDK9
8OSOSooPp+7DrL322vfbKT2T1s2J7pHq92nP3sbVCR8wtdtwAFrfT+p1jXpN
NVLDCVOch/JMWuvbOEPnF+a7E75NY4/ecW3gcwqTU7WAvsf0C2uvvfbn2maG
2KibVA+Z4Bvt2Y1emsJweidhUhMn7zGzdaNlNWoNrWvG/ymNNJXL9LdtXZrm
WmMOS7lZKv7NGZkemcYk9T9dG43/ncWvvfZ326kZ4sl1mpm44bcUS1N3Ag13
mmhu5q5CQ6c1tYbWtcl7zF7MTLltpzTtFObQ+KR3FCfnMvmtyd8G7j09P3kn
jdWTd0t2Fr/22t9nTzDZzNAb6zT3Es28L8U5U3y+oZ+ktL5UjW73FyYmjc6T
mlc21t/2YUq3pDli7rqkepAG7k1628l/NFbbd0tO+nnttdc+YzfuFhqeMFkn
rdeGL1HsbXDOBp83nMectakdDT32pG/pWZs8TdkNH5r7BhOOlLpfkeoBU7q9
wduTv6XYmIqTncWvvfZn2SnNavL+xpobs/XUe1LzqRSfN3e0Jn9/q0abu5dt
336iztP24YTnTNYzyalJ7FGfTOKzEWOTczcxk4o3ymkpzp/UPdZee+2sTXkI
xaLJfMes2eyR4nljRp/CdsMlzLyMnnujRtN6dNK3Rje7Tedp+zDFbdqcnM4m
DOZQLDUadUrfNjOmCW4YLn1DzV177Z9sUx4yqY8Gb9vzF4N7jRk9rV+0BqVq
N70/Rs/RxAz9+1u+pWu4TeehPjn5/ElOTjFhgqWT/Zq7Kydtgy2mfpl7rTfU
4rXX/sm26SXpzMvkfkqve2tGb75leA6t3bSepuJnEjMT7trWTCa+bazhpM6T
0usazxuORDlP6u6BwTp6Ridtqgmk4jOFSzf4cO21f5r9VLsnvaSpj+bfF0y+
a/5dhtHint4z+c/MyCZ83mCy+S2NH7p+o0s3fGvq9SQ2btB5qD6Zen6SL6kz
apz15CxOnmPKbui9qVrwdBY3+G3ttX+anbq3T+upwYr2fb/GjH6y38bMi861
jX578m4wPWvz71wMr6Z8lc5w39J5zG+N/mnyOsXlUmdNe+SbeZTpJWmM0Vpw
g3/WXnttj/MUc8zdUbM2yhkoN6A+bNeLBr+a1Fy6NnPPMxUDhhuYmDS9WKoH
uYGfUP3z5P1h2peZvi+Ft2/ZE9xOabaNvFh77bXftY0m1r7rSNdg6rv5twlP
Pryh7pu907o/+S7V1eka6Kx/wg3o3o0O/JYm2bDNfRXKH8zM12CX6cFTWHcb
npjcobWJxuFtHH7ttX+abXrw1JzLcDZ698/snc76KYdp21R7Sa2f8v9UHaTr
T+lO5l7KDZjwVkxSTJj0FKk7Qifxiv72LWyheoWZlaT2a/y/9tpr92w6E59g
MsVPqlekMIpy7Mnfb5idUY6dWr+5l2U058kZGS5huAqNk2+1KT6Y++f0LExP
avBqsv4Gx3sLTyjfM/Mp4/+11167Z7fx2dSdCRaZGfqEh9C/33wfnuKtWb+p
R1Rzntw3o3XNrDmlud2ADyft1H1Ik1N07tPQ1d/ieG08oc/T3m3Sp9ygCay9
9k+22/hM339SX6X7mvAiinsntS+qy1H/mBgw9z1o/TX3geka6Lco9/4JdruH
fcqRSV4bvGpg18Rvb+EJfZ727ylOvvdh1l77Tptiqak1DX2V1oiUdkd1sFQP
Tv+tx0Q/nPjWxNKkFpy8D0zX0Oh9bsj9t3CG5gLtNUxfSftNGnsUH1I9ZgpP
JnFOc2fy28Z3b8iLtdf+afYEn02eGg0qpa01OIPRwdraF51Hp/C5we2f9mV6
ATrLM/xh0tP9hJngJM5pvtMYoPp5e8aRwiXqQ4MnlBvTvtLcu6bf/Wk5uPba
N9up+zPtu5ETbY3WxAmOmdrRvg9P54a0FlB8buiBphcwfZBZD+W6OxP8/fk+
8X9Dw0zNOOhcoK15TvZi6gjFPTMja/z2hvhfe+1vtU3PaLiZwfbUDMWsrTGn
Nudo6i/1z2SObzSKdi8wiWfDH1Ix9pPt1P1Aw0NSM44UNp7UPE0dedrvBCuo
P1M4sDm49trnsT2F1QYPqc5G64LhD5RjmNqa4q5mrv3kn0k9pbXAzDonZ0Q5
A90vvSeQiv+fYNMYuGE+bu4VU9y44Ywm+zLxnOpPzRz/Bj+vvfa32intqLGG
1L3KhnZqsMvMp2gtS9XcCZ43tHEabw0NhHKJlG5zG99o25RLmLuFqfn4JK/b
d29urh2Gezd07E/Ultde+5ts0zO212DwoTFTo3WH+nCioU0w/+m3E25sOCSt
synNORXPdA5I90h1m2/iJxO7cceP8iXKqQw3m+T4zfYk14wPDe6l4vAGP6+9
9jfZjXtQ7TVQfEjdEWrMwWkNMvdvjU8aNf3meDa8wvjzW/mJsVPxNuH5VEc1
2mkql2+uHRS7Ur76aTmy9tqfbjdqbmoNhvtN/qMa5gSTTX0xdw6N/mn02Ent
OFkXTHxSXmH8aer1zfzE2CZ/af814ZymZ0nNi284F+rPyfPmftTEt9+aI2uv
/em2mclOnjdrMJxhgnWGs1FcTdUayl3pOidnZGp6uy6k4pP6p3GONK5uwBNj
m/yd9GuTXsDcCW/cAb5Z06PreeoXUtz+W/Ni7bW/yU5pfe27fCl+0vjWZGZk
1kl1M8ohJ/rkRBdqrLMdz0/PU/8YvZf2Pm/dx77BbnC5CaY98dKUpm3e+Zam
Z+4nNPrun5wXa6/9TbbRP29Y/0nb3I2ktW9SQyccks4c6VzSrLMdz9TndA5o
/JPS7W/gJyft1B0Po8uZM6VxcoOmZ7TiyR5TGvVPzou11/4U+6TG+On2BBsn
z09qX0qroZhsOCddZ6MuUM3W1DKj55heY/LOG/KlbZu7fymeSc80dV4ne3+j
zaZ047f8vPbaa6/9lj3hhE+4SrkcvcNmamhKx5vo5Kn7HhOb8urG3QAzrzfc
4CfMJgyHMbqcwYrJGU3Oi86g27hH5wLmToK5G/MT8mLttdf+Ptv82wejSZr1
0JqVupdF+UCqLqRmdqm7ASZmKDd4+u7k+U+xKReiuneKk6TyPTW7b+OeeT6V
pw0/r7322mu/ZVPtLjWfpb1/qmaZe1mGM0x+m3p/+y6liZmn95i4vSGPUrY5
L3OP1/i8zX/a8WN4PsW0k7h6Qzyvvfbaaz9hVBvTGpzW1HG6HsP3UudFuVzj
LqWJGVrfJ2toz2RP2vTs2nOH9jlSn9A7PyaGU7418xSDq2uvvfban2IbPcTY
Riek9zANv5rUR/pvECY2vT9Ja5+5M2b4fHt2eUNO0Xg2/UVq7jDxeaNPpJjQ
6E8b32rceVh77bXX/nT7E/HQ3Msye5/UffrvrSY1i3Iteg/wyW9P7zR3Eujz
dHb5TbFt+PzE/xN9z2jpDd5FZ+WT/nTyn/lW6s7D2muvvfan2584u5xogOaO
lvm3rm0tKKUNTrjrDTXU6Lf0fG+wU3ze8EM6azbn2FhnSktv38P8RH1+7bXX
Xjtlf8rskmqM5t+HUk3V7GXCN+hMn/LGyTpP1lC639S/Bb4htg1PTu2L+q1x
76Wx30m+pHqT1L/hWnvttdf+JvvTZ5cTLYXeo5vUEcr3GuunGibdy2TNNK6o
nxv9xdO3boht0wNO5sUUE6imau4em3XS/bZnEybmP0WfX3vttddOYd2kFtyA
jRMtZWIb3kXvWzbWb2r6ZC8Tjk3vP9CzTvUX5q7jyXh+Wtskfia/Td0nmXyL
4gZ9hu6Xapsne5NPmT2tvfbaa6ewjt7vukEfaN/pov92IOXz1Bx/8nezNsMJ
J3tp8HMaVyfjmfaAKS2R8snGfY/UOZo+i+ZFqjf59NnT2muvvTbFusa/nz2J
jXQ9jb1Pau5begut1w19ktbQRr9j/HlS76I8x2iJk7xocDkTY/SuL82LiU9S
vcmnz57WXnvttSnWUT45+fvJ2WVDYzF7n9gpbXayBjofN7xuwl3Nv1dK9Tsp
XtfQu+gcOaVLp/TGkxqd0dgnuEFzNtUbfsrsae211167geG0vjzV6wYe0rpP
NUaz9yd7os+k9Baj5dL7BifvB9L+YqKPUV6Xim3K+Y2+R2OAnsWEy6V4O40B
cy7U53SPjfnLbf9ubu211157guGT56luYL57g232Pvn3O4a/UX827nw+/fbp
u6n7gRM/U95IzyUV25Me0HBgqkubOYJ5fhK35l6BOYuUVvxNs6e11157bYPh
jX9Par57g53aO63FKd/S/U74yeS7E95itNyUn81vG9oXPS+qkZoZfSPHU/cl
aK9B71WmtOLJvj5l9rT22muvbWqWue+Xul/3idho9N7GHYCUpmR4Gj1Tqh+a
2fTTfif3HCZrNvzN8NUGX0rFoeG9k9l3Ki9oTzGJpTaG/LTZ09prr/25Nq1T
9O4TvV/XmF22baPtpO6kpeanT/YkBiaxZOqm0RWNvte4e5maoafuOafuBBp9
dRJ71D80L4zG2NDGd/a09tprf5Od4kgT7KL3o9pz5IZtdOMJr5uco+FRqZnj
hJOYmk5r/aT+mtxJxQD1SSNuzZ1AwzOp5ty4L0H7C9pr0Bje2dPaa6/9rbaZ
Qxku2vjuWz40unHj3wWkuI3pBYwe/vTblK54Q35N+ovULHUSt5Qvmbhq6NLm
vsSTbe5kGm08dffgp82e1l577fttM4cyfKlx5y01K6R2Sjee+IFqHROuYmr0
SQ188v6b+5HG3JlyJBqTkzihcUjXNnk+pWea852c0dMzZj6ys6e11177U2wz
n6V3z8wsj+Kz0QmNbfRbU3MbmhXlIan7GCndm+qKN+TX02/bmuck1+h+6Vze
rDmlZxpuPLmjMjm7Ru78tNnT2muv/Vm2uStl3t/gReb9jdo3mXnR7zY0KzrL
Ts1GTd2kcXKyH5nEofHt5D00hlN7bOdd4w6tudNi+k26r4Zu8Omzp7XXXvuz
7ElvPuEkZp6b4kV0L+3aR/Hf8If2e1Kcp8FXJ3FCOUA7v2iMGZ9P3m/mpwYf
UjbVuie6Pd3vxLc0HlL3B37C7Gnttde+3zZ6y2R2YzCQ1pfUfDNV+xp7n9RB
s/7JHDD1/hRfNc+359eNuXODM1Nu/7R+mpuNmTuNgcbdEtM3PXFUGkuTft/E
1W2zp7XXXvs77NQckGIg1Qfe4pmTPab2Pjkjo1mZe2v0/bRmGa075ZMb8rGh
4dNe46RGl4pb8+9uDM5Mfjt5vtHXt+/kUDy8Ib/WXnvt+20zBzTz1sZ6Gn4w
e2zMwiZ7afif1taJvmT+ncUnai9Up6L62KTXmPw2pdFR/5g8orMb0y+b+Xuq
r09h482zp7XXXvvn2Kn7Uak6dQPHODnHp3WKnkuKJ0xqq5lpGp3nhjxK+ZPG
CeXt7bs3k9yheNLoTVK8l+InXU873pZnrr322m/VvkkPbrBxguffNN+he5k8
09BpUzpbu4bSmewNMUD9meJsbZ4/wYfJ3ht3NZ9+S31I/Tl5P9WcUz0jvdsw
+fvav9/+P2CwJP4=
       "], {{0, 224}, {224, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{224, 224},
     PlotRange->{{0, 224}, {0, 224}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1j1KxFAQAODggljpCSw8ggqWBgsvsDa2EbRaEFZFPIiNlxA8h4fwDJZW
7oKFIgtZ3ps4wa/I8m14mQwz7yd7F9fTq42maW62Fj/T7v5kPu8ezjaXfy67
2eHBbLLg29e19Mdkv915PWpvH3fb0/Pt9vn96fjlrvvh72NWedX4Pvf7vHfI
OOvGH7JWJff75FNSz1q17ZNzrfgl+ZeMiYiZYc7U6l3JGh/LWojoxbr1r9Xr
iBwi+hsdP3pdR7vWXj3k+V5rL4rYH6LPlAz75JB9LInzH5ytVtnyGXvOtb43
omP+Vf0zP5t5Xg05l7LlnKG/mdd1hp7KbVxnSoZ3MTMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzM/NvfwIek84y
       "], {{0, 224}, {224, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{224, 224},
     PlotRange->{{0, 224}, {0, 224}}], "\[Rule]", "1"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2LEKdVlShuFBQQy9BRNzNXbES1BDoxEUA0HQQLwI78jE3MxITIyMvAgV
DEwaemadVfWs028wQ8/w//vsXVVf1UP/9p//zZ/85a/97Gc/+7vf/J//+pNf
/P0f/e3f/uIf/vQ3/vd//MUv/vr3f++vf/1//vE//u8///vP//Lbv/Pz//r3
3/3DP/6tf/yDf/vPf/35P/3nn/3hz//5r37+Q//8Q3/+////v+yf+TH//GPe
55f9lh/zXb/s3z359pM6367Dp+Zksnefqu0v+z6fmpNP9eXGzHzq797O1O2/
e3uet/bh7dm7sZ9v75CtjNyYhxt/91O3Y/LufMont/fwjT3wqVzf2PM3nLll
0dv3aOvbb+Tl9nOE3m0988bzJ393cofIFhX2yWSv5f2sPV/oo/AOk7On+UTI
wtZ+u/2eWq8Fz2TR3bzIdRB2exZ9a340P2TRX+35Qh+Fd5icPc0nQhZki35T
rwXPZNHdvMh1EHZ7Fn1rfjQ/ZNHzW5lFZ2ZP84mQhSyaRSe/XbihW3mR6yDs
9iz61vxofsii57cyi87MnuYTIQuCRbfsmkWzaBZ1dnsWfWt+ND9k0fNbmUVn
Zk/ziZAFYb9lUXPfCjdCeDehdy/uIuF3s6izTyZ7Le9n7flCH4V3mJw9zSdC
FoT9lkXNfSvcCOHdhN69uIuE382izj6Z7LW8n7XnC30U3mFy9jSfCFkQviWL
mvtWuBHCuwm9e3EXCb+bRZ19MtlreT9rzxf6KLzD5OxpPhGycLt3WXS+v8Ld
lG/oVl7kOgi7PYu+NT+aH7Lo+a3MojOzp/lEyEIWzaKT3y7c0K28yHUQdnsW
fWt+ND9k0fNbmUVnZk/ziZCFLJpFJ79duKFbeZHrIOz2LPrW/Gh+yKLntzKL
zsye5hMhC1k0i05+u3BDt/Ii10HY7Vn0rfnR/JBFz29lFp2ZPc0nQhayaBad
/Hbhhm7lRa6DsNuz6Fvzo/khi57fyiw6M3uaT4QsZNEsOvntwg3dyotcB2G3
Z9G35kfzQxY9v5VZdGb2NJ8IWbjdxyw631/hbso39FN5+aY6CLs9i741P5of
suj5rcyiM7On+UTIQhbNopPfLtzQT+Xlm+og7PYs+tb8aH7Ioue3MovOzJ7m
E+HeZdEsOvntwg09mYFvsoS227PoW/Oj+SGLzhsgi57XfGuWhCxM9jGL7vZ3
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
o/khi/5qzxf6KLzD5OxpPhGy8LpF/xuA96AP
       "], {{0, 224}, {224, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{224, 224},
     PlotRange->{{0, 224}, {0, 224}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 224}, {224, 
       0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{224, 224},
     PlotRange->{{0, 224}, {0, 224}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt10HKXol1hOEmhhDvwNNsIZ534y3YeAGdOB41BOxByCjgddiL8gIM3kVG
gbjBg0wa+kf6vvu8RzWQKP1It+rUqVv36J//9T9++dt/+Oqrr37/T3/77Zff
/ucvfve7b//rV//4/R/+/dvvfv4v3/3kb/Cvf//1Pf7zT//w9V/+9LNv/ucP
f/z6V//2+2/+98+//vpnv/nvb/7/z38M/qF/+9Gf/5jn/xCWNX90lo/O+NG/
8ym8r+D6lOd/yi4+qv+jGfuU53+ubL/C549m+xU7+lyzf6739NX/9p35/Fyz
aN34VC+94j16RU++sxtf8f19Ra4+Fxa+R6/ollfP/s5sP9V7r9Cs9eEruv3V
3w7h5nz1XaQ9/9X99s6bc/fne7r3c+36Fd2o9dKr742n8iBoe/V38NVZerXn
Qjdeujnf+Y0T8v9qDz/FW2F3r/bq1Xl+6vnv7Ml33py7P9/TvZ+y61fzCr30
6nvjKT2CNvnmfOp7JHfjpZvz1d84Lf9PvWvvnEu7Oa8+/9U3p/BN3P35nu59
Z4bf2VHyjSfoeUpb5eZ8teZiN166OV+tU8v/U++atrunvndXny/c1U/9//QV
HfuUtqe692o3at8+Tc87tRVvznfms9KNl27OLy3/V3nlm/MpH4R3pM77VMc+
pW0dZd5UV/W8WpuQ50o+K9146eb80vIvePvO3X10v5d8eOoducT7VMc+pW0d
5dx72jdO/v7K39xKPivd+Gos7Pdq/i91+495vpa3q/fnU++mtrvdn36G38mr
ffs0PZ9Lm6C/ns9iN9Zvzi8t/0K3aLu76kPx+Rqv0LHv1FbxucKrdZGm51O0
afrr+ax046Wb80vLv9B7wu6u+l9/vsb7VMc+pa3ic4VX6yJNz0e1yfrr+ax0
46Wb80vL/6VuL+6lfh9ezY/WsU9pq/hc4RX8lPX8GG2Vbi/u7ku4P4XdLf/3
ul2YS9NZf77G+1THPqWt4nOFV/BT1vND2i59c+XdXb0/hX0t/07/XL2LNJ31
52u8T3XsU9oqPld4BT9lPT+kTdYp+KM9U7g/hR0t/2b/XL2LNJ3152u8T3Xs
U9oqPld4BT9lPRVtApbz+dT9KexF24WML3W7MJems/58jfepjn1KW8XnCq/g
p6ynok3Acj53fzq7kPGlbhfm0nTWn6/xPtWxT2mr+FzhFfyU9VS0CVjOp9yN
FbwZu7yV3dV9uJqfesfu/jR5BT9lPRVtApbzKXdjBW/GLm9ld3Ufruan3rG7
P01ewU9ZT0WbgOV8yt1YwZuxy1vZXd2Hq/mpd+zuT5NX8FPWU9EmYDmfcjdW
8Gbs8lZ2V/fhan7qHbv70+QV/JT1VLQJWM6n3I0VvBm7vJXd1X24mp96x+7+
NHkFP2U9FW0ClvMpd2MFb8Yub2V3dR+u5qfesbs/TV7BT1lPRZuA5XzK3VjB
m7HLW9ld3Yer+al37O5Pk1fwU9ZT0SZgOZ9yN1bwZuzyVnZX9+Fqfuodu/vT
5BX8lPVUtAlYzqfcjRW8Gbu8ld3Vfbian3rH7v40eQU/ZT0VbQKW8yl3YwVv
xi5vZXd1H67mp96xuz9NXsFPWU9Fm4DlfMrdWMGbsctb2V3dh6v5qXfs7k+T
V/BT1lPRJmA5n3I3VvBm7PJWdlf34Wp+6h27+9PkFfyU9VS0CVjOp9yNFbwZ
u7yV3dV9uJqfesfu/jR5BT9lPRVtApbzKXdjBW/GLm9ld3Ufruan3rG7P01e
wU9ZT0WbgOV8yt1YwZuxy1vZXd2Hq/mpd+zuT5NX8FPWU9EmYDmfcjdW8Gbs
8lZ2V/fhan7qHbv70+QV/JT1VLQJWM6n3I0VvBm7vJXd1X24mp96x+7+NHkF
P2U9FW0ClvMpd2MFb8Yub2V3dR+u5qfesbs/TV7BT1lPRZuA5XzK3VjBm7HL
W9ld3Yer+al37O5Pk1fwU9ZT0SZgOZ9yN1bwZuzyVnZX9+Fqfuodu/vT5BX8
lPVUtAlYzqfcjRW8Gbu8ld3Vfbian3rH7v40eQU/ZT0VbQKW8yl3YwVvxi5v
ZXd1H67mp96xuz9NXsFPWU9Fm4DlfMrdWMGbsctb2V3dh6v5qXfs7k+TV/BT
1lPRJmA5n3I3VvBm7PJWdlf34Wp+6h27+9PkFfyU9VS0CVjOp9yNFbwZu7yV
3dV9uJqfesfu/jR5BT9lPRVtApbzKXdjBW/GLm9ld3Ufruan3rG7P01ewU9Z
T0WbgOV8yt1YwZuxy1vZXd2Hq/mpd+zuT5NX8FPWU9EmYDmfcjdW8Gbs8lZ2
V/fhan7qHbv70+QV/JT1VLQJWM6n3I0VvBm7vJXd1X24mp96x+7+NHkFP2U9
FW0ClvMpd2MFb8Yub2V3dR+u5qfesbs/TV7BT1lPRZuA5XzK3VjBm7HLW9ld
3Yer+al37O5Pk1fwU9ZT0SZgOZ9yN1bwZuzyVnZX9+Fqfuodu/vT5BX8lPVU
tAlYzqfcjRW8Gbu8ld3Vfbian3rH7v40eQU/ZT0VbQKW8yl3YwVvxi5vZXd1
H67mp96xuz9NXsFPWU9Fm4DlfMrdWMGbsctb2V3dh6v5qXfs7k+TV/BT1lPR
JmA5n3I3VvBm7PJWdlf34Wp+6h27+9PkFfyU9VS0CVjOp9yNFbwZu7yV3dV9
uJqfesfu/jR5BT9lPRVtApbzKXdjBW/GLm9ld3Ufruan3rG7P01ewU9ZT0Wb
gOV8yt1YwZuxy1vZXd2Hq/mpd+zuT5NX8FPWU9EmYDmfcjdW8Gbs8lZ2V/fh
an7qHbv70+QV/JT1VLQJWM6n3I0VvBm7vJXd1X24mp96x+7+NHkFP2U9FW0C
lvMpd2MFb8Yub2V3dR+u5qfesbs/TV7BT1lPRZuA5XzK3VjBm7HLW9ld3Yer
+al37O5Pk1fwU9ZT0SZgOZ9yN1bwZuzyVnZX9+Fqfuodu/vT5BX8lPVUtAlY
zqfcjRW8Gbu8ld3Vfbian3rH7v40eQU/ZT0VbQKW8yl3YwVvxi5vZXd1H67m
p96xuz9NXsFPWU9Fm4DlfMrdWMGbsctb2V3dh6v5qXfs7k+TV/BT1lPRJmA5
n3I3VvBm7PJWdlf34Wp+6h27+9PkFfyU9VS0CVjOp9yNFbwZu7yV3dV9uJqf
esfu/jR5BT9lPRVtApbzKXdjBW/GLm9ld3Ufruan3rG7P01ewU9ZT0WbgOV8
yt1YwZuxy1vZXd2Hq/mpd+zuT5NX8FPWU9EmYDmfcjdW8Gbs8lZ2V/fhan7q
Hbv70+QV/JT1VLQJWM6n3I0VvBm7vJXd1X24mp96x+7+NHkFP2U9FW0ClvMp
d2MFb8Yub2V3dR+u5qfesbs/TV7BT1lPRZuA5XzK3VjBm7HLW9ld3Yer+al3
7O5Pk1fwU9ZT0SZgOZ9yN1bwZuzyVnZX9+Fqfuodu/vT5BX8lPVUtAlYzqfc
jRW8Gbu8ld3Vfbian3rH7v40eQU/ZT0VbQKW8yl3YwVvxi5vZXd1H67mp96x
uz9NXsFPWU9Fm4DlfMrdWMGbsctb2V3dh6v5qXfs7k+TV/BT1lPRJmA5n3I3
VvBm7PJWdlf34Wp+6h27+9PkFfyU9VS0CVjOp9yNFbwZu7yV3dV9uJqfesfu
/jR5BT9lPRVtApbzKXdjBW/GLm9ld3Ufruan3rG7P01ewU9ZT0WbgOV8yt1Y
wZuxy1vZXd2Hq/mpd+zuT5NX8FPWU9EmYDmfcjdW8Gbs8lZ2V/fhan7qHbv7
0+QV/JT1VLQJWM6n3I0VvBm7vJXd1X24mp96x+7+NHkFP2U9FW0ClvMpd2MF
b8Yub2V3dR+u5qfesbs/TV7BT1lPRZuA5XzK3VjBm7HLW9ld3Yer+al37O5P
k1fwU9ZT0SZgOZ9yN1bwZuzyVnZX9+Fqfuodu/vT5BX8lPVUtAlYzqfcjRW8
Gbu8ld3Vfbian3rH7v40eQU/ZT0VbQKW8yl3YwVvxi5vZXd1H67mp96xuz9N
XsFPWU9Fm4DlfMrdWMGbsctb2V3dh6v5qXfs7k+TV/BT1lPRJmA5n3I3VvBm
7PJWdlf34Wp+6h27+9PkFfyU9VS0CVjOp9yNFbwZu7yV3dV9uJqfesfu/jR5
BT9lPRVtApbzKXdjBW/GLm9ld3Ufruan3rG7P01ewU9ZT0WbgOV8yt1YwZux
y1vZXd2Hq/mpd+zuT5NX8FPWU9EmYDmfcjdW8Gbs8lZ2V/fhan7qHbv70+QV
/JT1VLQJWM6n3I0VvBm7vJXd1X24mp96x+7+NHkFP2U9FW0ClvMpd2MFb8Yu
b2V3dR+u5qfesbs/TV7BT1lPRZuA5XzK3VjBm7HLW9ld3Yer+al37O5Pk1fw
U9ZT0SZgOZ9yN1bwZuzyVnZX9+Fqfuodu/vT5BX8lPVUtAlYzqfcjRW8Gbu8
ld3Vfbian3rH7v40eQU/ZT0VbQKW8yl3YwVvxi5vZXd1H67mp96xuz9NXsFP
WU9Fm4DlfMrdWMGbsctb2V3dh6v5qXfs7k+TV/BT1lPRJmA5n3I3VvBm7PJW
dlf34Wp+6h27+9PkFfyU9VS0CVjOp9yNFbwZu7yV3dV9uJqfesfu/jR5BT9l
PRVtApbzKXdjBW/GLm9ld3Ufruan3rG7P01ewU9ZT0WbgOV8yt1YwZuxy1vZ
Xd2Hq/mpd+zuT5NX8FPWU9EmYDmfcjdW8Gbs8lZ2V/fhan7qHbv70+QV/JT1
VLQJWM6n3I0VvBm7vJXd1X24mp96x+7+NHkFP2U9FW0ClvMpd2MFb8Yub2V3
dR+u5qfesbs/TV7BT1lPRZuA5XzK3VjBm7HLW9ld3Yer+al37O5Pk1fwU9ZT
0SZgOZ9yN1bwZuzyVnZX9+Fqfuodu/vT5BX8lPVUtAlYzqfcjRW8Gbu8ld3V
fbian3rH7v40eQU/ZT0VbQKW8yl3YwVvxi5vZXd1H67mp96xuz9NXsFPWU9F
m4DlfMrdWMGbsctb2V3dh6v5qXfs7k+TV/BT1lPRJmA5n3I3VvBm7PJWdlf3
4Wp+6h27+9PkFfyU9VS0CVjOp9yNFbwZu7yV3dV9uJqfesfu/jR5BT9lPRVt
ApbzKXdjBW/GLm9ld3Ufruan3rG7P01ewU9ZT0WbgOV8yt1YwZuxy1vZXd2H
q/mpd+zuT5NX8FPWU9EmYDmfcjdW8Gbs8lZ2V/fhan7qHbv70+QV/JT1VLQJ
WM6n3I0VvBm7vJXd1X24mp96x+7+NHkFP2U9FW0ClvMpd2MFb8Yub2V3dR+u
5qfesbs/TV7BT1lPRZuA5XzK3VjBm7HLW9ld3Yer+al37O5Pk1fwU9ZT0SZg
OZ9yN1bwZuzyVnZX9+Fqfuodu/vT5BX8lPVUtAlYzqfcjRW8Gbu8ld3Vfbia
n3rH7v40eQU/ZT0VbQKW8yl3YwVvxi5vZXd1H67mp96xuz9NXsFPWU9Fm4Dl
fMrdWMGbsctb2V3dh6v5qXfs7k+TV/BT1lPRJmA5n3I3VvBm7PJWdlf34Wp+
6h27+9PkFfyU9VS0CVjOp9yNFbwZu7yV3dV9uJqfesfu/jR5BT9lPRVtApbz
KXdjBW/GLm9ld3Ufruan3rG7P01ewU9ZT0WbgOV8yt1YwZuxy1vZXd2Hq/mp
d+zuT5NX8FPWU9EmYDmfcjdW8Gbs8lZ2V/fhan7qHbv70+QV/JT1VLQJWM6n
3I0VvBm7vJXd1X24mp96x+7+NHkFP2U9FW0ClvMpd2MFb8Yub2V3dR+u5qfe
sbs/TV7BT1lPRZuA5XzK3VjBm7HLW9ld3Yer+al37O5Pk1fwU9ZT0SZgOZ9y
N1bwZuzyVnZX9+Fqfuodu/vT5BX8lPVUtAlYzqfcjRW8Gbu8ld3Vfbian3rH
7v40eQU/ZT0VbQKW8yl3YwVvxi5vZXd1H67mp96xuz9NXsFPWU9Fm4DlfMrd
WMGbsctb2V3dh6v5qXfs7k+TV/BT1lPRJmA5n3I3VvBm7PJWdlf34Wp+6h27
+9PkFfyU9VS0CVjOp9yNFbwZu7yV3dV9uJqfesfu/jR5BT9lPRVtApbzKXdj
BW/GLm9ld3Ufruan3rG7P01ewU9ZT0WbgOV8yt1YwZuxy1vZXd2Hq/mpd+zu
T5NX8FPWU9EmYDmfcjdW8Gbs8lZ2V/fhan7qHbv70+QV/JT1VLQJWM6n3I0V
vBm7vJXd1X24mp96x+7+NHkFP2U9FW0ClvMpd2MFb8Yub2V3dR+u5qfesbs/
TV7BT1lPRZuA5XzK3VjBm7HLW9ld3Yer+al37O5Pk1fwU9ZT0SZgOZ9yN1bw
ZuzyVnZX9+Fqfuodu/vT5BX8lPVUtAlYzqfcjRW8Gbu8ld3Vfbian3rH7v40
eQU/ZT0VbQKW8yl3YwVvxi5vZXd1H67mp96xuz9NXsFPWU9Fm4DlfMrdWMGb
sctb2V3dh6v5qXfs7k+TV/BT1lPRJmA5n3I3VvBm7PJWdlf34Wp+6h27+9Pk
FfyU9VS0CVjOp9yNFbwZu7yV3dV9uJqfesfu/jR5BT9lPRVtApbzKXdjBW/G
Lm9ld3Ufruan3rG7P01ewU9ZT0WbgOV8yt1YwZuxy1vZXd2Hq/mpd+zuT5NX
8FPWU9EmYDmfcjdW8Gbs8lZ2V/fhan7qHbv70+QV/JT1VLQJWM6n3I0VvBm7
vJXd1X24mp96x+7+NHkFP2U9FW0ClvMpd2MFb8Yub2V3dR+u5qfesbs/TV7B
T1lPRZuA5XzK3VjBm7HLW9ld3Yer+al37O5Pk1fwU9ZT0SZgOZ9yN1bwZuzy
VnZX9+Fqfuodu/vT5BX8lPVUtAlYzqfcjRW8Gbu8ld3Vfbian3rH7v40eQU/
ZT0VbQKW8yl3YwVvxi5vZXd1H67mp96xuz9NXsFPWU9Fm4DlfMrdWMGbsctb
2V3dh6v5qXfs7k+TV/BT1lPRJmA5n3I3VvBm7PJWdlf34Wp+6h27+9PkFfyU
9VS0CVjOp9yNFbwZu7yV3dV9uJqfesfu/jR5BT9lPRVtApbzKXdjBW/GLm9l
d3Ufruan3rG7P01ewU9ZT0WbgOV8yt1YwZuxy1vZXd2Hq/mpd+zuT5NX8FPW
U9EmYDmfcjdW8Gbs8lZ2V/fhan7qHbv70+QV/JT1VLQJWM6n3I0VvBm7vJXd
1X24mp96x+7+NHkFP2U9FW0ClvMpd2MFb8Yub2V3dR+u5qfesbs/TV7BT1lP
RZuA5XzK3VjBm7HLW9ld3Yer+al37O5Pk1fwU9ZT0SZgOZ9yN1bwZuzyVnZX
9+Fqfuodu/vT5BX8lPVUtAlYzqfcjRW8Gbu8ld3Vfbian3rH7v40eQU/ZT0V
bQKW8yl3YwVvxi5vZXd1H67mp96xuz9NXsFPWU9Fm4DlfMrdWMGbsctb2V3d
h6v5qXfs7k+TV/BT1lPRJmA5n3I3VvBm7PJWdlf34Wp+6h27+9PkFfyU9VS0
CVjOp9yNFbwZu7yV3dV9uJqfesfu/jR5BT9lPRVtApbzKXdjBW/GLm9ld3Uf
ruan3rG7P01ewU9ZT0WbgOV8yt1YwZuxy1vZXd2Hq/mpd+zuT5NX8FPWU9Em
YDmfcjdW8Gbs8lZ2V/fhan7qHbv70+QV/JT1VLQJWM6n3I0VvBm7vJXd1X24
mp96x+7+NHkFP2U9FW0ClvMpd2MFb8Yub2V3dR+u5qfesbs/TV7BT1lPRZuA
5XzK3VjBm7HLW9ld3Yer+al37O5Pk1fwU9ZT0SZgOZ9yN1bwZuzyVnZX9+Fq
fuodu/vT5BX8lPVUtAlYzqfcjRW8Gbu8ld3Vfbian3rH7v40eQU/ZT0VbQKW
8yl3YwVvxi5vZXd1H67mp96xuz9NXsFPWU9Fm4DlfMrdWMGbsctb2V3dh6v5
qXfs7k+TV/BT1lPRJmA5n3I3VvBm7PJWdlf34Wp+6h27+9PkFfyU9VS0CVjO
p9yNFbwZu7yV3dV9uJqfesfu/jR5BT9lPRVtApbzKXdjBW/GLm9ld3Ufruan
3rG7P01ewU9ZT0WbgOV8yt1YwZuxy1vZXd2Hq/mpd+zuT5NX8FPWU9EmYDmf
cjdW8Gbs8lZ2V/fhan7qHbv70+QV/JT1VLQJWM6n3I0VvBm7vJXd1X24mp96
x+7+NHkFP2U9FW0ClvMpd2MFb8Yub2V3dR+u5qfesbs/TV7BT1lPRZuA5XzK
3VjBm7HLW9ld3Yer+al37O5Pk1fwU9ZT0SZgOZ9yN1bwZuzyVnZX9+Fqfuod
u/vT5BX8lPVUtAlYzqfcjRW8Gbu8ld3Vfbian3rH7v40eQU/ZT0VbQKW8yl3
YwVvxi5vZXd1H67mp96xuz9NXsFPWU9Fm4DlfMrdWMGbsctb2V3dh6v5qXfs
7k+TV/BT1lPRJmA5n3I3VvBm7PJWdlf34Wp+6h27+9PkFfyU9VS0CVjOp9yN
FbwZu7yV3dV9uJqfesfu/jR5BT9lPRVtApbzKXdjBW/GLm9ld3Ufruan3rG7
P01ewU9ZT0WbgOV8yt1YwZuxy1vZXd2Hq/mpd+zuT5NX8FPWU9EmYDmfcjdW
8Gbs8lZ2V/fhan7qHbv70+QV/JT1VLQJWM6n3I0VvBm7vJXd1X24mp96x+7+
NHkFP2U9FW0ClvMpd2MFb8Yub2V3dR+u5qfesbs/TV7BT1lPRZuA5XzK3VjB
m7HLW9ld3Yer+al37O5Pk1fwU9ZT0SZgOZ9yN1bwZuzyVnZX9+Fqfuodu/vT
5BX8lPVUtAlYzqfcjRW8Gbu8ld3Vfbian3rH7v40eQU/ZT0VbQKW8yl3YwVv
xi5vZXd1H67mp96xuz9NXsFPWU9Fm4DlfMrdWMGbsctb2V3dh6v5qXfs7k+T
V/BT1lPRJmA5n3I3VvBm7PJWdlf34Wp+6h27+9PkFfyU9VS0CVjOp9yNFbwZ
u7yV3dV9uJqfesfu/jR5BT9lPRVtApbzKXdjBW/GLm9ld3Ufruan3rG7P01e
wU9ZT0WbgOV8yt1YwZuxy1vZXd2Hq/mpd+zuT5NX8FPWU9EmYDmfcjdW8Gbs
8lZ2V/fhan7qHbv70+QV/JT1VLQJWM6n3I0VvBm7vJXd1X24mp96x+7+NHkF
P2U9FW0ClvMpd2MFb8Yub2V3dR+u5qfesbs/TV7BT1lPRZuA5XzK3VjBm7HL
W9ld3Yer+al37O5Pk1fwU9ZT0SZgOZ9yN1bwZuzyVnZX9+Fqfuodu/vT5BX8
lPVUtAlYzqfcjRW8Gbu8ld3Vfbian3rH7v40eQU/ZT0VbQKW8yl3YwVvxi5v
ZXd1H67mp96xuz9NXsFPWU9Fm4DlfMrdWMGbsctb2V3dh6v5qXfs7k+TV/BT
1lPRJmA5n3I3VvBm7PJWdlf34Wp+6h27+9PkFfyU9VS0CVjOp9yNFbwZu7yV
3dV9uJqfesfu/jR5BT9lPRVtApbzKXdjBW/GLm9ld3Ufruan3rG7P01ewU9Z
T0WbgOV8yt1YwZuxy1vZXd2Hq/mpd+zuT5NX8FPWU9EmYDmfcjdW8Gbs8lZ2
V/fhan7qHbv70+QV/JT1VLQJWM7nU934f9ZXh6w=
       "], {{0, 224}, {224, 0}}, {0.,
        1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{224, 224},
     PlotRange->{{0, 224}, {0, 224}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt3U/KJVcZB+BWIWQNggOXoI5E7SaQiQMRIzhvQR0YCEREHDnQkUPR/bgB
wSW4AN2DCe3ga5qK75v3T1V99xk84fbN/eqeOnXOqVO/+nO/+fNPPvrlV1+8
ePGb9z/7z0evf/fBp5++/v1P3/v8H794/fF3vv3x1z57+a//+fz1hz/88atf
/+n9V7/9279fHr3+x/uf/OCfH/zx+6+/8t7hZyY+//T97DIry59Y30oZJspf
Wf50+Te3Y2VbV+q563WlHibqrfJ+1zKn2/lZdTjdPifa7XT7nCj/FcafrjZ/
5X1QVxm62tj0XGJi/zg9dk3PhZ6+fvH1D1996+9/ePWzv3zjVaQ805/PLrOy
/In6uUKf2nx91hxsoh4mtnV2LrHZHq7Qfu7+eroOu8a66XY73T6vMP95rv1o
eptG2u3EHHVz/J/oL1fb7l3jz4sXL179P0/LM/35yOu3/v5gTI4sf6J+ptve
xNh7VvnPmo+F2lXTts7OJbJzjLP2+17v1GHXWDfdbs9qn5vzn7PawBXacGUb
RcbVs+bJXeP/RH+52nYfn8udJLu9nv7t917+6OVP/vqrV//583dfPn2dbdtH
dRKpq+y84grHnpXXE8dQm/OxSLvqaquHyz+YP0Q+Mz3PnG4/d389XYddY13X
emXnwJvHQdPzn7PawBXacGUbRfahkffvOE/u6i9X2O4Tc6FIm5n21vdm6zPQ
ViPfG2mrpfI3zSXa+lRkzjMwF2orT6EMkWWG+l2yfUa+K3ScGGj/l24/d9fV
9iLjQ2WsK7TJyGcO58Antc+J+U+2Pm/Tj4b3QZF9aOT96eORiXlyV38ZaScT
++6jeijM5c4SGQey2WbkuyrHAkfLPGpv2blEV5+KzHki61Upf6U8lTKky3bQ
riLLP9rWXfu4bHu+Qvu5u662d1SHR2NFZayLjD+VY5+u+edE/lmZ/xyVubK+
V+hHXWP49LHAdBkm5smH9Z7sLxPnrCf23dltV/nMJTTtl4/eH5n/R9bl4DNd
fSpSP5H1ajuHVfjb7HIqy8z2/cjnI98VOmYJtL2rtZ+7G1nHQP5ZGZ9HMvyb
5J/Z+U92P5vOry7QjybG4a5jgekyTGehE8dr2WtyNrf7RPu8mq798lHdRvpL
6XxNsq12zZMrx5Vd5Yx878T7Xct8q68FrpmJfL5yPFuZf57Vfs4ePzrHn651
PFrOUc7ZpZLhH+0rr5Z/di0/VFcHc4OJ/cJmG57Iarr2rV1zy64s9GjMf2sb
JPtLqE8lrxPrqvPI+8/JxH65qx9l1+WwrRauY6/kV5HylO5NyNZJ4f2u79qc
E1aOZ7PfNZF/Tq/LFUysY6i9NeVpXRl+5NqAs/LP7LHhxFyosi+e7kfZuoq0
1cqxQHbfWinDRGZ+6GAOGZlbRl5H2luljxy2mcD7xPtg5Zj66TLT85Pkea7p
800T9yZUjgUiy6nMDyvH1JW2FyrzwPnWifwzNEdqWpezTKxjZP9Y6VNHKvO0
SFuN7HMn2mel33XNhbrKNtGPuo5l0tul6d7qShkmMvNsPUeO3Sr3Vpfmydn2
E+hTXd/7nJTmGwNZX+Q8V/Z64Mp5hKM+Evmurn3i9JhfyVgi266yvtNtviv/
jJR5+tzxFVTWsWtfnG0D2WPGyH4tlMkM5J+H65is8676nzgvOd2PKutYmfNU
xvCJ3DU7T07X9UH7j1w3eNQGNuefXduOd+swu2+N9IvS3yaz0EqOkZ5bNl3/
3DVWV47LIuNS13wgfezc1M678qVQndzkeRolhXXMniPbPDbJtpmu49Bs++zK
iify1aNtutnGprVlg03vT+dFlXldZJzM7nO7ctqJsSLy/iPLbruz6vAoh6zs
7yL9NJv5d11v37WfrcyjKufgrqySL4Xaz1HbePJ+5d7AKzjsj4V1vNp4nu0X
E8ehbcdBhXWs1H9lTj7Rxqb7Qlf+mX1/Oi/qOrZKly15fDGS0w5sO754e11t
vhE59omMRaF+GjgvECln17HhdP7ZtV+7yzxqIv+s1P9d6i27LhP7qc38M3us
ETluzc67KsdBkfaZPd9Rycqyc/LpNjbRZir5Z1fm2VUn2Ry1sh27Pn9U/un8
M7sum+3zaqa3+6pCDh+Z03bdDxVZl0ofjyxT/vluu52ee3eN4VeTPV9Q2U9l
P9O1Xtk5Z+SatIn2mc0qK5lDui8U7huaaGMTKvPPbHurjNXZdQmtf2E7hsqc
vGZg89jkLtndlXVt900T/TrShp9+Jvtc5emxOvtd8s/9/PPQTe6FDx2XHaxX
dj+1OZ6n23NTzllpn9k2nF3mxHFo9vzRRBs7azwptbfAd3VdL1HpL6HtWFhm
tk6mn9139P5z2ldO2GyHV1ivrswqMjZm58ZHn+m6x1P++cXt5Ky599X6TqUO
s8/li9TDWeN5pW9OjKuVOXm6/zY9F6hy/miijW32hex1C5V8cuJ6ic26mlhm
5JhxYqy4S3bHjmx/z15Dks32Q3/bdI+n/DNeP482956ow7f+X/KZQk8/c9Z4
Xumb0/vT7PiTfR0pz8S5gMqxSeg+0JP6QiWT7Mo/s+P23W2Oyc81u6O3bVT6
e2Sels32D69lOvjep+93/Y6q/PPden60ufdm3R69Pz1ny/5ttm9Ob+tI+wwd
qzZdi5uth0qmXSnbFdp817ia/a6u5d9F+hqAC5SZ5236/FQ22w9lmwfr0pW1
Rpb5aHMw+ed1+uMV2sD0fYVd7fOtz2Wfe9l0vVB2m2Yz7TvmdZVxozKHn1g+
EFc51s4ej1f67NG1TJHz/pXrqOWfX7wtHm3uvVm3lffPKnPXfYVd5TmaJ2fb
5MSzWCfORd5xbMleL1G5RjS7nGy2DHw5Xeeq0vlnQPq6rMK98PLP+LZ4tLn3
puw12FdoD1e4n7rrGHPz+s+u+s9eR3oFlXEjm1V2Lf/K9Ql3EepHkXNVgfNu
I9eYBcoWuRc+e/5L/vmYc+/Nuj3rWtDp8m9+b7a9Zc93R8pTeX9i3a8mm392
ZZjZ5d993Ia7qJxzz57nipThaM55eF4s+YzB7Dm1R56DyT/nVPKZs8v+ReXf
/N7KM7dD39f0vLiu+um61ugsoesHks9dT/edwvm7u4zbcBfp8+/ZZSbLEzrP
Xji3Himb/PPdOny0ufd0fUba/NXqsHI9ZNv3Nj1jbeLzEzl217VGV1C5xrKU
kwSW71pQ2BHKD598PvsMuq5xILL8yt9m9x2PNgeTf86p5DNnl/0qrtCPzsqx
u35346ztld1HZHOS7LUT2XP3Z9clPAdP+9TRPa3Z89Fd40Dku7J/W7mX6tHm
YI88956uzyssh976H8+xm85PnSW7j8jmJHf5HVvgjWwfT/fH5DhQuf4n8qy8
yjo+2hzskefeEDGdYx/mA08+c4Xf1oyUv+tZJc/pd2yBNyJZaORv09eJDS//
6HVkHSvZ7N3nYPJPeNdmjj193eNZss8qOVyvG/6OLfCuyv0+Xf20a/lH40kl
C82er7/7HEz+CeeauO7xNIVnlXTlmV3rcpcxHO6oax5V6aeVfCA7ph1moYFs
9rnOweSfsG/6usez1uUo84xkm5Gx9DmNvfDI7tKX0+UJZKFHY2Z2fnX3OZj8
E87Vdd3jFcqfziQL91XdfeyFR1M5x3FWObvO0bz1HYV7/5/THEz+CeeqXPd4
dtk/V7nnvesc+h3HXnhkkXMclyhb4RxN5Xuzz4B6upyr7SOOyD/hmq48hlTu
ea88x++oDHe8PwseTdf55emydZ2XqVy/+gj3Tso/gS6R6z+z56SOvqtrHgvs
uOM55ex8putZfJtlvkLdyj+BtMC9USPPTrn5b5XCI8jmnHfMtabv03+u5J9A
Vvb+zci1oJXy3PG3SuHRPMI5ZeLkn0BWJLvIHrem3fy3SuERPNo5Zb7cNpV/
AhHZ7GLi/Psdf6sUgDfkn0BE9v7QiWPVSO7qXniA65N/AhXZ54d0PR/v9r9V
CvDA5J9Al4nfN3lOv1UKwBvyT2DCxO+D3P23SgF4Q/4JdJn+fZO7/1YpAG/I
P4EuZ/2+iTEH4F7kn0DFI/y+CQC95J9AF79vAkCE/BOo8PsmAGTJPwEA2CT/
BABgk/wTAIBN8k8AADbJPwEA2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/BABg
k/wTAIBN8k8AADbJPwEA2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/BABgk/wT
AIBN8k8AADbJPwEA2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/BABgk/wTAIBN
8k8AADbJPwEA2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/BABgk/wTAIBN8k8A
ADbJPwEA2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/BABgk/wTAIBN8k8AADbJ
PwEA2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/BABgk/wTAIBN8k8AADbJPwEA
2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/
BABgk/wTAIBN8k8AADbJPwEA2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/BABg
k/wTAIBN8k8AADbJPwEA2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/BABgk/wT
AIBN8k8AADbJPwEA2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/BABgk/wTAIBN
8k8AADbJPwEA2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/BABgk/wTAIBN8k8A
ADbJPwEA2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/BABgk/wTAIBN8k8AADbJ
PwEA2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/BABgk/wTAIBN8k8AADbJPwEA
2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/
BABgk/wTAIBN8k8AADbJPwEA2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/BABg
k/wTAIBN8k8AADbJPwEA2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/BABgk/wT
AIBN8k8AADbJPwEA2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/BABgk/wTAIBN
8k8AADbJPwEA2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/BABgk/wTAIBN8k8A
ADbJPwEA2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/BABgk/wTAIBN8k8AADbJ
PwEA2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/BABgk/wTAIBN8k8AADbJPwEA
2CT/BABgk/wTAIBN8k8A7ui/e8tqBQ==
       "], {{0, 224}, {224, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{224, 224},
     PlotRange->{{0, 224}, {0, 224}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
lXvLK3w36IDhjE1dbeJqlYuaPP30HQMO6dxl6P9FjfoJdRK7j83vbPce35oT
zM8pDNNcaHqNueaVDqzOeLF+gi+fYoDISHRtTcysvmPo/0Uf/wl1Erx+OSOB
1aZ2rbzGkBPMzykMp96h75eu8N2mA03dXulqE1efvkNrFMHTlRekMjbxnaZO
rvzOUMPFOg3Zg/Y7A95orzHkBPPzr+fy9IHISIQOpP7WoO00TlY7UbMndJ+b
WWv1nRXOr++MNKeadRqyx5X8b+vblV4Znr91XjY9MeSKFLZfciOxJxKcJe6d
mlk3dd6XGlJ9TvHI/M4Vb7LtjIbvNPnSnK85/xN9u5J/DNnAzIsr5zJ8n84V
Te9e6VWKs7ackNJk+pnoM+1Bhucr+cG2M6b2OEOdhnuSVR6gNfzF12zacj2z
GXBuOJfh+3SuMPggrVcvemLoD40lAzdXfDf3wcDfVZ6nPTSlA9/k9bY8sNJw
A0+bfmfQwyu54oqONfU8xfEVvwi9StVgzgnNd648m3crg56kvMmwa9P3WvTv
GjxxVRuRIQ29bWrL9cx2JVdc0bGmnr/kCkJ/DPcVn9af6mEzJzSfDbpN64yh
D7SeGOay8rgrz+YsQeeBT98xYGy1d1zPbFdyhY2/tuemB9lyO92r5j2JGbff
VFtzt7L11palL3Jh1avV91f3EjSuCB+huWnLYCntteUK+lzXn5s7rLmf33qv
YqjZzKkXnfm05xfvLgy/Zf6m4flKNnj5LVt2tflI8z7E8L6Bdyls2DBs89yV
Xxv6YM5Ohpyw8rhmbS+YMfjXasc04NbABQPHDdng098i/J3AwMpHrmM41WdD
bS81N+9XDX1oztqW6771XsWQ92iPa9aW6lVqp2v2dvVbRD+v8Pd6nYS2v2D1
m/Tzm3IIrZ9Xav6m3yV8xICH5n5q+GZzvld28JWn0PnNoBWrvY/ArYELBo5f
8bvUrFM+ZdBPm28acGW7v7Lx1NyH1dxTOy+9O7/o1UoHDHmPxjyd/Wi+2GZK
49xwLpuWNn/XvPMSfEl51nV+NTXZhnkDL1Y8tekDvSfS80r181vvVQx5z5D/
CS+j71UMfnFxfzT4oPkeY4WfFacMPm7gl6FvZq4ZvJKox6YPRP1N7yPeufJs
0GRC92iO2PJhM8utvPXTuV/3wYv5h8YPwc0rPr7i10pjL3LN7JVNXW3OIqUJ
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
xJc6U3Ox5VWDVhh2DQKTTb+z6bYh26RqpjlumCMxd7r/Nh0zZ7aXXl2cS7O2
ZpZo6lLz7CsMGLhMY3KFGQM+V9hY7XQGvTXgdpVtVtqbwl5zjvTcDb7T5OBL
Pw25yJBVzN9v6qS5NkO2SX2zuS+nuEn0sznTFXdobDTrNOR5IifQvWrWfCXH
GvQnVZuBs9+Ue1OZ37abr/as1XzN2ZvmrCEPN+sx8NQ20xV3aGysdrpmbUQm
SeG2ibdvyrFNvtC1XdElw7xoDBBeSWcV2/tNnVxhj/Yycx5u5p9VzYRvNvtg
qNOmkys8pzIJkTdovBF9XuXYFQ7NtdG6dCX3Gnia8i9iLs25p/R5hSUzNpoY
o8/V/M5K85t9MHzTppMrPNOcar5zxQs+rYHW25V+2nTeoNVE/qF5cWXvWD1/
OrtU/5vZ24aNpp7Qf5vybpvmEzwyf3OFtyYeVjxN+SCdE16+b86xqf2Ofr+p
mQYNMeTeFX8J/7rybNArM2ZW2YaeRepv6XdWmp/q2wvXmt9c4Y3+poGnBr9o
1pnSW8OMUnpInNHgXxczs+23Vj00a9F1/NBaSusw4ZWpc9lwS2h+s2+2b9J4
o79p4KlhB2/WSZzrW+fyckaDfzW1OvW3xFzofEL00ODdhvuEpuc2vXK1K9G7
tg23zW9ez2MpTXvBG/3Nl3cM2L74TTovfdNcUt+n9YrQkKbmN7HX3HNtGF71
x4af5l6W8r4Vli7eCTRxkspLhjxmm6ntedUT2msMGYDg3cW5pL5P6FJKT5p6
TuxBRH9o7/4mHr3Ma4UfQyakM2ST+83v0BpLa+k3Pf+0sxN7Dc192zeJvLTC
Kl1DSvMN3CE8vbk72/IY4YlXeET08KLXGzIVoW8EVuk7gZ+AB8PzFW42z9v0
O9qvmxmA6BWN1dVdB3FvY+OUTavN+2YqA1zhkc2LDbi19e1F3wisEue15R9b
PQauXT+7zVN+2vOnvSJ07Mpcmjn/Ov6v7FDEzniRR3QWuuL15kzVzL0p/BM7
/krHDPWstNrAzdV5m35n6I+h/8Sd1cW5GO46ruD/J+ftT33ZwKMm981eT/eN
yKiGb66409QxQz1mXzPo7UpbiDPa+mY4lyE3GvJD865j1RPbGQlMrvpmqJPI
A03vJrhp6GFKn+lv2rypmTdsZ1z5ms0LmlpEnNHWNwPeDBnJlh8IzTfkveZ9
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
Bu9L5SjbDkXn81VPaP428Wn2UPM3m1mF9nSbrxmwZ+Mp3Wdz/w19S3mizWcJ
X7bNrpmpmruDbRYEF5q6YeAy8X3id22YsdVjwEAzH6bqXPma4U7A/E2iz4T2
Er0y6B6RQ1Y+S/iyQW9T/W/q2HXvI7hAz3f1TvP9lG6ksPRNO+xFDLzM11Dn
6nnVc8M3DTM1YH6le0QOWfmsbe4rzzVneLP3fXoWuv8prtHPLx5B78svmvPp
d67vsBcxQHO/ObtV5ln13KD5q5ka+r/SPQP+Uxpom7vBcw34TGH4Sm9XevsT
nps4+fSdFU5+GmY+5c4L920aa8bV9X2nOVND/1/0ltDwK1xoerohJ6Ry+Cpv
2/C24gKhtz/h2Xx2eo+j96wrzwRHiJ3UPAs6HxpwQug/jbdm/wmcN393xYWm
pxtywmpnaeJkpV3X70Cua35TH67U1tx9DPNtamCK+80MYOih+bdsdabuV+ka
6Gfid1dzN8x0dV56N1/hZJUrCE6t8oktjxn4crG25g57BTMpDaTvsgiNNfTQ
/Fu2Ol/wRp/L0POV9r7M3TDTJs6J/GbIeIZc0fRxOp80z3uFLzZvXeHkOmZS
Gni9nubfXvmt1RzN3tSs06AJxF2cAW+G3yUyarNX9E5B5PMVHojdwXBeG09X
GaCJk+b7Bn+hfWdVT8pn6blfwRi9M668qVnnFV8wnP3i7xr26+adTNOvU/Wn
9OEir218MWg73QcDTmjM0NrVvCcx5JYmT80YM/CI8CYbBw2+YLhbWOWlZj4n
9usUj2x6SO+5L/pgyOqrzEPztKnttO4ZfIHAzCofpnSYnhGt/zZ80pl8pW8p
b6L1x7D/Emex4c3wu03NbGYqgx7a+ELce9B9o/2U4Glzj0tllRRPr2Cmuaev
/Jr2UBozTXym3rfpW1Mz6V2p6U3EWQh8rvy6mc9/Qu6i8dnsgzmrN/cyM25t
WeKi39FZhcBb069fdHKl2018pjCWeofeR8z63+zVyxmbOTyFN8Iv6Hxuzl3N
/decz4naVvcJtJ8acGvLEt/qd7TOpN6n9Y3I5DZfo2dhwN6v+s/5IL2Hrvxo
Na+V5hjyxqd/a95nm1wjsnpzL7uok6ssQezpBr9b+b55FzBrLz0XA98N3v1N
+v/yWyt+Nf2IwMbKQw3eQfi1QVuaupSqc7WnNM9i8G4Dbq/4neG8RH4wZC26
D808Zttxmti+rv80ngl+NXNgUxtpDzV4B+3XTb4bcEVndcKPDHvHag+16YzN
75q8oDFGaHJTcwjdsOHQ5gvNelb63/TQK/tLs56mhxLfp/MGgauVjr3UufIj
AzdXWtTMMyudsc2uybWVljazUEpzUrpBYMOGfyLX0fU09Z/4W/N86W/SewQx
i5fvExxp6gadH8w+1cw5Tc1s6mQzrzZ9bTW7FddS+tnMxjatsHnxCv8vWF3t
m03spTLwCld0Dklls9QeseJ700+burHKDymfsvWT4OYVnWzWT/vaanZNPTdo
10UOXvT3Jv4v+mATeyltXO16dA6h8wP9TGvFKg/QeKbPm9r1bPsRwc2m3xFa
R9R/RWcM/mvQ8xSuDBykdcamIU1fWPkg/bvXdYnIxqlvEr7TxGeTR6t9zZB/
UtijMUDjkHjHoJP0XkBnpNV8DZxqZqFvnRGdbZoaQs/XhqWm913BvIG/hAY2
8UNjg84DdA/p/NOcr0HTbDrT9E2DPtt0xoxVQs9te59Bc8z+TuTkKz648r4r
vmPY8Q3aS+A5hZ8reXvVfyKf0PcMNA7Nnvipbxr0eeVTdJ3Nc130kdWM6Kze
7H/KN1fnWu1xNDYMXmbQDZvvN/NMc6Z0D239X813VacBtzZtTHm3wadSdTb9
d5UTVrq6mtHKL2j9WeWW1R5n4DLtZU2PsPGawM+qPyvME79F517i+8QZm7p3
0RMNe3HTp1LvNP236bMrrzTMiJ4p/U1ir7mY/ejctfIdQ2408LrJNdv3CR9M
/RaRB+i8saqtqT/m2sz6Zntu+i+9KxE+YsO/4fuG3Ej0x5b9DHO8gvPmjmPr
CY0Z4vuGHarZn9WMzPhvap3h+yt9sz0T2cwwx+YsmvhfafWLtq9y4+pOwOBr
zf3OgPPmjmPrSapvze+vePTiI/QzPaP/B8q1Zug=
       "], {{0, 224}, {224, 0}}, {0.,
        1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{224, 224},
     PlotRange->{{0, 224}, {0, 224}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzN27/qtW2S1fFGQYyMNBQRNJtEB83sRjyDNhda0GhAGBUxExMx9RyMjPQw
xkMwMTY2EAy0B0Se5Bq/H1fdT0/wvOz3x973vv5UrVprVe2/+g//ya//8Z/5
xS9+8U///G//8+vf/Iu/+4d/+Jt/+ff/3B//zz/6zR/8/t/8gz/725f/9f/8
++PX/+X3/9Xf+c//7Pd+9df+3l/81b/+o//2y//+P/7jL//d//oLv/rx7+U9
P/69PGd5XdbwxfPL+68+u5xzeaaeocbG1fuX51zt9+o9VzH5RYx9cRdfxM/X
uflFzFyt4YsY/iIOv8aZr+/i65j5ulZ+EW9XZ/i7wtIv6tdV/n6Ry1/zhKtz
+C0F/b//dD0/fvb172vcK+v/mgfq3sv6y9nq+euaNTau1rB879V+vz5/jckv
YuzqHq+w5eo8f2ZMLs/X91zF8BdxuOTFcr9f3/XXz1nu5YuY/5oDXMXMF7x6
yRfN36/x8IvY/uIc/tNf+ue/+vf/9te/+p//4G/xff342T/6N7/3y//w1//y
r/7K3/jbv/zx71fadrm7L3jgj8/5cb+vvb8++zrP19mW1+VOX991FQ+6Bl3/
1dquzrysX2Pyixj74h6/uCM9T83NZQ1f5M5V3F5hconDJS/KWWndvLrrBUuX
vV/1Gn5m/i758gWWLpyhYKzqo6/51dexrRpQuY2e1ZI7uuYveogLD1z05us5
unfVL+Xey5o1HnQNX+ev8palDv74+sd8LzFZ3qMxpnGyvOfqjl53oZxq4Sqv
PNW7+DpuXzG8YIvicDkTzfFSf1/59YWeWp5T7kL5kj7nKn+XfFn8pXLXX+Ra
yf0v9O8Vr/sac5Z6umj8EvO65oVrlfhRHliwvei7H99f8miJ5xKHrzUs8aC5
UDBqyV/1gsr9Fv1YnrPMopQYW7Dra69P8URjqXBX5Qmvdar/cxW3r3tXX1F5
kfJ5zXG9l9d7vtDOV7Vb41bv8VVrlvxVT6a8X+/0qs+u9bqc7ZX+1dy5ilvF
nNfr5b6U55fcX3oTX+jN1xqUP/z42SU2rjyKJffVo9PY+HENWoM0fxdOomey
xNuCdVda/konXtXoopVesaS5VmK7vF/j7SpuFw6mHmnBQM3ZsmaNSfUHvnhd
6pr6yXrXiw5d8ET9roWrLzVR8Vw9AdW/irFFpyuPUsy5wkCtfYrnV7x30ZvK
gTVmXlzitYbFd13qe/FMlK+qVioxULzZxSdRD7lwnhJvmrMF3660vObIoh+X
eyy17HVWimNfeDjLe0rsfeEXLfelZ17WUHDslXdf/Ctn/np/4U7lrtWLKzpl
8dsX/vaFB1ieWWK71MGC2wuGa5won190kGqlUqfUlyh3XfJXPeHFY9HYK3Go
eK44pnGr+muJ/+IxLntRb1b9c435Uu/Ud3rFVXm+4udVXixrW+q74mHhNiUv
Sh4t/0ptVR9mqbnlvkqulTNcYvW1x+V3hcoxrvRLwQflPEu+qN9V8KfEv3qA
6tct71ds0f7p0vdRPrbw24Lh2ltc6kiJw+KNaO4stVXXX7hW2XvRC1e+X3n+
0vfU+9W7Lh5X2Yti7BIzS596wX89Q92j9lOU5yzrLPeiWKE4pq+LH/XC28VP
0Bi+8jwLP9EYKHd9pQX0mTq38OJX5fz1twZlv8pVNO8WD1Dn6xZuo9hSNNHi
cS3cW+tOwbrF+/qijig/XPqei8ZceJ32rxWTdT7qqpeh+Klc6IozKNfVWQ7l
3uUedVZHa8TrXoovXXC+PHOpTbrOko86m1dqx+IVLFhUzkrjR7FLPU+tF+p1
vDCw6NOiBZYaVz6rnozygZIvWitL/C/f9ap9BTeWfoHqYu3fKW9Zat/iiS2x
oTr0Sm/qGpY5tHJHS+1+5VHhacoz1Z9RD0fnYZb1q8ZRzqAxWXr9VzMei/fy
xf0uvLFgVNFKpTYtvFdzucTkorU1lsr6CwZe+dt6JlrrC09W3FDfaenLlDP/
uoe1YIJqc329+ABLrVcvZfFXVdOVPsgX917Wc6VTdM2L56BYobmvcb74n4te
vvI5Fbe1DmptXTTUojUKNyucsHi/Zb/qb2gsLb1svd+FW+raCrdXv0Lrvs7y
LVpb/66ew+Jh6mf1HF75q71RvdOS+6UGFe380gIFZ656WOVO9bPai9HYu/IT
llr/igH1V0u+FH39ypEll7UHtHiP2v8td1Huetljef7ia5V4UK236OXF8yw4
eeXV6Gtd86I11Ku8wr1SCxatpxi73K96XItOufJPXrXgtZ7CrxRPitYu51w4
iWphxTf1G8tedJ1Fayz+0lVulvqovtMVJiw9DsW9RRPpnWpvReNZ1/86t2Ue
QOtUyWXtARWdWHSKcunXe5aeY9lj4QDas1O/UeNq0ctX3lF55uLVaL3WOCzx
oBi+6FzFPc0j9VqvePKVF7dokyt/Q7nuoq3KHRWs0HrxRS4XHlXirey35NRy
L8ssq2L1Uvdf7ymxsdSFJTaUJ+v8W4mrkl8lH5W/qQ+/5N3Cz3UNy+yHno9y
6cWjXuJQOfmV1lNPZvFPrjxJjX/1KF54q3ygaLqS+y+tUbRA0T4L7mmNKOeg
uFp4ssaA/r3kwiuulOcvmmh5jvoqihWqMfVeCo8q8aYxX3i73kvRL+VedNZF
sfcL32B5ZokN5ckLj13qy6KhCn8rWL3UU63vyhvL96q2Us92wY2ljl/FzFXM
X931ws+/yLuCXeU8l9mhEp8LT1Buo7VmWduVz/Y6Z50ZLrmvXtzi2yz8/MoX
vcqvxX9QnqBcq3iPWmfL9y7rXM6h1Cb1HnVWSte8+AYLFpX9lnMo51x47FJf
rup1idWlL3w1f1XqacGlK7996WPqd73i50oz6jyPxvwSzwWTNTe1F3/Fhcp5
lpgpe9fa98XrL/RLuevls8ohy/qvZmiV8xd/YPH2fyYXVWxf8rTw3pK/X/Au
vceSI1/MqS7+UuGBX3jUi27VGPjCP1GPUeuL6sHiaxUup3Fe4r9wgFJPr/iJ
8odyjxrnC06qZix+1OLZai143XWpy8ql1T9Z+EzJ62X+RH3OwkmW14oDC/9f
fLkSJ0XTlX1prVm8zQUb9U6/9kU1jxZ/QHOtYMgV79K6oNio8alYqnxGNay+
X/v4Vzz8a1283Gnh/EUPLtxj+a2Bnv/CG5d40Fm1BWMLfyt4qBpQ46d4ZTqH
oFx0mcd76RrF+YWbad9T86X8XXvBiy+nOLN4I3rOpWddaveiCxa/esG3LzSI
YvIVF11yufgD6v98Ec+lrmmNKNioNVdrgcZMeY5qBNUX5f3Kw3Xvqouvzl95
hdZl5fkvjCo4WeadyntKjSjxUPJXsXHp1y86epltuNJEWmfVn1QtVniv5kLJ
96KvVcNe6e7ynC+836VeF26mr3U9ysGWXFZdoDOEy3cVnvP63kWzF5xZOLPe
6aKzFu5R+n2lLiiOqRZeznnBt8INlpqo/uqCycp5Sk0s57/0EJXbFz6ms4WL
377kdbn3pVeu+FAwefHMS7/vSueWv+vzC89UL73Eg2qT8r3qUxVOqzywxE/B
hNJTXvJXa5Z6CIqB5e+LVr3i29oLUL5XNMiSC+obFJwpfy93V+706xhTH0M1
4Bc+gK5hySP1FQsGlpqldVmxTmuNfpfqx3JWJe8W/rzwDT2HxT/5+jcUhdOW
fH9x4LLHojWW/uniLSuHLNxyqY9aN9UTULxSTlJ4RYmxK85Q8EfrzpKDeo/q
D2j+Knf62kcqZ77k8qKd9Ww1X0psl/UXDn8VYy/uUZ5ZcupK36l3V/yfkkfq
L6kHdeV9LWey+AmqOwp+ql+nOHbFq0ssFf2lMVDO8It6V+J5iY0FH9R7XLzE
Ereaa1f1sXjOC24vfasvfJKyR+UMqveXPNIYWHwnxZPy2eIDXOli9S6UL2mf
t5z/FzFQYnKZXSmceYkx1drKx7T2LTMqqnGu+N6SRyU3F/1YzkQ19bLOUiOU
p5U4/ILDX+VOyZHXmRQMXDzAJZ4LB9a7K3WhxLx6CKXulHtUjqr18XXmOiOk
96VYoRiuXEu1zxX+v85cc029JvWICp7oc1QLX+nixT9UTrvEifITnWVSvax7
KdhVznDhaVd8e/neEofLrK/yqCWPNOa/0KQFW9T/fMXbVW16nZV6gEtN0bha
uG7hQguvXvb1es7VPGfRoa/1LL7WUhOv+HzJTcUfrcsF5wtWLFxCa/GCz4r/
JTe/xo2yZs2FZaZCtdjCOfW7XrWjaDTVQcpP1H8oOa6a4vWc8h7tJemMzRXf
Vv1e+MbCXctnNQaWnFKN9vpXnl80o9aUq/f8aVh/4e0F6xYN/gW/VT11xa+U
z2g+Lj2UpYYuMzkLn19iQ+c0Sl6U+ZPFr3vdu/JMjVXNi+U5C7dZvGitm1oH
lYcv6y91oXA29fm/8OIKH9bc1L0o71o8K63d6nUozr/OSrlZqVOqjxT3iiYq
e9ffWSzvV42w/Cvn8/X61W/RubISY1rTldsXPVV4jvZl1J/R2rqciWqiK+15
9fwSG/rbvZIXqtGU317NYZbXr7xYfJvyHN1v+Wyp3a87Kutf+LnW/bJ+zfHF
1y3nvHhx+v5XTBYMv+JvunfFGcUf5bpXOLDkXeEzS826ikPVGkuMLZ5/ea01
4ov1axy+4q3U/aWn/MLA4iMVHL7iV6qnSo0rc5hX3pri4eL/6HuKz6OYoHX5
Ktde53zFSTRur/xDxX/N0+K9LDWonIP2l69698qHy9le3fVSpwrn0djQ2q05
rr6l6uLXPZYYLtrqKjaW3Nc4Vw9NNfvrnFVrXHk+JQbK7zIKd7qqCxpvV+ez
nL/mxZUGL5+9ypcrTaT3pd6R1scv/MyFl2q9Lnd3he1Fty6zAVcaU32MK/xf
8LD4MMrfyqzvwvP1jrQuaK984fkLp/3CByi1u3CbBaOWOLzyKIqHoLGhWq98
Vvn5ooO0Rqh/XuKw5NTSE1/mxLQulPWXvNbzKXe04MCCS4VbFj9W+2iL160e
kXo7r2eqJrqaTyh4ru8psVrwttyv+sPFXy08R/O0xJvquHJHGldlX8WXWOpL
yVnViV/cV4lb1bnlrq847Rc+QMHGctclBrSXt3DIxaMoPs/SMyp/VwxR3ar6
dMHDUutLvC0zDLoGnRO7unfNnTI/o3mkOPDCUo3br/lJua/FW1DPtpyDYkVZ
z1IXCl/9eg6q5FR5jmo0zalyp6oxtUdQ8rHst+iphS9pfdHarV7l1X0te1G8
KpxZ7+gLPC+cs9yd7mX5roIt5d4Xn0f3XjCwxJ6ubdlvyceCh1p3rl6X3FG+
p5xB70XPUL24RYup3i+84oo3luer36X3suDeggmKe3qPX/jwJf6XWqB8pry+
8h8UBzSnSt+ncNTX+WuPQPXdaw3KHzQe9JzLfS1apuiOZS+LB7Lk0RUeasyX
2FY+qetcNGDB5KWm6x61FmjdLLih+/qi5hat+sq7hVcUjC3xrPWu1GvF7YVn
KvdT7FIfZqmtWuNKz0VzQTHhC2629NCXGSqdyVm0tsbtoulKDC+eUuEP2ifS
+aVXjnzd61ettMRAua/y/oIJ5cwVV3X2ZvH3lAcu36W9eNUvC38reV36FGUN
ipmaL0t9Lxq21KkFu76ouYpveo+LR3rlj5V+t/pjiz9QYnvph+osX8FA1Sn6
vSVuF7693IX6Kvr6Cz6sswrKDRZsLM8sMbycVamtip9feIaq9xeNqe8pMbDk
3ZL7ev5X3o7mqeL51XeVvqquWfvyy0xOOauyhgVXVQ+qt/CqL0t/Qc9ce0bq
vXwRA3oXX/hjir0FZ4pm0Vqp/ky5U/XNlpkExVKt0VqbCtbpXby4WeHSJSYX
r0nzeonnwlGX/s6Sm1pftDdX6uziOZfnLGeo+ah+5hUP13NTP1nPUN+jmKnc
TL0yxTTFpYUfvp6puV/yceEwyouWWqO1oPQLSjwvXoHG8LKekkfle9XzVz6p
Nbf04pd6Uc5NdZzyxvL8cg7Kr0qOl88qBr7iQXH1xa/Ub9e/L7VDOU85tytP
SXsW6uktnvDVvha/qzxHfYNlhkfxbcHwpUar73H1uuSp1i/N5YLJJcbUr1v8
LsWfV+1T3+Oqpmg9Xb7rFSeqMZWPlRhWrCg8rcRAWX/Bk+V3Pfqewtu1LlzV
aJ1p1ztafIniRS8e2lKPvvDnr/izrqfwGfWarvB58ZRUjyvOvD5b+EPBAdWk
S5woHv74zGU2rNQs/eyV/6lrUyzSf7r3hf8veqHg3jKTVrh9idXFl9AYK/f4
BcZqL7jMDSqXW3JfvYIvcEB7u6/n6DqvsKJg6Qv3Xn3/pe+jXscX/QutiQUT
ioemWqC8p3xWOYlyqoWnLXMpV+emXGuZ4VFvWet7OYcvZtS1Ni317kqnF37y
hUZTblNmsYqfVmq69gIWHbF4F5qbWstKfSz5Ve5Fa1ap+3qGVxhb9qW1Vfeo
85k63/j6d9UHucop7blfaQHlzBqH+psL9cyX3Fl6l+UMFT+/6O0qH9Zc+MJH
0hmhEnuLxlSuVTBK/fyCz+onXNXuogWuPM+reR6t0eWOrjRaWf8VZ17OTTn2
4v+UNejdLVxRNeCiDRXbi25d/JYFY0u9+MInfJ2P4vyVZ77s68c7Ws6q6C/1
E664tPq3Vz0LjROtHa/PFg6md1rWqVy6YO8rPvWulYcvNbFg6aIvVGsULNI6
WDhzWbPO2pW7u+KBV/7Y0i8r96jrLGeuOkh1on623N1SpxTfCocvOKDxX+59
wUN9zs+chyxaQOuO9shKvVD+sGB4ea16s3jmC/9XnCl8tcRJiXO9C9U7JYaX
nsWCMyV+Sv7q65KPS5+9rLl8r3ISrSkak4rPVz3ckqeFcypfutK8V96I+hiF
a6neVG9c+bnW2UXbFr63zCeUfS3eWtE4pR7pHrX3elWzltxUTqWcVjlqqQVl
zeX9C19S7F34w+IFLRiiXsTie5c4Ue1Zar32fJf6pe95nXPpd5c4Wbj0MoP3
BcdQXlp4vuLngqva8134xhJ7rxgr57ysX73WK/14pZuUr5Z6oVxu0ebFA188
E/UWtLaqRtAZp6JVr+YPNU6WHLziBgue652q5i2zPUutVD27cCfl4ao3ixek
f1dNV3JK+c+icQqeLDx/iUP9t/hpJX8XLl20s2qHhWOon6DrX2qr+g9XfHKJ
yeKPaY94iUPtiVy9Vm9En1k4vNbiZa7mFQNX/cclT0s+FmxRDrzoFI3VxWPX
fFGv7AqH9Tkae1e6WPd1pWcXfqs8vNS+Zcbyi16M+lRf19zXnV71X5a6WZ6j
PFk56jKbtOiCL+Z/ND71HAr+6/cqh/lCa5eYvLqj4iGUOFzi6osaUbxxnTFT
3qscpvDA4vst/ceSO+WcrzTCUqMVG3UuSD328lmtO8rPF56gZ15ib9HF5R4X
LqpYsejZFw/XPu/iwyx7UZ5W9n5Vc5d+yqJPNWev9ItygyWXdZ3L6yttqDpd
61fpUxT9WGrrF57e1WyDYn7Jo2VtilcaD+rfKk8uXELrzhecfNGqioEFY1Uj
lLkF5VFl/Tq3oPz5C79liZnyfOWuyzyDYq/qIK31RSMsGllxQ7XGotG0dhee
tpyb1txSU0oul7xTHbRopeK5KUfVXNbe1sJFy2cV8/XMFx61cOOrc1POWfwr
3a/OsKnvtGi0BQO1P3XlgS8cdeFLWheKVlU9qBhbNMJSs7ROKW8p9/uKt6s+
2tID+kJjLjxk0VOl16B9gRLbiz+vtVLPdtEIS53Se/m6n6vrV41Q/IrSTyx4
W3oHRbcumLbc0cJVFK+0n6KxoTyqnOGVdliev3g1ypl1j6+YVGxR/qOxp2t4
/X3hDAWTr3R9iSX17gr3KGf4Ok/1RpaapV6EzrSo/tVaoP7M4oUqn1l4yJUP
cMVjVbOX2C51vNQy1RrKacv9lru+mnUsNUJrVsmjBc9VZxX/sJyn6ibdi2rb
hRtr7hcdp3mkGKuxXfpBV7xo0ac6N16w9P+lt/4knFx8uZLXS99B5yIKfi4x
oL3+K11fsKjw8MVzK58tMa+1sry/zADrXSj3K/hW1qY8v9SL1z/1CVVHLD7A
wmP1u5RLLHFS1vO6C50bWWZLFPMLN9B+bskXxWG936/5eeGfBecLVmjcKk/T
mL/KfeUPCy9SDqP1QvHthefqe+g9Fq1dckp9HuWuyjFU16hOKTxZ6+8yO/E6
t2VmqexLtfMVH9Y6pZh85aMuPfSy31ILtFYuevwqx/X8X2d15X1pfqnGvOoN
LZ7b4nG91lDq8sK3y/oXXlT2uODMws/VX9KZuoJXZQa76PoSV1/nfuEPyx1d
1c3Fa1r2VXJZ/cwv9qW+TckRxfYv6pHmSKm/rzWo16o+7cJ/lvUvfqBqHK37
pX5d5ZFiS5lf0hmGco+6ziXHX+tcdFnZi8aSemU6U1ruXT2lxYMq36s6SLmr
co+FF6knpp5DyReNE63XBZMX/lzi+YtetuZ+6a8tuVzW8IpJzZ0lZsqMR8Hq
Rftc7atwucI9VMuX52g9Ks+8wmT9rN6vruFr/2Hp1y9nrv5nwXbVfa8cucKT
K3298MwrX0t12eJ9qc9T+i/qh5Q8XWZFVIfqrHX5u56/4s/i1Zd8/JrLlRqq
uf+K1YJdV/MwJSZLLi+5v2Da4hUozhR+uGiQxSfRmF9ycNFWWi+W2lrOWXvo
Sz9duZY+X3VNWUPhSIv/oHy7vL+cecHVhbfo3S097uJxKX+70hdLH1m/V7nT
6xyW+ZwS/8r9lE8ueln7dAvfKBilfKzotfLM15mr7li4XIlhrVN6X4smLWd7
hf/a69EapD6bao2F32otuPJJSr6obirPV+6nZ361fuUquneNzyV/i++hebpw
8sV/0F7V1XkuPfrCW4qXdYX5C2dY/KXCr644xpLXr3NY4mqp46WHpVha9ljy
S/l/4cNXWKp7X2aNltmeJT5fa3jxGb3HZf36WnnCFdcq8aM1qHgR5ZxLvVAP
tnDdJVZLj0Nrivb0y98L5ug6taes+nHxt3X9muMaV8t7yjm/4r/sceGrpWaV
81x0kGpqxUPF/IUzaE1UfnXFn/V7l7WVuCpcS7lZWU9Zg/qli+7Qsy11RM9B
16xre9UC1S9XGqdwoeX1wjNVY17pF/Xulv2qN3JVU5RX6PoLJpe7WGqBnuey
/pI7S0/5deaqxdQfK3G1+EJfYEKJJe1TFH2kszrq9ZV6sWD4ojGvfImljlzx
uoI/C39WbavYqBpBuavekcbqMi+06I6y36s+8qLrl1zTnuwSk6o1rvqJiglX
2nbB26vvLfvVPvWVRls0VFl/mQ8pXt/iXX+dI6/vVQzU3lzRs4tHWu5d936l
HRZ+Xmrf8vs+5fA6Y7bkhWrVsgZdW7lrrb9XekQxdsGKxU9TDqPzNvr8cs4L
huv6X3tR7CoxWepdqbk6P//F3FfJ6wUzy2yMnoniyReexhXeLrhXeHuJ8/L8
RaO91vnCzKuZpYWfvNZWPJNlBkljo8TYwtvVgyqz4sqXyr1onfpCq17xloKN
5bN6dyV+Sl4oNmrt0zhc1nnlkxdMKOe8eHdf7FH7ESWuvnh/yfdSI1Rrl3q3
9MrLvRQup7hUck3jduFvWru1N7fooKWmaI1QLlr4m+KkatvlHpUDa+1e5rhU
Ry8YrnXtqo5fcQ/FMfVnrn6Po15c8SsWrbrMGJR1am1Sn6HwvRL/BW+XPCpY
Ufai6/wC0wq3USwqHKnEhmJRwW39LcBSNxevo+xRPWHl8DrnvHA2xc/XuV3N
2yh/W/h8Obelhuoc0VIjFs5Q1qzel2qcEufKmV+1STmnzisuWk/zS2NDZx6U
b2uOq7a6qhHljgpvVN6l/uoVr9DcVy2gXrrGxjIjp2ey5I76z9pHVkwrOV5w
Xn+7scwSFyxatMPX79f5Q9Wzuuaica7mk7UGKVfUGqo5pfim+kvPVjmk8pMr
r0M9pRf+lOcsGrD8/cfvLbyrcAmNsSt/oKyz3IVy9VIL1HtR/bXMeJR/C1/V
3lypleo9LvFTYqmc7YKxxf9Unai87qUXVK+VfC/nqTFWzkQxTWuBcir11Zca
unhWii3L+5VHaR5pTVffT/NdtdgS88oZFo+i3EvhiuodLVp4uWvlGwvvLXii
PXF9/qtGlM9eedqa++oPLDGv3LjkxaIdlIuW9xctoDFQ6oV6dEvN1RjT/qBq
B9URGkuL/ip8UuN56eOX9xfN+4qxpZe0nO0St1pPr3T0wr1LvquHrzxNa5DW
OH1O6e8oTy78/MqrXGYjC5Yqh1/8w0ULa16UOyq5oFha8OTFCRe+d9VrXvh2
yZFXzmpO6Vkt+b7ou7IX9akW3b3Ux6vYU71WPqsaecHP12cLziwxvPgYC994
nfPirRU9vuiRqzvV3Fc+oOepvRjteZWzUl1czurK31CeU2JMn1Pq5hJvRVup
dlZdqedf8KdoDeUGy2ySzlwtczKFO2lNXHqyOlew9JqXWlb2u9xXwV7N8aW+
LDWu1B3FWOUSCxd9rXnxSIuf8OLeS23SO1rOX33pRXNdeRplX0U7Lz6wYm+J
MeWHJX6W/C3nueRXqS+qc5fcXPqSZV9LvdAZleK9X2Gv8o2vn7N8l87wLGte
vMHX+69qd/FJihZQDbvwH53DUb53xcGUJ5c9Ft6rn/2Cnyj+lzgv96Uxpni4
zLWqz691U7mH1jI9f8Wcq97o4mkoHy55UeJtwd4rbrPsq8Sk6o7lOVe6QHGv
xGTJuxIn6lGUeCv+zBeaZdFlJeavnrN8l84Caf+laLQSA4qlmrMvDLmquYWj
lnpX8E37nqoFlIMVHq4YXvo1Gg9f8JNlfqO854t5ReX8Gkvan9WzKj5D6cUs
fc8Fc0q8XXn7yjeuOPaiAa9mfpZzWDC5xLBixcIhVRcsnEr/vvR5r/BqqaF6
5le6rGD+FzlVvmvR4KqLS7274kuvc1jqe3mOxrBioOoF5fxaa0pvpWhG7Ueo
R7TEw8JPyj2+uER5fRWHqje/wGrlM8vsn8ZD0RHq5SqX0J643vviHSnHXt6z
8Gr9LZJ6UNp3eN2v6o7Cb6/6bnomZY/a31S9oM+88hzKe1Q7L/ruipO/1vnF
LOiiHxfcU7606CmdsdFa+Trb4vMsvzVbeILehcbhwhnUt1SvbOEnWvsU9xbd
Xer+VZyX9RdeXWrZMne98LeCS6/3q6ZYfLASP4qxV/3uBWO/+LvyHP1tjnov
y+9WSn28ws+yr8VfeuGA6gWtHV94sIUPvNZQMLzsSzm5clrVCKrBtT++xEDB
/6KzFn1UOMlV/hbPR2tlidUr/b5oriU+dYZEY0B96UW/X/FA5cbK+RWrteZq
j+mF1UVPae1THF44yStn9TcRqlVLbGsd1H/K//Xv6mksvO51nqWe6m+CrjyH
V25qXdM52MIty2dLjhecWTxY5djqMS5+/lX/otydxuoX3q/yhxI/ix+iPGfB
86XX/IWmu7rHgl0lbst79N5LLV602OLjLf0sradXOrRwyMUfXriBPmfx4jSe
lZOUvRQOv/gD2tfQHtPVbInOwGiu6XrKHS14W76r1IWCjTpzUu5o+c2CxvyC
OYXHXvHkpQ5qfKqfo/M5ZS/Lb0kWjF1iRr0g9a6vuKjquKKJXv9U0xU9ot+r
NW7RMotv/IVPW2Jb/RONw5+pQwtGlXqn9/6Kvav4UexaOPbiw6smWtasObvw
cM27kjtLf1Z1q3JXxduCw4XjKU7qfWmNft3XlQ/wtZ4t+F/qwvJdV56h3rty
e60dWteKXlbMLDn+qnGq3xe9cKVnVWPqvS9YtHDOElevmF96CuqNl3Ve3ftV
XBWOV3BSPbFyVgV7VVstGq3osoJdC8fWM9dc1nNWr0Nf69leaUP1JRY+XziY
1sGrvp7ud+GHS5/9qr4ozl/5z+VMFu9F3/M688KXiiYt+KD9I13D4nEtmLzw
h9czF+6her/U2eWcl97uMit+tealb77khd6p3vtSQ7VWLjq08IcFJ8uZLHV8
Wdvy2eW3OQuOXT2n8IRlPeXMS34t619+71PmG18aTT2Wsper/V7lWnnPVa0v
36ueqtbuBccWzlDWUOJBP1vqddmvei/qAyj3W3S38hzlfnrvxYNVvqTfu/iE
y8zbsuaFmxUvomDRcrZXPk/BtNLD/eJOSx18/VvqSKnjr3vX/FXMv8rfq/lV
fU7xBFSnaLyV/F3WX96zeFZXml17i9pDVA6s3u8XXsEVB9DfCJRzXjzh0pfR
Nagm1ThUfLvyAa5i6bU25SeLFihrLrFxhfllPVprCs5/zfOvuJnedZlj0fkQ
zbXF51GNplz66k6Lr7LoCOWZWoNURyz+mN5dqQuK4UuOLxpfa8qi05UXlfta
PJwlBxUPS94tvuLP9Ao0xgomF+9a41lxTzWOcpuC1RoPBX+0Hi37+iJWixen
fy+8d8nNpaYrb1nwasFhjZkFo0rNVe254In2pJb6qBpNufQXd1o4mK5Bezpl
3ky1QOFFi94snEH59uvuyv1evWfBQ+3XlB60+lFXnGqJ/4IDhUctHONKS5Y9
LlpD54Ku7lrvvdTcKx/yixr0RS+1cDat3RqrX/Mu9duXnNKa/gX3K3Wh4PAV
/188k+Wu9UwK53xxhlIj9F60dmj9Xe5U73fxOjSPNA5VU1z9HkRxuHgmrzV/
/XrByataufDJK8+t4Kre0aLTr3BDuXThTupTXXEwrQWqCwo+lPcseu31euEG
yr1Vjyt/XmJ1yfESDyVWi49RcupqPmThfloLljtadKXGf4mHRUcU3C78dpm5
Ut54pcUWT+CFvSVP1etY6pfuUWfyX+tUjFJcLWcimvj/51+pFzqnobVy4cZX
nptyzjIX9Mqvwn9Up5R8V450NbNUaofOz1zxIuVpS20tuKHYq9yp4P/CRTWX
C/9X7lGw6yrG1Mf4mfMhiw+g8y3ljpT/65oLDn/B8Qp3XWqNepiLV6xa46rW
67kVr0M1adlXiQH1M4sO1fe89qWcsPgty28clt5ZydPXe9TX+sJzU/5WuMqC
J2WPX/RirrBU/17i5wpjtT++YHjhVCU3F79Lc6rgZ9Gn5XuLn1z+Xu56yQX1
OpY6q7pGexmKFYqrBStUmyiXVj954XjaEym8fVnPcu/qNakuLvhQzq3oZeWK
Sx0pWuZVr696TIt2K70V9UkWzLnCcOU5yuVKHJaYXLyCwuGVMxRPddHpi19a
1ln+rlx3qa36fPVsy3ctd/Q6Q9UF6l8tWKEzRRqfBc+XuZeFt5fnaDwULaPc
rzx/wS7tDZX4XzBc86jE+XLvV/roKj6v+s6KD7ov1enlewvOLz1u7RdfcdEr
3Ct8tXgp6tVc+YS696sZZuUeC99TjXzl3emZL3qkfHbJBZ37Ve9O686VX7rk
0dUMqvbOrur+koOKGwU/F49IvY4FJ7+YCyq4dKUHFduV6y7x80XNKveusa1/
1/gsrzVHlnNbzkHXWWK+8A3FwwVDFPeKni0xeTWTVnK/YNQSb0stU954VZcL
P/nxe9WHKZpLeZrq0+VellxYZiqu4ke53NXrJY+W3FeeoHVf47bk2lJfSv4u
vPHKd1UutPC01351lvUqnr+YWXq9R/HzFXvLnEzhpeXvuvdFf6nfW85t0TXL
fpVfaZy/vksxRLmo6gud99PapOe2aKKFb2itWc6k1GWd4VEfZuH86l8tGrDg
pObC1UzFa82q76646+IXaR5p7iu3WXroikWld6P1peyrvF+fUzTRcqdLTC6/
jbqaAXudz9XMkuL2Cz8X3rXMyby+S/u5pVdSeI7yIp2N1H6i1k09h1JHNJ6L
HlfO83Vulj2+1nn1zIKT+vsmjYGr+Y2FexRsUY635Hj53kUDqk9evrfghuas
cqTF61jqflmbzs+U9S8xo96OYqDWqRK3es6KIWXNGg/6+iom1d8oc1CF+6kG
+ULHKV9VTNY5mVdsq3+i3oh+V6mti1YqWuCFIUutLGvWeC51pGiiUguucnPp
/RWvaXmm+iRfYOzCMcozC7a/7rdwe+U/rzWUmq78X/OxfG95f3l+wV7t+RaO
ob1U1SOaF4vfWGKm4OfisSw8WT2cRRtqjmjtW+q4ntXi2aoHVfZYMEr3uOg4
1ZtXOveFYwWjvuBFVzG51NOC7dor1z0WbHzFs+q7L+rF4rGU+yp4ovsq9XrR
zl/Es655wfalhupnVTMucai8fak7BW+val/BuoKBunfN8XJW6o0rl7jyXbXO
qu5QzVJqUImBpb4s8aNxpfGveLWsQbll8cGuzlPvUbFFa8Qyu6tx+3W+l/0q
t9Tc13NTD7zgzI//Sq3ReqHvLzGgPkCJf+W3i3YuuLTE8NKjUX6rGK6fVU67
xK3OWb1e6/0Wr2DRbkXDlnp3tffFk1HN8sqFqxmtpTaVWlDyRWcANB+V3yrO
X2GjapAvZiq07/l65gtvr+qaxrPWR+25LB5CyfGFP1/le6mnr79rvVNOq3en
GnnhCVovyn6v+gsaG3rm5Xz+NMw7KW9ZvDL1PRa8WvRdiVuNk6v1a30ptUBz
cNEIuvcr3Na9XM0+lThXf6x4CzpTfTW/pJy5cNeyF72Xxbcp2m25i7IvxaKl
rn2RX3rOWhPVK1A9XnS01rgvtKd6QeX9Gm+q0RbM/NrvLfFfPBzVO2W/isPK
u0o9Kq/LfEipg3rOxe9d8Kpo+QVjtY9T6uzVnJLG5NIfV41Q1qD4c8UxFp9W
4798tqy55FTBxi9yc6ndy53q2RbML3m6xGSJH/UK9HXJ5eLZFqx47UV7GUWD
aB4pHyhxpdr/Snte3btybPVPyuxWyWvFlkUjLDGsmKm1+JVrpR4pJ7/STepp
XGF4wbFy18pnFK8Kt/zCg1Js1J7CVc1SP0pjRnG77F17fOrb6xmWuyu5oHl3
lZtL7dYareemvuWCqyUmtQ+4YMWC+QuvKBpZz1zr5uteCpcrtXvxA5d7L2d7
VesXH7Lckfpg+l0LLy04ucRwqQVLPqqm0Fpf9q55qlxCMVz7MhobSy9ecXup
oaV2Fz62+HUa58qri24qd/pag/oGJVZf6yy1qZyt1guNsZJ35bXqiHLmil1L
H3app+U8F05SsKjw/y+8UK3RhXMqJus5l5z92qMo61zy66U9tX+qsVrqiOZs
0YnlTJZaXM5/uTutcV9w5oX7LXVhOWfFgSX+i1ese1ly58r3K3V/0csF28s6
r3TWUgcV58saCl6p377UuNd6lr6b5nvhz6/zKblfzlZjoMTDVT0tsbRwEtVH
RUsuvder3LyatdNzVq7+hUdx1SspHH7xlxYfSetgec/r+eUeFz5Q9luw+oq3
lBxftKrGQ6lxuver9yj31nq9+CpXuVNqd5nV1M8uGuR1PgUbC4a8nq/96wXn
tc9+hVFaB5ffmCjfLjGweAXKe1XjlGcusaSYoPMP6nGpdtNZAq1xS24uMak4
o9iyeDJaB0vMa05d8eRS65Uzaw9F53mUm5V/Je90VmfhLYu2Kpi29MqXvejM
m87FvfZb4l+1UvFV9HcB2jvW+asvaoTW8VIHXzFcPPYv+gWveL7icgtGlTpY
8GTJWa31ZTapxPwy26C+wRUmK69Tj+jq+QVjF7xdcOaqvpc7LetcOKdyML3H
cqeLN6U8edmLzjSW2NCaousvPcHl/PXeCwdY4nzpx32xF+UYC7Zc4XaZ4130
rL5W/+FKXy98QP1Axf9Fm2gNWnpVr73rzH9Zc/HHCiaovtZ1qoeguKRrU32x
eOmlN6Fzyy9erc8v6/+Z7y+5qfVdOd6yL93j4u8tvop6U8otl71o/0vxVjG/
cMsvan3RKa9719jTOF/usfgwuhflyeqTvz67aOfiHRV8U929xGHZy6KvlQ/o
3hccU21S1qzPL7xlmad9xYPm5muPi/euveCCaaojFr2jGmThG0WzL7PTJdd0
xkZ169X7NX8VS7U+6r50jwXf9H7Le5RHFc1VPEC9O9XFJS+0tioeavyob1Yw
TWfwdA26R/WudS+ldvyu5rs0R7RP/bX2URxQbbv4q1d1YVmn/mZHuYRyg6vf
XKhfWp6z3NGVDi24dKXjlM8v96hYpNqt1I6CFct6VIvp+4uGKp9V3VFq3HJf
yiUKri54Us5h6aFoXStxq/xZ179o7aUXpnii8V98s4U/q8+gMaB8TM98wY2C
S1dabPFAlIOV81m400vflXpxNf/8yqmyzisedXWPV/GjeqdwYK1B6hMWHaq1
YOHMismqJRcf78Uhr/R14TaFe5fc0bqs/SPlUV/0Aq50XPE5X2vTGrd4lcu5
aXy+9nWV+2X9r9jTWHrdi/JnjR+Nf62PpaZf6W7FxvKeZdaonG2pa4vG1Hxf
ePgX88BL/up6lHMudX+JmRenXbypq/i58pkLDixaXnOn4ExZ28I5F4wqe1k0
ZuGr5bsWP1l9mLKX8szCkUqeau9j4TPqjSwewhXfK2eu+1XfTGuB5r7yZPVa
9V50tkp9zrKGhedf9ayXeynYuzy/aJDFCy3r1LvW9yh+Fi2zcGCtQXr+5d6X
uqwxU7TnMgO2cMIyB1jutODAFacqd6SeUpkRUv9W9anWlKKLNd7K+q+8EcWH
Rcso1i18vuSdYsuCjQV/Fl6k5/ZFXL20qtaCRUsqxmpNL/dSYnWZB3jFpM7Y
FCxaYkC1xtVsW3n+63xUL5R6t3iwymkLF1Keo/GpuPTCYe1DlZ7m8psL1WhX
XsdSo0tslHmDq9wvWLr0RpcZiYKrWkNLnn4x77HkoOoI5Ydf3JHqlwXbr+Jt
4dja177yE15nonrtKq70PEtdXvoyBWPLGer5lBqk2K54q1pAtZJy49f6r7Co
1EGdDVZPYMET7TuoT6X3ojWo/F1rgWJm0RFXPcGSj4onmu9X9bSsTTl54Ve6
r6XO6rmpltdzU6zTs9L8LdpZe2qvGL7iEoUvLX6mYs4XPQs9w1fsKZ6UvNZ6
VOJf42rB8KVWai0r71ff8nUX2jdR73HxS7WmqK7/Av+X2qq4t8T5MoeznEOp
7yWeF11TMFzPp6xtuQvlZiUvFs9cubdyicIrFj9cfWnV2uWZJRde5/bC88XL
XXJcdYpyyC/w82p+tdyRrkH3vmjPq56FPnPpKZQcLHMput+SU8pvNa9LrVxm
QRddufQvFk+vnPniPSrn1zqy4L/yvSttrhpBuZnGTzmHgjNlj1/ngta7RdMt
PHnhSGUvpTdR7mvRYqWulTxSTFAuV2Kv4I/OfJZ8XH4vtuCz+iflmQt+Lp6J
9qQUK8o5aD5qj+wLzLzC6nK2mkcL51xyquS+eh0aP8v9LnxMcV61pMZkidWF
1+lchM5XqG+v3OwLn/YqPrX/tcxRaHxqLrzWoNxYNd2VB7X4XcrflrxWXa+f
/WINeqeFyy097nI+Gs8L915qTZn90Dgp57nMBanWWHjLwvMLJ1fvRXF76R1r
fb/KlwWXFu5Uat/iCV/5TqUWaC9M/cnC2UpsL7/l0VxbtLxqEMWoEsOLT6v5
eNX/KrmgekQ1uPatrjC21OvC90rcao1TblDw+ZXXSw6WcytcQtegr1WjKQ5f
YZFq0tc5K29/5dHCtxfOvPx+reSs5leJMeWEReMU/lNideFyyqlKTVnyRd9T
zu3FnZSjlv0utXLhnKVuFmzXO114/rLf1zp1HuAq15RXaIypT6v1q9xp4R4l
fwv+a59Oe77KSbQ/Xs7t6vdli79UOPbV+S9zFMrNdA2Lh1zqS8kRxQ3F54Uv
lfXoPeqdvs6wcOaiGb/4rUHhe1c9L+UD5bckS0+qvH/BzyvOdsVDdN7vhc+6
31KLyxrK+WidUt+p3GnBitIP0pxSvqQYrr6HzlsqtpRY0tqkGLL07PQ5V3la
tMkV71p8m6IHX/+WHuJVbdXcWWZIlEdpXujsetHXqisXXCpcQs9T+xFLLixr
WM5k6RGrz1M88IJLrxwscVWwQns6eu96Dld1auGiV/NCix5UTrj4pbp+rU1F
j+uslGqrK/6v8V/ycdHsizYvr4snoPpUOerV+aunsej6RQOWGlTer3en9VG9
FK2tyuGXHt/yupxtqbk6i3IVG1ezYepvqGe47LfcRfGX9EwUtxefp3iJhcNc
8eSS1y9sVP3yquk656A1Reuaeibl+apTFB+0Ti31t9RNjY3i3ZW9lN73UkdK
fJb4V+5a4u2KVyze0eIvLTmu+LPguWrqpc+7cNTisSg/XHpP6mmoZ6JYVDjG
Ff9c6ovyT8W65bMFQ3QNV2el36V+kXqeZV/KjYtGKM9RP2rhySV+Xvsqay6x
XWrBUrM0Jpcex8KH1cvV2V3tbRVfQj1Yjdvf1f0uermcZ9EmqhkL91beqN6s
9vvKvhZeWuKw+CflPUUDLjH/RZ9C8+V1JroGjUnV5opFJX81Vl9rW/yQrz20
RWuX+qK1vtSa4p+U7yqcrZzJ4n2Veq3PL7Wv5GCpTcoN1FN94Y/W3Nc6y/lo
DSp1XPWO8rSr+CxxdeWjLlhR4uGKa13dr9avxf9Ujqd5pLxi6e/rPX7hLxUM
XLwL5QBlRlTPqnD4L/SgerBXOLZ4EYrVBbeXvskVb/zCQ1N8Lrpgiefl3gu3
1Pi54iFLPmrfpNx14d4lDpWzLRxV+UA5w4WTq8Zc8Ed19xW3VBzQvC5+6ZVn
WPJLudbV/WrtK2vQunylYUtMLrPcRbeq3655p3XqynfSXCjxpr5f+eyiB6+4
q+LYFx6X+idXXpPi1euzy5yD1k3lwFczGHr+y/mUmC9xtehx7Tle4dsX8+fl
nPVOy7ldeQUF55eZNJ0RWjyZhZtpzJdYutrX65kLZ1i41tX9au0rGmrReouG
XWaZrnp5ismLv1T2u8S54syVH1J04rKvRX8tXlmJ2+XeVTurT6L8reDV4kEt
ukD586I7dAZJPd4Fl4rvccU9lAO8tNKCIUvtKxxA+duiuxevYPEDy3cp9r6e
X95f4qfEhvqNCw9R3lj43sK3S81aamuJ4YXDq5e4cJUyj1dmmYreUQ5Z7nHB
Q8UrjfPCJfR3NIoPS5294thX+FnituT7lY6+6rUtHpSus9T6xdMuPFznSbSO
X3mYBZeu9I5yj4Jp2u8oGFL4WImNBQNLnJczKRxJa8qC1RrDes7KT4qeKhpQ
47/wkGWW5gsuVz67cNHynFcuq5d4VUNfMa93p9qn5Lj2jMq+NAY0R664merE
4ofoOSs2LrGxPLPErfp7VzqurKfE5BdnvnxX4ZAa86rpyh0VPrN4UyVPtUar
N6t7V25Wav3C4Us8KAYuGm3hRZpTBZPVa10wSjXU4qcVDlxiQHHmtS+dSylc
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
jyr7WnBm4WCqB8tswNK3fcVYwSvl4YvvsWBCqTvKTwoOK84s/8r3as16PV97
Oq+/l9+vvWJgwf+r2RLFtJILZY/lPDXOy3rKvhRbVNcvfpHi/6LRlKu8aqjy
58UX0hhe+r8LH9BaVmYbVEsq5y9zlUuuLVxu0Q6F6xauWHSx7rfE3hc8qmjb
Ky9IOViJgXKP6qUserP4olfezsJFNV++zsHCi7TPu8TwMkNVdJDe0aIN1Z/U
NSiXLmdytWa998U/VPxXbr+sRzle+d5yF3o+qmuueqkvDF/yusT8a80LlmqM
LV6x1kfVRIXDlFzTHCzc+Kr3rfFccLXs92reePHHrrTtF9hSzlnPRHvQyutK
3CrXKjVFeeNSr7/OwRJLWnPLetQ3LrXjSjuoNlQuuuhuxaLC51WrLve+aL1y
L8uMn65T/aIlRxSHVX8p1ikHU79C46HkxdUce8kX1XqFk5Sz1V62cqpFzy5+
l/KTJZ6XmqLxXHiv3q/yTPUZFj9c4+HFN0o/seg4zd/CQ5b5FsX/L2YOl5zS
e196Xrr38hzliq89ao1YfAPNL8UfrUeK4Vd8TPmqapmynmXOSrHrtX7FOsWE
Fw7r86+wVM9twecrbXvFHxTfXnenPF9j70qnl/1qbJT4LLmwaJYSP4pjhTsV
3Nac0rMqda3UFPUBtN4p/pd4Vowq/Od1DlczeMssnNbZ8netd0vPq2CdvmfR
iToTohp/0VALxyi+X9Hvy5xbwYrCGUr+6pzVEs9XvtBSK/V7F0/vVfsWLF14
neLzF9pWOYPyvZILWpfVq1Ff6Ep7LnGi9feqr1r6XwXHdA6w3F3BrtKPWDwf
ncG7yt8Sq0vfsJxDyZ3FPy/YWDh/ifPCIZfaVHwSPZ9lbkpflzXrfK/yCvXQ
CobrGsoey/cunLPke+E/V35X6S8vHs7iC2ksKf6r3tHZtoKl2tst8aOaeuF+
ZTbv61n3q9caS+oJq/ZUvvS6u8X7LWd+9Rytm8oNSv4Wnrx4PkuOlzUUHqW/
xSjPXNapOlo175KnV77Tok2WfCl4stRN3W/hluoTqn5cavHiCy3PV657pUHK
fanfpc9f6ukVt190q+apametfUs9Lfd+pQGveGCpEZpTJZZ0bT8TbzXX1K/Q
3/6UZy65pr7Qq25qX0b5p9bHZY8lx5dY1Zq+xLlyYOVCqnnL+/VeFBOW3zEt
voTiwJLLZb86F6HYXupjeeZr/YpXql90v0v9LXmnOq5g4DKT/3VtLXenWKR8
o+DAlQ4qvHHh2F/4jQsPVM58lXd6X1prlh79MrOh3mw5t9c9XmFCwb0rrNA+
/ut8lOuWPWoe6XcVnb5of8Wxcv7K/Uq86ZzG4jlcaXblriUGFjzROFHPR/9e
eEXRywU3St4V3F708uLhlDhX3quYWWJY13ZVW0tsF323xKdqvWXmQXO8zICV
e1eNtuCJnr/eu+adapCreYDF13ppRl3PorWvMKH4G0u+FN2tsbrE/yvvrnww
5VdlzYoJml8LV9QYXjjhFxxMfcsSh4uHv/TvFo/o9dny99f5LP2+xdPQ2lQ0
Tplr1fnMRQdpLVNtpXe0zN6X83zVi/Ja41O5imp/nYso+nfhV6XOLnii56+1
Q3m45lQ558XHeO132YvmyDLXrZigWkPzpcR2ib3iS5T4V/xcsFrf88rTq9zX
vNN8Vy9F41n98IWrK9fVeZLyvYp1Ov9cYqNoVe2DaI+v5EhZf9ECC9fS+Uz9
e+H/6geW81x0kNZWPdurfkE5H+X8X2jhK32hOLbk41Wf9EqT6noWnqz1Xbnr
4j9c+TyvdS79C8XJBZ8XjqQ1QnO5zFld8Tr1db9Yj8aw7nHhukVPXWGU+j8l
fgpnW3TZ1VzQ1dzOwqmW+R/VC8vcTvFbCm8sXEh511JrrjyfxXtRbn/FkxV7
y3ku/Eq15BV/XjiwerkLVisHLutRrqJcUc+8YP6ifxX3SuwVHlXyTrlNwedF
oy29vGXGQGucau3Fn1nWo3ysnNXrPVqLC4aUer2soczB6r+F/ysOX+XgFWdW
f3jJzcUXWjDqdf46+6Sc7YrvlbUpp1o43sJnlO9pvS4c4Gp++IuzLbFUaoGu
ofCZJd8Xv0vj5LXmkjvL3LWe7bJfxUm9O+XkCx/T8ynavPAE5XWLhir3VfBK
8f+KixZsKWey1I7SX1Bv54vZqhKHX2uEL3Jw6bMrzpT5DfU8X3FSNMiiHRYP
6up3c8oHrvwT5aLl/UW/aC9y0X2KCUU7L3V5OdvFK1att9S+cteqKZY4WTib
/lZIvZervrPi5OIDF07+4vbaF1t09xI/mstLnX29X/Wa1qwrX7Ro/EWnK7fX
WdPld53ay3591xVXVO2/5GCJQ+1xF6+g5F2JH+VvGm+LXiuY8DM5Z+E5Wpf1
7jS2Fx/yav0L91Me8qrLSy/jSjtoLl/VPvVkFi15xdnUz9SacuW9X+VjwbeS
C/obH91XuQv1E0pduNIIhRdd/Tbhdadao/WsNL9UCy91XGd4NHeKLis5fuWf
X/k8r88WP6Rg0cIJX+e/8NWC7Uu8qXek9eKKcyquLlyu3KPGttampeYWrFO/
Qvv1qgcLB1u496KVltqnNeUKb680S1lPwUzFN/Xel3wsZ6u+1hV/Luem81H6
XVcaYfHbFSsKZ37VkRL/qnk1/heeqf0XxTf9HZPObyiH19mPK5+n5EjhEgXT
yl2XWCp8teyx4OdV/VWv9Ypzlvry9fOLTtf6qx77FQdTvlq8rOL/lNp9NfOz
1KDlrEpdKNi+6J3l9Wv9i6a+qnellikfLmdb9ljyYunLlOdfafaX3iy499qj
Ylo551J3llkj1fILx1ZeoV6ZxtiCOWX9C1/Su/vivkqOXNU7rblLXJW/L/Gs
9XfxWtULVY2zxK3m1xK3i1+08LEvdJbGyRUvWuJ/8ZnLXjSXlxr0xaya3vvV
jFCJyRfOLz5byTXF84U7LXekMaD1UWOjcLzCG0utWXJT11x0onI55RVf9JVU
u5VcLnVhyS+Nc72Lclbqc2qO64xT4Qmv97/u5XWnVxpt4avqdS+4vWh8ff7V
bF65I9VcSw5eaXzlJFecs9RZ1aSvu1NN8Xqm+tuKPws+X937lR7RHpl6s8rT
rnTfVV/m9czX2Wr8K84Ujq0aUHO/xH9ZQ7kv9SEVu0ruFGwpPpve75XWKBpq
0VwFN67uSGNg0f5XPoPmoHLgBZ+VryoO6xy+xoauZ4mNsh71mZcarbmjMbbk
oGrAL3oQC796xUw5T51DKOd5FZ/lOQsX1d8UlDWUs1p4juoOvYulL6NnvvgS
yl3LepQ3Fo2vHGnpZZfXS50t3OmKS+i5LVpDZ/OKp7r4BiWuFA+L1l7qmj5z
0RFX2mrBhHIvC59XLrScf+EG6lWWM7matVZMLhqk9ODKHkvt0z6Rel+F4yme
LBxDfb+Fr2p8LrG0cFGdT1Bus+SU6o6l/7hoPa0R5bOldpdY+plzJst+9V6W
HFHedZVrC6aVvV/pPj1/PYdyR0uP4BWrhWst8y06C1HwpNxR0VY//lv6oUvc
6t41N3X+TXPkSicWnCzfVTB5wbeiv17vL7xRPT31ZNSnKvGpfK9g9aKdF61X
MFBnG5b6/sIorQsFHxY813wpufP6rtczF/2inOTKH1AfQzn5UuM0ZhR/yhqW
ucEvuKvqzSstUOJ2werFz1n4g77WXv8Sz1cxVrTDgnXKGUrcLhpK8/21ZvX/
Nd/1jvQcCoaoh7zoL70LnUMoZ77MAmmdvfIlClf/QustOKN3rfhQ9njFVzWu
rvh/2Zd67wtm6nygxrziatF6RTsUf0Z7iFrjyvq1TpUcWTCh8IGiJZX7qX5U
/VX8nIU/LJxzeebiBS1zR6Vnp1hX7qhw0VfcljN/PVO98YIJOtuzaKVSX8pZ
KYdZ/E/FyddztO6Uu9bYe63n9Uz1ChatWta2aL1Sm8p9qYbV9yxnW7Cu+GmF
k2juLHFVYlUx8/V+nXVRraoYW/ZS7mLprX/BLQuXK2tQPqPPVJ2ivGLxUZVD
LjG23Evh3ssz1R8oPL/UWcXbsq+l3inOlztVv2XxOl7rWfpZi2eid1HOqjyz
aMyC82UepmBvyZ2lJpbnX/nhrz0WXakeRfGIFn1XevfqSy+eT8GlwgEWPqMc
rKxn6fcV7rF4Poq3irGLj63vX/a43OPVHGCJW91j0SkLt9d4UP1+xXWXmF/m
03Q9xf9XH1h9M81l5UuvuqnfpTGm3EmfU3JN5zTUM7ny4UutUV50xevKa41z
xYqFTy6zDRoPV7N8i2ZRPFSNqc8s61dMW2rQMgdYXutsRqk1yz0qbiufUY35
RWyXPSoHK3tZ6kvxDRZPbLkX1ddLz0J57zI/vHhl+kytRwsW6TM1DgtGLfW3
eGXLfS28VLnl8szClxa/WrWtcm9d58J/VKuW/mOpFyWeVZ+q/i15vWjP172/
MFk5ktbxEm+qJZUfXmmQkmt6tiUGXs9ceEg5h6/rtc6jXsX24nEpX13OSnms
Yoj2LFTHlb2UWlDwfPH3lvwtMbk8p8Rn4d7LMxfPU2vfkpuldnxRH1+fLbVP
9dQyq3k1A/O6X32PrqfgofLekjslj8rzr3h1iTG9R92jYkKJ2ytsLOtfeELp
rRTOU/jt0vcp51liQGe3lrsuz1mw+soX1f0uMazzCZrjpXZo7Ssc/vVv0RqF
t7yeU85H422ZW1Btvny21A6tBdoH0fmBcs6LvlCvoGC4vr7CNNV6X8eS8iL1
GMt6XvijvfXiA5dz1tk59eJ0TrU8v3AD5Wnqqyy676oXoO+/msMse1H+8Pre
V44U3Fv8t4WT6PlorVeNv/QvlLdoviy4rWvWM1RurDi2ePtaT5d+hGKO5rjy
kC80ftFKWqNL3SkapNzjlXYoObjUwaU+6l0v3OAqlhYcWO7xigsV3fQFhylc
d/HnFcfK2hYsKjzk5WmonlXvqOTs6z1ad5Sbqff4RW9xySOtL0tMvvarPH+p
vwVDFh1avPfyTzG59Hk1rws3UK2n/m2Jk3IXJQeXGrdwfuVdi+5TXqfcTzmt
4vMrJvXulDspr1OPa/Ehl3wv96KxpPd7xZ2uuOLCkRYOc5Ujmo9lPUstUOzS
+WrVHeoJLD3QUhNLDJQzUe+xvKec55JfJc6VL13luOa1YrKu+WoO84vfCim+
KQYWPqBc5XUOZW1aQ5ceq8Zt4QDqARYcu5oV0XxXvvrKl0VfLPe4eBRf96yv
9HvRAoXPl/v98bP6W0LFeeUei69basGiL17r198Tlfu68ifL+q88hCs+ozp9
yRHd16uearxd4aH2OtWPLdzp9R69lwU3Sm3V3xYpPpe40pq75HvxHDT2lJdq
7VMs0tpX8q7k/hK3xVcv96h5Ufiw6v2CMy/t8OIh6j8sdVA555KbX/Ssv+jz
Kp58Pbem3Em5x1Irr3RHifly5stcdDnnLzyKxUMo6yl8RvWyckudvy31VOuR
4r/GgGJLuV/1TJR3faFZ1EtX30C9mvJafbBFi33hz7w4pO6l5HWJ+Re3KfVd
c0prytXfr/rjX/i9WqeWObGFU5XaoVqg8IGlZ614XuK8xL+eScGlwgmLb7Bg
xVIry1npvZT4X/q/Wh+vvHTF+aUfpDxQOZ769kv+Fq2kOKx5rb1CxRPlpa/n
K9e60iyqp36mFnv9K7V40X3LTJdyDNXUioFXvVf1QJT/l7te/r7E2ytPr/ze
r/n5i1cs/5STK7/SvFt6/cU3WLSw5l25d+Uz6rer51Nqpa6h3MtVHmmNLjVu
0XRf1I5FR5f3L3N0S/904SQFqzWvF/6sPqT+hq6cVdEOy9oWP7xg0aLFdLan
3FfhIUt/ULnokvt6bssZar0rMVkwQX2MBWN1zuSLuSDV4Iv2LDpFfbOrGWDF
UuUJV3xAa5bWpsL51TvVM1lq4jLDo6+X2YyyX9V3i5e+cOZS1678qCvv4nWG
6iPp/ercr2KR8ucFhxfOecW9l/sqWr7U3KvZmEVTXHGkEldXPF99D9Vuy9mW
syqc5/X+ZT5KZ2C0FisHKzFzVWcLD1Efr3A5jQ3F4at5JMXehQ9o3JYaV7Cx
aGrlqyWWSvxoff8iF670jp550arq5WrtWPp3C49SX1TvWvP0Sjurzlp6pgWH
1UdaOLw+s9zXootVL5d81Bh7cZjCIQuuXtXBEuelDl7l8pK/Ove7+G9ad/Re
yv3qDMwXPo9i1BXXLXFbzkf54TL7rZpr4QNXrxXPte5rTVn8JY2fL3JB9enV
/K3y0oJLqnP1e7VGa9yWulnuTvv1ix9bsOjFCTW/ilewaJCFA6gW1ti76iEq
T9M1lzle5bfKt5e53FLv1K977bHUBdXFyg/L917N0RWd+IU2LzG21OsSt4vn
s/C0hVPp+wtOqm+jnsAXZ6v4v3gaX/jVS/xc4dUyG7PkftnX4i2Usyr3qPp0
4b3KN0ptXbjHonOvdLrOgJVnlrtYcmrRDuXfVYypXiiasayz6DXVeuXvL42j
mvGL2q3+5MI3FKuXvpLqprLOJb80fhYsXXjIEntFv1/Nti21uOgXnT/UNSx1
SnviV57k4lcv8VMwU3NBc017rCU+VUcU/FTOX2pfmbdU3lvWv+RvwTeN2xI/
V9pZn6/Yq/hccPvrWbXim13pxJILGg+v2F68msKxF6xWDlYwrfCugjOKLeU5
V3NZqpsUozS/FG+X81y00nLmi1evPq36b0u9XvSp5qDigO5R+UmJ8ysupFpP
OYbmWqk7mvv6/GVGSNezcLNy19ovW2JMvWutp8q99fnqkxfsveLtyjP1LpbZ
bz2fckeFxy698nLvi5ZceEjhA6V2LzV0qY9XfojW7uJrlbhdZssLthStp/Gj
WF28poX/6OvXOZfzXHiL1ujFJ9G8Vj27aIqlzmoMlJgsd7fgmM4sKdctXEvn
A4vHUs75qu6XulC49BJjOpNW1qP8QfNdvc1XDOg6lb9dcQDdb3n/kr+l57X4
z+r/FD9HcXLhIZrvS21d9OzVHFGpEeV7tX+tda3EdvlswSL1nJd6vayz1MFF
ayy+zeIN6r28+Nuiy5b4VE2xYNESA4rPV/xW9exyL1czGMvce4mTpV+5zNho
jBVtVXiLfu9Vnhas0/gsz7/Cc9UXitvaC9N8UVy6qjVfa/DlbBcPQfO68HbF
lgXnNZcXHbfgXuHGVzW03MXi/1x9donhRc9qL6nUryvOUHyqkpsanzrzsMRD
0USKXcs5aJwrbpf+neoXXf/S9y/+Xpm1U25T+sLaZyl156UHF3268OdyR6/9
qod85bmpV/bSMq+/K25r3dfvep3/subCoxYNvqxz8RA0r0uMvXJ26ekX7C25
XPi8rkHXo33Yqxq6YEL5u362nL9yJ+0RFyzSeyn4r3vR2SGNz6uZQI0HzevC
WxavQ9esuubF0/RM9Ny031TWWd5TOMOVni28XV/rfkv+Kn9ecuG1ZsWuJS9K
Dbry9lUXX3n15fm6ZtURpeYunKT07NSrX+76qk4tsx/aW1eu+/qugtUFB7Q/
rndXzkHf8wXvVUxYzkr9Fo0N9QcK5iuXLvFZauiCaerbFNxW/0T1xaJxXt+r
/e6FLy1zmMv3Kpe74l3ljpZ1Ks4sWkzj82pOTLl6OXPV71c1bqn76tUX/FfP
WWdW9S60Z6GeoerlKz6jdUrvaPF+9bOLR6rcrMS59uCuatkSM1/3cdQn1Htf
8HmZoyg5VeJEe0l6zuV7F85T7rS8v/xd/YeifxUHCkddON6Sg1ecU3FD8bPE
uXKqEmNL76bwKMXzUn/1+QteLThZalyJB+XwV73y4jmXfFl60AuPLWtTTFBP
QPeuekTn2BdOW7yRK7281KBFzypnLrW1xIziWDl/7Wm+1qYene5L5/BLDGsd
X3RQwV5dp/7uRucSr37XUzibamGdtVjmkZTDKF4teFjqwjIvUc5wyRHFZNW/
i5euZ144vPYXrjTREueKvQXDy/zA63yueq8aD1ecTXFA/QHV7yXHtbYqL1UN
q17xUrOWun8Vh1fapMSVznopNyg5XniCYsjyvUveLZ6AaquljhesKPhWsPq1
r8JVdO+F8xQtrGtT3qX48zqHwqlUm6s/Vv4VLVl0on7XFxy7rHmZ3bryGxXH
Sg298nI13tRPLjlSPPBlzVoTy2df9atwsyVH1C9aNNQyw6D8ocT5wgGUQ2rd
L3eqOaWzlFfaU7FL41k5sPINjeFyngsuaV5f+R4lrhQ3lAdezQQuM/+Kb7q2
BRNe73nVkYVTaQ0tnkPJEa3veoZl5mThD4vuu/IxSp0t+y19EH1++azG2Cve
9P3a4yjYtWiukrMa84qT6rdrHBYc07pWtM/ynLLOV5yXeq0YsuxLY6nUGo1h
xaWFH17F89IPXeb09NwKLul3qZ9QvBTlxoobC7dZekPqhyzfq7F0tZerM19q
5eKPaX1ffLAvzkTPf/EoytrU61t02YLnio3ac1evSed4S8y8nr/oIMX85dyu
ONtSs/RedNZI/aiyx2WO68o/KeegnHDpvS4eyMIP9XcfS11+4fByj4o/2sdX
7Hrd9TIzX/B/0afKbZY++6vulBwp2KLcrLzWvRRvULlT8R61Liy/zSl1UDmh
flZrinLI5bViV8FJnQNRPFdfVGd6r3ToMlNa8lfPR3FA11YwUzlbwaLlNx2K
UcUXuvINVK8tmmKJ5/K92s9d+kqFeyy5s3A29TcK713wc6lZi+d8VafUs9U9
ft1X/ZkzwAVPvsAx1TJ6R1dcqNTEpQe38NWl7ut9LXNBmsvKFRdvtnCw1zpV
I5Qc13UWHao6vdTZ8v6iYbU+Lv0CxfPCDws2Ko6pvvtiLmvR+Iqf5btKPJfv
XbjBgvOLvtZ40Hqx+LdLvmssqU7XGlTOWXFv8YGveIve48L3Cn4qb7/CsVJD
F86jcyBaszS/1L9SHFMcKGfyyp2reYOFeyw8szyn1J1lRn3xJFUX6HMWLl3u
q/A3PduiBb6IW42fK/2unGHxo1TjF15XcrPwxuKV6VzBwuuu+hTLOrVeKAdQ
fFh8OfWpvuZ1yxq+8PH03K76qsrJdc0FwxdfveRswfOCk8pdX/stOFb489IX
WHjC4tUUfNMcLxxM41PvV/lVwZPFN1g04FXuK/4svS3d4xJvJZa+iJ/Xe5Ya
VHj+ope11hT8/EJPFQzRcy77KppU+xRXXKjEoXp3pXZrP670fcoZfsHfljq1
4NuyzqUul3tU3bTk1OIvFV9dfaSlL6D+8xU+aC2+4u3q8yz6XfelHEb3q3ii
+lrjp/CWV4wVDaj5uHCYUtcWzCy8RbH9Cus0frTHtNQg5QBaQ8u+Cp5ffZdy
lZIL2o9YZraXObFlNmap40t9VF+07PGLXsZSp4o3Uvj/FQ6UXNC6pjGjOXXl
LSv+FK26nGfxnxdOpXdU3qO8vWjwUt91lrvcxVUdKXss9aV879Lvu8Lbgv+a
U8tvK77Af+2bFO6qPE1xVWuN1ogSA0vtuDqf1/eqH1i+S+vdwvO/8OTL3hf9
uMTS17W4cICCsT/+05n5K26v97v89mfRDoUnX/kJ2icteaf6TrnQlXe95ELB
E33OleYqZ1XwWfsUC+fUNS+6XmOm+ANaK8uaF7xVrbfMSH+hcRTnX7VYdaXW
6MLhNebVv9W+7VXt0PNRbaX7Lbps8R4L93v90zst/LzktXpHxZ9UjF3eo7qj
rE1/U6b6V3mmannl/6qbFj2+8C7lt6/8Kvx/8UsXP0HPVtdw5X8uHKC8p9zX
ws/1HJRDXs2Xlti40mIakwVDFq5SPIGl7qjGKd+rWLF4LAVj1ZdWj2K5i6+9
6PKcxdtZdKXW+oJjOpe41JdF6y015YV1ql+Wf+VsF75aZksUk4tu0pzSGVfF
jaIfl9go96taT+uO+jAL1yq5qf2aF2cu569nsmDRoh2Uh+jfX+egvtOyd/Uh
y3eVOLnqcS91dlmPxpXyB32P9qQUq8vcgmKp8quyfuVXV150qUHqeZbzf32v
cpil9n2NvYvWW3w85T/lHrUPovMPOg9Q9q69IeV4JafKeWq/tWgonZcoPQjl
kIonS77rPJ7WWY23Kw5wNdum+nfBh3ImhUuXXNM6WD6rfkupBS9OvsxaLHF1
5fvpejQ3dd5D67Liv/I0fc+V5rrCFvUxvrhrxfxSK5UrqjeiWHGFvTrDU7R5
8fGU/5R7VD2oukC5+qLRCv4vHG/hG4pLpaZfYUup3Qt/U521YK9qkKKPlBMu
+mLh6ks8lHPT+NecKthb8ER7HOVMNMZKzbriLS+s1lwrz1lqeomH4mFe9Sn0
3pfXC6/TPRZsKfFQ4vPqrhXzr3SlctESn1oHr3riWtcWzVuw8YpX6PrVe9Ec
Kfde+HPJ64Ihmtdaj5THaty+cv+LXljRWYvfXj5bON7rPa/3LzXuKhc0Hgo+
XOmpReeWsyr70n6B8p8FHxbM0b5/wVJ9/tUMhnovpT4WXFLPUHFVed0Vn3nt
S/HqytMo51nubtGVmlOq6Rav9UovKLfUcyte2TKz9AXvXe590Sa6x6UXX7Bx
4atX+FzutHgj+m/hFarBr7hTiSutZVe5UM6t3Iuus/B21ao631V0jfIK7Q0V
fqv4UN6/aK6rGSets2UvX3D11xpK70y58aINdW7wql9zNQeo9Ut5XTmrJa70
PUuNu/JqFt6o56b1S7nB67ML711qVtFEZf3lPcVTVT6vHKDk2oIJGmPq/2gd
1LmCEpNX8zyvONec0t7Kgv/ax1Q9opijHO+qNmmdXTzkMpdV8OGKky9xUvht
ec/iUS9aW3n7wrf1bPUcCoYUr7ucg/aGlni78uqvNMjCkZRPvmJs4bFa00v8
XHH4opHV51Fvs+Sd1p0rLaBYpx6F1ibluleaVL2RhUuX+1V/4GqeR89EuWXx
VRZtorVDNchSy9TP0dpU9lhqQeHGCw6rh1OwUTntsjatC8XPWXhOwVWtNcV/
+PGzV+ew1Pol7xa+rZ7Ji1cX3q6xVHisztWUz17VuMLHFmxf7lc1Tlln4eSF
vy25sPi9iv9X+aX9ff3ekke6/kVrKJfWe1nyt+xRMWrBq4JdBW8LRqmvsvBt
9Yq/8M9V4xSNrL9lUB61eKrlrksuL15cqQuKb4pjS9+5xG3RKQu+LZytcOaS
d1fac/EHFi2pubPM1ejrwuFL7midKth+5b8VnCm4Ue5Ifd2idzQXvogZrR0F
H/T8df1LX0/XuXB4xa7Fry7rV//kay63vP6Cw5faoV6K5p3GSTn/wuEV97TX
dhWr5R61ZhUvbuk16Bq0H6R4u/gAiyev56De4NVvBov2XLTA8vuaJXeWe9dn
6ryBztssv4VczkFzXPmhxpV6m1f19CpmFtxT/ly8naXuLHdX7lQ5rfY0db96
Fz9+l/Yrr7jcgntfcPjX+ahnWHCgcD/Vd/p6wVjttRUfRn2Pki8lR67wU2uN
4oDmQjl/5eqlPmqMqd7RZy56ucRqOYcX3hbtU7BCtcCiebX2vZ5fMETXVs6t
PH/RR1d1UPs+hYeXGPiZOuWqZ73UfeU8JaeUAxSeXLio1h3lQhoPZc3FQ776
DU7BqCWevzgr1WLlrlVDLb8V0vqr+yoYqHii82/l3L7G1cIxNB4WTFZs1/hf
+M+Vxr+q9YtmXO7xtRfNI+1HLDNjV3pfdYSurZxh8cG09qm+0/gv+ujF8zXH
v9Ap2uv5gjOrvivrv+pxKE9YcnzxZktsfOG9LzM2X2BU2Yue1RUfVl+ocJiC
nwu/1bNd+l+v8/+Cuy6eqtY71WgFG0vMKK9b4r/wnKvegeJVyfGCFQWvrnzs
klNlnfq7lYLzV3p/4QxlbYpLijOlD6icoeBYieGiZfT9VzplmUcq3K9w1Kva
V/BTexxXdUexS+tU8YW07igmLJxn8eWuavHVrLXW5VLfNRd0Du3Fb/VeFjwp
91J4e6m/Oje4eIaldpT1LzqreK1L/Bdvp9R31eDam16wV/3qZfag5JRyA+0F
l/eoFtDYLnqw+E5a73SmQvF2yWXFnKXm6vcuXLF40YvXXXDgqn9RapNq+aXu
aA1VLbl4LOrBKjYqRmn8L7V48WA1fjQeFqxQzNRZRPUTXs8s/EdzbfFLv9Ds
iquqTa646xfxpnG11Naif5cYW3JB71G10he1WOOw+HJFpyjHK/VddeXVmStX
V+69eDJX/L/cta6h3HXRSppfOh+rsbfM72ndUXwrsbR4ucvdlTsq61Gfecm1
gj9Xc5iFc2qNuPJdl3zU3Cl+1+JrlVy78qAWzb7w4aX2KWdYsGvRXF/ou2Ue
8hVjVxpc+0G6l+UeFy9Xe9bK4RXTyjoX7amcWblTie3FD1QeW9agvYOSayUO
i5YpHOD1fvXAtTen96V5pHqhrLk8f9HRr3h43ZfuXev7oh+vMK3k7+JfKV8q
56mxp96C1lblSwu3v/KgVKMpr9a9a35pL/Iqfxe/VGNAz+rKM1S9sPgeZS8F
c16f/YJblrUVnNe9KC9dfIziqS6vF92nnFZ13IKTmneFK6r2/8IH0JhctI/W
FJ3D1J7IF7pP872srcSt1tbiSyim6fdq3GqcLH2f0otcfDb13pU/qy7Wvv8V
B1AcKP2dknflrr/O3yu8LfquxFu5l1K/Sn3RvSy+R4lPvZcrbqnxr9ir8an8
XLGuaKiyx6XWLJxWcX7BST1n7b+rnl3q7IKZVzhQ+tGq9/U9Os+/cJgrvq1a
TPWazmwUPlbWVs5W/QH1PxftrPhZMPxqbrzknWqBxWcuPliJ/6JJlWMve9f8
LfVC8bbEiT5TZyQKz1T+sOSm6pSlLiz+hs7fLl7TUmcXL0vzopyV1prFt1m4
seKk8rEvtJU+fzlPjfmlLms/evle5fOKsQWXCr4pdqmmWDie5sVSp15/V8zX
e1/q3WvNy2vlGIrbSw0q+1UuXWp9uaOCLYuGfeXy4n9e6dwrzvb1XopGXjj2
4rFoXSh1c5nPKZ5DOYcl3sp+VYvpPS5xqxp/6bvp+WjcLj2g8lnVxSW/lA8X
TqV1ufS5ir5QLH09p5xJOQf1ajTHdT5QdU2JGa1N6mmU81/O5HXvBesUJxW7
vtCei9Zeapmem67hik8qnmhuLvGpOrfsa/FFr/ZS9IvGW8Ec5UJLPV10/RXf
LrGk71kwTe/3tYbX/aoX9IXGXLBo+ezC7dUrLnmh8yFLT7NguPqcykmu8lfx
cNGYrzPUeRXl50tdVl59NadXvqvUIP1NTbnT1/uvPEbVnks8F6zQ3F96XsoP
Nf4X7ay1QzlS8T2KD7Z4+xr/5bOqH9WLUG5Z8KHU0ysMKblT8OcLrljOeeFm
C0cqa/va/1HsUi6tuKrxX3JtmdPT3xQUrlv2oq9f+a5cVHtSV9ys3F3JHe1P
qR+ivPpVi0vOXnkOWjsK/pR7KWeo+KZxu+SU5ulSXxbdvcy7FpzXGlHmzZTz
L/NvZb+lp1a0W9Eaqq0UDxUTlJMU30a1vGLIUtM1bjWXF36rOVhyR/Hz9fcr
/6foiyt/bJk5+QJzruZ4Syx90QvW71Jtrrxx4WYLd9VzK/Gps0bL+ai+U89B
a8fV+SifLP7261+J26VPscSb8tirGTPFXr33wnk0TgonWepUydPiu5Y9fu1F
aAwUT3KJn/Ic5eE6X7f06Jc71fcsNXrpDRX81NmqoosLd33FRuHDy+sFExRz
Fr59xWmLdtYzKXFeYkB9ANVlC0e94myq1womL/mlr184efVdmmvKu0psF3+4
4PmVJ/las+ZpOcPiaagHolinNUj5s971UqcWnrbU2S/40qLLlv7d0v/SmFGO
obW11IJF46iOKzV6ieeFOykulc8qx1btozxEf3uy1MdSOwonVJxXTFBdfIXD
WiMKrurcmr5HX5d1aq5pfumal/hZNFrxglQzqoevGL7E+ZJfpV6UuNLXOlul
9V3ryGuPxZ8vPLDUKcUcjc8v6r7WnatZMuX/V76BajSN4YLzem5f9IWV+2l9
VB9vwaXFl1iwd+H26peWHFf+oHioOK/vUU9GtWqJVe3nKvdbPPMllxVzvsg7
3YvOVi3e/uKZlJxSv0XPR/mScvKrXtLCz5XnF1631LKFS3wxm1QwR2NJ8Vy9
RPX2X2e4cMJyDgsvuqqPOqOrNUJrlmq6Kx9AZ3W0N1RwSc/2Cnv1fjU+Na91
74Uz6zzD1Zlc8VLNWeWr6okVfad1vJyn3t0VhmuOL7x38VjKvlQ7qH+ynM/r
e0vd1Lhd5rVea1h+76CzvlrXVGcpN9NYVf1V3lPOQfG56EfVbgXbl35TiRk9
N+X/Sx1fuO6rXiz4r/WrYEiplepHLb5c0SCLdlOuUl5/MQtRYk9/V1L4UtGD
P5OXas6WulZicvGgXt+79NpKvmjdLDH2wrGljms+qsdSYnvJhcWvW3y2pZ6W
e1SM+npmQL+31LVFc6neXGZLtIeiekR949LXLnxDz1k1Y8HhH/elMbPo5aWO
qwZ5PV/jRO/iylNaNGDJwfJdX88blDqyxMOyNs2vK+90qQtXvLTkgvLGEoea
F4uveHV3i694xfGuNEjBxrKvhRMufsjSby25oPVU76LUKfUqy11rbOj8RvGN
FYuWOrvwFl2b1g6ta1d8XvO9eO/Ff1Ctp3p5wfOrma7Sv9A1l7p85TksXofm
4HKnRbMUb3aJgWVtRZOqRiicavGlr16rr641SDFn8YW0XlzVPuXDC8fTfX3B
qwuv0FmyKw+tnNXrmcVrKjivHHj5jYPqNeUYpYYWvNJao7mvsbHwB/X9lnm5
Bd/Ke9QD0bwo96j8QX2kgufam/6i9i3YVZ5z5Tlc5aB6wqpH1Atacm1Zm+KJ
Yqn6J1/7n6q5tAap/1P4uWKOzgstGlC1j3oj2kPUM184p87AlPsqa/txL+U5
+lunwvEWD+3rGbYrf0PrSDlzre/LZ0t9WWrrgofK8XSOqLx+1SCtHZq/GsOL
TlxmFRTTFIfV21zWf+UtKE9bemGL7lNPQHNtWdsr7xRPlCeXOCn6ZeGcBYsW
r2mpp5pH2ndQ7bN43aVmlXwp/O2qf7fw4a/1kXIJrdHqby9rXnhsiSXldcqZ
S6wW3aq5oP6bzsrqORQsVdxY+sjKz1XXqM9Tnl94o97jUo/0uxbsLb0Jfb7y
ois9u8wb698VKxb+f7U2xZ+CJ1d8+HU+S61ftL96TQu2l3hWDnalMRWTF4+u
6Lire9cY0B7HlT4quaZY8ToH7S/rmpe7U712FdtaozXvNPZU0y3ewpUuKHy1
vL/UIOV1RR8pXy33pdpH83SJN/VO1dNQ3FNuv+CA6tkFb8v5FLzVeFu021Ut
KP6Y6i/lw4s20TqumrHgQ9ljyYUSJ1fYUjSm+ueFyyn+vNamzyl1Te9X5yKu
fINFJyqHKTX9C15duIfi8NK30nNYYqPcXcHqkpt6tqoLFH8Wjq19OvWplvqu
tUZ7yksP7nXv+tmCmeXvC7cv/FA5m65NvYvFZ9B4Lnz+hW8Lp1pyquxXcUzx
RH0YxcMrzFEfUv2WBVvKd5W7uJrDLDmlPPDKOyqewKI7lvquOvHK41o0rHLp
Jc4XD1Bjo2icxacqnE313VUP94VvhT8X7aC1WPXXj+/539m7MK0=
       "], {{0, 224}, {
       224, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{224, 224},
     PlotRange->{{0, 224}, {0, 224}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztmr/Ktdt61jcRJAgWsdTKwhPQJtVe2KZLrIVsQW0CgVhISkGwt7JIkcIi
JEeSI0gnOQ8bExBZIHNx/b7fdY1nzPedxdqM/THfOcczxn1f/+7nn/+7P/6D
//Bbv/rVr/7Tb//d//zBb/7zv/6TP/nNn/6bf/j3/+ff/+aP/tW//KN/8HfL
v/2///39+s/+4vd++uv/+bs//dd/9j9+/Wr9u//4D3/6j//kn/70O//o93/6
+Zp+xnxn8u/mb1t7bv1W8rsn90zXpk7M85ozbP3Weg+tc1g8V6uGW7Xawq5F
H5l6O9kji3s8+e9P9fuCH2+49xvu8Sk8NPW/xsBFz7Ywit7LX/3lX/6///78
v/33X//bv/lfv/4v/+J/4/XPv4d+56vPv/rO5LfMd9JnpL+VnP/PP2POmZ4h
rZlW/STPS2s4eRb6W+s90PpJ7qX1XLT+zTOa312sF3tbYMIC5+k9nvz3p/qd
ni3tl9b+6b3fcI9P4aHBseQeW7qi1bMGW+jZvvr+n2tXg8+v9HPre+jafOdi
bwv/29rzq9pI/v3kXdPvMT6X4klrD6++M8GTxJPS51rX6rr+W+t1b7bOOfmt
1vPS32r9e3KGi343HLrImhb3/tQ90v208ND0Ha1Dg4GLnl1omKRHTD3fph9a
eXLrLkxuuXheo0NaOsrctakx6nNbtUf30MLJ5PvNel2rre9ca87F89IsZaFX
k322/EJrndT8ot8XOGz2v+bixdpoToOHhovNb9HvOdmzRsO0cvjW8671g8nM
Te3RvS00rdkz/X46s6DP3roXerYt/Waw5dVzmVlMS8+01qY36Xe2tOjC1yT3
TjHBeNiWNjhZS8kZmrOlfq2Fw2v9sOajhWekuo7Wp/E1rV5YzF9ozyaY1vJT
VE/eph9O+jXTOwtNu8iKKTauuaCFCabH13+b1FXL/57kFFqrT/X74jsXOUOC
Jwu9arTBU2tztuYzrf5q4YzxRMYPGq3e0tJUuxrOWs/LWtlmiyOe4veWhzL1
cJJbqZZuYbXhuAVWJH6zxQUtbbzWHi3dYrx8S9ss6sTUw7rfF9+5zhla2Szl
Mvr5k7WU9I7JcJ7C4TXOLDKWhQ+lWprizAJPaC+Y+mxlpIaXzfec9FBGP9Az
aXFrC6OM3kg4boEVrTOnerXlFxbao6Vb6D6NZqD4tpil0npY5DPrzGeRM7Sw
iOpV+owUo9b9vvC8axw2OsR4IpOxmLszGJvcY4I5Lf3z6jOtHJvWVYsjWnje
0lrGQ7X62jxL8p1GV5/URTSvWOD/AjcWa6M9aE22+trU8w11YrRBS5stvtNo
e1ozBotaupdq7wUvmH5feN5Wf1E9T3FmnZW1dIvRYy1Nu8hCk/M3WEG9p+EU
iuctrWU81KKv6bO07vQGXWT02wKHaf2c5CBzp4mvNPiT9JfRisbHrTNqmktQ
bbbOfKj2MHrVaEXjlei5GY209jstLKJ6yeyhlQ1STKNaopXjGaw2mpbe16sa
NrhBvS2tE8qP9HvWmafxUEYDJ3dB65be6QI/T2pdk+OZ/T+Ve5g7TbQBxb2W
H6e9bzz1Yn5qPHhSb0Z/tmYNxr+0tGJLk6zP8ClP2sK6xeyglQ1STKP38lRm
mPidxR2Z2YrJKyhn0RqgOEP9qdG9tDZaGbLJqE3WtOjTli5afH8LMxM+Xece
a21GPQvNxIzeWNT5ok5aXmbhkSletXpk0cstn7U4w9s86UKHGK43d93i3wQD
DXYl30n1Bq235I6o1jK+gHrzhV82etjwxaszobXRypDNs7f0s+nThS6i3Gdy
PFMzJ3V7gntGmyU4QzXhIpui/bLG7YWXMdrA6LRWj5ssgvbXIo9qaV1zDk+t
W75vrXup9qPP28r0FjVMa8zMcFv5f0srUl9j/IW5l1f/3joro0tbmnzRR5QX
WrqI7i35ftqPpp5PZmgLL9OaRVLda/QGxf8Wbj+l04xHprVhMJ/yy7ofE15o
6YQ1zy7WiQ5ZaH6qe1vev5UvUf/e6q+k14w/pZ9fa8V1nRu8os9lasBkPglf
JxrVaHXqE00fGYxK9tbqnVZPtXR7y7vRmmxpzle/S/+WahVTn626Xeg0WsPG
v5ys+XU/LvjlXXjWrM1dGH5JcCm5x6SvWzhgMsNWfyUa+GS2dkMN0zpv8UVy
X7QGKIcuMnzD1yb3WOtn6h8XmbnBz4Vup1jdysMNftI8s6VVWvuk+VsLb1vZ
L92byWBNzVPfZJ6r5Ue+w9rgNu3TBffR+qEcZHDJ4B7ld5PvmWyN3vUNdd7S
+clnqG6nHEq1a7LnFvfR7MXg88IzGi98Ej+Nbqdr6h3MvSw8e4KBVD8vfOUC
b6nWpb2c9FfS162ab+Xn1HcYP/KOeY7RZgYrku9c617T48bDmqyplUsY/jLZ
mtEST9W5wV7TI6aPEryi2rW1NnVLnyX5r+UZW/OLNX4az2K8mPEd9KxaezAZ
bCsDpL1pvFirJimX0e83Wis5z1Yu3cJ2eqc35zmtNT0reiaLO0042vCv6V+T
dZgebHHlQkvcUNstv9Dqr8VchurqNVYsztBwHNUhlDeppzY8m/gp87eLOX5y
VnQ/rZoxvGN8ZZLBmqyM1mSyhxbW0Ttdz7VbepL6kdt4c7029UzPf+0REnyg
tU0zFpN10IyX6iha/3QPC73Rqu3kjkzGTjGfzgVMb7Zy6TVWGN5M6m2RXbRw
gPKs0Ust3dXyIK19mppp9VFLGxveXNcM5cqFxqM1kOyN6nPzjLRHbtCKrfX6
HQzav8YjPOV9jL9LNHOipRfa+93zf5qfmKyDcmuidVu92dKKT2GFyahbeG78
yJq/WjMag4ev6s3wwlr/073RPlrk8LTX1rqOfp5iHc1/Whqg5cuSfa49+zuu
F2fS6lnT4y3v09Jyrd6n/GXu6F3WFHvpv5v9vPp3M+c1z9J6b/PknZ7E8JYf
afGX4ejkbxM8bM1PF1lTsp/ke6jnoufQ0pl0/0bXGR34VA6faADK+xQfkiz6
XbKdxXrxbo/pl9u8j+Flo3upn6LvC908NzdnTvnx1d8aTU7/1vBacr8tnbbA
CqpvW5qQ1hLFhKQm17NyM8dp7edV/bS0B/UspmaSvl7MyBYeimonowNbPLv4
W5P5mPNp5Rvvvja1dHIPJ73PSb9MfRP1Vq0Z3G1r87z03BbcQX1KSw8Yjltj
hXl3Yl1LiTY2tfRUn5q8juIhxUb6eaMJzbPQ8zTnQLGF7qHlX1o8u/jb5O6o
zjQ43MoH3mWd9Gny+fUeWpjc0iRPaQyjOWmv3VCfRhe1MPYkd6xzgFaev8aK
Vi7RugujgVu1tO5TqpPNfigemtxgsf/WedJzoLqX7mE966Q8u/hbkwW1/OA6
H7h5nfRp4utbtWpypJb3WWhdk4WavqPe6t3rP8FwkwO0ODSpDcrF5r0Lus81
ViR3ZN5FMRqb1sbJea7pU6rfEl6meN7yXDSbamUL5jyTc1jMKYw2M2dCf9fs
OcGEVt8luEF1yA3culib3jyp/833tOqcat0W19BeMPr5qXctzHrhI4x2bdWV
4RTTs+Y8W79rcmmah7R4qpVT0c+bPk10l5kjUD41novW24LLzHm2ainhDlr/
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
U4bHTY+b522dofnbls5fZDstHGtxkNnbV5qBtnCAfv9JjmjVpzk3ozkNXt1Q
Y2uONt7c5Eg0z1/oh6fWBm+pZqD10MoHnsLhdQbe+n6jYUzPUs94Eg/p3mhf
mH9vcUer11q6l/pWimOt+Rc95686AzWa59X3JHqMeuSTWmVxbi3sNT7rXWqS
8maCh0l9Uh14cg5187pV80md09k95eIbcDjZs8HGVu7Xyrppz7b0+Uk9b3RL
UufJv7/6j3LHuteM7qVnuNDSLe1ENQzV0retE6xb6/8FR9AsneLSyXxmMSu5
ofYobxpNaHxHwqdfVfNTvWcwmd4XzQTe5V5u22cr66a5N+WLVg5Pz6TFCy3d
dXJteo36C+P9k9qg9/Jqb1Q7GR45qakW+Gb8rPk81botnHz1/fRvkzNceEZz
LzfUHl3T/jKYmdz14n2zm9dmBpRgMvWJLS1x270sNNLJHqRzLnMXxvus5/KU
F1q66yTOm/taeBCj2eg9mtkuxVUzy7stD2nVTHIvLQ1P92zmgEbnGK1odOx6
VvXUmvYXzWdaXJbgyQ3nudAhNKun55Po0q905rc9V9KDFHuf2rPxoQtubemu
m/WGwc8F11Odv7ij5FmoLvqqM1D6vAnXJBqe3l2rfhJsMfXcwqjknBf9vl63
eqrlHVr3eBsXGE5f8I4554WWuOFsn3quVtZ9UheZHCnB+fW9t7Lf2/TGggfX
WnGRzyeZUnJWRsO8izdP8LC1TjTnq/1QnDTYaHxHS1fTu7hZZ1LdQrVNotWT
3jf3ePMsleIn3T/lHYMJCT7cdubrd4QWPbiema5xg+ZLC76mnNX6/qdqu8WD
La6nv9WqQ8pl5nnJ/PMWb25ml+t7SeqWYlrLR1BMa/HL+o6eWtPeMTlAyxcb
z3LDmRs8XPCOOZ+TWmKBgaZWFz244Ov1nl/hA/VE68w2mQk+dafrOjd7uyHX
Tc6Z5h6Uvyie3JxNrfGN3ssC98ycKNm/eRfR1M9t3HqyJqkWMrVtNP+7zIgT
PFzwjvHppq9v4CaDw63nWmf1ixzGeM+n3p1r6Y0b7tRwfbLPm3Ey4Zqk3uh3
Gi10g848idvmXlpn1cq7kv1TfKP8bvzUzWuj64z2M7Wd3FdyLzfMiCn+v3oW
yjtUr7b0w8n8ZPGO0EK3LLL6ZM8Lfmz5etrvpr8W85GT8xc6+2hx7g38lfRj
K394R35f6DGDb0/NyBZzPcqJrUyezkNvqL2T68WMI8lw1u9+3ICZLb6jenWx
z6fO2fimlm6hWXeL+05yKD3DVibfqtuWPjk5f1n06Q04mZy5eV+Ofubd+X2N
25SXFzMygyGv9r/IUd+FQ29e035Mzj/5d+pzb5gRt/ZD+e7VZ4yfovs8OS8w
+sHs89XnzazTcN9JDqVnaLKR5Axp3Zr3uE7e6RpPbsBJyh101nlSM9ywpr1J
P0/nTcm9GKxLONHM9ej5m0z+KQ79bmvKC7T2npoRtzwU5V+qAUwfmVnq4pxb
NZN8vvV+wgID1xxKz5Dee2uuQedii3ll604XeHIDThpONziw0Aw3rE1vJp9P
/j2Zcay1vfG/iT5Jftfw0UkO/c7rhBcobhvMOYmZLf6lv0W9MM1GTvo1yvsU
rwxfm++hGEi9xuJe1vee1CQ9c1MzJ3mthSctbXaSI6inptrGaIZ30QAm/0wy
ohZOGtwweo8+S6JVWnx0s995x7XxJq150FovLb6f4sOCrxf57bp+zOyVnqG5
C4qByd++OqsWh7byzORvDYbT/HAxv6a12sKTljY7yYmmZhJtYzSD8Skn160z
pPVjMGGRXZuspjV3oHy0uNPvvF7P083dtfTS4vsX7xhQvj6Je636MbPXxNsu
dLt5dqo33oVDk+cyOrPFX+ZOzazz1XcmHo32/s1zwEQbr3vz3XMq2keLvl5w
VpItUB/Xesb1ewifdRerW/XwqobXfb3QY/TzT+HMyfqhnoVqzlbOTDUDnVut
Z8EnOfHVc9EapvNo83l6nkmfPlUnt9VGKx9Y9OYNmpw+41PzR9pHJpOk+a3J
/w3P3tZr77g2NUa/3+D84n2e9fcb/UZzwqd6wXhbM/ek2tvodqOXEm5tnclT
nEjz3mT/Jh9ucV+rT0/WyQ049hRmJmd+m2c3z5ucg5k/tnSjmUnRz9O+M+f2
3XptwR1m3kHxk35mnYHfkLEv5lDrXjjpbY0PfaWNE92e/K3BQ4OfN3AovZe1
dzCzGzpDbOnq1nOZZ3/HNe1Neqe3rZM5zmL+2NKBSVZJ5+9Ue5i+a+HMZ/1j
NUbvZa3HDIasv5/qN6PhF+d/EqPo9xvMobN7o5mTu27d+0kObWnyZP/Jb5k5
e/If/f6ktlt1QnHmXbRW8iwmN7ht5kXrhD67mUfTHqE6jeKz0X607wwOvHuv
neSRpD6T2qN1TvXYq+9szaTM9xvNZrQZvceT9UO9LdVUiwytlSEs5lNPcajh
faO3E25qzXEW90VreDGLeWo+sl4bX3PDzGtxDqavWxoy6evW9xvtRzXw+n2e
77Bec+u6Dm/gGtPviWdM+ojeY6v+DUbR7JHOYkyGZvR28ltmPpX0y0kOpb3Q
6qOFhm9hUVJjyeeNpqJ1eAMftfDTzBFOzrwW52AyhxZ3Gyyl3594CtqnC+/5
7r12Qz0b7dSqw4UObGnppN8Xmjk5z5P1s7i7BQ605qStWmrp0jWH0hy75bNa
XLPGIvpuAOW+V+dGv/MGrDDYssilE49/Q37Vyhxafrx1j8bD0u9vcTHNQ96l
126o5xa3tupw8a6F0dImY2/NSmjecluN0Xc2DA6sdRqtpdbMK9m/qYeE99fe
KjlPM/8yWGS0aMunLHTsDdxkOCjByTXHnVwn2EXr5+Q9Ug97cqZvvtPkyZ/1
j3Gryf8XM3rDWZSXkzM0nshw3A21tDjzVj5M8a31LpDRXYvzOYnnFJMTbdb6
9wUWUW5q6fyvpK9MJpB4twXHLdY3vOPR0sktzKReg85fjH+/oY/eZb3IqE1t
U/wx/35yfpfUatKztDdv4w565vTuWhkU3U+Cseb717W9wHNTP6/20/r3tRZK
sNFoV6pP3kVftXJp2pvmHtfrVt6+zsZp7RnMXHz+XTzaV10vuJLWJPVrlIOS
elvsk2KLuaOTs7aT79jQGqNclvji5L8ko1joLlrbCx5v5QY0G6H/vtBCLSxN
+sLo2Nv0VQsP6Wx3wYmt9eKuqQ43d9fyUAZjk8/TbPkGnfaV1gmfUq40NUlz
g9b8y+RO1FfSeqZ39JSPa3Hu4nvWvptqPKNDWhmR8QLrdz9avuakN0x69tVn
Wlm9+fwNHNTSZuYMKd4uat68E5J8ZysbTzTAwkOZ7Jeub/No775ee/bkt0xG
R7HafD/1zia3ad3RSR9n/IvBK+p9zFktfBbVdaa2W7q6pevo2miktTdMfsuc
edIXJhc6qa9auohipsF2ymutOk/6KzmTRTbe8oYLLDLPYuZBn/VOS5j6N3hr
uKn1nUnO08oxjDen+zf4afReC6+MxmvhM9U5rb5oZTjUWxldt/Y1ht9PZh3U
f9E6MTphra8WushkJhTb15zb0pNG3xqsprjRwqJF77/6zEmP9h3WxrMbbZbU
JOWmpLaT71xoqoSjF/140setdQ7NTBZn1cobaV+ss9mWX2txU3KeyV20vGEL
Y83vLu735DwxwdiWnmlh+wJnEr9DeYfyY4t3KHevsajV+9Tr3aDlvup6rc2o
l19ov1ffbzTVYiZi+m7h41r3ktRPku20MIpiC60T0wsLjWE8YMtXUvxZ6L11
1rH4XXq/J7nDzNaNnkmePcko1t7EzHHo+bSy8WT/9D2HRS+svfYN2uyrrtfa
zOjVBFta2s9o6Rb+JP2YeOqTc0ajSQwXJHjVyh/WeePJLIt6wHVu0Mq66Vkt
sg6jc949Y2n5rETPtGYTLW2c1ENr/8neWl6MeurWewKL3qdem+r/z3qHG+bz
ST9Sbm1pP8N9VF8tMt6TM45FLdGchH5moWlprZr5V0uTtLJZwwXJ5yl/GY5o
5ermPZN3z1ho/tCai53MD42forXdymlNVtNaJ89leqHl9RbvAn3WHjeoNkt8
a0u7JrX3lHcz3Nq6C6qTT9ZSi5so7i00bUuTL/xCq++oz6K9mWA+1TmtDPMp
TL6BI0xdrTUq7Ttaz61+XPd1K6tpYd06B2h5vUUW8Vl37yLRTubzVLvSnjrp
3Yyfovt/asax0DaUmyjumRo2fGGea+EXTnKx4bu1HqCcvs46nvrd1jrBk5ZG
NT6I7sfM4hOOMH1tOOsGb0VzgFa/L2Zwn3X3Lqh+o583OoH2l+F9iret2QrN
bJPvX8/7jKdY6wqjYShftJ6r5RdOcrHhu+QZFzxu8Get39a/29ISFFcX81+6
f7qfZJ7e+kxLvxnd1VrT9xBoXtHCQKN5Pusfww2j307mfoavWzVzMpMxGp7u
zXA31Tb0/YeWrjBZROv8aW5jdIjxXIsM+dVvGS4wPE77utUvN/xuS0sY/dPS
QgYrTJ6/WLf0m9Fd6zXltQS3zbtedN66foftq64XfnPRCzQ/WdeMeVfQeDSj
4alHpjxi/HKrxujdmbya6kDjU9Z+Yc3FBnNMTm70OX0HwMzjnvrdRZ1QzF/s
n2IF9aEJJrd42Xixlh5YrCmvJVi9mDFRnDHc9FnvtMQC657SMy0dTt9voRre
zDjW92gw/GSe3HouMy9Y+AWz/6TeWr7AzOZaPN7KeG/73Vb/GnxuvVdAZwRU
25w881YGeFsWZ/rX9AWdMRk9c7IHP+sf4yzz/cl/Cz1Dv5/iVfLvC21MZz3m
Hlvv9iQZuLlH+rwtnW98fSv3M1zc0hItz2h43PSyeadi/bst/ZBkiUmfmjzf
6JlWTy04jvZa8ly3ZXEneY3eY1IzVJPccOZfaW04y8xzW/xLdSzNIU09U6ww
f5vg52K+0NIDFENuyMbp2Z70CwtsT/Zg/J3RJ/RdC4NR9DOt313PtamnTmqD
ZunGj9Baap35ApfW2axZL7ICo1tonZs8/Db9/5XWi0zG1M8i32jhG9XqBrvM
3SW/1cIfqgcSHDOcaDjUzNlpzbT8QgvnF8/+ap80Z2jhEu1N805FS2+3NEMr
I2rNuKmeac07Fmfewm2KFes1rfmntDTNnT4689k15ayTvdDKNwz+t3iQcquZ
/ZncleLPgt8Tvkt0Sysbb+UVBgNb32l6kD67qRPqPWm/JPWTeEzqs6jebum0
RW2bubnBFqPfDD8mn6G4ZDKQkxqphXsL/fDRme+1Nt5k3QsJF5jvbOE/nakl
Wis5Z6PPk/2YWWSL3xc5fOs7TR5Oa8Z4AYPzLX1O+/FkbZj6MVlZS5sZndbq
kZbvMPWT4JXhR4OT9NmTeljnh5SLE9w7qR8+OvO91ok3SfiopYeT2SLN61r4
TzGT5gYtfUgxxOxnwe9UP5ucIflOk1cs5lALbWDqPDlDg/+tPZicyvQaxS6D
G8nv0tpu6Vvq36kPMmeeYGMr627Nquhztbi4lTe29MP6TD7r7pr6GtrvCz6l
OpM+e4KlRiuafIbiHj2flmc3/L7Ohxf5j8Fkmk8anUDrOXnGlq+hz2tqo4Ut
ptfWWsvMc80dJVrLeKVWbkbv1JxPy0dQ72y0gclY1rz81Jl81n7dmgO23uEx
Xrj17DTvMpxLc2aqD09mIwtNS3MGOiMz2WZLz1PONf6F1nNL8yfnkOi3Vm1Q
7UdrtZVjG61F/ZE5k7W+Xehkev4JzlBPvc5wzJpy8UlevkE7fdZ+vejldUbU
8ryG39f4abREC1tMFmE0bUvbUP256AWj2039m/ul/Ej1PNWZa7yiZ0L9YNKb
tP6p91y857DI6Foe0OChqY2Wx1zcI9V+rVy6xcutHv+sn11TX0Px0+SoZpZh
cKaFsQY/k+9sZdEmG1nMniiHUu1q8kPaC8m5tfI6w4nm3QD6XHROR/m3pT2M
H0l0Nc12zPOaPl1whNG3xuNTXZdgr/FlSf2vfVaLW1v7XHi6z/qe9SJjbGVH
NCcxucpJnG/pNOMBE3wz2tjMnlrvMLQ4zuSEC2xv6aVWnZhzbvkIg1cGDylW
tPDTcD3ttZNzqFa2mfSCqc/1+w8JNi40v+HiljdJntf87Wd953rB3TQ7on7Q
8Cbdc4uPaD+2PCDFClM/FPMTbKd3TXUvrbfWDIj6JqMNaL29OivqBylf0/Nf
aOlW/rzQzMY7r3PpVh+1cjaqw2l90j3T/LM1+6a4RPXzyXXrLj7rZ9cmYzQz
X8o7dG/UPyb4YN4foPiZfH/iAc3v0vox3E0zgaQeFr9lzoTu7aTmMfze0gbU
Rxh8S/yvuXeDP8kZLvLtROsaHE7OM/FKCw5q1eri/Qfz+YVmeCpXXNzFZ31+
bTKfhb9Y9IvJVRY4/wqfKTeZ50p+l2onqo3Nd1Kt1fqtpHeoZzHataV5DL+3
tIE525beMLPUlr9O+nSRby9y6aQfjU5r4fDJbDCpZ9rLic5/d91FsYj2+w3P
+Fn/Mpe1dAv9LbP/BAOT3zU4/6pHTPZLnyv53eQzlBeMnqT3RfOZFn+1+Pqp
uerJdetsW3rD7L+lwYzONGe1zqVbPdh6f+nkejFbp+8JmPO8Yb14z2GdCX/W
/q4pt1Ldspg5LrI40wuL2Td9rrVmMLo04V9zhkbvJXVCNQO9r/Vc9SlsMWe7
0ButOlloMJqbrTP5xXtHZj+Up07WPO27BVa/i840fdrKvm54xs/a6y6TFbR4
pJXF0V6gz2j0j9H5C81geMrkwEafJL9rMgdzLyZvX8wpFlxsztboDTpzMZn2
U/3SyuQpBq51WlLnT/ks2ncJjpn6efe18W5rL/ZZn18vsgJTD0n/tuZ3yf6T
z5gMmerStWZY8NQ6K1h/58KbmD2YOcWCi1v3ZXBpUZ8tPb/It00mn2CgyZ2o
P2rNGlrrhW+9geufWptMntb/DZ7ls/4x3WWyAtqnBn9MPmY07Xqd6N4WL7S0
epLXJf8ZjFp856vvN97EzGFpra65mP4uzXhbNU9/i97Fol8S/76Y0Ru8NTot
4ZrWvdB1a1a+1szfYW3q6nP+99xdgjmtfjTfb2aahh9P3ksL36hmSHrzqZq5
4TsXc2R6tgv/1apV+rsmu6bPvu7HBcYmtdd6b8RwNM2jaEaxuBe6ph6W9vJn
LrzrzRs8y2f9Y71GvXny/TT3WOPDDT6ohW+UF6hePVkz5h3IRe21+K6VwS4w
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
9SOmVqn+WfRaSye/4oJF/t/Cf5N/mlyR8mBL87RmN62+prqihYdGD6915kIn
t7xey3sarDMzd5rtP1Wfn/V7rSm20wwhqb1137WysgWOtfDcaEvD74avW3Vr
ZlstXmvVYStTMrqL1mfrHBINRmusVXv0vhY1Y7DU6OHFjOwkr61xPukXiv+U
T9d8QTV5y6MZvv6s71zTOUIrK2vxpvFZFDMXOJb0ptlbS1san7v27wlHL/CK
6l6jExb93tLGyZnQWl3PTUx/0T0kdZKcFd1DS99SX3BDTtXKJ9d1SLUZ9V8t
vjC1t67Pz/p916Y2WnrG8Kbp5eRZFjjW0tjGbxq/kPxuUhvURxidsNZvNDeg
PbJ+LpO9GMyhtUr3Sb+T9kUrz1nUZFI/rzSGyb1vy6loPkkxmdahyQNbeNLK
QFrvXdD6vMHjfNZdrklqg2LyAn8o15i50gLHqCanezPzlJaOWnB9gmPr2kt6
KuF0qmkXnE5r1ehh41VN7VEONd9J9eTCXyxwgHrYG3KqpN4MX5g6pFqX4pvJ
bNf5QKv3Wxr4sz6zNhjben9joZnXfGHyQNMvdG/UR5j5S7L/Vl5EcewkD7a4
ifbs4lmMrzE+dFF7RuOZvqP5TMtfmDxhnXufzKla728scj/TR4ZrTJ2Ys6V7
SOrzk3l+jfU64zL4v9AqLb44ySPJ3owHb/mLlrahNZOcyQ08uOiL1rNQP9LS
qyYXMrWXZLm072g2mOi9BTa27iWpvafmETTHM+8tGK1FudjU88n5Pq1VyjtG
/3/Wz64TjDUZF9VIxj+aPVC+oNhiepPikulB4y/MezumZpJnf/WdT83lDY8s
ON1kLEn9L3IhU3vreQ318vRsW3tY4EOrllq8Rn2T0eFUayV33arnk/N9U6ut
M/+s71yv54O0tin+mAxwgdUGWwyuLvIuM0Nv1QnFQ8PvRmOsuZLmD2tOX2gq
Woem9sy9G29F8SrZQ+KzWlixzuta2Jjkaa3czPRXS0ctcuwWfibfT3nnKXz+
rM+sTbbZyj2SnIo+C52pGQw0mVXrXgxWt3S4eWfPaIxWdtrS9q3zNzOphd8x
msrkkLT2WrnNwoMn50z1RnL+N+R1Cc4vtJnpWcMXT2UFLS3XynNoDS84+rN+
3zX1O4Y7Fh7TZG4GW27L3JKzoj3e8su0TpL7MjO4k++nmdnE2u8YTWV6wbxL
06pD462Sd/CSOqH32+LodS+0sJGevzlzWietd2Na50P9gslzDG7TM79BI33W
3XWCmetsynjMls6kOJOc28nMzZxVMkMxWsVkUC2vvZ5f03o2PLjwO7TOjUcw
tdTyOIkGS/pl7a+TvbXmUCc5JcGE5HlbZ0Jx72SukpxPghvmWWhNtuYCn/XX
W7fmg5R36GfM35rzMVxjsqzWnSZnlWibViZjPIKph5Nc3MpDEh5f+J1WzVMe
NNlj69mpvqXzIOqvzUznZH1STjEZdWvOYvCTYtoiVzG67qT3N3OBT+b5fdat
+aDBivV8zeiQltdbZ26LXCj5/oR/W9jemlUtuJieCeXxhd9p1TzVkOa3Fl6P
8qPpL4NvRm+36pP2QksHUt1i/FeiJ0/mKskzmiy05f0NR3zW32fdmg+2eLyl
LSn+LHRR4j1bmds6F6KZzALbjddec3GiqUzfmV4w+bbpTXOeLS9JsaKlPRYe
1nD9uj5f/a3BOlNLxn9RfWUwyswR6PnQu2jlDK18+LP+Guu1VqRYYTJ5Okeg
GN7SRYZfDG+aXKil/Qy2G0xec3HyLK2/pZ4iOf+WrzF91NJ1Lf1DsSLREi2N
1MKBVn1SbZx83vRmgs8L/mphVFJXrblPgiGt36Jc85m5f+31Qisu9Jvpd/pc
C11Esbp1p+bz5t9bmdh6BmS4uPW8N6yNnqG6kWqVhHNpDSSca/puoZFaONDy
mHQ/Lc1v8roEQ1r3aLIdgyGt9w1av2Xuq9ULn/U9a+MrTQ5G662VoZlzMBhu
uMzcaZLzJOdJ/72VibUwmd4X9SzGH92Aq633Ewx/mXtveQqTPa57gWKIyXgX
Wj3RYKb2DC4Z/qJ7ozPxhVc1ObPpO3pfN/DpZ73jmkUdUl42mGAyW5rJGB6h
OGbulJ6/0XUtXKXeeaFnTN0mmv9mXF3kJ63vT86Q9oXxGsnnW71g8MrUbXIv
JmegOXayB6P3DH7SvT3lVROsM3VFz5Nmzif59LM+zzWmDhMtQflrnRssspSW
Dmytaf7Z8trJfVGOMDl5cia0bltZxFO4au7d5IHGw675l2oMs0+aD7c0ySLL
emoPLb1H8dPkEvT7E+9g9k/3fFKHPLW3z/oM1xh8Njmk4VaTG5g90JyW6sDW
mj5Xi9da+u3Vd5qcfPHsC324xtWWDlx8f5JfLfiXagw65231Au07iv+tOl/v
gZ5nsjeK8zTfNv6F+sEFT7U4y2js9d4+6/Nck9RGgrGtjII+C93Dem9rbG+t
F17b6DeDmQbHbpiJP4WrVAcaPjX8Tme1xqfQPZiZLz1z03cn8dn0cgtbXp2b
weoWjyTcas7EeHnTv0aHLDL5GzTYZ/3L2J7UM9Wca+423LHg9zW2Lzii5bVp
/mO0pXkfo7Vu4RudQbR+l2ZHdJbR6i/qMVvc1NKiNH9Lnpf2XStDbmEg3QPF
FspTFKtbPpH2V3ImFFuemtO1+PGjM+9f0/pZ+5TFzJ1yR4vfje66Yd3KHwwX
L2ZG7zgTNz27xurk2Vvaz/iURS8bP2729lQ2u8BAo7ta+p/6Jqrlks8ntW1q
sjVvWmDIU/Odz/r8OunNk5zbmlNQPFlkknT2t8jNWtomwQHDywvdspjr3YCZ
rZ49WSdUexhOXPi7hddO9AbVckmdL7SZwUDa+1TvmXlccp40h0ye0ejSlpY+
Oad7ar7zWT+7bmX7hnMX3E213Pp9AMNNJ9cUB8wz0plOS1u29MlTmGl69mSd
tHyHqbGFv2t55KQmEy1n/LXRZrRfTO+3uKCVByZarvU+Q1K3i9n6DXO6T+b5
9datbN9w7oK7je5NerM1b0rw7ba+o7mW4WKjtVpzvdb86IaePVknrfciTB8t
/N1tusj468U6yeto7t3iggX2LrJls4fk32/DSbq3T+b5vuvkHk0Ob/rF8Cat
VZMz0P1Q7mvp3qe0xGKWTeundeY3YKbp2dtwm/adwR+aU5n6P6mL1v6XrhP9
Q/2j0fZr7H11nq1sme7h1X6SM3wKJ2ldPTXf+ax3d0p1Tuudq6R3jEc2Pb7Q
xgZDbu61Fr8brUVryXz+Kcw08+WTfNF6FlMbi+yuhQMLXbT4LfrsSR8t/N1J
7F3wi7n3xbsEJ3GS9tRt853P+sfulHr5Fp7Tz1OPbLA60U5UG9O9tbLlm3XF
YmbayhzoXGyNmbRnk7O64d0t41noM9K6pfhgMkmji8x8tuUNk++nOd6i3hZa
bqGlk3tvfX/r7lqz+K803/ms//97MXMrg6tGP1DvltSkwWqjZyg/mvz55Nr4
GqNPWvMswy9Gl5pnoXVCtfpJ/DH62ew5yc8pPpi5ScubGw3fqoGT+TOtjXWd
m1nJQt/elrWa332X+c5nnWPmAleNfjB9Tet24Q0TrbLozZO1ZHwNnXMZLFo8
7+I9EONlaI099V6HyRgNn9LvpPjT8vKLdwmS52rVgMnrWnt4Cidpz9KzojxI
M/OTWSs9B1PbJ+c7n/Uv32+LL07qh+RvW/sx3jDRKjRjoXr+qV4zGmnhzRdn
QjX2Wj+8+l1aYy2sWO+N9lcLJ1v3brxSSw8sasA816JuT+Jkwjtr3KN5+Do/
NPtM+DT593W2/1n/GD4n55/gwFo/mNpuZSOJN2xlyIs58rrXTnJEyyMbLjb5
1SJPMDleCyuo5qF7S3Ag4VyKk+YzBrue8o+tGqD5QKtuT+Kk0U4t3Gv52VZ+
uMijkhqjd3SDNvsOa6N/DL8Y/bDowdbsnp4n7ZeWD133mnl34iRmmjNJ9Eyy
n9Zd0Nozdb7G7afySdN3rVzaYNdtfEHvZVG3ptfWvbmosVY+STFznaM+lZPf
oNO+0jrBgTV2PbU2GtJka7RHWpp80ZstnlrrMZNh0jOhtWTetWj1crIfenem
lky2ZvLJpF/WubTBrtv44tUzLjIrmkUkvfaUhln4iHVmbnKDZJ+GE01O3prv
fNY5Pi80SQvDF89uPJ2ZoZzU5BTnzR0lPLXWYwuNmvTLupYWvWzyCrO3pCbN
7KA1m2jlSMaLPdUjtMbMPVK9R89zMSd6Fw1zMjOn3mHBg0l9tvD5s/Z1aGom
+fxiFrDA/9b+aV+c9LwLzmrN1hfvftzQR61eWM/a1nOEV79rsjXaR0bvmffc
jB54qkeohjeapPV5ymU0/3wXDfOqLxZ7aPFLa76Q9HJyPov5zndbJ/i8zueT
Wfb62Vv4Rmc9Zkb/lEZa/9ZCO93WR61eoPrKaCQz46bYYrI12kemN5NM2JzJ
Wpst6px6ikSTmM9Tj2Aw52YN89R7MkltnMwN6Kzt5HznO6zNPKKVz7e8v3l2
M5ek+zcZRUuTtzTS4reMVnmXPmr1guHKFvZS/Uz7guK/0bEmjzKY2aqTVr60
0C0tvUo/T+uqhb30rp/SME/t4Sncpl7gO2QmN6xP+uu196f7b/nc5N8XPE7z
qHWPmL5u/e1tfWR0UaLPE65sYW/y/S39bPZG9UZyj1RT0Wc0dULrcK1baA20
8s9Wnkmx12QRJzUM1c+tPdCcobVecN+7ZyY3rGn/tvz1IiOiz7uok2T/VCcY
/GxppIUea9XDDb6S3h3N96i+MtpycUd0z6bGaIZpMI1qKupJqX5eZJ4Ge41+
Nvd+EnuTPdww96Fedc2P63xpzX1fKTM5uV7PPpJZNq1tw1nrdwyMB6c9aOZB
BmNpj5B84kfqoeWDFn1keJPmIa1ZOc1LKW4bTUW1jfFoi+ya6pN17mT+1syt
WnojOf819prPPDX3MTOCFj8mvbb2TYb76N9SnPnO6+SOKNffMEdbaGz67/T7
DX6anMGcLeXfxbrFuev+MnmI6aNWtrPIUZP6N1mxwTSjnxdz85M+i2qk1l1T
Tbt4v2Ld+60+Sn63daeUB6kubeXkLe6jXHNzZnLbusXRNMOn3ERnTwm/0M8n
z9jS8MZHtzKTFiavdeBtOtNg2oIXTmp1mqPSDI1y36IX1nrb5DMLvUT3YPLS
Fu4Z/F/oH9OPVMO0zpPuwWSw6541PZ7gZOu5buaym9dmrkG9odEhJp9saQOz
N9rvJjMx7zx81j92vybTS2pjfXdrXW3m4KYXkt9q6QGqZ1p3Z3wBzSSNhjS1
fYNnoXqm5VsN57buLnnGVs/SdeJNDAZ+dObuvpJeMzXf4g6aT673SX1lK3tp
edUb6vDmtckuWny0vq/W/s37e4v31szM92TvtHiZ1s+iDk390B486VmM929p
nrXepr4gOf915k8zHIqBH53ZXSdnS/2OwTda84vepPtsaQyavVCsTs5t7Unf
cd26X8NHLQ5NvtPs3/Bg62/pv69zIYPDtE5ormh+qzWLSb5zMSc1vNPqZap5
qM9tYUUrZ74590j86W17fvf1ojcpvlHueNWzpjdbepLi0oL7jKf4eD2vSxfc
lNRM67fMd1IeNByafM8ixzD5Dz1zmjEa3UW5tVWHrb2tPctTmmcxT6cZoMmZ
k3O4LfdY+83vvKa+kv47xZCEO9YzzWSfi15r8TvNASim3VC333ltMvCn8L/F
la2+Xpyb6Z3FbKKl0179VqsOk+9J9mYyQ8o7T2meFiZTL2P4hXLZDbmH0dif
rCa/a5OnJXe0mLstZpqmd0yvrTXe4jw/Xu+9evYp/Dfe6mT9m3Mzme1iNpHo
q1Z+Zc6Tel46P1pkhoZfFv1CMTmph1Z/0b3dMOOmM/dPVtPFZ4oztMdNnpnU
TKvfk95p9bLp2QXvmxq4oZ6/wzo5f6ohW/h/0lu1NCE9t9aMuzWbWMzcaT5G
z+pV7SX/nujbljZY49siq6Hvj9HnpXk15biWN2xhrOmLT1aT96zpkcX6ZL+b
2RztZYqZ1AsvzvMpT/pZ5z3byvpa+L/wVi2MoudmNNJJzGzth+qEFkfTjML4
i9u0gclq1jn/ur+Sva1n3NS3Lnj8q65b87WT+nCND6YvaOZJMytzzid5/zYM
/0rrpGdbWV8L/2/A5MQPUgxsvU94smboflozaMrRJkNr6Z8b3jOke27dUUsD
0P5qzRda/bI4809Wk/d70iNUd7U0YQsfDF/THqS61Gi8k7zf8jKf9Y/1LJ3h
JvVm9MBJb0UxqoWBrfM5WTMLrWJ+l/6t0ZBmBr1eG22WfOfijlr9ZXDJ8Czt
ndaZUx7/SuukTqg2o9hF97ngqZafoj1I5ymvzoGu17xvePyz9j1L3wmkeanR
DxTPDSYbzKEzDnM+J2cQNMs1XEy9fAvrKN6au16sT/oUc0et/jK4tM5V1tna
d8tqFjOyFl9QTbj4XeqnjA81eT7FZKOlW7pocV/fYU1xqVVLdI5GfZPRG4tz
bvFLcj4LrjT42eLiFr6ZbH99Dos6NDpwURtGt9NnNLi0mHGfzNa+W1bTmpEt
3huhd9T6XZpptOqE/m2rTxMt3brrV+f5Hbzeumcpf1EcMJi50BsLTG7lgQYr
1s+Y9L7h4kVet9A/5hwW60UWseAgk/8s8KGVZ9KzatXJd8tqEm5KZmRmvbhr
87vr2VzyXInuvS1baPnl9Vzp3deJL1ho1CSfpL9r9Ma7YDLllKe4ssXjVLdT
bGzNv05mzmZttLSpDZppm/e4Wjhv8kyae7RmMd85qzHc1JoBUa9N3wMxv2t6
1tSq8Z4ns4VWTpvkP7fpipPrV+dvZuL0XoyPa+mNROfcgMmUU1oYaPZzcsbX
mtfQ+Rf996f8r8kiTF1RTDC8QP1s66xePSO990X2/h2ymoTLFudM8SfZQyuX
W3h8Myei3tNoNpot0FmV0RK3ZRE3rCnmUJ1P6z/JkRLMMRh7GyYv5i8trqT7
Wfh0g9Wvnmvx74tzMPdOa6/V40Yv0Zw52QM9K7qfhIvp31JO/GQ1eW23dA7d
g/FfC26iGNviMooJJ7m+xcXv4u8W61d1lWQIizywpYENxtJMb43JC29ocNjs
ZzFbXGfprX9fnEOrrhI9c4NONr1s+NpoXXNur/6WnlVLe9+c1SS4RGvbZJLJ
PdK6SrCl1bNPZYYL7dri+rU2+Kr+Lqkr2l8tDd/SwC2OOznvaPW+2Q/Fq5Y/
Xcy8KA7Q+qf/bjz7SY331PeY3zIaLOFrw01GD5vaWGjvm7MaelaL+XKCt+bf
FxlLC2NbmeHCXyy4fqENbsginlq3MnCq4ddz88WZGAxv7af1edq/tPeNZ0nq
J9HMJ7P0xbzmO3jhRS8YDdbiGoNXpjZa2pvqgRvqwfD1K3xr9fvi3w220zNp
+bIkX0p0QotzF7hN73SR6d28bmXgLb/f8nStORfNYFvzDsMRi/0Y3WhwYzGj
X2Tprf23+uirrmltUw120ueadzPW2Gu+/2R9JvduMpAWXr26U/Pva82/zgxp
vpTswfgmqpNpLye/9R2yiKd8BMV/0xfUC68z2MW7AfQu6H4SbDc1YGbi5hxO
agz6u6aPvura9ELCHU/5XNoj61w9eZYbsprkTpMMzWAmxauEX8y9P+VJTU3S
dxhavE+5fjH7aL2/8e5ZxNpHGN3Y0tULXngKB0z+ucB2mh8u5hfJOdB6a/UC
xUnjtW/Ak5PrVv7Zwivq6UyPtHL1BAdoPpz0wkLzvNrD/wFUlEnW
       "], {{0, 224}, {
       224, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{224, 224},
     PlotRange->{{0, 224}, {0, 224}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztmT2ubll1RcsgGZqBW1CSkUgQ9eTIEUnhDhTiJykJVVVg0QHLkgMyJCQy
R6YHltwIMgISIKIDEFMlEVTARd/x2fOsseceQVnTT/dd9re+ueZaa7x/+v5P
PvzRV957773Pvv75//nwo3//l08//ein3/vHL/6fH3708Tf/+eOvfi5/99f/
vtDf+vEn7/70H//6nT/87CvvXtH//Zv//eAXn3z33f/88ecf3Pn5L//5K3rV
70+84c7b7rznzu9PfL+r6rZKJ2p15ztK1+eOT+583vR3tOqzr6rPVI+kPfZk
ntD6YtUMSvRg2gOJNzw5Xwg5v8qfiZxc1b+J2n7jt1979+fP/u3dL3/9g3fv
v/8P7/7vv7797j9//6sPvqy//DNv6Vd+/vN192/+98rPv/KGt37/K/9dfcPV
Wr31e66+5+rfvfo7r36/V/9336rbKn3VD+nvaJWvrn7eVX2R+H6v1vbOZ1+V
G1c/+6oeWZWHd7I6XeepvrhTwzs/c9VvCQ8k5vKdOic8f/Wdq+pw1Z+rPted
vk5n41t//uVd9K1avbWvvnIXvFKTO9nyyp9f/T2v1OHOz9zpxzu/5+rfvfP9
vlKTVVziFa9e9eGd7+jqd3G1Pq/83USv3fl+X/mO7uTSnfff8UmiR175PVdz
LP37Ez2S6ItEj6yaNYmZuKrHE95IePLJ3E5nYLqGd3aqO7m6yp9X33A1N1bN
oKvfxdWfv6qv7vOv1GfVTZHYjdMeW9WnV2u76rtIzLhVvfbKZ3wyT+702p3P
e/WuSfz5k7tQos6v9Ej6s6/y/6q5v+qdic+4aiZenTWr6pPI7VXf7505lWAd
V3fmVf6/w5ReqduTN+Yd3yYy9iqbSuxsq3aAVRn1JBO7+hnTepWX0szzqmfS
eXJnn0zfRHe4x53eeXIW3KkzuV8Sd1O6tqtm2ZO78ao+etJ7d/jnqgy8M6PT
3/sq/yd2lcRMeTJ/Vvn8rZ9fdXNd/T2r/P+kn9N7dVpf5WarfJW4Ye9kSPq7
TtyhaW5D2IVWzZdV2ZLul8TOcHW+rHpn4qZYNUNf+U4TfbRqr7tzJxLmVPp2
S3gj/Z1OfS+Jm/GVLErveE/WOXE7XPXY7vzzjk+u/nxiDl79u+nvetVecadH
nrypE7vQnZ3nDu96sl+ufter8jYxuxM3RWKGPjlfpvYHwp48dbutuutX5fAd
jz15v6zK3nTG3pnjU/zzyX146q4k6zv+WfV309/11dl9Z4au4jaJ2beqbqv2
n1fm4JR+kjkkZveq7+vq9/Ik87zq+bT30rxlai7cud3SnlyVw7T9YdXt+WTG
rroLVtX5zk67ah9u4p9Pzty0vvqGq9817XOlPbmq116Z16v2H4Ln7/gn8RlX
ze6p91/d4RP7HiHnV83fJ/eHJz/7nQx5ciec4p9X59dUxso/n3lDqyb8W/CT
/w745Oea8uST9yOBO03N01XMYdX+n7ih7txBT3qAPIuvzt9d+mJVVlzNqymm
NLU/vOJtQsbKPzle3VE/uQtd1ek5+GStaPzzTga29tedu2lqnyH/O2/CA1O7
LnlXIeg7/ryaG03886q3CR6Tf5oJtP5axVTTeULY8Xbhn1czsKm/0sww8Yar
vzP9/qlM2z1Ld9F37n355//vDav+DY6WUfJPTl8T/PPk79xlJp7GP1/JQFoe
JnaJKWa4au7s/u+8u2jCrkLQVzmD/PPvv4HmMfmnmUDrr1X/bkioT7pWhJ0/
kYFN/TXFPE+r8+6asKvsou/4+WT++cp75J/3fSL/5PiZ4EmaPpl/vlWHE/jn
k75N8E81Px9adcLPJ/BPWi4lvlP5J6dPCf5J7EK7z82T+edbdTihvwhzp/WO
a9K0XYWs5Z8duZTIKPknp08J/iF4kqbln/w8TO8SU2/Y/Y47QTdlHdnP8k/5
Z7of5Z+zfpZ/5mq1I/8k5+GTu4T8U/3kDG3S8s+OXEpklPyT06cE/xA8SdPy
T34epneJqTfsfsedoJuyjuxn+af8M92P8s9ZP8s/c7WSf/I1Ye603nFNmrar
kLX8syOXEhkl/+T0KcE/BE/StPyTn4fpXWLqDbvfcSfopqwj+1n+Kf9M96P8
c9bP8s9creSffE2YO613XJOm7SpkLf/syKVERsk/OX1K8A/BkzQt/+TnYXqX
mHrD7nfcCbop68h+ln/KP9P9KP+c9bP8M1cr+SdfE+ZO6x3XpGm7ClnLPzty
KZFR8k9OnxL8Q/AkTcs/+XmY3iWm3rD7HXeCbso6sp/ln/LPdD/KP2f9LP/M
1Ur+ydeEudN6xzVp2q5C1vLPjlxKZJT8k9OnBP8QPEnT8k9+HqZ3iak37H7H
naCbso7sZ/mn/DPdj/LPWT/LP3O1kn/yNWHutN5xTZq2q5C1/LMjlxIZJf/k
9CnBPwRP0rT8k5+H6V1i6g2733En6KasI/tZ/in/TPej/HPWz/LPXK3kn3xN
mDutd1yTpu0qZC3/7MilREbJPzl9SvAPwZM0Lf/k52F6l5h6w+533Am6KevI
fpZ/yj/T/Sj/nPWz/DNXK/knXxPmTusd16RpuwpZyz87cimRUfJPTp8S/EPw
JE3LP/l5mN4lpt6w+x13gm7KOrKf5Z/yz3Q/yj9n/Sz/zNVK/snXhLnTesc1
adquQtbyz45cSmSU/JPTpwT/EDxJ0/JPfh6md4mpN+x+x52gm7KO7Gf5p/wz
3Y/yz1k/yz9ztZJ/8jVh7rTecU2atquQtfyzI5cSGSX/5PQpwT8ET9K0/JOf
h+ldYuoNu99xJ+imrCP7Wf4p/0z3o/xz1s/yz1yt5J98TZg7rXdck6btKmQt
/+zIpURGyT85fUrwD8GTNC3/5OdhepeYesPud9wJuinryH6Wf8o/0/0o/5z1
s/wzVyv5J18T5k7rHdekabsKWcs/O3IpkVHyT06fEvxD8CRNyz/5eZjeJabe
sPsdd4Juyjqyn+Wf8s90P8o/Z/0s/8zVSv7J14S503rHNWnarkLW8s+OXEpk
lPyT06cE/xA8SdPyT34epneJqTfsfsedoJuyjuxn+af8M92P8s9ZP8s/c7WS
f/I1Ye603nFNmrarkLX8syOXEhkl/+T0KcE/BE/StPyTn4fpXWLqDbvfcSfo
pqwj+1n+Kf9M96P8c9bP8s9creSffE2YO613XJOm7SpkLf/syKVERsk/OX1K
8A/BkzQt/+TnYXqXmHrD7nfcCbop68h+ln/KP9P9KP+c9bP8M1cr+SdfE+ZO
6x3XpGm7ClnLPztyKZFR8k9OnxL8Q/AkTcs/+XmY3iWm3rD7HXeCbso6sp/l
n/LPdD/KP2f9LP/M1Ur+ydeEudN6xzVp2q5C1vLPjlxKZJT8k9OnBP8QPEnT
8k9+HqZ3iak37H7HnaCbso7sZ/mn/DPdj/LPWT/LP3O1kn/yNWHutN5xTZq2
q5C1/LMjlxIZJf/k9CnBPwRP0rT8k5+H6V1i6g2733En6KasI/tZ/in/TPej
/HPWz/LPXK3kn3xNmDutd1yTpu0qZC3/7MilREbJPzl9SvAPwZM0Lf/k52F6
l5h6w+533Am6KevIfpZ/yj/T/Sj/nPWz/DNXK/knXxPmTusd16RpuwpZyz87
cimRUfJPTp8S/EPwJE3LP/l5mN4lpt6w+x13gm7KOrKf5Z/yz3Q/yj9n/Sz/
zNVK/snXhLnTesc1adquQtbyz45cSmSU/JPTpwT/EDxJ0/JPfh6md4mpN+x+
x52gm7KO7Gf5p/wz3Y/yz1k/yz9ztZJ/8jVh7rTecU2atquQtfyzI5cSGSX/
5PQpwT8ET9K0/JOfh+ldYuoNu99xJ+imrCP7Wf4p/0z3o/xz1s/yz1yt5J98
TZg7rXdck6btKmQt/+zIpURGyT85fUrwD8GTNC3/5OdhepeYesPud9wJuinr
yH6Wf8o/0/0o/5z1s/wzVyv5J18T5k7rHdekabsKWcs/O3IpkVHyT06fEvxD
8CRNyz/5eZjeJabesPsdd4Juyjqyn+Wf8s90P8o/Z/0s/8zVSv7J14S503rH
NWnarkLW8s+OXEpklPyT06cE/xA8SdPyT34epneJqTfsfsedoJuyjuxn+af8
M92P8s9ZP8s/c7WSf/I1Ye603nFNmrarkLX8syOXEhkl/+T0KcE/BE/StPyT
n4fpXWLqDbvfcSfopqwj+1n+Kf9M96P8c9bP8s9creSffE2YO613XJOm7Spk
Lf/syKVERsk/OX1K8A/BkzQt/+TnYXqXmHrD7nfcCbop68h+ln/KP9P9KP+c
9bP8M1cr+SdfE+ZO6x3XpGm7ClnLPztyKZFR8k9OnxL8Q/AkTcs/+XmY3iWm
3rD7HXeCbso6sp/ln/LPdD/KP2f9LP/M1Ur+ydeEudN6xzVp2q5C1vLPjlxK
ZJT8k9OnBP8QPEnT8k9+HqZ3iak37H7HnaCbso7sZ/mn/DPdj/LPWT/LP3O1
kn/yNWHutN5xTZq2q5C1/LMjlxIZJf/k9CnBPwRP0rT8k5+H6V1i6g2733En
6KasI/tZ/in/TPej/HPWz/LPXK3kn3xNmDutd1yTpu0qZC3/7MilREbJPzl9
SvAPwZM0Lf/k52F6l5h6w+533Am6KevIfpZ/yj/T/Sj/nPWz/DNXK/knXxPm
Tusd16RpuwpZyz87cimRUfJPTp8S/EPwJE3LP/l5mN4lpt6w+x13gm7KOrKf
5Z/yz3Q/yj9n/Sz/zNVK/snXhLnTesc1adquQtbyz45cSmSU/JPTpwT/EDxJ
0/JPfh6md4mpN+x+x52gm7KO7Gf5p/wz3Y/yz1k/yz9ztZJ/8jVh7rTecU2a
tquQtfyzI5cSGSX/5PQpwT8ET9K0/JOfh+ldYuoNu99xJ+imrCP7Wf4p/0z3
o/xz1s/yz1yt5J98TZg7rXdck6btKmQt/+zIpURGyT85fUrwD8GTNC3/5Odh
epeYesPud9wJuinryH6Wf8o/0/0o/5z1s/wzVyv5J18T5k7rHdekabsKWcs/
O3IpkVHyT06fEvxD8CRNyz/5eZjeJabesPsdd4Juyjqyn+Wf8s90P8o/Z/0s
/8zVSv7J14S503rHNWnarkLW8s+OXEpklPyT06cE/xA8SdPyT34epneJqTfs
fsedoJuyjuxn+af8M92P8s9ZP8s/c7WSf/I1Ye603nFNmrarkLX8syOXEhkl
/+T0KcE/BE/StPyTn4fpXWLqDbvfcSfopqwj+1n+Kf9M96P8c9bP8s9creSf
fE2YO613XJOm7SpkLf/syKVERsk/OX1K8A/BkzQt/+TnYXqXmHrD7nfcCbop
68h+ln/KP9P9KP+c9bP8M1cr+SdfE+ZO6x3XpGm7ClnLPztyKZFR8k9OnxL8
Q/AkTcs/+XmY3iWm3rD7HXeCbso6sp/ln/LPdD/KP2f9LP/M1Ur+ydeEudN6
xzVp2q5C1vLPjlxKZJT8k9OnBP8QPEnT8k9+HqZ3iak37H7HnaCbso7sZ/mn
/DPdj/LPWT/LP3O1kn/yNWHutN5xTZq2q5C1/LMjlxIZJf/k9CnBPwRP0rT8
k5+H6V1i6g2733En6KasI/tZ/in/TPej/HPWz/LPXK3kn3xNmDutd1yTpu0q
ZC3/7MilREbJPzl9SvAPwZM0Lf/k52F6l5h6w+533Am6KevIfpZ/yj/T/Sj/
nPWz/DNXK/knXxPmTusd16RpuwpZyz87cimRUfJPTp8S/EPwJE3LP/l5mN4l
pt6w+x13gm7KOrKf5Z/yz3Q/yj9n/Sz/zNVK/snXhLnTesc1adquQtbyz45c
SmSU/JPTpwT/EDxJ0/JPfh6md4mpN+x+x52gm7KO7Gf5p/wz3Y/yz1k/yz9z
tZJ/8jVh7rTecU2atquQtfyzI5cSGSX/5PQpwT8ET9K0/JOfh+ldYuoNu99x
J+imrCP7Wf4p/0z3o/xz1s/yz1yt5J98TZg7rXdck6btKmQt/+zIpURGyT85
fUrwD8GTNC3/5OdhepeYesPud9wJuinryH6Wf8o/0/0o/5z1s/wzVyv5J18T
5k7rHdekabsKWcs/O3IpkVHyT06fEvxD8CRNyz/5eZjeJabesPsdd4Juyjqy
n+Wf8s90P8o/Z/0s/8zVSv7J14S503rHNWnarkLW8s+OXEpklPyT06cE/xA8
SdPyT34epneJqTfsfsedoJuyjuxn+af8M92P8s9ZP8s/c7WSf/I1Ye603nFN
mrarkLX8syOXEhkl/+T0KcE/BE/StPyTn4fpXWLqDbvfcSfopqwj+1n+Kf9M
96P8c9bP8s9creSffE2YO613XJOm7SpkLf/syKVERsk/OX1K8A/BkzQt/+Tn
YXqXmHrD7nfcCbop68h+ln/KP9P9KP+c9bP8M1cr+SdfE+ZO6x3XpGm7ClnL
PztyKZFR8k9OnxL8Q/AkTcs/+XmY3iWm3rD7HXeCbso6sp/ln/LPdD/KP2f9
LP/M1Ur+ydeEudN6xzVp2q5C1vLPjlxKZJT8k9OnBP8QPEnT8k9+HqZ3iak3
7H7HnaCbso7sZ/mn/DPdj/LPWT/LP3O1kn/yNWHutN5xTZq2q5C1/LMjlxIZ
Jf/k9CnBPwRP0rT8k5+H6V1i6g2733En6KasI/tZ/in/TPej/HPWz/LPXK3k
n3xNmDutd1yTpu0qZC3/7MilREbJPzl9SvAPwZM0Lf/k52F6l5h6w+533Am6
KevIfpZ/yj/T/Sj/nPWz/DNXK/knXxPmTusd16RpuwpZyz87cimRUfJPTp8S
/EPwJE3LP/l5mN4lpt6w+x13gm7KOrKf5Z/yz3Q/yj9n/Sz/zNVK/snXhLnT
esc1adquQtbyz45cSmSU/JPTpwT/EDxJ0/JPfh6md4mpN+x+x52gm7KO7Gf5
p/wz3Y/yz1k/yz9ztZJ/8jVh7rTecU2atquQtfyzI5cSGSX/5PQpwT8ET9K0
/JOfh+ldYuoNu99xJ+imrCP7Wf4p/0z3o/xz1s/yz1yt5J98TZg7rXdck6bt
KmQt/+zIpURGyT85fUrwD8GTNC3/5OdhepeYesPud9wJuinryH6Wf8o/0/0o
/5z1s/wzVyv5J18T5k7rHdekabsKWcs/O3IpkVHyT06fEvxD8CRNyz/5eZje
JabesPsdd4Juyjqyn+Wf8s90P8o/Z/0s/8zVSv7J14S503rHNWnarkLW8s+O
XEpklPyT06cE/xA8SdPyT34epneJqTfsfsedoJuyjuxn+af8M92P8s9ZP8s/
c7WSf/I1Ye603nFNmrarkLX8syOXEhkl/+T0KcE/BE/StPyTn4fpXWLqDbvf
cSfopqwj+1n+Kf9M96P8c9bP8s9creSffE2YO613XJOm7SpkLf/syKVERsk/
OX1K8A/BkzQt/+TnYXqXmHrD7nfcCbop68h+ln/KP9P9KP+c9bP8M1cr+Sdf
E+ZO6x3XpGm7ClnLPztyKZFR8k9OnxL8Q/AkTcs/+XmY3iWm3rD7HXeCbso6
sp/ln/LPdD/KP2f9LP/M1Ur+ydeEudN6xzVp2q5C1vLPjlxKZJT8k9OnBP8Q
PEnT8k9+HqZ3iak37H7HnaCbso7sZ/mn/DPdj/LPWT/LP3O1kn/yNWHutN5x
TZq2q5C1/LMjlxIZJf/k9CnBPwRP0rT8k5+H6V1i6g2733En6KasI/tZ/in/
TPej/HPWz/LPXK3kn3xNmDutd1yTpu0qZC3/7MilREbJPzl9SvAPwZM0Lf/k
52F6l5h6w+533Am6KevIfpZ/yj/T/Sj/nPWz/DNXK/knXxPmTusd16RpuwpZ
yz87cimRUfJPTp8S/EPwJE3LP/l5mN4lpt6w+x13gm7KOrKf5Z/yz3Q/yj9n
/Sz/zNVK/snXhLnTesc1adquQtbyz45cSmSU/JPTpwT/EDxJ0/JPfh6md4mp
N+x+x52gm7KO7Gf5p/wz3Y/yz1k/yz9ztZJ/8jVh7rTecU2atquQtfyzI5cS
GSX/5PQpwT8ET9K0/JOfh+ldYuoNu99xJ+imrCP7Wf4p/0z3o/xz1s/yz1yt
5J98TZg7rXdck6btKmQt/+zIpURGyT85fUrwD8GTNC3/5OdhepeYesPud9wJ
uinryH6Wf8o/0/0o/5z1s/wzVyv5J18T5k7rHdekabsKWcs/O3IpkVHyT06f
EvxD8CRNyz/5eZjeJabesPsdd4Juyjqyn+Wf8s90P8o/Z/0s/8zVSv7J14S5
03rHNWnarkLW8s+OXEpklPyT06cE/xA8SdPyT34epneJqTfsfsedoJuyjuxn
+af8M92P8s9ZP8s/c7WSf/I1Ye603nFNmrarkLX8syOXEhkl/+T0KcE/BE/S
tPyTn4fpXWLqDbvfcSfopqwj+1n+Kf9M96P8c9bP8s9creSffE2YO613XJOm
7SpkLf/syKVERsk/OX1K8A/BkzQt/+TnYXqXmHrD7nfcCbop68h+ln/KP9P9
KP+c9bP8M1cr+SdfE+ZO6x3XpGm7ClnLPztyKZFR8k9OnxL8Q/AkTcs/+XmY
3iWm3rD7HXeCbso6sp/ln/LPdD/KP2f9LP/M1Ur+ydeEudN6xzVp2q5C1vLP
jlxKZJT8k9OnBP8QPEnT8k9+HqZ3iak37H7HnaCbso7sZ/mn/DPdj/LPWT/L
P3O1kn/yNWHutN5xTZq2q5C1/LMjlxIZJf/k9CnBPwRP0rT8k5+H6V1i6g27
33En6KasI/tZ/in/TPej/HPWz/LPXK3kn3xNmDutd1yTpu0qZC3/7MilREbJ
Pzl9SvAPwZM0Lf/k52F6l5h6w+533Am6KevIfpZ/yj/T/Sj/nPWz/DNXK/kn
XxPmTusd16RpuwpZyz87cimRUfJPTp8S/EPwJE3LP/l5mN4lpt6w+x13gm7K
OrKf5Z/yz3Q/yj9n/Sz/zNVK/snXhLnTesc1adquQtbyz45cSmSU/JPTpwT/
EDxJ0/JPfh6md4mpN+x+x52gm7KO7Gf5p/wz3Y/yz1k/yz9ztZJ/8jVh7rTe
cU2atquQtfyzI5cSGSX/5PQpwT8ET9K0/JOfh+ldYuoNu99xJ+imrCP7Wf4p
/0z3o/xz1s/yz1yt5J98TZg7rXdck6btKmQt/+zIpURGyT85fUrwD8GTNC3/
5OdhepeYesPud9wJuinryH6Wf8o/0/0o/5z1s/wzVyv5J18T5k7rHdekabsK
Wcs/O3IpkVHyT06fEvxD8CRNyz/5eZjeJabesPsdd4Juyjqyn+Wf8s90P8o/
Z/0s/8zVSv7J14S503rHNWnarkLW8s+OXEpklPyT06cE/xA8SdPyT34epneJ
qTfsfsedoJuyjuxn+af8M92P8s9ZP8s/c7WSf/I1Ye603nFNmrarkLX8syOX
Ehkl/+T0KcE/BE/StPyTn4fpXWLqDbvfcSfopqwj+1n+Kf9M96P8c9bP8s9c
reSffE2YO613XJOm7SpkLf/syKVERsk/OX1K8A/BkzQt/+TnYXqXmHrD7nfc
Cbop68h+ln/KP9P9KP+c9bP8M1cr+SdfE+ZO6x3XpGm7ClnLPztyKZFR8k9O
nxL8Q/AkTcs/+XmY3iWm3rD7HXeCbso6sp/ln/LPdD/KP2f9LP/M1Ur+ydeE
udN6xzVp2q5C1vLPjlxKZJT8k9OnBP8QPEnT8k9+HqZ3iak37H7HnaCbso7s
Z/mn/DPdj/LPWT/LP3O1kn/yNWHutN5xTZq2q5C1/LMjlxIZJf/k9CnBPwRP
0rT8k5+H6V1i6g2733En6KasI/tZ/in/TPej/HPWz/LPXK3kn3xNmDutd1yT
pu0qZC3/7MilREbJPzl9SvAPwZM0Lf/k52F6l5h6w+533Am6KevIfpZ/yj/T
/Sj/nPWz/DNXK/knXxPmTusd16RpuwpZyz87cimRUfJPTp8S/EPwJE3LP/l5
mN4lpt6w+x13gm7KOrKf5Z/yz3Q/yj9n/Sz/zNVK/snXhLnTesc1adquQtby
z45cSmSU/JPTpwT/EDxJ0/JPfh6md4mpN+x+x52gm7KO7Gf5p/wz3Y/yz1k/
yz9ztZJ/8jVh7rTecU2atquQtfyzI5cSGSX/5PQpwT8ET9K0/JOfh+ldYuoN
u99xJ+imrCP7Wf4p/0z3o/xz1s/yz1yt5J98TZg7rXdck6btKmQt/+zIpURG
yT85fUrwD8GTNC3/5OdhepeYesPud9wJuinryH6Wf8o/0/0o/5z1s/wzVyv5
J18T5k7rHdekabsKWcs/O3IpkVHyT06fEvxD8CRNyz/5eZjeJabesPsdd4Ju
yjqyn+Wf8s90P8o/Z/0s/8zVSv7J14S503rHNWnarkLW8s+OXEpklPyT06cE
/xA8SdPyT34epneJqTfsfsedoJuyjuxn+af8M92P8s9ZP8s/c7WSf/I1Ye60
3nFNmrarkLX8syOXEhkl/+T0KcE/BE/StPyTn4fpXWLqDbvfcSfopqwj+1n+
Kf9M96P8c9bP8s9creSffE2YO613XJOm7SpkLf/syKVERsk/OX1K8A/BkzQt
/+TnYXqXmHrD7nfcCbop68h+ln/KP9P9KP+c9bP8M1cr+SdfE+ZO6x3XpGm7
ClnLPztyKZFR8k9OnxL8Q/AkTcs/+XmY3iWm3rD7HXeCbso6sp/ln/LPdD/K
P2f9LP/M1Ur+ydeEudN6xzVp2q5C1vLPjlxKZJT8k9OnBP8QPEnT8k9+HqZ3
iak37H7HnaCbso7sZ/mn/DPdj/LPWT/LP3O1kn/yNWHutN5xTZq2q5C1/LMj
lxIZJf/k9CnBPwRP0rT8k5+H6V1i6g2733En6KasI/tZ/in/TPej/HPWz/LP
XK3kn3xNmDutd1yTpu0qZC3/7MilREbJPzl9SvAPwZM0Lf/k52F6l5h6w+53
3Am6KevIfpZ/yj/T/Sj/nPWz/DNXK/knXxPmTusd16RpuwpZ3/HzXwC940IS

       "], {{0, 224}, {224, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{224, 224},
     PlotRange->{{0, 224}, {0, 224}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztfcGq/Vtz1IdC8DV8BTPJJAmOncWZA+ETdCAfCHEgTn0O38JH8AXEJ8gk
Y+eBQBJ0sCG0t+pfVd21zjkN97LvZq1e1f1bq7u612+f+8//3X/6i//wT373
u9/953/29//6i9//l3/5l3/5+//6r//oH/7j3//+D3/8L/7wT//+41/9v3/+
4fMf/Z//+Kf/83/8qz//73/713/63/7NH/7sj//mf/3Zn/zvf/vnn9+7PiP6
pzHI9wn9ylqsTxLYWP1XeJTPrj3sWkvZh+l90rZ/XHPTMWczLqXPiMsPV+d6
M1YnnqPL5y57EzpdcSxx7jb3pOtZXO2Zzfgzff6dIAm+mo63ytlhfbJpS0NM
S9QyyFrss9jkfhNO1z5RbE/zzAQfTuyrTXsTtiB7LM090v53xWoX/0zzLtY/
ynPfzHeJc+fKZS79yLNI8/l0jEX2zOcY9vvpM6IH2asuDsA+a/bssL5l45Vr
317FtEQtw+4HRGciDyJ2KXs7YXti/yhcV4lvyr5K8HClHmFtSeQs11l2+b+N
fyby/hUHdnEJ11lI8Ek276fjpHJerjjkhA3RidiLrMXORfiqa++xPFk5vwo3
c9mCrJuOaeyzRvQo+wHZh648qNRi6RzB4klzmMRnxJ+IjYn8rjwX5ay5eBHr
54T/XRwb2fNKDZ7Y82kOrKylPFP2WSh80uVbRL8rNyl7LMEhXZinuQo/T3N7
xf8KfiXnJnIfa4uLGyjPdxLlXLvO2madiIhr/7swpDlMAuc0nj1TSn5P1P6I
JDiMkounMYkYssk/Fd7C2qX4VuFISt0x2eU6d0qectWzSp517QEX51f6Jwrm
aS6LE5FEj0vZS6wPlTzryn1pfyqYXXFJqe/StV4idiV8omBI1CyKf9g8wj47
xP9sHZSwHfFJun/lqkFc52WTfyq2IDYqc5XaWanrN+tK1q4JJ3t2ED1KnnVx
P8Sfih5EJ+vbhI2JGoeNJ0rdoeQdF0dSuOIV5gkPMh7xvxJ/Jv3I9+zcRKx2
9VuU/aPsQ4X/TGNcfB7xFcs52XPk6mNscjylBlHOi2uvKs9ayU0uueLYrl5E
uq50xR8lV7ryKetblx4XP9zs27C2J56dUp+m+ZuyT9h4m8bs2vPss1PGJyQR
qxH9kx4EM9sDYcew67I5MVHXf0qid6TEVcW3Lo6XyONsnFH2qvKsldyk7PlE
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
ltbP+pzl5w1xKdFXSfQiNuuOTWnAk96TyvcursjeoSv5a5NPpn3lugNK5PG2
86vM3eSKm7nDpZ+tidg7C5ds+gf5fpLEPbgrnic+Mz7+FX+69Lvu7KZ10/y5
oa+CYEPwvHjfscmZGzCwelhReh0s/tfzl8tXiM50P+SqnnWdnYY8iMx17beE
foV/sjVRYj9c3e1O+pF1WZxX9x1XPCG9T1wcHrFFkU1+3lB3pOvraXzbWWjA
wOpR9gybX1zvh7ySv9K+UnimK/ch2KYxDff7yNxNfps4O4gkuApSMyp9pDb/
tHGPzfsOFltaj2ufJHrRky1XdXeir3LFc1h7Xfo357p0vsLbEQxs3mHxK5g3
85dSU7v6nxOe9HsFip6ruQ0YFJybOQv5XunJK5iv/DPJFffYvO/Y5EUKZtf3
rjM7yWbd7donytlkJd0vSu9nl41pntnA29N5B8HJ8rGr/IXYMtml+GrCo/RC
E/G/4fy+gl+Rq16x8u6HK1awOBN9qjQ2pL5O86tNXoTo2TxfLmGfETsmgSHd
r0vwSUU279cQDAk8bbydFSXvTPgn/Qp3Tdg7jWF7Vok6VOmFXr0TcjW3GQN7
rhO5I91zS9RKaf8kYrJSX2++h7DJTxRReraJzw32Xq27yScbnlFDD2TSw85l
JX3vM63lugtG7uMmnYh/GuKGwsmVZ4H0nVw2/vQ/c/0xRY8Lp9JzQ8awsSLt
H0VPGpvyjlM6BjZwPCU2Kp/TPkHsTWBg/TyNRyT93F3+cdm1qaehtkrf9Sj3
bmnOvxk3ED3p9xNY2zfP4NXcr4Rh8xmluZ/rHdGEfzb1IP5nY8jVewibHG/C
jIxXxBWHN3vaCT8r5xHByeJBvkfWvbofvOJC6figcCSlL6G8A9bwfK/uzREM
yFyWA2+ewau5r2NIPyPlbkKJSwrXcvkH0enSw55Bl11KDETGu3igC/9m/0fB
7DpfCgdgMSOS6JEm9CT6fg15atKjjPmUxPNlexHI53TNm3guru9d/WclLyvP
l/PmvO7V3DYMrueY6Pmk++3IWoma69e84RUX50nY5eJayPirOJPm9mm56p1+
SoKrN+i5WqtND6JfwYNwJBeHZPNsoha7ykfK+1oK/3Q938mudNxIz73CgJyR
Sb/LLjYOpLlfIoYk/OPqQbF+TtvF6nSN34wzLLbNc8faqHyf3sOKP6/0bNre
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
EsSu9F7dvFvf3FcsTgUzi7+N422utVmzpDEoONkxn4Lwz4lbInqU9wEm/Yh/
ED2JvtBV76itR+Ti+ay9rF0uPyDjkbUa3me7Oo+Inqv8hehJ9AbTZ3Czr9Xw
vgSybtu+QnAm4uFV/b7JrzbzlEunC8MVj53wT7yR/T59R6PIVS/iqmfF4pnG
N9zNJeya5k5j0veMm/vhxZ7bi3w10Stou1tv4Anp3Lq5r674D4uTHb9pY5r7
vShXdz2T/ycMCudE8CfsaouBk550z6oh5iBzG/IIOxfR2eB/Fw9v+Kz4rYGv
uuQKz2ZfK83DWWwIBsVe3Hs52eyNpDle+p3khs8stmk88j3rZ8T/LJ9kx/zq
c/4Vu9IcnsWp2I5IW2x0xdWGPsxVfZGO+crcV/psbXx1k3s3r4v4OfEelDI+
Ia/sq6t3JNJ8jF1rwtkWDydsv/YU/rEofHXy7aavXPxc8dUkrhio7POGGnnz
fUvXfmYxsHo264vNfjiLbXMfKucX0Znmq5vcO4HHtS7it0QuaODtL+4rl6R7
Owlb0rWPIolzccU3Jv65qV9ZN9EjSvPhT7nq36b32BVnRjBscuYG/ydsZOem
+2ysjZ+S4KubNVFCz2beudK52ddCMDTsq80+qovjuWxRMCDjr/JC4rm4bHH1
Kln9bF/rxV7NVX+v7Z0El35X3GPxsHZN6zb4f/NMbfbZEBs3+Woa24v5NKE/
YePV3IZ9NeFx9R43OTZiC4IT0d8QD696DqwtEw/8/IzMZfUneubNvZr0HUcD
p0X0p/sMCH6XuOqLTf+7bFT0pHFOYzbv4tM1UVqPsu7mOwMJG6/mJtZyxWfl
/CY4pJKXG3pZ6XiI6EzgZ33O8k/2uSNxicX8Sq+GxZOo913YEMzpdV04X6kv
NuNng54r/ZOkuX2bbOYjRX8zZ3DN/Ur7apJE7G3uZSl4WP0vxnMXt5zGfGJg
98zmnamr1kv0/VjbrzhtYl0F51VPtc3/bXqu9Lft/6vPii1p/7h0vjJXWeuV
z5Ndm/f4bbVMQ1y6ws/mYoR/InOvehqb66bfqUbWbXjnsOHuzJUXrvzQlq8V
PW3vb7DrpvGkPyP2TmMUXyH+YfUrOJvnvrivXnkXNL3fGuJhczxncSp7jO2L
In5o7qWw+llsiB5Ev4vTsjiv4n9C56Yf0pwtrSetc9KvjPmUdIxNy1U+0lBn
cbbNRca75qYlzSEnnZv9pVfiYXqtTT7M6nTVR+meRgK/K45d9YcRbMhcdt2E
317PKc08sKEGZPUj6yJ4kLkuG9v2OStXNk4YmuduxsOrZ6FgnvSk+1ouWxL+
mcan11KkIZ4r37Nj0vgVnZ/S3B9mZTN3XN05suNf6QNsxn9EZ8N7C6y46tzm
u/VEXb/Z82+Yi4xn5za8y5E+74qkz1Q6HuKW5tbarBkb4jkrDXWcy5ZJrt55
u+I5zXoaztrmHX1aFJwv7v+ruS4+k8CciM/Ncxv2lUvn1e+JlD5hczxE5Ar/
1X00qz/9eRP/NDftk0knsi6Cs6Ev8YqexLqbfQAW89X5RXAi+BGdDfv/ai6i
U/me1Y+Mf9HPDTVywoeJ8ZO4aiIWc/PnTfyI/rT/kbmv/M4Owe/Sn7CRlU1O
i+hp45YNvZpEHyC9Vxv4G+tn5Ht2jIJhc27azwpmdn+61r2au1kjb/6ugR2v
9F5cMXPC2fC3BTZ/U+PiIQ29CAV/eq107GXXSnCPTbsaOGFaj7LuZh+g7Xfc
aa7++v7fnNv22w1kvEsantEm5rQe1/ir9z+RuVd7dRIXP1f0uzg8guHF3JGI
Mw25r/mdz+92R7+Z69l1kfHpc+HSOc19ff8j/nHNVaTtb4Nc9VUScxvimEtP
um5Vnns6rqY/u/yp2Pspm/fRrM6r3KHgZ3Fu5j4EM+uHhvcBJmmIpZMedi4r
rt88KhjS5xfRyeJ8ff831MvpmMPObXvH44qbvR4PE/Vdw3trLLbEHp6+/0r7
vDl3JPRPepQxE/7N96hZzMo+3+xRNNT7advTOBE9LjzKWq65DfvfZcunXL3r
NeG84jk8ao+ezXPdpidRtyL6E+cUwcPavqmn7S4mzSddOF1zWf2JtVz9hPTZ
UaStR5HWM41J17YJnIiedD17xcld0rznlfHN9eNV/dXWF2rQk8CQOMttPfPm
WHe1zxVsbf2cqxzK6mfl6p03V6xI1ImvxOQGnC5R6tkrTn61/xv2vILhdS49
2eJa14W5IT40c6TEOU2czWlM8/vSCXtdOCedDWd5s65p+L2Dsn827+au6kRE
55WeK5xXMWrChnyv2DuNb7ibRvA35AV2jIKzrceCrLuJuS2ONfRzrt4hadt7
bfePac7mkvRZaOMJV393C/le0dPQo2iLyQ1cevMd+DZ+guhUxjfU8m2crZlL
v9gXUta90rPJIZW6afNsXsUKBCc716WH5ScNZzmd1xr4sOJ/FieLrUGngqGB
+6VxTjrTcxv+fsUVN2uo5T9lk7NNOhu49It9ocS6aT3sXBaPa63Ns5m+Z0n3
hTZrEFYazjKi5xWewMpmrk9w9USd2BCTr3RuxodELnDh3Hy3CtGZruWvOBuy
lks2OdJV3dcWxxo4TGItZYyyFmuLokdZ61Pa3sln173K45t/A4rVucmpPsW1
lxK/Gbm6I57Gs3oa6iZEv4ItbUuDNNSSzX8/oZlLp3nmJv9nMTTomcYk7qyV
tVhp+E0Eq6ch9irP7sX37dl1NzG/+N4du65L5+bcSU86rio6XbLZQ2MxbH5W
fNXWJ1FsYfVM8gqXVsZf9dhf1MNK+ncQrrOZ4H6bOb2tP8Y+i82apa2Odr2n
4Rrf4EN2LUXPJoYGuYoPDXkn8Vmx98W/HaGs+1W5dENfSJnbrMe1fxQeMmF+
5X0SJV65fNLcH7t6R+iqjkYkHQMbnl26vmBtaahxNmvJhncS0nkHwcBKok5X
xl9xp6t83cCllXXbeiBtetK1GLKuy66rPXAlr/THEAyJZ6qsi8hmbEmPv/Jh
Qq7O8mYvLtFL3+Ramz3Azbzf0E+74jCszle4NLtu87sEDXomneyYhpw7yVVv
0MWRmnnLJM09TFYSdRyyFovNNX7Thw11Yvr8unyI4E9jSPufHdN2Njff62vj
bOk9f8WlN+c2cMLNuMrqRGQz5yZyATs+3a9o4y3pXkGi/5bmMAo2RadrPKtT
8eHV+3gJbGkfbvajFF+xayn4FWmoF1hsn3KVWxE8rM5mLr05N71Wg57NfbJZ
d1y9T9KgR1lLGb/5Hj6CmZW292Ab4piLpyUwp/WwOjd7cen92fYufeLzV8K2
mVsTcnU3dOWrV7h0Qo8iaW6QtvGqnkrraagZXZLuYSbqoyu+mq4j0u9gKzqv
OHZaFK47yevv0l/1w5ux/dYzdOpJP+tE76XNVwnMDXsD0XO1TzZrvYacnth7
Cc7QEH8SuX6zPnLhRNZqq5fTteE0Jt1jR3Q27/+rerPht1Guuc3YED1pPOln
zeJs4Gzpuc3cchrfsE8mPGkbXfqnuS4bkXVZbM3xJ5HrEfzp+uiqn3YVe1n9
mz5RcCJzm/c/olPxj6seSejZ9MkmtuYelzK+rY+EYNucm14roWfSqYxvqOsR
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
5wlz298JuZrbnBOvaqUXY3v6N3cNMZm1i52rrDuN+Up/+ze9VsPvTxN2sXMb
zoVLT3qPsRgS+3/z79i7xiN6lPPL6mexIRiuPrtsaTizbT0Q1/iruQ0xOaGH
lXQ/s4EnTHrY8Vc5tG1vp/P4V9LTxu039SjrbvadFGys7cpc1/iErxLSfO7Y
dRN4rs5sYu5P/9O77qaetn7mNBexi/UJa0sCw2beTGOexjf8jetX9LjmvhJ/
2LnTmM2+EyuvcLBNPtkQ9xrqnU0fuvQ3z530JMZfzW14voqeq5i8GfPT51HB
MI1v/g07MpfFwOpv+/1p87tVrP62ONYw94oLNdeeii3T3Ia4x869+nvyLB52
LdxL/1jP1dz0/m/g4ch417oJPZNOdowSD5UxrrOJ2HsVz1+s16725+uSjmlt
8achhiv401yogYNtxlsXTmT8NLe5t9bwd0JeP7Mv5lN2fNtZSOzDSRre/3St
hUginm+um5jbdofe/BmxcbKXnav4s0HP1VyEz7vWVfSkfZWIt81xz6Wnbfw0
9zucWde6DTwcGe9aV9GT+A270mNx6We/3+QMiefiWjcxV5GGflHD71jTMa0h
F7v0NPRSWHmx9mT1NNiYsKsBc3PfIIHHNXfSkxh/NbchJrvkq77/2XCf5ZKG
s7/Z92NxJvQrctUTU/Q3xLGGuYl93lx7uvZYg40N+7ltfFrazmxi3QYejox3
rYvoSfQw2e+VtRI9TAQ/4mdkvAtzw/6cxly9Y9/GnzexKXrYMa610no25zb8
Xn7Cz45PxzTemt9eKzF+mnvVs0qPb4516bmTnsT4q7lXMbn574q88v5nW/5q
/g17+vw2/6ZjE5uiR5EGbjnp2ZzL6knUzs0cLFFXJmxs2M8N49tiXXpu8756
5Ywn8CTiJGujS79iV8K3Lj3f7fwq37PS0KtJyE//09sXYm1B5PXaU5FNG1ls
r9Tmr9RiyNyGOiIx/mpuOiZv+u2rvv85yVX+asi5yFwXZnYtVn+ak6R1JjCw
0sAtJz2JuVe/zbyyN2HjVe2j2KWs28YzG2qxtvP+os8TOJV1r2ph5ftEXLrK
3Q3PCBmfmHt1fpVnl76jT+jc/O18Qy526dnk5J9y9V7Tpq+u3ul6JS+7MLTl
hc279Vf4bUMuZsdvxkMEz+a6De9//vyG3TvXhXka0/Cbjgmza29cxTFlrRdz
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
dt3Es07zloZ9osjVui/W6ZPOaUzDOXqFSzScwa80tzknKnPTHOaV9/MR2xG5
ev//UxpyXwMGdnwz90jUa5N8h/c22/bJK7X563X65l595f2Bhj7Vz9ycvGjv
i3NZPa44yepU1mrOQc0YGrhlIude9WQS9ia4kILZZe80/pXa/KvW6Z9yFQ8V
bK/MRcb/zH03J7rsfXFu+uw3/A2TV3LQK/lXwZy2PY3ZxVc3n7XrDDbU9ZPO
xPj0ui/W6Ym9ivhts65vntvGH9rmvp4Tv8N+3jz7yphE36YtB72C4apeU3Re
2fspLh6Y3rdtcW+zL9HQD2mu0xN7Van7rv72ztVcZPx3nqvoedHehj2Z7lt+
yne4V2rOfVcY0nMRPWnenuYqru9deBS56mMgOlkMV+u+Uqcj4zdr6jSGBi7B
jv/Oc79qTmzrAyhz0/HKFSc312rIQci63/n3eon+vIJZwemS9L5tiHsuucLw
ek8gweU26yMWg6Jncy4y/jvM/ao5UZnbvJ+v3o1HMGyu1cYTkLnfoaZ2yeZ9
HCKJGrBB0n2MtK9eX3fSyX6/2YNqeOez4W/iuea+wj1cc13yir0NfYBEHcqO
ScTJzbXSNjbsqxdrvXQuTpydRP7dzMubPkz45MXfD7rWnfQkxMXlJp3svmrw
TwMPUTC/OPcqL1/Zq8xt4MbpmuI7vP959Vu5ae5Xramv/nbNZg9nWlcZg+C5
8qGiZ3Ououf1nkA6XySeaXM/IW07Mv6rzv3Ov2F/ZU9e/Yad/b5tLVY/OwaZ
21D7KOuycxU9ynOfdCZ6OJs5PfHc2/bnVW3+lXoC6R47gnPTJ5+S9gmC4cVY
/ZVyxHeY+5XO4+a6m2td/Xa+QU963au8/ymJ/p6iZ9KZ5iqKzzffm22rza/W
TdfLyviGe5/mfoJLT0Osvpp7VRt+1bmTHmVu+jwq/SV23c21Nm1Unummntfz
fkPcU3Qm+lEsfmS8Ig2xV5HXewKuvXEVrxrej03HDXaugr9t7s9v2L1z03uy
4Tz+vP+53xd6paZ2yStxz/UuqNKPUvCz2NK12CbOzRpks15m8SPjWZ0u/Yie
zX5C22/nG/jwKzniRV81xFhWz+t9xc21XOuy0sBRv1LeZ/G7RNlLrP405s/P
fwcAq/u/
       "], {{0, 224}, {224, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{224, 224},
     PlotRange->{{0, 224}, {0, 224}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2DHK/e9RhvGgIG5DXYHaJ7gFg2AbwdgEhFhIsHENrsHGyt1YW7kDexOw
sEkh+Z8zn2ueKZSf4X6fuec71z1nzB/9zd//5c9/70c/+tE//OGv/9df/uwf
/+KXv/zZr376B7/5P/72Z7/48z/7xe//+p//+b//85t//+u//fGP/+Rf/uon
f/fPP/3Jv//Xr37yT//9Hz/+65//6Y9/l//8t/37/+o/Ueu3vf9D1f3/vvkJ
bz+U/hN1vzmLT/P5Q/X1iVloWfvEtxX4/0S/P5Sf36XWD/W3UzP6ob7bJ76n
/M43s/wJPqd22g+VzU9w+2nGvpmjqd/QqXtJ61H4zZX7/Safwu/mC1n75v+P
VuH5m7/Rn/4+9exMMaP9dtT18k6b0n/zFvrmvz/tQbhzZP431Z3iZ+vvpsCJ
0G/xHeHmFJic8llk5mW9vNM0vcCz7EH4/jL/m+pO8VPJbDFrQr/Fd+7mnPVZ
ZOZlvbzTNL3As+xB+P4y/5vqTvFTyWwxa0K/xXfu5pz1WWTmZb280zS9wLPs
Qfj+Mv+b6k7xU8lsMWtCv8V37uac9Vlk5mW9vNM0vcCz7EH4/jL/m+pO8VPJ
bDFrQr/Fd+7mnPVZZOZlvbzTNL3As+xB+P4y/5vqTvFTyWwxa0K/xXfu5pz1
WWTmZb280zS9wLPsQfj+Mv+b6k7xU8lsMWtCv8V37uac9Vlk5mW9vNM0vcCz
7EH4/jL/m+pO8VPJbDFrQr/Fd+7mnPVZZOZlvbzTNL3As/xv4fvL/G+qO8VP
JbN3c7byK/+uCX8r+ywy87Je3mmaXuBZ9iN8f5n/TXWnmKxk9m7OVn7l3zXh
b2WfRWZe1ss7TdMLPMt+hO8v87+p7hSTlczezdnKr/y7Jvyt7LPIzMt6eadp
eoFn2Y/w/WX+N9WdYrKS2bs5W/mVf9eEv5V9Fpl5WS/vNE0v8Cz7Eb6/zP+m
ulNMVjJ7N2crv/LvmvC3ss8iMy/r5Z2m6QWeZT/C95f531R3islKZu/mbOVX
/l0T/lb2WWTmZb280zS9wLPsR/j+Mv+b6k4xWcns3Zyt/Mq/a8Lfyj6LzLys
l3eaphd4lv0I31/mf1PdKSYrmb2bs5Vf+XdN+FvZZ5GZl/XyTtP0As+b/NzN
2a07xUMls3dztvIr/64Jfyv7LDLzsl7eaZpe4LniZ+p+kPnfVHcTM8LvpsCJ
0G/xnbs5Z30WmXlZL+80TS/wXPFzN+fuupuYEX43BU6Efovv3M0567PIzMt6
eadpeoHnip+7OXfX3cSM8LspcCL0W3znbs5Zn0VmXtbLO03TCzxX/Ez1K/O/
qe7U7CqZ1fJ1N6fD5N2cu3egdrdoenmnaXqB54qfCrd1/9p3+7SHSmaL+RL6
Lb5zN+eszyIzL+vlnabpBZ4rfirc1v1r3+3THiqZLeZL6Lf4zt2csz6LzLys
l3eaphd4rvipcFv3r323T3uoZLaYL6Hf4jt3c876LDLzsl7eaZpe4Lnip8Jt
3b/23T7toZLZYr6Efovv3M0567PIzMt6eadpeoHnip8Kt3X/2nf7tIdKZov5
EvotvnM356zPIjMv6+WdpukFnit+KtzW/Wvf7dMeKpkt5kvot/jO3ZyzPovM
vKyXd5qmF3iu+JFnIfuv1J365pXMFvMl9Ft8527OWZ9FZl7WyztN0ws8V/wI
s3hh72n79tMeKpkt5kvot/jO3Zxv7t4p/3W9vNM0vcBzxY8wixf2nrZvP+2h
ktlivoR+i+/czfnm7p3yX9fLO03TCzxX/AizeGHvafv20x4qmS3mS+i3+M7d
nG/u3in/db280zS9wHPFjzCLF/aetm8/7aGS2WK+hH6L79zN+ebunfJf18s7
TdMLPFf8CLN4Ye9p+/bTHiqZLeZL6Lf4zt2cb+7eKf91vbzTNL3Ac8WPMIvi
fCt5n/qGlZkW8yX0W3znbs5Zn0VmXtbLO03TCzxX/AizkH93tO8m8Hk3Z2s/
yxzK2b+bc/cO1O4WTS/vNE0v8FzxI8xC/t3RvpvA592crf0scyhn/27O3TtQ
u1s0vbzTNL3Ac8WPMAv5d0f7bgKfd3O29rPMoZz9uzl370DtbtH08k7T9ALP
FT/CLLRdJH83gc+7OVv7Webwbs53slNk5mW9vNM0vcBzxY8wCzkLQi2Nz7s5
W/tZ5vBuzneyU2TmZb280zS9wHPFjzALOQtCLY3Puzlb+1nm8G7Od7JTZOZl
vbzTNL3Ac8WPMAs5C0Itjc+7OVv7Webwbs53slNk5mW9vNM0vcBzxY8wCzkL
Qi2Nz7s5W/tZ5vBuzneyU2TmZb280zS9wHPFjzALOQtCLY3Puzlb+1nm8G7O
d7JTZOZlvbzTNL3Ac8WPMAs5C/Uep3qpfNtivoR+i+/czTnrs8jMy3p5p2l6
geeKH2EWchamMiXzeTdnaz/LHMoZvJuzu28F/3W9vNM0vcBzxY8wCzkLU5mS
+bybs7WfZQ7lDN7N2d23gv+6Xt5pml7gueJHmIWchalMyXzezdnazzKHcgbv
5uzuW8F/XS/vNE0v8FzxI8xCzoIwI43Puzlb+1lm/m7Od7JTZOZlvbzTNL3A
c8WPMAs5C1pdgc+7OVv7WWBeeKeS063ZKTLzsl7eaZpe4LniR5iFnAWtrsDn
3Zyt/SwwL7xTyenW7BSZeVkv7zRNL/Bc8SPMQs6CVlfg827O1n4WmBfeqeR0
a3aKzLysl3eaphd4rvgRZiFnQasr8Hk3Z2s/C8wL71RyujU7RWZe1ss7TdML
PFf8CLOQs6DVFfi8m7O1nwXmhXcqOd2anSIzL+vlnabpBZ4rfoRZyFmQ68pM
VjJbzJfQb/GduzlnfRaZeVkv7zRNL/Bc8SPMQs7CprrfnFcls8V8Cf0W37mb
c9ZnkZmX9fJO0/QCzxU/wizkLGyq+815VTJbzJfQb/GduzlnfRaZeVkv7zRN
L/Bc8SPMQs7CprrfnFcls8V8Cf0W37mbc9ZnkZmX9fJO0/QCzxU/wizkLGyq
+815VTJbzJfQb/GduzlnfRaZeVkv7zRNL/Bc8SPMQs7CprrfnFcls8V8Cf0W
37mbc9ZnkZmX9fJO0/QCzxU/wizkLGyq+815VTJbzJfQb/GduzlnfRaZeVkv
7zRNL/Bc8SPMQs7CprrfnFcls8V8Cf0W37mbc9ZnkZmX9fJO0/QCzxU/wizk
LGyq+815VTJbzJfQb/GduzlnfRaZeVkv7zRNL/Bc8SPMQs7CprrfnFcls8V8
Cf0W37mbc9ZnkZmX9fJO0/QCzxU/wizkLGyq+815VTJbzJfQb/GduzlnfRaZ
eVkv7zRNL/Bc8SPMQs7CprqbuJ363RTYEPotvnM356zPIjMv6+WdpukFnit+
hFnIWdhU95v8VDJbzJfQb/GduzlnfRaZeVkv7zRNL/Bc8SPMQs7Cprrf5KeS
2WK+hH6L79zNOeuzyMzLenmnaXqB54ofYRZyFjbVFfjRPBTzJfRbfOduzlmf
RWZe1ss7TdMLPFf8CLOQs7Cp7hQ/GsOyt7s5HQ7v5ty997S7RdPLO03TCzxX
/AizkLOwqe4UPxrDsre7OR0O7+bcvfe0u0XTyztN0ws8V/wIs5CzsKnuFD8a
w7K3uzkdDu/m3L33tLtF08s7TdMLPFf8CLOQs7Cp7hQ/GsOyt7s5HQ7v5ty9
97S7RdPLO03TCzxX/AizkLOwqe4UPxrDsre7OR0O7+bcvfe0u0XTyztN0ws8
V/wIs5CzsKnuFD8aw7K3uzkdDu/m3L33tLtF08s7TdMLPFf8CLOQs7Cp7hQ/
GsOyt7s5HQ7v5ty997S7RdPLO03TCzxX/AizkLOwqe4UPxrDsre7OR0O7+bc
vfe0u0XTyztN0ws8V/wIs5CzsKnuFD+Cz035Eu6Z4jt3c876LDLzsl7eaZpe
4LniR5iFnIVNdaf4kfNbzJdwzxTfuZtz1meRmZf18k7T9ALPFT/CLOQsbKo7
xY+c32K+hHum+M7dnLM+i8y8rJd3mqYXeK74EWYhZ2FT3Sl+5PwW8yXcM8V3
7uac9Vlk5mW9vNM0vcBzxY8wCzkLm+pO8SPnt5gv4Z4pvnM356zPIjMv6+Wd
pukFnit+hFnIWdhUd4qfy+/dnMI7d3PO+iwy87Je3mmaXuC54keYhZyFTXWn
+KnkV2D7bk6Hw7s5d+897W7R9PJO0/QCzxU/wizkLGyqO8VPJb8C23dzOhze
zbl772l3i6aXd5qmF3iu+BFmIWdhU90pfir5Fdi+m9Ph8G7O3XtPu1s0vbzT
NL3Ac8WPMAs5C5vqTvFTya/A9t2cDod3c+7ee9rdounlnabpBZ4rfoRZyFnY
VHeKn0p+Bbbv5nQ4vJtz997T7hZNL+80TS/wXPEjzELOwqa6U/xU8iuwfTen
w+HdnLv3nna3aHp5p2l6geeKH2EWchY21Z3ip5Jfge27OR0O7+bcvfe0u0XT
yztN0ws8V/wIs5CzsKnuFD+V/L7wPTX27uZ8Jy9FZl7Wf7Ou1nslg0U/wizk
LGyqO8VPJb9C1u7mdDi8m3P33tPuFk3/zbpa75UMFv0Is5CzsKnuFD+V/ApZ
u5vT4fBuzt17T7tbNP0362q9VzJY9CPMQs7CprpT/FTyK2Ttbk6Hw7s5d+89
7W7R9N+sq/VeyWDRjzALOQub6k7xU8mvljW5x+I7d3PO+iwy87L+m3W13isZ
LPoRZiFnYVPdKX4q+a1kTeix+M7dnLM+i8y8rP9mXa33SgaLfoRZyFnYVHeK
n0p+K1kTeiy+czfnrM8iMy/rv1lX672SwaIfYRZyFjbVneKnkt/L2u537uac
9Vlk5mX9N+tqvVcyWPQjzELOwqa6U/xU8lvMWp29uznfyUuRmZf1m/aYcOcI
tQQ/wizkLGyqO8VPJb/FrNXZu5vznbwUmXlZv2mPCXeOUEvwI8xCzsKmulP8
VPJbzFqdvbs538lLkZmX9Zv2mHDnCLUEP8Is5CxsqjvFTyW/xazV2bub8528
FJl5Wb9pjwl3jlBL8CPMQs7CprpT/FTyW8zaFAMaw8LvmvC3ss8iMy/r5T2m
6QWeK36EWchZ2FR3ip9KfotZq99Fd3O+k5ciMy/r5T2m6QWeK36EWchZ2FR3
ip9KfotZq99Fd3O+k5ciMy/r5T2m6QWeK36EWchZ2FR3ip9KfotZq99Fd3O+
k5ciMy/r5T2m6QWeK36EWchZ2FR3ip9KfotZq99Fd3O+k5ciMy/r5T2m6QWe
K36EWchZ2FR3ip9KfotZq99Fd3O+k5ciMy/r5T2m6QWeK36EWchZ2FR3ip9K
fotZk/vVsnA356xPbe9pd4uml/eYphd4rvgRZiFnYVPdKX4q+S1mTei34uFu
zlmfAm/f9F/Xy3tM0ws8V/wIs5CzsKnuFD+V/BazJvRb8XA356xPgbdv+q/r
5T2m6QWeK36EWchZ2FR3ip9KfotZE/qteLibc9anwNs3/df18h7T9ALPFT/C
LOQsbKo7xU8lv8WsCf1WPNzNOetT4O2b/ut6eY9peoHnih9hFnIWNtWd4qeS
32LWhH4rHu7mnPUp8PZN/3W9vMc0vcBzxY8wCzkLm+pO8VPJbzFrQr9bObyb
c/fe0+4WTS/vMU0v8FzxI8xCzsKmulP8VPJbzJrQr/CO8Lsm/K3sU+Dkm/7r
enmPaXqB54ofYRZyFjbVneKnkt9i1oR+hXeE3zXhb2WfAiff9F/Xy3tM0ws8
V/wIs5CzsKnuFD+V/BazJvQrvCP8rgl/K/sUOPmm/7pe3mOaXuC54keYhZyF
TXWn+Knkt5g1oV/hHeF3Tfhb2afAyTf91/XyHtP0As8VP8Is5CxsqjvFTyW/
xawJ/QrvCL9rwt/KPgVOvum/rpf3mKYXeK74EWYhZ2FT3Sl+KvktZk3oV3tH
yKkwF82nxol2t2h6eY9peoHnih9hFnIWNtWd4qeS32LWhH4r79zNOeuzwsnp
/T2m6QWeK36EWchZ2FR3ip9KfotZE/qtvHM356zPCien9/eYphd4rvgRZiFn
YVPdKX4q+S1mTej33nH+VvYpzOWb/ut6eY9peoHnih9hFnIWNtWd4qeS32LW
hH6L78jfdmteipy8rJf3mKYXeK74EWYhZ2FT3Sl+KvktZk3ot/iO/G235qXI
yct6eY9peoHnih9hFnIWNtWd4qeS32LWhH6L78jfdmteipy8rJf3mKYXeK74
EWYhZ2FT3Sl+KvktZk3ot/iONusX8lLk5GW9vMc0vcBzxY8wCzkLm+pO8VPJ
bzFrQr/Fd+TfrK15KXLysl7eY5pe4LniR5iFnIVNdaf4qeS3mDWh3+I78m/W
1rwUOXlZL+8xTS/wXPEjzELOwqa6U/xU8lvMmtBv8R35N2trXoqcvKyX95im
F3iu+BFmIWdhU90pfir5LWZN6Lf4jvybtTUvRU5e1st7TNMLPFf8CLOQs7Cp
7hQ/lfwWsyb0W3xH2Hv1WvW9p90tml7eY5pe4LniR5iFnIVNdaf4qeS3mDWh
3+I78n9vuTUvRU5e1st7TNMLPFf8CLOQs7Cp7hQ/lfwWsyb0W3znbs5uX5W9
XdfLe0zTCzxX/AizkLOwqe4UP5X8FrMm9Ft8527Obl+VvV3Xy3tM0ws8V/wI
s5CzsKnuFD+V/BazJvRbfOduzm5flb1d18t7TNMLPFf8CLOQs7Cp7hQ/lfwW
syb0W3xHvjm1/ArfUHjnNb28xzS9wHPFjzALOQub6k7xU8lvMWtCv8V3Kjen
xuSmvafdLZpe3mOaXuC54keYhZyFTXWn+Knkt5g1od/iO3dzft9bkZOX9fIe
0/QCzxU/wizkLGyqO8VPJb/FrAn9Ft+5m/P73oqcvKyX95imF3iu+BFmIWdh
U90pfir5LWZN6Lf4zt2c3/dW5ORlvbzHNL3Ac8WPMAs5C5vqTvFTyW8xa0K/
xXfu5vy+tyInL+vlPabpBZ4rfoRZyFnYVHeKn0p+i1kT+i2+czfn970VOXlZ
L+8xTS/wXPEjzELOwqa6U/xU8lvMmtBv8Z27Ob/vrcjJy3p5j2l6geeKH2EW
chY21Z3ip5LfYtaEfovv3M35fW9FTl7Wy3tM0ws8V/wIs5CzsKnuFD+V/Baz
JvRbfOduTpNn+Z3X9PIe0/QCzxU/wizkLGyqO8VPJb/FrAn9Ft+5m/P736TI
yct6eY9peoHnih9hFnIWNtWd4qeS32LWhH6L79zN+f1vUuTkZb28xzS9wHPF
jzALOQub6k7xU8lvMWtCv8V37ub8/jcpcvKyXt5jml7gueJHmIWchU11p/ip
5LeYNaHf4jt3c37/mxQ5eVkv7zFNL/Bc8SPMQs7CprpT/FTyW8ya0G/xnbs5
ff61d17Ty3tM0ws8V/wIs5CzsKnuFD+V/BazJvRbfOduzu/7LHLysl7eY5pe
4LniR5iFnIVNdaf4qeS3mDWh3+I7d3N+32eRk5f18h7T9ALPFT/CLOQsbKo7
xU8lv8WsCf0W37mb8/s+i5y8rJf3mKYXeK74EWYhZ2FT3Sl+KvktZk3ot/jO
3Zxv+vwmA3W9vMc0vcBzxY8wCzkLm+pO8VPJbzFrQr/Fd+7mnPUpfBPtbtH0
8h7T9MLeq/gRZiFnYVPdKX4q+S1mTei3+E7lRtqaHeGbaHeLppf3mKYX9l7F
jzALOQub6k7xU8lvMWtCv8V3KjfS1uwI30S7WzS9vMc0vbD3Kn6EWchZ2FR3
ip9KfotZE/otvlO5kbZmR/gm2t2i6eU9pumFvVfxI8xCzsKmulP8VPJbzJrQ
b/Gdyo20NTvCN9HuFk0v7zFNL+y9ih9hFnIWNtWd4qeS32LWhH6L71RupK3Z
qeyul/XyHtP0wt6r+BFmIWdhU90pfir5LWZN6Lf4zt2csz4FZrS7RdPLe0zT
C3uv4keYhZyFTXWn+Knkt5g1od/iO3dzzvoUmNHuFk0v7zFNL+y9ih9hFnIW
NtWd4qeS32LWhH6L79zNOetTYEa7WzS9vMc0vbD3Kn6EWchZ2FR3ip9KfotZ
E/otvnM356xPgRntbtH08h7T9MLeq/gRZiFnYVPdKX4q+S1mTei3+M7dnLM+
BWa0u0XTy3tM0wt7r+JHmIWchU11p/ip5LeYNaHf4jt3c8761JgRetT08h7T
9BWGBT/CLOQsbKo7xU8lv8WsCf0W37mbc9bnMePr5T2m6QWGK36EWchZ2FR3
ip9KfotZE/otvnM356zPY8bXy3tM0wsMV/wIs5CzsKnuFD+V/BazJvRbfOdu
zlmfx4yvl/eYphcYrvgRZiFnYVPdKX4q+S1mTei3+M7dnLM+i8xo36TyzYU8
CneOUEvwI8xCzsKmulP8VPJbzJrQb/GduzlnfRaZ0RirfPOXv5VWS/AjzELO
wqa6U/xU8lvMmtBv8Z27OWd9FpnRGKt885e/lVZL8CPMQs7CprpT/FTyW8ya
0G/xnbs5Z30WmdEYq3zzl7+VVkvwI8xCzsKmulP8VPJbzJrQb/GduzlnfRaZ
0X4HK99cyKMwX6GW4EeYhZyFTXWn+Knkt5g1od/iO3dzzvosMqNlufLNi71X
clf0I8xCzsKmulP8VPJbzJrQb/GduzlnfRaZ0bJc+ebF3iu5K/oRZiFnYVPd
KX4q+S1mTei3+M7dnLM+i8xoWa5882LvldwV/QizkLOwqe4UP5X8FrMm9Ft8
527OWZ9FZoR+BQ/CHtP0AsMVP8Is5CxsqjvFTyW/xawJ/RbfuZtz1meRGU1f
+eZCL8KdI9QS/AizkLOwqe4UP5X8FrMm9Ft8527OWZ9FZjR95ZsLvQh3jlBL
8CPMQs7CprpT/FTyW8ya0G/xnbs5Z30WmdH0lW8u9CLcOUItwY8wCzkLm+pO
8VPJbzFrQr/Fd+7mnPVZZEbW17+V9j0ruSv6EWYhZ2FT3Sl+KvktZk3ot/jO
3ZyzPovM1PXytxK+TzF3RT/CLOQsbKo7xU8lv8WsCf0W37mbc9ZnkZm6Xv5W
wvcp5q7oR5iFnIVNdaf4qeS3mDWh3+I7d3PO+iwyU9fL30r4PsXcFf0Is5Cz
sKnuFD+V/BazJvRbfOduzlmfRWY26bVvpX0f+XvW/QizqOyNet0pfir5LWZN
6Lf4zt2csz6LzLys1/aYphcYrvgRZlHZG/W6U/xU8lvMmtBv8R35N/qF7BSZ
eVmv7TFNLzBc8SPMorI36nWn+Knkt5g1od/iO/Jv9AvZKTLzsl7bY5peYLji
R5hFZW/U607xU8lvMWtCv8V35N/oF7JTZOZlvbbHNL3AcMWPMIvK3qjXneKn
kt9i1oR+i+/Iv9EvZKfIzMt6bY9peoHhih9hFpW9Ua87xU8lv8WsCf0W35F/
o1/ITpGZl/X1PNa/zzf/Xfwd3Lo36nUr+6TyuylwIvRbfOduzlmfRWZe1n86
a1q/ldwV/QizqOyNet0pfir5LWZN6Lf4zt2csz6LzLys/3TWtH4ruSv6EWZR
2Rv1ulP8VPJbzJrQb/GduzlnfRaZeVn/6axp/VZyV/QjzKKyN+p1p/ip5LeY
NaHf4jt3c876LDLzsl57R9ML37DiR5hFhdt63Sl+KvktZk3ot/jO3ZyzPovM
vKz/dF2t30ruin6EWWj8b607xU8lv8WsCf0W37mbc9ZnkZmX9Z+uq/VbyV3R
jzALjf+tdaf4qeS3mDWh3+I7d3PO+iwy87L+tbqV3BX9CLOocFivO8VPJb/F
rAn9Ft+5m3PWZ5GZl/XaTqt8H62W4EeYhcz/prpT/FTyW8ya0G/xnbs5Z30W
mXlZr+20yvfRagl+hFnI/G+qO8VPJb/FrAn9Ft+5m3PWZ5GZl/XaTqt8H62W
4EeYhcz/prpT/FTyW8ya0G/xnbs5Z30WmXlZX9lp2vfRagl+hFnI/G+qO8VP
Jb/FrAn9Ft+5m3PWZ5GZl/XyTtPyLmdc8CPMQuZ/U90pfir5LWZN6Lf4zt2c
sz6LzLysl3ealnc544IfYRYy/5vqTvFTyW8xa0K/xXfu5pz1WWTmZb2807S8
yxkX/AizkPnfVHeKn0p+i1kT+i2+czfnrM8iMy/r5Z0m3yRaLcHPpvluyp3A
xtQOqfxuCpwI/RbfuZtz1meRmZf18k4TPAgMV/zczflO3Sl+KvktZk3ot/jO
3ZyzPovMvKyXd5rgQWC44uduznfqTvFTyW8xa0K/xXfu5pz1WWTmZb280wQP
AsMVP3dzvlN3ip9KfotZE/otvnM356zPIjMv6+WdJtwwAsMVP8K8ZP431Z3i
Z+vvpsCJ0G/xnbs5Z30WmXlZL+80TS9nXPAjfH+Z/011p/jZ+rspcCL0W3zn
bs5Zn0VmXtbLO03TyxkX/AjfX+Z/U90pfrb+bgqcCP0W37mbc9ZnkZmX9fJO
0/RyxgU/wveX+d9Ud4qfrb+bAidCv8V37uac9Vlk5mW9vNM0vZxxwY/w/WX+
N9Wd4mfr76bAidBv8Z27OWd9Fpl5WS/vNE0vZ1zwI3x/mf9Ndaf42fq7KXAi
9Ft8527OWZ9FZl7WyztN08sZF/wI31/mf1PdKX62/m4KnAj9Ft+5m3PWZ5GZ
l/XyTtP0csYFP8L3l/nfVHeKn62/mwInQr/Fd+7mnPVZZOZlvbzTNL2cccGP
8P1l/jfVneJn6++mwInQb/GduzlnfRaZeVkv7zRNX/938Xdw696o153iZ+vv
psCJ0G/xnbs5Z30WmXlZL+80TS/wLHsQvr/M/6a6U/xUMlvMmtBv8Z27OWd9
Fpl5WS/vNE3/ie/5P8D+aO8=
       "], {{0, 224}, {224, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{224, 224},
     PlotRange->{{0, 224}, {0, 224}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt3DFu1EAUBuAVSIhrUJKCAgo6I2qaKJxgkaCKhBQKREtHlQaOwDHScgka
Wm5ASSJR0Ky0lucfv/F+RaIvkdfyvJl583Zs+dGb9xfv7u12uw8Pb39d7D++
vLraf3r94O6Pt/vLZ08v79/y17+fO38//zr9ef5kuvlyNv3vb79/TK+uP0+P
f569OHTM3OMPHXPM/w95yTW0Ome6jYnPLolPq2s75viefTfXo/R1z2OWxKHV
vGs1ftI5qlWfLumjRP5P5+G15kI6lyZycqsxMGJOTsS81fHpfJg4f2KsJsZ5
Ygykc286Junc0rMmTOf/VnNnq+tIen6tNQfXqjfWGntr1Q8Vxl6FfFihfu5Z
X/WcU2vl5J5zf8Q6IZ1v0/GvEIcK69eIubfnWrkkRyW+942+jlTIM6PPwRHn
coXaY/RrTtQbibqocp8uiUkiJ89dUyqMpbVyS+L8Pb8jVBi3iZrhFHJvNVdo
41bXkWp7KRX62lw+TVeIf4Vr6NmWRI2Uzudr5b10bknXqxXGZCJWFfbAeXve
ai1RoV2V48PMuZzTc1+u2n5UhVrF3sLyNibuiVRoLzMz8+ju+RzCiPtRc2ub
avfTl/TXKB79/iYzM/MpOL0Wb2k/apT76RXGVQVX+M7CzMzMOVe4bz5KjaEu
6h9bMWdmZt6G089zbsni0ye2PT/LzMzMfZx4/rNCu9aK1SnHh5mZmXmuj9m7
s7/HzMzMzEuceIdnhXYxMzMzcx23eoen5x6ZmZmZ+ZBbvRMp8e5QZmZmZt62
0+9TUnMyMzMz8zFWZzIzMzNzBaszmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmXlE/wU1tmki
       "], {{0, 224}, {224, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{224, 224},
     PlotRange->{{0, 224}, {0, 224}}], "\[Rule]", "1"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1kHq7Vl1xfFCQTIHOwk4AkO6VWQGQZ1ACdoqCRhIyCxspu88HEMEW7Yc
ilVo44G84r3//551Puve1VB2He5/vd/eZ521v//yy//82a9/8MUXX/zXP337
fz/7+n/+/be//fp/f/6j7/7jV19/868//eaH35Z/+fv/vqv/+fc/+fLHf/7D
l7/704+/+r8//uarf/uP///yFz/8768+PP9Y/eHvP1Z/7t9+yr/7KZrv+f2n
9PUpf/uoGb7n370159O/ec98HuXVR3ngc/t9z90lvZG830d95637vXUvt+rT
d/GeGb7nez73G07kT0ueJDP8Vv48yp8nvuFRPknuu9MZcuJ+hb5O/Fu3Mvk9
Gfuo35zOsRP/1mkPJ/Pw9L0IuyB5v9q9vBqLJjP5xG9O7KNbb//E70/v5Vv6
wlt4NRYVzgVPCj4ci5reTt6jzKKN2aXdS7Iei/osKmSyvJeFWcksmtyDQp7L
fY1F8+8r6VV55pqmoKNll3YvyXos6rCo8PaFOWj5ozHh5/5tI7Mlv3MsmmeY
W/tiLOpoCjpadmn3kqxbWCvpk8b5jEXHoqfn05Lncl9j0fz7SnpVnrmmKeho
2aXdS7JuYa2kTxrnMxYdiz4TswnfL3te8OFY1PF2o6ago2WXdi/JuoW1kj5p
nM9Y9DVZ9MQc2vNc7mssmn9fSa/KM9c0BR0tu7R7SdYtrJX0SeN8xqJj0Wdi
NuH7Zc8LPhyLOt5u1BR0tOzS7iVZt7BW0ieN8xmLPjeLvhqzCd8ve74lc8ai
zsw1TUFHyy7tXpJ1C2slfdI4n7Ho87HoLc+057nc11g0/76SXpVnrmkKOlp2
afeSrFtYK+mTxvmMRZ+DRQXPtOe53NdYNP++kl6VZ65pCjpadmn3kqxbWCvp
k8b5jEV7WVTzTHuey32NRc33dSszW7hRy3Dh3Y1FH1u3sFbSJ43zGYuORZ+J
2YTvlz0v+0fYuckcE7zdqCnoaNml3UuybmGtpE8a5zMW9Vn0VnY1Mpvw/bLn
Zf8IOzeZY4K3GzUFHS27tHtJ1i2slfRJ43zGoiaLCtnVyGzC98uel/2jvYuk
V+WZa5qCjpZd2r0k6xbWSvqkcT5jUYdFb72LZ2I24ftlz8v+EXZuMscEbzdq
Cjpadmn3kqxbWCvpk8b5jEX9WY1F7+at0NdYNL/Tk16VZ65pCjpadmn3kqxb
WCvpk8b5jEX9WY1F7+at0NdYNL/Tk16VZ65pCjpadmn3kqxbWCvpk8b5jEUz
+hpPnphDe57LfY1F8zs96VV55pqmoKNll3YvybqFtZI+aZzPWPS58+fVmE34
ftnzsn+EnZvMMcHbjZqCjpZd2r0k6xbWSvqkcT5j0efOn1djNuH7Zc/L/hF2
bjLHBG83ago6WnZp95KsW1gr6ZPG+YxFnzt/Xo3ZhO+XPS/7R9i5yRwTvN2o
Keho2aXdS7JuYa2kTxrnMxZ9m76wXzTPtOe53NdYNP+mkl6VZ65pCjpadmn3
kqxbWCvpk8b5jEXPvXchf16N2YTvlz0v+0fYuckcE7zdqCnoaNml3UuybmGt
pE8a5zMW/X6d5NzGonfzXO5rLJp/U0mvyjPXNAUdLbu0e0nWLayV9EnjfMai
zi4bi97Nc7mvsaj/fpOZ2cKNY1FnFwg5c6JuYa2kTxrnMxb92++FuY1F7+a5
3NdYNP+mkl6VZ65pCjpadmn3kqxbWCvpk8b5vDKLanMbi97Nc7mvsWj+TSW9
Ks9c0xR0tOzS7iVZt7BW0ieN8xmLOnMbi97Nc7mvsWj+TSW9Ks9c0xR0tOzS
7iVZt7BW0ieN8xmLOnMbi97Nc7mvsWj+TSW9Ks9c0xR0tOzS7iVZt7BW0ieN
83lWFtWySOPJE72357nc11g0/6aSXpVnrmkKOlp2afeSrFtYK+mTxvk8E4vK
WaTx5Ine2/Nc7mssmn9TSa/KM9c0BR0tu7R7SdYaY4xF7779W3NoySKNJ0/0
3p7ncl9j0fybSnpVnrmmKeho2aXdS7JuYa2kTxrn08iijVmk8eSJ3tvzXO5r
LGrmw63MbOHGsaizC4ScOVG3sFbSJ43zaWFRLdOE/aJ5pj3P5b7Govk3lfSq
PHNNU9DRsku7l2TdwlpJnzTOR2ZRoa+xaBezCd8/Fr27T4Xc07LimTQFHS27
tHtJ1i2slfRJ43zGos7cxqJ381zuayyaf1NJr8oz1zQFHS27tHtJ1i2slfRJ
43zGos7cxqJ381zuayyaf1NJr8oz1zQFHS27tHtJ1i2slfRJ43zGos7cxqJ3
81zuayyaf1NJr8oz1zQFHS27tHtJ1i2slfRJ43ySLCrvaGFuY9G7eS73NRbN
v6mkV+WZa5qCjpZd2r0k6xbWSvqkcT5yJgt9jUW7mE34ftnnsn+EnSvknjZz
TVPQ0bJLu5dk3cJaSZ80zkfOZKGvsWgXswnfL/tc9o+wc4Xc02auaQo6WnZp
95KsW1gr6ZPG+ciZLPQ1Fu1iNuH7ZZ/L/hF2rpB72sw1TUFHyy7tXpJ1C2sl
fdI4n/e8WSHPW7JI48kTvbfnudzXWDT/ppJelWeuaQo6WnZp95KsW1gr6ZPG
+WgZ25Jpwn7RPKN575n6Govm35Scky3cqOW28O7Goo+tW1gr6ZPG+WgZ25Jp
wn7RPKN575n6Govm35Scky3cqOW28O7Goo+tW1gr6ZPG+WgZ25Jpwn7RPKN5
75n6Govm35Scky3cqOW28O7Goo+tW1gr6ZPG+Xx4fjqf5R09Fn0OZhO+X/a5
7B9h5yazS/B2o6ago2WXdi/JuoW1kj5pn89YdCwqnGv7WuhrLJp/U0mvyjPX
NAUdLbu0e0nWjax12ict87mVz/KOHos+B7MJ3y/7XPaPsHOT2SV4u1FT0NGy
S7uXZC2z1um+GllUyGd5R49Fn4PZhO+XfS7755myTsuKZ9IUdLTs0u4lWWus
NRb9x98IfNWyo4VZjUXv5rnc11g0/6aSXpVnrmkKOlp2afeSrAXWSmbyid+0
vy8hz59pVmPRu3ku9zUWzb+ppFflmWuago6WXdq9JOux6FhUyPNnmtVY9G6e
y32NRfNvKulVeeaapqCjZZd2L8l6LHqXRQW/CXnekkUaT57ovT3P5b7Govk3
lfSqPHNNU9DRsku7l2Q9Fs2zqOY3Ic9bskjjyRO9t+e53NdYNP+mkl6VZ65p
Cjpadmn3kqzHohkWbcwBwTNaFmk8eaL39jyX+xqL5t9U0qvyzDVNQUfLLu1e
kvVY9ByLtueA4BktizSePNF7e57LfY1F828q6VV55pqmoKNll3YvyXosOhYV
8rwlizSePNF7e57LfY1F828q6VV55pqmoKNll3YvyXosOhYV8rwlizSePNF7
e57LfY1F828q6VV55pqmoKNll3YvyXosOhYV8rwlizSePNF7e57LfY1F828q
6VV55pqmoKNll3YvyXos+um/aZnVWHQsKpxr+1roayyaf1NJr8oz1zQFHS27
tHtJ1i18lfRJ+6zGomNR4Vzb10JfY9H8m0p6VZ65pinoaNml3UuybuGrpE/a
ZzUWHYsK59q+Fvoai+bfVNKr8sw1TUFHyy7tXpJ1C1+d9skJdm3PAWEOWhZp
PHmi9/Y8l/sai+bfVNKr8sw1TUFHyy7tXpJ1C1/JuaHNaiw6FhXOtX0t9DUW
zb+ppFflmWuago6WXdq9JOsWvpJzQ5vVWHQsKpxr+1roayyaf1NJr8oz1zQF
HS27tHtJ1i189Z5vS2amMKux6FhUONf2tdDXWDT/ppJelWeuaQo6WnZp95Ks
W/jqdI9j0bGonD+vxmzC98s+l/0j7NxkdgnebtQUdLTs0u4lWbfw1ekex6Jj
UTl/Xo3ZhO+XfS77R9i5yewSvN2oKeho2aXdS7Ju4avTPY5Fx6Jy/rwaswnf
L/tc9o+wc5PZJXi7UVPQ0bJLu5dk3cJXp3sci45F5fx5NWYTvl/2uewfYecm
s0vwdqOmoKNll3YvybqFr073OBYdi8r582rMJny/7HPZP8LOTWaX4O1GTUFH
yy7tXpK1zFen8/nEb1p2hJbnLVmk8eSJ3tvzXO5rLJp/U0mvyjPXNAUdLbu0
e0nWGl8l8zn5PY05IMxByyKNJ0/03p7ncl9j0fybSnpVnrmmKeho2aXdS7IW
+OpWPp/4TcuO0PK8JYs0njzRe3uey32NRfNvKulVeeaapqCjZZd2L8n6Fl8J
+XziNy07QsvzlizSePJE7+15Lvc1Fs2/qaRX5ZlrmoKOll3avSTrsehjf9Oy
I7Q8b8kijSdP9N6e53JfY9H8m0p6VZ65pinoaNml3UuyPp23yZy5lYeNO0LL
85Ys0njyRO/teS73NRbNv6mkV+WZa5qCjpZd2r0k61t3IeTzid+07Agtz1uy
SOPJE72357nc11j07o4Yizqago6WXdq9JOtH3cWt/XvaM7d2k5ADwhy0LNJ4
8kTv7Xku9zUWzb+ppFflmWuago6WXdq9JOvGDEx65tZuEnJAmIOWRRpPnui9
Pc/lvsai+TeV9Ko8c01T0NGyS7uXZN2YgUnP3NpNQg4Ic9CySOPJE72357nc
11g0/6aSXpVnrmkKOlp2afeSrBszMOmZW7tJyAFhDloWaTx5ovf2PJf7Govm
31TSq/LMNU1BR8su7V6SdWMGJj1zazcJOSDMQcsijSdP9N6e53JfY9H8m0p6
VZ65pinoaNml3Uuy/vDbWlgr6Zlbu0nIAWEOWhZpPHmi9/Y8l/sai+bfVNKr
8sw1TUFHyy7tXm7VLayV9EzjfMaiY1HhXNvXQl9j0fybSnpVnrmmKeho2aXd
y626hbWSnmmcz1h0LCqca/ta6Gssmn9TSa/KM9c0BR0tu7R7uVW3sFbSM43z
GYuORYVzbV8LfY1F828q6VV55pqmoKNll3Yvt+oW1kp6pnE+Y9GxqHCu7Wuh
r7Fo/k0lvSrPXNMUdLTs0u7lVt3CWknPNM5nLDoWFc61fS30NRbNv6mkV+WZ
a5qCjpZd2r3cqltYK+mZxvmMRceiwrm2r4W+xqL5N5X0qjxzTVPQ0bJLu5db
dQtrJT3TOJ+x6FhUONf2tdDXWDT/ppJelWeuaQo6WnZp93KrbmGtpGca5zMW
HYsK59q+Fvoai+bfVNKr8sw1TUFHyy7tXm7VLayV9EzjfMaiY1HhXNvXQl9j
0fybSnpVnrmmKeho2aXdy626hbWSnmmcz1h0LCqca/ta6Gssmn9TSa/KM9c0
BR0tu7R7uVW3sFbSM43zGYuORYVzbV8LfY1F828q6VV55pqmoKNll3Yvt+oW
1kp6pnE+Y9GxqHCu7Wuhr7Fo/k0lvSrPXNMUdLTsSt6LzKUtrJX0TON8xqJj
UeFc29dCX2PR/JtKelWeuaYp6GjZpenfqltYK+mZxvmMRceiwrm2r4W+xqL5
N5X0qjxzTVPQ0bLrhP7pzDlRt7BW0jON8xmLjkWFc21fC32NRfNvKulVeeaa
pqCjZZf8dpJ1C2slPdM4n7HoWFQ41/a10NdY9O4+HYs6moKOll3v+c2tzDlR
t7BW0jON8xmLjkWFc21fC32NRfNvKulVeeaapqCjZVdL76frFtZKeqZxPmPR
sahwru1roa+xaP5NJb0qz1zTFHS07Grp/XTdwlpJzzTOZyw6FhXOtX0t9DUW
zb+ppFflmWuago6WXR/7jXBHybqFtZKeaZzPWHQsKpxr+1roayyaf1NJr8oz
1zQFHS27NC/dqltYK+mZxvmMRceiwrmWsUJfY1F/pydzsoUbtdwW3p3m27Ho
3f17+h4b5zMWHYsK51rGCn2NRf2dnszJFm7Uclt4d4+a2603MhY958NbeajN
Zyw6FhXOtX0t9DUWzb+ppFflmWuags6t7BLeyFj0nA8FPwjzGYuORYVzbV8L
fY1F828q6VV55pqmoJPMrlvvaCyaz5lbeajNZyw6FhXOtX0t9DUWzb+ppFfl
mWuago7gh7HoXcYQ8vnEb4T5jEXHosK5tq+Fvsai+TelscetmWuago7gh7Ho
XcYQ8vnEb4T5jEXHosK5tq+Fvsai+TelscetmWuags6j/HAr24XMOVG3sFZy
3zXOZyw6FhXOtX0t9DUWzb+ppFflmWuago7AGGPRu4zR4pPG+YxFx6LCubav
hb7Govk3lfSqPHNNU9ARGGMsepcxWnzSOJ+x6FhUONf2tdDXWDT/ppJelWeu
aQo6AmOMRe8yRotPGuczFh2LCufavhb6Govm31TSq/LMNU1BR2CMsehdxmjx
SeN8xqJjUeFc29dCX2PR/JtKelWeuaYp6Hx4ruWYdkfJuoW1kj5pnM9YdCwq
nGv7WuhrLJp/U0mvyjPXNDUdLce0O0rWLayV9EnjfMaiY1HhXNvXQl9j0fyb
SnpVnrmmeUunJce0O0rWLayV9EnjfMaiY1HhXNvXQl9j0fybSnpVnrmm2ZjP
2l4QMudE3cJaSZ80zmcsOhYVzrV9LfQ1Fr3LD2NRR/O0jvDehXc0Fs3nzK08
1OYzFh2LCufavhb6Govm31TSq/LMNc1neoNj0cfWLayV9EnjfMaiY1HhXNvX
Ql9j0fybSnpVnrmm+UxvcCz62LqFtZI+aZzPWHQsKpxr+1roayyaf1NJr8oz
1zSf6Q2ORR9bt7BW0ieN8xmLjkWFc21fC32NRfNvKulVeeaa5ufqaLtAyHYh
c07ULayV9EnjfMaiY1HhXNvXQl9j0fybSnpVnrmmeXr/Cu9deEdj0XzO3MpD
bT5jUTMztb+VmU34ftnnsn+EPZvMLsHbjZof+33LLhCyXcicE3ULayV90jif
sehYVDjX9rXQ11g0/6aSXpVnrmneuuuWHJPv6HTdwlpJnzTOZyw6FhXOtX0t
9DUWzb+ppFflmWuat+66JcfkOzpdt7BW0ieN8xmLjkWFc21fC32NRfNvKulV
eeaa5q27bskx+Y5O1y2slfRJ43zGomNR4Vzb10JfY9H8m0p6VZ75Lc3TGS68
wbHoY+sW1kr6pHE+Y9GxqHCu7Wuhr7Fo/k0lvSrPXMulW3fdkmPCvd+qW1gr
6ZPG+YxFx6LCubavhb7Govk3lfSqPPPTmrcyXHiDY9HH1i2slfRJ43zGomNR
4Vzb10JfY9H8m0p6VZ65xkKajpZjwr3fqltYK+mTxvmMRceiwrm2r4W+xqIm
59zKyUYW1TJceINj0cfWLayV9EnjfMaiY1HhXNvXQl9j0fybSnpVnnl7xmrf
KWS7kDkn6hbWSvqkcT5j0bGocK7ta6GvsWj+TSW9Ks+8PWO17xSyXcicE3UL
ayV90jifsehYVDjX9rXQ11g0/6aSXpVn/inn8j7SdoGQ7ULmnKhbWCvpk8b5
jEXHosK5tq+Fvsai+TeV9Ko88xbmadkFr3YvybqFtZI+aZzPWHQsKpxr+1ro
ayyaf1NJr8oz//Bc84mgo+WYdi/JuoW1kj5pnM9YdCwqnGv7WuhrLJp/U0mv
ts9c3kfaLhBmLmTOibqFtZI+aZzPWHQsKpxr+1roayyaf1NJr2ozT97pWHQs
+qi6hbWSPmmcz1h0LCqca/ta6Gssmn9TSa8KM791p2PRseij6hbWSvqkcT5j
0bGocK7ta6GvsWj+TSW9Ksz81p2ORceij6pbWCvpk8b5jEXHosK5tq+Fvsai
+TeV9Gpy5tqdjkXHoo+qW1gr6ZPG+YxFx6LCubCvtb7Govk3lfSq8N5v3elY
9Pnu+lbdwlpJnzTOZyw6FhXOb81T7mssmn9TSa+e6KvlTseiY9FH1S2slfRJ
43zGomNR4fzWPOW+xqL5N5X0qtb7WLQ3x7R7SdYtrJX0SeN8xqJjUeH81jzl
vsai+TeV9Op7+mrhRi3DhTc4Fn1s3cJaSZ80zmcsOhYVzm/NU+5rLJp/U0mv
atnVoinoaDmm3UuybmGtpE8a5zMWHYsK57fmKfc1Fs2/qaRXtexq0RR0tBzT
7iVZt7BW0ieN8xmLjkWF81vzlPsai+bfVNKrH/u9Nn9NU9DRcky7l2TdwlpJ
nzTOZyw6FhXOb81T7mssmn9TSa8KPm/UFHS0+9XuJVm3sFbSJ43zGYuORYVz
bUcLfY1F828q6VXB542ago52v9q9JOsW1kr6pHE+Y9GxqHCu7Wihr7Fo/k0l
vSr4vFFT0NHuV7uXZN3CWkmfNM5nLDoWFc61HS30NRbNv6kTdyrkxjNpCjpa
jmn3kqxbWCvpk8b5jEXHosK5tqOFvsai+Td1a6fI89c0BR0tx7R7SdYtrJX0
SeN8xqJjUeFc29FCX2PR/Ju6tVPk+Wuago6WY9q9JOsW1kr6pHE+Y9GxqHCu
7Wihr7Fo/k3d2iny/DVNQUfLMe1eknULayV90jifsehYVDjXdrTQ11g0/6Zu
7RR5/pqmoKPlmHYvybqFtZI+aZzPWHQsKpxrO1roayyaf1Mf+/1p38rz1zQF
HS3HtHtJ1i2slfRJ43zGomNR4Vzb0UJfY9H8m0rmmODzRk1BR8sx7V6SdQtr
JX3SOJ+x6FhUONd2tNDXWDT/ppI5Jvi8UVPQ0XJMu5dk3cJaSZ80zmcsOhYV
zrUdLfQ1Fs2/qWSOCT5v1BR0tBzT7iVZt7BW0ieN8xmLjkWFc21HC32NRc95
QMgxweeNmoKOlmPavSTrFtZK+qRxPmPRsahwru1ooa+xqJPPY1FHU9DRcky7
l2TdwlpJnzTOZyw6FhXOtR0t9DUWff9vbuWelhvPpCnoaDmm3UuybmGtpE8a
5zMWHYsK59qOFvoai57LHyHHBJ83ago6Wo5p95KsW1gr6ZPG+YxFx6LCubaj
hb7GoufyR8gxweeNmoKOlmPavSTrFtZK+qRxPmPRsahwru1ooa+x6Pf/Jrkv
xqKOpqCj5Zh2L8m6hbWSPmmcz1h0LCqcazta6Gssevd9JX0rz1/TFHS0HNPu
JVm3sFbSJ43zGYuORYVzbUcLfY1F776vpG/l+Wuago6WY9q9JOsW1kr6pHE+
Y9GxqHCu7Wihr1dm0Vs7N5ljgs8bNQUdLce0e0nWLayV9EnjfMaiY1HhXNvR
Ql+vxqLCzk3mmODzRk1BR8sx7V6SdQtrJX3SOJ+xqLlPtb+VmU34ftnnsn9u
5bCQY4LPGzUFHS3HtHtJ1i2slfRJ43zGouY+1f5WZjbh+2Wfa/5JZuxY9Pk0
BR0tx7R7SdYtrJX0SeN8xqJjUeFc29FCX8/EotpvhBwTfN6oKehoOabdS7Ju
Ya2kTxrnMxYdiwrn2o4W+mpnUZlXhRwTfN6oKehoOabdS7JuYa2kTxrnMxYd
iwrn2o4W+mpkUUFfyD0tN55JU9DRcky7l2TdwlpJnzTOZyw6FhXOtR0t9NXC
okmGubUvxqKOpqCj5Zh2L8m6hbWSPmmcz1h0LCqcazta6Etm0VsMc2tfjEUd
TUFHyzHtXpJ1C2slfdI4n7HoWFQ413a00NdYdCwqzFzTFHS0HNPuJVm3sFbS
J43zGYuORYVzbUcLfQksqjHMrX0xFnU0BR0tx7R7SdYtrJX0SeN8xqJjUeFc
29FCX+1ZNxZ1cuOZNAUdLce0e0nWLayl5bM2n7HoWFQ413a00Fcy6wQvCTs3
mWOCzxs1BR0tx7R7SdYtrJX0SeN8xqJjUeFc29FCX8m9IHhJ2LnJHBN83qgp
6Gg5pt1Lsm5hraRPGuczFh2LCufajhb6GouORYWZa5qCjpZj2r0k6xbWSvqk
cT5j0bGocK7taKGvsehYVJi5pinoaDmm3UuybmGtpE8a5zMWHYsK59qOFvoa
i45FhZlrmoKOlmPavSTrFtZK+qRxPmPRsahwru1ooa+x6FhUmLmmKehoOabd
S7JuYa2kTxrnMxYdiwrn2o4W+vqU89O5pzHMrX0xFnU0BR0tx7R7SdYtrJX0
SeN8xqJjUeFc29FCX6dzRvOSsHOTOSb4vFFT0NFyTLuXZK1l71j07tsX5qDl
j8aTJ3pvz3C5rw/Pb+WexjC39sVY1NEUdLQc0+4lWbewVtInjfMZi45FhXNt
R7f31Z45Y1Fn5pqmoCO/d+FeknULayV90jifsehYVDjXdvStvm7tCMFLws5N
5pjg80ZNQUfLMe1eknULayV90jifsehYVDjXdnQLE45Fx6KN9zgWHYs+qm5h
raRPGuczFh2LCufajm5hwrHoWLTxHseiY9FH1S2slfRJ43zGomNR4Vzb0S1M
OBYdizbe41h0LPqouoW1kj5pnM9YdCwqnGs7uoUJx6Jj0cZ7HIuORR9Vt7BW
0ieN8xmLjkWFc21Hv+dc9rzsJWHnJnNM8HmjpqCj5Zh2L8m6hbWSPmmcz1h0
LCqcazv69C7QdoTgJWHnJu9U8HmjpqCj5Zh2L8m6hbWSPmmcz1h0LCqcazv6
U86TPY5F8+8r6Vt55pqmoKPlmHYvybqFtZI+aZzPWHQsKpxrO/pWFo1F7+7c
ZI4JPm/UFHS0HNPuJVm3sFbSJ43zGYuORYVzbUd/eC70OBbNv6+kb+WZa5qC
jpZj2r0k6xbWSvqkcT5j0bGocP5qO1r4t+T5jEWdmWuago6WY9q9JOsW1kr6
pHE+Y9GxqHAu7Gi5x7Fo/n0lfSvPXNMUdLQc0+4lWbewVtInjfMZi45FhfPG
eY5F8wxza1+MRR1NQacxx4ScOVG3sFbSJ43zGYuORYXz5DwbexyL5t9X0rfy
zDVNQUfIMc0/t+oW1kr6pHE+Y9GxqHAuvE25x7Fo/n0lfSvPXNMUdMaib8uZ
E3ULa2n7TpvPWHQsKpyfmOcz9TgWzb+vpG/lmWuags5Y9G05c6JuYa2kTxrn
MxYdiwrnSe819jgWzb8vzbe3Zq5pCjpj0bflzIm6hbWSPmmcz1h0LCqcJ73X
2ONYNP++NN/emrmmKeiMRd+WMyfqFtZK+qRxPmPRsahw/rnzfIUehdzTGObW
vhiLOpqCzlj0bTlzom5hraRPGuczFh2LCudCngs9avPUGObWvhiLOpqCzlj0
bTlzom5hraRPGuczFh2LCudCngs9avPUGObWvhiLOpqCzlj0bTlzom5hraRP
GuczFh2LCudCngs9avPUGObWvhiLOpqCzlj0bTlzom5hraRPGuczFh2LCudC
ngs9avPUGObWvhiLOpqCzlj0bTlzom5hraRPGuczFh2L3jrX8nws6mTOWNSZ
uaYp6GjZpd1Lsm5hraRPGuczFh2LJs/lPB+LOpkzFnVmrmkKOlp2afeSrFtY
K+mTxvmMRceip89b8nws6mTOWNSZuaYp6GjZpd1Lsm5hraRPGuczFh2LavtI
29fCnhqL5t9X0qvyzDVNQUfLLu1eknULayV90jifsehY9FHnfwXhJ0uj
       "], {{0, 
       224}, {224, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{224, 224},
     PlotRange->{{0, 224}, {0, 224}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2jFKA0EUANCgKN7BRltLrWwSrMUm1hYRtAoIsRDBA3gGL5GTCB7BQjyH
CVjYBCIzf/fv7iuUl7DJzvyZP392s8e3D9P7ndFo9Hiw+jedPV0sFrPn6/31
i7vZ/Ox0vrvi5+/f2l/Lq/HH4nt883I0eX07nCzfzyd7J5fjbfz3s5u86fht
vvO/7Sk51zbtrxWfiBiW9LfWWDfZ3+ixqPV+SRwiYhh9TISjcyS6XxHtj16v
moxn9NyrdXx0PmZYfyJqTUmcM6/V0fUxei8RsXdqshZEr8PZ2lxrn5OhrpXk
SMT+sMn5FlGDhuYm92xNfk+tfrU1T6LzJbqWNVlHsl1ndWVeRe+3a8Ukw9hl
aEPJ3G5rTNuKf7b218rHturp0MYo4jo0c35ljm2GNmfL32yOqEcR54q4jsh8
nyeD3dfqh2vVvszzp09tK2lzhnuGQxujtmLelfhkqAtd6Uuf8je6HkXXtZLz
1tpb2tvkdJ/umWSIT0mOcJ413NjlHxfmoeVvtuuviPtdbcWk63OjTzYWcWtj
n9bDLjr69yCWLyx/WY4zt5VfTX6W6657niuTL5zH8re7luPMPDRHP5tkzWSW
v8zMzJsc/ZyzmsUsf5mZmbexOsXcXctfZmbuk9Up5u5a/jIzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzNzNv8ApyQAaA==
       "], {{0, 224}, {224, 0}}, {0.,
        1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{224, 224},
     PlotRange->{{0, 224}, {0, 224}}], "\[Rule]", "1"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2DGKHQUAxvGgIOIJrASxtIt91lwhnmAFUwWEWIiHsDGIR7DyNh7Ae9iY
gIVNIOG9ef9Zv1+x4ZdleTs783/zze7n337/7PkHjx49+uHj1/88u//x6cuX
9z9989Gb/3x3/+Krxy8+fM2//v144+e/f3L36y9P7179/eeTn794fPfZp789
+fKPr+/e9vlL/N/XvNbrv8trvsvn3/d4LnnNax3zJcd2rWN+F7/vcR7R4REN
XHJ+jriml5z/I67v0e+dI67vLa/dJefqkq+55Gc8Yi+OuG8c8fpHb80R997q
Wh/dfLXFR98fzrbv1zoPRzzjHb1Nt9zTIzqv9v3o540j7nW3fEa6Vldnfo+c
4Zre8rzd8vte6/nnWt+rui9d61qc4XfGh/JeO4Ore9TZmj/iPXvE71ln/tmP
fg/ecsfd2895bm/Z20Ps8wzHwNdt+JbNPMQ2jn7m/D/dJ8/mh/gsdAbf8u+i
Z/PZnqnO7Id4fZn5PPcK943j7rfO7Tmvl+ty3eadW2Zmfptt8W3O7RmOhzV/
y86dT2ZmfpttMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z83wt/wOE
EMQK
       "], {{0, 224}, {224, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{224, 224},
     PlotRange->{{0, 224}, {0, 224}}], "\[Rule]", "2"}]}], "}"}]], "Output",
 CellChangeTimes->{3.775224837742875*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"2dfb0ab5-53d5-42e7-ad8e-f7c707648908"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"netECA15final", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"netECA15final", ",", "fullTrainingBigC15", ",", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", "5"}], ",", 
    RowBox[{"BatchSize", "\[Rule]", 
     RowBox[{"256", "*", "4"}]}], ",", 
    RowBox[{"TargetDevice", "\[Rule]", "\"\<CPU\>\""}], ",", 
    RowBox[{"TrainingProgressCheckpointing", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Directory\>\"", ",", "dir"}], "}"}]}], ",", 
    RowBox[{"LearningRateMultipliers", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<linear_new\>\"", "\[Rule]", "1"}], ",", 
       RowBox[{"\"\<linear_out\>\"", "\[Rule]", "1"}], ",", 
       RowBox[{"_", "\[Rule]", "0"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQ3aWwJsBE+o2j043UIBB90WC+7XUgzTE5zg5EM638
5Quim3Jd/EA032rxwhtAumONIphueOczY43MG8fcK9wzQfTk2gUiu4G0n8wK
MF3emqgGoiMD8jVBdIg7kxeINmPe7QOiD+iZftsDpHf/y/4OoqfzfSvaC6Tt
bNmLQfSWogSfU0Da6dUTMK04cRnXNSDd+PIjmDZ9u9IdRPfP7PEE0bOqY1e+
BNKP1UvA9CGXCWd4Zd84BrzTPwuir+1wiFgp98bRc11PFIgW2tDFt1rhjaNN
o6QwiGYx7JEE0XbPtyuDaN6/Ljog+p16EpjetG1iC4jO8a9vBdEAgxWXiw==

  "],
 CellLabel->"In[91]:=",ExpressionUUID->"2023a64c-fa87-468f-bb48-03830ca8c72d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Network XVI - Three convolutions, dropout on linear only, BatchNorm\
\>", "Subsection",
 CellChangeTimes->{{3.773294911734397*^9, 3.773294927816469*^9}, 
   3.774171005551174*^9, {3.775458855800305*^9, 
   3.775458862258884*^9}},ExpressionUUID->"07fac47d-c66c-416b-aa51-\
dcac39b78206"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"netECA16", "=", 
  RowBox[{"netNineCC512drop", "[", 
   RowBox[{"128", ",", "128"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.773214654961218*^9, 3.773214666432025*^9}, {
  3.773294967256976*^9, 3.773294976003352*^9}, {3.774171007952446*^9, 
  3.774171018025958*^9}, {3.775458864510372*^9, 3.775458868385582*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"01c3a822-29d8-467d-8860-2609be2200cd"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["15", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{24, 3, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 24, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 3, "$InputSize" -> {128, 128}, 
                    "$OutputSize" -> {126, 126}, "$WeightsInputChannels" -> 
                    3], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "bat1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{24}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 24, 
                    "$SpatialDimensions" -> {126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "ramp1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {24, 126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{24, 24, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 24, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 24, "$InputSize" -> {126, 126}, 
                    "$OutputSize" -> {124, 124}, "$WeightsInputChannels" -> 
                    24], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]]], "bat2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{24}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 24, 
                    "$SpatialDimensions" -> {124, 124}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]]], "ramp2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {24, 124, 124}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{24, 24, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 24, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 24, "$InputSize" -> {124, 124}, 
                    "$OutputSize" -> {122, 122}, "$WeightsInputChannels" -> 
                    24], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 122, 122}, 
                    NeuralNetworks`RealT]]], "bat3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{24}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 24, 
                    "$SpatialDimensions" -> {122, 122}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 122, 122}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 122, 122}, 
                    NeuralNetworks`RealT]]], "ramp3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {24, 122, 122}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 122, 122}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 122, 122}, 
                    NeuralNetworks`RealT]]], "pooling" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {116, 116}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 24, "$InputSize" -> {122, 122}, 
                    "$OutputSize" -> {7, 7}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 122, 122}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 7, 7}, 
                    NeuralNetworks`RealT]]], "flatten" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 7, 7}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1176}, NeuralNetworks`RealT]]], 
                    "linear" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 1176}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {512}, "$OutputSize" -> 512, 
                    "$InputSize" -> 1176, "$InputDimensions" -> {1176}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1176}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "drop2" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.2, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "linear2" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{4, 512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{4}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {4}, "$OutputSize" -> 4, 
                    "$InputSize" -> 512, "$InputDimensions" -> {512}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]], 
                    "softmax" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pooling", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pooling", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "drop2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "drop2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3, 128, 128}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {128, 128}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, "Interleaving" -> False, 
                    "MeanImage" -> None, "VarianceImage" -> None, "$Version" -> 
                    "12.0.11"]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {1, 2, 3, 4}, "InputDepth" -> 1, "Dimensions" -> 
                    4, "$Rank" -> 0, "$Version" -> "12.0.11"]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"128\"", "\"128\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bat1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ramp1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"124\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bat2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"124\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ramp2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"124\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"122\"", "\"122\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bat3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"122\"", "\"122\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bat3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ramp3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"122\"", "\"122\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ramp3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pooling\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"7\"", "\"7\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"flatten\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1176\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"drop2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"softmax\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   ImageSizeCache -> {298., {129.9169921875, 135.0830078125}},
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.773294978718738*^9, 3.773295007956345*^9}, 
   3.773325544103874*^9, 3.7741710218431463`*^9, 3.775221553750214*^9, 
   3.775222096417267*^9, 3.775458871041539*^9, 3.7754589162616587`*^9, 
   3.775458981657744*^9, 3.775459044271233*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"67b6bffa-0329-41d3-ba90-c2b5f77e0e03"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetInformation", "[", 
  RowBox[{"netECA16", ",", "\"\<MXNetNodeGraphPlot\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.773215183930698*^9, 3.77321519391398*^9}, {
  3.773325520783605*^9, 3.773325521638377*^9}, {3.774171029104699*^9, 
  3.7741710292195683`*^9}, {3.775459058222589*^9, 3.77545905832406*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"920f2f3c-ef3c-44b7-ad77-7d4021d7479a"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      GrayLevel[0.8], {
       LineBox[{{-16., 9.797174393178826*^-16}, {-15., 1.0000000000000009`}}], 
       LineBox[{{-16., 1.0000000000000009`}, {-15., 1.0000000000000009`}}], 
       LineBox[{{-16., 2.000000000000001}, {-15., 1.0000000000000009`}}], 
       LineBox[{{-15., 1.0000000000000009`}, {-14., -0.9999999999999991}}], 
       LineBox[{{-15., -2.999999999999999}, {-14., -0.9999999999999991}}], 
       LineBox[{{-15., -1.9999999999999991`}, {-14., -0.9999999999999991}}], 
       LineBox[{{-15., -0.9999999999999991}, {-14., -0.9999999999999991}}], 
       LineBox[{{-15., 9.18485099360515*^-16}, {-14., -0.9999999999999991}}], 
       
       LineBox[{{-14., -0.9999999999999991}, {-13., -0.9999999999999992}}], 
       LineBox[{{-13., -0.9999999999999992}, {-12., 7.347880794884119*^-16}}], 
       LineBox[{{-13., 7.960204194457795*^-16}, {-12., 
        7.347880794884119*^-16}}], 
       LineBox[{{-13., 1.0000000000000009`}, {-12., 7.347880794884119*^-16}}], 
       LineBox[{{-12., 
        7.347880794884119*^-16}, {-11., -1.9999999999999993`}}], 
       LineBox[{{-12., -3.999999999999999}, {-11., -1.9999999999999993`}}], 
       LineBox[{{-12., -2.999999999999999}, {-11., -1.9999999999999993`}}], 
       LineBox[{{-12., -1.9999999999999993`}, {-11., -1.9999999999999993`}}], 
       
       LineBox[{{-12., -0.9999999999999992}, {-11., -1.9999999999999993`}}], 
       LineBox[{{-11., -1.9999999999999993`}, {-10., -1.9999999999999993`}}], 
       
       LineBox[{{-10., -1.9999999999999993`}, {-9., -0.9999999999999994}}], 
       LineBox[{{-10., -0.9999999999999993}, {-9., -0.9999999999999994}}], 
       LineBox[{{-10., 6.123233995736766*^-16}, {-9., -0.9999999999999994}}], 
       
       LineBox[{{-9., -0.9999999999999994}, {-8., -2.9999999999999996`}}], 
       LineBox[{{-9., -4.999999999999999}, {-8., -2.9999999999999996`}}], 
       LineBox[{{-9., -3.9999999999999996`}, {-8., -2.9999999999999996`}}], 
       LineBox[{{-9., -2.9999999999999996`}, {-8., -2.9999999999999996`}}], 
       LineBox[{{-9., -1.9999999999999996`}, {-8., -2.9999999999999996`}}], 
       LineBox[{{-8., -2.9999999999999996`}, {-7., -2.9999999999999996`}}], 
       LineBox[{{-7., -2.9999999999999996`}, {-6., -2.9999999999999996`}}], 
       LineBox[{{-6., -2.9999999999999996`}, {-5., -2.9999999999999996`}}], 
       LineBox[{{-5., -2.9999999999999996`}, {-4., -1.9999999999999998`}}], 
       LineBox[{{-5., -1.9999999999999998`}, {-4., -1.9999999999999998`}}], 
       LineBox[{{-5., -0.9999999999999997}, {-4., -1.9999999999999998`}}], 
       LineBox[{{-4., -1.9999999999999998`}, {-3., -3.}}], 
       LineBox[{{-4., -3.9999999999999996`}, {-3., -3.}}], 
       LineBox[{{-4., -2.9999999999999996`}, {-3., -3.}}], 
       LineBox[{{-3., -3.}, {-2., -3.}}], 
       LineBox[{{-2., -3.}, {-1.0000000000000002`, -3.}}], 
       LineBox[{{-1.0000000000000002`, -3.}, {-1.8369701987210297`*^-16, \
-3.}}]}}, {
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> False]], {-15.4, 
         0.600000000000001}, {-0.25, 0}, 
         Offset[8], {1., 0.9999999999999999}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "3", "128", "128"}, 
         "RowWithSeparators"]], Annotation[#, 
        Row[{"b", 3, 128, 128}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> False]], {-15.4, 
         1.0000000000000009`}, {-0.25, 0}, 
         Offset[8], {1., 0.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "24", "3", "3", "3"}, 
         "RowWithSeparators"]], Annotation[#, 
        Row[{24, 3, 3, 3}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> False]], {-15.4, 
         1.4000000000000008`}, {-0.25, 0}, 
         Offset[8], {1., -1.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "24"}, "RowWithSeparators"]],
        Annotation[#, 
        Row[{24}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-14.417705098312485`, -0.16458980337503032`}, {-0.25, 0}, 
         Offset[8], {1., -2.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "24", "126", "126"},
          "RowWithSeparators"]], Annotation[#, 
        Row[{"b", 24, 126, 126}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-14.417705098312485`, -1.8354101966249678`}, {-0.25, 0}, 
         
         Offset[8], {1., 2.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "24"}, "RowWithSeparators"]],
        Annotation[#, 
        Row[{24}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-14.4, -1.399999999999999}, {-0.25, 0}, 
         Offset[8], {1., 1.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "24"}, "RowWithSeparators"]],
        Annotation[#, 
        Row[{24}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-14.4, -0.9999999999999991}, {-0.25, 0}, 
         Offset[8], {1., 0.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "24"}, "RowWithSeparators"]],
        Annotation[#, 
        Row[{24}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-14.4, -0.5999999999999991}, {-0.25, 0}, 
         Offset[8], {1., -1.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "24"}, "RowWithSeparators"]],
        Annotation[#, 
        Row[{24}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-13.4, -0.9999999999999992}, {-0.25, 0}, 
         Offset[8], {1., -1.1102230246251565`*^-16}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "24", "126", "126"},
          "RowWithSeparators"]], Annotation[#, 
        Row[{"b", 24, 126, 126}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-12.399999999999999`, -0.39999999999999925`}, {-0.25, 0}, 
         Offset[8], {1., 1.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "24", "126", "126"},
          "RowWithSeparators"]], Annotation[#, 
        Row[{"b", 24, 126, 126}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> False]], {-12.399999999999999`, 
         7.59281015471359*^-16}, {-0.25, 0}, 
         Offset[8], {1., -6.123233995736767*^-17}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "24", "24", "3", "3"}, 
         "RowWithSeparators"]], Annotation[#, 
        Row[{24, 24, 3, 3}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> False]], {-12.399999999999999`, 
         0.4000000000000008}, {-0.25, 0}, 
         Offset[8], {1., -1.0000000000000002`}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "24"}, "RowWithSeparators"]],
        Annotation[#, 
        Row[{24}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-11.417705098312485`, -1.1645898033750306`}, {-0.25, 0}, 
         
         Offset[8], {1., -2.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "24", 
          RowBox[{"4", " ", "\"b\""}], 
          RowBox[{"4", " ", "\"b\""}]}, "RowWithSeparators"]], Annotation[#, 
        Row[{"b", 24, 4 "b", 4 "b"}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-11.417705098312485`, -2.835410196624968}, {-0.25, 0}, 
         Offset[8], {1., 1.9999999999999998`}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "24"}, "RowWithSeparators"]],
        Annotation[#, 
        Row[{24}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-11.4, -2.3999999999999995`}, {-0.25, 0}, 
         Offset[8], {1., 0.9999999999999998}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "24"}, "RowWithSeparators"]],
        Annotation[#, 
        Row[{24}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-11.4, -1.9999999999999993`}, {-0.25, 0}, 
         Offset[8], {1., 0.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "24"}, "RowWithSeparators"]],
        Annotation[#, 
        Row[{24}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-11.4, -1.5999999999999992`}, {-0.25, 0}, 
         Offset[8], {1., -1.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "24"}, "RowWithSeparators"]],
        Annotation[#, 
        Row[{24}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-10.4, -1.9999999999999993`}, {-0.25, 0}, 
         Offset[8], {1., 0.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "24", 
          RowBox[{"4", " ", "\"b\""}], 
          RowBox[{"4", " ", "\"b\""}]}, "RowWithSeparators"]], Annotation[#, 
        Row[{"b", 24, 4 "b", 4 "b"}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-9.399999999999999, -1.3999999999999995`}, {-0.25, 0}, 
         Offset[8], {1., 0.9999999999999999}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "24", 
          RowBox[{"4", " ", "\"b\""}], 
          RowBox[{"4", " ", "\"b\""}]}, "RowWithSeparators"]], Annotation[#, 
        Row[{"b", 24, 4 "b", 4 "b"}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-9.399999999999999, -0.9999999999999993}, {-0.25, 0}, 
         Offset[8], {1., -1.1102230246251565`*^-16}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "24", "24", "3", "3"}, 
         "RowWithSeparators"]], Annotation[#, 
        Row[{24, 24, 3, 3}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-9.399999999999999, -0.5999999999999994}, {-0.25, 0}, 
         Offset[8], {1., -1.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "24"}, "RowWithSeparators"]],
        Annotation[#, 
        Row[{24}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-8.417705098312485, -2.164589803375031}, {-0.25, 0}, 
         Offset[8], {1., -2.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "24", "122", "122"},
          "RowWithSeparators"]], Annotation[#, 
        Row[{"b", 24, 122, 122}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-8.417705098312485, -3.8354101966249683`}, {-0.25, 0}, 
         Offset[8], {1., 1.9999999999999996`}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "24"}, "RowWithSeparators"]],
        Annotation[#, 
        Row[{24}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-8.4, -3.3999999999999995`}, {-0.25, 0}, 
         Offset[8], {1., 1.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "24"}, "RowWithSeparators"]],
        Annotation[#, 
        Row[{24}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-8.4, -2.9999999999999996`}, {-0.25, 0}, 
         Offset[8], {1., 0.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "24"}, "RowWithSeparators"]],
        Annotation[#, 
        Row[{24}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-8.4, -2.5999999999999996`}, {-0.25, 0}, 
         Offset[8], {1., -1.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "24"}, "RowWithSeparators"]],
        Annotation[#, 
        Row[{24}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-7.4, -2.9999999999999996`}, {-0.25, 0}, 
         Offset[8], {1., 0.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "24", "122", "122"},
          "RowWithSeparators"]], Annotation[#, 
        Row[{"b", 24, 122, 122}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-6.4, -2.9999999999999996`}, {-0.25, 0}, 
         Offset[8], {1., 0.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "24", "122", "122"},
          "RowWithSeparators"]], Annotation[#, 
        Row[{"b", 24, 122, 122}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-5.4, -2.9999999999999996`}, {-0.25, 0}, 
         Offset[8], {1., 0.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "24", "7", "7"}, 
         "RowWithSeparators"]], Annotation[#, 
        Row[{"b", 24, 7, 7}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-4.4, -2.3999999999999995`}, {-0.25, 0}, 
         Offset[8], {1., 0.9999999999999998}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "1176"}, 
         "RowWithSeparators"]], Annotation[#, 
        Row[{"b", 1176}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-4.4, -1.9999999999999996`}, {-0.25, 0}, 
         Offset[8], {1., 0.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "512", "1176"}, 
         "RowWithSeparators"]], Annotation[#, 
        Row[{512, 1176}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-4.4, -1.5999999999999996`}, {-0.25, 0}, 
         Offset[8], {1., -1.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "512"}, 
         "RowWithSeparators"]], Annotation[#, 
        Row[{512}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-3.4, -2.5999999999999996`}, {-0.25, 0}, 
         Offset[8], {1., -1.0000000000000002`}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "512"}, 
         "RowWithSeparators"]], Annotation[#, 
        Row[{"b", 512}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-3.4, -3.3999999999999995`}, {-0.25, 0}, 
         Offset[8], {1., 0.9999999999999996}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "4", "512"}, 
         "RowWithSeparators"]], Annotation[#, 
        Row[{4, 512}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> False]], {-3.4, -3.}, {-0.25, 0}, 
         Offset[8], {1., -4.440892098500626*^-16}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "4"}, "RowWithSeparators"]], 
       Annotation[#, 
        Row[{4}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-2.4000000000000004`, -3.}, {-0.25, 0}, 
         Offset[8], {1., 0.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "4"}, 
         "RowWithSeparators"]], Annotation[#, 
        Row[{"b", 4}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-1.4000000000000001`, -3.}, {-0.25, 0}, 
         Offset[8], {0.9999999999999998, 0.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "4"}, 
         "RowWithSeparators"]], Annotation[#, 
        Row[{"b", 4}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-0.40000000000000024`, -3.}, {-0.25, 0}, 
         Offset[8], {1., 0.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "4"}, 
         "RowWithSeparators"]], Annotation[#, 
        Row[{"b", 4}, "\[Times]"], "Tooltip"]& ]}, {
      GrayLevel[0], {
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-16., 9.797174393178826*^-16}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "0"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Inputs.Input\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 0}, {
            Style["name", Bold], ".Inputs.Input"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-16., 1.0000000000000009`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "1"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.conv1.Arrays.Weights\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 1}, {
            Style["name", Bold], ".Nodes.conv1.Arrays.Weights"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-16., 2.000000000000001}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "2"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.conv1.Arrays.Biases\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 2}, {
            Style["name", Bold], ".Nodes.conv1.Arrays.Biases"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.5, 0.5, 0.5], 
          PointBox[{-15., 1.0000000000000009`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "3"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.conv1\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], 
             "\"Convolution\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             TagBox[
              GridBox[{{
                 StyleBox["\"cudnn_off\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"0\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"dilate\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(1, 1)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"kernel\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(3, 3)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"layout\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"None\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"no_bias\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"False\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"num_filter\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"24\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"num_group\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"1\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"pad\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(0, 0)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"stride\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(1, 1)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               AutoDelete -> False, 
               GridBoxDividers -> {
                "Columns" -> {False, {True}, False}, 
                 "Rows" -> {False, {True}, False}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               FrameStyle -> GrayLevel[0.85]], "Grid"]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"2", ",", "0", ",", "0"}], "}"}]}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 3}, {
            Style["name", Bold], ".Nodes.conv1"}, {
            Style["op", Bold], "Convolution"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Grid[{{
               Style["cudnn_off", Bold], 
               Style["0", ShowStringCharacters -> True]}, {
               Style["dilate", Bold], 
               Style["(1, 1)", ShowStringCharacters -> True]}, {
               Style["kernel", Bold], 
               Style["(3, 3)", ShowStringCharacters -> True]}, {
               Style["layout", Bold], 
               Style["None", ShowStringCharacters -> True]}, {
               Style["no_bias", Bold], 
               Style["False", ShowStringCharacters -> True]}, {
               Style["num_filter", Bold], 
               Style["24", ShowStringCharacters -> True]}, {
               Style["num_group", Bold], 
               Style["1", ShowStringCharacters -> True]}, {
               Style["pad", Bold], 
               Style["(0, 0)", ShowStringCharacters -> True]}, {
               Style["stride", Bold], 
               Style["(1, 1)", ShowStringCharacters -> True]}}, Alignment -> 
             Left, Spacings -> {1.1, 0.5}, Dividers -> Center, FrameStyle -> 
             GrayLevel[0.85]]}, {
            Style["inputs", Bold], {{0, 0, 0}, {1, 0, 0}, {2, 0, 0}}}}, 
          Alignment -> Left, BaseStyle -> {FontFamily -> "Source Code Pro"}, 
          Dividers -> All, FrameStyle -> GrayLevel[0.85], 
          Alignment -> {Left, Baseline}, Spacings -> {1.1, 0.5}, 
          ItemSize -> {Automatic, 1.4}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-15., -2.999999999999999}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "4"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.bat1.Arrays.Scaling\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 4}, {
            Style["name", Bold], ".Nodes.bat1.Arrays.Scaling"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-15., -1.9999999999999991`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "5"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.bat1.Arrays.Biases\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 5}, {
            Style["name", Bold], ".Nodes.bat1.Arrays.Biases"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-15., -0.9999999999999991}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "6"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.bat1.Arrays.MovingMean\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 6}, {
            Style["name", Bold], ".Nodes.bat1.Arrays.MovingMean"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-15., 9.18485099360515*^-16}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "7"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.bat1.Arrays.MovingVariance\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 7}, {
            Style["name", Bold], ".Nodes.bat1.Arrays.MovingVariance"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.11, 1, 0.75], 
          PointBox[{-14., -0.9999999999999991}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "8"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.bat1\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], 
             "\"BatchNorm\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             TagBox[
              GridBox[{{
                 StyleBox["\"axis\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"1\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"cudnn_off\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"0\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"eps\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"0.001\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"fix_gamma\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"false\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"momentum\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"0.9\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox[
                 "\"use_global_stats\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"false\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               AutoDelete -> False, 
               GridBoxDividers -> {
                "Columns" -> {False, {True}, False}, 
                 "Rows" -> {False, {True}, False}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               FrameStyle -> GrayLevel[0.85]], "Grid"]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"3", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"4", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"5", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"6", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"7", ",", "0", ",", "0"}], "}"}]}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 8}, {
            Style["name", Bold], ".Nodes.bat1"}, {
            Style["op", Bold], "BatchNorm"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Grid[{{
               Style["axis", Bold], 
               Style["1", ShowStringCharacters -> True]}, {
               Style["cudnn_off", Bold], 
               Style["0", ShowStringCharacters -> True]}, {
               Style["eps", Bold], 
               Style["0.001", ShowStringCharacters -> True]}, {
               Style["fix_gamma", Bold], 
               Style["false", ShowStringCharacters -> True]}, {
               Style["momentum", Bold], 
               Style["0.9", ShowStringCharacters -> True]}, {
               Style["use_global_stats", Bold], 
               Style["false", ShowStringCharacters -> True]}}, Alignment -> 
             Left, Spacings -> {1.1, 0.5}, Dividers -> Center, FrameStyle -> 
             GrayLevel[0.85]]}, {
            Style["inputs", Bold], {{3, 0, 0}, {4, 0, 0}, {5, 0, 0}, {6, 0, 
            0}, {7, 0, 0}}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.08, 1, 0.92], 
          PointBox[{-13., -0.9999999999999992}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "9"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.ramp1$0\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"relu\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"8", ",", "0", ",", "0"}], "}"}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 9}, {
            Style["name", Bold], ".Nodes.ramp1$0"}, {
            Style["op", Bold], "relu"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {{8, 0, 0}}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-13., 7.960204194457795*^-16}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "10"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.conv2.Arrays.Weights\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 10}, {
            Style["name", Bold], ".Nodes.conv2.Arrays.Weights"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-13., 1.0000000000000009`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "11"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.conv2.Arrays.Biases\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 11}, {
            Style["name", Bold], ".Nodes.conv2.Arrays.Biases"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.5, 0.5, 0.5], 
          PointBox[{-12., 7.347880794884119*^-16}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "12"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.conv2\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], 
             "\"Convolution\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             TagBox[
              GridBox[{{
                 StyleBox["\"cudnn_off\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"0\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"dilate\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(1, 1)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"kernel\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(3, 3)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"layout\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"None\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"no_bias\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"False\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"num_filter\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"24\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"num_group\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"1\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"pad\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(0, 0)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"stride\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(1, 1)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               AutoDelete -> False, 
               GridBoxDividers -> {
                "Columns" -> {False, {True}, False}, 
                 "Rows" -> {False, {True}, False}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               FrameStyle -> GrayLevel[0.85]], "Grid"]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"9", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"10", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"11", ",", "0", ",", "0"}], "}"}]}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 12}, {
            Style["name", Bold], ".Nodes.conv2"}, {
            Style["op", Bold], "Convolution"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Grid[{{
               Style["cudnn_off", Bold], 
               Style["0", ShowStringCharacters -> True]}, {
               Style["dilate", Bold], 
               Style["(1, 1)", ShowStringCharacters -> True]}, {
               Style["kernel", Bold], 
               Style["(3, 3)", ShowStringCharacters -> True]}, {
               Style["layout", Bold], 
               Style["None", ShowStringCharacters -> True]}, {
               Style["no_bias", Bold], 
               Style["False", ShowStringCharacters -> True]}, {
               Style["num_filter", Bold], 
               Style["24", ShowStringCharacters -> True]}, {
               Style["num_group", Bold], 
               Style["1", ShowStringCharacters -> True]}, {
               Style["pad", Bold], 
               Style["(0, 0)", ShowStringCharacters -> True]}, {
               Style["stride", Bold], 
               Style["(1, 1)", ShowStringCharacters -> True]}}, Alignment -> 
             Left, Spacings -> {1.1, 0.5}, Dividers -> Center, FrameStyle -> 
             GrayLevel[0.85]]}, {
            Style["inputs", Bold], {{9, 0, 0}, {10, 0, 0}, {11, 0, 0}}}}, 
          Alignment -> Left, BaseStyle -> {FontFamily -> "Source Code Pro"}, 
          Dividers -> All, FrameStyle -> GrayLevel[0.85], 
          Alignment -> {Left, Baseline}, Spacings -> {1.1, 0.5}, 
          ItemSize -> {Automatic, 1.4}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-12., -3.999999999999999}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "13"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.bat2.Arrays.Scaling\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 13}, {
            Style["name", Bold], ".Nodes.bat2.Arrays.Scaling"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-12., -2.999999999999999}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "14"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.bat2.Arrays.Biases\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 14}, {
            Style["name", Bold], ".Nodes.bat2.Arrays.Biases"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-12., -1.9999999999999993`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "15"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.bat2.Arrays.MovingMean\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 15}, {
            Style["name", Bold], ".Nodes.bat2.Arrays.MovingMean"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-12., -0.9999999999999992}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "16"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.bat2.Arrays.MovingVariance\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 16}, {
            Style["name", Bold], ".Nodes.bat2.Arrays.MovingVariance"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.11, 1, 0.75], 
          PointBox[{-11., -1.9999999999999993`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "17"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.bat2\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], 
             "\"BatchNorm\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             TagBox[
              GridBox[{{
                 StyleBox["\"axis\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"1\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"cudnn_off\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"0\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"eps\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"0.001\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"fix_gamma\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"false\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"momentum\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"0.9\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox[
                 "\"use_global_stats\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"false\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               AutoDelete -> False, 
               GridBoxDividers -> {
                "Columns" -> {False, {True}, False}, 
                 "Rows" -> {False, {True}, False}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               FrameStyle -> GrayLevel[0.85]], "Grid"]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"12", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"13", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"14", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"15", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"16", ",", "0", ",", "0"}], "}"}]}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 17}, {
            Style["name", Bold], ".Nodes.bat2"}, {
            Style["op", Bold], "BatchNorm"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Grid[{{
               Style["axis", Bold], 
               Style["1", ShowStringCharacters -> True]}, {
               Style["cudnn_off", Bold], 
               Style["0", ShowStringCharacters -> True]}, {
               Style["eps", Bold], 
               Style["0.001", ShowStringCharacters -> True]}, {
               Style["fix_gamma", Bold], 
               Style["false", ShowStringCharacters -> True]}, {
               Style["momentum", Bold], 
               Style["0.9", ShowStringCharacters -> True]}, {
               Style["use_global_stats", Bold], 
               Style["false", ShowStringCharacters -> True]}}, Alignment -> 
             Left, Spacings -> {1.1, 0.5}, Dividers -> Center, FrameStyle -> 
             GrayLevel[0.85]]}, {
            Style["inputs", Bold], {{12, 0, 0}, {13, 0, 0}, {14, 0, 0}, {15, 
            0, 0}, {16, 0, 0}}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.08, 1, 0.92], 
          PointBox[{-10., -1.9999999999999993`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "18"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.ramp2$0\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"relu\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"17", ",", "0", ",", "0"}], "}"}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 18}, {
            Style["name", Bold], ".Nodes.ramp2$0"}, {
            Style["op", Bold], "relu"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {{17, 0, 0}}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-10., -0.9999999999999993}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "19"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.conv3.Arrays.Weights\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 19}, {
            Style["name", Bold], ".Nodes.conv3.Arrays.Weights"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-10., 6.123233995736766*^-16}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "20"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.conv3.Arrays.Biases\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 20}, {
            Style["name", Bold], ".Nodes.conv3.Arrays.Biases"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.5, 0.5, 0.5], 
          PointBox[{-9., -0.9999999999999994}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "21"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.conv3\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], 
             "\"Convolution\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             TagBox[
              GridBox[{{
                 StyleBox["\"cudnn_off\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"0\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"dilate\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(1, 1)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"kernel\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(3, 3)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"layout\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"None\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"no_bias\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"False\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"num_filter\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"24\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"num_group\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"1\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"pad\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(0, 0)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"stride\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(1, 1)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               AutoDelete -> False, 
               GridBoxDividers -> {
                "Columns" -> {False, {True}, False}, 
                 "Rows" -> {False, {True}, False}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               FrameStyle -> GrayLevel[0.85]], "Grid"]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"18", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"19", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"20", ",", "0", ",", "0"}], "}"}]}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 21}, {
            Style["name", Bold], ".Nodes.conv3"}, {
            Style["op", Bold], "Convolution"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Grid[{{
               Style["cudnn_off", Bold], 
               Style["0", ShowStringCharacters -> True]}, {
               Style["dilate", Bold], 
               Style["(1, 1)", ShowStringCharacters -> True]}, {
               Style["kernel", Bold], 
               Style["(3, 3)", ShowStringCharacters -> True]}, {
               Style["layout", Bold], 
               Style["None", ShowStringCharacters -> True]}, {
               Style["no_bias", Bold], 
               Style["False", ShowStringCharacters -> True]}, {
               Style["num_filter", Bold], 
               Style["24", ShowStringCharacters -> True]}, {
               Style["num_group", Bold], 
               Style["1", ShowStringCharacters -> True]}, {
               Style["pad", Bold], 
               Style["(0, 0)", ShowStringCharacters -> True]}, {
               Style["stride", Bold], 
               Style["(1, 1)", ShowStringCharacters -> True]}}, Alignment -> 
             Left, Spacings -> {1.1, 0.5}, Dividers -> Center, FrameStyle -> 
             GrayLevel[0.85]]}, {
            Style["inputs", Bold], {{18, 0, 0}, {19, 0, 0}, {20, 0, 0}}}}, 
          Alignment -> Left, BaseStyle -> {FontFamily -> "Source Code Pro"}, 
          Dividers -> All, FrameStyle -> GrayLevel[0.85], 
          Alignment -> {Left, Baseline}, Spacings -> {1.1, 0.5}, 
          ItemSize -> {Automatic, 1.4}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-9., -4.999999999999999}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "22"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.bat3.Arrays.Scaling\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 22}, {
            Style["name", Bold], ".Nodes.bat3.Arrays.Scaling"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-9., -3.9999999999999996`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "23"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.bat3.Arrays.Biases\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 23}, {
            Style["name", Bold], ".Nodes.bat3.Arrays.Biases"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-9., -2.9999999999999996`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "24"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.bat3.Arrays.MovingMean\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 24}, {
            Style["name", Bold], ".Nodes.bat3.Arrays.MovingMean"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-9., -1.9999999999999996`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "25"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.bat3.Arrays.MovingVariance\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 25}, {
            Style["name", Bold], ".Nodes.bat3.Arrays.MovingVariance"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.11, 1, 0.75], 
          PointBox[{-8., -2.9999999999999996`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "26"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.bat3\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], 
             "\"BatchNorm\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             TagBox[
              GridBox[{{
                 StyleBox["\"axis\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"1\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"cudnn_off\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"0\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"eps\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"0.001\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"fix_gamma\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"false\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"momentum\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"0.9\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox[
                 "\"use_global_stats\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"false\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               AutoDelete -> False, 
               GridBoxDividers -> {
                "Columns" -> {False, {True}, False}, 
                 "Rows" -> {False, {True}, False}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               FrameStyle -> GrayLevel[0.85]], "Grid"]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"21", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"22", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"23", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"24", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"25", ",", "0", ",", "0"}], "}"}]}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 26}, {
            Style["name", Bold], ".Nodes.bat3"}, {
            Style["op", Bold], "BatchNorm"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Grid[{{
               Style["axis", Bold], 
               Style["1", ShowStringCharacters -> True]}, {
               Style["cudnn_off", Bold], 
               Style["0", ShowStringCharacters -> True]}, {
               Style["eps", Bold], 
               Style["0.001", ShowStringCharacters -> True]}, {
               Style["fix_gamma", Bold], 
               Style["false", ShowStringCharacters -> True]}, {
               Style["momentum", Bold], 
               Style["0.9", ShowStringCharacters -> True]}, {
               Style["use_global_stats", Bold], 
               Style["false", ShowStringCharacters -> True]}}, Alignment -> 
             Left, Spacings -> {1.1, 0.5}, Dividers -> Center, FrameStyle -> 
             GrayLevel[0.85]]}, {
            Style["inputs", Bold], {{21, 0, 0}, {22, 0, 0}, {23, 0, 0}, {24, 
            0, 0}, {25, 0, 0}}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.08, 1, 0.92], 
          PointBox[{-7., -2.9999999999999996`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "27"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.ramp3$0\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"relu\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"26", ",", "0", ",", "0"}], "}"}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 27}, {
            Style["name", Bold], ".Nodes.ramp3$0"}, {
            Style["op", Bold], "relu"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {{26, 0, 0}}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.5, 0.67, 0.6], 
          PointBox[{-6., -2.9999999999999996`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "28"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.pooling\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"Pooling\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             TagBox[
              GridBox[{{
                 StyleBox["\"global_pool\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"False\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"kernel\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(116, 116)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"pad\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(0, 0)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"pool_type\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"max\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox[
                 "\"pooling_convention\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"valid\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"stride\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(1, 1)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               AutoDelete -> False, 
               GridBoxDividers -> {
                "Columns" -> {False, {True}, False}, 
                 "Rows" -> {False, {True}, False}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               FrameStyle -> GrayLevel[0.85]], "Grid"]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"27", ",", "0", ",", "0"}], "}"}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 28}, {
            Style["name", Bold], ".Nodes.pooling"}, {
            Style["op", Bold], "Pooling"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Grid[{{
               Style["global_pool", Bold], 
               Style["False", ShowStringCharacters -> True]}, {
               Style["kernel", Bold], 
               Style["(116, 116)", ShowStringCharacters -> True]}, {
               Style["pad", Bold], 
               Style["(0, 0)", ShowStringCharacters -> True]}, {
               Style["pool_type", Bold], 
               Style["max", ShowStringCharacters -> True]}, {
               Style["pooling_convention", Bold], 
               Style["valid", ShowStringCharacters -> True]}, {
               Style["stride", Bold], 
               Style["(1, 1)", ShowStringCharacters -> True]}}, Alignment -> 
             Left, Spacings -> {1.1, 0.5}, Dividers -> Center, FrameStyle -> 
             GrayLevel[0.85]]}, {
            Style["inputs", Bold], {{27, 0, 0}}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.08, 1, 0.7], 
          PointBox[{-5., -2.9999999999999996`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "29"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.flatten\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"Flatten\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"28", ",", "0", ",", "0"}], "}"}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 29}, {
            Style["name", Bold], ".Nodes.flatten"}, {
            Style["op", Bold], "Flatten"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {{28, 0, 0}}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-5., -1.9999999999999998`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "30"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.linear.Arrays.Weights\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 30}, {
            Style["name", Bold], ".Nodes.linear.Arrays.Weights"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-5., -0.9999999999999997}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "31"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.linear.Arrays.Biases\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 31}, {
            Style["name", Bold], ".Nodes.linear.Arrays.Biases"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          GrayLevel[0], 
          PointBox[{-4., -1.9999999999999998`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "32"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.linear\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], 
             "\"FullyConnected\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             TagBox[
              GridBox[{{
                 StyleBox["\"no_bias\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"False\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"num_hidden\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"512\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               AutoDelete -> False, 
               GridBoxDividers -> {
                "Columns" -> {False, {True}, False}, 
                 "Rows" -> {False, {True}, False}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               FrameStyle -> GrayLevel[0.85]], "Grid"]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"29", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"30", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"31", ",", "0", ",", "0"}], "}"}]}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 32}, {
            Style["name", Bold], ".Nodes.linear"}, {
            Style["op", Bold], "FullyConnected"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Grid[{{
               Style["no_bias", Bold], 
               Style["False", ShowStringCharacters -> True]}, {
               Style["num_hidden", Bold], 
               Style["512", ShowStringCharacters -> True]}}, Alignment -> 
             Left, Spacings -> {1.1, 0.5}, Dividers -> Center, FrameStyle -> 
             GrayLevel[0.85]]}, {
            Style["inputs", Bold], {{29, 0, 0}, {30, 0, 0}, {31, 0, 0}}}}, 
          Alignment -> Left, BaseStyle -> {FontFamily -> "Source Code Pro"}, 
          Dividers -> All, FrameStyle -> GrayLevel[0.85], 
          Alignment -> {Left, Baseline}, Spacings -> {1.1, 0.5}, 
          ItemSize -> {Automatic, 1.4}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-4., -3.9999999999999996`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "33"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.linear2.Arrays.Weights\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 33}, {
            Style["name", Bold], ".Nodes.linear2.Arrays.Weights"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-4., -2.9999999999999996`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "34"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.linear2.Arrays.Biases\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 34}, {
            Style["name", Bold], ".Nodes.linear2.Arrays.Biases"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          GrayLevel[0], 
          PointBox[{-3., -3.}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "35"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.linear2\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], 
             "\"FullyConnected\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             TagBox[
              GridBox[{{
                 StyleBox["\"no_bias\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"False\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"num_hidden\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"4\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               AutoDelete -> False, 
               GridBoxDividers -> {
                "Columns" -> {False, {True}, False}, 
                 "Rows" -> {False, {True}, False}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               FrameStyle -> GrayLevel[0.85]], "Grid"]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"32", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"33", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"34", ",", "0", ",", "0"}], "}"}]}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 35}, {
            Style["name", Bold], ".Nodes.linear2"}, {
            Style["op", Bold], "FullyConnected"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Grid[{{
               Style["no_bias", Bold], 
               Style["False", ShowStringCharacters -> True]}, {
               Style["num_hidden", Bold], 
               Style["4", ShowStringCharacters -> True]}}, Alignment -> Left, 
             Spacings -> {1.1, 0.5}, Dividers -> Center, FrameStyle -> 
             GrayLevel[0.85]]}, {
            Style["inputs", Bold], {{32, 0, 0}, {33, 0, 0}, {34, 0, 0}}}}, 
          Alignment -> Left, BaseStyle -> {FontFamily -> "Source Code Pro"}, 
          Dividers -> All, FrameStyle -> GrayLevel[0.85], 
          Alignment -> {Left, Baseline}, Spacings -> {1.1, 0.5}, 
          ItemSize -> {Automatic, 1.4}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.06, 1, 0.69], 
          PointBox[{-2., -3.}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "36"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.softmax$0\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"softmax\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             TagBox[
              GridBox[{{
                 StyleBox["\"axis\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"1\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               AutoDelete -> False, 
               GridBoxDividers -> {
                "Columns" -> {False, {True}, False}, 
                 "Rows" -> {False, {True}, False}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               FrameStyle -> GrayLevel[0.85]], "Grid"]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"35", ",", "0", ",", "0"}], "}"}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 36}, {
            Style["name", Bold], ".Nodes.softmax$0"}, {
            Style["op", Bold], "softmax"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Grid[{{
               Style["axis", Bold], 
               Style["1", ShowStringCharacters -> True]}}, Alignment -> Left, 
             Spacings -> {1.1, 0.5}, Dividers -> Center, FrameStyle -> 
             GrayLevel[0.85]]}, {
            Style["inputs", Bold], {{35, 0, 0}}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.11, 1, 0.75], 
          PointBox[{-1.0000000000000002`, -3.}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "37"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Outputs.Output\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"_copy\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"36", ",", "0", ",", "0"}], "}"}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 37}, {
            Style["name", Bold], ".Outputs.Output"}, {
            Style["op", Bold], "_copy"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {{36, 0, 0}}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-1.8369701987210297`*^-16, -3.}]}, "Null"], 
        Annotation[#, Null, "Tooltip"]& ]}}, 
     StyleBox[{{{
         InsetBox[
          FormBox["0", TraditionalForm], 
          Offset[{0, 5}, {-16., 9.797174393178826*^-16}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 5}, {-16., 1.0000000000000009`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, 5}, {-16., 2.000000000000001}], {0., -0.17}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["3", TraditionalForm], 
          Offset[{0, 6}, {-15., 1.0000000000000009`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          Offset[{0, 5}, {-15., -2.999999999999999}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["5", TraditionalForm], 
          Offset[{0, 5}, {-15., -1.9999999999999991`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          Offset[{0, 5}, {-15., -0.9999999999999991}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["7", TraditionalForm], 
          Offset[{0, 5}, {-15., 9.18485099360515*^-16}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["8", TraditionalForm], 
          Offset[{0, 6}, {-14., -0.9999999999999991}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["9", TraditionalForm], 
          Offset[{0, 6}, {-13., -0.9999999999999992}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["10", TraditionalForm], 
          Offset[{0, 5}, {-13., 7.960204194457795*^-16}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["11", TraditionalForm], 
          Offset[{0, 5}, {-13., 1.0000000000000009`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["12", TraditionalForm], 
          Offset[{0, 6}, {-12., 7.347880794884119*^-16}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["13", TraditionalForm], 
          Offset[{0, 5}, {-12., -3.999999999999999}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["14", TraditionalForm], 
          Offset[{0, 5}, {-12., -2.999999999999999}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["15", TraditionalForm], 
          Offset[{0, 5}, {-12., -1.9999999999999993`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["16", TraditionalForm], 
          Offset[{0, 5}, {-12., -0.9999999999999992}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["17", TraditionalForm], 
          Offset[{0, 6}, {-11., -1.9999999999999993`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["18", TraditionalForm], 
          Offset[{0, 6}, {-10., -1.9999999999999993`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["19", TraditionalForm], 
          Offset[{0, 5}, {-10., -0.9999999999999993}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["20", TraditionalForm], 
          Offset[{0, 5}, {-10., 6.123233995736766*^-16}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["21", TraditionalForm], 
          Offset[{0, 6}, {-9., -0.9999999999999994}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["22", TraditionalForm], 
          Offset[{0, 5}, {-9., -4.999999999999999}], {0., -0.17}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["23", TraditionalForm], 
          Offset[{0, 5}, {-9., -3.9999999999999996`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["24", TraditionalForm], 
          Offset[{0, 5}, {-9., -2.9999999999999996`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["25", TraditionalForm], 
          Offset[{0, 5}, {-9., -1.9999999999999996`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["26", TraditionalForm], 
          Offset[{0, 6}, {-8., -2.9999999999999996`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["27", TraditionalForm], 
          Offset[{0, 6}, {-7., -2.9999999999999996`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["28", TraditionalForm], 
          Offset[{0, 6}, {-6., -2.9999999999999996`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["29", TraditionalForm], 
          Offset[{0, 6}, {-5., -2.9999999999999996`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["30", TraditionalForm], 
          Offset[{0, 5}, {-5., -1.9999999999999998`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["31", TraditionalForm], 
          Offset[{0, 5}, {-5., -0.9999999999999997}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["32", TraditionalForm], 
          Offset[{0, 6}, {-4., -1.9999999999999998`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["33", TraditionalForm], 
          Offset[{0, 5}, {-4., -3.9999999999999996`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["34", TraditionalForm], 
          Offset[{0, 5}, {-4., -2.9999999999999996`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["35", TraditionalForm], 
          Offset[{0, 6}, {-3., -3.}], {0., -0.17}, Automatic, {1, 0}], 
         InsetBox[
          FormBox["36", TraditionalForm], 
          Offset[{0, 6}, {-2., -3.}], {0., -0.17}, Automatic, {1, 0}], 
         InsetBox[
          FormBox["37", TraditionalForm], 
          Offset[{0, 6}, {-1.0000000000000002`, -3.}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, 5}, {-1.8369701987210297`*^-16, -3.}], {0., -0.17}, 
          Automatic, {1, 0}]}, {
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-16., 9.797174393178826*^-16}], {0, 1.}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-16., 1.0000000000000009`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-16., 2.000000000000001}], {0, 1.}, Automatic, {1, 
          0}], 
         InsetBox[
          FormBox["\"C\"", TraditionalForm], 
          Offset[{0, -6}, {-15., 1.0000000000000009`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-15., -2.999999999999999}], {0, 1.}, Automatic, {1,
           0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-15., -1.9999999999999991`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-15., -0.9999999999999991}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-15., 9.18485099360515*^-16}], {0, 1.}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["\"BN\"", TraditionalForm], 
          Offset[{0, -6}, {-14., -0.9999999999999991}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"r\"", TraditionalForm], 
          Offset[{0, -6}, {-13., -0.9999999999999992}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-13., 7.960204194457795*^-16}], {0, 1.}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-13., 1.0000000000000009`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"C\"", TraditionalForm], 
          Offset[{0, -6}, {-12., 7.347880794884119*^-16}], {0, 1.}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-12., -3.999999999999999}], {0, 1.}, Automatic, {1,
           0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-12., -2.999999999999999}], {0, 1.}, Automatic, {1,
           0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-12., -1.9999999999999993`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-12., -0.9999999999999992}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"BN\"", TraditionalForm], 
          Offset[{0, -6}, {-11., -1.9999999999999993`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"r\"", TraditionalForm], 
          Offset[{0, -6}, {-10., -1.9999999999999993`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-10., -0.9999999999999993}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-10., 6.123233995736766*^-16}], {0, 1.}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["\"C\"", TraditionalForm], 
          Offset[{0, -6}, {-9., -0.9999999999999994}], {0, 1.}, Automatic, {1,
           0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-9., -4.999999999999999}], {0, 1.}, Automatic, {1, 
          0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-9., -3.9999999999999996`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-9., -2.9999999999999996`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-9., -1.9999999999999996`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"BN\"", TraditionalForm], 
          Offset[{0, -6}, {-8., -2.9999999999999996`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"r\"", TraditionalForm], 
          Offset[{0, -6}, {-7., -2.9999999999999996`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"P\"", TraditionalForm], 
          Offset[{0, -6}, {-6., -2.9999999999999996`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"F\"", TraditionalForm], 
          Offset[{0, -6}, {-5., -2.9999999999999996`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-5., -1.9999999999999998`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-5., -0.9999999999999997}], {0, 1.}, Automatic, {1,
           0}], 
         InsetBox[
          FormBox["\"FC\"", TraditionalForm], 
          Offset[{0, -6}, {-4., -1.9999999999999998`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-4., -3.9999999999999996`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-4., -2.9999999999999996`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"FC\"", TraditionalForm], 
          Offset[{0, -6}, {-3., -3.}], {0, 1.}, Automatic, {1, 0}], 
         InsetBox[
          FormBox["\"s\"", TraditionalForm], 
          Offset[{0, -6}, {-2., -3.}], {0, 1.}, Automatic, {1, 0}], 
         InsetBox[
          FormBox["\"c\"", TraditionalForm], 
          Offset[{0, -6}, {-1.0000000000000002`, -3.}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-1.8369701987210297`*^-16, -3.}], {0, 1.}, 
          Automatic, {1, 0}]}}}, FontSize -> 7, StripOnInput -> False]}, 
    ImageSize -> {510., 235.85}, AspectRatio -> Full, PlotRangePadding -> 0, 
    ImagePadding -> {{24.00000000000002, 6}, {15., 10.84999999999999}}, 
    ImageMargins -> 0, 
    BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Tensor\"", "\"Convolution\"", "\"BatchNorm\"", "\"relu\"", 
       "\"Pooling\"", "\"Flatten\"", "\"FullyConnected\"", "\"softmax\"", 
       "\"_copy\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TemplateBox[{
                 GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    AbsolutePointSize[4]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    AbsolutePointSize[4]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                  ImageSize -> {12, 12}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], "\" \"", #}, "RowDefault"], 
               TemplateBox[{
                 GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.11, 1, 0.75], 
                    AbsolutePointSize[6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.11, 1, 0.75], 
                    AbsolutePointSize[6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                  ImageSize -> {12, 12}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], "\" \"", #3}, "RowDefault"], 
               TemplateBox[{
                 GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.5, 0.67, 0.6], 
                    AbsolutePointSize[6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.5, 0.67, 0.6], 
                    AbsolutePointSize[6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                  ImageSize -> {12, 12}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], "\" \"", #5}, "RowDefault"], 
               TemplateBox[{
                 GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    AbsolutePointSize[6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    AbsolutePointSize[6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                  ImageSize -> {12, 12}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], "\" \"", #7}, "RowDefault"], 
               TemplateBox[{
                 GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.11, 1, 0.75], 
                    AbsolutePointSize[6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.11, 1, 0.75], 
                    AbsolutePointSize[6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                  ImageSize -> {12, 12}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], "\" \"", #9}, "RowDefault"]}, {
               TemplateBox[{
                 GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.5, 0.5, 0.5], 
                    AbsolutePointSize[6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.5, 0.5, 0.5], 
                    AbsolutePointSize[6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                  ImageSize -> {12, 12}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], "\" \"", #2}, "RowDefault"], 
               TemplateBox[{
                 GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.08, 1, 0.92], 
                    AbsolutePointSize[6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.08, 1, 0.92], 
                    AbsolutePointSize[6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                  ImageSize -> {12, 12}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], "\" \"", #4}, "RowDefault"], 
               TemplateBox[{
                 GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.08, 1, 0.7], 
                    AbsolutePointSize[6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.08, 1, 0.7], 
                    AbsolutePointSize[6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                  ImageSize -> {12, 12}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], "\" \"", #6}, "RowDefault"], 
               TemplateBox[{
                 GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.06, 1, 0.69], 
                    AbsolutePointSize[6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.06, 1, 0.69], 
                    AbsolutePointSize[6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                  ImageSize -> {12, 12}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], "\" \"", #8}, "RowDefault"], "\"\""}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{2, 2}, {2, 2}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 8, FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"AbsolutePointSize", "[", "4", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.5, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> Hue[0.5, 0.5, 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"Hue", "[", 
                    RowBox[{"0.5`", ",", "0.5`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.5, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.5, 0.5, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.11, 1, 0.75], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> Hue[0.11, 1., 0.5], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"Hue", "[", 
                    RowBox[{"0.11`", ",", "1", ",", "0.75`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.11, 1, 0.75]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.11, 1, 0.75], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.08, 1, 0.92], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    Hue[0.07999999999999999, 1., 0.6133333333333334], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"Hue", "[", 
                    RowBox[{"0.08`", ",", "1", ",", "0.92`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.08, 1, 0.92]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.08, 1, 0.92], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.5, 0.67, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> Hue[0.5, 0.67, 0.4], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"Hue", "[", 
                    RowBox[{"0.5`", ",", "0.67`", ",", "0.6`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.5, 0.67, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.5, 0.67, 0.6], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.08, 1, 0.7], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    Hue[0.07999999999999999, 1., 0.4666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"Hue", "[", 
                    RowBox[{"0.08`", ",", "1", ",", "0.7`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.08, 1, 0.7]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.08, 1, 0.7], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.06, 1, 0.69], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    Hue[0.060000000000000005`, 1., 0.45999999999999996`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"Hue", "[", 
                    RowBox[{"0.06`", ",", "1", ",", "0.69`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.06, 1, 0.69]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.06, 1, 0.69], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.11, 1, 0.75], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> Hue[0.11, 1., 0.5], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"Hue", "[", 
                    RowBox[{"0.11`", ",", "1", ",", "0.75`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.11, 1, 0.75]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.11, 1, 0.75], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", "8"}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "12"}], ",", 
           RowBox[{"LegendMargins", "\[Rule]", "2"}], ",", 
           
           RowBox[{"LegendLayout", "\[Rule]", 
             "GeneralUtilities`Graphics`PackagePrivate`legendTable"}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7732950226887836`*^9, 3.773325548812977*^9, 
  3.774171029827063*^9, 3.775459059211513*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"06869286-e88a-4ffb-b25b-b55b95016142"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetInformation", "[", 
  RowBox[{"netECA16", ",", "\"\<SummaryGraphic\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.773215196636877*^9, 3.773215205530636*^9}, {
  3.773325524392873*^9, 3.773325525132712*^9}, {3.774171033412961*^9, 
  3.774171033653467*^9}, {3.77545906782305*^9, 3.775459067888883*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"8934daca-a36e-41f5-a161-d88dee519ac8"],

Cell[BoxData[
 GraphicsBox[{
   {GrayLevel[0.7], 
    LineBox[{{-16., 9.797174393178826*^-16}, {-15., 9.18485099360515*^-16}}], 
    LineBox[{{-15., 9.18485099360515*^-16}, {-14., 8.572527594031472*^-16}}], 
    LineBox[{{-14., 8.572527594031472*^-16}, {-13., 7.960204194457795*^-16}}],
     LineBox[{{-13., 7.960204194457795*^-16}, {-12., 
     7.347880794884119*^-16}}], 
    LineBox[{{-12., 7.347880794884119*^-16}, {-11., 6.735557395310443*^-16}}],
     LineBox[{{-11., 6.735557395310443*^-16}, {-10., 
     6.123233995736766*^-16}}], 
    LineBox[{{-10., 6.123233995736766*^-16}, {-9., 5.51091059616309*^-16}}], 
    LineBox[{{-9., 5.51091059616309*^-16}, {-8., 4.898587196589413*^-16}}], 
    LineBox[{{-8., 4.898587196589413*^-16}, {-7., 4.286263797015736*^-16}}], 
    LineBox[{{-7., 4.286263797015736*^-16}, {-6., 3.6739403974420594`*^-16}}],
     LineBox[{{-6., 3.6739403974420594`*^-16}, {-5., 
     3.061616997868383*^-16}}], 
    LineBox[{{-5., 3.061616997868383*^-16}, {-4., 2.4492935982947064`*^-16}}],
     LineBox[{{-4., 2.4492935982947064`*^-16}, {-3., 
     1.8369701987210297`*^-16}}], 
    LineBox[{{-3., 1.8369701987210297`*^-16}, {-2., 
     1.2246467991473532`*^-16}}], 
    LineBox[{{-2., 1.2246467991473532`*^-16}, {-1., 6.123233995736766*^-17}}],
     LineBox[{{-1., 6.123233995736766*^-17}, {0., 0.}}]}, {InsetBox[
     GraphicsBox[
      {GrayLevel[0.7], 
       PolygonBox[{{-1., 0.3333333333333333}, {0., 
        0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
        0.3333333333333333}}]}], {-15.4, 9.42978035343462*^-16}, {-0.25, 0}, 
     Offset[8], {1., -6.123233995736757*^-17}], InsetBox[
     GraphicsBox[
      {GrayLevel[0.7], 
       PolygonBox[{{-1., 0.3333333333333333}, {0., 
        0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
        0.3333333333333333}}]}], {-14.4, 8.817456953860943*^-16}, {-0.25, 0}, 
     Offset[8], {1., -6.123233995736777*^-17}], InsetBox[
     GraphicsBox[
      {GrayLevel[0.7], 
       PolygonBox[{{-1., 0.3333333333333333}, {0., 
        0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
        0.3333333333333333}}]}], {-13.4, 8.205133554287267*^-16}, {-0.25, 0}, 
     Offset[8], {1., -6.123233995736767*^-17}], InsetBox[
     GraphicsBox[
      {GrayLevel[0.7], 
       PolygonBox[{{-1., 0.3333333333333333}, {0., 
        0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
        0.3333333333333333}}]}], \
{-12.399999999999999, 7.59281015471359*^-16}, {-0.25, 0}, Offset[8], {
     1., -6.123233995736767*^-17}], InsetBox[
     GraphicsBox[
      {GrayLevel[0.7], 
       PolygonBox[{{-1., 0.3333333333333333}, {0., 
        0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
        0.3333333333333333}}]}], {-11.4, 6.980486755139913*^-16}, {-0.25, 0}, 
     Offset[8], {1., -6.123233995736757*^-17}], InsetBox[
     GraphicsBox[
      {GrayLevel[0.7], 
       PolygonBox[{{-1., 0.3333333333333333}, {0., 
        0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
        0.3333333333333333}}]}], {-10.4, 6.368163355566237*^-16}, {-0.25, 0}, 
     Offset[8], {1., -6.123233995736767*^-17}], InsetBox[
     GraphicsBox[
      {GrayLevel[0.7], 
       PolygonBox[{{-1., 0.3333333333333333}, {0., 
        0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
        0.3333333333333333}}]}], \
{-9.399999999999999, 5.755839955992561*^-16}, {-0.25, 0}, Offset[8], {
     1., -6.123233995736767*^-17}], InsetBox[
     GraphicsBox[
      {GrayLevel[0.7], 
       PolygonBox[{{-1., 0.3333333333333333}, {0., 
        0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
        0.3333333333333333}}]}], {-8.4, 5.143516556418883*^-16}, {-0.25, 0}, 
     Offset[8], {1., -6.123233995736767*^-17}], InsetBox[
     GraphicsBox[
      {GrayLevel[0.7], 
       PolygonBox[{{-1., 0.3333333333333333}, {0., 
        0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
        0.3333333333333333}}]}], {-7.4, 4.531193156845207*^-16}, {-0.25, 0}, 
     Offset[8], {1., -6.123233995736767*^-17}], InsetBox[
     GraphicsBox[
      {GrayLevel[0.7], 
       PolygonBox[{{-1., 0.3333333333333333}, {0., 
        0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
        0.3333333333333333}}]}], {-6.4, 3.9188697572715305*^-16}, {-0.25, 0}, 
     Offset[8], {1., -6.123233995736767*^-17}], InsetBox[
     GraphicsBox[
      {GrayLevel[0.7], 
       PolygonBox[{{-1., 0.3333333333333333}, {0., 
        0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
        0.3333333333333333}}]}], {-5.4, 3.3065463576978537*^-16}, {-0.25, 0}, 
     Offset[8], {1., -6.123233995736762*^-17}], InsetBox[
     GraphicsBox[
      {GrayLevel[0.7], 
       PolygonBox[{{-1., 0.3333333333333333}, {0., 
        0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
        0.3333333333333333}}]}], {-4.4, 2.694222958124177*^-16}, {-0.25, 0}, 
     Offset[8], {1., -6.123233995736767*^-17}], InsetBox[
     GraphicsBox[
      {GrayLevel[0.7], 
       PolygonBox[{{-1., 0.3333333333333333}, {0., 
        0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
        0.3333333333333333}}]}], {-3.4, 2.0818995585505003*^-16}, {-0.25, 0}, 
     Offset[8], {1., -6.123233995736767*^-17}], InsetBox[
     GraphicsBox[
      {GrayLevel[0.7], 
       PolygonBox[{{-1., 0.3333333333333333}, {0., 
        0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
        0.3333333333333333}}]}], \
{-2.4000000000000004, 1.4695761589768238*^-16}, {-0.25, 0}, Offset[8], {
     1., -6.123233995736765*^-17}], InsetBox[
     GraphicsBox[
      {GrayLevel[0.7], 
       PolygonBox[{{-1., 0.3333333333333333}, {0., 
        0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
        0.3333333333333333}}]}], {-1.4, 8.572527594031473*^-17}, {-0.25, 0}, 
     Offset[8], {1., -6.123233995736766*^-17}], InsetBox[
     GraphicsBox[
      {GrayLevel[0.7], 
       PolygonBox[{{-1., 0.3333333333333333}, {0., 
        0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
        0.3333333333333333}}]}], {-0.4, 2.4492935982947065*^-17}, {-0.25, 0}, 
     Offset[8], {1., -6.123233995736766*^-17}]}, 
   {EdgeForm[AbsoluteThickness[1]], 
    StyleBox[{
      {GrayLevel[0.85], EdgeForm[GrayLevel[0.5]], 
       DiskBox[{-16., 9.797174393178826*^-16}, 
        Offset[{2., 2.}, {0., 0.}]]}, {
       {EdgeForm[GrayLevel[0.7]], FaceForm[RGBColor[
        0.7999999999999999, 0.7999999999999999, 0.7999999999999999]], 
        RectangleBox[Offset[{-10, -10}, {-15., 9.18485099360515*^-16}], 
         Offset[{10, 10}, {-15., 9.18485099360515*^-16}]]}, InsetBox[
        PaneBox[
         StyleBox["\<\"\:2217\"\>",
          StripOnInput->False,
          FontSize->20],
         ImageSize->{11, 28}], {-15., 9.18485099360515*^-16}]}, {
       {EdgeForm[GrayLevel[0.7]], FaceForm[RGBColor[
        0.7999999999999999, 0.7999999999999999, 0.7999999999999999]], 
        RectangleBox[Offset[{-10, -10}, {-14., 8.572527594031472*^-16}], 
         Offset[{10, 10}, {-14., 8.572527594031472*^-16}]]}, 
       InsetBox["\<\"BN\"\>", 
        Offset[{0, -1}, {-14., 8.572527594031472*^-16}]]}, {
       {EdgeForm[GrayLevel[0.85]], FaceForm[RGBColor[0.9, 0.9, 0.9]], 
        RectangleBox[Offset[{-10, -10}, {-13., 7.960204194457795*^-16}], 
         Offset[{10, 10}, {-13., 7.960204194457795*^-16}]]}, InsetBox[
        FormBox[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
            "], {{0, 
            25}, {40, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag[
           "Byte", ColorSpace -> "RGB", ImageResolution -> 144, Interleaving -> 
            True, Magnification -> Automatic],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->20,
          ImageSizeRaw->{40, 25},
          PlotRange->{{0, 40}, {0, 25}}],
         TraditionalForm], {-13., 7.960204194457795*^-16}]}, {
       {EdgeForm[GrayLevel[0.7]], FaceForm[RGBColor[
        0.7999999999999999, 0.7999999999999999, 0.7999999999999999]], 
        RectangleBox[Offset[{-10, -10}, {-12., 7.347880794884119*^-16}], 
         Offset[{10, 10}, {-12., 7.347880794884119*^-16}]]}, InsetBox[
        PaneBox[
         StyleBox["\<\"\:2217\"\>",
          StripOnInput->False,
          FontSize->20],
         ImageSize->{11, 28}], {-12., 7.347880794884119*^-16}]}, {
       {EdgeForm[GrayLevel[0.7]], FaceForm[RGBColor[
        0.7999999999999999, 0.7999999999999999, 0.7999999999999999]], 
        RectangleBox[Offset[{-10, -10}, {-11., 6.735557395310443*^-16}], 
         Offset[{10, 10}, {-11., 6.735557395310443*^-16}]]}, 
       InsetBox["\<\"BN\"\>", 
        Offset[{0, -1}, {-11., 6.735557395310443*^-16}]]}, {
       {EdgeForm[GrayLevel[0.85]], FaceForm[RGBColor[0.9, 0.9, 0.9]], 
        RectangleBox[Offset[{-10, -10}, {-10., 6.123233995736766*^-16}], 
         Offset[{10, 10}, {-10., 6.123233995736766*^-16}]]}, InsetBox[
        FormBox[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
            "], {{0, 
            25}, {40, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag[
           "Byte", ColorSpace -> "RGB", ImageResolution -> 144, Interleaving -> 
            True, Magnification -> Automatic],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->20,
          ImageSizeRaw->{40, 25},
          PlotRange->{{0, 40}, {0, 25}}],
         TraditionalForm], {-10., 6.123233995736766*^-16}]}, {
       {EdgeForm[GrayLevel[0.7]], FaceForm[RGBColor[
        0.7999999999999999, 0.7999999999999999, 0.7999999999999999]], 
        RectangleBox[Offset[{-10, -10}, {-9., 5.51091059616309*^-16}], 
         Offset[{10, 10}, {-9., 5.51091059616309*^-16}]]}, InsetBox[
        PaneBox[
         StyleBox["\<\"\:2217\"\>",
          StripOnInput->False,
          FontSize->20],
         ImageSize->{11, 28}], {-9., 5.51091059616309*^-16}]}, {
       {EdgeForm[GrayLevel[0.7]], FaceForm[RGBColor[
        0.7999999999999999, 0.7999999999999999, 0.7999999999999999]], 
        RectangleBox[Offset[{-10, -10}, {-8., 4.898587196589413*^-16}], 
         Offset[{10, 10}, {-8., 4.898587196589413*^-16}]]}, 
       InsetBox["\<\"BN\"\>", 
        Offset[{0, -1}, {-8., 4.898587196589413*^-16}]]}, {
       {EdgeForm[GrayLevel[0.85]], FaceForm[RGBColor[0.9, 0.9, 0.9]], 
        RectangleBox[Offset[{-10, -10}, {-7., 4.286263797015736*^-16}], 
         Offset[{10, 10}, {-7., 4.286263797015736*^-16}]]}, InsetBox[
        FormBox[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
            "], {{0, 
            25}, {40, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag[
           "Byte", ColorSpace -> "RGB", ImageResolution -> 144, Interleaving -> 
            True, Magnification -> Automatic],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->20,
          ImageSizeRaw->{40, 25},
          PlotRange->{{0, 40}, {0, 25}}],
         TraditionalForm], {-7., 4.286263797015736*^-16}]}, {
       {EdgeForm[GrayLevel[0.85]], FaceForm[RGBColor[0.9, 0.9, 0.9]], 
        RectangleBox[Offset[{-10, -10}, {-6., 3.6739403974420594*^-16}], 
         Offset[{10, 10}, {-6., 3.6739403974420594*^-16}]]}, 
       InsetBox["\<\"P\"\>", 
        Offset[{0, -1}, {-6., 3.6739403974420594*^-16}]]}, {
       {EdgeForm[GrayLevel[0.85]], FaceForm[RGBColor[0.9, 0.9, 0.9]], 
        RectangleBox[Offset[{-10, -10}, {-5., 3.061616997868383*^-16}], 
         Offset[{10, 10}, {-5., 3.061616997868383*^-16}]]}, 
       InsetBox["\<\"F\"\>", 
        Offset[{0, -1}, {-5., 3.061616997868383*^-16}]]}, {
       {EdgeForm[GrayLevel[0.7]], FaceForm[RGBColor[
        0.7999999999999999, 0.7999999999999999, 0.7999999999999999]], 
        RectangleBox[Offset[{-10, -10}, {-4., 2.4492935982947064*^-16}], 
         Offset[{10, 10}, {-4., 2.4492935982947064*^-16}]]}, InsetBox[
        GraphicsBox[
         GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {1.3, 1}, {
           0.9, 0}}, {
           {Opacity[0.2], 
            LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 4}}]}, 
           {RGBColor[0.33, 0.33, 0.33], AbsolutePointSize[3.5], 
            PointBox[{1, 5, 2, 3, 4}]}}],
         ImageSize->18], {-4., 2.4492935982947064*^-16}]}, {
       {EdgeForm[GrayLevel[0.85]], FaceForm[RGBColor[0.9, 0.9, 0.9]], 
        RectangleBox[Offset[{-10, -10}, {-3., 1.8369701987210297*^-16}], 
         Offset[{10, 10}, {-3., 1.8369701987210297*^-16}]]}, 
       InsetBox["\<\"D\"\>", 
        Offset[{0, -1}, {-3., 1.8369701987210297*^-16}]]}, {
       {EdgeForm[GrayLevel[0.7]], FaceForm[RGBColor[
        0.7999999999999999, 0.7999999999999999, 0.7999999999999999]], 
        RectangleBox[Offset[{-10, -10}, {-2., 1.2246467991473532*^-16}], 
         Offset[{10, 10}, {-2., 1.2246467991473532*^-16}]]}, InsetBox[
        GraphicsBox[
         GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {1.3, 1}, {
           0.9, 0}}, {
           {Opacity[0.2], 
            LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 4}}]}, 
           {RGBColor[0.33, 0.33, 0.33], AbsolutePointSize[3.5], 
            PointBox[{1, 5, 2, 3, 4}]}}],
         ImageSize->18], {-2., 1.2246467991473532*^-16}]}, {
       {EdgeForm[GrayLevel[0.85]], FaceForm[RGBColor[0.9, 0.9, 0.9]], 
        RectangleBox[Offset[{-10, -10}, {-1., 6.123233995736766*^-17}], 
         Offset[{10, 10}, {-1., 6.123233995736766*^-17}]]}, 
       InsetBox["\<\"S\"\>", Offset[{0, -1}, {-1., 6.123233995736766*^-17}]]}, 
      {GrayLevel[0.85], EdgeForm[GrayLevel[0.5]], 
       DiskBox[{0., 0.}, Offset[{2., 2.}, {0., 0.}]]}},
     FontSize->10]}, {
    StyleBox[{
      InsetBox["\<\"Input\"\>", 
       Offset[{0, -7}, {-16., 9.797174393178826*^-16}], {0, 1.}, Automatic, {
       1, 0}], InsetBox["\<\"conv1\"\>", 
       Offset[{0, -13}, {-15., 9.18485099360515*^-16}], {0, 1.}, Automatic, {
       1, 0}], InsetBox["\<\"bat1\"\>", 
       Offset[{0, -13}, {-14., 8.572527594031472*^-16}], {0, 1.}, Automatic, {
       1, 0}], 
      InsetBox["\<\"ramp1\"\>", 
       Offset[{0, -13}, {-13., 7.960204194457795*^-16}], {0, 1.}, Automatic, {
       1, 0}], InsetBox["\<\"conv2\"\>", 
       Offset[{0, -13}, {-12., 7.347880794884119*^-16}], {0, 1.}, Automatic, {
       1, 0}], InsetBox["\<\"bat2\"\>", 
       Offset[{0, -13}, {-11., 6.735557395310443*^-16}], {0, 1.}, Automatic, {
       1, 0}], InsetBox["\<\"ramp2\"\>", 
       Offset[{0, -13}, {-10., 6.123233995736766*^-16}], {0, 1.}, Automatic, {
       1, 0}], InsetBox["\<\"conv3\"\>", 
       Offset[{0, -13}, {-9., 5.51091059616309*^-16}], {0, 1.}, Automatic, {1,
        0}], InsetBox["\<\"bat3\"\>", 
       Offset[{0, -13}, {-8., 4.898587196589413*^-16}], {0, 1.}, Automatic, {
       1, 0}], InsetBox["\<\"ramp3\"\>", 
       Offset[{0, -13}, {-7., 4.286263797015736*^-16}], {0, 1.}, Automatic, {
       1, 0}], InsetBox["\<\"pooling\"\>", 
       Offset[{0, -13}, {-6., 3.6739403974420594*^-16}], {0, 1.}, Automatic, {
       1, 0}], InsetBox["\<\"flatten\"\>", 
       Offset[{0, -13}, {-5., 3.061616997868383*^-16}], {0, 1.}, Automatic, {
       1, 0}], InsetBox["\<\"linear\"\>", 
       Offset[{0, -13}, {-4., 2.4492935982947064*^-16}], {0, 1.}, Automatic, {
       1, 0}], InsetBox["\<\"drop2\"\>", 
       Offset[{0, -13}, {-3., 1.8369701987210297*^-16}], {0, 1.}, Automatic, {
       1, 0}], InsetBox["\<\"linear2\"\>", 
       Offset[{0, -13}, {-2., 1.2246467991473532*^-16}], {0, 1.}, Automatic, {
       1, 0}], InsetBox["\<\"softmax\"\>", 
       Offset[{0, -13}, {-1., 6.123233995736766*^-17}], {0, 1.}, Automatic, {
       1, 0}], InsetBox["\<\"Output\"\>", Offset[{0, -7}, {0., 0.}], {0, 1.}, 
       Automatic, {1, 0}]},
     StripOnInput->False,
     FontColor->GrayLevel[0.5]], 
    StyleBox[{InsetBox[
       TemplateBox[{"\[Cross]","\"\[Cross]\"","\"3\"","\"128\"","\"128\""},
        "RowWithSeparators"], 
       Offset[{3.3677786976552166*^-16, 5.5}, \
{-15.4, 9.42978035343462*^-16}], {0., -0.17}, Automatic, {
       1., -6.123233995736757*^-17}], InsetBox[
       TemplateBox[{"\[Cross]","\"\[Cross]\"","\"24\"","\"126\"","\"126\""},
        "RowWithSeparators"], 
       Offset[{3.3677786976552274*^-16, 5.5}, \
{-14.4, 8.817456953860943*^-16}], {0., -0.17}, Automatic, {
       1., -6.123233995736777*^-17}], InsetBox[
       TemplateBox[{"\[Cross]","\"\[Cross]\"","\"24\"","\"126\"","\"126\""},
        "RowWithSeparators"], 
       Offset[{3.367778697655222*^-16, 5.5}, \
{-13.4, 8.205133554287267*^-16}], {0., -0.17}, Automatic, {
       1., -6.123233995736767*^-17}], InsetBox[
       TemplateBox[{"\[Cross]","\"\[Cross]\"","\"24\"","\"126\"","\"126\""},
        "RowWithSeparators"], 
       Offset[{3.367778697655222*^-16, 5.5}, \
{-12.399999999999999, 7.59281015471359*^-16}], {0., -0.17}, Automatic, {
       1., -6.123233995736767*^-17}], InsetBox[
       TemplateBox[{"\[Cross]","\"\[Cross]\"","\"24\"","\"124\"","\"124\""},
        "RowWithSeparators"], 
       Offset[{3.3677786976552166*^-16, 5.5}, \
{-11.4, 6.980486755139913*^-16}], {0., -0.17}, Automatic, {
       1., -6.123233995736757*^-17}], InsetBox[
       TemplateBox[{"\[Cross]","\"\[Cross]\"","\"24\"","\"124\"","\"124\""},
        "RowWithSeparators"], 
       Offset[{3.367778697655222*^-16, 5.5}, \
{-10.4, 6.368163355566237*^-16}], {0., -0.17}, Automatic, {
       1., -6.123233995736767*^-17}], InsetBox[
       TemplateBox[{"\[Cross]","\"\[Cross]\"","\"24\"","\"124\"","\"124\""},
        "RowWithSeparators"], 
       Offset[{3.367778697655222*^-16, 5.5}, \
{-9.399999999999999, 5.755839955992561*^-16}], {0., -0.17}, Automatic, {
       1., -6.123233995736767*^-17}], InsetBox[
       TemplateBox[{"\[Cross]","\"\[Cross]\"","\"24\"","\"122\"","\"122\""},
        "RowWithSeparators"], 
       Offset[{3.367778697655222*^-16, 5.5}, {-8.4, 5.143516556418883*^-16}], \
{0., -0.17}, Automatic, {1., -6.123233995736767*^-17}], InsetBox[
       TemplateBox[{"\[Cross]","\"\[Cross]\"","\"24\"","\"122\"","\"122\""},
        "RowWithSeparators"], 
       Offset[{3.367778697655222*^-16, 5.5}, {-7.4, 4.531193156845207*^-16}], \
{0., -0.17}, Automatic, {1., -6.123233995736767*^-17}], InsetBox[
       TemplateBox[{"\[Cross]","\"\[Cross]\"","\"24\"","\"122\"","\"122\""},
        "RowWithSeparators"], 
       Offset[{3.367778697655222*^-16, 5.5}, \
{-6.4, 3.9188697572715305*^-16}], {0., -0.17}, Automatic, {
       1., -6.123233995736767*^-17}], InsetBox[
       TemplateBox[{"\[Cross]","\"\[Cross]\"","\"24\"","\"7\"","\"7\""},
        "RowWithSeparators"], 
       Offset[{3.3677786976552195*^-16, 5.5}, \
{-5.4, 3.3065463576978537*^-16}], {0., -0.17}, Automatic, {
       1., -6.123233995736762*^-17}], InsetBox[
       TemplateBox[{"\[Cross]","\"\[Cross]\"","\"1176\""},
        "RowWithSeparators"], 
       Offset[{3.367778697655222*^-16, 5.5}, {-4.4, 2.694222958124177*^-16}], \
{0., -0.17}, Automatic, {1., -6.123233995736767*^-17}], InsetBox[
       TemplateBox[{"\[Cross]","\"\[Cross]\"","\"512\""},
        "RowWithSeparators"], 
       Offset[{3.367778697655222*^-16, 5.5}, \
{-3.4, 2.0818995585505003*^-16}], {0., -0.17}, Automatic, {
       1., -6.123233995736767*^-17}], InsetBox[
       TemplateBox[{"\[Cross]","\"\[Cross]\"","\"512\""},
        "RowWithSeparators"], 
       Offset[{3.3677786976552205*^-16, 5.5}, \
{-2.4000000000000004, 1.4695761589768238*^-16}], {0., -0.17}, Automatic, {
       1., -6.123233995736765*^-17}], InsetBox[
       TemplateBox[{"\[Cross]","\"\[Cross]\"","\"4\""},
        "RowWithSeparators"], 
       Offset[{3.3677786976552215*^-16, 5.5}, \
{-1.4, 8.572527594031473*^-17}], {0., -0.17}, Automatic, {
       1., -6.123233995736766*^-17}], InsetBox[
       TemplateBox[{"\[Cross]","\"\[Cross]\"","\"4\""},
        "RowWithSeparators"], 
       Offset[{3.3677786976552215*^-16, 5.5}, \
{-0.4, 2.4492935982947065*^-17}], {0., -0.17}, Automatic, {
       1., -6.123233995736766*^-17}]},
     StripOnInput->False,
     FontSize->8,
     FontWeight->"Thin",
     FontColor->GrayLevel[0.7]]}},
  AspectRatio->Full,
  BaseStyle->{TooltipBoxOptions -> {TooltipDelay -> 0.08}},
  ImageMargins->{{0, 0}, {0, 0}},
  ImagePadding->{{24., 26.5}, {26.999999999999996`, 14.}},
  ImageSize->{930.5, 41.00000000000006},
  PlotRangePadding->0]], "Output",
 CellChangeTimes->{3.773295025958229*^9, 3.773325621222777*^9, 
  3.774171034296094*^9, 3.775459068905986*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"e402fbd8-efd4-424d-b765-522b29077c66"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataECA16", "=", 
   RowBox[{"dataC", "[", 
    RowBox[{"128", ",", "128", ",", "8192"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.772355752786458*^9, 3.772355821872775*^9}, {
  3.772690743490674*^9, 3.7726907773276663`*^9}, {3.772693549217153*^9, 
  3.772693583566229*^9}, {3.77312988440252*^9, 3.7731298847595797`*^9}, {
  3.7732152150950327`*^9, 3.773215215437931*^9}, {3.7732950325697002`*^9, 
  3.773295032668089*^9}, {3.7741710812201223`*^9, 3.774171081293769*^9}, {
  3.774171112241376*^9, 3.774171114625349*^9}, {3.775459075484909*^9, 
  3.775459075568799*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"c344643e-8378-41fb-a40d-d3ce6898e8df"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataTotalistic2BigC16", "=", 
   RowBox[{"genData2r2C", "[", 
    RowBox[{"128", ",", "128", ",", "1024"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.772355752786458*^9, 3.772355821872775*^9}, {
   3.772690743490674*^9, 3.7726907773276663`*^9}, {3.772693549217153*^9, 
   3.772693588670415*^9}, {3.7731298879079638`*^9, 3.773129888266445*^9}, {
   3.77321521750358*^9, 3.773215217885929*^9}, {3.773215262293749*^9, 
   3.773215271744378*^9}, {3.7732950346821947`*^9, 3.7732950347840853`*^9}, {
   3.7741710833169518`*^9, 3.7741710834211483`*^9}, 3.774171123101664*^9, {
   3.775459077900434*^9, 3.775459077975477*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"c93179d9-470f-44a7-9307-68c4ec56051e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataTotalistic3BigC16", "=", 
   RowBox[{"data3T2C", "[", 
    RowBox[{"128", ",", "128", ",", "1024"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.772355752786458*^9, 3.772355821872775*^9}, {
   3.772690743490674*^9, 3.7726907773276663`*^9}, {3.772693549217153*^9, 
   3.77269359306248*^9}, {3.773129890386211*^9, 3.773129891320112*^9}, {
   3.7732152196732883`*^9, 3.7732152200277443`*^9}, {3.773295036430442*^9, 
   3.7732950365479527`*^9}, {3.774171084960733*^9, 3.774171085057392*^9}, 
   3.774171127062512*^9, {3.775459080023375*^9, 3.775459080108341*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"670e442b-b7bc-49ae-9896-d491b2b194ca"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataTotalistic4BigC16", "=", 
   RowBox[{"data4TC", "[", 
    RowBox[{"128", ",", "128", ",", "1024"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.772355752786458*^9, 3.772355821872775*^9}, {
   3.772690743490674*^9, 3.7726907773276663`*^9}, {3.772693549217153*^9, 
   3.7726935982412777`*^9}, {3.7731298932839537`*^9, 3.773129893667457*^9}, {
   3.77321522172605*^9, 3.773215222093884*^9}, {3.7732950384695063`*^9, 
   3.7732950385858507`*^9}, {3.7741710868618593`*^9, 3.774171086932007*^9}, 
   3.7741711304700937`*^9, {3.7754590821000757`*^9, 3.775459082185775*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"c1f1a363-6b98-4dca-bfd3-edd144ab670d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataTotalistic5BigC16", "=", 
   RowBox[{"genData5TCC", "[", 
    RowBox[{"128", ",", "128", ",", "4096"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.772355752786458*^9, 3.772355821872775*^9}, {
   3.772690743490674*^9, 3.7726907773276663`*^9}, {3.772693549217153*^9, 
   3.772693602628367*^9}, {3.7731298956689577`*^9, 3.773129896025247*^9}, {
   3.773215223612338*^9, 3.773215224001829*^9}, {3.7732950404115*^9, 
   3.773295040558866*^9}, {3.774171088543384*^9, 3.774171088609951*^9}, 
   3.774171133328553*^9, {3.7754590840604486`*^9, 3.775459084158596*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"703ec77d-4a8c-4477-a7cf-182306bcf131"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fullTrainingBigC16", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
    "dataECA16", ",", "dataTotalistic2BigC16", ",", "dataTotalistic3BigC16", 
     ",", "dataTotalistic4BigC16", ",", "dataTotalistic5BigC16"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "fullTrainingBigC16", "]"}]}], "Input",
 CellChangeTimes->{{3.772355752786458*^9, 3.772355821872775*^9}, {
  3.772690743490674*^9, 3.7726907773276663`*^9}, {3.772693549217153*^9, 
  3.772693602628367*^9}, {3.773129897972353*^9, 3.77312991704902*^9}, {
  3.773215225791395*^9, 3.773215243291334*^9}, {3.773295042430605*^9, 
  3.773295058617936*^9}, {3.773329034384303*^9, 3.773329038122735*^9}, {
  3.774171090243143*^9, 3.774171104146511*^9}, {3.775459087953318*^9, 
  3.775459101715714*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"11918318-37e3-45bd-83f6-3fca5149b2e1"],

Cell[BoxData["26624"], "Output",
 CellChangeTimes->{3.774171796690967*^9, 3.7754599064498043`*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"63204896-0aee-40ff-8b62-c04504b98fc5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomSample", "[", 
  RowBox[{"fullTrainingBigC16", ",", "20"}], "]"}]], "Input",
 CellChangeTimes->{{3.772355752786458*^9, 3.772355821872775*^9}, {
  3.772690743490674*^9, 3.7726907773276663`*^9}, {3.772693549217153*^9, 
  3.772693602628367*^9}, {3.773129897972353*^9, 3.77312991704902*^9}, {
  3.773215225791395*^9, 3.773215243291334*^9}, {3.773295042430605*^9, 
  3.773295058617936*^9}, {3.773329034384303*^9, 3.773329038122735*^9}, {
  3.7741711060775537`*^9, 3.774171106157587*^9}, {3.775459104804187*^9, 
  3.77545910491772*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"a90e3182-1c36-441b-8f5f-2f548fe748d5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt102qXUUYheGLf6ThIOIUtO/FhtgwjRBHcAVtBYTYkPQE5+GQHIY4hWAn
CdiwI9xj1Vf11V5PI+EN3J999lrrrcpn3//04scP7u7ufn7y7q8XD7989erV
w+vvPnn/jx8eXn7x+csP3+Gv//x5z7/9/ueXH/3xzf1ffz+//ze/+frj+0+/
fXL/5tnT/+RZ3zvy9bc+w2N+zqyfP8Ijzzzrfc76XbP6M+tdzXpvtz7Prd+r
h/9vyyu7V53jrmee1Z8Kz886I1aeWR36M+LSWf6f9dl3nTsrs672Ruceznpv
1R5YmUW33zvrTNl1b1l5Lq/Msdv9ueJ+uPLeXnEWrNxm5x5WZLTrzrYy912Z
rrxLXOncqfDGKS7dxbP8cMq+Vu6x4v9cs+4kFXehU3jWRjo8T4eeV5wFHRxe
/Xs7nwUVGa28+63cY8W5ufLs3uW9XZnOes8rn6f6GTqcO918uOtc6Ob86jPu
dD+sdEjFOcL/492e9Ty7vndXB07x5JV4ZU9OOQs6+78i02T/j3zGbr3tcHZ0
3h1ec9bfup1um+rg/2q3z/r6Dh6b5fzqcxPzfzeelUvFfXXXplb6f6VzKs6m
Dt7Y5eqrnpUd8uL/nvf/lXeeXferih6OnJvVZ2Lns7g6u+qed35X3Zj/+9z/
q/02ay/V5061/ysy2vXZOztk5B3uuv+kMf/vdf7IWbDLyVftYUUusz57h4x2
dfj099CZO+zuqlzR4ZX+T+hhhdsrzpRT7r3Vrj7lPZzC/N/TLVdywok9rPBP
dU865Djyrkbef+f30Jm77S6BK97zKU7o3MMRp1V04Nb30y3His9V/f+LNO6w
O8z/u3o4y13V587IvXpXdrO+ZuTcxD13h/m/cw+rn2HEjRVnSvX9f+RrnAU5
u8P8n9DDEXd160DFGVf9fnDm7q7K/H8uz/Lkyg7McnJFh2/9XcmcvLsrMf+f
y7M8ucv51a6uOO9O3IjdYf7P4Vs9X3EWVHi14rzgebtL5tM7r4ePz3fkvVXn
Ve3qq/bf7jD/62G1V1eeBSNdHXnOE/tvd5j/9fDWdzXi/1k96fZzsN2l8ek7
Su7hrM/LvdjuMvn0LethZu7Y7jAP6GFm7tjuMA/oYWbu2O4wD+hhZu7Y7jAP
6GFm7tjuMA/oYWbu2O4wD+hhZu7Y7jAP6GFm7tjuMA/oYWbu2O4wD+hhZu7Y
7jAP6GFm7tjuMA/oYWbu2O4wD+hhZu7Y7jAP6GFm7tjuMA/oYWbu2O4wD+hh
Zu7Y7jAP6GFm7tjuMA/oYWbu2O4wD+hhZu7Y7jAP6GFm7tjuMA/oYWbu2O4w
D+hhZu7Y7jAP6GFm7tjuMA/oYWbu2O4wD+hhZu7Y7jAP6GFm7tjuMA/oYWbu
2O4wD+hhZu7Y7jAP6GFm7tjuMA/oYWbu2O4wD+hhZu7Y7jAP6GFm7tjuMA/o
YWbu2O4wD+hhZu7Y7jAP6GFm7tjuMA/oYWbu2O4wD+hhZu7Y7jAP6GFm7tju
MA/oYWbu2O4wD+hhZu7Y7jAP6GFm7tjuMA/oYWbu2O4wD+hhZu7Y7jAP6GFm
7tjuMA/oYWbu2O4wD+hhZu7Y7jAP6GFm7tjuMA/oYWbu2O4wD+hhZu7Y7jAP
6GFm7tjuMA/oYWbu2O4wD+hhZu7Y7jAP6GFm7tjuMA/oYWbu2O4wD+hhZu7Y
7jAP6GFm7tjuMA/oYWbu2O4wD+hhZu7Y7jAP6GFm7tjuMA/oYWbu2O4wD+hh
Zu7Y7jAP6GFm7tjuMA/oYWbu2O4wD+hhZu7Y7jAP6GFm7tjuMA/oYWbu2O4w
D+hhZu7Y7jAP6GFm7tjuMA/oYWbu2O4wD+hhZu7Y7jAP6GFm7tjuMA/oYWbu
2O4wD+hhZu7Y7jAP6GFm7tjuMA/oYWbu2O4wD+hhZu7Y7jAP6GFm7tjuMA/o
YWbu2O4wD+hhZu7Y7jAP6GFm7tjuMA/oYWbu2O4wD+hhZu7Y7jAP6GFm7tju
MA/oYWbu2O4wD+hhZu7Y7jAP6GFm7tjuMA/oYWbu2O4wD+hhZu7Y7jAP6GFm
7tjuMA/oYWbu2O4wD+hhZu7Y7jAP6GFm7tjuMA/oYWbu2O4wD+hhZu7Y7jAP
6GFm7tjuMA/oYWbu2O4wD+hhZu7Y7jAP6GFm7tjuMA/oYWbu2O4wD+hhZu7Y
7jAP6GFm7tjuMA/oYWbu2O4wD+hhZu6P4bdlrp3Q
       "], {{0, 128}, {128, 0}}, {0.,
        1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztmr/qbVt5hg8RJEVKexGMpUXE0r3JBQjBdCmCxxArRdBC7LwJ7yEYCKQP
pEyVy8gVeANRiLCbBe+T533HHGtr8TvMs1lrzjHH933vv7G+8aOf/eDHf/HF
F1/84i9//58ffPnLv/35z7/81d9/9Q//889f/uQ7f/OTr/z+8tf/9/eH69/9
3X9++Jf/+u7H733zvz+8uv73r//Hh6/92/c//sM/fuvjp9evPpPc0zw3uU7u
SZ9l1r/4Lv3MYt9a/dPqk8W7L/qH3mc9I2YfFjVtPavV8+vZoTVq9fy//va3
H/749+l9Pv33b//VDz/+z4fffPinv/7px1fXn37+1T2T61fPTb6brCd5r+Se
yfrpniTfpX/JHtJ9o++S9IzpE1pTWt9W/7x6lpkvMyN0ftc1bT0r2Z/W3prZ
oT1Ar5M1JzySPOvVfcx6Flz/6r3Md1+9Y7InyXdb1wudk/QD/UzSJ0mvtnQX
fRbtGTpfrRkxe9WqaYIDFHNunp1Fbyzq2OoZ4/VaXH/SD75aG8UcOjtGn7Sw
dzFfpn+Mhk/0sPHjBvONfzF71ZqjRW5DNfDJ2aHv2MJ82vMmy2p5+dZ8nfSD
5t9bvbrQ9nRGWvNl+ie5j9GWSR0pntPPtLSE2fNWXmrm1Pi4p2bn1TtSLlj7
viSzMphmslOafS38YMJHJ/WS8USL/LalfwzvJO/V8nEmtzG9QeeOev8WTiYz
vtiHBQfRHlv3g/F9tGdamLbIx9ZZCu03ynEtPdaqxWLfEv2z5hejQ0w/L/zR
Ooc0OGk0ktkHeh6xmB36ji3PRf+9lR0l9aLcSv3yWq9SHWV4v6XHaC0W+0nn
q5UFtbyhwUDD72v+oprZ1DHRSC2eavn0ViZMz5Vobxitbjzj2sucxA2KLWZ/
aE1ba2v5ygVvUkxLcMl4wwSvTM8nmfyCv6imoji5eBbF0kSPUf/SqrXJKJL3
pf3TwpOWl2llia3swuSrVEtQbdDKLtb7mbxLKz9ZfNdwekubGf4yntT0gHmW
0VfJu69z46dwktbaZDut7Jq+7wI3TB0X+rDFla33pfdsabCkx5Iept+leJXc
P1nnDfy17ivjeY32Xuecpg8NTrb2xPQ/zZQWe0txo/WsBWaaz9N3b+Fwotla
5yP0WS2sM7U2OnbNX4uZonkFfceWhjGYnGDgGidp77VmbaG36d4a7jPPWuDw
wqcYb9jSwK0sxXAxvU8LG2mOup5H4xFMRtTiTerB6ZwuMp8FTtIMmXqftTY4
mUtQ77nw4AveT3p+0ZOLWaY8YrDd4FtrP43Xa/HXoo4tjbT24K1ZoN7E4GSr
nz+9bmm2BdaZXIJ6T5pXGxxeeCI6d7QnW7Uw+LPQ/wuOW2ghM4+mZ5I6LvZ2
4cFbOtZ42AVOGi3R8l8trGvlEsa3tjLkxK8tMKHlrVoao6UVWxyx0BuLGTc+
yGizVh2NTl740xa2JDPYymEW12bNVG8brFvsD+UCijOGiw0mtLxV673WusVw
xEJvGH1F39HUa51NUa9He5L601bOs8gVF3Nt5t1gY8t3L3hk0RvUn7ZwssU1
1Ac9pVVa+j/pH4MJLe5uedgbfKjxHS0PTjOuVu/RnllorWTeT/p3uietfW71
RuLHF5y+4BqTta61CtUtdK+oh11zdysbaeWuhstaa2tlfVSr0/PBhZ45mXu0
ens9+613N71B19nKoltcY7z5WqsY3dLS0i09QzUt5VxzNrHgMqpvaYZj8haj
Dxde+GQdqa644bqVdRgtR3VaK1NK3pdyDV1b0ntrrUKf9arW67MYw90nuewp
vWo+T8/gDH6uc/tW3tLKPW7AeaqXKH6azxjNZvJG2gPmM2ZOTcZudIvJRp7S
Lck6F1zWeneqV6lHoNmvwXCTubVye/NeLSy9zRc8lau3NBs922rlUUY/tLLT
JKuh+GnOI9bcZHiHelKTQ7b8r+mxlq6meVGyhybPab1L8l60jjd49pZeolnH
Sc12MjNv5c/GI5zU2/SeNLNd5Dyt+lIuo/p54SNac7HoE9rnhmtO6n+j5T69
51oXmZ5p5eotzWbyxpP8+2rNxiOv9Ta9J93n1p63zqYpf5nzYtM/yd/J82jD
uYkGWJw1t/R/8i4ndWmrdmafaY/R/jF5S7LPrbkwXGk+b/R28vnWGdBiz1t6
0uxta67X2eMN2aDR5LSvWucapg+pr1yszZyTmv6kuNTyyyczc9rP63M6yh3m
PnSuW1hE9UMrK6D70PI+655ccC7VXYnepphjzjVMHxo8pPNlatfKysx501Pn
IIs1LDxji6+pDlnc32AR1Q+U+9b8svA+pifpGpI9WeQkSV+d5NkW1tFnGQ1g
am14me75ei5MDy+0mdFRRhclOoR6BKNt6J7T+Uo054JfTvrNpE+MfmhlYhQP
aS1O4gnFuldrXvhHkzPQnln7uNYstDLz2zjI+NAFXyw0GPUULZ912/60eo9i
mskGk/5s8f4aTyjWJfNOs2JaR+OVKDe1fNyar0/O5oKDFphm8HPh6UyPLep7
2/60dGCC1U+doSS839LnLT+V4DDdtwQfKFavM2H6LlSrGG2c1Hoxm4aDTKa9
WKfR4aZe5tyK1pd6q/X+mDpSn9LSja38gT7XZIwLL5DkP0ZvG13UyoRbvGzO
PkzfLmbTcFDC0a0+pxkL3X9TLzP7tL5mPYv9MXU0GGJ0Y4tH6CxQDXDSC5hz
E4obLf2ZzAjNwcyctvRP4nnNc1scZHiZ9gz16ZRrks+b/LBVF7q3LS423N3K
aowuavGImYXWfra8QPIu6zWbeaF1X+t/6tlbHsrUhXIQXXMrNzD3TDDHYGar
90wfmvWY/TFzavYn0UUtf22+azjRXLf4dLHmRXZncNLof3p+avQPndMWBxn8
aWmD1lyYjMXMDtUGRqubWrQ0VaLrqHYyOE/9tfmuOfdcewHaewvupvqzdbZl
zuaMZjB819IqlIPMWbPBrpbmXGhFqh/Me5ncjPJIS1OZvIX6O7o/rfOFln5o
zdraI7S4m+rP1jkv1SpmXgwvUH1IOc70c4tb6VwbHd7SinT9LS1teJP2v8Hk
lj40c9rCurUGo32+WDPF5xZ3Uy1HefYVNlKv18r6WrzQyjZb5+/GKxk9YLDR
aGn6jkZLm3kx2sbMgtGHZm1rbG9psISzbsiCFpmn8dfJ7BicTNaQ9GTrLNKs
ueXFTC5k9Bj9vQH9rtmT5D4mn1xgQkur0z1s6eEb8NDUt8X1tG8XvoZytznr
XORyCz1suNKsh+5bsv+tXGjhNVqcTvUq1TYLLbTAhFaulfhuqocXOfMaG81e
vbrnU1mQ0Ut0Zg0Gtvac6mGql27QJwavWlo02duWDqR1p5kzzRtbWmiBCaaO
LY42109lPi1PtJ41oweo/qdadI2Taz3cOuM4yQsJXlFPl9SRcqjRgbT3kvel
3oRmkqafT+LYIqc6yVkLbKSzRn3QU96HzvUCS1vacuHfW3p1fd3SaQmmmd/2
UNxLZvCkFjX7meirFv9SHKP+ZYFXhrNOYmMyL60zzYW2XHhJkznQNVN8OOnr
b+Dulg+l96Hv/mqfaa/ewL+Gy9aYQHHMnNcsfiPRwi66HqNzWvrhhn5O/AvN
HBZal9al5etP5pYtnZZgL+VTurYW19ymFU1m2MIEg2M3+N+n6pi81zofu+Ec
nPZnK/td9MPC1z+lRQ0Htd7LeF6q8RJcvUErtnqp5TEpjiU1Xftf+tw1d1NP
2srHTurJdc+bNZt+oPrW8PJai9J3MZiTrJ/yC52L5P43aEXD+606mtyyxemt
2ad1X+CY0TAmH3tVu9uyoKTnW2um/UBrt9beRovSdzFZutmrlh8xuHpSK77a
8xbvU79Dc0szawv/m2iANdfTvjX8aHTaDTqHngXQNdN+oP1s1kNz8kV/LnJj
qs9bfoRi6Tp3Nbrd8L7JTg2G0P1s+d+Er813T/IsrdciX1pjfgtzzHslfWX6
+aSPMDxIa7TIW1rZsuELw1831MtwfYt3DB8ttC7FWJO5LXiW5mwLj3DymvKX
6YfWemhm1fIRdP2G681+tjSMyfAX5wULvdSql/Gka44zM9ji/aQn6T60eLaV
lz515n6yT0yWYupL72/84EL7tfaW+vfW2kz+bJ611khmT1qZQEvzJ/ySzGCL
95P3ovPY4lmadb/6bsv7rHWO6ZPWWRKt7wLTFufyydpMLy18VivDT96dPmud
BZl60d476fHNuQbdE6P56TwmusJwTesdF579qT6hPEW5I3n3FqYZTKDaj+JG
CyvomS/Vga08v+UdqEZqnVcandPirwXfGT2wyDfWv5FI1pm8o5lNqqme4oUW
DyZ7YnwZ3cN1zml+G0B7oHXm0pprii1rfqT1MnndDR6f6uT17LfevTU7a39t
nkUx+aR+MLor0XuLTGN9vpmsIfl3k5WZzKSVWxr8Wcw4rdcir0t6YHHdwreW
Bl68u8koDI61eu82nH+1nnWeabxzyzeZDDCpe4LVhi9oZmJ0O+VWg410xmnf
0lqYe649/lqn0dlf5BuG083Z36L33uV6kWe2NJXhU5rFGaygv4dJntvy4xS7
zP4n929hcuKhjAdv+cpWHrLAHNoP5gy69Y7084m2NHN3wxmQwWeKb6aOSU3N
Hho8obNsuGyRj7Wwi+IV5cQWZlL/0rqn+fxtOq3Vhy3co32YfH5x1mw0yVPX
NLM1vU3ner2HC/9Lucxw7kJXtLx/ghutvqKZA9WHyT0XucdJndbqQ/P7CsMd
yedNtpnML/VBN1wbvkv23MxCCx9anEhn3+Dqyd+WJPObeP9WHpX0iZm1p/R/
K/Np6TRzz5anS9ZDc8UEqylftPr5hiwo4SzD7+uz7/UeLjSqydhfPbe1ntbZ
Vuu8pqUbb9D/N+s0es9WXpqsx+gfc3aQYGML005mQa2zjBbXt/CztYdJTxoO
ohl74jFbmNPqB7Meg29m7hb6f6FzWjrN8G8rL6V7bvgo8cgLvXfztTnLoJjf
0kInNXmyfvNd4yupnjHYQvuBrsfg20JLG/1/s04zWErra+q1yBla2d0NuU1L
3yZ/tA9bWuspTU773+iN9fm1wZZkHmkPLLjP9FILQ9b+3ei0VlZP15B426Qn
Tc6wyO4WmcP6mvo1ozOp1r1Bk5v9oTN7m5ekvjjBk2S+zOyY8wWTUZ/Ufkan
UY6gZ7vJnlCv0fIgrZ5p4cDN161zCsoRhi9amtzkJ/R3BYusvoUta/1gNIDR
cnSW17NzUqclnLuYl2Te6TkFfcdWzyTcusgk3/Gang2ZrHjBxUY7nczqFzUy
zzXnhsnsJD2QfD7BmZvnN6nRU/OS6DfaD4sclerSk5nku1+3spEW5rRmuZVX
nMT5ZM8Xv204mTMn9aXr+VzndzEvrXMBc7ZI+8TkDHRPbqj7+ppqqpZ/p7Vb
n43efJ30PMXVpAcWObPJE1qZxrtfm3kx827wlj6rlWnT86wbct2TWmLB6Unt
klovNO07ZgWLc/NFhmy8Q8tTvEt9WzotmRfjoQzeJjO44HFzz6dy3Zu1RGtP
zHmQ0bR0Ft6lLi1tvNDMixzJ/N7gtvqu56Wl5WhGZ3rD8HjCjzTTuKEHntIS
a+5rZTuv/p3q3nepi9E2xu+b9S/4K8GN2+q7nhe6t2amKH4m3GT0Q8urrnHv
XbTEGt/WOnNxFnlDXUzOmeAD7f/1DLY0yTvqOrNm44MMX1P+ojy+yIs+J5w3
WmIxI4nfN3NBMSrRIbf9tsdwX/LdxfpNn7T68Lb6rtec+C/zXZrLJTqk1Vef
67nPWkus81LK+0l9W9rDnH+t62K47+Rvt1r3XPRhq/du0ABGJ7dwvqU9aF5E
OeXdz33WWiLpnzXXGAxsaY/k3W/wROvf6rx6VrL+pL7J75dafbjuvae0mZkL
g9umV6lPT96L6sMbcPgGLbHOw9e/V6S8v+irk54o0V0tDlrjmOnJ5J7r3ntK
m1GdbOq++N2mweSWr7yB35/SEoaj6VyYfqDfTeZo7SsXGi/JqVq5zRrHqA40
v+la9N7N2qzFX0Yv0VyIcnGyTtozn2sW1MJVmocnc704o2zpDaP/W7o0qV3r
tzprHKO91MqWF1nHgluNNjOYbPQP1YeLzNnsw59aLkRxr4WfhqOTnjR4ktw/
0eevntvCnxt0KcUxuleULwzHmayjdYbYOruhnp1qsxa/m99pUK559flWrvgu
1xTfWvi5yIiMfzdroNxKvUPiC1qacHG9rrXBjZYuWmvFVr8ZHDZeIFmD4a8F
15hc8eZrozlb+NnKiFoYYnSF8b8Lf9qq1wK7WrU2ureli4zfWayB6jSK+Wtu
anG94Zp399cLXjB1T/RASzNTDGnpiqRnku8af0r3c91L1Ou1OMJw3w1niK28
xVwn89viphZftLTfO/rrk9c0I3q1b+Y+Jo+ifsT0j+lJ+l70TGTRqwmv0bmj
HEHx02gY49HWc9fSftSLndRya559F3/9lC9oYZfJKqn3T/wIzXtb3sr01YKz
zLXhYsMRFE+o9jh5hmhq3aqd4aOFllvzbKuHb8Dtk7xgsjiK5y1vm2DL2tPR
TMPwy1qT0HlfZESmP2mvPnWGuMgijL9Yz77BZ7MPtIfX/vrma6PtF3hO5yJZ
Wws/jVa8ra/MWUkrI6L5DMWTm88QjWds+YtFPtDSDPQzi7p/TllQgkutfTN4
bnTjwlMnz1pkSk9pgAWnU442GUUrT1ucIRrPaLyk6c9Wb6w15G056m3XrXOT
BZ4nuaLRFS3tfZuGb71L6/wx8TsLPDH5kpmFlu9I6kK95CJLX2sM2m+ts+M/
X+f43MLzRd6YfN5oIZP93nBtMlvaM0/NYIv3W96zNVNUg5nscXGfloei2eOf
r/9/NaKzvPB6Cx9qcOBz6reEr2nPnDx/b2kY817UQy0ynFbWQfMomsmb2U+8
5Ks63jBrt10bT9rSP+Y+a034ufYbzWSon1qfv5/UMK2zMKOl15l/cn+zTjqz
Zm9fvfs7+vQbdGCyn1T/GB1ltKXJmt6938zvKJ7yXO+oYQzetjIciufJDBof
lKyfzr7p2xvm8YZrMwuJLmrNl8lRE01Is6Z37De6ztb6T2ZBT2kYOmvUf7X4
wpzfGR+08Pv032/IJG+4ppy+8LwtbZz0wMnr2/qNairzOxOjH95Rw9BZM583
mT/tVaN5qAZo9Sc9IziZSd523eJ32uctbUy96kk+vaHfFufstNaJfnhHDfPU
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
Zm16jM5vUrtPP/O/k7Bgxg==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztnDGrZ0USxQfF1QVjk402MDNa452HiakwppuM4kaCMAbLBoIGJmIkforx
gxgam+y3kI0EHTB4Scs5c6ru/9SrE1z5z+Peuqe6un9dXd3Xv3/02ZN/v/Lo
0aPP3/j9P0+e/ue9Z8+e/vfDv7z4xydPP333H5+++vvPL/+4Xvz+9f8f3H31
08d333z/+t2P//vi7p1ffn78/i/fPT79Hbmn6u/ss8rv03vZ36zNDm2sHeT+
jnZTYtTRl6riWKXTIb5uca8aOx2sUO7v7sOsth+eP6eu07Ps39l3Vf2+b//r
v735+K23X7v79l9//SfyG9F8ur9KG2Kzoz3Zdut4r9KX2AuJu6LTLb4OcVf8
6u7zSly6+zDiy/0YneaOk/2qPI1910k/+xvpz0i7VcWI1caOLyReHe2G6GTf
q/SljkvJsd3i6xB3xa/uPq/k+UifUfow6yPyLPsuJP9h5xrkfmXuRt5bNUcj
+k/PsnxQ2v/KvJrVz/aN7kupFznEt6Ofd7dnVf0EaVulZsLOHUofroq70lZV
63el3li1rlHmLCVeCh865uVuriprSQd2Ibkxe393fKvGy5Xt2XE/28fY8dtR
a2L7A5t7VLUVu35H2kGpD7DzdVV/Y+N1ZX7okFcr+dWt2KXMj7eKb8d46W7P
qvqJ4lcVw5VaE6Lt9C4lLh1tpbyXHRene5QzAMrYV+aXqvwQ4cCVeXXVHHQl
uzrWR7eKLzteutuTHadKHs7OFx17JWwf7l6bV82t7LxWlVN1rMWUWlDVnHJl
ftidVysxQnjVza5b8b+7zqOsxZSrY2wqcxzSf6raRGFOd99m+4ny9yr+V63F
lPHIaquq/yj5Iau/o4+d/GX7Ycc4PemfmP9X1bo7+oAyNjv6TAeHWd+7Y8H6
zvYZpW1Zzcjf2TUyMh7ZPKFjf5Bt85MvyLNVZxU65tDufGli/t8x9qs4w/Y9
tj8rTOvgMJvvKWOH7c9KvYvNMaryanbtdnqXkhsrGk42WT4ofZ7tY2zfU+qx
VXPidP4r+X9VrbuqbyscVvY4lBo+O0ZY35E27M7H2DGo6FfGl1I3Zn3s0NDB
B7bPK3kRy0BlTFXtiXTkS875v1KPRXyvGvtVHK7ah0ViXZXDKHM0O74Qm0pf
Yvd2lfuV2g7S/uy6EtGgsILND0/PImOnKq9m97vZvq3wX4mFc/6PcBJpH8SO
0geQ/snaUeZ3hb1s+yi87c7HkFiwGpT9XyWv7qiBVK37OvhQdbE1OiSmVWsN
tk2q8iWWRR3xZXMYJRbKHM3me0qbKwxkx6zSPkjclfuVdZzSJggTlN8n39lY
KDUQpRZalX92879jz53N2zv2xDtY4Zz/K2Oqeyx3M7nqXVW5ZVXfYDUjtQtl
vCvMrNp/UWpxJ786NFTln1fm/4i/iu+ndlbqWgrHpvBfmU/Z/lY1lpU+z/qu
vEupVXb4y2ruqBEpuTQ7BhENbNsi82DH/ez5KCQWbvxnfe/QwzKnmxXdviDz
oDKm2HwJyf2UdrtyjdaxvujoJ0i/rToLoeRISN9QcvWOvUXlfjZGrB0H/rP9
5zQWqvRUtcmVXLoyvlV1YCQPZOcdN/53rC86+klHDYdd17P9BHkvknt31CSV
NQtbZ1PWQbfif1WdreMK/6+5lDF7q3ZGnnW239FXlT07ZLyzcyiiQal5Kt+v
sfUudoyw66Bb8UGps3Vf4X/fVcUNZG3e0c5sfcDNflWbXJlXK23IriuV75hO
7aN8e6Lcw84X3XxQ+vaVa4Hwv+/qYMKV9fOOev6V9pU2UerhV+7vszkzYofN
1RH9VTxE1k1u/O/OAZQr/L8m7goT2H5e1c4d9fwr7bNtUlVzRpip7O9X7bFW
7X2wuUpHLuTGf0XDlbWg8L8v7myuonyzkP2Cl+urCkPY/qDM1x38VNqKzVXY
Mat803cr/iP9kz2j2L0WCP9r4151doIdR6cx7sD/7v0CNl5s3t7RH9jcXqk1
sX0J6VdKH0DavGP8hv99bbKZ/8rYZLmt5IQPab/gVs8q/eF0D1vPOfWx7vqS
sg97ZU37dIX/fW2yjf9KbnOyU7V2uNV5++56vsPagbWPzNenNrly77tqT0FZ
53Zf4X9fm4T/+j4a4otSo+ioz1/J5Cn8rzr3deozbjqR/SyHtUD439cm4T/u
r3KGBLHPanbbL3B4F3sp8zj7PVT33kfHt2DI+qL7Cv/72iT8/3P9VXmd0lbO
+wVu76qyWXV+vnvfpONbMGQsXLkWCP/72iT8x2spHXkdcrntF2zg/6k9O863
d+isWqew69+OK/zva5Pw/+X6fHcu1M3M8B9vH+V8o1JLZ3Uietj96451DXuF
/31tspn/V57P6Y4L8qyyX3CrPnMl/5G1XkffU3Qq/rL7v7c6IxT+97XJNv53
fEPkUKM4Petwnt+Z/1fyjW3/qvkImXfYc0FXnhEK//vaZAP/q/hzZZsoNt3O
87vxnz1LcyV7O/YRqs5/Kj4qlwMfwv8+Hx3i62bfmbHO2libp354ur+bvcgY
UdYO7L4w0m7d+2IOfAj/+3x0iK+bfWfGOmvrsFNVt6laXyB1Idamsv/b/e2b
Ax/C/z4fHeLrZt+Zsc7aOjQrdZuqd53eq/AZmafY9UvHGWkHPoT/fT46xNfN
vjNjnbVV2an6lkrh+UmzwmTl+wXkO+KTX+F/7RX+9/noYN+Zsc7aFDtVNXOF
5/f1sGeS2d9IuyHaEP4rtSAHPoT/fT46xNfNvjNjnbWxdqpq5mw+rPw+jR32
bA/bVlV732wcHfgQ/vf56BBfN/vOjHXWhthReItoQPjP5upsHanqe5aqve+T
TkSPAx/C/z4fHeLrZt+Zsc7aEDtI37vy+1b2XUibKPMXO9ewcysbUwc+hP99
PjrE182+M2OdtZ0u5Zu4jjPtVTk2Ur9S5hSlFlS1L+zAh/C/z0eH+LrZd2as
s7aqZ7vPtCs5NjJ3IHZObaXsa7O+s/NI+F/bJuG/p31nxjpr69BZdaZdybGV
c6fsmU92bLLrC3YeceBD+N/no0N83ew7M9ZZW5XOjrxXYbtyzgcZUwr/kXZm
1zushu6xFv73+egQXzf7zox11qY8q+wRIHpYtiN2kGcVXincQ9ZNVRq6x1r4
3+ejQ3zd7Dsz1lkb++x0+8p+RAf3qr5BZjV0j7Xwv89Hh/i62XdmrLM25Fk2
/3Sz370fwY5N5dtkxc6V4zf87/PRIb5u9p0Z66wNefZW9Xxn+1XcOz2LfIOc
/B+/wv8+Hx3sOzPWWdvpWfb/V4PYd9gvUOxXca/7cuBD+N/no0N83ew7M9ZZ
2/2rg4fdvrjFMfzHNYT/c+PrZt+ZsQ9JG/Is8tvZvnJ/+I9rCP/nxtfNvgP3
Nmg7PftQ6/ns/eE/riH8nxtfN/sPibHO2u5fG+r57P3hP64h/J8bXzf7D4mx
m7VN9z38xzWE/3Pj62bfjWPRhj+L/J7ie/iPawj/58bXzb4Dx6IN1zalns/e
H/7jGsL/ufF1sx/G+mubWM9n7w//cQ3h/9z4utkPYz21bfMl/Mc1hP9z4+tm
fzOXnLVt8yX8xzWE/3Pj62Z/M5ectW3zJfzHNYT/c+PrZn8zl5y1bfMl/Mc1
hP9z4+tmfzOXnLVt8yX8xzWE/3Pj62Z/M5ectW3zJfzHNYT/c+PrZn8zl5y1
bfMl/Mc1hP9z4+tmfzOXnLVt8yX8xzWE/3Pj62Z/M5ectW3zJfzHNYT/c+Pr
Zn8zl5y1bfMl/Mc1hP9z4+tmfzOXnLVt8yX8xzWE/3Pj62Z/M5ectW3zJfzH
NYT/c+PrZn8zl5y1bfMl/Mc1hP9z4+tmfzOXnLVt8yX8xzWE/3Pj62Z/M5ec
tW3zJfzHNYT/c+PrZn8zl5y1bfMl/Mc1hP9z4+tmfzOXnLVt8yX8xzWE/3Pj
62Z/M5ectW3zJfzHNYT/c+PrZn8zl5y1bfMl/Mc1hP9z4+tmfzOXnLVt8yX8
xzWE/3Pj62Z/M5ectW3zJfzHNYT/c+PrZn8zl5y1bfMl/Mc1hP9z4+tmfzOX
nLVt8yX8xzWE/3Pj62Z/M5ectW3zJfzHNYT/c+PrZn8zl5y1bfMl/Mc1hP9z
4+tmfzOXnLVt8yX8xzWE/3Pj62Z/M5ectW3zJfzHNYT/c+PrZn8zl5y1bfMl
/Mc1hP9z4+tmfzOXnLVt8yX8xzWE/3Pj62Z/M5ectW3zJfzHNYT/c+PrZn8z
l5y1bfMl/Mc1hP9z4+tmfzOXnLVt8yX8xzWE/3Pj62Z/M5ectW3zJfzHNYT/
c+PrZn8zl5y1bfMl/Mc1hP9z4+tmfzOXnLVt8yX8xzWE/3Pj62Z/M5ectW3z
JfzHNYT/c+PrZn8zl5y1bfMl/Mc1hP9z4+tmfzOXnLVt8yX8xzWE/3Pj62Z/
M5ectW3zJfzHNYT/c+PrZn8zl5y1bfMl/Mc1hP9z4+tmfzOXnLVt8yX8xzWE
/3Pj62Z/M5ectW3zJfzHNYT/c+PrZn8zl5y1bfMl/Mc1hP9z4+tmfzOXnLVt
8yX8xzWE/3Pj62Z/M5ectW3zJfzHNYT/c+PrZn8zl5y1bfMl/Mc1hP9z4+tm
fzOXnLVt8yX8xzWE/3Pj62Z/M5ectW3zJfzHNYT/c+PrZn8zl5y1bfMl/Mc1
hP9z4+tmfzOXnLVt8yX8xzWE/3Pj62Z/M5ectW3zJfzHNYT/c+PrZn8zl5y1
bfMl/Mc1hP9z4+tmfzOXnLVt8yX8xzWE/3Pj62Z/M5ectW3zJfzHNYT/c+Pr
Zn8zl5y1bfMl/Mc1hP9z4+tmfzOXnLVt8yX8xzWE/3Pj62Z/M5ectW3zJfzH
NYT/c+PrZn8zl5y1bfMl/Mc1hP9z4+tmfzOXnLVt8yX8xzWE/3Pj62Z/M5ec
tW3zJfzHNYT/c+PrZn8zl5y1bfMl/Mc1hP9z4+tmfzOXnLVt8yX8xzWE/3Pj
62Z/M5ectW3zJfzHNYT/c+PrZn8zl5y1bfMl/Mc1hP9z4+tmfzOXnLVt8yX8
xzWE/3Pj62Z/M5ectW3zJfzHNYT/c+PrZn8zl5y1bfMl/Mc1hP9z4+tmfzOX
nLVt8yX8xzWE/3Pj62Z/M5e63/Ub++ke3w==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1TFqAkEUANDFQMgJ0qe30jorgZRWeoIVTCUIWoR0uUFukGPkFKlsPUSK
VApCFCzSWAzO3wzmFbu8XXaHP//Pn7mbzEdPnaqqljf726h5flgsmpfx9eFh
2sz6vdnVnq/H6+CP7m39ttvUw/Xj4Gu1HHzuvu/r7Xt96n3qN6n+PWZqbKf+
TZ1LqnPlLdf40fVKHSdXHaPXVa61ETFmdK+dk6uS95CIOHPVJbrfo9dhdB74
/Jy3uV+1WdPofTsiTr32f+YVHWdpe/5f5YHj6lVCPJcas14zrzbPghLiZGbm
ds6CEuJhZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZubL9g8Zyrvn
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "1"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1iFOQ0EQBuAGEoLiADgsklqgQWFQxeFKQg1NSEoCwXEHbsAVUJwAxUG4
BW1AIPvydpfZfZ9o81X0dWd2dv8eXN9N51uj0eh+d/U2nT2eLZezp8ud9Yeb
2WJ8tNhe8fn3tfb7/HbydTWePLx+nh7uvRxfzD9Ozt/2J5v473dzu+va+tSS
qvauv7XJc/r8Vp+19Xl+tF7l6FvXNaeazxw1du1tqnXm2KMcNaba01TnLkf/
o93/0bIg9wyn6k+Ou7fk+kvOW6q+lcyC3DWmyoL/2qPcNdaSBTWex8hZUMsM
59jrCGcwmktmQYR6a9yjoWXB0Pa6ZBYMwfoQMwsi1DhkR86CCP2JYPd/mZnn
8lkQoS6OmQURehLN7n+OYOe6bUfIAs6XBRHWz23YvLXtklkQod4arc8cweat
befOggg11m595gg2b207RxZEqKsl6zMz15IFEWpp1frMzJGzgJmZ27D//MzM
7M5nZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmb+8TdhK8Uq
       "], {{0, 128}, {128, 
       0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "1"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztmrHKtVlWhAcFMTEUJ/UWFEOnMTbruYIRFYUBYQTFSBNvZoxNDB0QjLwP
EW9BZ8CgRc9QTz9V+92n/xP8ze7D+d6z99prVdWq9f72H/3F13/6K9/73vf+
8td//p+vf/TXf/CTn/zob374a7/4nz/50Y9/93d+/Ks/X/7d//z7xfpnP/vb
r/7qn/7rB//5h3//g2+u//g3/uX3//X7//iDf/+zf/5f61ffN+vkt8wekmfS
Nd0b3X8rDuv9m7iZ89L9LPK8dcZWPFt3sc7Dp3L+ZJ6v49/a/z/89Kf/77/f
+vqHX/3bb37/q9/7jz//6pvrb37HYH7yW69+N9kDPVeyZ7q35B/dM32OiW0r
hvS3Xn0/+ZyekeY5/VsTW5qH5i7WeWjiYHK+lYcUKxbxN/f1av2KF5LvG/xM
fuvV95NaeMV9yTMTbk1iuNCWVMOYHEhyY6Fpk99KztXKcxrbtT5c3MUiDxf6
ef38Flac7BlP1v46Difz+RWHJp/T3zXakmoYw1kmzkbTmlpe53aiK1o1Yu7X
aEJ6d618bsWkpc9pnre8DtofUYxqcZnxgl7FoYUtNJ5JjSefJzFZ+LctDWZ8
khYv01pexMf0s60aMXEzmnChz1ucuNalNM/pd1rxN3n76pmt/KRxoM9p5XOi
nWg+G5+qNY+gGmzRC1NeNhqg5XW31ia3TdxaOqSlCc3eTt51gs9rHqS956Lv
MPm5wFWqc4w/8OpcNG7UP6Ges9GKpt4XZ6SefGs/VGOY+mppCbOmXlarZ6F7
W9SX0ZOt/pHqOprzi77DxMTgqvEcTNxaOWk820TrUk6ncWt5awkmtPpcun+j
b2k/azSY4YKWfqCasHXvpr5oHBLuppxI+2WTb0Zj0ByjeNvqrYweWHibpo9L
cMzE2fiKhitbfQr1LgyntLwg2rO0/DfqxS16FqOrW9xk+HfBR0kMW7lH/QrD
Weu7M5xFednE3NzLot986u5afcrC26FeB/WCTP22zkg1huk9TXyo/29+l573
qbowuUd1YOuMi7ujfUerT2zx7xqXkjifvLtFP5jkA/Wm1lhKf9f4aQuvfsHF
a8+5pcdMrZm6aHEQrf1Xf5twU0u3G+3a4nf6TLo+iUuLfDPfp5zY6mWoB2Jw
wOQqxcOWL9HSJ6bXNr9lOK61t1ZdJGc3/UKrp6B7pndHvTLD7wucpzXewiV6
R+bujCZP9AbNB6OdDJYaLlucxezHeHFJnpt8pvzY8qPWddHygRc5nMSKaiHj
QZ30Zxbrk75u4hUYHWv0dis+lNOpf2KeSbnPnIXmwKvfNfdocmPBlUabtc5i
erqTujTJpcUMwujedXxa60RTUVyimmqhjel3KAa2+vqFFlr3HfT7rbkYvcdW
7i08dpozCz228OXWWnThdbfifAOeG12x8HXNTMTMT00vnGgD09cvdHXrmS09
YPxzmsOmTluapFUjtD+ivGPmek9p0STmtEcwMV/Pd06uT+rPxX4o5j/V15s9
tHoco3uNHjA438KQFr8YLE1wdcEvxt949W+tRZP8ebWfNacv5jsn1yf150K7
tvDqqb4+2UOrx1n4IZTvbuhnjY41WJrgauKXtvxto3nW95vgpzmL4fSFTj65
Pqk/6Qyd+rotb+pkX5/4ja0eZ+3D3Nzz0lyiGsnkakvDtPqgRPOs75c+f82J
Bidvrou1/qQ12Hpmi3MXff3Cf255XOvaOZnPVDO3eLOV/zRnEt9jwSmt+23N
I765XnB6S8vd4AUt9CfF9oSDKF61OLfV1yf7bPVr9DsLjH2q56WeT0vvUR1I
MY3mvOlbjQ5f6E/aTxm+a/X+9F6eqhGKS0Zvm++3NHZSdwkntvRDq15O+pDG
9ziZ54u6pvMUmv/UY2nxDu2JTupPyhctf572IzQ+71IXRm9TvzH5RzV2q0ZM
r5TEyuhtitut3Eu4dY0hND4tj5HqOhMHWi9rHlzrz9YZ6X5oP2J+6+a6oNqj
5RcteopWjRjtRPHE6G0aq4VuWWMIjY/B8Fa/s7i7lmaj+rblqS68tZOa2WDm
2hcydZGc0cxljE5OegoTqyT3Wrlqnp/kXsufT7BioTFMnRrN0Op3khia3ral
2VocuujLqCe21swGM5NcfaouTJ7QuzY6+SSHvjpL8jm9R4qlppc3ej7hggWG
JHeU/DM4TOvL5O1as7X67hv6sqc0s+lrXuVVS9NSD43myUJfGV5ocWhydhof
2ivR/Kdro0tbvujJ3KA+pNGllBNbtb/IVcqtT/Vli7WpO9oPtvxSMwM1usLo
K1P765njWsfS3nCtyWk/ZfJk0dcbXjC8bL5jMLDlUZicb3HHGjeMZm7pH/p5
Kw40/i0MfBWfk5hMOTSJidGxCTdRnGzlZNJPGcxp9UotXqDenTkj9UwWHg7d
w4Jnn8INc16jf6hvTJ+/1kIUA1s4bDCZcijFzFYv3KpZk5O0V1r3qut1C58N
zlAeb/lIi57LxGeNG+segfZ65h5bcaA+VQuTaS9jvOUW3hr9T+e5pmYXOUnv
+qmevZWr6/0b38l4OE/NUp/CjcW61eeufWOTk604GF2a/G2SDwZvafxbngyt
WaOjFljUyu3batbs/1Ue0jmaqdkb9PNTuLFYt+LZ8o1b2EU5JcHkRJdSjjOe
9lO9v9lzcncLX8I8/wbMeQozE+/aePi0H1x7PuYuFrixWLfiaZ5j9CHVEslc
0uAt1UiUBxczgoX2W/jwLW6iz78Nc+h+Fvs3sW3p29s8nwVuLPbcwkzznCRu
JiaGd2guGa+y5WPTOjU8kuyz5cNT/qLans4ynsKctWeS7N/Eds19J/mXajka
H6P3FlxG841yYvK3Lf3cOmNLL1HNkMRq3WMuOIs+x7x7QDn6pDZb4KHBzNa7
CgvuO8m/pk6feqbhssS/avkbNN9a+pme0dSm8UZM/7Xop9Yeb2vmS981on7j
DfPfk89JYnsDJ655tvWelXnmwkMzc5wWbhsd3sIN0yMbn6QVk6e4uIVRi3m0
8fkpt36X1jQOT3HimmfXWrQ1q1rcacuvoHhFe9undBHFoiQHTEwW3HfDrO0G
HWV8xXdZG21ww/4X67UWpc80Pp7xGehzqN9ufOMb8tD4JJQvFvz1LvhmYtua
pye93g2xaukW2kPdcJZWLS+0aFJfye8mv9XS9q26ox4snTuczEPjkxheW5zx
HfGtpROSGrxZeyx0S4JXVB/evDbvWdF8MN9f3KnxqVq8Y/qFG/Aq8Umofli/
J/aO+JZoMxNP+vnNvVJLt5h51g3nXecb9Wxb79ss7pTO+Mw+TU2tZyUmNyiW
tvosWvvvgm/0fSeT262++F00sNFyCea/CyeafKP62bwHQnOV3mmSw4vZIs2r
1gyilRsUb2lsk+fTHsrg5w341uIF6m/coD3WmvZVHEx+3pAzrXwzGGiwN7kj
00cs5ozGa6IahsbzpL6ivGb6IPPey7vjW0u/tfrid4zJYq73LvlD6/qpZ7a4
JuGXNQbSvGpx2Vpf0f0Yvmj16U/1VjfoN/odyi83xMFoOYont3mJrbpu4WTL
81/fO/2+8e2Nd7TmsiQ+tHczfGFqc6EDb6jTtXai/HLDeVu4R7HoXbxEinvU
l6bPfMe+ybxrQZ9pfMVFvhn+otrA1CbVGMl5b8i9Fo4lOUO1xDtq3cW84x0x
7eSdLnT+yfWCvxKf9gafx7xL08LhhR+Y8NHN+LaeMdF7f5daTrje+LTv6AWd
vNN34ceFb2xmSSd9HuOTtHC4lXt0Xmz63xtwzGAX9SRv0Cqmrk09Uv32jvnT
ulMzC3iKB1u+MfWOzHdOcrSZlyX408o9My++oTYXWsLMN2/QKqau6ffNu803
cyKdzdE7ve3dlQUGGo209jQWHL2el1Ed28rtp3jW4JjxZ1qYdoNWWdc+fVct
0Tw358+rfbbu9IY4GAx89f3FXCm5RxPPxbvThivXmNPq/W/ApVYfSjGN9hS3
xXChGVq8eUP+LHDs5pmR6VNaHkjrHheeeYuPjNdnMKeVq0/pFhq3tVf/aj/v
ooEXmsHMlW7InzWOJXl4W26sPRCK20mv8VSsWp5zEn+qHxa5utYtxm9fePVJ
HFp93A1529L8lEeeyp8FjtF+6oa+oOWH0HtZ4MBTuoKuqT6hMWzl6lM8m2Dm
Sa/e5P8NWoXqN6r5Te/8VP7QOzIe0c21Zu5oMa+k97jm0EQHmrXBkKRfMH3u
SR+DPn/t1RvMTP6drN/WbGvhrT2VP+aOTE+x9smf0mkGq41fcZJDzcwxyYFW
Tpr+96QXtJiRUY26eB/AxH+dt+ZeqCY5yXGtu6b8TmNO9ckNnmFSX+ZcCc60
etjFeem5TM2amLT4boFLJlbGq0+e2cKop+q0pSUSnD/pabfu2vgzCUckuHRb
P5XsjXoIRjudnLu19kxrJ6nTVs4b/Wy4NTmX0ZM0H96l1zZcY7QE9TTWmoFi
deuMiz7RnPepdWs216plqp/NeVv12NJFLXyjMw7KrUkdGT2Z9EELnfAua6ol
qK5Ye9otPmrpUlPLpl5u6CVbuJdo4Kfmbq3nLPiI+lEU3xYaZt3fteYdN2B1
a01xg95RUsstnqV3vdDkT81rnvKFWhx08u4MDpjeec0jptem/ifVJ4bHF74B
zc8Wv9+2pj4kvSP6TovxPcz7JDRnnsqBtS96koNO3p3BATMbor/b6h/pzOUV
vpnZgeFxysWLPKccdwOeG8yk2E61RwvrWjO+Vn+6zoG1L3qSg566O3PGBBtb
cTY4lmjUlpdCuYOuaQ1+Cf58C0OMPqd3ZGZMyd5aOoT2pyc9loUvepKDzH7M
3bX0npkTmdiu9WfrLmh8aNyo/3AD3t68PlmDlKNpr2F0mqn9Bf60cInGbcFB
yf6NhjT6pKWdWrlxssdJYpvcBc0Tw5U0zk95szevW/duapzOTw3uUW1s9rP2
WBYzygS3je5qzW2NR7HWTvQu6LsQLY2R9P4tjms9h+IP1U5fwrp17xQ/zbzM
zIOMXjXexcJjoX4m5TKDz0ntm/o1sV3MBKm2NPOLV89vaQyTw4s+NNnnU77r
d2ltcIz2dE/18lSvtnJ1gT+UQ03/u/DHFh6v4euFbkz4zvBXS2NQD6cVK1O/
SS18fJ7uvRseafURi3pZ5KqJD81/isNGaz2FV60+66RWNPlP+wjKg4aDWjFp
aY91T/RdWi/u3fh7J3v5hWfSig/Nf/ocqoVaetvgldEnLW1p7rrFX0l8DF8b
DqIxaXllRjfegMM3rM29r2Pe6uUN7rU8E+qTUw1JfXU6i78Brxb1S+NjNCp9
ZksX0X2u/TGqARY+7ZfsCy180UXMTS9Pz7LwTBIMp880M5fFjH6NV+v6Tbh1
ffZXtbnouW7wx4zOoRy34LV3XBvtR3WyiXmiXSkHGXwzOGP8kCQmrb6YzujX
eEVx7KkZYuvs655rPXtt4U9LeyR7+NK8IKNPklwyMafYlXBQUgvJ39K8Tf42
8ZeMt9bCkCQ3Wr9luK+FPwk+t86+7rlaM76WP0b9T6o9ku8veO3mtdEn63cD
jC+xqIVED1M8pGd8iqNNbZrfopqB6nOK1WYu38p/03OZHoHms8nJk/qfzkHe
3QsyOEO9gkUvT3/rpGZO8LDVcyUcTTF8UZvGJzT4Q7GUavi1Plz3XItaS+KT
vJ+w1v8tfXgDnrdyzOTSupdf57bh/ZbGo3hOMYpioKnNFt4uYkJ7N5oDJh8M
rtJePtmz0TwGQ1rYRfXSoq+8bZ1wqOnf6R3RmLdyO8n5tcfV0mDJ2ZO1qc0E
YymPUDxv9Xot/UOxiM4dzD4p9y0+p/xu+kRT42veX69b86kWv9B7MRqvpTEW
Hpfpd9aYn9RmgtUtz5zWaetctK5bfUpy13SfC71NP2/tjXKW6U3M929et3h5
3csnmNnyMFvPX/Q7LS6g+1/gBsXGltZd6x/Tpxjeb/lyiZZLzpLoBLq3hZ5c
+AlGE962NnVhenmKgS2+Nt83sTX6jeIDvccWbtBnJvhAuWOhf6hmoN7L2pcz
PpjptU3etnqu1hmNJrxtnegT6kUnuW36SsPX5vtUk7T6HZO3tHaMn9OqL6p1
6b3QPZs+otVDGV+OxrDVa9O9mT7O6IoW596A58m6xXFGD9C+kmJUi98prhqu
WXhEFBOS3G5p45OYSTmX3mOrpzB4nuRkq/dv9ZimjzPYZXqNhfZ4am36QcrF
BsPXmq2Fk4YfjUdEscj4rsZjP4mZFEPoPKXVU7Tuzuj/G7xxeqct7FrMjG72
giiXLfTDuqdr+ULr3pbmicE9w7lG1xnP1nCHwWfqQdGeYnF3VP8v9DPFWDOX
Mdhl8vldcL6l2Vr6Ibmjlh9lfB6j/Rba2OQh5anW7MP0iS3MTDi05WGaftDc
neHQk7rO9K3GP0yw6x19mzUvLLij5f22/L2F9ltrY/pbZu5gZspmfmcwM4lJ
y8NsYVfCHQl2JRxq+NFocqolqP/Q0ufvoudvWC9itegXTI9gMLaljU9ijuFi
yhctHjfxWdwLxU8z6zHcbfjxKY13A+591rt1K5cMtrTmaxQTWnm+nuUZX8Lc
9WK2SH3yNX6aPdNnUq55SuMteuTP+p616fVa/j+tzSQ/TW0afKNY2tJsi77e
aHLqz7fuheInjQPVMDRvTR62eH/hAX7W96xbPf7aN2jN+FredRJDU3dUs7W8
L8oRSd9H92NyY4GftPdc9MKUp4zGa+mQz/q91rTHp3Wx7h9P5m1S40lPneAY
5Vla+xQHkmfSHsRgtekZE06hfU2rF27p6gW/fLyg78aaYjjN/3WeUw289q6p
/9OazSUxodxhOKKl/5N3byg+Lzilpe3XurpVd2vO+qx3a6ptWu9FtPLc+EsL
73rRXxhPY8EvRgNQ/W8w2cSfckpL29O+qaXxWvH5eEHvtW5pUaqHF3me+Es0
b6kP/9Qdmb2Zdz8We072tujvzPzdaHvTixmNZ55DMeEGrPusc21j8OTkbGuh
e9carHVHLd/V4Nt6z2bGYXwJ8/xE2y/ei1jEkD4z4Z0bMPBLW6/zLdHVLZ/Q
zOOS77S4aXFHrXgmWN3yiOieE05/dRbjSyTemokbfQ/NcLqJIX0mzYEb8PBL
XrfyjeIV1VdP5dgNuqU1MzUagPrSrfdODUbR5yzee2zxOOX0JG9fxTDpU5J8
WPeqn/W3W1OfxNSywZBk/0/5ISfvKIkP/X6iAZLvGP6l90hzybynlOyBfqel
c1p8SnsQul7w2me907HGD0wwx8y2bvBD1rolwagW/645McFk0ycaX53WxUke
b2mAVi+znl98vKAz65ZOo5rH3HvL2zF+SJLna91i9D/FT8OJlOspJlO9anLs
JI/TeLZ42eCGmV8YTvysvx1uUJ+E6qiWFmp5Oy0/5KkZ1smZsuFEg0sLr8nM
hdf9HeVlms+tXsb0a2a9zv8vYd3y35IaT2pk0Ye2ekw6t6Ic9C5rw4kUY1s+
tuHNk/0d9V3p/g0vG9y4Wed81r8c9ygOm9xe3zvtMRMcWGja29bmXQ6DUQnv
LPQ51d4trGvpGarJKb8bvXRDPn/W//eu1x7LST9kwV9Jzi807Q1rOtej/SDV
vXRvCeeaPbS4pqWLaP9O40D10jtqnu/q+imP5aR3SuvLzAgo1xit9ZQ2MHhL
OaXFy8lzTD63MPaGmfJihvXumudLWy88Flrviz0sZgQJdyy83JM5sPBtjFak
/k9yLjq7Me/eJJ+fnCmbOJi93ax5Pusz65NeUAvPk+fT9w9v8MQMnrf4y8wT
zXsLrT4liU/CUwvP5Kn3slr8+1l/N9aLOV3yWy3fxsw46HzceMKLezF42OJr
gyGLPsXkT3LGhR4wcWi9l/Xxhb6cdaI9Wl4Q7ccTvDUzjuS3aG2evBeKda8w
xPC1wZBFn5LoioW33/Jbnnova5Ezn/V7rZ/yQAyeUJyn500weV0XRhO+2pt5
l4buOfmO0Zyt9yVon9uaWax5k35ucuazfq819TFaXlBL59A8TM5r+ppWXbQ0
4Ul+TzjopOZsaYC1z0bjb3QRnXHfPAv7rL/d2vS/LRw2c0yjDxfvFLX80pYm
NNxhNLDBtJOaM9EABsOTcyV3RHkz8W/p2ak3ewO+fdb5Oul/WzhMccl4m7RO
zTtFC+1quOmpd0gS3E5yYKE5qeZJsJf6bMkd0ftKzkWfb2rz4wvdv6ZawmCd
0bTU20z8TKOjEhygezOakN5pEpNWL5Pgj5nptLh1gVcL/8doklaPn9T1Dfj2
Wed6LNEqyXeSfGjl4cLHbr1T1Ppbo9lauEGfk3AQ1astzbn2KF7xqfF/kvpN
/JyEQ+l+norzZ+01Saunpv0p9TmNNjNakWLs4m8X/g/1Yeg9rs9ovJHFHMHM
Dsy81fhF9Pk3xPmz9pokqWuq8aivctLvpVoxOUtyLso1rTsy8V/jzyIPzdnX
foWpEdo7G3+P7uG2OH/WuUaiazoDMpjc8nupj021zauaolzTuqNEixrN2dLt
rTxMNGeyhwTTTN2ZHKNa2vRcNJ43xPmz/nYaeIHPxuektWP6CIrnJiatzynO
JJxoYkt1u/Hx1hrY8Ahdr3tkqoVordHfeirOn/Uvv4sFPi845dXvtnSj2QON
eeK3J3dktKjpQVp9isGQli5t5eSCo+nekryingzl95PzrM/62+Vbqzc3HNTy
e+lZKDa2sNdg6VOc28LwJObUizYaeJ2TC81meuHW3dHfepc4f2nrpBdo3dFi
7pDsn/Y7ST4n2Nvy9lu9ML1T2o+bmjXzQZon65xcaDaqB8xsiPoAN8x6Putv
l1ete6F3tJg7LDTquidtef4Lzl3g8Cs8Sc6e6BOTAyY31jXbqi/jeba0WWvW
81mf4YXWHS3mDuaM9HdbPWlSF0l8FneU4ADFYYpj1Osz8xoac5rDZk2fafZj
3i86OetZxPmz9vlJub6FRQYDKUYtvCDTp7fuKOE7E0/z3imdCyQcbXqcJIeN
Vlm829mKf+u8ZtbTivNn/e3WLRwzWGR00ULbJHv4bxIkkzM=
       "], {{0, 128}, {128, 
       0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzNnT/LddtVxa8JhPgxbCxCKm31vljapEj64A2YKihewWCniJBUttapUvsZ
hJAvYJtOsAnpbL0Bi9NMMn75jbHPU+yX/R72s/da88+YY4619jl/9IO//e4P
v/bZZ5/9/Te/+ue7X/z4L7788ot//N43fvufv/7iR3/6Jz/6+len//T/x2/P
f/HT//jzX/3Pjz/9+if//fm3f/m1Tz//3z/89Jd/9Q+frs+va+j1rWvoOR1/
657mPh/B5mYMi3sufL2ISXpPEzMt+7/rPh8tl6m/1jjWwofXz7/+X3/zZ//y
nd98/v1//4NPr+dflYbfeZi/Ncfrs/7z7z59+rdv/fGnf/7Xn31+nV/jpOf0
nmZsiZ2ftPna7/Sexi8Luy3yKImZJ/3+ZFy9K5fpOJPPF/NN4sfY4bVevD7r
9fPrntffmuOqoddzL1slmPx6noztup6ObeGvhf1bfqf3vM4TvyzsZmxi4oHa
4SMfSV6vczmxJ8Ufc58WPlD+ueiVKJZe/n29Z+LHRT/7+qxWj5b4kc7X2Dyx
v/E7vec1tutZ1z2TOE/sZmySnNM6svD7+kjymmIszeVrDMl5Mkd6n6QWJPhg
uNNVF2ivlNiZ/u11n48Q87R2v4454QnJfI3N1757nUtyz2QM1A4J/iSYQG2S
cDNaR665GL+vjySvr+sXY7iuMWNLfJSM7cqXCx+SOKHPvXBswf0Mnr8r5mm9
TuovxcMkVg3eGt8l/Cd5Fs3T6zzJKXpQDL9yisZtwh8+Qi1IfJ1wAzP+1np6
i7ck86Jcy1xDc5zOneadsfM65pN8T3KzxR+S/o7WiAVmJs9taY/JfUyOtPqj
BKNaufxkLaA8n87RXEPX02nvSfEtGf/6nOJDMi8az0+OpxXPpn8x/IHG+bsw
M8Ht6/r1Po1knIlfaPwveOx1zZN9AeX578I3uqaw4C00NmifS/WB1r7chQ7f
Gk9Lx07GbHCA1rtFH2Qw83oWxe3rPmZ/hdFITX9k9O11D7tYJ0ryxexXofiW
1MTEX4a3GM3WrHebvXOJvxLcM/GZ4MkCn2mOmN4w4eom15LxG8xMxkDXPmjP
aDg25dLJsxZ7Tlq9g+kLDM83+yfp+UKvoH29mRd97uIwNm/xbdqzmLhNDqOf
X7lw2eo1fijOUHsaPpw8t4Vjic2TedHxmHe7kvsbTmueS+1JuceTR2IrigOL
Xp76a5E7dL7meqOZ0/VTGtstHdvo5y2+l+CS2Wux0PoMVzf7NOj9zZ785Jzy
q1bvQMfQ0tNaxxrbW738AttbNqe6R3K90SiSz01sG3/R7yVI7G/4numFn6yh
ie8SP9Jcbq2hG9y77JbECeVXH4Gfr2uBiQdTI2gvv5jjQhtsjbm1jkzfKTAH
vWdrnaXFY2nvafhJSzem9k9ixnAMw/eScVKtm/Krj8DPF7hE77/g/0kMG96S
zNHEc/Isw+Xo39Lv7GqN08Rqi+sae1LsWvOTa8xmnEZTpfekuErHafYnJL2e
4UULTE581Moduk5hakQyHqPtUKxO5mLqo9kDkOBPsu+I7jmhNqR4QnUPo2+Y
8SxiL7Gnee+M+oLWteS5Cc6b72Wi+xMW/K3Fzyn+tPRw2u8Y/v+uPDL8h+ZU
EkutXtg8i2KgqZWLfVlmXos9by3MoTllNECKIXRP1OvfXr1nMpdWf0rxsBWT
C3xrHWbutAds+Yjm0XpNmT7XaPjmWUnemfc4aGwbO1Oso/3pIpfNXK5Ypd9l
bTjq65G810/f60n25a41Q6NTtXoH6gt6JFjd0sToWslat2lpti2ufuWU0eKS
nE2+L4vyf3Oe2Dk5N+sdi1xOcIzypSueab7QvGu985jck9qqxSWuv6W5SbGC
+oIeCYa3csGs6S90m1b8tzAt6a/pd2gk9Y7+7kMSz+Y8sW2COcn3qdJas7iG
alCmVhpubGqf0YeTvGhphgaTze96tPgDHTPNR2PPNRcyz6Lxb8ZsYsDk+OX3
pL5QXWXxLrl5D3Stw9Bzg1dJj5bkuIm3ZMw0/hfrKSZuqX2S3tPUGqo9Jrn/
es1iP7mJmRZutDTb1pjp3gbaf9H6mGBR6/shaTyYff4GN1q9DLUVxaiFzQ2u
mnEualMSz/Q+lEcl7zJTOxut0tQRigPJOBf7PcyegeR6M2bT15v7Ux2Aaik0
303vs+iXDfdIaj3lmXQtxtjcrHmZcRqMorXerFNQTLjy7sl3Q5K8pvh82WrR
y6919Va/kIw5iTFTQ69rWp/Tc2PD5HqK5xRDFrlJD7ruudYPk3xPxpngPMXJ
lsab5AXFlnVfs8hHqjEu9KXEnmZsFz4bPExsSG3yEbDIrMXQdb2Wrkv5LR3n
k3a+Yub6W5MXhhvQ2F70jAm+mdhI7NPyEZ2XycckxuizkjEn929p/td4kj3G
9P4LnedJLKK980KjpnFi9gbQmHnSzjQ2TF4s5pVcs+i7DT+n/XtrvnReVI9K
4sHYx3AGw//pOnXyXMMzKc60eNc6Z+l9FphDa1OL/7fsv+Cu17nZO2rmZfoO
03cn+bXWY02fZTRJg2+Uv9F39AxumLG1eF1Sg5K/Xeg8a/3Q+I5qy6050l6b
ciE6NooVFAcSnE903ZZfaL60NAfK2+m6v4kTerQ4SSuXk70NJi/MemVr/2rS
49C9W6aXN3hicja53uioizkabcfgQEt/oPh2zYXyMRM/NB9b/J/ubaPXJJ+b
NU2Kh0n8GP9STYnig8lNY6srL5LYa+1vp7nT4oRGs6L5QrWvRf+bYHtLQ2jp
D7TWGK7bwnmTj9d9aF9vNCVqzwWvTuzW4rc0R+gcqX5Cc4raKuHtV/+S7Nn+
fbH/9znMekFyHzoGqqO25r7AouRZCQ5TTG71SobrXvdp8X+qAdIYS8Zp3h80
e9TpNQn2Un6b2KrFRY2WYjhk4pcEZ8w7IMn9W/lFdUjDDSgXammextem16Ax
39I86fgTW5k+y8RtklMJzrdqUIu3Gz3nOhL+ZvitmW8yZnre+r7Z1poItTPl
My1ukGi5hs/QMVBfJD5taUSLg+qBLe3u8m9SF961r56OrZUjie/oPRc8k3Ib
o7e3bJjUmkRjob6mdqPraC1th/byLZ5Mx2AOs2fJ+JTGZ2u+NOYphpg+l+pL
LV03GafZp9fyu9ENWrpHEueUZ9K5t2xo8sjokEk8m3eRqH5O88L0p9R3C25M
7dPqv1q41MKTlt3M+wi0Pq73LF12S2LGvDO41g0ot6R+pLFE9zi1+ql39fJJ
zBisTvxCNQcaGy3co7lpfEdxifZfLfvTubfqSIKBNNdMr0H5Bs0FioGUP7Ty
wvB/yi1Nj0Djed3vr+1M50u5NL3ecDMTJxT3KNdq9admjlRbM336mt+u85Hq
IYaLtnIhwUC6Vmjygs6XxkPiO6rhGLu1+tbrWPTypv9qYUirDzJ5Z7h063iS
b5hcWHCMFmc2+Wj2KFIumtzT1LvWdx7SfW7X54Z7JDahe8tNjtN+2eQp7VPM
PufkngarW/owjROjf7be6Uj8u+YbLa2VxnyCgaZ2m3yk46f+TX7T08Q8jWca
P5dfTI+54DnJXK6xmb4p8UsrT1u6KI3z188XffFaGzcxc+Vya/zJ9QbfDH8w
78MmNjT1gs7L9H007y7+mXxPSxIzdA1uodHR3F/wHKPbXPds9U2tPDX4+S5c
SvritTbeigeqA5hYpX5vaZvXPWlet9Ydrnyk703QWmb20yY2obidYFTS27Y0
ugQfDIdvvaNt5mj6phaGJ3zM1Mc1LlHcaMUk7VMW3M/MxfDwlk5LOZWxeYID
VD8xGguNgQVO0hyh+UtxwMSGWbuhczRYl/iF+p1iePIsOp4nccnwdhOTSWwn
42y9S0XzdLFek8y9tRZGbU5xJlnLW+xjN+sRdL7J/Vu925rDUFsZDmO4qJkX
1axa6wI0Tj4yLi1iifIlYx/DtZ78Pitqh8U+avMbECavk/pCc4rqWqbnatUI
4zuaC9f1ifZFNRnKRVs5TjkG9Z2JbaNTrXGphaXmfSWD25RvJBhr4pY+t4Xb
Sf9l9lO16vsCe833L5n9TnSclCebXEhisvXdWYtcSOyWrD0ZbkNx2/DqJ3Ep
icMn9SsaG1T7MvXFxHyL17X2UVNMoP6ltWP9XmFSL1o6pxmnWUOkelTrfUMa
2zQHLxsm+7WoBmhwu6U3rnGJ8sBF72b6TbrOYvSNRZ+SXGNquuFp5h0rWmta
GhrlFUYTSOLQcHIa26a+m7Vdk0fGtjS2F++1Ga2p1RestUSav8nn9HeQaW9O
uRbNWaMvmdqR+K6Vy61+fFHXKD60dMJr/Av9n8a24d5mby2tfRQ3WuuGNC8S
+1OtyWC10Q+prkLj3+C/WSN4vd6sgyda8bqOtOxvcjmxW9KP0/uYXvKKE+NT
ikst/T8Z5zUe81sVxl8t/kNtQjGT7u2kuU8xh2K10Q/N+1wJntPrWz2yiduF
TxeYk9gzea7xC+X2CWaamDHrZYsYo3+7eP+OHoZzXvNaYLvZ/0xjuPXen9GL
WliU2NbERkuvuMZJNYTEX3TfVPKshe+ozem7q2vtxfBko79RzDHx3NI3Etsa
HyXPNXzb1AjDS8264WWT5H1tmkeJXtTCousamoNJ3rViL8FSg0st3eb1WNQR
0wdRnDG1gOY+9Rf1YxKrrTGb9Th6veFRybMM305iKXnWYo6vn9McN1pZix+2
bLLoVY1e0eKcNAaMbkP9aOKHxlWLA9A+y3ChJDboetCV7zRn6TipFpGMp7Vm
1/KFsQOdu5lji7O1YsDwQ3P9olc1ekVr7sYvtC6b8dA1OMq7aC92XUO1KcMD
E7+3vgOK8n+zFpbo+abnpdqI4QYm5hf1tIVjlHtT+7R0hlafmORscp+FL1p9
n4nb1ruBF5ZS/knftWzFVRIb9P6GuybzMutl5qB5uvjtgMSPRvc2Odiqp4kd
1uNf4O2FP60+MYmZRa9KfWHwwdSOlm6c2DmJq9aeHxpXNDaudzSSmDHvrlJ8
SPLa3MeMh9YjqtctNEmqAS5sa7Sm1vgN3lLesugTr3G21kSoDU1vS2uH2UuQ
xACN/4QfUu5h9v0mPrrGafbIPcnlWroEHY/R8xO9juagibdkXk/qAEaXoH2K
yalWD0jjLcG0Vq9KMdZwbPruxsKGpnab8Vx60SI2DDdIcM9oFMlzF7FKx0Nx
w9gk6TGpJpnk4AIHrjkaHSMZ/+thfhfjo2mSRsemsZfYinJsGm+LvUkGw03f
ffHw1v6xpP6uc6G1fkH7x2QuCcbSeKBYTedCa2XCe+m8KA6YvabmHbqFhvYR
dLNWLU5yobXWk/S2iV7Uev+9heHmnoYbJ7GRcLBFLlwHXb8wGLWoEYmP6N8m
73TTPto8K4nhNf+nMba2TzKeJ3WzVi1Ocio5TH9ttD4ztoVfFtomzRHzHorJ
hes+rf08Rlen9m/1HbQXaO1hoM+ic6G1m/J/moOU3xr7JNyVxpuxs9EBWn1K
guem72jhNo2rxC8LbbO13pHYjeK26a2Saww+t/g/PWgPa+zW0rcT+y/qlInJ
xHcL+ySaQxIbNH5aGhqtIyaXzdF6L8bk75N+Mfo5zWujZ9J4WPSzJt9NzLfm
njzX8BDT9xl+SPkDtUOLD1D7mDW4lm6WfG76GsqdWnibxI/R9EyPkPAZ45fk
b1v4s8Axo3e1eIjpxRY6LfUd9XuyHkpzoaWVGQynOZUcxj6LODfxT+dC93K0
8neBObTHN7FKtW6zT5tqdxR/WteYGFjzEHPPtV+o70xfRusazRGDz6YXNvFJ
8eTJOKc9UfI9pWZ9x+QazRdTW82aNdUME70l8YvROhZ9VnKYGLjsQ/H2ut7c
0+y3pDHc6vue9DvVPxe6x4V71P4Jhht8pjFJY5WeL2Ip2SfW6n/pWnArT9c6
sPH7k5hAeyKTU5SHmHteeEJjO8Fw0+O39Afj98vm1/XXPl6TswZDrmvonrdW
nCc2pz3IIq7ovFraKeXbZo+66f1p7lBdy9y/VbOMzWlOLWpcMp7X8V/v2a3X
7lv5vuAqZr9Q8t6i2cNA88JoOC1djnLalnaUxBWNDboOazCK2txwOaOJXc9K
cKPFM9+FqyY3F1pBi8vR+xsNvKUPG66SjIfiQxInrbil/P9JnKRzp3/b6sEp
HrY0mVYMmJpIY/W6T2JPs0extSfW4Cr1nYmfFp60MNz43cR8qyc1dkvwqlWP
KC4l11xjWOCksWHi61Zcme/4bdltHZPX+FvjSepL67faaZy0cJXW9FY/S7UC
iu2tnE1sbjDQ9IyJfWj8G367jtXEv7Semu/wNzZc8J/WOloyhsRui5hM7Ebf
41tod1QnTN5HoOMx/J+O3+QLHVuyjmzqoLHzQj+h9kmub90zseeCA5j1vsX6
hel3TH1v/QZ9UgsWGmbyeeKjhbZpsM749LL5AntbvQPNF+OXJO9MjFE7t/Ya
Lexj4oHavDXOVq+0jk/T75g169frKe4l9jTaRUvfMAfl+dQmLV6d+IWOn9rH
9A7GpzRnF/j5etB3PcyeDRqr1D4mX1rY3uKBrWOxzpL08q29PWacyUH5PK1x
pnaYGKb2vGxC72M4gLl+nV+m7zZjMBrjdU77RKp70PEYv9BxUp6W+Nfobwub
mN6BxqTRpl4/b62x0lg13LL1foSp0XSOJv4ptqzPzZhNbtL+xWCUic/X6813
v7fsQGvZwkeGuy40XhMnCbYYe9L7t3pYusa6yFNaI0z8Gxu25mh6tHf9Tqjh
YDQ3DT80OoOJk9YarrED3Ruw4PBmnaulN7awKxn/QvNJ9gmYuv/kO4YGw2lu
JrlA47A1R5rXlJ+3MN/gRiunPsI7sEmcLL77neYpxRaKSy0fUUwza2EUK4yW
YnDg+lvKGVr7N1pYRPmhqaFJXiR7J56co9lHRDGK5r65TytfKLcx/jIcLPEj
rddGO6LXJ3OncZL0jJQntHT+1jtHLU0y8Uvr93dMDTX9cvKsxboJzdNWraTx
bLh0qw8196FjphhC9wsl/krmTjmVmXsLl0xeU/skHP7CMfrbzQajTI+21gHo
kXBFo4fTvKbYbuZO853GyXqO696TxmGrLzMa14UhxtcLbpbgIZ07Hdu73iF9
PQxPpv2R4fzJ/ZNr6PfRmbUwihvJNWbtqVWzDJ9c5GZrXskc172nwRNaIyiO
tdYsWlqBWaNJ8LClh5uYedKeCU+m6x1mjcb00QYTWv3g9bc0xq77m99BMDHW
0ihobia9baseLdYHTY/Q4v8X1iXPMry3he2tdagklug9Tb9D82Vhz4snX5w5
GX9Lh6T3p/Y3euZCD7kwZNFrPMk/KYYvcieZ42J98Moj2l9T+yf4QHGPnid+
b+0VNzVxUS9Mn05zk9rzGkPCRZNYStbmDBc17xrQmF/0bon9Kb4Z+yT5bmol
zcFWrpn+1PSDyRzp708l4zQ4bPSutRZED7resagXdO70udSeNB5ovC1y3PRl
xm4Gx1pcvaV1JH5P1u+S+9N1igRnjL9oH5ecm7hK9rUmvOt6rnmPINF7k5hv
aUELrbKFRVS3NBrpmnclf5vEG81xk0ct/pPYwfShLdwzMUNj1eTm6+et91sX
/VrrPLGzWTu75p7kEfW7eUep1YOYvEswyuwfbnGzVu9jeFcynoW+kYzB1LUE
PxdranScxg6GA6/7ROOXVr6s12USf5mansyFYp3BGWpnM19jH8NVrs8XGldi
QzNmyjder0k0yVYtoFrER+D/1Nf0b6n+cI2Z1kGTd7QGUV5Ke/mFnpyMjX5O
Y8m8P2V+44ZyAKMPU/ubda6WvkTv2dLhW/a84sTUkZYNqZ6w4P8UW+i81lyO
8n/qu6R2m7m8630NGrfJQWMpycdkjos9itTvLftT25o+2vBMoy2YMdMj2f9p
fGT4bRLPC/7fyuuWry9MSGKjtXZJ14CSuSf7XlrjX9Q7c58krpL92AtOkszF
+L3VU9M4p/Y3GpfpVRf2TMaQ7Fum8UP5rckvw/8Tu9G8bmnvNPauMZicNbpN
0rMnMUbHTzlGSyc0tSPJwdf70N8TNBrU6zX0N7BMXaZ8wOzZNuNJtDvKZ4w9
aW4aXYtiLB1PS/dYcLkr9qivaTyY9aNFzpr4Sa5JMKelF1FsT/Ii8a/RwWjs
tfQEmo8LPKf5ZfyVcLDk/c2rHlE/tvib0b0TbFz4qJWbJt+pjk1xleZ7Sxs0
OdviLbT3XOtdScyYWE3yi+b4Yq1kEcNmfzjNR4otic1be58MBzD8bbFX7ck9
aTQ3Tb6b+mW+cymZo6kFJmep/tbqN5N8fJe2Y3rnyya0hia+Xugz6zXEBW60
7EzxgXJsgy1UP1yMubUnjeZmEreUwyR+uf42WeNb4BiNKxrDVP839XShdy00
BDPOJG7ps5J7Un0miWGKIVTLMrhh7Ezv36rXCbZQHy04xoWH1CaUhxu+uv7d
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
       "], {{0, 128}, {128, 
       0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1DFKHGEAhuHFQLDzDEmbTttF8QraCxswlSBoIRaB3ESwsLfyErmC4A0s
BOu4kCIpLGTmlzfkKVb+lY9lvplvnk9fTw++bSwWi/PNlz8Hq4v9s7PV5eHH
9Zfj1cnO9smHl+OP35/1+ejy+97zw91y6+nz3p/n25+Pu9f358urmy9/nUdk
Xsu/9f9TzlOuYcR5yvW/9d6Ovs4pvzlXlynPtJAZseG57smIZzHX+z76PZ3r
XRjxLs/1jP4V/+dypub/e25m9D2sdS/YPmKT/4P/77nzwsb4z3/+85///Oc/
//nPf/7zn//85z//+c9//vOf//znP//5z3/+85///Oc///nPf/7zn//8L2y+
0L1gO//5z3/+FzbDf/7zn//85z//Oxn+85///Oc///nPf/7zn//85z//+c9/
/vOf//znP//5z3/+85///Oc///nPf/7zn//85z//+c//wuYL3Qu285///Od/
YTP85z//+c9//vO/k+E///nPf/7zn//85z//+c9//vOf//znP//5z3/+85//
/Oc///nPf/7zn//85z//+c9//vOf//wvbL7QvWA7//nPf/4XNsN//vOf//zn
P/87Gf7zn//85z//+c9//vOf//znP//5z3/+85///Oc///nPf/7zn//85z//
+c9//vOf//znP//5z//C5gvdC7bzn//8539hM/znP//5z3/+87+T4T//+c9/
/vOf//znP//5z3/+85///Oc///nPf/7zn//85z//+c9//vOf//znP//5z3/+
85///C9svtC9YDv/+c9//hc2w3/+85///Oc//zsZ/vOf//znP//5z3/+85//
/Oc///nPf/7zn//85z//+c9//vOf//znP//5z3/+85///Oc///nP/8LmC90L
tvOf//znf2Ez/Oc///nPf/7zv5PhP//5z3/+85///Oc///nPf/7zn//85z//
+c9//vOf//znP//5z3/+85///Oc///nPf/7zn//8L2y+0L1gO//5z3/+FzbD
f/7zn//85z//Oxn+85///Oc///nPf/7zn//85z//+c9//vOf//znP//5z3/+
85///Oc///nPf/7zn//85z//+c//wuYL3Qu285///Od/YTP85z//+c9//vO/
k+E///nPf/7zn//85z//+c9//vOf//znP//5z3/+85///Oc///nPf/7zn//8
5z//+c9//vOf//wvbL7QvWA7//nPf/4XNsN//vOf//znP/87Gf7zn//85z//
+c9//vOf//znP//5z3/+85///Oc///nPf/7zn//85z//+c9//vOf//znP//5
z//C5gvdC7bzn//8539hM/znP//5z3/+87+T4T//+c9//vOf//znP//5z3/+
85///Oc///nPf/7zn//85z//+c9//vOf//znP//5z3/+85///C9svtC9YDv/
+c9//hc2w3/+85///Oc//zsZ/vOf//znP//5z3/+85///Oc///nPf/7zn//8
5z//+c9//vOf//znP//5z3/+85///Oc///nP/8LmC90LtvOf//znf2Ez/Oc/
//nPf/7zv5PhP//5z3/+85///Oc///nPf/7zn//85z//+c9//vOf//znP//5
z3/+85///Oc///nPf/7zn//8L2y+0L1gO//5z3/+FzbDf/7zn//85z//Oxn+
85///Oc///nPf/7zn//85z//+c9//vOf//znP//5z3/+85///Oc///nPf/7z
n//85z//+c//wuYL3Qu285///Od/YTP85z//+c9//vO/k+E//0c8o19MExgs

       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1kEqhAEcxuGJknIKO2vWTKNcgBOMYqUURRbKzimcwtJ9lDPYoGyn1Pd9
r1eep+inBg0z/d/t08vj87XZbHa9+fnpeHm7uLpa3p1sfH1xtrzY271Y/8yH
74+vPnx+Oth5vZlvvT/ur+qXp7eDxeJ+fvJ+NF/VQx6/6nun+JljPb7heU3R
Uz/fIY8Z8jcc0lO/Dqd4XmP93rH+X2O9rsZ6j/+V98iQx/+kZwD8S1NvJ621
1p392/cHgN/RcIO01lrb/wBkNNwgrbXW9j8AGQ03SGuttf0PQEbDDdJaa23/
A5DRcIO01lrb/wBkNNwgrbXW9j8AGQ03SGuttf0PQEbDDdJaa23/A5DRcIO0
1lrb/wBkNNwgrbXW9j8AGQ03SGuttf0PQEbDDdJaa23/A5DRcIO01lrb/wBk
NNwgrbXW9j8AGQ03SGuttf0PQEbDDdJaa23/A5DRcIO01lrb/wBkNNwgrbXW
9j8AGQ03SGuttf0PQEbDDdJaa23/A5DRcIO01lrb/wBkNNwgrbXW9j8AGQ03
SGuttf0PQEbDDdJaa23/A5DRcIO01lrb/wBkNNwgrbXW9j8AGQ03SGuttf0P
QEbDDdJaa23/A5DRcIO01lrb/wBkNNwgrbXW9j8AGQ03SGuttf0PQEbDDdJa
a23/A5DRcIO01lrb/wBkNNwgrbXW9j8AGQ03SGuttf0PQEbDDdJaa23/A5DR
cIO01lrb/wBkNNwgrbXW9j8AGQ03SGuttf0PQEbDDdJaa23/A5DRcIO01lrb
/wBkNNwgrbXW9j8AGQ03SGuttf0PQEbDDdJaa23/A5DRcIO01lrb/wBkNNwg
rbXW9j8AGQ03SGuttf0PQEbDDdJaa23/A5DRcIO01lrb/wBkNNwgrbXW9j8A
GQ03SGuttf0PQEbDDdJaa23/A5DRcIO01lrb/wBkNNwgrbXW9j8AGQ03SGut
tf0PQEbDDdJaa23/A5DRcIO01lrb/wBkNNwgrbXW9j8AGQ03SGuttf0PQEbD
DdJaa23/A5DRcIO01lrb/wBkNNwgrbXW9j8AGR93xOay
       "], {{0, 128}, {128, 
       0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt3L+rHUUUAOBgQCxtJLWdjY0WFpI8bMUqYmcTQRsDQiwknY2VYGehIHYS
K0v/ExsbG2trEcQEFG4zYY5nzu6Zl6944cvl3r2z8/Ps2dn78gef3P3ouRs3
bnz6wuN/7t777K0HD+49fPf5J//58N7911+7f/MxP//374m/fvTjnZt/v3f1
4q2v7nz7y6tXP73x3e23//jhzuXrI1++P/rZVcdf9Z5oGaKOfteqOq8oQ8V3
Zdpx5v1HtvWqvnFkf870w7Pek6nP6v5TPWeuavfHS8DVf3+PvvnzzS8efnz1
/W8/357x5Wczx4kef9VftAyZ8lfXyarjH+lR+aNtt6pOjqzPTD9c1Z937EuZ
8lf3n87jd/S9l2vBX7deufr1/XfufPn7S1ejdeTyPaM1ZeY4meOv8qicl6+P
PFP+6GfPqvMjPaqTI9u3ur1WfVe0fqqP06HPRMuf6W+r6uGs8VtRb9FzufRo
bZo5/qp1MHO+Fc7USabOj/TMXLeqravbd9W5Z8Za5nwzx+nQZ2bKP5oDZ/rb
qno4a/xG6y0aA6/Kvc98dlT+TK4sE/NXjOVVOfCKHGPGq2KzDu27Ks8c/d5V
1w6Z4xzZl6JzQrUrxl3F+D2r3lbl2y/f0zkGq+hLmTxnxf2OinxjNDZbFWtV
tFe0P3eYxyrG+JE56s71cORfh3obxTOZ/NJMLHdWDHbktUDmGqFDXjd6vZmJ
t49s32h+IHPuHTzTJ1f1pcz3dqiHI72qvTKx0MwYjOblovPA7jFYpj4r8uEV
edpoX52Jt2f2MFTkfKLtmDlm5z45c44V94My99M7j83o+I3m0CrqLZO3idZ/
Zl3bJQabqc+KfHgmr5u5vovOITPtvqp9o/HqWcc8sk9m7mlm+kyHXG7F2MyM
3yPjtOg5Vsc20XruHINl6nNVW2fyuhWxdzRnFf1sZuxXzCcd5vmZOozO7Znr
tVX5kM5jc9Uenuo9GNH7cTOfzcROmdigQwy26lwy8VUmrzt6f2ZOq9gvVJFv
zMw5Z81jmfqP3mfMXK9F45CKXF/12KzY+3RknNZtXc6UoUMMlom1ZmL4aMx2
ZM585Mx+oVH8uWoOjNZVxTHP6p+ZdTbadh3u/64amxV7n6JlyMRp0digel3O
lKFDDJaJtTJjIRqzZc4rk4vL9NVRH+gQY+/iaFy66t5fNG6pWCsrxma0/NE1
N1P/FdcCHeLn6LzXIQaL3qtd1Zcq7t1k9nhkYtGKfv4sOzPXVYzfs67Zo2Nz
ND9nxkV0XYiu75n18cjxlYnnO6xZmbZYtY9uNL5Gn82M5cz9pszeNvN8fq6L
Xgtk8nXRmLl6/Eb7UnRf0Ez5Z66JMvNwdH/4qGzVz5rNlGHm2v+sNWvVeFw1
x1bM1RX57bP2uT1rjuauR+MuOg/MHOfIfSYVYzMaa80cJ5qPipY5mk+Ivqci
Pqmoqw7jcdU9l13uRUbjwFV7h/jp9b9qPGbi4Q7tGx1HmTUimvOcuUZedS84
6or4JLrezdRVhzHYuf8fOaZm4sBdnvXu7GheNzoeM/Fwh5xzxjMxW3VupyLW
PesaPJMzzKw1u4zNDmVe1a9m1u5R35AL+n+O7hOLjsdoPBzdG9nBmXNcldup
uG+Sad+KOXAmZ9ihP1SPzQ5lWzVedjz+7o7mambW3FFfnblnNzP2u7VvNC8U
refoMzur7pvMXJuP/qpj1OuU28nMXTue45E5Q/uC5uunIj5ctd9gZs7cpX0z
5565Fqv+3pn3V/Tb6Gc79IHM3HWd5rfq67Xrej1YXT+Z+DDzm5bR8btL+1Y8
Izl6z6o6n/nemWvDHWPUDr6u+x4r4pMjj7+7j6z/iuvx3dt31bNgM2tBtE5W
5fOfhfuVR47N3fc9Vu9B3WWP67NQ/5evr3rGcPf2zaxZZz3rFM3nz9wv6NAW
3ZzZA2nfI3fz7vF5hzU3eg216lmnUXv5Pa5jHH0u275H7uDd4/MOzjxbndkP
k3kWb+b10Xv0gfl6y9wz6nCOzDw/H0Zfz+TTZvYAzOSfr9O+lGpX1JX6Z+7v
mXslmd9EyqxBmefUdt+XcpYr6kr9M/d3Zq/Uqv05mefUdt+X0qHdK56LUf/M
PZ3ZK5X5TZhVeX6/x5Vv91X3yNx3Y97X0Zit+jeRZvLGM/OJfSnMzE+fY6N5
mF1+E2nkzmVjZt7RnX8Tyb4UZua6efXy9c75ls5lY2be0Z33fnQuGzPzju68
96Nz2ZiZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZma+T/wH3DIDr
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzVnb3KbUkZhAcFEQRTYxNDBQUjnYPiFRwjwxE0EgUNREyMNTQwNxHEGzCa
izAz8wqMzJ0Bg43wQj0+VXt/Buuwz2btXt3vT3W91d3r+/IPf/b+x5/54IMP
fvH5T/55/9Evv/Pzn3/0q+9/7tP//Oijn3zj6z/57Ccff/Of69PP73/89299
709/+PAHX/vVu9/9+Svv/vb73374sy988d3j9/Tz1c7j99dn2mZyf9If2s9F
/+k9LTvTsRgbrn3UsrnxxdpHrdxct/kWfLr4vLDtAt+Sz395/6V33/zpr999
8Z9//fD6/PHHf/zwu//417e/+sv3767P128/mWLekSvpz9U3+lzTz1b/6edW
P+lYFr5e+8jY9i37wuQm9bVp81U+fZUvWnlk8I368fG31/ePbT7ONUnuPN5/
9flqM+nz1c713GR+p/FA+08/U3uai9pk0TfjI+oLk4PP9AXNtev75LNp81U+
Xfvl6gO189W+wbeWH01d/NjmVWtcOXi1n/Tzaif5/Gjbq83EX7T/xne0n8mV
2PDxnqTepH27+pD4iPriwlKag6/yxZVra9y77qF+afl07ZekD8Y+CUYlNqR+
vGLp8f7k+2QsSd8Sf1E70Nohib3ELy0cSMZuYoP2OcEi6q8k96826bjo3JrY
55m+oH1r4V6SFzS/jE/p99Qv9LctTDCc07TZqheM764Ye3wWxWezdkPzxfjI
YAJ9LuVaNO8SfyXxada2KG9M9FWjoxpfUL8ntkrizWgXi7VOGofUL2Y+NblJ
P9OcNViX5Mvli8R3rXYeL7o+YnQAg6utdhb8mY7X4AnN66v2NP1c7A955tx3
jfeKbTMvUH5r1llMrXfFXms+NZzkehYde9L/hNskv01snsS2iR+KLYmuTnUA
aodk7AvtyGBIkmtmjqbPMuNaa6qJfxdzn+kn9a/BTMohF7pcYmfji4STJPah
cZLgIV2vp3yGzpXUPs/ExtZc2cojikvJbxNOmHxPeYLBH5qPRj8xfV7ofknc
mlygGjKt6xM/JvlOdTljExpv1Eemn0ZXScZF66mWVpyMcYGNdF6mGhrNI6od
Uf0nsXnSfjKHmtigcdta2zU2pxhI87pVM5paKYltisnJvsEFZza+oLUnbZ/m
iFkLuNq5+kDPPph5io6X5mmrvnhV+xTnKVdP5s0Wf17U6bSmoza/5kRaG9J4
MLmQjCVpn+Jzwp0unDH2aWHsddE1KZoLZo6mdXrSZotrmXmQxi39bDjbuv2E
59D5iNp2gUWtHKc1HbW54X4t/KH+MvZJtPqWH6+L1toGSxNfLHR7il3X/bRv
Zu31ut/EhpmPzOcEx2iettqne5ZaeE7XKw3fMHFC9xUkzzVn7ZNnGd0gyYWE
e5i6crEeYTDQYKnhSwbTzLxs1heSdWGaXyY2qMZFf0ufa9ZQ6Hyd9DPZs5S0
aWoH6hfaN1MDUgxp6cx0HYTakMaVySmzN6mlc1JftHDJ7N01mpuxIeUVC0w2
GntL7zI6Uqtvpv66+mz2cRmcbGny1P7UzhTPr/60dIwEi8zYW3tfjS5HOY9p
k9p5Ef9mjjBaK42ZVmy38pFyFfNbOhaT162526ybt/KxxdmS/rR0zuRK9LGW
jmFsmIx9/b7HVu4bndNoX3Ttj3K/ZCx0XriuJPYS/DFrXhT3rv5TrrJeTzH3
mDMRZoyLfEziqsXnk/xt+b2lkZp6lvLSq5+LdwbS2tPo7YmdDT80fqe5YDg5
1VrXnI3ydrMucPWh9b5ug5OmnkqwnebIZZ/F+tcCx2hOLWKY9tPUsAav3sJl
6iPD51v8x/g3iSs6j1z1mrGzySlqB7ovyNRHyTpm4qPrua1cNnVi0s5lf8rl
qObcwjHD+Rcx3JoTKd9u8Yr1Zeojqo1Q/erxar3fiXLppH3K/RJ8o7yopYPR
dUOKJ7TeT+xsNAS67p/EqomrJIbpcw0mUH2J9vPyVyuG6dzXqmvoeyeeOReY
8dJ5wexVaM2zRv+kMZ/Yk+psiZ0Nb6E1bysOjT1NmzRHqH8NPzF1LuVmyXjp
O6yovv0qfcD4vVWvtXiCyYtFfZRwYBPzND6N/pnESSvXkjqitYabxIZZdzNx
SPOihYFG2zHrQTROzD0tvDV7G1p/z7SFA626JvHpYt8CzbWrP6Y+Si6aR9dY
aEyaGjDJkVauGTsbPmnmQTO/XHFo4spgIH0WrSspt2x9TviGeQdOwu0vPpzg
pNEHTE7RusbMI9SnNNdMTUptQvtDte5W32ib9N2/STuGc7b45BqXjJbbypeW
JkP3bhlMNp+vNlu15DVG+g6K1h6S5Fk0p2hM0rqe1pJJ/FN9ppXLpj8Gz1u1
f5Lvrb3rCx2AYiPd22Pw5/K7sS3Nl5Ym03rfuMFkg+FmHqR1osF2498WVhv8
pPsHknho6YGtc2HJRf1leGPSh2QeoWOke9fp319LciTJnauflPeaNWVq59aZ
TVP7GOyl+GZyLYkHw/eMT+nYW/Oj4UIUP2lOLfg/5aL0XBiNvaQPSZut/T/U
nkl/kr3rdOxGD0l06aTGb53DusaV8EbDaSmXW+Aw1UMMDzF1pRk75faJFpT4
kdo/4UKXPVt7LRIbGg5j1nRMXl/fJ7alNXvi36v/tJ6icUv3O9E2aU5Rm1+2
Mvu4aI1JY8xwuVadktjNxF7rHhpj1G5X/i7634pb8y4s00/D/w2fp/Fs9Idk
Tr/mPmMHinV0/YJirGmTxqrR3MzaXxJLZp+GsQ/1Lx1jcn+rljc6Yeu9f0n+
LvpPYzKpiym3b+khtG80FxJbJffT9pOYNxpdC4dNjUzHS9tMeJpZgzY2NLjX
mh9buiLlHqbGofY0n6/xrrHl0g9N/+ncbTCwhXuGA1AuRPOX6nW0D5Q7mTMg
BocpthgMT9q8bJL0n+qZNJYoThptOfmt0RVb9ft10fWdxZ4fw39MvZ/MBS19
zGieNH9b2Jv0x+CY+W1rPSjxUcJDWho4jWF6PiUZ++Ld48kadDLepD9J/FNc
utps7W+ktdt1mTqxVTPSy8xfrfYpVzf8n+Kn0cOTi/rU7B9LbGXyrqU10fm0
pWHSGE44CdXSzT4WWlMs9pde1zP/1rPx3WVnE5OUzxjOSW3SatPYxNTIC/xM
fLG2D41DmssJnizyjmqbV/stDZP6KBlLouHQOdrY8NLNDF9N3k1q9rUu8svk
hVmvoXWWiVV6z1rfbuHnYl0pedaC69JxJTY061lrXpGMq7UfgK7BmZg37RiO
ndjw4vnUVsmeMVNLLjiVaYfmPrUVxQRT69EcaenbLfxM7GzWvlvc2NhnrWea
vDO8Ismpyz7rc8eLNR1at1LfJTY0HOnxomclaL4s9HbDYWjuJ++lpPiQYGaL
K64vgzOJvkG1tQU3XnBmc39Li158vvqf+LR17jjRZBYXxXOzx/hqs7UG0Zr7
Wnp7YucFN7v0HHpOwez3MPt8non5a52B7v0z3Jhy7KQ/hnMm/ae4Z+opyjdo
rWrapPjcygWKezSWWnGVtJ/sTbq+p+fRaJ4m3xs/mjrR5Etr733rt8kYF/1J
7knqYvqZ7kE1tb/xBcWQlgZl9u9RDDE49qo6zvATg+GtutvsNaVxQmtYmhc0
ThbrlXQfPtX/TfzTODc6XktboLhnzkTQuKK/bfE9Wleua0OKdTT3zZy7qONM
vi/s2YqxJLZbsZTEhuHeSe60MC2xTxI/rTm9tU5BfUfzka6LLbgi1VQpptG8
W2D1ei6g83WinyTxcH2/qOOMH9ccda2NU/yh43r83rzXaJEji3ig7SS/NVqZ
mUOT/rQ0BxrzNM4TXKI+ojiz0CsWdUHSPtWNE46U+IWOt4WfSZstjmownOJh
i8+YWr41X9O+teLB1A5JOxSTL3ymsWFygfqI+s5oiYvzjM9cQzF1nGn/Lexb
MPOCwc9WbdiKpZa+0Vr/MjzE7MNMYnhRG5ocb/F/qq0ltl1oRIkdkrii70y4
7NM6z2h8mvzWxHPrfpqDyXgNHiZzE23T6DxrTaDl38QO9HvzHobF3gzDCVux
mrRD9Y3r/uR9UHQ9saURmTik54xaPjJ1IvUpxbdnXjQHaQzQ367P0LVqTOr3
Z8ZDkstGi0vGYrhu4hezxrFYI0jaN3p78jfpkvaf+f4BmhdUQ6Y+WuixrTWU
dU2a5NSipqO/Tfpj9h/SM1O0bzQO1+8tad2fcMhWHUr1twWPatV6lw2TeDPr
qtTOyW8NJrRictH/q/2FT03d0YpnyoUMlzPxY7Qaeh5n/TfcW/ZZ9C25x2BR
ctG9GVffWvhj7NbCIsNDKP8x83ir/9TXpv8L/KHYaPK3FT9JnxNb0TrdzI+t
+iXBn+u5pp8mNkzf1jWmyQt6f+vvI7RsQmuc1pyecIzERwl3omOn8XzZiq53
0L2m5h6zhmLqMuMLE8OJTagmaeZH81vqU6od0f4ncUh50ULHSPAk8Qu155XX
rdqN2mTBrww+JO1TbDH303W3a72D7hkw2EhrEOprWkcbftjS4SmHp9yGzo/U
5jT2aI6b96Ama7LXb5N9EebvTSR5RP1C+5z0v/W+LBPDz9Q6KPdI4qr1vdEJ
qR8pD6TxQGuQJH4MH07aWejwC90ywUDDaVsaNc1N+ndRqf1b5y6p74ymQfuZ
4D/NHcO1kmclfkzwx/yd6EQfW2iAC5wxONbCGfpOYzM3JXZIYrulwye/TXxK
awTj31asXn1b/53KVn5RLDK1ZHIPHW+Sg4l9TGybnKX4k+DMZZ9kfje1LY1J
gzPJZTQfGs+LXKZ9MO+soDo8nY/MuEzttohVw2NpHygmt9YQW7lG8ZDOLy3O
YNbmaGzT8SbxY2xONS6KpQY/W/zHzNEt/XOhARrd2/Q/+e163XMdM0kO0nxZ
a4Cte1o53opPg1emFqb2STTA1voU1YuSPF3zwBbu0Tg0eZH00+Ryq6Ze7G2m
9yTrj2bdc6Ep0T6Y2KO6pZk3zWeT42Zd5nou1eRNrrW4VqKlJ9/Ts+0t/Zna
jeJtC/daNa+ZmxJMMFhhuHFrzqW1Umvdc6EpJTw/yR1aY5pzT8lzF5+TvrXq
NYotLW5PL/pODJObtA9mbYXGwEILovxnsYe/FZNmjAtb0Tl3EQ+tvF5z3eT7
JN/pfrDruWY/T+v9AEleG33ePNf4t5XXBlsoPhtfJFi60G8N7j1+T/8GH+2n
icnWs1q2ovpGay8xzbUkr6+9ai1OS3GjpYG06mtzGZ15gYHmuRQTDIYk9xtd
saVHGSw1+q2JQ8pbaJ5e97TmaPMsml8tvke1Taq7Xt8nv03OdS6w9+onrcET
GyZ2a12mHmxxnla+JGNs2aGFaWaOeLwWZ15ae91pHK5tTte76RxtnmVi3uiu
ZlzJO2bXWhONtwR7qS+S+sWcLWrNBRQP6VnLVo3Z2ovS4nKteSeJmYSrLNY1
FpexQ8vmFNvpHG3+hulaI0qedbVPzzHRNVPD1WkMmGcZbmZwxrSZ+J22Y+Y1
ajezNkd5RUsTbumfl+ZpYuaZ11rPbHEwmmst7HrmGjG1ZyuXjebzeJl3diX9
SZ5FuZnRRozGkozX1ImteaqlHSU+egs1OPVRwmHoes36WvCWVjwn8ymdRwx2
LfT/luZmctloPskclNgh6b+Z765Yaq1BJ2Ok4zV14v/LelkSD8+swZNcMFwl
Gft6LmjxH9p+K/bM1dJ4afuUN1J/JffTXLu4Gc2FFjem+8eSe8wadNL+osak
ePL/uF5m1ugXPI3GvKkfF3MB5XVGfzOYTHOZjp3adsE96LPoPSbXDNaZsdD9
Eq19rcaeJv6NPrzQJZIYXq+XXfMy5RLP3BuwiG0aDzQ+n7mmb/pm8mtRCy+0
nWfWYotYMjzfnHm/cGmhS5jYvnLcnJte9/mZ62U0xpJ2zBzRmjvMmfTrWYYb
UGxMbLLAKxonybhatXBL23lmLUbHktiZ5vXj/UbDuZ5L9zmbdQcT58m4Lgxp
cRg6dy/Wy4yvae4nMUlrSVMfGW7QwmSKURRPKF5RzDcxQ2thihv0WtdiydyX
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
9ouaHEnyumVz4xcz51J+tajljY7d8pHRfOhYEjxZ+MXkMtVvW7FhcsecVaT9
/F/x/r+fm8RbMq+9Bf6f4HlifxPPJj5NXlObm7k18cV1jzkfR31kcifhOcZH
VPNJ+pbgRqI7Gb+sf5vcv6hxWnxgPScmY6E1Y1J3J2OksWrwthUnrZg09kme
a+KTclcaz5T/t3gsHQvdx77OF6OHm7qV+iWJDfPbFtdqafvX94YDmDnRzHdm
ncXMyy3+T2NgUbe29Bban8RuZo2Yxqfh/xSL6DzSqikSfFvkC8XzlkbX0hzM
tdAH6G8TPSGJMYO3ib9of9a62YL/m/6b+FnUd8/UMCmGJ/hmsMXE9nUl/aE1
ReKX1roYxWTDB0yMLXKN+jH5LbWD0Q/p2WeDRclzW2e1DFen+EB9avAzeVZL
4zXziPGF4YGP3yfvQKD8n/Ilis+PbSbnwuic3lqjSXKc/tbwjVfVBZS3tLiW
0UINltK5bMGxaVwZvkRta2KM/tbY5PH71hnYloZJNerLJhefSd4DmeQvrc0T
vFrs5zHnyIzeSMdOx0VjozUXUB6y4FpJ/rY0amoH81szj1O9K4nJpAY3MWZ4
Tmvubmk4l7+MhmnOPbVytoU/lIO19vOs33tAuW4SJ7TPCzwxObL2F51rFjoD
vYdybJNrNAdpDD/eY/YGvMoOtG8t7cvwzOTc00JbW+APtRvlM8ll9mSaMZq4
Wr9PxmhQJv6prZKxtDQKE/OJrxe8l8ZYq25qvUt8YQcaSyauKFehfmydd0vG
28IfarekPzQGWnsyTf1LOfn6fTJGgzLx39IHEt2D5kUSh4sa2eQmrftaOEn1
N8OXqB1oLF3307M2ZixGs2rxkxb+UM0wsUlLa6K/pWfPW+s4BiuSeKP6jBlX
Ml6KvYlOSJ+VxEBLozP2oTZvneOg65jJZ8MHWpotzZ11XWbwwcz7tI6jdjbv
8aCxZ367mDdbegK9rr6Zeoeu15sYNrVPSxNraXSJHah9Fpqb+a05m2nif61n
0hyh82OL21NNgPorsVVLl6N614UbrRo8yX2DD611zOv+a29tUu/QsbfmOxOH
RpdLsIXWyK18p7y6pbnReEvuMXUx9V0Lq1t8g9qB1sIGK5JxGb8v6mL6XGqr
x8vsaUl4bKseaeV7gns0bk3MGxxI2qe4ncQJxYrkngVPa627mVrbaIOL8z5G
HzNtXnmXYEgrBijHWNQCi3ZaNWby21e1b/Kdtk95cqIjJflLeZrR6Iz20sLA
Rf3YWndrxX8yX7f0TIo5dO42eGvee2/WR1ocj9p5fQ+NYaPdGfw07Zt8p7yl
pVmZd9eb9YirD6Y2SXxq8ujxMvWj0b4WfI9q0clY6FmSJM6NPS/bXtw+Obfb
8mNyP+V4a85s8LDFjU3d12rfcMikn5R/JralMX+1n8wdSR9MbZLEoal3khw0
tQldOzMa0YLP0FygNklyM8lZE4eJ5m/WQCn3aM0diU/ptdB5KB6u7zd+NPz/
ilvjoxYOU/xPxktrk+T7pE3azyQGkvkrwSjKJWhuUgw32E5rySQOjU2ufpr6
KLFtSxddcGZjQ2oTwwfWl+GQrfODZj3X+Dp5tyHFBzqnJPV48r2p8ZOxUExY
3NPye0v3NrVkos+3Ym+9fnHlVHIP1SQNB6ZxZfRJuob4TC2rxSFpzX7565nn
oSi3N+sRV5zTOdS8w8qs/a3zZfG51U8T28m8eeXaYq5crF9QfkhznOZCMnZT
67X2ElzcwPjX5Okz14koxiZYSts3c3fSDq2Vrv6bc0/JOiA9l9HKF1PrUb/T
frbuSfL68oWZaxIfUfsk+bjAqJZOZbCCzl+Jrw1XMfZMsHSxTpT4gu4BSNZz
Kb9N7GByoaWZX98nGlGS40ZbaPFA2iadO1r9TGKSxkNy/0IXbXGbFuabGjzh
VAn+tOxs5mLzrAQrEpu09tFdfTBxSzVzGj8tzYrmu9FgW3ln2qH9aeV4i9+u
bduqK1s1gtFbDGaaum+RXwkOLPTJJIYX7SdjNBq4yfd1fdqqE2mM0bii9jF5
R/VSs+5mMMpgSKu+NrGRXK33wCQ2aXEbiid07qPYYrCU6n4UQyhWtNo32ojJ
I2pn6tPWGlNSE9EYo3qywR+K1VRDeybetp610Exa8+AVey0NKsmXta3oZd7H
a3D7ur+lZ9I8bbVP49PMvzTfTf7SdSgT51TXpTnemk9pviw0B4MhrfqUxlhL
M0meS++h17Vml+w7atmKXq26o4XbNK8Tn9K629x/2aE1riSXE8xZrN8lOWs4
quH/V/v03aeL2Gvt3zYaVyvXDCdMnmW0DlpXJnZIuMqVRzSuWppwS7c3tUzS
fosbJHW3uZ/6wmjOJsdp/ib40MITOnb6rER3WvdtsQeGxrOJ8zV/aGnRl38p
56S68QLrqP5gNEmDJ5R3tWoZyr2Tucz4a12vUXxb1O/0e8MxEjwx9m/xq0Xd
Z/xO96ZSrGjxh8fLvKMjidvEpzQeWnzvsgMdF42TNZ60aoHrHlpPtfhtEjOt
eo3G1TPX71p9Npow3Y+R8NIWLzI4sG6H4sliT8i1lmrep0FzkMZDyy8Jz6f7
52muLfCErq8ZHDB/u8rwWOO7Foassb21Rka5luEM9G9q0Jyic3qr9lncY7R3
oxG1zkIm/Tfnj17F/2kOGv3T9IFyM/os6t/F2K92zPlTmr90flzwfzMWyrVa
58iS+8280OJgz/xMx2V4aasdut+yVXc/k/9f3xv9zdStCx0g0dhbe5AWNfv6
jIbRmgy2m3nwVXFl6rhkvjBaB/Xd+jPt/78BlAXAUQ==
       "], {{0, 128}, {128, 
       0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztWk/Kb1cRfKiIU2dOs4KADpzIC27AQbKCJ6iTgBAHIjhw4gLcggNxlEUJ
AZdhwnNw4KO/VH1V1afPvbdAebmcX58+/7qrq79PfvvHz3//g3fv3v3pJ9/+
3+cf/vzrr7768Jcvfvzdf/zuw5e/+PmXP/z2n3/7//+++/e/fvbp+69/+svP
fvOjv3726R/+/v6/3/z7V//8x3/eV9/ZMdV4ZF7WB/bfrnlda0zsecI3196y
a3fZdN151111+Za+q6496Xw7yh1Lv9nEu2D9f1dAmav6dzUXAsRmwofOdbHz
pvc/YT9xjqw/iXkVf1y+Tbj/yv4rvim/TZ87uyeJO1DZQfKCa14k7yjjK59Z
m8g+KH525uLE2ln7iXNEgHAqZV7XfU7fB9Zn9v4ja1HOgrWvrMt17sj+u96F
4j9SpyjzunI9AqRuYm2y+6P4WY2p/Envv8LllLudiBXVOSbmTaxRiV2J+4/4
yeoS7L4pdtL5ndV8WPvIWhJ3CZkX2RNkvSyQdbE8IX2H2foL+Y7MpfiWyLOV
D4k3jrxHZV7XGhUeXs2l3H/EZlqbSrwF1/nu0jfY83LdH5YPpOP/ioQW57rD
bP2l7K3r7Su6IrInlR3kO7teV8xR4KrTlZyO+MZynoQ25brnnfk9AVeeTfDh
hNan7M/6XdHiEvoqG9+UfU68ffa31fhq3xJxQNExXHfYVfdVNtl5ETtKPFe0
Kdc9R3hvp0atwBXzE/Mi43fxfzYOKPG58sf1BqvvSq5P5E3EPmIzkePYeV13
WKn7JuQdVzxR9sSVj5D9UdblQjovu2JChcSdqYDcGdbnyn713cUn2ZjjygWd
canan3Q9i8yL7DO7Rhd/YOd16Y0J31zcplNP2wVXXnbFIjZ3sGNYJDTGRH2q
8BxkLa46MR2XdvmMzOuqNVy6loJEPasgrUmm9bROuGrb6jsbi1y+ucDen+q3
bCxV4jZi3/VmXfEzcb6J/IXYd+keaV3r7Tur6Y3pd53WQqvvE+IVi7QGuI5R
tKNp+8lyb1b/V2JRgp8keFSaByJzJTTearyyh9V4liek479Ln+z0LaFXT4tX
FRLxH/le4ZT9TGiS1RglVyr5VBmj6ITVeBaKDoDYdOUU1z4n9Ct2HxR9UvGH
9U3JlYhN11rSmMCxWZ58IhK1ubI/aR14gi6d4KWK/oZ8R9CZd1gfEmNcviV6
QOk6K41p8X/9fuJ+VkC4h0vvnbAu1uddOgDLFZW5kPGs/Wp8Iu8ovYb0HVD2
J/1vdi2dmBBDVpy+nxVcd6azjnaty5X7WCDzsutC4jmrh7jif7rmYvWTTs7M
rn39no75E+JqhQnx/w69lfW7cmcm9FLT78jlJ7vP7LrYGiFd96X59mTOrOh4
rjUi9qdhQvxfcaXeygqXVrxLS1d87uRLbO3P9p5YHuvqIyS4966+c+IOsDqe
SyNC/JkQVytM8JO925P3c4WLj7FxJr0/Lq21GpP2WcnF1RgkjrFxA5mrk29P
5sysTVfdPY2PsZjg5wStIAElryn3eUL8V/hbwn8lhyZ6i64ebppvJ9Ze/Tbd
E6m+s2+K1RKf+P/6vOv3Tq0gjc532pkfJ/z9Bmtz/e7Sdti52PN1xVuFA7v6
qsh4V/xnY74rzypa0y5MyFOu2m0CXPV79VvkO+KPa42ue97J/9Mc3lW7uXJN
tUZFM0d8SHNm1k+X9tWpa6Uxgf8rtdvk3MryisrOtH1I3PM0/0/UVokagd0T
V09BsanUtq7+bDUGGd+ZZ6fFq2nxn411V9rPRM3rgnJGLvssErWVKxcofJvl
5Mi86xg27yR0zoQ2xdYjiD/Ib68ar1zzsv24ydpaej937QNyLhPivyvnJrR3
pTfqWguSp9iYmVivS5tSOLySZ+/AVxUgd8A1phOdOjby3QW23p/A/1mw73r9
7oqBndpXot/kWq/LByR/IXYQn6sxd+aryFyJfyf8V9aYttmZdxKcdto5IlD4
MGLH5Vu63+SK4Yo25eInbO2D7D/yfRd2xf9E7TwhbnTG/3QeVLguYgdZo+J/
Aore7rKJ2EF8UM5F6eGy9yqtR7G5TOFg0+55pz+JmJ/QURWk4/CuPJjQCqo1
TngXFZQ33hkTXBqIkuPYPjjyXRnDchUld9xZr6jsr9/TMX+Chpx4y7v6iSyX
c/XLFP8TYN+1EisU39I8geXMLh1G2UNXvZCoO9j9d2EX/6++u/Y/4T+Czlo+
nQddPPaq8V/JuYmY0MkTEpqMoucrehTrZ+Is2P13oZP/p/d/QgxJ83/lOwuF
x7LvbsLZIVByLpvTEX928QSWYyvrTfNDV99EOd8rxSvWfmL/T9/PTu2lQkKD
rcZMOLsKigauxEl2H3bxBJYbVHZcmhJin+1ZJM73zvwf2Td2/yfEkHT8T2gv
rJ2ENjvh7FgoGsjpPEFZL7uWBJ93adHIepV3kUZn/Edie6fWl0DiXae1F2Re
178nvwUWLPc7vUdTrYWNpchaKjvV+ESNo+hUiJ0rxasKiZ7v5F7widpLNb7z
jCa8BQWI/0i8YrGrR+PyuRqjcMVqLtcalRw6rRfcyf+rMa540rmuxLwTtJf1
eyLmV5jwFlggcYkdw/qwiyckoNSe1VoScYDNoUpdo/jJriWxP4mYg9g5Pf53
ai+rDwldlL0D7JhdSNdHFXbxhDRce5WOq2zeQcZcif+z94rVcNha75T436m9
KDqAor9NjucIErUSYr8ak+YJqX38vvUq2k5aZ0vXy6fEK8Qmku9Yfuiyn4BL
b+zU26sxiJ/IuiZoCwkotRJiB5m3kzOkwXJ7tv+b6LO76uVd+5+O/+t35YyU
Xv8p+5nQXhT/FZsTuE0CSr9PsZnmCbvqNVaPSnAe1s/KfvXbE/dfscmuBYkV
Lp152n4q8SRxZ5S4rdTyp4CN1YnxCc6J2E+AfePpeI6geheKRlSNYX1j4YqN
nXcYsbOrF5CI/y6eifhQ2VQ0CnbeyVD4qjKezcVKndj5XibEc9Y+q2Ow65oc
r1g7rjuMzDuhF+CK/+nfVlDi9q6c2wmWr1ZgdQPkO8u1dtXLSi25C0ptotTR
0+IVYqeTt0/rBSgxXLknSo5L5KAraf4rEjqkohe5uOgdcjeLhI46rf5K80b2
Drv4/ARuo9Q4CX6I+OzS/BV/pkFZI5IfEa7o0snZXtud4z+LU+ov11wurruO
Ub5P0CVY/ubiiqz9FYla6Q58Uql9FH6oaE2Te8FXwin1VyL+K7yF5fMKd+qM
/8q/2TWmcxC7D1flk2xuTWihrveCrPFKZ5cAW99NqL8633i6n5XowbFQ7oDy
N2+uHOHiIXfmk4l3xJ7vaj/R03/bzlwbyns/pV/J+pbuZylzJe6269xdPrh8
Y/W9J57gUM5rHY/kEeUcn/N6CUXfm1B/pe+GSxdK8FtXneXSeF0+KLpE4q4+
8eQlEj0ahedXY66q3SWgnNEuvqTE/8TfKiA+u/iS4oPiW2LehCas3FVXTXFV
dPZfWN/urN2xSOgnnXzJxUOqMQmNSPEzwUuV2Os6X3YtrjyV6HfcAdNqpUe7
extc+smuXrBLw0lr8oodpaem7GFnD8J1l1zcvlP7OhHTaqVp+egUKPG/GtNZ
fymaORJn2LnYt5DWvdk9ZP10vXGFz++K+Xfm/9NqpWn56BSk6/fEXJVNpQ/L
6jwu+wqndfFSV39ByTuutadjPuv/lZDuvyiYlo9OQad+m3gvypmyPD/Rk2X5
iWte5bxc55vQ/Du1nbvF/xW7/k5gxeR8dArS+m2i/lJ0KiS2r+PZ+6PERpd2
xPLqRPxkz8jVP0prO3fWk5V6Lb1XE/LRiXCdy+T6yxV7q/FK7lPyjpIvEjHf
VR8pMVk508qmKzedDoVjpLXfafnoFCj7cEr9pXD+ymZnnESgxN5O/cT1Zjtz
h/L9SpjwdwKVPxPy0YlI8H/lewKKls7aSejMrD/VmIT/Sn3k0qmQPWFzx8Mn
X0Kp6dgxCKbloxPh4v+nvBc2/iB2qu+KzuyCq9/hqi8UPxVur+hpd+aTSr9J
6U8hmJaPTkQi/k97L0jcc3HpFUrce9tKX7fP+qZoO6w/ip9sX6Oyg6z9bnwy
3TNKxJxd+ehEuOL/5PrLFRMSOa7z7rFnpNhB/EFivku/QuZ16YRX4pMT/k5g
xbR8dDoSGkhiDAv2LSv8n81xndwjoXu7+heVD6yeU9lBvrty0JX4ZLpPpNyf
afnodCj1+yn1F9KLZPcqrS1oK/7+uVh/Eu/F9d4Rm0rvo7IzobZNw9UnUvpf
k/PR6VDi/+T6i/VTiUXVvMj3BPdI8PDO98LWbmy9oORrlj+cyCcVPZDdZ1dP
rTMfXQmJs55Qf+2qSZHfKpwnASU3pd+Lok0l6gWEP5yuBbF61/pd2WdXj6wz
H50O11lPqL8S/UH2TiJxcvIdUzSxztpNiflKveDS05T9SYPNX2x9lNCHO/PR
laCcdfV9Qv3F2ndxOSXmKOtVoPDVxHtJ148uDVNZi7I/aSC9DJfGq/y2Mx/1
nkAf2LOeXH+leYKyP0rfOQ3lrF3vxVVjJmwqHJJd7wQkOF5aH0jko8ln5ILC
k9fvE+qvRN3qqiMmawJKLZbm/9V3171NaEfK2nfhlD7grrlS+74DCk9WtO50
/eWqW9l9qNae0BNccPXdEvw/UUewMQ2xf6X4MLkPWKFTJzw9v69QeiuJHO2q
v1wcD9m3xLydd8zVg5sW/yubyj6s4yfXcQqm9QHTOYid6/TzXYHEWzbmV0jX
X0rdWtlh16XMO4H/u3jUtPjPzsvWrRPqOBcm9AFd2rJrrqvGfyWGr99dObqa
N61RKPyf5RXTOEanjopgwj5U31114mQofZP1Oxurq9+y2jK73kS+mwxF82E1
/PU7e+6sz4ou4eIziM20foIgrd8icyG+de6D4mfCt07s6gMq/NDFN1z57hSw
mo/rjNi3xmpQSn8hEccUXXQy73XpdRVOif9XQmcfELHjWgu7XsTO6XcG2WdW
/2TnYs+ospnWK1w5C9mfTg3Z5afLvuu3LE5/yy6k+4As79p17or+kPDTBVZz
UM7IpbGvcHHUXTVLNQZZY+KOKX4iY574fxbSvK6zf4RA0UBO7AUo9RqbC1wa
e4JLs7UPs8ev+czuyS7+r9xnl80n/vfAxYEV/TyhuyJwxYFTegFKblXOS4nD
Li7NajtKrkd+q+RW5LwQJPiMy+YT/3uQ6ANW9isfOnusrAai/NvlswJX/b5+
T/QKXZpboq/hqh0SOpWCxLtz2Xzifw9c74WtW5VaQ1mvwsEm9CzScOk2rr8H
YO+bq6+h+JnWqRL6DDtmgk0X7hb/WR6raMUKr0ucSyLmd/YsOpGOS4pWkODh
iM+K/4pO5bpXiXfXaVNZ+4S5JkCJ7Yh9tj+Y5tXsu3PF/BPvkqL5sHMl+Lby
ltnxiP+KToWsHfltZcf17tI2n/jvxa4eHOtPglcntFl2vadAqeMqm+xdUvqn
ibfM9iBYLqTMiyBRzyZsPvHfC1cfkL3/ym8TOoNLm3XNNQ1IjE1rBekc7dof
xefKJjsv6zPiG1t/uWy61svi9DebAHLPFR0JeTvVb11rqcYg8064twko9Y6i
FVQ2XX66zsKl5+zSf9g9Z/VbZa5076/C6W82AYUns+NZbuni/2z9Mu3eupDQ
7pTxynmx/itg9Zxd/dBO/RaxyfLJJ/7PgeuustxSuQ8uPRnxp/PeJpDWedh5
lX1OvGsXH+jsh6b1W3ZPXPWCC0/894K9GwgUXTehJ1+pF8y+TVe8UvRDxLfE
u1b4AGKzGuOK/y791vWmKj9da2f354n/OlhewdpBxij888S/YVDgevsrWK7I
2qx8q74n9l+pE9k8pdwl15m69gfxrVNTPeWdngglfrJQ3pTi8y7eoiChh1Tf
lbdfzYvEdtd9Y9fi0jYn9AuUvWLH79JUJ7/TE8HytLQ2m+ghTuAt08Bye1Yn
Yfs1iB1ljdWYtD6Zjv+dmNALOGWvToSiiypzVWOUHiJr5/ReMAuXPpyuy1go
+kxan1R83gWlNk/39Kft1YlgeZqLj7l4fkLTOKUXzEI5u0RvfZeuyNaeSgxE
xkyOaa5c+cT/mUj0Uiu4eDj7txxX6gV0wqXV7+KHyr1lNX/Fz8n3TcmViZp6
8l6dgl01u8IPE728ai3PHXsJl1bfyQ+VvL9+T2hWp2iPyLm7xiB43qYX6Zrd
VTsra6nmenoBryMRq9P77Pr7pXQvbLL2yOpgyr9dviX24aro7Ons0gOVngLy
/Q5IxOrEPrN3VakllX1I9JoTYHuC6X2rfHvi/9vQ2dPp1AMVPj/5Pe7Crhow
cTdY/xO9sE6erCAR8xM9xLu9Rxc6ezppXq3w+V1/wzAZiVg9Ie6x97z6rdIL
YHl1531TeoJKzE/UUA9eR7qnk+Z7in7F/l3H3XoBiVi9K+6xmg+r87v+pijB
kxW49LG01neH9+hCuo/D8qtE/Hdp/hXu0AtIxOpdcc/192PKHVZ4NWLHBfY9
KmeX5n4PXiLR00HmTffRXJr/owV9RLqunxb3EN+QMQke0sk3XLkMGf/E/350
aneut4+shf2eqHG4k5gH13mlvytrcY1H/FR4SPV9F/9H7gaim6Vrf+deXAWu
nk71W3YuxU6Cnyj56KpakBKTlfhWfZ/2xhFuwPIQxH5n/EdiO/tvF4+afDcm
g42BlR2lp8baUXRXRaN2+XAKFB0Mscl+n7y3LMeoxiA1aWe9mej5JnrBk+/G
NLjqrPW7SyNVOINiE9kfxQf91PqhaGKsfWTeU/aW1RWr37JzufxP9HzTveAn
/uNw7ZVy9xL8wcU3Enee3Z8JUPKyMpdSl+2CUv+y/eJ0TeTSVF29wif+e5Ho
syi1/66Yj/ig+I/8djIS+1xhQtxToNS/lU1kvYmayFWzKD2+J/7n4Ir/yt3b
pSu6eOZVe8FpXofMuyvusUjE2+p7531jNU+lp+PqBT/xH4eyV0o83KUruupr
ZMxkjsrCxesQIFoT6+eJYPtKifumnLuSyzpjy52RqK0SY9bvLm0H8Ufhoqf3
gpUzcvEK13npu9EPhdso9y3xNtmcno4tDz7CFf8T/17nTeiH7P1U3uCJvWD2
jBL9oBXseZ349tn7X0G5b4m3yb4d1p+rcoA0lHea0OcVXRGxU60rEbdP7wUj
e5vW5F33LbE/aShaZWVTeePK+bK6jYubTX5fE9Cpwyd0e6UWZmvYat+Q75V9
5Ix2waW3K+t13Z9T4gByt9P81qXJd9YRV+UAaaR1eNcZpTV/lx12n6fFpV36
XuXD+t2lJ0wGy2ld98fV62HrBaWOuCoH6MSEHI34g/iQ6M8idth9nlyfdup7
iD9KbJ+cZ1ck6lDFBzYXuOoFdo1X5QCd2JWjq/FKr1bRhZS7qmg+0+7nLn1v
hdJrZsdMQ1pPq8D2ehIaqZJTkHWdcgc60ZmjWR8Un13zurjZ5Bi1S99j9+Sq
fwcyYV2JN1itsfruelPK+DsgofWtY1gtJR0nXe+IzSknxqi0vse+6126UyeU
9SrrSrxBJD6wMV/pfUx7XxPg0vqU2kHR3pX4z74j1h/X2rkT1aDkQUXbQdbe
qTvtwq51sZqPq7/mqtOf+P82JLS+yn41hs0jSpxUOJUr97H+IOtyQakHXXqg
ch9culMnXPkOsVkhcVdd/rP8qsIT/1/CpfUpPFzxOaHbJ/oFyN2bEKMUnxU9
UPHZpTtNgCsnInMp9bUSN9i74bpLT/z/CJfW1/mO2POtxri0aEUrY7+/dc/e
AtY3FydU/KzsI7+dEAdc/ih6OFL/stp7ojZHxrv256pQtL7VzgS9GkEiVrMa
0TpXWuNSkKjlEbjqQVfvshO74r/rTF39uMo3fAdetznt3HeB1TdY7te5FgTp
Xm01r6LndO6tK25UNtM+u2q3/wEuCBbm
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzVnc+qJVcVxhsD4kMITWZBBUGhcRDuxVeIUwedQAQhQYgDEQQdS88c9EzI
MI+RQb+FD9FTcWIHRK6DLevj9/1WVQ9Oc/pQp2rX2t/6/uxTVffDz373yW++
9+zZs9//4N0/n3z6h19+9dWnf/zV97/7z+effvHzn33xwbu3f/nP67v3n/3r
T48/+fDLxz//9cuPT+8/+tGPH7/59T8e/vnRTx8n7yffJdtsfjetw+S7pOab
3023adW5dV4pbg2M2eOx56WFn1aPkB60+/EO+Dfq804m/vv6+zevPv7hB794
+Pxvv/2f90+3MV6n8RjfPdXtVIfJd9O5m4zN+G76vlXnFIdkvgwMp7Ui40nr
3+qdFD+kL1o9SLiR4HkT/6cX4SiiTel37/a+pfVpX6fjbH035aUWZq7KO6e6
tfB/qpUxnpZvb/HPhFsmGJvUMK3thBtJT12F/1YvEG0yOOGq+hOtb60n3AFv
EzykmLlD3mn1jj3XrSxmr41MdNDIdK31kKv6sYVhUk+CwzRr3IHnbY/UytpX
4c2uLTlHMs6WjpD5JbqWZrEJZ7a8nMGrRPtOr3TNzejHTW9P5pfgx+Zbg6tb
3tXQFHs/mzq46bUm47H7ztC10xjSNboJT6Y6SHiVaF9aq1bNbc6xM/KkJmn2
f19yFsGn4XWv8k62DhJf2prr1nlt5rWWx570NVlLuUr7bJ4xeDvVVruehod8
X3LWZJvTONPPiecxvFPLp036JfWlhKs39br1XcIhp7lLuYJcB7WZ41Jsp+O0
ebu13nI3v2Fk7avG3OKcNH8RbUr7nXyXnNdkPMSL2nrd8oebOkJ656rxp/tp
5QiDt1NuNPyJrbPpulyrj67yvWR9IN2/0VNXZS7SUy29IDrSymub8572zlXj
38R/iqWUtyf5Nx2nXRPDsxnrHq0xt87X8M+ttbJWj7d6tpUTyTkSDBNvZuuI
7c+N8dt1INu37uOw+8WYU+LZyL0VJGcZvpfU5A5zYfBD2rO27hh+mNyTS3rW
wJuRr8n4CQ+k+Ccca3BIq19a+CH3CKd4aHlCsh8yZuIPW941nYtWfr+bzray
cMvnT3zj6bskgxi+Oj13gr1W3516x35GjZEHr+IKA8+tepI6TLA3wY99/QzJ
pEQXJueb7sfQ2ZTHDD+W9hHxveQZQa183aot0SnyXIiWT0g5hGhWS0PTWrXw
3Kqz4fHIsdJeIx4pPfdUFwzPbOjsVf4q3d5en5n0WoqlFMPkuKkOpr0zwRXx
h6Q+xu+/ZC5S3m7hOf1uy4cQLbb16HRc4qVPumB45ta8pHxl+Kt0+3Rsqe9N
PRjBj4Fbg2MN77TpV1M/lnrRlMdO89XCM+EuUvNTTxFv2eK9zbz5+u2bh+ev
Xj6++Prbh6syV0vvTu+Jv0q3J+tvp340PHa6/01u3PRLKZYMv3p6peuNrblr
ebAUzyl3tfIR8Zak5i2M2b1seHvDc56eJ5nWn/DD6bjGmhXhtBY+W9x4lSef
YMn+/a5VE6JlaRaw65DyRjqGVk5Paz7JHQY3tvBg+9IWR03wQ3KBcW+g4QfS
Y03waT/DzfbkLb61/WprPbZ1H65dhxZvn8ZAfN2ED081N3SQYMnAA/GlLQ09
HcvQyrQX0nNs9b7hLdPapr1jeHKbb1t+1fBCm5mO5H3C7UbuI/VPt7mKl8g+
jfqnc9Eav5HLUk4zvOupd1r5xZh3w0MafNvyq4STSV5LnxNo1KfF7QY2SH+l
HniTlyZcRPBJvAHJF/azc1s8bNSNaGXq+Te9MfGQkzG3uLd13FZOT7nIyBfp
fNl5lvD25rqZwUstX3TVfW0tHSfcRXjY7hGCc3u+UhyS+0mJ50m5t+W1WvrY
4tVTbVv1IVqcej/Cq5tZ2PaiKQ+0fH7qe1t4OM273S+n90aPtMZmzFfqjW2P
RLCUzhHBc6qPrV4m2ZDo8kSLjdra/HkV55PxtHx+y5eS/EuygI0r0iNpvxu4
ao3B7pc0o7WOm+I59TApzjczTkuLif9vXZPWWh+wsd363OA3Yz8EM6m/Mv4e
hIEfwwMYPqSFN6NuxhhaXoVkLuIfDD6c8HbrfpmJRrd4bBPbadZONZTwW+oJ
W1rfeh77RDtS70fqaWh9C7dk7cLIlWnd0jkyMhrp2Za2nuaI6GxaQ6JHduZN
5+4O1xITzUr5jWS3lBtTzNhZrIX5CX6I1rc8QDq/dh5M62Zn7ZRjWzmRPJu3
5W9bPZjus8WxqYdpcW8r97V6loyttb6azulpDAQbhv8kODc4KvUSBP+tPGhn
8Jb/JP7KzmuTHpn4hM17w1PdbHGpkRdauY/4DcLDBKtX8S3xb8R/ppmx5cM3
c1mKYXLc1lwY2b91XiQn2jo4GVt6XqRnJ3Um2G7lBeN39nSujeNO5oLg3+jx
lsdu+V5jDcHOZS09bXFROp7JuRg1bGW0NK+lPTjhdsPjkcxIjjXRjjQvpBpq
eB7Da7XmguyHYLh1v7Phq0l/keegbvIz0X0yXy1favjqNCca/irtx9YY0nmf
YMDQoJYftj2PkSlac9FauyDHSr3T5jP0SG5tcekd9kkykf1M3fR8J3xuPMcj
Hc/kc8OnGfNi9GOLfwzP0/KZNiekPJ/+xnR6kXsnyfg3a2701OY+DU2/ipda
fq/VR6fxkHzUysuGrpG5nmh0a73FyGtG1rM5IX0uyia3pONP55p8nmYowj/G
PlONnmxP8NDSl03vesLhpvc2nkGa6lqKW6J9rdya4jb1+cRLkNq2slUrdxh6
bWS6yeetHiH9Qva5qdETPLSuYzSyFamDoXcpNiYvomvpOO05bc3vpD6t7NnK
7Ckn2M8UNfTFfta04f3I+9Y+U04mGp32ZspLLRy2PMDklWpcOl8Et4a+Ew5s
+bp0flu5ssX5Lf/ZOsf0uBNuaeGQzK/tgVOvO5kLwic2ZlJOsDNs6hNa/dLy
li1MkrzQ8tWb6xKtDLjJ+YS77Oyc+t60tikOW5l9olOkR16/ffPw/NXLxxdf
f/tw+u7TbSb1P+0z5Wf7uUApH07mejJ+sk7SyqqtHJrikGCV+EDSp5uYJGM2
OJ9wVwurhg8xfFfav8TP3MEP3MGftLS1hfl0bOQ32XT8Bt9eNadkP5OabGJy
wkX2GlF6rFPdjGcjE2yf5rTlu+zesf3S++hPjHlMPSTBCXmfZhZbQzfnlHhC
ovUGJifbt55rROpDvA3ht9YzG9Men+znqufIXeWX7uBPSF9PvmuMzbju8W7e
z8Zb69qPlAdsrSF6TbxNKyMbGt3avz0em4eJDzTGfJU/IX19N786yQ4Tf2j4
hFaPGz2S8qfhDVpaY2jlZPxpnp3M++YzXcnzM1vjSfdDNCvNQcaYJ7xk+JOW
L930zKf62/rb4udU31v+0/B+LW+Q5oX085YvTXuTZFiiZYRDDJ+f7j/luta9
AKSnCD8bvi7ti1bvGJ6Z9CzR39Z6EdF34j/Tc7H9TMsnkPGQftnMsC1dNnxX
qz7EU6XbpxzYwjDJ1ATnLby1+nRzfo35mtTW1rWWdhA9Mnigxe1pH6Vz2uI6
W5c3fVr63UkdUj8zwfOmnqY4JJyW6kv6DFWyvrE5v8Z82bmjlTHtDEt6nIyZ
YL6lm61eJtq6ydutNZPNtZdU66/SU4IlAwOTc5/04ASr9vwa743ckeqgPZ4J
Boz1CjtjbuaOTQ40eDvlxjTLpPtJ+2jyrAPbwxhYsrV701cY82vrNfGQtr8i
4yFetHU9bdovKa5atU153r6WpsXbLe5q9cIdMo7dp+m8pPi375G/Sjev0ilj
n+kc2XpH+jTldpIFDP0lekGu1bHXRtLaEk9OssZkP3bGMa6DNWoywX9L34mv
uCrDGj7HyIyTbVpzbeS1lkakWcDQdMI55D3x+YQrJpnlKm+fZs90TtNjtTin
VRMj1xCeMTLv5ndTz2lzQmtOjdzU8v/p5yS3pv5/wjnkvZELCK8a2ST19gbH
Eh/e8sapXre8jY1DormtDEu+a/ztEvtZE8Y1gbZOpb1J+oV47JbeTY7VygUt
LSAcbvgNwrG2B7D1mmByovUEh63t034hvZb2TooBMs4WVomPOvVXqlOt822t
D2z6zHT/xI8ZNSTHJXqa4rmVBciY7f3beT/F4cT3GuM0/Izxue15WnNNdLDF
FXfzS8Rnkkxk5Kyr9I74lnTu0jkiWGr5LsODGc9HOn239TfIiDcz6kw+b/Xa
hGPT3rF1jXDUJCPYfon4TJL7WuuBEw609W7yeUsrW/pF9KXlT4gHS3UnxWGL
n9O/WWb4aoI9g4fJvE/019a1lOtaWGr5JeIzSQ+ejjvZZ4snW3rX8gwEP6l+
bXoew4MZntPO11dlWOI/Wx6G9LIxj636GLnM9ksk8xq9YOcLg5NJDQ1fR45l
eJ40b5IMleoawQnJ1Hd7bradL4xs0sodpD52/7Zy2eS4m2unibf9fy9DZ4lG
kOvW7LxA/Dmp/6k+m/pIMEPydcvbpNrd8jzG9sR7T9Yx7PrY/dt6bnbKyaQO
pBeMfER62cjmqRc1+JCcr5Hv0t5s4adVK4Ix8mr5vRaeCX5Sj9HKF4b2bfZv
WtvNeyJaODHwlurjpB+JRk/m1+BqooOkbrY+bubBtIaGTpH5IniebE/qY3jF
lh9OP2/1bzqnhm4SP2Nfh0P0qHW/56a+t7Rs8t3W9QOTvkj1cTMPpjU0OG1y
Lq31qHR7sk/CkylvtO41TrU+7d/J+G0vRPxMOo8TbUr14vQi3E50jei7rWWT
Z/Sl2rGJSaMHydha+zf8berTyIs8b5zwz4RnUr9BsqGxpmH7T/L5pBdaPq11
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
qZcgXGT4fKLXRnZrcZFdk5RvT/pOMJD2V1qfFk+S5xel3tX21S09JTpFOLCV
JYnnJ/w26UHDK048eSvfTerW0pGWz2lxi81FRk48bTO53inFwKb/MXjydKzJ
NQMp5lu+2riOorXNhAPJy7i/JuU3omXEK7b4k2Slls9v9bitI4ZnIxnhqvqk
ubLlfyY1THmSjC2tYStb2Z7cyBp3w2Sq0ZPxp8dqZWTCvZNxkr5u6Qvhk02e
TP1JC/N2fVq8nXKasZ6ccibBtuGLWvsnWmn89mdjMtVoe13F4PMWp7WyA9GX
1pzaPGn488n4jTWTFEvEGxBctTxGS+tTT5XOKdl/ykVEN8kYDEwSb5/6hNa5
t/xGymktzLe0hsyprSNEB9O1UGOcpJ6255+8WtcEGlpv80MrR5D9E79HeI94
Ifs3enLuKZ8TD2D7W4P/J3NqeIMT55DnwdoeqXVNS8rhm2vphMMJ59j8QN4T
brG98Qkzk7HZf7OgVVviY4n328Rbqx9t70S8QYuXNj1SqsvkeUfEAxCvkmoN
6ffN34gnetq6Hyrd/+bz34h3muAknXfisW3f2/JRBGPE+9nZqsXVhM9tj0R8
3aZ/IMcivZD2O+kpwg/Ez7RyOpnrTd6bcPtkn6n/afmxlu8lPirNdIQnU6y2
9IJwdYvPbTykvq7lYYhPJhiY4HZSB0M3U35oYcPwM5O53uS9Vh1afGt4coKf
lN/Ietpk/2lPtTzkZL5sTBp+ydDN1MMYPp/gOe2712/fPDx/9fLxxdffPkz8
ZGvNp+XfbD/T8rQG9xJf18KnrfUpfozn+hp8tXld8Wb+mozHvk+B9Mvk84l/
SDHfwvNpnHbGnBw39UV2P7b8xqY3INdXtLJSK2e1PI/BUZt8NfEhhjdo5a/0
d7FWftl8RqLtx8hc29q9yauTObpqvWWCE8MbGDqYYrKVrSbjJxxicJTBV61s
knqDVv5q9Usrv0y4lJxv2tcTPidzTXzIpC82efUO209q1eIEcqxUU4x815r3
9LfmiR61OCrlT9KPKR9u4s3eJ3k+VSuHGt9teQYjy2/ytpGbWrmM4CrlhNSf
kF44+ZY75LtWjxuabp9LK5uQHDcZG7mfa7LPSZ0n+js534lvJ9f03uE3mlZG
aGG+lVUnOjiZo9STpN6vpTVpfVpzYfsEcl6t8219TjBs5ALi2SYcnnrLdJ+G
zyT7TLEx4SjD17X4vNW/reyz6S2J1yK636oP4UnbY7fmneSvyfaTzw0Mk1ww
0ZTW2Ig3I3je5AfDn7f8j+E5De+a9mbLI5HatnCS6gWpz8RfpXU2dLyVrdK+
aK0nG1nbzl8kgxj+PMVz6jMJP7T+RobhfyY+k/BJy7umXNTqtZYfm2DvDj4/
zaGGFyW4MnTEWE82MtGkRzbz1wQzLY/U8upG/pr0S8s7pTqY8q29rnLVs+9a
HoMcK6258fz/loaSvLaZC9L70406pNxI+oscy/ZaqUdqefVW77TmKK2//dy8
FgeSbEL8KvFmLT92et3Bq6Sakvr5FMNG3pzU4XR/OsEqmWvCM2ScaZ1TnBj5
ouVLDf9j+JYWr9o+hGQTwtUEhy2tJ2OwvUorz6b1meiCrYPpfoxrbwhOCLdf
1UdEQ21f2vou4d6rrss1fEjLw6R+tfV791X+ajO7tXL0phciOmisIWziZPI5
OZdWH7U4ynhm5sSHEP9j3J9r85XhN1oeuKWzE8wTf0K0huToTY1rvU+9kJEL
7B5s4YT0i3Euqccz/IztLe2+SPXRuC439VqpdqcehvADOS7xJ8Rf2V7F0JfW
MyQNL0TmqNWDLZwQjTDO5bQfkmVaaxeGVrbqaecXkk3I9aiGbqb8QHphUqtN
f2XX1tAX0qct7mrl35avtufI8NutOqTjIR7gzjVJuYt4FYKxyXFbYyN+oOWR
7N5P/ZUx1y0PbHBpy9OmOE99aapNJMO2eoHwieFVJnmh5RXfx5oYnoR4aUMT
CT8Q/EzWPa7SC8NDbnq8VsZveYNJBknnerL9SetbfTfphVS/yLmQfre9Iskg
mzWZnBcZ/+a8pO83vWiLfwiuWvVseZLWd9M6pJo+2U8LJ5M1T3teDPynOkj4
pHXuhje+Q00MPUr9TGteTppoPNfCxvyEf/4Np8J13Q==
       "], {{0, 128}, {128, 
       0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztnbHKtkcRhn8URGwFre2sY2c0H55CxEqERNEiBIKxEDsbD8EzsLeyEGuP
IJUHoJ6AB2ACCi+E/dn57rlnrt13igmTn+fbd3d25p772Z3d5zs//+T9X33l
zZs3v/n65/95/8Pf/ujTTz/83Y+/9sX//PLDj7/3zsdf/Vz9/f/kC/1nv37v
5d9//P7LZ3/4ycs/v/3Tlx/867N3v/vON5b64/PRv91pM/rMqj87/Yy26RiL
0s+sNh19yOqn4pOVfVZ8ieAPjv5kjbfSfxQcq8QWxVY7v/Wff7z78q1ffPLy
l7//6b3o2B//dqVn2Xnnd92/RWhHadNtK+V3o3N6uo/R2iTHkcN/ojhGmy/l
tz74259/+NePPnr55mcfLPXV2B+fecw1O/8etfPO77p/K2ofRztKm44+ZPUz
Oqfusbh9jOAPlb7h7psyXzt45cC0rnh87P/jv7958+bl/7J6XonNyr/N+q2o
fRztKG2udKUPWTZ8lGj7q3aUsbh9jOAPqz47fMPdt6j/rNpUfJ7gA0qfHXk5
K66zxhv9LcXPHe0obWb5xiruojbc+fdV+0qbXT5G8weFi0bt6ehb1H8U/M/i
Kg4f2InHaJ+VvLzzjrAT19G/jYryXpDlAw78UWxSiYEE3e1jStw5/EHh2A5M
i/bN/U6qYDLZB3Z+a2fsylrT477Dqv2dfZCsse+06chNjhzniAsHBhJE8QeH
bbv8Icr/d3i1G2cUzpPF/0/xASUWVnPheG+t5LpKn7NyU2WOy7LJTbrCUR25
ptIfovw/C9Mcfctaq4/u32Vx/i4f2PHtnblQ8qMSU1nz7sbArPbd9nlmzq9w
1C7+Ex37Tr1HtCZkB9N2+h/tW9ZavZJTophM8IGoTVZ5eWeMWXwgyyaVGOhY
I6LloxP1LJ905BqHP3TVBlT2p5L/O+LL7QNZto2uxa3eaxy5LFoX4cZA93tc
Vz46UbI4atb7FCGnO+xZ2Z8sHphV/xONL9q7gFJHl3Uug8YJHT6pzJ1iq651
RYLu5qiOXBP1h0rMydq7dKzfKnOt8P/ouV2HD3TF1M46oZsPVGJ1Vh7Jmruu
fEQWN0fNqkt05/QszNnpg7s/WblVwX8HhnS9C2T5QNa5jK51LVoeycodhL2G
Lt3NUaN3pyi5hoA5hH0Epc/RdQxH/U+WD2TFb9a7UtZ7k5uLkvMIGXuz7O+W
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
rUU44rcy10TvGl2NXenD1P+fxRlGanD72Th/1Ie71iJOfxdQfC/rjLMjFw//
37ft6PWcauZuH1scmODojxtP3Pck7/he5fcFonYe/j/8nyCE3EGWHWzJ8nml
nVv3BbJypXtepv6fg0Wj1+A2of+V9snCN/JahCOus/ZGo2NX+rkzLzu5eOr/
fdxg5HVCyB1kifpqNE5paxG0d4Esvh3tT9d3zYb/5+LS6D7cJvS/yz4Kl87C
ya7+Z4myr7GD245c4+CxCv7fqnfnn5uFkDvIkoUtWWs7jrWIaP8JmKDwbcc9
eDvzpYxr+D/H327Sh/PXYEvW2o57LYLwLpDle2Rf3RnX8P+78xo5dty5gywE
bKG1//g8AX/c9fwOmfp/XzyOXoPbhP7fii209mnvAqvfddTzd/Hb4f/D/ytj
Zzj/2+1TiS2E9sn7Au56/kqZ+n89Nkcfzn86tpDbV+xTGfsK9nb529T/83P0
6ULIHWQhYItS/0PI+0rflP6f+C6gjH34PycfnaIP52dii5sj0eyT5XtZ38p0
z7USjwr+36p355+ThJA7yNKFLYT93Er7ZNW9O56vxJysGBz+z8lHZH04Pwdb
CPu5NPsovqc8H82nXfGo4P+tenf+oQshd5ClElvcfu5o320f5bytu2bVgT+O
eBz+z8lHNH04/+vs48AW2n7uidjr/valY14c8Tj8/+68pgghd5ClElvcPl/5
u13Y6877bixy93/4PycfEfTh/PWx7461rrsLCPbPGqNj7irvi1Pw/1a9O/9Q
hJA7yOL2JXfcdd1d0IW9lWM5ETOH//v85ER9OD8z9rt8mxZTXfcm7eTTU7il
gv+36t1zQvEHAsejSVfsZ8Wge7/Y7Q879ne/1xDOCwz/r4/xZ9CH858V+13z
0vW75HuTlOcJWDf8nzMvXT5A4Hg0ocV+117ns+2x7oyFcF7AEb/D/znzUjnv
Y6tzY79rXty/S7s3iXBewIF1w//vzmuOOH02zk+L/a4azpv2WHfG4s5rBNwb
/v9237tJH87fG5uOs6uVNZw37bGuxuLI1zT+Ofz/efg/IXeQxe0bWe13+bb7
d6PtKL+787cODCTvCwz/1/2crA/n743NrPZPqeEk77Gu/naFewoGrvpA2BcY
/n83/yfkDrK4YzOr/S4/d//ujn267k3aWQuKxo7jeUeMD//n5KMu3Cb0v9I+
tOcd+6qE2tHKPdZoPx9xb6VnxY7yvAPrhv/fkdcIuYMs7tjMer5yP9fhP496
5R4rIaefUjOs4H93HHfiA1kfzv86+yixmfV8dM0hCycrazhXOY52PiIrLmg1
w6txDf8/N68RcgdZHLGZ9fwq1lZrDqfUjlbusa7EndPd8ai8pwz/z8UKsj6c
vyZ2ovx89bz77Kpjrh3tZ+2xKjnOcXdc5TtUVvvD/8/Ka4TcQZasuY7uCe5w
+yzfo9WO7rSftceaFRdKDnLE4449HZg8/N83j5W+cdMYu2LHHV/u33LPdbT9
yhpIdw666e6L4f9n8X9C7iCLEjsO36j8rcra0Z32HXlEsXNWDrrp7gsF/7tj
vRpDCPpw/txYiOKee76U33LjUrR9wnleRw5y5PHKXLlqZ/g/M68RcgdZonOa
5c/u+XL/VqXvdZ3nddf5rCRr36TyvMDwf1/8duE2of9d9ul6F6jEEMJ+bqXv
Kb9b+Y1IhcNXnhcY/s/k/4TcQZad2Kl8FzhdJ/te13p4FibscHg3L4o+P/yf
yWlP6X+lfRzPd/tghTjWQMg5S7GP0k/y9wUU/L9V74pHQu4gixsTns3PHWsg
bt+rXA9X8GGnna7vC+zUIQ//H85P07v2yLr9keLbBN/ruj8na9+k6/sCOzYZ
/l8f74TcQZaob2dhwq0+79gvdvueY+wOrIj+bdf3BbLwvxsbqjGHEI9d/STg
FaH9bt+k+/OJMRJtU9k36fq+wE47w/9rYpwQF2Rxz1G0/dP9/0Q/cY+98pyd
o1Zh6v/5vjecnxOzjva7/fRmP3HESFadvINnKu1M/b9vXmjxeCKX64pZR/un
xMKJfuIYe9bzjrMMSs2t2w7D/znxSMCTSrw68flun73BTyrX+bvG6P6+gGKH
4f+5sUyIC7I4YrbyeVpcnOgn7rE7zrhVjjHaztT/832ysg9k3VHP736e9i5A
mEdajBDu+VHGGPXPqB12+jn8/9zcQZasmK18nvwucKKfOMZOiP2sMbrri7Lw
v9uPiP45nL8mZrO+w+vuP80/CTq5nr9rjF08VsH/W/WueDyRy1XGbNZ3eN1n
bSrPrHXPLSVGCO8ChDmd+v96Xx3O74tZwvlfwr4AYR678G3VJuGeH2WMBE6r
4P+t+n8BG4+zFg==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztnb+qfklahRuVQRDEzFicUBQ0FLoRBMFEGRFMBmlBowFhDMRIr0A08RIE
L8LI6zA1EIxN7QGRY1CwHp61au8z3cGv2f2xT+2qt94/a623vv39yp/95Q/+
4me++OKLv/r5b/7zg6//+nd+/OOv/+aPvveT//nzr3/0W7/5o5/95vLv/vff
T65//w9/+ct//t1f+Oo3/vNvv/p4/Qf/8b0vf/hff/rlv/3ibx+vT/efxjTP
MtfJc+lakr+ldlvMn45j7jdrpP5jfLI1h4VN1r5h/H8R+639WvjPIl5aPmDs
//H+f/iXX/3yn77/a1/+yff/+P9df1Ma/u/f3//7z3316//4e1/90r/+95cf
P//47zROcn16lrmmczNrOdkksVtyv5lDMo6536zx5noXNm/ZZO0bxv/p54v5
3PSfp/7W/DN2PtWCpEZ8tP/pb0/Xp/s/1ilqh6TGJetK1pLYgdrc7MvHOXy8
J5nbKaYW86eYxKy3tS7qw9SXkvHNPOn4J1tRG5r5nJ618J8kjy3+1tjK5F46
/sfrk/1Pc0jWa2oK/dvTusycE580XIbmczrP5NrM3+QQk3NO2CBZVyteaJ0y
Y5rxW75h5n/yVVPHaR0xNajl59RWrTFbOMFwgaSm0L9d1EdTsxIuQ9fbyr0t
DmtyyOm5Sc45rTfhyyaXnva35W+LMSkXNjF1mj/NLcZ/KG4x+IfOk9qKcpDT
mAucQHH1goMnzzU4nNaslj5mYsT0LhMOe6oRSQ45+Rj1H8MZ1/nT8KbWmIbz
0piiGJVytMR/TtdP6f9UL6JcnmqSJg+0ML/xwwW+oljF5BZ6T4sjn/yZ5ljq
bx/vSTADzeFUu2tx59PnNP+Y8zyGVxr/pPyU+kwL/59y9Vr/p3pREvu0Jp7q
I80Drc8Nhm9d05plMNtCa6L4n9Zf6p9rmyd5xuwj5c507xKsaLCo4T4t/N/K
URQLJfktyc+GXxu+ZjB/ck3x21M43GB1qkubtdPeosGWFP/QepRgrSS3rG3e
4jJJ7CfPbfGOBbei+Nzgf4rVWzok7ePTHgHV/xMfM71jow0aTWaNwxe4MVlX
SzemGCzBllQ/NDXCcDTz+YILJPcnGDvhzoZ3tPgm5d1J3aTxZfKt0SFpfljo
SElct3yMaoMt/WGBwxdYnfLHVg6kMUL5F/WBlg+beDc2X9Qjw60WvMPwTbp3
C627xTWoDmn4KcXYhhsufKzFH02crmvKAjdS7G3yIc0zNB6Nv63j/abNDS9Y
6DmmPhq8kfD9xB8SrdvYv6VDtmzVOmtEc+Y6vpIaSuPU4HCDtw1upHo43V8a
v8n41E9ML6kV7zdt3srJLT1nwQ3Ncw0OTDBJUruTekT3t8VbWzqqOce1iC9a
f5MaYcZMtJ01bkz24uP9yf7S+DWaHs1FBteZeKf+T23eineaM096TkvDb/0t
xVEUG7RsS+PacB+j9SV2S7R9eg+Nr8RuxiYtjmz2juLG0+fJXiSxbzCe0e5O
8zmtK8F1BlcnsW9svtCpaCyc6tQCw691ABo71M8XuJSuK+kvJGtv4YeW9rWw
Ca2zLf5CazHFjWa9FG8scFprnklcU1y9iHHDT41WQ+1s+MgC/xtdNIkd48Mt
XGp8LMFC5ntYrVrf0rcTmxj9pDWmwSEGMy9wl6nRdA6mdpj+7yLGTb8g4eOG
49C8R+1m9relqVJcasY0uDR51sluibZJe2eLWr/QOelaKA8yOYTikAWWewNm
M/WC5iXqJy0foO8laPVEaO+mlesMN2xhDBqD9HPTz6XaZks7ojlnsY90Txca
fmITg9/ovhjdu4WZb2I2Uy9MPy7RT2iPgGKndb8g8RPj2zRPGrzRqvstfkqv
k5pO+yym75PYZ90HMTWC9jVauN2ccTK5l/rG4nrhY4kvLfgg5bxJjj35gMGf
xldpL2l91iipxa260NLVW3X/4+fJOQqKAUwv/mYfxOQW2tcw+5Wsl+5XixMZ
vNfC1cbHTL1rxTjNh0kOp1zDrIv6rckzi7xKNYoFVqR4w+h1CWaj33tNckKr
Xt/U/xN/O9mtpa8utGJjE8qvqR2MJtPiF0bXpTFusIThmDT/n/aR5nn6/Xrq
Y4nNW+9gMVgxwd7GbxOsntzTikFTr+nnC9xoap+538TUIjea+mjyais2jZ+0
YjwZk/KClk6e2P9Uoyn+p1giwTwnm9Nct8CKtOa28i29XmOqm1rxumYZDp7s
l3kPRis3tjQxmldb+2j4RSvGF32KpO6saz21STI32i9YzLOFBwzXaOGfFida
5IeFVtyqXwn/pf6W+CHV34yPGU0mwQwLLtaKnRbXpjpGskZTLwyGMXogxXgt
bZPWdBo7Bm8bTNjCP6e/TThRwgFpfjiNabRioxu3MDyN6xYOoXM241OfX/vw
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
Kf5p7XWCM6lv0H1vYVTKNRKOQ38fp6VfnT4334Om8XWqKa1zC8aXTFzf1IcX
POKpupD4s8FOp3Fa7/9c4zG61y3Nc8Hd6N/S9wgtcGDCNUyPY6HbL3ILXVdS
+8y6Why5VVMWGIPW8VYsvCHXJViF4t5WvCxsZXC18ds1d6PjJNpdC/O0uBvF
/9QfEn+m52eSOdDeZTK3hMu06iPlFNSfqZ7Z4nStfPUU/jc6D9VwTK25aaub
e9rSD1vjJPmk9R3J1jhUJ2/FOD1T1HpWks+pfYw/G52whQGSdZnxW/rkU5h2
4W+JhtPqKSz6LE/taUt/aI1D9Rbz3NY4LcxPY5w+t4VtaE5LeiKt2pTUdDMf
w9Np7ynZXxovb8P/xt8oBjM9BXpPCz+v9/QNnxsbGq2P5i46PvXDJMYp5qS8
mPIRGiOmdiTXiU64/s5165rmIrNfT+F/w38Nt2r5W6tmtfp9N/1z7ds0Nlu5
vcV9Fu+DOn3eeocAzdtJ7JjfaUpwEe2nUC2Iak1P3b/A5Iu6QM8VtLgV/dtF
X+apfXnDdTI3GpvUVgZHGS7w0WcW/kw10sS2Rp9p7Rcd33AlU7tpTljf38o/
C/x/+tx8n3eRP40f3uyVLDSl1r9k/uvvYpt+bgtLrPfa4HPTO17rJ0YvOn3e
+s61qbO0HlGc/Gb8TzHMyf6t3G5wLMUMN/flDbpQgtMS/Nn6vifNzwt/ewqr
JFgr6R2v9RO6dy2uRG2evKskGZ+ep6XvYL+JM2kcJXY7rX3R105wbFKXKQZ+
2760dJ5Wb/epWtbquT+FVZKaS/NhwhFa/N34POUCCaeg/tDiBRQbm7hb4H9j
K8NPFzjZaMtv42ULncdoIKccQnORuTbnBxa1w+xd8g7wE75K1th6Z91NnkXx
RuIbrfMkrXy10DzNPM15j8XvdbbWmzzXrH29LzexNPUTui5Tvxa/P7iwPx2f
5q7EV0+1LNkvenad1sqWfpvkmQSTtNbYiq+bONPoPDQ/GK1g3b9YvC93sa61
LrTg44tcusASxv5mXUnuovFLa7TRKAzPovptotu3fM/ggTdwpUWeTJ67+L3O
lp2NXnpzX27qQqYPQrVQk0sX/Yub+j+tX+a7CaYXbGzb+luaT6jm0OL4LV19
rbmZPLnWlG7aOblefB+/VRfWuhDNCa3v9Sxyi6mhJrfTOVP8vMA2Bu+1cpHJ
J5QjrPGbse1aj2rlSeOHN2tNkqs/2qSlta5xxQI/tM45JGMu6mmrdqyxCs17
LZt8lt8xpOO8rf9o9LoFDmzlyQXmXNg5OX9Lz13QnLnO8y38YDCSwYqtenrT
b2/GheFZFNu0MMbNcZJ1tbjnUzhkXY9a31NYXLdse8qBiW9Q7XTR11jgAVq/
WvtCtVnDl5+qHWsulqwxwTbGV29qETROzffj1rx7jYdbeZLWzXX/0diW+k8S
FxSbreu7wasUn9N9oTiN5kZTE9f6f4uLJX57Gr/Vj3tqnNZZoHXcvQGHLGqQ
6Vu1nkUxg/EfWiOSGnozz6/xebIvCf6k3PNm7/ipcy8n+1B8ktSOlna9+Px0
Tc//tDDS2pee6vMaLH2zrtH+xWk+9Gyqwfzrdw218ADVhynuSvbrVDefwjyL
XGF4DeVlVPd42zXlL4lWlvj/Gl+tcUiLoy320dg56V9QeybX9LvzRuNa1wWK
z5Mcbs5mn/bxpi691v9NHjDn0Azmf+q6pTOc7l9wzLfp/wvO1dpHY2eaz9f4
uRXva/xv8Dk9K2hw2sIH3qD/071b+5vBbIt/VOOidqD9gha+egMOaWF1s4+m
rtFYuInZzJjrcwinZ1FMTrGZ0V1bPkBtssAnN2O25TM39YGWxkWftdDE3qD/
r7E6XVeyvy0ub2pKqx4ZHEL3gj6r1e+m4xg9f+EDrXxy05damLCFQxbzpNyN
PsvUmjUOX9cOg9Xp2g3Wov7wlGZr9PwEhy9ylOl303FamvNNH3ibL5n+0RqH
3Oxz0flQXJrgmZv4cI1nqE3Wc6OcffE9tUWNTuogjbs1vjrhdpqHjS+94TeV
3uBL63Fu4hDT56L81OxXS499g/5vekwtPXZxnWgLT2m25kwR1SRb+IrOP8nD
9AwPrTULH1j0pp/iIDTXrXGIyas3c47RY9+g/5u103xyszfRwkXrmLo5ZoLD
W/mKajKG961jjdqZ5qVWXVjE/k0c0upzrXPOaZwFD1rXDmqHFq9f9CZMzmzZ
bYErWn5y0uQXte+UKxZ56an4Wly38nPLh00to/Xa6EvrnJPcv+6J3/SxU8+X
6qv0PbEtffINsbnW6BacvZU3Eu3lDTa/Of4C/7c+X1/TvG3w5yLnmD6d6Ynf
zC2n+RuttcVTnorZRT1d9xwpZ299f5b6v9GgjM0X9l9w1ad4x7quGf9MuORC
G6Fj3vy96ZaPrTWlmz78VE646YdGr271K6n/0zmsdaH1/Ys4WufnRV1r+afh
kut8Rc8atbD6zfzTsttN7ryO8ZsanemLnfIzfRbFD6e+Q/J+pIW/PeXPNzEM
zc+LurboGVEuudb9KG55Q2757P78hhhf1Di6R+b9dfS5idZEP6d60dv2lNrK
PPfNvCPZX5ob6Tin2nFTf6OxcDO3tPjgG/x5XUPfpv/TXkxiN3OOgtrhtJY3
/Nbqwp8X/fS34bQEV7R6QIlPUrz9thyyyC0tPvgGf37DHj2l0Znf40tsm/Tj
Wv5M8f/b4jTJUebzRX5e1LXTPUlNp3tNxze9pDdoAgsMTMd5gz+/YY9u1vqk
prfqsjmja/w5wf+t80hv29M1xljUzWR/qfZufjuJ+tiiv9mqI2tNm865ZavF
/N8Q42uNjmoyNH6NdkRr1s3c9eY9Xesza5x22t+kdlPcQs+CUr9q5cnTut5Q
r008tnx+ja/enOeTvTjFEY0Ro8lT3ZVqR3R8g0Xftqc3zzAscFqCvU85kJ4T
SOZDz39SfGX08HVdXvDBVu27yV8+S55PfP6pM7emjiTY7+P9N9+F8oY9pdeL
czgtnEbx9gLLnbgA5b/J37Z6B0/Va2oH+v7bVh9z7TNvvn+hpbd8g3IEw+sX
Oe1tPrCe54J3JHtK9QSjP5tcndxv9Nh1XTb+k9jh4z7S9d7M1W+O8XV9f0or
MPGVzDPh4Df1k3V+bj13wTtMjqVnz1o1lOaHj/ckGJhyDVOLW37eqhctnLbO
pW+I8QUGWPSG6H6tsccb9JPF/W87L033t+WrrRxlcmOyR8mYC79d+LmpF/S5
3+n/XW5uzmGa+axxGt3Tz6jzLD5v+V4yZstXKb9r1XR6LpTa82Y9fQpv3KxT
xv/fEOMLvz3pruu9WJwHaPnSZ9F5FteLPGA03sRXk/EXnOjUI765X6aeGj83
n9+sU982/E/vb/WYTI0w5wFMf22tfd30z6fi6PS5ebcG9dXke74USxvf++jD
6/16Ss/8LHVqga/ekLefwootrS/JA+asXfIOrrX2tb7/DXGU5BOq29PxT8+i
uMLsS1KbFvu1xmytmvUZ+25viPE3YMUWNqbc3JwFOmkFa+3rbVrfIo5ofTfv
1kjuoWO2tEd6NqlV7wxOuIk3zDsV35ZLP0ueX+zdAhvTvV7o0je1rzfU+oUv
UUy+0BkoNjDfRUrsdnoWzYEtmywwWwvjLerUIo7eFuPrvVtg48V1qwYlz3qb
f96cJz1v2Xq3dis3nurRSaunZ3uS7yMs+krrz43/GM74tr7b22J8fX8LGy+u
b9aUz9IXXs+T6rpG/zc9C6PPnz5P3n9uziS08tJNfEWvE864sM+3Gf/f9CXT
22r1K1s1JTnX9wb/vIn3TrkxyfNU/zeYJLmf9omSfJ7YypwRpXV5ja+ScZJa
3zpD+x3+7+4d3d91fUmeZWpKCz+/wT9b8zzpJMl5G+Mzay0i2Xda+05+aM6I
3sRgxrZJ35DWiJZ9vsP/+d7d7Om3cMg6Pxvc9ebaTbFrMp9TLLfexdqqiVRz
SPJ58iyqQdH6tcZXiQ0TW9He0OIdsN9m/P9UT3+NQxb5meKuN9fuZJ6GN9Hf
RlngrrW+R/WfBPfSPfp4/T/I8+uZ
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1jGKlWcYhuEhgmQHMaULSBMhFhKHbGFCOpsRksogKBiEFG7DtOlSZjfZ
TRQsUjrM+c/cD7kK5RJkZvzO+9z48PnLq1++uLi4eP3lh9+urn/74dWr67c/
3v/4h5+vXzz69sW9D3z36ddH3/vn68vf/3h2+ev7x99/jt989efTv7/568l3
D366/K8/5+/f5uuc6ue56dc81d+56c92qne7zdc5+h3OeQOn+ixO9eY3fcNz
3sxdbf9Ut3qqmzzisztnr474XnfVwxUf8e86otVHdPg23+uc3/euPutz3vzK
9o/w0d+30JnC5167+f+Dj/h/jv7zOW913YW3ZT56a/rPtZssuPC2zPqv/2UX
Wl3bBfPK1vSfazdZcOFtmfVf/8sutLq2C+aVrek/126y4MLbMuu//pddaHVt
F8wrW9N/rt1kwYW3ZdZ//S+70OraLphXtqb/XLvJggtvy6z/+l92odW1XTCv
bE3/uXaTBRfelln/9b/sQqtru2Be2Zr+c+0mCy68LbP+63/ZhVbXdsG8sjX9
59pNFlx4W2b91/+yC62u7YJ5ZWv6z7WbLLjwtsz6r/9lF1pd2wXzytb0n2s3
WXDhbZn1X//LLrS6tgvmla3pP9dusuDC2zLrv/6XXWh1bRfMK1vTf67dZMGF
t2XWf/0vu9Dq2i6YV7am/1y7yYILb8us//pfdqHVtV0wr2xN/7l2kwUX3pZZ
//W/7EKra7tgXtma/nPtJgsuvC2z/ut/2YVW13bBvLI1/efaTRZceFtm/df/
sgutru2CeWVr+s+1myy48LbM+q//ZRdaXdsF88rW9J9rN1lw4W2Z9V//yy60
urYL5pWt6T/XbrLgwtsy67/+l11odW0XzCtb03+u3WTBhbdl1n/9L7vQ6tou
mFe2pv9cu8mCC2/LrP/6X3ah1bVdMK9sTf+5dpMFF96WWf/1v+xCq2u7YF7Z
mv5z7SYLLrwts/7rf9mFVtd2wbyyNf3n2k0WXHhbZv3X/7ILra7tgnlla/rP
tZssuPC2zPqv/2UXWl3bBfPK1vSfazdZcOFtmfVf/8sutLq2C+aVrek/126y
4MLbMuu//pddaHVtF8wrW9N/rt1kwYW3ZdZ//S+70OraLphXtqb/XLvJggtv
y6z/+l92odW1XTCvbE3/uXaTBRfelln/9b/sQqtru2Be2Zr+c+0mCy68LbP+
63/ZhVbXdsG8sjX959pNFlx4W2b91/+yC62u7YJ5ZWv6z7WbLLjwtsz6r/9l
F1pd2wXzytb0n2s3WXDhbZn1X//LLrS6tgvmla3pP9dusuDC2zLrv/6XXWh1
bRfMK1vTf67dZMGFt2XWf/0vu9Dq2i6YV7am/1y7yYILb8us//pfdqHVtV0w
r2xN/7l2kwUX3pZZ//W/7EKra7tgXtma/nPtJgsuvC2z/ut/2YVW13bBvLI1
/efaTRZceFtm/df/sgutru2CeWVr+s+1myy48LbM+q//ZRdaXdsF88rW9J9r
N1lw4W2Z9V//yy60urYL5pWt6T/XbrLgwtsy67/+l11odW0XzCtb03+u3WTB
hbdl1n/9L7vQ6toumFe2pv9cu8mCC2/LrP/6X3ah1bVdMK9sTf+5dpMFF96W
Wf/1v+xCq2u7YF7Zmv5z7SYLLrwts/7rf9mFVtd2wbyyNf3n2k0WXHhbZv3X
/7ILra7tgnlla/rPtZssuPC2zPqv/2UXWl3bBfPK1vSfazdZcOFtmfVf/8su
tLq2C+aVrek/126y4MLbMuu//pddaHVtF8wrW9N/rt1kwYW3ZdZ//S+70Ora
LphXtqb/XLvJggtvy6z/+l92odW1XTCvbE3/uXaTBRfelln/9b/sQqtru2Be
2Zr+c+0mCy68LbP+63/ZhVbXdsG8sjX959pNFlx4W2b91/+yC62u7YJ5ZWv6
z7WbLLjwtsz6r/9lF1pd2wXzytb0n2s3WXDhbZn1X//LLrS6tgvmla3pP9du
suDC2zLrv/6XXWh1bRfMK1vTf67dZMGFt2XWf/0vu9Dq2i6YV7am/1y7yYIL
b8us//pfdqHVtV0wr2xN/7l2kwUX3pZZ//W/7EKra7tgXtma/nPtJgsuvO2p
/C/86/oz
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztWjGuLVcR/AIJkXkBRGwBQgQWWzALQB8JIgskO0BIBGzAAZsgZg2IjZAQ
kbADbIngCqsfVa+qznTP9JFs1R/Nm9unu7q6p8/88Fe/++w33/nw4cOX3//6
f599/P3Pv/ji4x9+8b1v/vHrj5//+Eeff/dr+Kf//vcN/vNf//GTf//tj5/+
9p+ffPqKf/mXH/zsk3/9/adffvWxvF5h5DnI77IYeX56v8jfKr/r2ovif5cP
r7JN4YyLbwkepvPiKj4n4qLwOfH8dO4kOPDhZSXy6wOw0lxC9pvInav0Stmv
oldp29L6c1XepfNCyfd0bZqOlZp+0oeJ2lphhNvVOrlf5HfZ3HFpr4KrfbF+
RvSK3Zdi20T9qezEsoGLl4vn3fjcGbM1/a4+VHjuqjuues3mjuuexL4U/WT5
nLZtov6ztc+VF8p7awc+T8FsjrC5MxEjPL+KS0g/U11P4JN1TZlDIrxNzL07
vDun63JCY1k+V/G9UywSMXX1S9N9qGjLSS5V/kdyjY1vtdL6z9qQePdR5t5X
+bCD/rs0FokdW9+nx+IqPUHu6bCXBM87nCsl7Pn/CoWtBA/Z33W9+1R/m/Bb
tZduWNF/xJ+uHHTxrYPPu8U0/ZwOuPM5qUvHKp4reuXij9J7VPek78c99vZz
OueOcubC9opsDrr4NiUWq/85zGqCco+rNrH2uO5P7NH1TNe8QrH/Kh9epRWu
exCfTNeZDnj1/237u53xIXpyUvfS/DnJSZcfFB3rnDvpvHj11RSfTMer/9+2
H+nf2JV+V1Vyp5v+J/x2Vf/v6oc74ESOuPi/ePVfwS4+uziv5CObOx30v7Jf
8dtVdRCJRfo9sXOOrLb3wU/Wf/bMsRvn2d/tpv/p3vik/iOxQPrnbrnjyhFX
TV+8+p/ACFc7cJ6dM3fu/9NnKGn9T/cPHfJCyZG7asWd8JP1n7VZydn0WTAy
f+is/4hvu+l/on9ga3e3HEHsn6gVd8Wr//j8Acn3NOcTmnmV/rPaWPn8Kv13
9Q8IrzrniPKcKVpxV7z6j3Oy0tUqZxOcT2jmVTMWdl/Ic7rp/8l6OkUfqjzq
oAlPw6v/b3NS0VsX59Oa2aH/V6530/875VGib1FiurhnfLvx1sVJ13Jxnn1m
db3zGaurTp28/9XPd8qjNDe67fdp+Gn675rZsprfQTMrjVK0K90zK3Xq5Dzf
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
ylLOgpW9TPy25066OsXOJ2NlHuKaOSj5ruR+embSLdeu8gm7WE6y86LpWjRF
V6fYuVivF6/5xWp1dV2pC2zPydpf3X8Vz11nN4lve5Tl4gPLt854iq5OsXPx
+/BrHinxdZ3VpjWns56kz24Qn7iWUk+V96AOOXUnXZ1i5+KczqT1P605U/RE
iYXiE1csXPU08Z1SNzzF/il2LvbqjNKzKc93aQ4yN+6gJ4mzG8QnibmZSzcm
nt3fVVen2LlY1xkkr9m/ZXWGrVOJ+zvzXJmnKXFH4uvSjSouyOoQozvp6hQ7
F3vjq3y/wWpyYj6csHMKrvaizFWQmuLiElsLFC51y7sOtk20c7Ee30orlNpR
5amisS79R2yYwnnXN12Ixlb3uL7VZDmjcKlDvDpzbIqdi9+HlZxie0IXrxK9
5Z24ze6r0nP2t1xcYs87JmrUFJun2LnYG9PEzMR13pqeLXeIkRJTZF/pc2cX
31z3d8NTbJ5i52I9pso8B9FY13wg0f8r+tYBI5qv1DjFJwrHlPs7xGW6rk6x
c/H7YlrpBqIhbA/m0iVX/8/WtW745HtTmm9s7JR7OuApujrFzsU4ZjVf0XDX
rMl1P7L3u/L8qlxGOKbMeSbOgtbOxVfFUdFtNk8rXVVylr0f0XxEo6bjk7nM
xoXlErI669UUXZ1i52IcVznCXmfzFNFkl/6zZ9aVnXfifIdcVmb4SOyQmHbA
HWJxJzsX43FEcgTJHeVvkbxmOek6d+isG9NzWXlfu1Md7xCLO9m5+LzGur4J
Ye9R3lnY59+J8533pdgzsY53jsVEOxef0VhEV9N7YfOdrQV35fyd9pX4rqCb
/R3wFDsX5zQWWWnbkN9l58bKLHoivlMuT/8WqLNtE+1cnNNYRXtd3ENsVq6z
z5+I75TL07/pnRKLKXYu9mosovlXaaPy/Y8yN5jO/zvtBdF8hMMbi3vYudib
U525weqzMivo3EM+LZfv9E3vlFhMsXPxGS3twA1EnxE9Z/vDbj3kk3O5igV7
fWNxDzsX57S0GzcUrUY0f+J54hNyOT3367aXDniKnYu9Wopo7ElupL/3qGpf
VS8m5sL0XE7M/brtpYOfJ9q52BvTbt9XJ773UL53RepjNzw9l11zvw57nxKL
KXYu1mPqwgmbE/rseuaUvJiey2xMlXs2FrPsXPy+mCoa+LoS3Eh87+F6ZnW9
M56Yy+le5So/dLDhTnYuxvF79J1ZaZvZ68hMgNX2iXkx3WY3T/+XGxuLuXYu
xuOYqAXIbyW4h+yLrSndzj6enMsufrIc3ljMsnPx+3JKyTVWb13cQzSfffdX
/nZKXkyxOd2rVFw96ZOJsehs52JvHJF8SfME0WfETnYvrOZMyYuJuczGFFnI
8zcWs+xcrMeR/WYyzRM29xWfINdZbemGp+Syq1dB4nKVT+4ai8U9cWJ2cfKZ
ip4rf8v2jZ1zZEouJ859up3j3CkWi/tjZJbS7ZlX8Q3ZC/IdUTfcwbeKney5
D1ILVv/vYediXNOQ665nKj38Vfn4oVjsPR3i3sG3rli4vgVN9C1PiEVnOxe/
L3ZsfNPfRl7FN0VPqtWBAx18q8TiZIxOxm5KLKbYuRiPnfL+m/428iTfEt8Z
Is/vxoeJtrli1IF73WIx0c7Fb8cOyQtW/11514FvlZ3svtj9bi7jtrm+y+pw
Ftw5FhPtXPy2prHL9Uwk76bkIOKfzvky0TbXd1kIJztzr1tcOti2+O14sbrN
xh155n8A+wX5ag==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2DFKw2AUAOCgIE4OXqB4Bd1TXAQd6wki6FQQ4iA6uXgOb+Kmd/AS4gUE
W3BwKTT8fclL/YaWr+Fvkv/l/e8lObq6nd3sVFV1t7/4mjX3p23bPFzuLX9c
N/OT4/nugk+/n6U/X1/q77Pn+utxUq/y+ftF/dYeTj8OJtO/7jpm1fjo7eu4
69y77qcknutsL4lJyTmXuORYXc85Yv9dj1syJmJ8dKw2tTZL1kv03CNyJqLG
Rq/ZiFyKuNbR7rNfZOhr0esiooduqob32eujr2mf8+2zfw11rTPPN/O6i4hV
nzGJ6BfZciDD+socn6GeKTLn8FD3ohmcbb7RfSp6vW9TPmSrA9k81H2sXC3P
w+i6lzmeJfHJMN8Mz49q4//0WHJgLOeZLQ5jfO8REZ9s9zPymZkj6kmG9x4Z
4qCuMvO2euzvPZiZOa4XZHvvwczM/dT/6P8yMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzNzfv8AmlT2nA==
       "], {{0, 128}, {128, 0}}, {0.,
        1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "1"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2z2OZsUVBuCRLSFvw7kTIGYsy5lDHBEOCCKEJRxYzkiRcyx5Cd4ECXtA
3oZXwIxE4MQSrTrvqVO3ngD0TOvO1/fWzzlv3en+7ad/+fiLX7169eqvv3n7
v4/f/O0PX3/95u9/fu/dHz5/8+WHH3z567f85uf/3vnb/371+pN/fP/6P//6
50cJf/fvP/3+s/d/99Eff/zh9f/6/13z0s+p8so9d17/S8bnpddUfT0xhlXj
s3KfL/2clfFfmff0+k+vh6pnrBrzXTWkau111tuq2jWtF+zqC1Xz27lfOvdd
5/qp6ikr+zFRJ9NzWnVvVb1yWg1J98fJ/XfXvVV9r2m9Pl3fqmrXrhrVeT5N
jOGEPjuhH1Wt/86xSueTlbUxLd+ms0HVfab7RboXnD7viXo4rZ6k7zldQ27o
R1UZI53l0v2rc31OmMdErkv0gvS9TZj3ql45oZ4kamCihqTPpJP70a4zTrp2
pcd88j5KX1N1faJWnzjv6R7aWU+q5iVx9kz0qdP70eR6VbU+031k1z6qet50
7a2auwn1JD3vifo27SzQuZcT7xCqxn9CP5rmXeNTde6eMG6dZ8zOdw4TPrNz
3hP3UNUTJ6/taft9Wj96qjvrw4ReULWWqsYw3V+q8kNVZkvP+67+O6GGJPJM
er939ogT+/gEJ/b+rpqwsg6r1kzVuk3UqM4z0bRekO6zk/NM+kyUWPOdGe9J
Tqz5qnFLnEEStWjX+XrC+aKzJ07IANPeFSSeJZGRdo3zKfM42afPVzoDTK6r
nefizvrQmXM6M8+J95Des4n9OGEMJ7uqpnXOVzpjJLJQVV2dkLET958+U6R7
3K7ae0pNSO/rqme8zZ31Kr2XE3Pdea7szNXpjJ3ovyt9rfM8mKi9u+4hkZ+r
1oZ6npvfCb2j81kSeSZRZybsnc45TXy9avx37dkJNeGpGewGp7PZrro34Ww4
rRatjFW63ib6bPp5n1RzqsYn0ac6M9gNTuftzl6QqL2d45yoRZ19P1FDEnUj
fR45seZ0znX6Pk+fi2lz3blfXno/iRqbHudEDU/P3cpcVK29xPhXzYX8/4w+
eIOr8mF6/VfV/Kq6lLj/qr+bPhd3ni925Y3E+JxS907J/9zT61f2RbruTahp
K3Ug8S7oxLNV4u9W1fn0uWnC3k/069Of/WZXzXWibnT2kc7cmNiDVfUzPUed
fbaq/j+1psn/vOs9w649u6tOVo1/Io8lzoPp9bmrjz+1vsn/97jzPcOEmtBZ
J6uur+oRiXnsXBuJMXnSXkiMbWf/5b01/8T1n37HUpVtqs4R6fNL57jtWre7
MsAplv+f50TmPHH9J/J8YgwTtToxJol7TozbhD472fL/PU7061PmvXOd7+oj
K3Wvagw76386D6ys/8l7oepZ5P+zXHVe3vUeYNo6T49VZ+7q7AsT6urKXEwY
n8Q4r/TKU/b+bU6c5RMZdfI6X7lmVz3Z9T4kPUfp61fmbsI639UTT+x9T/Wu
835VfTuxJ1Z9PfH+ufN91Cl9oWqOTq978v8z3FkrVvrOrrXR+exV+ys9753v
QKat+UQumjAmiT0i/5/lRKad8L0SNX9X70s8e2eWe1IvqLpmwjhMXjM8Z04T
PWXafU7L/J19sGocntQLqnLsU3Ov/M9Va2PCfu/sX+n3yelxSNTYU971Jc4F
E/Zs596ZMO/cvzamrf/0e5h03Z78mSt1Y8K7vvRZZsL6T++dqt7B53ranCbe
w+zqI9M+s2r8d/U4+ba2j982PjzfiTrQuS9Of1/RmQ9X5ki+Xc8PN48Pz3FV
HUhfM+Ge03szcVbadT5auf5Ey/98iqvqSdX6n7Dvdu3HqnduVb0+3Ws618Yp
++u28eG9azKxnidkmERmTu/HzrNJ4vN3rclplv/5SU5klV35ObE3O2t+VS/e
9by3Wf7n012V+Xe9P0n3iEQOT/SO9Pfi3Do05jxhDVfVkKrPXOlZVfu3syd2
5vlp7/ROtPzPJzqx39M1ZFdvSnzf9N5P/9vBhDU8Ye+srDd9lqet23Rt3LXO
J7y/OmUcpt3zZMv/fLoT78MnrOGV9yfTnmVXrzn92Sfsl5V+wTxhbZ/4fsDP
xvCuNSb/84k+PSum/91hwjPy/D0i/zPvrfmJn+G0Z3mlnsv/zLX77pfsx6o9
e8q7L+5feyvr0/phrt2DVX0hcT/8DMv/zHNctR/lNF6pz9YV8/z92PmZ/DzL
/8xznPg9BTmNq2q4/M/cU/MTv/9lz3Ji7b30Guabncj26Wv4GZb/mec48TOc
fi+YV9ae/M88p+av7DW9gNNrxvphXq/5K3ttZW/ay3da/mees7+e9Jk80/I/
8979VbUfp30mn2X5n3lOX5jw8//277Mt/zPP3IOdP/+v5rP8zzyn/p/+OTzf
8j8zM8v/zMz3WP5nZmb5n5n5Hsv/zMws/zMz32P5n5mZ5X9m5nss/zMzs/zP
zHyP5X9mZpb/mZnvsfzPzMzyPzPzPZb/mZlZ/mdmvsfyPzMzy//MzPdY/mdm
Zvmfmfkey//MzCz/MzPfY/mfmZnlf2bmeyz/MzOz/M/MfI/lf2Zmlv+Zme+x
/M/MzPI/M/M9lv+ZmVn+Z2a+x/I/MzPL/8zM91j+Z2Zm+Z+Z+R7L/8zMLP8z
M99j+Z+ZmeV/ZuZ7LP8zM7P8z8x8j+V/ZmaW/5mZ77H8z8zM8j8z8z2W/5mZ
Wf5nZr7H8j8zM8v/zMz3WP5nZmb5n5n5Hsv/zMws/zMz32P5n5mZ5X9m5nss
/zMzs/zPzHyP5X9mZpb/mZnvsfzPzMzyPzPzPZb/mZlZ/mdmvsfyPzMzy/93
+ifK6zPB
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt17GKnVUUxfGgIL6BtY0PYHoHQdA69koCahMQYkDS+R6WNj6Gj2YCFoKM
zOS75/t+a59VKDeX/+xZZ6919j7z6Yufn/34wZMnT375+O3/nj3/9ctXr56/
+fajd//44fnLp5+//PDtx9/++e/d57u/vr978ftnd39+9c3dQz5/8vrru++e
Pv3ipz9e3/v9fZ+P8A/RcOQst9J/1e99bN9WazjzZ4+c91bZPjMDK/xd8flW
vgh351az5Qiz2usjM/9IH1bc2VvtjtU+XtW3FRrO/NkVM+TMnFxVc/Xnq/bC
iruz+m18lde32qEpd3bF96t3+pl9W3H2M3/2Vu+Hq3KyuuaZM//MvbDi7qx+
GwvvydVvj/Q7K/h4Zt+0eS68H4S5Le+CxLu/+r2aMkOumreJd1bz8VZ9k+f5
VXtQntvCLki/+2feL3mGXDVv0++s5uPqN4y8C+QZMmkXnDlnhDl/1X0RZkji
bt15F2h9FvIp5Dl9F5ypQfBIuy/CDEncrel3YVKfz/xZrc/y3Nbyr3k0KRvC
Xd7tzmo+yj3cYYbIc/uq/Av9l7UJc3i1BsFr4S5MesOcOYuEs8j3Xagp9Hbq
fTnzvLfSIPRTuwtT3zBT54OWq5SaQm+n3peUXaD1U7sLU98w6fNB60l6TaG3
wu8VfFytQeiV7Ivgo8YIGjRGmNtCzm/FCJ4KPvbOOr4IPmqMoEFjhLmdvgs0
TwUfe2cdX/q3VXOVMrdTdoHgl5aN3lnTF02zxggaNEaY23L+Nb+EbOymQWO6
C5orIVcpNfvmv23Pr7pTQh80pruguRJylVKzb/4Zd0o4o8Z0FzRXQq5SavbN
/36MNmfkXqXcWUGzxggaNEaY2835tYzcf61XAqN5lMgIGjQmZW7X0+4CoVcC
o3mUyAgaNCZlbtfT40xi/+V+ptxZQbPGCBo0JmVu19P3Y9L7r/VTYDSPEhlB
g8akzO162l0g9FNgNI8SGUGDxqTM7Xr6/0xiToT6iYzmUSIjaNCYlLldT//L
pOdEqJ/IaB4lMoIGjUmZ2/W0u0DoucBoHiUyggaNSZnbO3sqaOsucBjNo0RG
0KAxKXN7N081bd0FDqN5lMgIGjQmZW7v5qmmrbvAYTSPEhlBg8akzO2pnsra
hP4LZ9cYzaNERtCgMSlze5Knsjat/8LZNUbzKJERNGhMytye5KmsTeu/cHaN
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
RjaE+nLPuwvmZSyFSZnb9XRGNoT6fwMxJynS
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.775460603113913*^9, 3.77546061827178*^9}},
 CellLabel->"Out[66]=",ExpressionUUID->"6659f1a8-41b7-44a6-b896-eaa301324ede"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dir", "=", 
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7733290093954697`*^9, 3.773329016503849*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"db9350c5-1a30-45d4-8a16-ba95399c6912"],

Cell[BoxData["\<\"/Users/thorsilver/Downloads/Wolfram notebooks\"\>"], \
"Output",
 CellChangeTimes->{
  3.773329017635899*^9, {3.7734927077811537`*^9, 3.773492718275812*^9}, 
   3.774171834122046*^9, 3.7742267514462214`*^9, 3.775460635428236*^9, 
   3.775514627237151*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"ae52d4f0-7fa7-488d-a1d2-68534c6ee33f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"netECA16", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"netECA16", ",", "fullTrainingBigC16", ",", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", "20"}], ",", 
    RowBox[{"BatchSize", "\[Rule]", "256"}], ",", 
    RowBox[{"TargetDevice", "\[Rule]", "\"\<CPU\>\""}], ",", 
    RowBox[{"TrainingProgressCheckpointing", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Directory\>\"", ",", "dir"}], "}"}]}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.772359301378972*^9, 3.7723593151826487`*^9}, {
  3.772692972974709*^9, 3.772692978955448*^9}, {3.772693103833131*^9, 
  3.7726931061383677`*^9}, {3.7726954327396307`*^9, 3.772695433052311*^9}, {
  3.773129922404114*^9, 3.773129928369681*^9}, {3.773159589015329*^9, 
  3.773159589253455*^9}, {3.773159731047542*^9, 3.773159755478558*^9}, {
  3.773160016071207*^9, 3.773160037844142*^9}, {3.773163441661957*^9, 
  3.773163451374845*^9}, {3.773164439689281*^9, 3.773164440226226*^9}, {
  3.773190755014002*^9, 3.773190759153596*^9}, {3.773214805205216*^9, 
  3.773214807559754*^9}, {3.773215293310206*^9, 3.773215308393745*^9}, {
  3.773254986921338*^9, 3.773254987629869*^9}, {3.7733289965083933`*^9, 
  3.773329001497841*^9}, {3.774171842022563*^9, 3.774171860396275*^9}, {
  3.775459137309967*^9, 3.7754591437762423`*^9}, {3.775463016487729*^9, 
  3.775463016542148*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"4977fcd6-1ed3-47b3-bd7b-eea560721493"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["15", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{24, 3, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 24, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 3, "$InputSize" -> {128, 128}, 
                    "$OutputSize" -> {126, 126}, "$WeightsInputChannels" -> 
                    3], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "bat1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{24}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 24, 
                    "$SpatialDimensions" -> {126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "ramp1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {24, 126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{24, 24, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 24, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 24, "$InputSize" -> {126, 126}, 
                    "$OutputSize" -> {124, 124}, "$WeightsInputChannels" -> 
                    24], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]]], "bat2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{24}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 24, 
                    "$SpatialDimensions" -> {124, 124}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]]], "ramp2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {24, 124, 124}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{24, 24, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 24, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 24, "$InputSize" -> {124, 124}, 
                    "$OutputSize" -> {122, 122}, "$WeightsInputChannels" -> 
                    24], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 122, 122}, 
                    NeuralNetworks`RealT]]], "bat3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{24}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 24, 
                    "$SpatialDimensions" -> {122, 122}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 122, 122}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 122, 122}, 
                    NeuralNetworks`RealT]]], "ramp3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {24, 122, 122}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 122, 122}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 122, 122}, 
                    NeuralNetworks`RealT]]], "pooling" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {116, 116}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 24, "$InputSize" -> {122, 122}, 
                    "$OutputSize" -> {7, 7}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 122, 122}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 7, 7}, 
                    NeuralNetworks`RealT]]], "flatten" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 7, 7}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1176}, NeuralNetworks`RealT]]], 
                    "linear" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 1176}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {512}, "$OutputSize" -> 512, 
                    "$InputSize" -> 1176, "$InputDimensions" -> {1176}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1176}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "drop2" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.2, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "linear2" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{4, 512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{4}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {4}, "$OutputSize" -> 4, 
                    "$InputSize" -> 512, "$InputDimensions" -> {512}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]], 
                    "softmax" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pooling", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pooling", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "drop2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "drop2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3, 128, 128}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {128, 128}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, "Interleaving" -> False, 
                    "MeanImage" -> None, "VarianceImage" -> None, "$Version" -> 
                    "12.0.11"]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {1, 2, 3, 4}, "InputDepth" -> 1, "Dimensions" -> 
                    4, "$Rank" -> 0, "$Version" -> "12.0.11"]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"128\"", "\"128\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bat1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ramp1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"124\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bat2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"124\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ramp2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"124\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"122\"", "\"122\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bat3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"122\"", "\"122\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bat3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ramp3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"122\"", "\"122\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ramp3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pooling\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"7\"", "\"7\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"flatten\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1176\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"drop2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"softmax\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   ImageSizeCache -> {298., {129.9169921875, 135.0830078125}},
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7754630133861523`*^9, 3.7754948442053757`*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"9bb57eb4-f01d-4cc2-8d02-296615a3b7b6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"netECA16", "=", 
  RowBox[{"Import", "[", "\"\<netECA16-r20.wlnet\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.7741936807666407`*^9, 3.774193692512092*^9}, {
  3.775459150432324*^9, 
  3.7754591535077133`*^9}},ExpressionUUID->"5e43fb41-b660-4175-82c6-\
2969f7b6b1de"],

Cell[BoxData[
 RowBox[{"netECA16", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"netECA16", ",", "fullTrainingBigC16", ",", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", "20"}], ",", 
    RowBox[{"BatchSize", "\[Rule]", 
     RowBox[{"256", "*", "4"}]}], ",", 
    RowBox[{"TargetDevice", "\[Rule]", "\"\<CPU\>\""}], ",", 
    RowBox[{"TrainingProgressCheckpointing", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Directory\>\"", ",", "dir"}], "}"}]}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.772359301378972*^9, 3.7723593151826487`*^9}, {
  3.772692972974709*^9, 3.772692978955448*^9}, {3.772693103833131*^9, 
  3.7726931061383677`*^9}, {3.7726954327396307`*^9, 3.772695433052311*^9}, {
  3.773129922404114*^9, 3.773129928369681*^9}, {3.773159589015329*^9, 
  3.773159589253455*^9}, {3.773159731047542*^9, 3.773159755478558*^9}, {
  3.773160016071207*^9, 3.773160037844142*^9}, {3.773163441661957*^9, 
  3.773163451374845*^9}, {3.773164439689281*^9, 3.773164440226226*^9}, {
  3.773190755014002*^9, 3.773190759153596*^9}, {3.773214805205216*^9, 
  3.773214807559754*^9}, {3.773215293310206*^9, 3.773215308393745*^9}, {
  3.773254986921338*^9, 3.773254987629869*^9}, {3.7733289965083933`*^9, 
  3.773329001497841*^9}, {3.774171842022563*^9, 3.774171860396275*^9}, {
  3.7754591562035217`*^9, 
  3.775459159841263*^9}},ExpressionUUID->"d69ea0b3-015f-41a5-b247-\
f9c40fc9a38d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generate test data for Network XVI", "Subsection",
 CellChangeTimes->{{3.773348207450644*^9, 3.773348219490479*^9}, 
   3.7741885294352407`*^9, {3.775459035186078*^9, 
   3.775459035937813*^9}},ExpressionUUID->"f69a5e78-f4cb-4dae-a15b-\
86ce5600f6ad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dir", "=", 
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7733290093954697`*^9, 3.773329016503849*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"dd1971a5-e713-481d-bc4d-6d7f291ac328"],

Cell[BoxData["\<\"/Users/thorsilver/Downloads/Wolfram notebooks\"\>"], \
"Output",
 CellChangeTimes->{
  3.773329017635899*^9, {3.7734927077811537`*^9, 3.773492718275812*^9}, 
   3.774171834122046*^9, 3.7742267514462214`*^9, 3.775460635428236*^9, 
   3.775514627237151*^9, 3.7755148091745443`*^9, 3.775514933306891*^9, 
   3.775515196877109*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"93c21fdc-f087-47ac-9e86-52d55efd873d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"netECA16", "=", 
  RowBox[{"Import", "[", "\"\<netECA16-r20.wlnet\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.775514671284768*^9, 3.775514681219206*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"ecd778f8-1522-40e8-aef8-20f42674cbe8"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["15", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{24, 3, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 24, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 3, "$InputSize" -> {128, 128}, 
                    "$OutputSize" -> {126, 126}, "$WeightsInputChannels" -> 
                    3], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "bat1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{24}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 24, 
                    "$SpatialDimensions" -> {126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "ramp1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {24, 126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{24, 24, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 24, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 24, "$InputSize" -> {126, 126}, 
                    "$OutputSize" -> {124, 124}, "$WeightsInputChannels" -> 
                    24], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]]], "bat2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{24}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 24, 
                    "$SpatialDimensions" -> {124, 124}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]]], "ramp2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {24, 124, 124}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{24, 24, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 24, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 24, "$InputSize" -> {124, 124}, 
                    "$OutputSize" -> {122, 122}, "$WeightsInputChannels" -> 
                    24], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 122, 122}, 
                    NeuralNetworks`RealT]]], "bat3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{24}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 24, 
                    "$SpatialDimensions" -> {122, 122}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 122, 122}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 122, 122}, 
                    NeuralNetworks`RealT]]], "ramp3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {24, 122, 122}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 122, 122}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 122, 122}, 
                    NeuralNetworks`RealT]]], "pooling" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {116, 116}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 24, "$InputSize" -> {122, 122}, 
                    "$OutputSize" -> {7, 7}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 122, 122}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 7, 7}, 
                    NeuralNetworks`RealT]]], "flatten" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 7, 7}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1176}, NeuralNetworks`RealT]]], 
                    "linear" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 1176}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {512}, "$OutputSize" -> 512, 
                    "$InputSize" -> 1176, "$InputDimensions" -> {1176}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1176}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "drop2" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.2, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "linear2" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{4, 512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{4}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {4}, "$OutputSize" -> 4, 
                    "$InputSize" -> 512, "$InputDimensions" -> {512}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]], 
                    "softmax" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pooling", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pooling", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "drop2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "drop2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3, 128, 128}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {128, 128}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, "Interleaving" -> False, 
                    "MeanImage" -> None, "VarianceImage" -> None, "$Version" -> 
                    "12.0.11"]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {1, 2, 3, 4}, "InputDepth" -> 1, "Dimensions" -> 
                    4, "$Rank" -> 0, "$Version" -> "12.0.11"]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"128\"", "\"128\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bat1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ramp1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"124\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bat2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"124\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ramp2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"124\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"122\"", "\"122\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bat3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"122\"", "\"122\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bat3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ramp3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"122\"", "\"122\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ramp3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pooling\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"7\"", "\"7\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"flatten\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1176\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"drop2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"softmax\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.77551468219685*^9, 3.775514812203512*^9, 
  3.775514936672386*^9, 3.775515199493626*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"25f87ae8-4d83-432d-8dd7-1e84db70f8d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"testDataECABigC", "=", 
   RowBox[{"dataC", "[", 
    RowBox[{"128", ",", "128", ",", "1024"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData2TBigC", "=", 
   RowBox[{"genData2r2C", "[", 
    RowBox[{"128", ",", "128", ",", "1024"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData3TBigC", "=", 
   RowBox[{"data3T2C", "[", 
    RowBox[{"128", ",", "128", ",", "1024"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData4TBigC", "=", 
   RowBox[{"data4TC", "[", 
    RowBox[{"128", ",", "128", ",", "1024"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData5TBigC", "=", 
   RowBox[{"genData5TCC", "[", 
    RowBox[{"128", ",", "128", ",", "1024"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fullTestSetBigC", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
    "testDataECABigC", ",", "testData2TBigC", ",", "testData3TBigC", ",", 
     "testData4TBigC", ",", "testData5TBigC"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "fullTestSetBigC", "]"}]}], "Input",
 CellChangeTimes->{{3.7727181209651337`*^9, 3.7727181544477663`*^9}, {
  3.772718196797276*^9, 3.77271823838671*^9}, {3.7727184594178867`*^9, 
  3.772718461126959*^9}, {3.774192047474938*^9, 3.774192068250688*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"51bb8b93-c52c-4189-86e6-2e2dac5e02c0"],

Cell[BoxData["10240"], "Output",
 CellChangeTimes->{3.7741887720758123`*^9, 3.774192304243709*^9, 
  3.7754952203381653`*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"2b74235e-4b8f-4a83-ab3c-0952ae36d816"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomSample", "[", 
  RowBox[{"fullTestSetBigC", ",", "10"}], "]"}]], "Input",
 CellLabel->"In[78]:=",ExpressionUUID->"76ea483d-0107-4c29-9923-2a7a9eb22677"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1jFqAkEUANAlQvAaaexsTO8Sj7DBPiskhUgEU4QUAXMNz2CvXS5mEQVb
IcPMZ2N4xS5vlz/D/Pmzs3M3WzYvN1VVvfWPt6Z9f1it2o/H29PDc7u4Hy16
R67P18n7SVMPqqd6M/8cX/Lhezj+2r3Wy+20To2/5NT437Qt9b5U21LxOeOM
mIecukfUNHXdpvaT467WVXQ/0bmXmufoWues81LfdWr/XeXOXMoR+17EmeS/
OiLfnP949Pivvb5dndWZmfnv2H7OzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzM
zMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzM
zMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzM
zMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzM
zMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzM
zMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzM
zMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzM
zMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzM
zMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMw5/gFQmRJb
       "], {{0, 128}, {
       128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "1"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzN27HKtduS1fGjggqNmJuJd6DxORsDEzFqFeMjaCANDW0gnUiHHWhiamhu
0ImhiNchGJgZiHfgaTD4kon/H6OevQ2+zdqLtZ41Z82qUWOMmu/f/Kd/+Pv/
/C/+6le/+pd/9Xf/+f3f/qu/+0d/9Ns//od/+c//55/99g/+zt/+g7/0u5d/
8n///fnr//oX/t5Pf/1//K2f/sm/+M+//k//+t/+5r/8hz/9zX/89V/76cf3
X69//Pzru+WZ5TlX61n2q7/79fN/qZh8sd9lnZqHX69/ef/rZ36xl6/js5zv
L1UXyx7/f8CHsubftY//57/y/PLdsv5lDUvcXr+le1n29XVMvtjvss6yhqtn
au1ofL6I+RUOLM+/Ojs9Xz3rq7r4Ij+/wIcfX+s6f/zu//xff/ab//aP/spP
v/cP/vFPf/zf//ev/82/+/s//Y1//2e/+fH9EqsfP//ja+1xr+cs56V9/PW7
C08o8SlnpDHRs1t4zrLO13eXnLzCxp8z5ks+KwYu/bScXXn94/nqWX9dF0t+
XtWO8vwrHC65+nr/hWOlH73yban90h9fZ6HPKWvQPV7FRPOk8Jzl7Erf0Zxc
+KRi2lXMyzMLT/gC97R/ac4scfu6Xy/5ueDeVX3pbxU8fP3uj31w8S1/fP3q
rbrfgu0/PufH3y39uuSGaq7XGjQmS395ncVydq/1LHypxPCL+Hz9zCt+8ktx
4JIzV7G96tdXPPwKA5ULLXX6xUzn6xnWa/1FY5aaer2vay495RVP/a7q7oKx
V/OskifKGxd/T+NT+u/yzNdnlnz4pTiw5pXGtuiOr30M5VFf4+Hyu0tsr/b+
2suPz//C9/sx9378rdI7Fn5SsO51RgUby2dKPRZeUfKh1KbmSfmtJT4Fb7Vn
vWKr/K3k0hXP1zp9xaH0uIK3pV+oDl3ir5xkwUP1lpX/L71Y915queTMMiNQ
7vSqO9X76m/8nJqr/Jby7aLdFk26aJYv9GA506Vmr2rhigMrt389c+HDS24v
mFnis+Dh65/OoK96jX5mwZNSU6oTC4cpPGHR8oUrLmfxBZdWvr3Mf5dZz+KF
LnqwYHVZv/onWguFM2vcFrz9wnu/qv2FM3zBA5UTlrgV7faFn6MxedXmoh2K
L1Q+o35R4Q9f8CLl0uX111xdZzdfaB/lcmVtev+n5P/PycFeeylr+MJ7V061
xGTxSBceqHHQs1jqS7l0yYHCvZd1LjlftLzeZ1g4hr4uuVfyqnz3iquX/nuV
q1qDhQ+UXqb5r/edFg5WNE6p0yvvvdSO8v+lljXHljUXj0Lv4P34uwunveLS
i0ZQTNNecDVDKbzi9VuaJ4u2Xe76Xt0p0rtMmqtLDFWfXvUa5diLX6q5caU7
SmyXv8nSObLe5Vh0sZ7vEv8lr168RbFU+6nql8XHWDSFYkKp/cXrKzi29I7l
rovms849F3xe9OlVr1FuXJ6/9NPXfot+1N665Pbr7L6o90UXF45XOHz5p/6D
ziZKvZfeWvLhxQdKHJa+WZ752q/WfonV1TNLHi4ei3qer7xV3LvCyRLz5be0
XxesKGenPtKVT1XO9wqHF09j6WXKURdutvyNySuv1I8teykxLM8suaH3uAq2
l3Ms3m/hCUUXlJpVbbJwoUUTKRYt2HvFCZff0n6tPqTiYbnHu+Rkwaglb0s+
aA0uHpreN1s0qeKecvjS9xWHlR9qziw9t9TOwsMXj129FOUkys+1j6jvqvmg
OKA5WfDhCn/UO9J16n6X18scv/SpBZ9VzxYPbfFXlx6qPo/eK7iqkcVXUd1X
eq76JIqZV/cYFR+0BgvHXjin5r/Gbckx9WRKT1T8KWex6L6yF8WrJVe1d5Q8
uapx5TOLv1rOseD/8nntp0teFQxR7NVz1NlK0SAF9xb+U3636MSyHs0Z1V+K
CWWd6o1c6Sn1RfV97fVXWK36rjxneeZyf6bUuPLwRReXMy0+T+HYr88X/6T8
1hUfeOGtcshSywu+6We+wKLCfxSLin9ScrvMlfSZGpPFk7zS7CW3X+8XHrVg
qcZzeX/h26pbr+77vfK26FztOyVP1IcpebjkfMnbhVeU2Gocil7T+Cznolik
XOWL5+icSOeDSz6XvNJzV81+lQ86q114i+pKrWXl21czIPWgdHbzxR0/7Xcl
/xd8UJ658IRXHy/xfMVhmQ0tcSs5v3Bs9RWX56iHU7B9iUPp6brHZRZ2lQ/L
3FBzQGNb3r/yoBafocT8FX/F0mW+r31Qfc4lbxc8VLxVzv+KW3nOlY9U9n51
x6DkxsLrFh+v4EC5c6W9uOTY1V3ipaau7nDq2S31rrx38VhKPrzOVHNM524L
51fOU95fzlG/q3hYtMzC+Uv+q05RHa1rWOrliv9ofur9Ya1rrZGFF2lPeeVh
wcOruiv1+MXdocXHUI9F86ScnXJUzW3Vm9qPVJto7y7nq/xc39e7guWsr2pN
dVmZiSvnLDpU+U/pL1/o99dvLZy84Mxyt0rvd5VzX/Lz1Y+UT15hRcGf4p/o
+hceovim8Sx1umBRWcMVZy5YVJ5f/JmCDzpD1Fp7rVPvyShuL5xKufSi6RbM
17tVJT6FI115WbrOgnvL3KRwJL0bU2p58X4Xvnd1R1rf1zUoj1q4t+Kn8tWC
2+oHFh1UYlJ4r/KukgPayxRLVdO9Yni190W/l3NRTnulH0ufUm1V9qtnpOtU
3P5iFqZzz1d8FgxUXH3lYYmJ6g7VUJq3yh9UGyq3LLxX/Yor3vX6vGKsnrvu
XbV8ec5r76rvSk6WPNdcXfjPcl6FoypPWDiqxqesX2dhJf6Kh0uslEeVXF28
XM1/jafqXMVA9VhKf9R61DlL8ZHUi1O8Krm0+CoFw0vfXHjpcu4lBzTHNFe1
xynfvrqXpf36CpeKPlUOWZ6j56VrKM8pdb3w6mUNqnMV95aZpnrmymMV94qe
UsxXXrfcsVEPrWgWzduCA+XcC3YtfyPwhR9YOJj2OOWoOjfXmlIeXnhI4WCa
86UGX2so56gaf8nzhc8s/GfRngV7ixYuvbh8d8GKwkmUH5b6vdLsC99YuFnp
O4pv2uNKHpYaLDOvK36iOlf5vNap8vDy/qIvlBepvltqZOHVBet0Vr7wcD2v
ckbqjWjPVU5esKKsU7ncghuqIxa+odxsqdmC+S/+UM5IPW3tpwU/F/2ruLpg
qfLbVx19MfdUTV04nvY+9aO+8KKVMxQevuh9zVXl4YtefvVQnTVrnEscltxT
/lA+r/6bntHCPdQf0zsw6nMuPW6ZBaueKlj6Bb8tcVCM1fWr3iwzbsXeUu+a
80vv070veaVzh4JXJf46uy/rv+LkqnEK9pa+Vp5f+u/ilRUevvhjyoGXz1zN
IBY/udz3UCxa+G2ZCSr/L/hTcHXpIxpn1SyaM7qvxZfTe1/KIZW/ldwr/bpo
hGVfqvsU50sOf3GXqXAA7fVX3tqCFYonywxiqYul9hctpn2z+J+F75XXCz7r
WRfcK/1Uc2bRU8tsXfeyxK3UguKD8ij1cwrmFxy48r7UV7l6XeKz3LdX3af+
qs44dAax3ClazrHkvO59yeelBguXW/TL0k/V+yp7V3+mcJJFI+hefk4ectWn
Fs2oXpzeDdD8LzV1xf+/8CQXf09134JjOtcuZ6pzQK2F8vlldln8hFKDpTbL
uSu2qzdYuMfSH5fzLetRb7bkiXLv5Z6Jvr/s96rulh5R9PXX/P8LPC8a9ou+
rzimvF09H+WT6vkrd9Xeqjy/eIM6K1HPtnAD5RX6W3oP5+pupN7jUi609DW9
37I8p9TaUneLnlU+dpWfiw+jeH7le5e+rzim+PbKAX1OOV/FQ+2DC68o3Gbh
J4U3LvO7qzhc8SLVkpp7WqfKu5a+pv5qeU6puxJ/1TtFz+pMQfXvFedf8Fx5
neqy4v8vvXI5a+01r7PWucYVny+cWbmNxrxo9tILFg2rOaO8aOFjWkfK7Ze7
eS+sU1xavqtnpNpBvQjFYT2XRZ+WM73C82V+oXW03FFc+M/yTPUuFkxTXFVu
o/OOwsGUCxVeXeJwxf8Vq5VvFJ65aOGSh8XfK3vX+zNXrxfva8FtPa/lLmg5
3ys8v/IZtN7LHrX2rzTFoncWDvD6zOu8tJYLJpQcXuJwlbfac0uv19pXjamz
hrIv9Sd1vqy59LUuWGbfekZ6XjoXWGpKeVfRQeozLFxF52hlDdofFzzRO4Sa
80v9ljWoP6N+9eu3XnHWXFXuWtZzxd+UM2veFhwovr36IcVz/kIXfDG7LD2r
zCYKXim/veJdBXtLDLUHLRxb17BoCsWThW8sda2f0V7/xXMWbF84c+Gr2lM0
zxcNWLy70ovLmZaYFAxZzkVxYPG6X/Esayu890qDlM8vd79LzMvsUjWs8u2y
htd+r/BkOa8vvAXtKcu9a32O9uiyHuXMy30n/UzBE73frmtQT75wfr3fpeei
/XHxDBfvS/NkqVPtoeW3in555bDqR63HpY8vc2qdOSpnU4/xSs8WH0O5QXmO
+jxfeGXqwygn0b1ccYnX72qcr7il1kX5vP691SsOi1egHt2SAwVnyh6XuwfL
mV7pO8WB5V6TepuLHtS+s/RB9fd0v3rXpdTjF3ypxLzEQV8rDis/WeKsPWip
L329+IqFW37d34t+eWF4wYQlJqqbtHe/9rXMfa74849rUw6w9A797hUHK2e9
eD56Xgs/WXjL0usXj1G9EcV8/Vse/fua8szlLJT/l73o2rSnFy608Df1yfV8
yzMXHNM6XWZh2iv13qB6uVrLS69ZcqZ4bsoNXud1NacofEljvtyhKnpBY6W5
scSz5JJyzi/4f/EVFYvK8xc8VP5W1qk8s3jXCydfetmrJy5/I6b1pRrqqpYL
pr2wumBUyRmtI60Fxauljyy8QvPkimOXfqH9rsRT5+w6G7ri/zqj1/rVOebC
f5SHlJxXP1Y1fnl+0aFLPNUT05lp0VB6vsobFx+1cEXltCV/vtCSV1504RUl
fxafSu+E6+tXnF/PV06leb5oxtczl76s9/e0vnRfV3eZrrT54kmqTtHnl3zW
WCmmLXcCdSb1hVdWzld1pfZ3nY+/9lswc9Hjy/kue1/mmKU3Fc9ZcaxgrGrG
ZU603DvV+lo+Uzjq4jNrnJXfFn23+GnL/ZZXrJRvFH5Y9rL4A0svK+f7Opel
d6vPrFp48bKUX6l+WXq34tsVp1WvpmBRqSk9l1IXGv+ic0tOLh5OyQfVZctd
F/VpCz/R+5nqpZQaKWex1JTGUDHkSm9e9YiiyxQrCvaqp1HOvfS+K316lSfF
U/pCQ6l3pL7QEpMSf80N9dmUM6u/d6WblrgtfrLGufSXZY6geuqFaapNFN8W
P+GqRxT/Z/FUl56l86lFR6g+vdIdi75YNNTCw7Uvl56lemHhvTof13zT+yeL
blKPUWN+5WMXr6w8p+Rz2aPynBKf5Q62xq1gY8FnrR1ds8Zce/1yV3zh5Irt
Wqeq/V+/q3MizZnS369yTzWmxnnRPoX7Kb8q+VDyX/tRyZ8lV4suUD9ceaDq
l2W+Vr6rNb5gu2KIrvnK43qtc9FBRQNe+QyLZ6Kcs9Rs0XpLnJczLbmnPvzC
Z1T7lLrQOyevs9C/lSj3exVXNVfLmV55TaUPqiegd6GX+tWc/8LruPJernSB
zoCu+n6pwVdPWeZlReOoPi0aXLXP8rrkXsG6K+5asFexTu+cFNwuXGXRO6pN
NOYF56/8Me3j5TN6V63Ub9GVpY4Wr0PzSrWw4rPmjPoVurZSp1fcsuR/6eOK
G19rurJO9XMKDiielDP9ws9Z9qiaS3NV+4Xy3qXHLZigHEm1f9G8pa9pDeod
EtV6GnPlQl/4w8p1y+evdL1qQ+0vX+hQzcNSy6pJlUMuvUP79aIpFIcVw5c+
vmixwlG1dy9crvSdkjO6HuVvV7pe8+3Kj7riLYpRiw4tmF967sItS55obS46
tOR2iX9ZW8l/xYSrvvlaz3Lu2t8X/XXlzS56R7l0qffC5cpMWT2K4mGqXljm
trrm8sySk9pftB6LP/zC0sIzFZf0PobyHD3HEjfFzMJhSi/TZ6pPu+Dbwmlf
+KbnvuTDgiGqC7TPKpaWs1i4utbX0t8LP3zFSvXCokeWnLzyKwov0t6x3Mco
PGHBEH2OxrBg16LprjhzOTu9/7Pgm/ZTrc2rfFCer/5nyYfyW+W+xJI/X/Ss
ol90nVd3nMrZlTUUP1P9UvUrFjz5AveueNfiPyteaQ9adGjhQuqZqxbTPNHZ
01UMl3uVmofqpSy+hGKm6o5yjtrfS8/SXqPasMRZNfjiq2iv0b0oN9O6u6rZ
Vw4vmkX3+FrD4tNqzFWzF02kHGapiytcXe4pLXMQzaXyW6+1FX9jiblq88IT
yvuLFtD5l/KZ13MWDvbFHF/xqvxTH6Dgs+Z/0fJLH9QzWua5xdddtLPqSs1D
5WNXPKf0u8X/ef2W3hNWD2eJg/LMsmaN4ZVWVS2gmFk01HLHqXAwxYSr1+r1
qQelPaJwFfUHljq94qvq9WnMFSsWXqqxevWvZc1aIwv+LD6/ejJXXuXSd658
40WrlvXrZ/R89R5R+UzBJZ3dXNXLFz75ovWUeyxexCs+xfcrfeqLnq56c8GH
UnfLzPRqzep7FJ2r+aaejOLhFzX+xYxPNeYyV73SO1f9rsRZ78UtGKK+ypX2
1HovHtEX+LDMK3X9Vz198WkLPlzNjK5mAYsuU8xRDNSzuLrjutS46qbSs168
rvTZLzyi0lMWHqJ8oNw5f2GUYsjS+65wqfSLsseShws+lM9rDn/h9ZXvljy8
8uRfcbiaBSz8cJmnFAzUs9Dnl70sOb/c4XztUf2NEh+NufJn5b3lM8pzvliD
9j716hUbFa+WvxVS/ajYpfdkvvD6lruIrxrXvFpyQ3mpzh91nqIcrzxf7w2W
3NYaX3CpzARLfqq20jMtXLGcy8J7S56rJtU1lO+W+tJ6KedS8Eo9wys9UviA
enFXOrTE5GvfcskrXecrT14YtXiG6s8rr1AN+8UMTvNZsb30L63NcqbLLO+L
OfIy81o8gdJHigb/wgMvn9E7uqp/X/8WvFo4ZOk7xU9WPlZ6gXKwUi/Ku5Qz
qGeoGLj0Su3F6gMUTbfEbfn8MmdU7rfox4VXFx9MsXSZDRXce/3TOd3yb+mt
RV8Uvr14lUUfFcxZ8LCss3CMhUNe1a9yQvWcFdO+0FbKGxedW9Zf7qLo5/Us
yjqLFivr196q3KbscelZJQ7Fr1MvunieV7+lPpX29yU/Fy6hvu4VT9B1Fg6p
9zyLdtPa1JiUsyi8SM+61HvxOnSWXfBw4QbKJ3VerP2rYKP62MqLFq6ienOp
a/UNSm6UHPjaO1W+rdxeuYTqnYKHyhNK3JSbld663A9Rbas1u8xMVRerH77M
5vT5V37I63e1p5S80jpV/vbiUYUXKS/V3rH0bvU5r/wx/a2ruwFaF4vnWbya
wtWv5m7qXRS8Kv1lqeuCLa8c03uMC6/TXqmaepnNLfcEyn4XraqvFcMX/qZr
1h5afuvqfeVLpd+VOGgOL7Ny5eFFR6ivVfjewicV2xcPVrml6jLd+4InhVOV
s1t65ZV/8tLRpV5e39V7mIoVpR4VJ5d6UfxRDFm8oJK35f2yZq2XK22+5LZi
SLk3orx0wbSlFl7rUb9O/fCFvy36VHNG16P4oL1SOWHhG4vu++I+WIm/zrZU
T+lz9D7hFRdauE2ZTRQPYbl3Udb29dy5nJd6nsu5l1r44i6HzvKUkyg3KLi9
aOrCVxf+r16Bxq1oTO31V96mnu+VRlvm1yWfX3EuPPaq75Q5SKkXzXPVSurz
XHlQpRcorioXWu4DvParPvlyH6zUlPoDiza5uv+z/O6St8rZtJYLz1l8pOJj
aF9WLfb6Vziq8u1S44ppL4xavJ3Fl1BNqjNTxeHSc5VnljgseaJ4opim+kvP
oui4ZVa+aJNl1rno08WLvuLGpZa/iK1+RjmAajH1JBcdoT2rnKnWoGrDq7te
5bXeqykYW2pN5ynLM0s+LNpN8bnoL+3ppYcqryte6JUOWuJccF69C51VFR6i
ObPEVl+XtS264xW3wpn138IzFTO1BpWfFFxd+vjC8b6Y55ba1+cUX0V5zuJF
qC+teXiFAzpn1Dy8OvdSX8qpii7TOircRnls6R3lrEts1Q9XDlm0+aJzrzBT
n/OK7RV+ah9fOGrBB9WAi85danOZ4+gdMOUA5Tmqd1RraP/SXqlaQHFVa7nE
rWDXkueLp7SctXpuC2ZqX77SuQtmLvcoNH90/lj2vtT4FW4sXFr9HL17/+M/
5VGqI14cYDnrL7zQUi+vuC24Xb67zDg0twv3UD1b5g4lt8u+FN8W/03Xo/HX
vrNg5nKPQvOnfFd79zLfV56m+V90t/Jtje1yX/oVK73XXWK1eAt6Rl/4yQW3
r3BM+U85F50jlBxW7061Xukv6o0s+aM4WXJYe4Hi2+IvaY9QjH3VS+Fjqk2U
p33RNxd9oTyhYOByh+HqrMuaS64qn1w488JtCm9ZOEyJs/4divKf1zOXXqZ4
qz3o6g6zxkc1xXKXWzlGwcbXc8pZ6zxOMVnxQZ+p9zQ05ld6s3BR5SrasxaP
tGDmoq8LZ9az1rWph1b48Gtt2vcLJ7ya3WjuaTzLGem8QONTuKjyxisdsXAe
5XL63UVLltwu6ywYXuYgy/OV/6hGXl5f/W7p3Ytnon2qnLWuTeOvfzOy/I2J
amGN84Lz2nNfvU+55Re9TH0q5Wk6U1j6+3JGJedVSxaOVLRe8dCU75V+cVV3
BX++qEH9Xa3BZWakPO1qDaVHaD8tnvyiZQonVIy64h7KddVnWHC7rLlwNsUH
9Q0WHFPepTl/dT+85JLOthT3CtaVXqzYfoVFVzWofbD05RfHW3i+6oXXGgrn
1HNZsPR1vjoXWO4vLfmmOLNoUp0LLNpc66vgkvJqzTftI4u3ox7jwmfUI1K+
scyb9H6OegJf16D2tbKXhTMva17uv33dI5bevdwHeOGG5u2V11TuuJacKetX
vaC646pHLPcGdVZVckzvIX/tt5Tz1fpd5gJLLumd9iX3vlhnyZmyl4JLupfl
M3q/V3vE0rsXD005mOZewQfNq8LV9XyXvlByQ+t06WvL31ZceTJa1z/+u7oT
dfX3Dur5XPXEqzMq61nWucxBFs6z3OPSPFz0o2rJK/7/+ozm0pJ7OvsoNVW4
7tKDSl8on9f8XzyTL/p7+bzO4PRus/qEPydOlhrUnrjEvHxePTrt0SWfX3tc
sKLoNb1j/1rn4v+Uu1IL/7/yzZQXKX+70sLlrnjJq/LdknvK+Zc7KtqPSvxf
+Kb4XHBA/YHSR5aa0jrSu8davyXmqgELnpQzVV+u7Evjptj16mXqKRXestzb
170XLXP1dyWF/6jGWTjzop0Xfn6liQq3fMVN+XOJT5mfLvfu1J+5wnP17go/
L/EsOa88YdEdirGqTzVurzzRmGsMSy9TH6PcL1K9cJUPOs9V/qP1u+TMVT5c
1Z1qoqJB9HXhY9rHC69YeJp6O8sdsEWnq4+xnKP6PEv8C99bfDblOcoNlLMt
s4mFr6peUI1fvJGFGyu/Uj5ZcubnfL3w29IfFzxUXC3nfuXJX9XU1R0w9Yte
v6sc+MqLU+9lwS7trcU7Le9f8eFyRvqZogeLvlt8y4IhWu+qywoOaE293v+l
eoHmnmpw1baLv1Ry9cqTVz1VuM1yB0x1X6nfq9nElfdYPIqyX+Xwyiev8FC5
6PK6xF/rYqmXRYeWsy7fXdaw6KOve8Hiay26cpnNaS0UPl/eX7hHiUPZi/J/
PTvNN8V25QAFz/XvFBbdWvjkwi1f+1KPqPAf7SPa417r0TzRz2g+Lxi7YPKV
N3uF+UsMS0wWH6DkzzKL0RnN0vdLHJa7eVrLhS/pTLzoGtWMy990FIwt+V/4
5JUGKfMs1SylV2q/KzhfaupKs+h56TkuGuoVN/VmF0zWOCjnXPRg6cuLz6y9
qeylvC66Rv1G1Vavz6jvrVy35LxieLlfp7VfflfvMCwapGCa8gTtm9rv9P2S
MyXfytrUt1SfWXXB63cXLalzQI2bnpH6bK/vlhnKwu1LL1YtoJimHGPhNkvP
XfSv8o0XP1z0stb1wmHK87+4e69rU4739XxzmTUULFUMLPWu9w+L/irYqz5k
6X2FsxX+o/p08UAUc0q+fVFfBd/UU9LZvfbcK56w9JqiHVQ7a42UGGpOXt29
v7proX2wvNb7DOUzV/mjvVXXptqh4JJirPIK5Y3aX5b8uYqt5slSX9pfdP5e
4lxyo+SA8gTNjeI/qI4uubToI/U0vpgbFj6sHKBoNF3nq3bKP8WuK92humDh
BuodFc5ceK9ynq85Xqk1jW3JMe3pqt0WvqqezNIjFKtLvWsOlzlsiZvGsOTG
K/de+y1zWOUzS10vvr3ig86kru5u6f2lhZcuc2H1e3UvOvvQHLvieFprqilU
TxX+doXDpZctay5r016w9IilHpf52tIjtGdpruq+Cm8vHOPVT1/v65lqDEsf
XO6DLfy87HepO9Wtr72oxtc5o/pLC4fU10tNFQwpe1zOdNFQqlM0Dlfnonr5
C49FcVL3pX7IUoMLP1eue7X3Kzwp+1V9qvm59DX1bK/OYskNXcMXOK+YWbxH
1WULlioPLzEvHGDhQsu5aJyLvi64Xe5gLH7L6/Ol7y9ctGjnxevQOtIYql+9
cBX19lXLK2db+uBrbeUsXnnyRT5or7zik0WLFV9IsUv3Xj6z+J8vzCnP1Fq+
0iN67sVDKzhc1lNqR/001Tivzy/nWDhziWHZu/rhr5oqe1k8Io3P0uP0rlrh
P6VnlfPVfCj5+QWfVP6zcPiCG9r3i378cY/ld9VTVb9LOariVTm71/pVTy0z
x4W/qR4sM3H1H67qcfF89I7cMrcqGLJwnuV+V+lfBXtfuXGV52XvVzmzcOMr
/VJ6rvo2iv8LDitXWfSd5nDhJKovCuZo/ype0xf3HLQnlhq/0neKmS8+ozpR
c6DggMZt6eNL31y4XOH56sspdimGLLmkeqfEtnCSK/6/4HD5zHJH7uruUJmz
aC28zkh7wYJ7S99Xnbv0RD33cnYFY/Wec+mn2tf0/aWPfz1vUk9pmTVobiz9
UXm46hrVZZonigN6L7Tgp/KcooOu7oC9fqvEsNSC6sFS44p7ivn6HPUHSq0p
1i287tU3ta7LWS/9YtHvxeNa9K9qDZ016P00vefwWr/iYdE1qgXK+rX/lpwp
el+5onI81Zuq3YreL3W01OkV/3/l23K/Rf1GxdviIy1Yt+j6q3pUP1D5zKJP
F7667GuZFWrvLjm23J1Y6ki1j84drryRcnbLnRDlcqrNix5R//Brj6Xwf52x
6ryp9MGFe1/lrT6/5EbhP4qTJWdKDBctVnS3YpTWwsL9Fq6yeHEltqWOSj0u
HPv1TPVGivYpuaeaVGdhy7xMedEVzy94vtRC4TylljX/NeeLrtd8K71+uRug
OvTq7pb2hYLPhT/rnbcrzrNgrN6FUH1X6kv/hkjPYunLioeFq5SesvgDirea
Y6/YXvH8pQdpri5nqnspea7zx1K/JccUD9XH0Nd6d0u5aOmDikUFA9UnvMJM
9Xlea9C8vbpbpTF8PbP05cWHUf6m3EZ5pvIoje0VTi496Iu/r9F4KtctPsaC
D+X9oqmXXv9FbqjGUSxSnqD84YqvLpipfFJxr2Cg9k29n1ZwXvmV1prGcJl9
K5dTf2OpzcXbWbhW8WyvevHia5XX6p/rWVzxiiu80r5Zcl756hVvWTjwK/6K
mct56Sy47Lfgz3JXqmjS5Z6Gfmbxsq60reroZX638DftQYV7lxmN9uJlXwUP
NR+UJ1zxivLMq7WVnqj3hRZ80Lou/FN9toL5yqOWGKruVq/pCoeLFl7+Kb4V
j07PS3lyuQ+84E/B0nJeBR8KfqoPVr5besTSOxav4JfS/ssaSn8s+KlcXfmP
8tuSV+rJv9ZWPlN0cYmbcir9GwQ9U63Ngs/KpV/rKfhfflfvrrzOrnCeoiWX
e0EFJ0tdqGZUXFJ+WDhMqa+SY1f4v2j/sveF/y9zH62RgieLp3fVl79eg3rL
JeaF95a96P0T9Yi0N13dZSrexXJer2eq5lIOs3i/ZW3LvRTlooUvXa3ham6o
vP1qdrBgTvluif/CmZWHF4zSmOjcallD4STq5+t9y+VuoT6n7Ev5mPbNxR9Y
OKRqwHJey/oVMxVXi+4oGkR1k65Be5PyhIJjqp1Lz7ryw8vnFwwpdfrjv4Xz
6Gz69bvLGnRmsfTrZRZ/9Xq566jac/FbSg3q/F15neqp15oLhpRcXbj0CzfU
Qyj1omvQHNC9f13X2u/UD1dufMUZtN8tulLjpmex4IbW4zLbveL/qt9fdbF4
uVd9sHiz5btlrlo48Ov5/wdATTbO
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
n/8dHqAxoVsy53/H9tbz5/8tD3wAnHlVPA==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztmrGKZVUQRRsFmQ8QQ8FEEIw0EmQaY7MxM5EWNBoQZgIx809M9TOM/BU/
wxkwMBHu5dSus845K1CWzXv33Vt1au163X70/U8vfnzn4eHh9bM3/3rx9PNX
r149/fLNe2//44enl59/9vLdN/jrv/+85Wdff/D8j9+/fPzzry8e/48//PTj
x+/e//bxt0/+fn7l9Xev89+fX+GRe7j7uZ31uXJvVfdz5fp37+HKdarqU3V+
Rl5fdZ3OOlc9V9VrRrjzzHee7ZEeVdU8Paezaj7iUprH0vO+SnYnaliVuYkd
I+3S9I6R9n864wi738jsJ87nrFwju3eWNxI7bfqzVvE/rYaz8o6cBWlOe4A8
47NyjezexOx05m96X13R/1XOX2XnT/eFnF+JXlRdM1F/cq51XpPwfWTWbpM+
J+TvTekcJO/8K+4btPvvPP+0XCZnZdU1q85AVU/TWZB2fjqDyHlK2/kJ+3Ni
xmflV9X575zxkRpW7S2Ea6a/j6zo+UQ+du4z6dyhzcUq/u/0zKy5qPJ/ZxZ3
7tKd+2T6/KTrQ3b+iJM7Mzdd88SOt+v+n5ijzvvvPNur7CpV2Zfob9X5T3wu
LQs6HdKZL52uSPjhBP+ne03OekI9Oz1WlTtV+9VIH6tyc9YMVmV9oiZVGU3w
f7q2J/u/ynWrZ1N6P0k/16zvDglvdH7XIPg/4b30GSDvip28iv+rzswJ2dSZ
CyPPldh/0s5PzBH5DCdmLZ0jtJqTs4DmpVkzuFM2JfIrvQ+ne9353s69epVZ
m5Vrq9R8Vhas6P+quSbPS+dcdD5v1d644u5Em81Z349oWUbYIWdlAcFLd12R
9syK2ZSuZ1X9R3q0iv9nfcfpPBuJ15zmf0IWEPyf8Pasa87Kpqpzkpjf9Pem
Wf5PzFF6NjtziuDP1X2YzgJC3o14adY1ydk0Mr9p5yRct6v/q85J5zUJO8/q
/u/Mgs7nHTkniT0kMfud2ZTwf+IMpPtFyIKq/Eo4Ie2ZqhnX//1ZQPB/546R
nveExxI7dudZHbm3zp6m/T/LyVU1rzpLiSw4wf+JuSA8L2G+OnMh4XNCrxNZ
vEoWzMrBxE4+8ryJvVT/j2cBbVdM735VryF/R6jKi87sTszyrCzo3NM685qc
Wfq/JxNn3WeVxwh+SGRTIlMSTku/fuSanb1L7zOznEDY5/V/bQ07nz3hn5Fz
SMiCzj151q6b8GH62Tv3k/Rspv2Z2Oc7d7xd/d/ppfT9pPs1a/+vmuX0PtC5
z1ft2J3Z3bmjpveuzplNZP3IZ63o/6o6z9pR02eA5o3EGauawc5+pTOi0/k0
L1VlSiKnqmY2PfsEt6dnn+b/WWd7J/+nd9H0jHT6qvO5ZuV4IoMS9zMrg2hn
gDD7nWe4MyN28n/nDjzrWarujZDRtOyruod0NiXO/Mg9ELgzZwl5Tb5+p1sS
1yc8S7r+ZP93Zl96r6ja6xL3nPYn7ZzM2hkSvqJdv9MtnWdb//f4f9Z5S9Qk
fQbSviJnQZX3OjOdkGuJ/bZzjhJnu6rX+p/v/0RNOmef4G1CFiR2xcTOnPBJ
1b0R5iuxe6fztDOXaT062f/ps5p2OMHbnbmQOM/pvqy+zyc+N9339J428iwE
B57s/1k79skOT9Tk7nkm7Akr7vOJutF2qkSPyD092f9VvZb7syDtjao9oere
yPMya1/qdE7VGag6k/pf55/AVV5NzN2It1ecEZpPCP5JnNVd+0U72zqfz1U7
c6cHquaaMCNknxD8kzjPnX0/zf86f12u2r2rzuHd967oc7JPZvkn8YyzzswJ
/tf5e/DI7tS5X53geYJPVvc/4fzs6n+dfw5X9Z3gz9WZPGsE/xOcv6v/db5c
dc4JLl2RyXPX6f+R6+zar8Sz63x55GyYBev6hOD/Ttet3q90/WnnTe53fsL/
5PmlMXke07u6/u+pP/mMyf3zm8iOEQ+czOTZrHL1rLO3er+qPpd2rmQ+6/D9
fFLl3s730s7eLP8T7kc+h8kzuBOT55dWhxP6deWaq5wfeV0mz+BOTJtfQh1o
90be/0fqKcv6/xyf0Hp997MI5zDdr0R9CD6R12La3O3KhJml9ZpwD2T/j/xc
lld0wq5MmFl7zenXyOdeea8s6wQO6/+1ONGvhLfNAlkn8Fn/r8VV/Rr53M5r
ymeyTljLJ/aa36+7db7bi5FrEpwjc1gn8H1ir5n9SuTFiOfv9l2WdQLHJ/aa
w7TdfuQ6sqwTOD7R/0we2c9H3pvY580CWSdwmDCb9rrW4Z3fKRLZJMs6Qf8T
6kPoRdXrR7ydvn9Z1gkc59hrDif8fLcvic81C2SdwHSLvd6D7/a3qhc6X9YJ
fCbMpr3u72/ivTpf1glrMWFO7fVaPNJTWdYJHCbMrL3m85W+ELwh78E6Qf8T
6iObBbL+35X1v2wWyDTWCfqfUB/ZLJD1/66s/2WzQKaxTtD/hPrIZoGs/3dl
/S8TzptZIOsEzjzaa9kskPX/3qz/ZQKbBbJO4MydvZZpZ9IsOId1gv4n1Edm
nk+zYG/WCfqfUB+Zw2bBOawT9D+hPjKTzYK9WSfof0J9ZD6bBfuxTtD/hPrI
a7FZsAfrBP1PqI+8LpsF67JO0P+E+sh7sFmwFusE/U+oj7wfmwV81gn6n1Af
eW82C5isE/Q/oT7yOWwWcFgn6H9CfeQz2SzQ/yew/pdls4DGOkH/E+ojy2aB
/t+V9b8smwU01gn6n1AfWTYL9P+urP9l2SygsU7Q/4T6yLJZoP93Zf0vy2YB
jXWC/ifUR5bNAv2/K+t/WWbO4MlZoBP0P6E+skyYx9OyQCfof0J9ZJk2mydk
gU7Q/4T6yDKBT8sCnaD/CfWRZRqfkAU6Qf8T6iPLZN41C3SC/ifUR5ZX4Z2y
QCfof0J9ZHlFXj0LdIL+J9RHllfnFbNAJ+h/Qn1keSdeJQt0gv4n1EeWd2Vy
FugE/U+ojyyfwLQs0An6n1AfWT6NCVmgE/Q/oT6yfDLPygKdoP8J9ZFluT8L
dIL+J9RHluX+LNAJ+p9QH1mW+7NAJ+h/Qn1kWe7PAp2g/wn1kWU5lwV3XUR4
rp1Y/8uyvIpzCPe/E+t/WZZpzrn7Xln/y7LM5ypXyPpflmU+V/3ORz9w+qL/
ZVmu8szIz2X9L8syk0dm398F6X9ZltfihLfNAv0vyzKTE3/P9W/E+l+WZSaP
/N5mxA86RP/Lssx0yJXXJ37nr0P0vyzLHLck/v6rK/S/LMscvjK/iX1eb+h/
WZY5fHdXv/saXaH/ZVnmcOJ3PiPXl/W/LMv9DiG/Rtb/siznfJL4/0LvvkbW
/7Isc5x/10UjviLUh8z6X5blhPPv+mTk9WaB/pdlud/5IzO7yjV3ZbL//wHw
OQhv
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1jFKXAEYhdFBQdyDFroBC21lJGJpNbY2E4iVEjCF2GUTugRXkGWktXYb
lipY2AgO73nniudAwhdhZpKn4f7bP3/PzlYmk8mf9effZvOrH5eX8+uTtZc/
/Jqf7+2erz7n39dfL32/c3SwufWw/+944+BtPx5eTO9Ob6c3e/+nH+lFX/ve
537kfRZ97Wd81ljPZ9GvL+uZtL3nkOcw5Hs65D2H/Fs+4/9j8jmM9fM/1jMc
6+821muHfK+HfO4EgG9pyI5rrbX+ur3s/QFgORo2SGuttfsfgIyGDdJaa+3+
ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO0
1lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHI
aNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW
7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2
SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsf
gIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJa
a+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCj
YYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7
/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNgg
rbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8A
Mho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGut
tfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyG
DdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+
ByDjCYp8P8A=
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt07FKw0AYB/CQgnR27dRXqGvJ4eIDxNXlBJ0iQhzESelrOPskPkJBKH0Z
G3BwCSScFyv+hoRfwuXyv7vvW17f17dlURQP88Otjo/nbRufLk+6h5vYnK2a
2YEvX1fn5/dt9bG+Cqf7GF53F+FtUYbV3ab6/r5vzJDxQ+ZPmTPFOfL0fTv2
X2PPIvf+DMk/ZbYpM/xUfaacdY6cOfYtpWZSenPKnv0t51jjMazrP/iv1Bjz
MVsfMTMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzT+9PVS0fQg==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "1"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt3LHKJUkVAOBZFRFWMHJzM2PFQGTnR3OTMRJMRlijBWE3EDPBTDHzGcTU
yLcwNNTIwDcwdBZEWqHgnD3ndNe9/QXfcOfS9/5d1aeqq07V7W/89OdvfvaF
V69effqVd/+8efuL73/yydtf/ujLn/3no7cff/tbH3/x3ctf/cdnr7/63g9f
fvuDX7/+4MdvXiKvv/enn7z+zT9fXt7/13dCx1c+ezx+9Tp7/PTrrvPJ1km2
nrPnPFHPEzE2HbeVa1SJ/6viPHs+lfo/M67ObNdX1UP29e++9t7LP/7+wct3
X//tw+PrMz/bVf9d/cbEfWq36z7R1ibKuIqxq+K2q9+o/N2r4vnR42q6XV9V
D9lyvZsC/NeqLRyPOX5P12dXJtpX1+vp9n7m/aurrVXqavV6FWOrmJmO265+
IxL/XfXfFc+PHldnjj8n7mUT1/d4zNf/8PsP//jNL738+S9//Z/XkVitfDbS
TivtK9JvRKy+p6u9n3n/6oqfbF+abYOVfrgrbrv6ouxYaDrOK9foUeJqoj12
3Wsq9VC5vqtjjvF/LMvqe47vr+qh0vdG7r+RcV2lf8iWK9veI+fTdf/KqsTP
8XUlblfXPdKOst+fnSNE+qLIvLsSJ9myVNrp9DiqK66y9ZB9v3KvicTPxPWN
XPfIuU2M7SPnnx1frVTGANnyrj6b7Qcq96/KNcrGT6SdVtpdNm6z9ba6LquY
j5QxMlacjr3sGHhinjUdV5WyR96vXNNIWSqxkZ1rVGI7e/+aiNts/5+N4UrM
V75/VQ/Z8W1X/UeudVc7jcTAqg4j72dzSqsyRu5BlVxlV+x11VVlnnVmXFXW
HM8c86/628g8sTI3zN53ImO21fdk+5xsP5nt/7NrPZW+Nxsnq7Jkc26ft7//
/3petalIG8y208oYstK3R9p15Byy35/tZ7r622xdZXP4kXJNxNXx+yt5iVX9
dI35s/PT7PhwVZZVHVbG7dN5ia7xfza3mc3Dd80jImXpiu3K9V21wcjriTjJ
1m12ra1rbDzRn1Tmldljsu0ley/OxlLkfLL9W3ZsEImfyDh/dX1XsVTJoWXH
9pH+uSsv0TX+r6yvVY6vzCMi13c657YqS2Vss6rDrvxVpG67rnV2bJyNjek9
KhN/N9JOs+OcyDi50rdX6jA7hsn2sdm1pGyf0JWfmc5LdOVPusaZlb6iUt7V
d3bl3LLtdxWrkfe75oyROOyKgey8oLIvpStvnx0fTsRwdpyzqsOJ88zWYWXt
JnIOlRxRZN9m5HpV6rArL9GVP+kaz3T1FdnyVtpy1/lHxtLZeeWZa9mVGKj0
k9m5QDYflV0rj/QtXXUVGX9W8hjT7Tqbo8u25dXx2RzRUWUtpjIfn94L1JU/
qVyjib6iUg9dezCy7bdrjFrJaWfLUjmma70gu0elq4yruo2839Vesv155d40
cZ7ZtZuJ+ol8NjLmz44NIm05MvefyLFH2uxEnjnyd6f75MoejK4yZseoV83F
uuo8+9nIPGgidxc5n+m1+Gy7yM6bVmWcju2JPHOl37gqJ9CVV5yO8+m1gEhf
sduYtuvvdt3Tp2Njuh6Osnvwzux7s+PwrrqqrH2ceX/MnltlbNPVb3TlBCo5
omxecaJtnrm3IeLM/Zlnmtirc3WZqrrGPxN9b3bN5cwx2+p8rhpD7pBnruxr
ncgJRMobuX9N/0Yp2x4r12hleh3kKl3t8ap2Pa0yBpuok0ofNT1GiuTEjsdP
jyF3yDNX+o2JnEBkrrE6JvJ7n+k2WFmzq8TPxDrIDrrWNc7c8zOtawzWVSfZ
Npvtu66K2zPXtrL1XMkzP0q/0ZXnPzN3d+b37LYOMlG3lfzkmesjO9RVJU66
6qSSr94hVs/M/2dV8sw7r59Gyju9f/gR7bYOMi2Sn4yU8VnXR7JxcubvHSJj
/h3a7259YCXPHKnn3fqNyNz2ePyZe7R2UKmfRxzrVn6TmM2TXF3WM+JkVbdd
89DV+9n7QuT7J+ycJ8z24ZH76c79xmoudub+4Z1F6me3OWylXKtjVnEbOf4R
66dieu5TyflX1jG74m23PGHkb2XHM5Hfg+zQLrK5zR3u0TvUT7YP3E1lDj6R
D39003OfSs5/57WAnfOEXWPjR8+f3K0tZ+vk6nP5PKbn4DvP8SdiYHqPR9ea
4w5rAY+SJ+waGz96n3mHtnwH03Pwnef40/U5scejkvPf+dlZO++HnIiBHdbc
K+W6Q1u+s+k5+M5z/Ioz93h05fCvWgt4lP2QXTEQ6fMfpYxHz9qW72Z6Dv4o
c/ysM/eGRcaTkT6z63sqdt4P2RUD2c9eXY6oZ23LdzM9B3/WOX62vF17PLp+
i3TVs7Puto/6Uc6zEtvHY56pLd/BmfnqZ5rjR8p7fL+yNyw7hp94nT3nbF09
0z7qZ3W3tnwH03PwZ5rjV3S1hcrvSbOvz3wu3PH9R99H/ay05ecwPQe/2xz/
zOu1OmZijaZyPtPl5Rza8nPrmoNH9jOY489du+kc3dVl5Xra8vOpzMErOUBz
/DrP6OZM2vJ9RMb5lRyg2KhfF8/oZgdi47nJAe7PM7qBaXKA+/CMbuBMcoD7
1L9ndAM70D+cX8/ZvTqV50u4vgDX8oxugPuY3qtjLxDAY/GMboD78IxugPvw
jG6Ae/KMboB78oxugPvwjG4APKMb4J48oxuAI8/oBkA+HwD5fIB7ks8H4Eg/
DwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAOzs3w9xMLY=
       "], {{0, 128}, {128, 0}}, {0.,
        1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2DFKA0EUANBFQbyGF1DQxkJcUloFYiVisYpWASGCYpe76A08g53XsTcB
Gwthl/0/OxteseEFdnf+zPz5M8nB7ePsYaeqqqf91ceseZksFs3r5d76y30z
Pzme7664/L3WPvu8qKfvh/Xp5Oi8jT/uruvvr6v67fnmj7s+2/WeNu3+d09U
nFExdI0navyj5qi0Z/u8JyNnSsif7LWQkbdR/drknGbnXlS7Ufk51H6RPe9R
67FPPBl7xCbHtoSxGqpOjnFsM+pSVC0aqg5knw+j+tU1nuzzYXZbJed/ybGV
1q8xOvsMv00ey5kk+/d+Cf3qU7f77JsZsTHzuGyNlzn+UXuK/yWYmbfbGTVc
zWdmHped25mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZuY1/AOa+Fms=
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "1"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1kFqlQcYheHQQsjMeWfdQpxaReig47iCFFoEpYIOxFndggvrqNtwDyo4
6NBw81/P6XkGyqPE5NzPP+/Nz7+/uvnzh4uLizdXn3+7uX379PXr23fPLr/8
4Y/blw+vX/74mX9//fXFl/8+evLi+uqXvz4+f/Jfv3j+z+Offvvw6P2vDw7x
Xb/ut3z8KfuP3nDXf3tfe464/ymf/5TXdV+v95S/P/o+p+w/5/N/xDNwysfc
1/N2zpsc3bcjbpXwvnDOzUc8h0d8Xxz9eu/r//HoW32v13vO+6d9z6Y9A8l9
O/rnnKPfU9Lu076n5X35iGcv4XO2uPH1nvMZaPw++l4/5yTfJHmz/jNnNuGc
70H6n3Of9j36z3z+94UE63/XZv1nZv3PuU/7Hv1n3rT+d23Wf2bW/5z7tO/R
f+ZN63/XZv1nZv3PuU/7Hv1n3rT+d23Wf2bW/5z7tO/Rf+ZN63/XZv1nZv3P
uU/7Hv1n3rT+d23Wf2bW/5z7tO/Rf+ZN63/XZv1nZv3PuU/7Hv1n3rT+d23W
f2bW/5z7tO/Rf+ZN63/XZv1nZv3PuU/7Hv1n3rT+d23Wf2bW/5z7tO/Rf+ZN
63/XZv1nZv3PuU/7Hv1n3rT+d23Wf2bW/5z7tO/Rf+ZN63/XZv1nZv3PuU/7
Hv1n3rT+d23Wf2bW/5z7tO/Rf+ZN63/XZv1nZv3PuU/7Hv1n3rT+d23Wf2bW
/5z7tO/Rf+ZN63/XZv1nZv3PuU/7Hv1n3rT+d23Wf2bW/5z7tO/Rf+ZN63/X
Zv1nZv3PuU/7Hv1n3rT+d23Wf2bW/5z7tO/Rf+ZN63/XZv1nZv3PuU/7Hv1n
3rT+d23Wf2bW/5z7tO/Rf+ZN63/XZv1nZv3PuU/7Hv1n3rT+d23Wf2bW/5z7
tO/Rf+ZN63/XZv1nZv3PuU/7Hv1n3rT+d23Wf2bW/5z7tO/Rf+ZN63/XZv1n
Zv3PuU/7Hv1n3rT+d23Wf2bW/5z7tO/Rf+ZN63/XZv1nZv3PuU/7Hv1n3rT+
d23Wf2bW/5z7tO/Rf+ZN63/XZv1nZv3PuU/7Hv1n3rT+d23Wf2bW/5z7tO/R
f+ZN63/XZv1nZv3PuU/7Hv1n3rT+d23Wf2bW/5z7tO/Rf+ZN63/XZv1nZv3P
uU/7Hv1n3rT+d23Wf2bW/5z7tO/Rf+ZN63/XZv1nZv3PuU/7Hv1n3rT+d23W
f2bW/5z7tO/Rf+ZN63/XZv1nZv3PuU/7Hv1n3rT+d23Wf2bW/5z7tO/Rf+ZN
63/XZv1nZv3PuU/7Hv1n3rT+d23Wf2bW/5z7tO/Rf+ZN63/XZv1nZv3PuU/7
Hv1n3rT+d23Wf2bW/5z7tO/Rf+ZN63/XZv1nZv3PuU/7Hv1n3rT+d23Wf2bW
/5z7tO/Rf+ZN63/XZv1nZv3PuU/7Hv1n3rT+d23Wf2bW/5z7tO/Rf+ZN63/X
Zv1nZv3PuU/7Hv1n3rT+d23Wf2bW/5z7tO/Rf+ZN63/XZv1nZv3PuU/7Hv1n
3rT+d23Wf2bW/5z7tO/Rf+ZN63/XZv1nZv3PuU/7Hv1n3rT+d23Wf2bW/5z7
tO/Rf+ZN63/XZv1nZv3PuU/7Hv1n3rT+d23Wf2bW/5z7tO/Rf+ZN63/XZv1n
Zv3PuU/7Hv1n3rT+d23Wf2bW/5z7tO/Rf+ZN63/XZv1nZv3PuU/7Hv1n3rT+
d23Wf2bW/5z7tO/Rf+ZN63/XZv1nZv3PuU/7Hv1n3rT+d23Wf2b+P/X/EwB5
ZFA=
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztWkHOLkcN/MVTgGvkAGzCOom4AQobti8SsIkEeiwQuxyBMyCxzT04Aiuu
kkTKYgL4p+qvqm73jFt6T/5HPT1uu1x2u7+Pv/zjF7//ycvLy59//t1/X7z/
y68+fHj/19/89Ps/fvf+q19+8tW778Svf/j3vfyvjz58/ut//P3T3777w+dX
+d+/+PKzP33zs8/+9u6fn7qeV7JrvvI8sRf2XWVN9rvsOsr6aRuuxI9iE1fs
JOzP7quzDmkbpnkyYTdFdtn85TKQGEHm74rlSjdknRdguPyr8G2a/xUbrsSP
YhNFh3TNsDLHpXVYacN0LujG/4ka4CpfY8Rlh0QsK/ojnF+NNBet5P9qX8h+
kRzaIY7YvSD5Cxm7uHeXDmyd5rJhIhd0wG2HGiD97sq9V/ogOHRhplqzep7A
pGuOy1Yr+QfZL+IjdqT3ruAqbf8OdVe6Fu3G/1e7rewDsO+m917pU+GKfb6S
kxN5UOnhsFy0i38qDCjnl2p+9W7C7ytzvSIjMaXYsAPfdtANsXO3dxN7Z8eu
OE33PBWbVPa5PnftJRFHlf7sfPYcpKy5ElfpM/vKPuST+V/J77veTexdqStW
ximim6sPoAxXLbeS/134rPRnz7nIfNZW6Vy/kv87cMhd+Z8956bfTdvnqg9b
P6TjlIvAH490Hqy+pfiR3Uv67JPGZPWtau/s83Sur8ZKXurAIafzP+JHdo7y
7nWk63+lflDskD6bKLlG8Z1S67I2ccUR4hdkL4na22UHV65X9EzYBxnD/3qt
pdSTHXRz1RgIrlx8Ve2dfZ7GIeIvVzwmemvKGdZlK9anSt2LfMulZ8I+yngy
/yu11p10U2owltMSdx+u/OLiz5U5fWUPnOVh1laIHdgeIzKnWy/ulLPJ6fw/
8ttqMNe9BjLHlS/S/L8rp1c+qp4n+I39FlIzdKjVO/fiEvsd/n+OrMQXW58k
8pGrN3UiDtPnJhYnip0rnOyq1RXcpntxif12wHk3fZ4mI/FVYYzFm4tnkJzF
zjkFh8pZaWUtquR31te7cpkrZ63M3d1w3k2fJ8hKz1+JQYVnEnx4Ig5Z36W5
SHkXwRuy9125jF3ThedEzdABzx30eYKMcEU6Bl34ZPkwXSd38J3i3zT/sxhD
9p7u77n6bAqeXfzvWnP4/yyZ7fmnz8sufCJcV+0xsZddvmP3voszFf8ie0/z
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
T0jYRzlvurDqqpGQOa76wTVWxlcC598CnbkEqw==
       "], {{0, 128}, {128, 0}}, {0.,
        1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.77418902086278*^9, 3.7741923047567244`*^9, {3.775495268131795*^9, 
   3.7754952789058943`*^9}},
 CellLabel->"Out[78]=",ExpressionUUID->"4bbbff35-d7ff-4da7-9f7b-46f5b5285dc1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetMeasurements", "[", 
  RowBox[{"netECA16", ",", " ", "fullTestSetBigC", ",", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Accuracy\>\"", ",", " ", "\"\<Precision\>\"", ",", " ", 
     "\"\<ConfusionMatrixPlot\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.772718835348043*^9, 3.772718835872539*^9}, {
  3.773157558742169*^9, 3.773157559675911*^9}, {3.773291266369521*^9, 
  3.773291266873107*^9}, {3.7733482373548822`*^9, 3.773348237428149*^9}, {
  3.774188635136705*^9, 3.7741886352042837`*^9}, {3.7754952883415213`*^9, 
  3.775495288823119*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"bf8bfe81-3031-4abf-8122-196c8e3f5d5e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.88115234375`", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "0.7881567973311092`"}], ",", 
     RowBox[{"2", "\[Rule]", "0.8203709729905629`"}], ",", 
     RowBox[{"3", "\[Rule]", "0.8913140311804009`"}], ",", 
     RowBox[{"4", "\[Rule]", "0.9551437013161429`"}]}], 
    "\[RightAssociation]"}], ",", GridBox[{
     {
      RotationBox[
       ItemBox["\<\"actual class\"\>",
        DefaultBaseStyle->"LabeledLabel"],
       BoxRotation->1.5708], 
      GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQ+82UnX5uQu/sLdjbzBTWvLNfvjjk+u6E9/ZxfLVz
1vo8sw977ZzeHPTSftbjyHVv772xv5grWmxf98Le32SZkfjVV/Y/Q7aUi0x5
a3/uDBjYOyU8vaB0+649Axi8sC87FaOuzPnefg6zs7RA2Hv7K4GrXsdueG9v
tOBAhjXfG3v+L7Htjz3e2vesz9/msuud/SvLnw5p/HftnbgtG4N/PrbvOD+7
Lyj2lX3Vf9Xvtkdf2c+cdmNSVtob+0gBt0aVgHf2k2511F5ofm6/ybiQa5PG
K/sz+aHN3s5v7Ws28MYtartun/RW2We94CP7cpn5d89XvLTH5V//Os1dxixv
7VPf20ibfXpr/4P/sNBcoLs/5EqaTNB6bL8mToE9Uuu5/UGf7Ba9O6/tk3yu
5Vyc8dL+WZTwrtnTX9traKb5WL9/C/X3B6JpAIrNrH8=
        "], {{0, 0}, {4, 4}}, {0,
         1}],
       Background->GrayLevel[1],
       BaseStyle->Directive[
        FontSize -> 7, FontFamily -> "Verdana", FontWeight -> "Thin", 
         FontTracking -> "Condensed"],
       Epilog->{{
          InsetBox[
           FormBox["945", TraditionalForm], {0.5, 3.5}, {0, 0}], 
          InsetBox[
           FormBox["195", TraditionalForm], {1.5, 3.5}, {0, 0}]}, {
          InsetBox[
           FormBox["245", TraditionalForm], {0.5, 2.5}, {0, 0}], 
          InsetBox[
           FormBox["2521", TraditionalForm], {1.5, 2.5}, {0, 0}], 
          InsetBox[
           FormBox["6", TraditionalForm], {2.5, 2.5}, {0, 0}], 
          InsetBox[
           FormBox["35", TraditionalForm], {3.5, 2.5}, {0, 0}]}, {
          InsetBox[
           FormBox["3", TraditionalForm], {0.5, 1.5}, {0, 0}], 
          InsetBox[
           FormBox["37", TraditionalForm], {1.5, 1.5}, {0, 0}], 
          InsetBox[
           FormBox["2001", TraditionalForm], {2.5, 1.5}, {0, 0}], 
          InsetBox[
           FormBox["132", TraditionalForm], {3.5, 1.5}, {0, 0}]}, {
          InsetBox[
           FormBox["6", TraditionalForm], {0.5, 0.5}, {0, 0}], 
          InsetBox[
           FormBox["320", TraditionalForm], {1.5, 0.5}, {0, 0}], 
          InsetBox[
           FormBox["238", TraditionalForm], {2.5, 0.5}, {0, 0}], 
          InsetBox[
           FormBox["3556", TraditionalForm], {3.5, 0.5}, {0, 0}]}},
       Frame->True,
       FrameLabel->{None, None},
       FrameTicks->{{{{3.5, 
            FormBox[
             RotationBox["1", BoxRotation -> 0.], TraditionalForm]}, {2.5, 
            FormBox[
             RotationBox["2", BoxRotation -> 0.], TraditionalForm]}, {1.5, 
            FormBox[
             RotationBox["3", BoxRotation -> 0.], TraditionalForm]}, {0.5, 
            FormBox[
             RotationBox["4", BoxRotation -> 0.], TraditionalForm]}}, {{3.5, 
            FormBox["1140", TraditionalForm]}, {2.5, 
            FormBox["2807", TraditionalForm]}, {1.5, 
            FormBox["2173", TraditionalForm]}, {0.5, 
            FormBox["4120", TraditionalForm]}}}, {{{0.5, 
            FormBox[
             RotationBox["1199", BoxRotation -> 1.5707963267948966`], 
             TraditionalForm]}, {1.5, 
            FormBox[
             RotationBox["3073", BoxRotation -> 1.5707963267948966`], 
             TraditionalForm]}, {2.5, 
            FormBox[
             RotationBox["2245", BoxRotation -> 1.5707963267948966`], 
             TraditionalForm]}, {3.5, 
            FormBox[
             RotationBox["3723", BoxRotation -> 1.5707963267948966`], 
             TraditionalForm]}}, {{0.5, 
            FormBox[
             RotationBox["1", BoxRotation -> 1.5707963267948966`], 
             TraditionalForm]}, {1.5, 
            FormBox[
             RotationBox["2", BoxRotation -> 1.5707963267948966`], 
             TraditionalForm]}, {2.5, 
            FormBox[
             RotationBox["3", BoxRotation -> 1.5707963267948966`], 
             TraditionalForm]}, {3.5, 
            FormBox[
             RotationBox["4", BoxRotation -> 1.5707963267948966`], 
             TraditionalForm]}}}},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{All, 36.}, {36., All}},
       ImageSize->300,
       Method->{
        "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
         "RangePadding" -> Scaled[0.05]}]},
     {"", 
      ItemBox["\<\"predicted class\"\>",
       DefaultBaseStyle->"LabeledLabel"]}
    },
    BaseStyle->{
     FontFamily -> "Verdana", FontSize -> 8, FontColor -> GrayLevel[0.4]},
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxSpacings->{"Columns" -> {{0.5}}}]}], "}"}]], "Output",
 CellChangeTimes->{3.77418913261523*^9, 3.775495619875618*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"dc862bfe-18a5-4f96-9d50-7f755c247fe8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"entropyImagesBigC", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{"Keys", "[", "fullTestSetBigC", "]"}], ",", "500"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"entropiesBigC", "=", 
   RowBox[{"netECA16", "[", 
    RowBox[{"entropyImagesBigC", ",", "\"\<Entropy\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"highEntBigC", "=", 
   RowBox[{"entropyImagesBigC", "[", 
    RowBox[{"[", 
     RowBox[{"Ordering", "[", 
      RowBox[{"entropiesBigC", ",", 
       RowBox[{"-", "10"}]}], "]"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"lowEntBigC", "=", 
   RowBox[{"entropyImagesBigC", "[", 
    RowBox[{"[", 
     RowBox[{"Ordering", "[", 
      RowBox[{"entropiesBigC", ",", "10"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"highEntBigC", "\[Rule]", 
   RowBox[{"netECA16", "[", "highEntBigC", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"lowEntBigC", "\[Rule]", 
   RowBox[{"netECA16", "[", "lowEntBigC", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7727190003310432`*^9, 3.7727190300142097`*^9}, {
  3.77306943758751*^9, 3.7730694509663277`*^9}, {3.773158502088438*^9, 
  3.773158510047945*^9}, {3.773291269588808*^9, 3.773291277379661*^9}, {
  3.7733482430458937`*^9, 3.773348252369199*^9}, {3.774188641350009*^9, 
  3.774188648929162*^9}, {3.775496076003257*^9, 3.7754960862942677`*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"5ae2f8d9-1025-4255-8acb-d30d91e47b69"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztnb2qbkkRhjcOjEYHNTQQvAJhjJTxbBREE5MRRBGEIziBDAhjIGbmXoMX
ICbegLm34A14E6I4AwYfYg/dp+qpemrtFfTQs1mnv67qt956+2+tr/3i1x98
+Lmnp6fffOGT/3zw5rff+fjjN7/70buf/s8v33z0jfc+eueT6u//Wz6t/+Hr
f3//3T/96/WrL//j24/1n/7lh89f+dU/X7/62/efV8/s/NtV/fR3d9rJ+nuk
HulnxJ+Enyt9eDruhB8i7VRi+LSdrDZP28/qTyWWbPFCcGbEt//+46vn7331
589//sHnnx/rO89ncSxdX9l4anvkdyN9m+JD27hMwXYX9gx1YqxtdlW2vxNH
3/zJj5//+t0vPn/pWz97vcojj8/s1E9jma6vbFz1f/VM5Hd36qvfzeoP7cPT
ftLjMgXbxO9OidPTMZpiL92fLD45jYWnp6fn/1ce+xaJr6x6VryftvP4zKNP
Vn7rsov+rdO1l6y+TcH2Dk5Of5do04CrnfE12Ev3p9LexzZP9d7q76v4yioR
GyPtRHzy+HfaLtqHpzona1wi7Vdie6edU1wRbRpiM2usaXtp/0faP40vg27P
4t6IjTvtENim7SJ+a0ePnT5zqn+y2jfUCVxVYjUrph7L6Vgb7I34PzJvPdU5
kXxhKIbxjWCbtov4rci+7aoe4f9I+934/d/YXNUNbVZiOGv9v9LeiP9PY/n0
/M9V5wJd42u2KzIPPbWXmHcQv2XG885ZDkObNIZ32tnR/xPHdOWrFW4j4zt9
LmAYX7Pm3xk7mj8r7Y20PxHDlW1W2rWDsZ353c65C9uYrri9Mt5Xdtm00635
90tkHeAUM8S8I4LJU01lxjCxb0X4gdg7yzozYxvTLH7eaZOIhStxbxc/033O
midGMGMYx8ha6JSxzqpX2rXC2M6eL6F1u8a0UqtM3Be4NX9vn08xM2X/cYo+
pEvW3gqBz9N93kouJTR/llapnCt1xe/EmJ3S5whmzPuPE/VhV52wawefkTuw
q/ckZI01gc9KrZIVC7R2ujV/b58j/NmlHyJ22fRhV+m6IxM5A0xzb9aY0vy8
+vvpfLxrLmDQPFP4mehz5W9V8u2OVrTpwyvVs7TE6f2vCJcSY7rDt6f8vHP+
//R9dKf+Ic6BZ3GvIWan5JRKzV/Jt5Vz7YmavyumIufQIu8nfGyfmO/s9D/r
faGr57PuRNBzAbM+sfEz0WcDpxF8e4pPgz68Up3Q/JH74yvurfRDpJ2s94tm
cUJWLN+av7fPBs1P8C0x17Zh2Fay4uKUPyeeC91pZ2cffPV8JB/R+wIGbpnC
z0SfzXk5gs8dvZe1FnrX/VrCdi40ksu6+DZrX6DrHPhEfqb7bItTwi6i/Uqs
Tik2LXGqAbLGOsKfBPYi/s+KNcM58In8TPTZFqeV/o+033XncUrdpiWy9pLo
f2vGXteYdvGDgZ/pPtvilLbrngtwxaYlIuNV+W+JtZ1VoTV/1thNvEc2JafY
4pT2P/2en3su4NQSxN595T6pAXu2MX0J/Ez32TamhF3E85VYnVJsWiKiAbr+
LcHnK59MHFPzPbIpOcU2ppX+jzzfhdUpdZuWyNLY9L+l5wKr+sQxjfhkCj/T
fZ4ypll2Eef5aaxOKTYtcer/rvUfop+P9dNzNeYxXRXDPbIpOWXKmGbZVflu
EwKrU+o2LUHn9KxzicS+QKQPO7rIgDfaJ138TPd5+pju2DWx/e78SeHToPmz
cnrWOGb1M+vOVNY3iA2l8h7ZlJxii9NK/5vbnz4XsGkJeq8/S6tnPW+7M2Wo
V/pkSk6xxSltF3024CXPBWxa4tSfWc+fanWinxFcTcFbFgayYq2L06bHKT3W
9Bz/3hdwaglirz/rnEzW72bhKmKXuX7qq6y72zSnXSlOCbsmPk/rk8qc26Ul
dnJ01nvyI1o96/38EfxEzv+YS2Ws2fLXlDitHGvz86fFps1sWiLLPzs8v/p2
wKp+2iahB7r8acAkEWu35neONT3Xfsn3BWxaIss/O+/JX3E+8fzO91bo8+0G
vHVxpo3TpscpPdb0t/Du+wJOLZF198oQ+1n9zBoXA96uymN07NjitCsWVvXI
t/AM/a/UZrYY3NEANh8SPn98ntgvNvvKwEW2/GWL065YWJXIt/C6voW6Uyrv
uBliMKKHu3yY5fPKM/9mX03kMTp2bHHaFQuVejuyT2SeC9hiMKKHu3yYZSNx
R4ngKAMGptRvzd8bC104nLIvYNMSWTm00oeElojgZLqvJvIYHTu2ODXHAs2N
kXE3zAVsMZiVQ81zgdPfJXBC8JWZMw2cRvtkYq7sigUah5EcHfFn1vlAQ7xM
1wynPjfMBWi8XZXH6NixxenEWOg6O03YG8l3thgk+k/4lrCxa14T8S3hKwMX
2fKXLU7peDfM8StzdOW+wM75QFu80HfuTn2YZSPxfAQbBN66ONPGaZV8MqVu
iIWss9MGe3fyi+1d7jt9Ju7c2dYPI88bzmRGfGXoG83VRB6ZmCttsZB1djpr
nb+Scwx1wxndiGaIYMMwr9lpPxLvkTPSU0plHjHELGFXZSxkaRizveaYIrgr
0n7l+uGUec2UOYWhfmv+t7OrMhYiaztZ6+e0vYZYyMqJhvazsEH7kMinRF6+
Urk1v0dLrNrPWtuJrJ/T9kbymiFebN/oyVo/JPjzlOcjOMxq56r1W/PnYpVo
P4J5uv0se6d845Xe+648S7Dz/Or9zwTnEHMBGs8TS2UeMcSsAat0TqS1NGHv
6ftIzfFifv4UGzvfhcniYXpeQ+N5Yv3W/DVYjfjttE5/ay/L3hWfrN5HaohT
Yu+bfj4LG13vDM/ieQLPE8ut+T1Yrcy/BM6zOJn+ViDh24nf6ImMS+U7w0+f
38FhJZ7N9Vvz92LVMKY0znf6UPmtwEoNkJXjsvT2Kf5P1/kj5+EnnpGeWCo5
x5DjCLvoObthTCP9yeKKyPOV8XLKpZXf6MnyM5Fnu+4LEHieUr81/9vZRc/Z
DWNqwHmEe4n+R/Sn7Zy8QQ/b/NClkQycRsSFIccZsESvY18J55Vz/4hvp3yj
J8vPO+2Y9edOnyNYNfCVzedX0vynOKlcx6b9XIlz27sC6Lu0RCzvtE/PQyPx
VekHAtvdHNbpc0OOm4Klrn0rG86JsaM5iuDziK8M53gje75ZmMl6l8hpf8xz
gVvz98ZUFrcQ+8UGnEdsIbi6cq3JvPc9hdMiz9P22jiNiFMDHgy6McLbxN2c
ynoXPrO4OktPEnMBIsddldMIjE3Mm7fmz8XS6Zh23c2p9GHX3l8WV2dh3qYZ
CGyYOS3Lb7S9Bk7L8rlBcxp0I+GTibG5039i7OjnT/sfGRfb3reZ07LuC9A5
tOtOIp1HrqT5u963T+Ok0rf03h+Ri7Mwb9AMV50LGM7zm2OzMo8YtKVBN1au
yZtjs2vsIrn49HmzZjDwWBenZbWflce7YvPW/LlYMsSFWW8Yxq7y/rVZM1x1
X4De039sx7CeRnBals8N2s+gGw1xYehD19hF2sl6Z5pBM+zkxC4eIzit653q
5rnArfnjWDK/D9+WRwxjd9r/rHemrcaiSzNc9b5A5Z5+JI93xWalNjZoP4Nu
NMSFOY9UYtLAjea7GDYey+I0+nnDOVv67ETEJ5HfqiwTOdPQn+5x+6yxM9y/
Nvt2+n2Brj39x79POWdL6ytD37p0Y2VcG/pjw6rtLlVkbafStxPvC+zYUvnd
NANW6fLSNH/WnlFlXBj6Yxi7LF6yfZeh0m9TeCzS/6zvphmw2qWNDX2rxLCN
Mw396cKq4S4V/V0G23lvG4+d2kJ8Ny1rnWqivrqS5o9wwmkf7rlA7thV3qUy
fF+YwHxXzqVtsWnpKetpL0HzRzjBxpmG/lTqvcjzXXe4In7uOu9t47EdWypz
UFbOMswFaCx1lR0ME3thdFxP4XAak6fPE3adPk/PBWw5N4INQuN1+cSAGaKf
5rpNl9KcaegPrffou1Q7dnWdmaTPe9tyX0Tz0/d/Iz6csp52Jc3fpUuz4noi
h2fFmuH+9ZXOTNI5t3Ivnp6nnGrj0+dt62kGHNIYNreflacM/Zl+zorAJN3n
LBvpNdLIPI7IKfTzU9bTrqT56TngvS8Q74O5z1c6M1mZc3faj8zjiHlKJAdl
rfPTmHkJmn/i87QmNPRnyjkrApMRuyLjnpWbiPaz6pXv9CYwYFhPu5Lmz8qt
V9Kxhv5MOWd1pTOTdG7q4pNI37Lu7kXW+Q3raQbdbsut9PMvbS5AjDXR565+
Gs57dL0nvzK/ZN3de6xn3RnJwljkbguRo4lC5Fb6eYP27poLVK6fn/Y56+wo
kWuIce86J0PHPm3vKt4rNZtBbxvqWbGQ9Q4om4615RRC49FrUEQ/u+4L0LnJ
gIeu/lfG10StnlWyxoJ4B1Rl/wlcETmFGOvIfIrww04/DfcFDOdk6Ngn7CX6
RuTul1CP6KWutThax151LkCsUZzG+BRcnWpa8zkZQvPT/afj69b8b6cDaZ6M
/O5L2Bcg/Jnlf7pe6YcdTRuxZcpa9/RzwlOwbdaBlTx5mpfNGO7KKTv+7Fpz
6PLV6TzxdF9yxxbDO66JdX5iHLMwY8Z2ZYnoH3Ouj5y/pTFcmVN2bDesORg0
ZMTGyDdKurQZnSuJcYy0OR3bXTowC2/0WtwUDHflFJuNWaWLS1ecH/HzKZ7p
+IrkSmIcT9ucjm2iZI0pMRcgcpkNw5WYJNo07Fl3cenq75G1oMozq7RmsN0Z
JM4hTK8b5p5Za3EGe2ktEenPlPlOVqG5dOXbyPdqDe8liOTKSo2RxQkTsR0p
XXopgvkIv5kxTGNyx+dTbDyt0/fET3VC15lV23s+u/RthDNt2CZ8Yp57Rtox
Y5jG5PT5zmmhudSmJ7vyqe0dLF0+qcQ2gRPbO/F2xn2nnYkY7sItgfOJeq8y
3rvOQhM+6cqtXWc4DfFr0zPE3DPSTpe9Zi0xfb5Dc5Rh7aKLk+n8QmDDdoaT
jl+Dz2kcVrZv8Gclt1x1vkNofsIPWf6Zrvm78E/4yjwXoH1O7K0Q8zjaXrNO
JrBksLHLri6+MvBG1hhl7bmb+ZnINV0+p3HYNY8z+JPGqm093KA9CO7Nit+u
NW06j2Q9T9wzIsauMtdU6pnK9UBi7Cr906Ul6NzRZWOlXV37I+b3fGaNURcP
XHUuQOsZA94qz88b9CFxzyuCJcN8h7ara3+ki1sq45qY15j5uTLXEHqGmHva
civtn0qdTGCJeL5Le5jPg3Vpocp1fsP7/7v4mcg1hJ6h5562/dwrfXd4+np4
lz4kYrAyX5/aYst9Nluy+JngK8Ln9DcmbLm10j+V+pPIy5Xzna7vAtN+s2kh
83n+U1vM/Ez0P6vNym9M2O7i7fTH/N3hrLLDw5Xvz8mKnR27CP1ge298lp+7
ciuNn67YJNYJiXNTkVw8Ef/0WTU6RiJY6mqfWPe2ne+qzOld+3dT3v9P87NN
zxA8WYk3Gv+Vea3yPukplrL6YMj7BM4jcVFpY+X+XZfG6MJbV64h9EbWuq7t
/RuRdwQRec2gw0/tJdrvKrbzXYSNNKfRuTLCk5X4MWiYLL2Rta5ryKFE7rB9
j4Dwj/k+eKUeqHz/bWVOz+I0w9kAW53OO1ljR8SpLYfa7o8YdPjqt+jnu+Ii
MqZd57sqbczCsPkstI17u/IRsSbfdb6Xxn+WTyJ7DV33Sennu+rm8122dbYd
DNNjZGini8eIfFS5Jt+VRwyan/4eAX1OjFgP7yqEPyvPd1XidgfDXZotq80u
7p1YN9heiX9D7ljZHvHVTozb7oPTY0r4f8fPO79lvrd1+s36LE0SiR0DJ9N5
x5y/6D4YeLty3n3qq6wxpe+DZ5UszrGd7yJwu+OTFedH1tuzcmXE/zQODXln
Cod34d+QO1b4p89f7dhYeR+cHtMdn9vOd3Xd2yI0QCT3Za2bGTiZzjvm/BXp
Qxb+DbmD6E/WmHbFJu1Dgyax3aMx74lHsGTjZEPeMXA4oYcrebtSr9pwFYnN
rrO+Bk2yg+3K2CRyZdaeeNaapy12uvKOOX8RHEvztk3z07ii7/LQPiT2Funz
XXRs2vbEifsChtip5NIp+SuiEyrbpLmaOCdJ4Mp877XyPgUdO1PWpug98QgG
KnOogUu7isFXlfUpmj8LV3RsRvpJ/C6tHyKxE2k/a22K3hM3x9HNpR5fVRZz
HqFxRc+VIv00rF3QsWNemzL4+XRNbyInd/PfJF+Zudpgyw6uumIzi0PotQtD
7FRiLGJL5TnVrrxmwIO53hVTBMYMeYTGFaH5I/sCtrWLrtgxr02tfG74vgCR
1wx4MBeDrwxcbbCly2+R521rF3fsfLZPaD+fthPJoTacmPFg85WNqw2a3+A3
2s9X0ni22Ok6p7fT/s48seu7k1fFw0RfVXK1wRaD37rW2ydqvOmxQ/h59UzW
mt5EnFwJD915ieLql6z5zevtV4q17vHPLDs6gc4p03HSPYaTfEVwtcGWLr+Z
MTylnxNjJ6tOf1/gP9Xh1So=
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztnb/KrVcRxj8VQsAidbAKRBTLpD7nYJMLiJXYeARjEwicFCGVuYe0Xkya
XIBtIKWdIngFJkRkg4zMnFmz1m9mPcV3eM5mf3u/a63nnfnN+vN+7/zhkw8/
+vHT09Onb373z4cvP/v1q1cvP//NG9//548vP37/vY9/8p384j8/3+tP/v6v
5396+uWLv75668U/3/75s6/f/cfzz3/37Nmjtt7j+V3r/Z7PjH4v4TMzbazo
z4xe1Z8Z/0T7edV37eyHVe2t8HlFTKh+T6afq+/x6tgSHbvfvvnVs2+/fPfF
z/7ywfMf/f7b5z/95s8vfvWLv5k6+n7rdzPacz07PzPT3kzfRq8no1eNXbXf
VvXJKl9lPFMxXtXfVeG9nT6puMejY1Htk8ffreBGT96JXnMm51Z8ZpQxot9L
4P9VY2e1vfo6V31X1Fen2l5RY07V0fiw6r6oZvtq/l9170f79unp6b8/ntz6
+H7re6OfGc2/1ndZ31vBeKfGriJ+nuoTj68IbY/WL6dYnaCjcXgVQz7651Q9
tZP/PfE2M17R96z6zGhuteLG43cRWLdi7DLxk9Anlh9obff0CYG9CczvicOr
GJIw90Ljf0/c8/Cz58czdp4fT195vtfyAHn+P5OzMvHzFP9bYxTNLzvbLr12
fKM1flR7ctAk/s/0c2b+J/OZnri3KoavmlchjN2q+HmK/z2xmtZ26bXju2o+
hxCHT/F/NId6xijzuuc90fs3U9dnvFTN/6v4J/P5p/g/M+93qu3S+fFdxTnV
934X/o/eL9a1WTHW83p0johWk57i/4xvCXPdq+7H6H68U22Xrou31fM5p+Zk
TnFIlC2t2GK97pnbsd5DyIkeL+2c/4/6lnA9q/j/8XVr7Dy/K83Rnvs9cz+S
awFCrFtVF1ToU+syGX8SchbBV6v43+NDzfP31dFaryJfnIrPBE7L1AWE2Evw
J4H/PbVYF/7PnPck+1n6/+vouuGqfHGqFiDEN7Km1QLR9etTjE1g4C77i6Q5
97hn3XBVviDEajL/0zRhjxZt/bqCqwn8T/h86f339ePr1j3l2ZdixXlaLSD+
71ULWPUmbf2aoMX/0lHtiY0W53sYjFYLiP/5eTNaYxLyFEGL/6Uz9/KqOX/P
mt2pWkCsyK8FojWmxlf8L53nK8/9GH3d4u1TMVz8z6wFPD7xxJ+bawHxv3Q0
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
Vi3A0RbDZ/g/w0UEz0hLV/O/vK1agNbn0Tmc6jVl5XTpLlre5sfn2/rW0+ee
vsq8Rzld+gYtb/Pj8819a8Xk6n6uXrdVTpcmaHm7V3xW3649/2v1bfWzl5XT
pQm6ezykadUCe/i/wsOe7+roGWnpnfx/s7dVC9T1J+H8b3fPSEtX87+8rVqg
og89dUGmDzPX0MUz0tI7+f9mb6sW2F8XRPuN9ozlG3K6NEfL2zNy3219Szj/
290z0tLy9rzcd0PfWgyf4f9TXETwjPSdWt6el/um9m33879kz0jfqeXt2blv
Ut92P//bxTPS92h5e3bum9S3k87/kj0jfY8m+Plmb6sWeL3+6X7+t4tnpGdr
gp/lbdUCUf6v8LDnu2i6Y06X5miCh+Vt1QKePpl6/reLZ6TnaYKH5W3VAp5+
8NQFmX7IXANBd8np0hxN8K28rVpgVV0QbXsXzqd5RnqGJvhW3lYtkOmTqed/
yZ6RnqEJXpW3OfG5S99aDJ/h/45cRPCMdF9N8Kq8zYnP5L69+fwv2TPSfTXB
n/I2Mz7T+vbm879dPCPdSxP8KW8z4zOtb3X+l+8Z6V6a4El5mx+fT/Wtzv/2
9Yw0XxM8KW/z4zOhb3X+t5dnpPma4EN5u1d83tm3Ov87wzPSTE3wobzdKz6f
yjWeuiDTlsw1dNe38ZL0bP6/2dtTawFPXRC9/hs4n+YZaY4meE/e7pv7TvWt
zv/29Yw0RxP8Jm/PyH07+9Zi+Az/38ZFBM9Ii//l7Rm5r7pvdf53nmekxf/y
9rzcV9G3Ov872zPS4n95e0buq+hbnf+d7Rlp8b+8PS/3ZfpW5385+mZemqoJ
viLom73dpRbQ+V+Ovo2Xpup/A8rMhvc=
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztmzHqbV9ShRsFMdUBCDoEOxPtRoxMDNoJ2IKatAitIIKBozDVuJ2EqQMw
MHAQZoZ2g0IbXFmf31r77vt7J3h/6v8495y9a1etWrVqv1//47/4wZ/+wne+
852//OWf/ucHP/zr3/3xj3/4N3/4Sz/7nz/54Y+++5s/+sWfmn/3339+Zv/Z
7/z29//tN37le//x3T/6/p//2l99/2//8T9/51f//g/+l508Y55/9du1TddA
92L2tVhb61zMfs37zTPJelpnbWKA7qX19624ap27OcdFPCzO62RuvnrmH37r
97/3L//+z9/719/7PrZ//p30+Ve//aef/OR7//Nngfk///5X6/z5Z149n3yL
7muxtta50BhI1rm2X62Brs3EWxIDyXoWf5+sh541jWezZvN++qd1XgZjaW5S
Pyd2Uo9ePU9r9yIHk9q35jzJd83aFueyWMPaXvvnZB+XxAk9r3Wfa859EVfr
fq0V5yY3T+YRjfOkbq61IBMDhvPcoCfQczE4ts4RE6vGPyd7zEXMrPvcV781
3KZVK5N3LnLcYD7NzXUetfqXRd7RfExiYKHdndQTWppGgmPrHDGxSnUDim/r
Pu4k51lwDLqeRa1M4raV4yd7zNt6rgTPW3lHNR/jc1P7kthr5doi3ug7Wzmy
0MEoVzS6h8FYEzMtPm84Bu0vFn2x6fENvz3JdU1fsKjdBkMWXIhyAFNbDf4Y
PSHJKRpvSVy16vWil1/EMMUKg7E0Zlq+MhyD5kLSdy/OoqVTmZw1uWP0lqRX
pbU7+a3pGSlut3KKvofWQdq/mJ6rxXNaZ7ru5Skfpu80fRbFwwSHDedpcYw1
zre45YK3Jznb4rqmp2j1Wa3etsWFjE6bxFISw0kdTOpjq9YY7d3wz1d+MPyQ
1oWWtkPj81UOUk5IuRDF5xbvpTnSsg1WmDrYwlJ6vqanoBhobJovNMYWWgHt
oRYxQPPa8NXWmls4bHr5Vt6ZmrvuF1q5Y/xJ17bAfMPxTB1s9TKG6xqso/yk
1Yu19BCT70bzX/M308PS/a71VbPOdQ4a7kc5VatfoFx3XS+StS3wxNRlusd1
LaP8p9X/Jj24qWsJNho9hOKYwZ8WLr2rhi7W2eqz3sUnW/pSy+ev4pzGJM2j
Rb2geEvPjtZlw7EX3Pgkb6Q9eIsTmt7f4BuNE8oTaJyv4yTpR1p6Bc2dRa03
OZj4k+oJRtdKcsfEavLdVr1Yc/5WX2n4P8Vhio0tbmN8dbIvS84iwTejW756
p8ElE1eLGkp7HIOHdD2tOkvX1tKv6ByK4mHSs9MYNvpGsv4F5zc9y+L5de/Z
qpt07wu+2upfFjV9URMXWNfqlVp9YqtvMnryYr8tXcjU4lffohySxgzlWpQv
GZv2j6ZfNvXa9J6tfoT6KuGuptcw/cu6pif+T2IgqX2tmSPtlZLYM9hlcMDE
jMlrs0fDYw3HbvEBU3cSf7Y4/2LuaZ43utCiXrd81ep3Wj1vsseWRrSOK+rz
Vo1rcV3DnxOsNrxrsV+zR8PHKCc0/ZSpOwu9+mRdaOXpSU2gpR+aZ1pcpcWd
aE1Pet6TNZTq7QlutHAy+ZapHZRPJrWjVcfpHmnvvKjLJu8MR0r8cENdaL3T
1FOjCSywdMHDk95nXV9OakQmTlpYdLKumdph6rjpNVrY24pzs1+qGdIeJ4ml
pN69C5cWdiseDF7d0HO1epkEG9e9sNGITJy08NBgXYsvtfqghSbWwt5kPSbO
W/hMz9rk1CIGbrNNPaVxYvx/sucyvQydo62xZaHrGq5u+IapoSdjIHmP0cRM
/aI+pFyixUOofxY51YqB22zDu175JOmbzDrXPZfhS1TTSOqgwRbKl5I+1/Rx
CQ4YHnUDZ054kcF/Wh9f+bzVlxkdz+hC65xqxcCn6ELJmhc9u1nbuudqcdcF
h6e415pftDQZU48or15zZurnFn4mazB7MVi3qJvrvrilaXyKFtTKi0W9S/hJ
ay+UL1ENJFkn7TFP9sIGS+nMgu6X8sMFZzY9iOHb9CySvSRxuMBnGs+tvjhZ
A/XbQgNp2UZLWfTslDsl/ZrRjQ1nSHCm9a2TvfDJ3vYktzScmc59qPayjjdT
vyhXoXXTnPW6Fhv+f4MWRPfY4rcm9kxstOqROXeDPwuuRd+z1txoP2W4peHM
SR7RuvyueEv8v+ZFtA4aTmtqcRIPN3N+ukdaOwwPT7iEwav1WSS6kImNFtei
7zFxRTF5fb6GM9O6nGC+8Vsr3hJ9rMVjzfnSetGqxYnfFhyyZVMtJcGNNZ80
2oXJ91ZfYPxgsNH0wmud1vBYc75Uq6T+MZyK+q0Vby2dZMFbTD1t1WJTL26z
1/ne4pMUn2l+nTy7lh/ofg0+L3Raw2NbvQPlsfTsDKdq4S3tXxKsM73zQrtL
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
ilmn0T+Nb83absCTx77fXswx6bzp1W9bXKU1F07qSGtuuOBytHeg9ydP3hEy
XIXerVrcpzU5soi3x/52bKpvLOI/4TDv4jNJDibYYmava7ulY1OsexdXSfa4
jkmTI58eb499j03zOsGNdd2hOqdZW/JMa254Q11r3RVpxUkrZoyG3+pxjD5P
tcrb4u2x77Fp/Ji7Oq26c1s8r+fjCzuZBRhdPdEuzH5bMUPjfP0eE2M3x9tj
32O3tB1zX8L04K+ePxnPCU+muXxbb07XtphNL2LGnIvBaqP5Gz3/U+Ltsd+b
12vNM4k32l+8iv+1FkTrYNLv39DLJPPNxD/mGcNVbtBhWhzA6PmfEm+P/d68
TvLI9JKGn7Q055M11Dzf0kZadS1Z5w1cJYmZtQ5D/baoEYaTPFrQ17NbumWr
r0/4yUI3WNdQ07/TczyJt2aWuuYqLZw0Ogw9r0WNMJzkhnh77DN2i9uYmDcc
7F0x2eKTVEs5abc05DVXaeFkq3aYPZoaYTjJDfH22OfzOvmzvjPw6XOoFs+k
2Luua7RHW8RGwhkMTrZqh9nvul+mM4Ibcuqxd3m9wC4aS58+h2rxzHdpKRRj
F/ceqZ9N/Xr1HqP5J3mU3HOj/L91Fjfn12O/ty4Y3Ei+dfPcs7V+48OTefrK
t3TuY2IjwXCq+dM1J5p/guHJ+40G2IqTRwt67BZuUKw2nPCGXpViReLDk1qK
wVU6G23FBtXKkjUbHcnoNob/tOLkE7XWx36vTbWar8QxDM688slaZ6O5n9Sm
ls6QxIa5Y9C6P0btxM/0HFtxQnuWx37sk9h4m03/vUPCFSm+mecTPDfY1eIM
LQ2Q+tno7cm5m9mWmTEZrenTedpjfxY23mwbDEx4V4JvRktJ7ntQ7Gr1dGbG
Te/km3UarT7Bdtpn0Xph4vZTeNpjfxY23swxWlpra3766p0JVifn1TrrFkdt
rcesk+pRtBYb3xpdjsbtJ3K2x74TG829jrW9vkdn8pFy/uS8zP2WBA/ftR5a
N1/FQHJvk/62VRfMvSYz+7iZsz32ndhotNN32a17dIanGdxINB9zX5HWppPr
SdZGeS/F3lY8G25PtdlXfkjO7oacfex7sPETZ09GYz95H4aey+Ley23rafUp
rTn4gjNTfy70xtt42mPfg42fOHtq3WU92e8n57LmfjROFuuhvYPR0MyaDWem
/mzp/0aje+yvYRsu9Omzp2RtC/2qdY90PWumfHuxnpb/13OElqZ3Uv+nGt2j
BX07duuOx22zJ9p3nNSvjNaxmDW/a/b9Lv8bbXCxtoX+39K+HvuxE4y6bfa0
mHW21kl573pGmdRoqgcme0mwtOV/ow0m6zFaUOJPc2eD7uvRgh57gTlrvkE1
arpOs2bKe5O1tfL3JM60vruIGRoPVBcyvjVzNxPnjxb02AZz1rOnpKegs84W
R0pqUNKDGA2H8u0FzrS+u4gZegeJ9pU0p+j6jWZl7lY99te2W7rxydkTzc0W
H7tBa6WzZqpvLPCWPtPiqFRjp9+leprp1+h6WrroY38929x7fNfsiWo+Cy2L
+vNdc3CDJy28bWlK9LwSDmM0KKPbJ+eV8JYkPs05PlrQY9PcWeCh0XzMGgx/
u01rbc1z6fsXOPPK/+YOWBI/tF+gZ23qo/H/Yz82zbXWLLiVI601JL81OXhS
a23d20nw9qTeZfZl+ke638UcyvCxx35sk2uv4jbhzxQPqWZr1mA0W5qD79Ja
aX9k9JCF3mXqVwszE96SxNL6rl3C3x77sVu5Rt+T4HPC06gu2tKlaQ7Smts6
R1NrbpjbGm7cwkyK24v7tFSfpOf12I9teHLyHoMVFPNbMb+eESzsZL+Lee6r
99OauODGpiau+QPNi5P87bG/tt26D/kq9ihWt3KqFfOLGcEN577gA/Sd1P+0
Lpua2JqlGh3spM55Q7w99nttw9Nas07TFyd9RxLz9D03cP538QETJ2autLhP
tZiltu45rHXOT+Qnj+1tg2NU2ze8hcZ5ohe1nvlKnD+p3bSemvsztE6Z+E/2
bvgDvQtEz8JoejfE22OfsSlXpzNZgzN0RkzrwsL+dJyn9Trxw+K3Bs8pZr56
j/m3AEk80/XQGvpV+9bH7ub+qxijc9jkW4nGchvf/krcifqt9W8KWrWV6kv0
u61nkpyi70lyx/C9G+Lzsc/kvtFekjpiNJYb4vPhTnkdpLFkaqu5b0DrQut+
Av1u8jzNo285bh/7/4fnSb1YzKpuqI8t3Pt029S+V79NZusJdpmYaZ3d4q4O
1ZoSPzz/LuDbtCmet+Z3NN5ujslvjTuZ8zJ8m37rhr7McHijNdEadBvXeuwz
+WvuuS1mfzf4h/rw4U45Bpp6kWC4+VbLTjhVS2ul8wV6d+hb4zbfmm3ubbZm
f58Yb6Zufgu2mY9QrLthFkPnWVSTN/+mptXXP9zma9hU86G5+Sr2Pj3eqM78
KbVsgYGJf8wdlVYcrrnBor9O6ix9j3n+se+3jeZD51OtfLnNb6374Tfs67a6
2brrdcN9MHP/33AzGsP0u98an/mqdosPGKz+lHhrzeNuq2s31M1Xfr5h/XSP
Rp83NZHGMP33BZ/Smz92F28p50+w2tz5PxlvLS3C+OrTbcN7P9E/yd2eJN6S
3yb+oVrQp9zBfuzcNnhr7NYc4VW8/Re2qQlt
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztmD+qr1cVhi8RROyFtA7ARgu7KzqE2KS9QlIFhFiIjTgLW6fgHIIDsHEe
OoEkYGGKwPn57eddz7v3LpSdy7nrrG+t99+6P/3d7z/5/KN379794Uff/N8n
H/746y+//PCn3/7w2//47MMXv/j5Fz/45vmX//7v2/env/zn+79+9ZNf/eYf
795//O8/v//Pv/7+/sc/+9t33v/7M9/3/r6/++r7Sf1VP/+WHl7981UzSdZc
9e2r5vzkvQoPq+ZMY/sJ157s5cneV/08rV2r+mnB0pOff7LrZP+05tN6RXu0
QfMN3vekTxrbBNdozSdy4NQ3El5syG82PzJ4a/Ib6Vy6CntJzU96H41bG9eS
Xp/0X5rvSS82aKMh2yS9NfmNNC+Sd8GUPqziKZ3JDXdE0utbdInGJOEptP40
Zpvk/ZjsjfYv4man9cHmfUke0ZmK8HGbLtGYNOjPVJ5JZpvk/ZjM8En9JPTQ
kEtbdkpwbUpPiD5pLaK1Oqk/T7hpzjNTXk/PxFafuAVo7U16n6E+7U30bA37
IrxjlccR8zT471QWmuLR1C1GY9XAZVpnbDtdhXNaTwxZhc669Hxs+aT9Lpji
UVKHbXyn79zGmSd5bbhBGrNKEntJvzP471T+X/VdtI6tujum+D7FZfPMk7ck
/btacnWyB3pHxHdNcdamS7YdtXi0gctJ7Nl2SvhvkmuGrNIy82QmNOQZWpfM
O2r0aJsOT3lcsr4hJ5h3R9xHyZm3+6/hLjBwkJiJwaNpbTTMOemtxB2a/JbG
3dH8IvZrywCGf4tYhWfDjho9Onl3JLFHe2t7TrBxhNZGm3c84aA5zxjmb9iR
2aNpbSTycPImTXrfFKfMHEnyy4YZei8GTUhyeWpHJ3t0kvvE7TnlfTSnzPdL
8t5Peofh3rFpAs3lqR2d7NGrZm7Adntmpjme3B2Nf1pjaV4k8wytq423sFnH
aI+mZz6V1Qn9SeYEIjtN+buB+0nMrPrzZMYgeqN9Kjm3nTw6qZMGbK/iRUtO
SM4/6V80Dg2ZKpkxkrOycTnpgwaPbtmvTXNacoLtNjRzfNXMk3nDoLdT2bWF
CzaPpnexqqYB2zvlBGL+Nl6v6p/Qiie54olu0BwnODt1CxMztOlYchft+bk9
J0zdhgZeE7nIoI1T+YT2IwLzSS7YPDp5R9C3iSE/t+cE+jY08Np8A075Qnuf
5m83e7QhU03VN2Q5Q04w7MJW3+AjyVxB44HOsbZvN/sU/TZwLZmfG3OCjXeG
+skbkPYXIp8Q8yR2MfXtZp+yeRztfXR+NszQthfzrunslNzXq7hN6vDULgzf
bvMpm8cRXKOxmrybprK6gXeGngkNWYUlW95IapRBk+k90j415XGG/ZrxlswJ
O+2F5rJthoa8QWN1KsfacGvQtF2zrgFvhhuqcS9TXDbMcEpbaKw+2QWhyY2a
QOQZA/ZovzPgzZYNWvbSyAUiGxPaYr6DiLk1akLjnZXMugT2DDw1ZPWpvdBc
TuZ2Gqs2bNPznJpzUhNW9d/icVNZwpAVp7KBbS80l81ceMvvpTWZ5tqq3dF4
M8zNti8Ck1NZwpAVbTeU+QbZlQsGb225g4hdtGsCva8WjzstKxq0kZ7DaVx4
oqW01k1hm/bKnTTBcGfZsu4Uf5PzsWX1VTmK0GQbF8zaOIVtw7e3aMKUTxmy
Ac07c1Y05ISpHk7gwpQ22rBt0/nTNMHgccRtS/DXdjfRWX3qjpu6o5NcSGod
4blP8GPT+dM0oSUbrMppq36m/W6y5ZMkX2xcoLUxWTOpG1OzateElmxg00lD
VrRlg+TvJfhi4MKUL9Mz3GlW7Zpg8FACb2ZtnOLjlB4mNeQJNsxcoH15Vc2p
/SZndbImGLKB4VZaxVlb9k7qbfKma8/JSV+mPWhq/knd2EkT2rOBTRtXfaPh
Lkhq4xRup7iQ9OUpfNLzT+rGCZrQkg1sOmm7m1pyAj23E3KyQR+Ifmzfsqsm
tGQDw63UcjdN+V0ymxH1k1yw4ZDO5Ks8cadZnaAJU/6YnIkhK075HTHnlmxG
+IUBhzTHDf8G0lK/UROI701my5a7yZYBnsyZxrOhfnJu9J2V9DvzzXg1IZ8N
kn3a5jbld6/in/guWzZ7ktl24iw9KwOvzXuZ0oRkNjBnv2Q/7bhtz2aE9zVy
9klvNGYadaNdE1r815C7VvXTgtsTsGfoga6Z9LtV82/UjRZNaPHfVbiiNbOR
Fydjb9VMzHNLeiKt1WbdaNeEnfw3Wb+RF6vySSP2kjOZmpsNzy13aGN94qZo
9N9ktjTcPsm80Y69qRybnBuN7aSPm29GQ32Dlxk4ksSkoQf63wRW/S4D9pK3
+RRnzTc13X/7v1fYNOEEf6TvDjMv6N9lwN5U9pjy1iS2bTMnvr2lvsErW/wx
iUNzP0nvSGJv6t83kpy13WLmmU/x+gSvbPFH211ju4MMuvEEe41cNt8Ur2Ip
OR/bHTqlG+1e2cLZKc2h+2nxIDozE32ummFyPqv+LoGxljt0SjdavLLFf5OY
T/azCoe0ByV1wOZrxK6n8lh7xjPrhgFXBg0x+G+y/hTObfghfIe+NQw6fDOe
xx8b6xs0xOC/SczTvdlwSGsp7WtTnkV87wkZr93LTvBKgy4ZML+qNxsOV/HX
gMkpz0p6U3vGM/hjY/17S3rujpYcSGsj0Q/d59QNcnLGM/jj9cq9b0kb5m04
T2raqn5oLU3uncj2ST+dyns78bpFQ1r80YZ5G85tHk1rIKFdNJ5X7dSc8Rr9
8Xql0x9tmmbD+SqsTvnOKs203QVJjD3BEpHB2v3xemVvrm65a5IcnNJGOvPQ
96MZw8k81p7xbLph0JBV89/Jf808MngK4TtT+JnywVU7vRnP44+N9c235JSm
2Xhk8xRDPwbtSmLY4KctGa/dy07wynZ/nOKRmQuNHme4C8x+OuXRjf7YWL9F
Hwz+OMWjKU+xedxb/txwP9K3wyr+0j6Y9FbzvWmr364PhvpJPU96is3jkh46
pV1JP23PeDv542le2eKPhruD1jQDF1b106hdSX/fNeM1+uP1Sqc/Gu4Owqds
XCD6adeuFgw/wQmN7UZ/vF4564+Eptl80MYFW/+G+9GMYTO2G/3xeqUzj035
L8FxGxds/TdqVxLDN+M5/bGxvjmPTflvEldTXKDrnKBdSQwn/26yZrs/NtY3
eJnNH5PaNcWFZJ3TtIt+0/xtz3gGjDXW3ymP2XiUrGn7mRO0a+p2WMVf2geT
3jqFseuVzjw2xSMDF1reV7syfNkp4+3kj6d55ZQ/0jwycMH2vtrF6VvyxjRn
vEaMXa/MeNYUjwxcML+vdnlm25jxdvLH65Vcnp/SqCku2N5XuzxzNu8r6a0G
jF2vzOAt6TWNXKDfV7tmZ57MM0neneyPjfWTN0XSa5IevYoLtlx6tYubM53T
kryjtciMscb6Br0ldpf00OStQX/71a6ufRky3qp8tRPGGusn9ZbGKu2hUz0b
8v/VLueOkhnPUNOGsdO80qBFNg+1ceGJblzt8u+L9scnOElirx1jLV451RuB
K9qjp7jQmP9P1i4aq0/mvIr7hnxlw1iLV071NoVV2genep7Ssatd+Td9Fz/R
zGS+asGYzStt305jderGpHu25f+rXbN7JPBg0KVGjNm8cpUPEnizYdXs0U/q
X+3y7yuJT3pfyX9n2Aljq+rbenuC26m9Gzz6hPx/snYl8Zn8u1P5qhFju/ZG
e0cSV0mPJrhgy/9Xuzz+S3Awma92wlh7b4aaRG6nPXrq1mh576pdU/775Nsb
NcGMMSIzJ3ujNYrQOoNH0z0b9Odql8eLV+XJFk04DWPJ3sz39ZTXTGX4k/P/
ydqVzJNPaho0YVeMJXsjdG8Kb0lcTXHBkOGvduUxNoVPmybsirEpDTfgKqmr
q7T0SQYw79T2Pk27aJ99tTeDJph1huYvPU/bLUzo6tTek1ptyPZXu5x+TWRU
WhPMOmPAyZPvbdG9J/Wn9k7fswavudo1q11JfCb/bqPOJHGyqjez7hH+OIWr
Vd+S9BrD+2qX503fU406k8QJ8TO0LiXrt2jpk/xgmE/je1ftmvJfAqtmTZjC
Cd1n8lYl6q+qafMaOtvYdOZql9+vCayaNWFKN2guTN01dP1VNae8Zuqms+nM
1S6PX6/C4ZTmJDG/a5agsyjBQRpvU1r6lt9Lz7zlfbXL47NJzUliftcsYfCs
lvq0ljZmhsb3adpF++yrvRnwSfOuMUtM3arm+gZtofOMTWeudvn9epV2mXPy
CVnC4Fkt9W3aYsgMje8TtCvpobRuJHMy8fO2LGHwrOQt3O6PybuGuDUM7xO0
q8WvaQ005H9blmj3rGT9Fn+c0oQWnbHhberGN/vvKg1c5ct0TUOWaPGsxvt6
V02gd2p+27TLUJPoh872tlkZPK7Fs5L1bf7Ygj2bzuykXe1+vQqH7dkmmSVa
dOPVORP1W/zRhj2Cj7b3lHad7NdTN1RyVkSWuPdvb31Cc8w43/VN72hXv6Z1
xjCrZJZIYtt2/7bUJ/ZixrlBZ2zaZctLBr9epTPtszJwKulZ9O7M9d8y/6lb
vuWmNrxXfW/SWw1+ncSeeVbtnKK19NU5m+sn/dRw19A92/I/nXkIHTBryyp/
bJlVC6dWeeKU1yTr076QxKFhPju9p7KuWVvom9o2KxuuprSi5f4yZOmkFzfe
1OY3zYWd/JrITuZsY9OxE+5fuv6rNc3zITRhqmfD25Z1zdqS5HtyVi061qIb
r+6OqJ/MM0lst9zU5ncSG4Y8k9SHVbid4qBNx+79O1u/ZT5mTWh/G7JuUluS
eDNolAHzBh2jsbrK75L1zfMxa0L7m95RUgds+Xnq79owP8WpVTiZun+T9dvn
k9SEXe8Cc9Ztyc9JP2rUGTOnDPdvMve2zyepCXTPtvxvzrp0PzbsEV5s0BkD
p+gZ0lpq8AjzfMx3005veteGG3/Kj2w436k+McPk/ZvEect8knmD3qn5Te86
mQdoPCT7p3O1Tcfu/fv/1f8assQ/iA==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztnE+qrUkRxBsFceIidAk674cgOBAnOhCHLejAPwg6EBHBmaNG3IYLEpzq
BsQV2A0KF6Qgwl9EVdY936Ae5x2+W5WVlRUZGVXf+eqPfvm9n3zho48++vWX
P/vne5/85pu/+tUnv/3+lz7/z48/+fk3vv7zL3728Q//aZ9//ss/v/jhu3/+
9ONf/OyHH77y959+/J2/fuvDn/74tY9X3yvPvP1e6cft07XTtS3VZ2PuZF1S
z6f84M6lsV6p+e4cN/W5vUapz2SPNMZNxe1OHHD/9l/f/faHf/zuBx9+/7dP
pc/KvEifyvcT7Fz5doKd7c8ubrxXP9zyOeXbBg4r9jTykZtDXd/uXCPFJ6vn
PysNPvy3rf727TPKGrl9rvpfPXPKTmUdT9nZ/uz6QbH/Rj/c8jnl29W6Exx2
cV55nozrxvDKtztxVVkX1zYlzypYncrvhA807CR7pGHnznrc9cPqmbf93OKH
Wz6nYkzhNi4Ou3uZPNOIYaK5pXCA5CO3RljtU3cPNnB+9XzDTsL/G3Y2amF3
vxAtYtXPND/c8tn1w+oZZb0I/3T3dUqfITHc1iHdNW1oVopP3PyixEYqLzTs
VGJe4QxK/401bWC+4gelzlXi7ZQfbvns+sH1obLuKZ6cOtcge1Ph4Skd0uWK
jXOE1Pq6OpXiW2UuO+1U8IrsHZKvV7aRetz1A6m7G2v3XnOB689G/JO9nDrT
WdlA9CulDlXiXLG5za/c/Ouub+r71OeGne66kP3S+Fu3hiV7P5UTG2t3ey4g
mN+O/xS2KFhKuHEqhlN1lmuPm3eIxuKub1uvIz5P5ZQU1pFxG39LMF/ZyykM
aazd5FxAML/tw1TNrvBtZX+5NYIbwy7fbtRZCgamnmlgdaPua9umrJ0Sb2S/
NP62kQvcnLiTD9ySC1KYfwunIjyqUdsSvr1aF+X7dnNzegqrXb2O+DxlWyoP
NmqiRo5u5AKSE911dNduWi5o8PyUD9t8z40ZEktuU+airGmbd6UwX/nePe9Q
YsnVrJTzHdc21wYlbkm+UNaL5OgUZir7xc1fhA8QLWJnLmjw/JQPFXwmfM/d
F65P2hjr1h07eVejXiM5zj1zdzUrpf8U317thVUuU/aRu44kR7cxs50TG3rm
zlzQ4PmuH3Zyqgb/T9XLqVzg1l/u+hIbCJaSHJfCitTzJCYVzF9hxU7ddbUf
2zYoc2/kRLLuO+uCBs8nMdzmVIptKZ7s1supXODuR6J1KD4ke5boA66vXJwk
z7ucOWWn4tuG7qrYn7LBxcl2TkzliFQuaPB8stdS3JvYTGxwcdLNTSSPpHCM
4Lm7j4g+QHJTKvZInUj2mjIu0WOVcV1fKfkxde7m2p+6U5eKzwY+EDxp80DC
qRqYrNSMpD5qfCY4psQ50aWV/XhKr2jw/1R+JHYqNit1Yopbupic4qtEJ7ll
70/73MaNlD0rG5RcQPJsoyZV9m+KO7XxvK1XpPIm0akaf+u2FO8i4yp70MXe
FD907xvs3PvTPrd5YArbG3skVcu7uEc4YSqPu3iufL/yD9ErSOwpPne1rNTf
Eu7t+orEeart5KupPJLa+9M+kz21k3uk4jOlDZKaVMFJd++4eVz53MgdLh6m
Ym/VUv237ST2EwxsY36Dr5Jc09j70z4T/5Oc4ubZFFdR5rIzZlL719UZlFhd
2abwXrcGJDFGzjEVbkD6b9upjEviOZULSKw2sCW1v27MBS7/JHV9o/5KcRWX
ozYwmexfxR5X8yR8QPGzuy4uJiixrYy78qGbx0k/bkvFsxvnLg67/mlgi2Jz
o56ajPmKr1xNuJFPG3ib0t7J3nFrExfHXDsJH0i1aVja0JTaflPGVTh2qnZw
47DBu1ysID45lQsa+8KNsVQ+TfWjzMutMZU+XXtSuJHyg5KzGjjW8InbGppS
21fKuMp+SdUOLg93Y7ut57j11Klc0Mb8VGyTs1e3H8K93VhybSDcQ9kXxA87
9ep2vLnt1fi/i+2rtSBavRvb7vMkN6XwoZELTmG+GyeuvqFgPsnLLrYQbYro
h+7+JTqPiw/tGCPxlmrvlf+TvyW6XINHrZ7f6ZPUfldywYT9SPzp1laK5uxi
nVvrKTFJzpvcGsft5z21h//3xk3xOoJ7jTPBhk8atbnrt1N7sL1HlLVzbSba
u3t/xl13Jd+lzr9ubA//3z9uQ9dt4LzL/YhPGrX57Xt5mj7sxh5Z61SsNjTb
W+JnWrw9/D+r66bOat36ehUzqbVIvY9w414+FdtKIzlXWevG+XXjvPVGLjEt
3h7+z3VdZY3IPiXnto04TNUpqzlO28sT+L+bZ1N1KDm/ds/OiB8mc4lp8fbw
f24zuf9D9uzOmHH1LqXPFC414mpCbCu+IhqL63/ljN49x09hfmMfnWoP/98/
boP/N85tG2e+7hwb54PEbzv38s7YdufraiyK/92zHmV9U35o5L72mk6Lt4f/
9/h/49zWxYGdfk5heConTogxt7n50dVYXA1HsZNofa4fGrlvWi54+P/+cRv3
uokNLt9unPkqdpLc186Jjb3ciO1UTnTzhRJXKzvJHF0/NHLfNI1xZ7y9bQ//
Pzt35XlS5zb87J4PruLZfV7JiY293PAzwXa3f1c/TGluDa2e5L5GrToN00h7
+P/8ubfv0SlNOR9sn1+k9vLO9U3Z4/LzNt6mdLxG7iPx7M63vd8b/U/gwKfs
v2Xubv3b1qXJ3NvnF2QvN9aX8G2ln/Z5SsrPq/VN/Y6Wi8/teiq13x/+v2fc
W+Y+4SySzL1xfkH28s457sRwcp5CYkDxW0qTb2tZqfV6BTx5+P+9+ZrEvIs/
RPNx7VSeT9nZ0D0Il1Zipq2huec1xJ/TtCySC27Hk4f/z8/XbxvZL8rcU5pP
g++5+JaaI9FAlHs7bn5ZzYXgWyO/K883tKxVLmvfSbsFTx7+f1e+bsSnwvdc
zWenTqKcs5A5rr53ufHKnlSNQOKHxGoqR7s1oGKz++4zOS+4EU8a/ewc95a5
TziLVMYl2LuyuaGTrNarMUc3Z5F1d2sEJfamaYONWk/hAA196UY8afSz0/7b
577zLDJlZ4qLEp2kcW8q9XsLZO6kRnDjZ4I22Kj1lDVK6Usk953Ck5397Bz3
lrm3OVXjDCuFva79rq5C1kLRf97+ratdEHxTaqvV99O0QfKOIdHqXd0p5dsJ
eLKzn5323z73xllkAwca/lnZf2otVvnF/b2FlC6dqg0naIPu37rnLykNp6E1
TcCTU/3sHPeWubtc19Uw27+rQPyj1N0uVyRNsWH1fEqLcM+RCc7v1AZJLCm+
dXF1p9Z0C39u9LPT/leYe+ozwYSd/mmP1cBApf+deE7ylLtGyrinYonU0e27
0I12CwdujPue5p76/LZ/cvZ3yj/tu46pXNDGcJdnumeaxA+nakkyL1dTSt2F
buyRV+DArzB3RRMg95nJPrqR/7f5cBvDFTw/dUYwrZZ050W+J2cf7faeOPCr
zZ3kApeTrGy4nf8TTnuKk7v6OXnnbmc90o4lYmcq/hvv5RHcuJ0Dvxr/V+xx
z3bduaTw7VQ8NLCuzcnJu0ipNW3UI6uWiqVGDiL1UeM9FNJu58CvzP9Xzd0v
5A5hCt92xkObr6Y4+dvP7rtdqTVtj6V831hfJZZSOthkrngjB374v96U+3Ju
bK/2yGrcCfy/wQPd+RKcd/M4WVN3vm3tKLW+5JyCzEXZj9Pw4VQ/O8e9fe6r
1qj9ledP3WdQ1iLFA10/K9qv28/KBqVGINybjNXWylJnE4om4/KHCfuC4EO7
n5323z53t6X0nMm1rYKZqRyn+Fnh5yv7U3VEinu7Md/QBlc+SZ1tkTr3FfBh
Zz87x7197quWivPJOj+Z+05dIvW5/R6HqwsRnZ/kOGWtV2ORcwpSP07YF+4e
2dnPTvtvn7vbGuehq/6n+WEnNjbexXMxbaU5pGKD5FMlTlJ3IxUdhpzhpmql
09igxsDOfnaOe/vcVy11XnaLnrmau4JFZE0V7CW8ndQshGMT/k/qI6WfU3th
ZVuqVpqGDzv72Wn/7XN3W+o89Jb5rubY0Njd9+kU3q74k2Bs416omyuncUVy
HjT5XIz45FQ/O8e9fe6rRvDqRj7ztk24q0P0B3deq3VRdCT3fMf1J+HY0/ZC
Shs8vT/UtdvZz077b597w1dEF5ow3wl3dVwNx8V8ci5P8gvJO2SNJuwFUjdN
1kiVOD/Vz85xb587sZPs0wnznXBXZ2WPm1OUebnnjw0fuvak6s2de4HodZM5
0tt2Owd++P//5yuyTyfwGXJm/baf1PlsKk4IDrtYmtI3Unl2Zy5QdDlyRjPh
jMNtt3Pgh//rrcGHd9qcuoPdPp914yS1Lql84drp5tnG+rrNzQWrdZ9wxkHm
fiMHfvi/3oh+e4rPNO5guzVO+/4huTPTeJdhhXXKWCubiZ8n5AJ33Am6lttu
58AP///fRvTbNgcmNrtccVqNQ/h84z0vZb5KDm3clTpVF7jjTrC5EYc7+9lp
/+1zd+PWrU931rANDXk11rQaJ/X+F8FbEuek/iL1SwNXU9xjwhkHicMJ/ewc
9/a5N84N27FKtGjyvtKEGieVZxVsb+c1F/9Xf+valopVguEu95hWF9zOgV+Z
/6c4M6nHGzYrWoe7ByfUOK5P3H7Ie14pm137yXtq5LygkTvc/qfVBbdz4Ffg
/ynOTM4T3VhN1c5kj6fmsnMdFXt2co8Ujin52sX/lFYzuf9GHN7OgV+B/6c4
s3u/kdzNIDX127mTfDSNgxGfKPbs1HYmaIaNelaJjUb/E84LbuHAjXGnzb2B
q0RXcTUTVxdd+XClYxMc2Ilj7bqpwT3IWG3NUIkZcr5M6mu3f7efRi64hQM3
xp029wauEr7h2kn2suI35Zn23Xjin1Td5GIIiT1lrFOaIal/yXo13o9weU4j
F0zjwDvHPTX3VH5vaAUpntyuYd16x/VJSgNp6D/ktzhSuKo808h9rg8VzVPx
ucJPlBzk8pxGrTqNA5O9fwv/J3FOcIlw3Wm6ioJpq/2ozCWlNTXqrAbmpzSf
hmZI4qeROwhup/SBhub28P89cz/FIRU7Xc7pxudOfdjFeTePp94jS+Gw2z+J
mdT9McXmti63en4nj3Vjm8SSu0eUcR/+3+PVhEOu9q/CdYnmuRqXxCrZy4T/
r9ba1RbceHDzb8q3q7Hc+boaSwPrUuMq/D/VXDtJLLlx5cZMwz+Ncdtzd3k1
4ZBvv1fympt3yN829GGSWwn/J3ju7nHFzpSu6HKDFLdJYV1bm2pgVyN+FB8+
/L83d3JeNuEOgJsTlXc52/URwU+3rlH2b0NzXsVnCh8aNWnqvlCDR5H828D8
VG4lNU4KQ9J43xo3ZXNq77hrSnKBi8PK366eadRHypo2+D/BdhI/Cp6k9ENS
k6buC7m5knyv5F+CDyk8V7ArlUdSuJfA+OS4bZvJ3iF7vKGpNtaI4EOq9if8
P+VnJX529uNibCq3rvadchaj8KhUzJA96/IcZU2VPUXyCME90s/OcRv83907
ZI+TeGvUFIp/duoMymdSU6f8nLKB+JDwQze3utju4nC7xnH3INH6iP+JLpra
1wQ3GuO2bU7V8gRbUrix86whpTO4fbo6VQqfSV2f4nUNfVjRTxQu1DiLafO0
VI5O5SNlXRq6B+ln57htm4meQPgnwR83thU/KPuO6AwNnZngj5tD3Xu2hNc1
9OFTejLZOw2eluLhSlw1/Om2h///f/2nMJyM5eJ8qi5w96brW3d9U2fBrj+V
va/kO3JfKFVHkOdJP2QfNcZy57UTMydw3WnjnvJJSrNt3K9L5SnFP6l9RDQf
wv8b+VqxU+nf9f/Kt9P4f+rso5E3V/68kSdP6L8x7imfuJq28kxK92icLRJu
rOwjoiO5WOfiD8nX7ebWI+6+aPN/wudTe5/wnxt58oT+G+O2bU7pFas8Qrjl
Kp6JJpDSspR91NaRyBxXvnLtTLWGBu76k/RD7u0red/1286zhjb+TO6/Me4p
m9t3FF1uqfDzlf3K3iTYrtij7FN3XVz8cesR4ge3NTRw15/tPZ7S00h9d8rP
p9blVP+NcXfyfwUf3DuKKa0ydUaZ0p/JuUNKj3WxQsF2Zb1IvLnYdcs98NSd
YWXvK3WZy3NOnfk+/H+mzUSrJ9oO6T/ln5RG5OJzG1sIhjfO0E9pEQ3+nzrr
cbU+sr6ncKa9Lqf6b4x7ymY3NggWuTVp44wypf+n8DmFLeQckNQvDX/ujGfS
f+oMxbU5pTFOxplp/TfGvSUvpzRJt+4g70Iq+4XsHddOBT/bfk6dgzf8OZn/
u3HVtrmhMU7AmVv6b4x7S15OaeCujp3CfAXTVv5JnS/vPGsgdq5sc3MEibd2
PLutkQfJ+Q7RGCfjzLT+G+PemJeJHp7iSIptO89nG7aRswbi84b+T+KtHc9k
XiQPujaTtbgRZyb33xh3cl4mZ5dKfBL7U/jZwKudZw2pe7Yp/Z+sSzueydql
zlMUm0m8pWI41W5Z953j3piX21q0G+dKP6nz2ZQ+5q7F6qwhdS6c0v9JXjsV
z8rapfypxEAj3m7Emcn9N8adnJcberVbL7v9uO+6prhT+6yB+LOh/5O8NoEH
ts9TlHh2443E82Scmdx/Y9wb8zLhGCl9vmHDao7t/OjGA/GnEgMEu8i8JsRz
Sic8FcMK5t+CM5P7b4w7OS+TeFvti/b5Zuo3c9w1atQaxJ+ktiKfT8X5zrOe
Bp6TfbSqfydg/sP/59jsxjyJN2Ufpc43ye8C7axrXN+u/KysaYN/un54r/y/
ob0oMbwaaxqekHWZ3H9j3Gn8n3BOpX8lj5Dfo1Bs2FnXpM443N9cIvq/m4uJ
D9vxnOL/De3FjeHJeELWZXL/jXGn5Ws3F7gt9X5xKs7bdc1qrAYnV8Zy12jl
B+X7CVpEiv+79aMy38Zvm0zDE7Iuk/tvjPte83UDu4ht5MxXsUGZS0MTVsZV
/OliHdGLTsWtkhPdfsjcFZ7z4MnZ/hvjvlq+JtjV6NPlxm5L6SEKnyS6dEMz
afDbdryl4v/U3F8NT0713xj3veZrcqbWOJN1NXm3KfYTTditNYj+o8xR0UAa
/LYdb0SfdzXMRnuveHKq/8a4r5avU+enbp+Ne4zKWC6ep37bwc1xhP9Pvn9C
7rOR+N9ZY7rruNP/7rrc0n9j3PearxWsI75ytWvCD9/aQO6BKHd4XB2e2ObG
YUMzacetkguUGCP1185c8F7x5FT/jXFfLV83fOU+Q+4xuprSCsMVm5X73orN
ri6xUzNpN8W3qXtKbg3byAXT/N/Gk1P9N8Z9tXx96lxM0eTJXib1TkPzJ3XK
aqyGZnIqnt17XyufKDbsrAtu8f/D/18nX0+Yb4qvtu+pNt5dVeqUnZrJjc3F
8J33ECbsL6U9/H+Ozadiaed8J9wjTfF/cg9TGWv1TEMzuaURDN95D+HU/lLa
w//n2HwqlnbOd8I90lP8P3X/sKGZ3NIIVru1GDlzObW/SHv4/xybV+1G/u9i
tWJPW1d3fd648/M0PX7cdVHu9KZ+a6i9v0h7+P8cm902mf+nMFnROlK6eoP/
t7Xl99oaeVzRytzfU1LuALwanpzqvzHuq+Xr1O+2uXd1lLv3ynxdXT3FByZo
y7c3co9XWSPlN/FIDD/8f3//jXFfLV+T+RIcS/nZ7afBB1I686vlgoaGn/od
j9Q90lfDk1P9N8Z9tXx9St9o/5ZFgw+4mkNbW76lEY698q2bF8jveKy+J+dZ
p9rD/+fY7Lad/L+hb9zI/wmHJNry7bkgldcUzG/8jkfjPOu94smp/hvjvlq+
3qlvNPzc4P/KWO64RFu+JRek6kQSb26OSOn/t2D+w//n2Oy2Nv9v6Burv72R
/6fu869a4/yx3dpn3+69TVcjcu25UedXfHtj/41xX43/N/QNt8/GWjfGbWBv
6sxxZy4g+p6bT5V7m0oMTHivZEKbgCfT5nVLHt+Zr1O46tYIjbVu3HEl2Ov2
0zh/b/jBXXf3zCjFPSa8VzKhPfx/js2rtjNfu/qGkiPamkmD/zfuhBMMb2ss
xA8KJqfOvkneb3CGGzH/4f9zbHZbOzelzubcPttr3f5NuVN3pdr69gQ7Xb3F
5f/u37rnZZPbw//n2Lxq7dyUOptr9E/Wq6E/t/HQ1VJSGgupdxp2pvSWFP9X
fi9iGlc8hScP/++1VG4iuNfG1cZap7CxgYfKWitnoClt3F2LlJ2rdXHXOsX/
lblMw4dTeHKq/8a475X/NzTkBuck+KP4zcXGBh4q4ypaupun3DhXNEBiJ8mJ
7lqQPLKy/9/XOKYm
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztmL/qZVUShRsF8QkUJjMydyIZ6G4j8zY1acGJhAENxMxH8jHmFYZ5C8Fc
BRMDwcOub62vzr2Bshvu75zaVetfnY+++s+bf7/z4sWL797/7X9v3n7/2bff
vv3hi/d+/8fXb7/55yffvPvb8cc//vv9/POnH796/dPnLz/45X8v//WPV69e
///Dl1+++e+fzn/1m6t/e/L7v/O3dP1X33XytyfvutrDqZ5P1UBgY6qGKeyd
YHVqjifzIjCQnDv9nCQfp9678Uzfke5b0u+eZ27utPc9z86zWW/vhD1Cz6ee
T+wRU3gz4NB8tvXkOS/n2bAbEs+xaQW9QyVrOOmz+bvTxrPNK5/7nfPc4j79
nYf4FpfEvwHzBk9s4dzATQOuklnC5ll3Ohv0x/BNgNaK1t+a+9nKHjbctvyL
/n3SF7bM6644aeX/k7tf/c3GM6GNU79P8teA2+1eM9Vz+m8N2cnQc0M9SV6b
6zT4O+GPtLYbtDfpm+b72njxyJ67HSfJM60zZs0xnKc8gtbeKdwSGmX41tHi
Bd23O/HdhpOkLxC6NLXDbuEaoQ8tDGzpYeu+Ns1J5kCbltJzp3FC939KT7Zw
2YDJ5DOTc2z10DC7qZ5P7d20Nto815DTDOftPbFlA4O/J7PW3/nbVpY2ZPiN
/mLQgUfzenM/DT15ZoNZbBv2+ruebTi0PYfoyRavt+mkjfutbxq22pL4pPd6
Ay+Sc2nh0Pwt5a74MWhC0hfontj0bWNOIzTK4FMbOU5ocgtXRB+24MewuyW1
MdmfKa+xaYs5X01lCYPGGjhuy0it/G/Q5+RziN2NxnPyOQbMtHKvIV+1NMGW
o6Y4a9gFTp7fwnkrDxN4pne3VvZLeje95z5aZmtpgkGTDdnDoI0GDhIaa+5h
MuO1cJ7UPRu/Hk2fW7vSSe56NG1seRPdk5NZmHlEaKChTnPm2V4//d5nf/Zq
Y0uHDf0084h+b9I76D1iiju2/tv0+dkfzzeB1s6b9KAt/j61exJ/m8z5tucT
HLH136DPd+2PQbtsvnNSZwsb9LsMMyK4T/eE1p879X/q+SccTHLElmnpXhl8
c6rOFjaSWdSQbaZ2h9bdDf009z+ZQwzaZZs13fOWb7aeM4UN2t+TfGnhipip
DfMbdzqDL5u10TAXQ/5v/S2hzwYMtHL7CR7M/CV0bKo/Bv2k9+gWH7fvhq28
bTsT3J/i3RSuaE3bOK/kLGw9IfST9gvag1qeQutzK2/bzga+b3mXIbcnZ7RF
E5KaSfsLnbtsWYJ4jll7t+RDWkPM+a2lUa272zJGUudpLbL1jdjNDRiz8aLV
z+2zM9ds1ihD9khq4BZcXfUX21zM+13rjsn+JHccQ+411Nz6Djbl47bvQrQG
GrhAf+tI4pbGm4Gbtv4Q2Evyl36XQXPovXuL59IaTmCG8Nkt51aGSfLCoPM2
TrUyT/JehOZs7GeS70nuGDBm4CaNNzPXbLnCVif9rlYOac3x6kyT/dyihy1t
TO59rXxI88hwd3OuaNVp4CDBL4MeGrhM9NCASfperfma87bBZwmcb9QWgrMG
7iTrt3Gh9R2D9ospLZ3KRfTzifuecMGQSabqITzCrC2GXSnpIzZtMdRm7mfS
15KYN+xrhrNBA080ysDfpK9N6bkBP0ltSfb8Tv1Maqnh+4Ah/5s1Lbk3mflO
4Jz2lJM+2HbnJC+IOm39TGLMkKPM+b/loWb/avHd9vwTbzJktha/DHUa+jk1
69aee1XbbdoylStofU7mahvOkxgz99aWDei8bdaKjbmO1jpaxzZy0NATmyac
+C+Ri+hskPQgwr8eIT+07k7MzpA56Z7YONjCP63hW3i05WzO7Sc12/pj83db
1jXoZGsHNOxidB6geW3waPOZ1gdzbn/mh7wHEflwSifNOCS09654Ns/OUCfB
8Za/T939EfJD69tIcl70c1ocTOJ/C57N+rklS2w8ExnSdpctWN2Yt81afYIT
Qz8NNSTr35IlNs4l+Y3RpieGb1Ot/tt01YYT4m8NeLb1mf4ecvVvzX60kYM0
L+gaCKwaMGDbU7Zgj6hhu/4Y+kzfZcv3vRYH6exN9/9OeTiJq6RemWdN4Nym
P4Y+G/Bs0AcbB7dkA8PuYOZjMg9M6Wdy1jY8G85mTUji506ZYcojDLu/bXcw
538aM1tmTXB2+znJKbq2qbOB70kNsWnXxixhyP/JbyCG/tt4ZD7bat7IEUMG
bvX2mSXuMVPaB4m52Hr+rNnpOy3da/XBgDfD2eB3tpkS30DuunfTNTxCza0c
3tKZZB9snm7QeUMNhpkm85tB85M9v/q3j1Bz0qdaumfog8HTt2isobeG9yZz
NeFfW/D5POd5SmA76RfmDLBF64jfmzOGoQaDbz59waPzySzRqnnKLwwaa+Cd
YYdtYT6JGXPOMTz/efbwdIqP278PGDBM7PIGPNvua8Ch4V623z/a2dAfw/fA
5PcBQ7ZJ8siQ01r3PZn7FA5bPL3qKS1+GXQ4iX8DfmzfdpLfB5IatcWnWt8l
pu67RU9OMJOsp9XbLXNs5Zyr+ElmjKRntfKJQXMIz6W/t7Ryi2FGttxl0Ort
/k7rzwn+bb0lPGsLNloYS/bwTjuIoWaDztD5wexrhvxguAuRM5N6nsSGLUub
tX1L3+hZb9eWJDZof7dl5lb+Md+X5qYhk5z4po2/5hpsO4shtxjmYjvb9pHW
u1r4b3GTziRbvnUY+Nuqgf7uYcstG3namrWBg8msTuO/xc0kR05+f1efJfCQ
nJEt/0/h36Bdtt7aPJT4veFbB/E9IdnbE64RmLHxl/BuWx6g879hFyB4auit
IQdO6dvUTmruLY3nZP2G3Y3mL62HSf0kMJPM3lfvaOMmzS86B5p7buutTWNb
udrWzxPNTPqC2Ytbz7G918ApG5ZsWTq5+yfrJPadpCcadlvDfQ2eYuD71DcB
Quu2cCqJJXNWaXnNVTwn75Xc02l/NPSt5V+GmW7xeroGc/+JjGHLKgY+EjOa
yv+Gu7TuTvettTu0NCr5fEO2tHnEFp814NDwe/o5BjwkvamF1an7Js8EJonn
t/KhzVvvpEVJHBJ8TL6rhZ8Tnm7JA+Yakjq/ce+m/SiZl6b6ZtMiW4bZcqb5
e4IHQjPNvmb7241cMOC55R1TPNoyu2TesPXK0IeNWpHMCfS7DNnGtislczKR
Sa7iytxDgoMtHG7ZF5LzMtQ29a6WZtp0Prmzb8ez4Zz0i6vPTOZqc7Z/BA9t
ZVGDL0/xztDDpM9uwTOtOUkNoXeTE2/aso+YNdmmpa2/pbXLMJekp5xgw+BN
W7hp6LnhTPfWfJeNHmrGyZZckZyLYdegfceQK2w7mo37Ux5n2NdanEp6qBkn
Bn+xzWXLvmb2RwO2k768vZ90zbbvBoSHbucdoT8n86XnYpujgadJ7U3qBu2t
rXcZ8GPIzLb+2Hhn9q8WVm0YNtw9ucts7Lltj07qqoGD5n3NwDuzf22vzeyb
yf06qaWtnid1xpDl6D3OpqtT+GnxLnkvm+5t9FNbjjLUbPBEWk/MeSnpgzQH
k/tskne0FiXnkvTWlq6ac9RUhmxlv5OeP0LGaGWqZLax9WqKd3S2Sc4lmaO2
5LFkjmrttldraGlmS7cN+JzKwC3dS3poMgsROmbLb60sYdAWA/dpj6Y9ooVn
wxxpPbHVmey/zXOTtdky0kmWoHcHW45q6UbyOUk803OZymwGvdpSZ7J+IlPZ
cjLdT4NWGDzajBn6XoZZnGSGFp63eHRLV82Yp3eZqffa+rllji0umP3LhmcD
rloY2FinGfN0/VN3afW/pbf0HG09pLlJYL6FZ/qZhrx6soO36rT1v6VFhjON
t6Q+E7mx1cOkHp7oOZ0hk7xO7shE31r+QmO7tcclazboPM27Ezy3MGCbIzHr
LX1r1Xbifa3sneS+QaOSOtDyxFYGsJ0Nexn9fEMNxPOT+tbqs/mO23ma1Nuk
nhgygO28ZZekdy4D14h+Tulba140fmw7mk1vDfs1jR8659h03rxL2vqW1Nst
+mbeDVt6S2idQXtpPSEy0kmfkzgx5A2bf9nqadVpwMmW3ZDQgZY+0Hrb6r+B
U8me0xhrzdqmbwadpHPLiZZOZWnDbpice1KTT+5FzGJj/5PPMdydvq9hnzVo
UWuvJDTTxjtab1v3te0OU95h6H8rhxt2K3q+Zs81cMSgJ63eJvHf6nnrjsls
Y9AiG84Ndzc8n95nDc9Jah2tJ4ZvDie/b/U8yUHD7mDL6id3N+fwLRrVwiTt
WWZvTb6X+FsaY62eJ7lA57RkT7Zkb4PmmDWK7skj5/+p907VacjGrTrNebjl
oRv3rCSXW3+b5NHUvWy+Y8iHrToJvNG/J3iRxIBtvgYdpvtjy+GG3hpwkvSd
lrcSumfAKjEXG0cIP9rouTYtorm5BavErAmcGHKabXYtPzXUaXjvRo7Tnrtx
NzScDRwx5HaDnhv2Grqe1i5Dz9GgPwaOb9RAm+9s4XILD0RuT+o53UPb7wlf
Jp5DfPuiedriuC2rGHTJUEOL+7asmMS8wZcNv2/N1MAXsx5O7VYG/dnoUy1t
JLhv8LgkTqbua+OF+Uz334z/1u5A6xtdp+H3j8DxEy8z7IM0v1oadaezGUsE
5g33JfTNMAvi91fr2cjxqZ2x5Yk2b0ruuQZuGnS+ldsJDBMaTnxzeGLbo8kE
Bw060OLpFEemajDMzsZfYj+l9ZzYHTbq1UZs2zDc8g6DDiT90VCbbRYGLU3W
tkWTzfltC7YNc5nqIbH3Jb932fwxmS0Ns2j5rCEHtvyrxYstNZv3heS9tnif
jZtJrTb0isYz8bdmPCT5a8uNtprv5Okb+2nQny3+aKtnS20tPBi0YmNuNGR4
s6cT/muYe8vjbP5o4+OW2lp4aHHQthPZeGTm/p2+D5j1x/xe2++31NbCg81z
p/pMe5ZhXi2MbbzvVB+S+kNwodXDJL/uyv0TPLRwu92nDPOawvMj3HcKh1O7
zNRdWn+7BUsG7TXcPYlV2n8N+cowL6I/rUxouO9U9rP1/K4a29qbDOfW7kDr
fKse87wM901mQsN9t3ucAbcElpJ7kwFLSc+l50Jzx7DPJvUq+ZypnGy773ZP
N2S8LXplyzknzzd46J3OLe0y3N2sk4bsZPD0qT7b9K3lj0k8ELMzZH6DRt3p
vhu5ZssYrXnZZnfy++TsHiFHJfXcwOstvW3dt6WTW76TEPmt9Z3hTjvUSZ1m
nLd6cvX8K8w1gc0=
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztnbHKb0cVxT8iyEWtrEKsUvgCCgGb+5HKQLrYpbuCNgYSIiimCCm09HVS
ps4zxGfwHUxA4U9kLrOz9tr7t8+ZYsLk49zzn9mz9tprZvbMefv3H3/wxzee
np7+/OLb/3zw6q/vfvrpq7/97sff/c8fXn3061999KNvq1/8t3xXf/Gbf7x8
9/3PXv7iZ28+//xfL54/efu95598/cuXyt+jzzja8Ph3pZ1K+6N1pV+O9+/0
N2pzpV9Z+Km0W1a/3H7n8HcHxhyYzMKS2ybucamsv/PWVy9/++Gfnj/8+u9t
bXC3//GZVT2rDY737/wWwbZku2VhZuI4OsbFMXY0O0y0+U793998/vzlV+88
//MvP31e1Svb42j/Y/0xzu78PdoGx/t3fivr/Ypto/iptFsWZiaOY1bbsnzt
qlzUxWnKuDz+7tPT0/P/yuPfFQx0tf+xOPx95xnl/ZXPK7ZdlRV+Ku3mxgx5
HB2Yf6xH7baDgYlc5KhHfW2nKDF99byjnUr7d/6eFSOi40jA1U7borZ16D3F
bm7MEMYuyweVGKE8o+heAhdVch2BE+5Q34kRO2VH53ThiqAnV3pPsVtXvwjj
6O5Llt12xnql/wn8MCWmX4mv3MUxdjt7WF242mmDw55Z+4a0ftHqjr4oPLDi
/Kj+vwMXdeGNzFdTND851kftkGVPZc3W0R4CThxFsa0Dz1n7MgR+IMfxq/IV
ue9Z/FC5h6WsY0ftGeV/d3sqdTKtrvQlimelPdG1oDsUmu690p47QfO7Y6ti
h6x8vx3+31lvzNK3Dp1MK8parsOnovsyjhzUifUpMaUb7519d+wXd2l+Zf1c
4f9VG6LtyeoXwfeVurKWm6X5o+O42gtQclCnl7vx1Z01fxa2o3ZwP+/I2Xaf
I5io+Qk+Ff230blh1u9OqU/ERrcfVPTdzQ9Zay9RO2Q9r6z/R8cx6xzB9JyH
ypil8MBO/ueV+IfAXWS+muIXhL4obYuuzSpruQ79v5M3GD1HEM0z6eYDCiaj
eys75wEVm5P5pyuWTW8/re9dawLRs5Y7dsi6ayvK1VH9v8MhO3p+J0as8kzI
3ELQ/NG50k4cP3MBncfIfDXFLwg+nmUH5T3K2Xz3nS2P41V5P8xETqjE0qrN
UT0TtTmBf7owRmhzl7+Q4wiNH3bes6Ofd3w8a/0/6uNZv0XjFoLmX9nTsZ4/
hX+67E/mK8L5JrfNaXUl7512/ndKncYDXVhy379B5p8uXBHa2eUv5DhSWVZ9
ycpjibbBrf8JZaK26cISjYe7saOOxUS+qjzf5LAzua6szTrG6276f4q2qcQS
jYcnYo+GDYK/TNdXlfzgwP9Oe+6g/93cQtD8Cpay7t+g8Q/BxyfyVRYGjubP
9S/HeN1Z/9O0TSWWVvWzL6Djh9CeLn+pxDy5ZPmXYy6g8H+3XSncQtD8WVwd
7S+Zfwj+PpGvsvzlaP4f5i/uuUDl+d/pdRom3VjKuoeEwD+nfo36xBga9Zfo
81H8V57/nV4qtQ0BS4oP0ni4Gzvft0l3W6YWApYcMUu5t8fh1wr/n/pcLO08
r2iJLr4ljNep+zBPLjv+Er23JzoX2PHrVZuP/ucUB5ai3xdwrzVdaS5w/MKH
+Sl1N/53zm8q9yEf/c+pd90BFeVVGg93YfX4SK4Nu2NRZsyixcTV+4/+vwaW
ondA7RT3uqW7Xjle3TiaVAjYcMQsx508ip1P/g+/XnkHlJI/kLVu6S6V8/Er
cRoB8+Sy4yMK/h12Pvk/zKKMV1T3Op53xBp33TFexy9ybUiud+Vgu+189D8f
Szvj7s4LmsiTlfNxAq7I9StpfprWUrB69D8TS+61mqz8gR3s0bRE1ngdv8i1
Ia3elYNdaeej/zlYcusHJS8oir3p+wJR3yRgjFa/kuavzMF22/nofw6WonOB
qH5Q8oIIe9CVcwH3nOIOhTCmWVyqvMehtRx2Pvqfg6Wssx4ETo5itZKjuvY+
7lC/kuaP4tOttbLsrPB/91jRS6XmpHHylPMCjvl4N+7omCfXyTnYbjsf/V+P
JcceEIGTyecFsuLmVTnwaP7/x3CX1qrcLz76vwZL7j2gLk52cAiBoxw5ulcq
hLhTibcoZhStVckVR/8zuYvgm9H5r6OdBDtUxsEp9Stp/h0dXqm13Fyh8H/3
GFKKY1wI94cQOIRgh2h7uvFIwTy5TsjBJnPF0f8c7opiY4qu29FOBDt08QC5
fiXNX5mD7eZwxUeO/q/HkgMbEzW/+3kHBu7mF4S4Q8Bb5Zq8mysU/r9zfWJe
PYEzHf26EkeR61fS/JX4qeTwaBsU/u8e2ytgScHGxPNKU+5RyfLZbsxWYJ5c
78IPIQ9E0ahH/9dwV7QNlXe1uTmEfI9KFk4IuD2a/4fh7Q5zgaP/67lLmaM5
5n1T+NB9j4obM91YVts/pU7Q3o+F0J6VLlX4/w71yrNIWRrMnaufxSE776m8
R8XhmxN950qan6a9u9pzvv/Vi6Xo+6fXp9yjMhE/XW0m12k52KvStbcbteGd
9f+Us0i0omiPKM6jz1diuNL33ZgnFwVvBN52t2dnTBX+7x7/SVgi+Hglh2Rh
3r23XomlyjbcAZO0HOxooemBO+v/6WeRyByiYN6xt07QcgSfmojJqP27tHdX
TFHseTf978YSIa51cQjhHpWuuQDZ9wmYcePNnYPtGDuaHriD/r/qWaQuDiHc
oxL1UwIPVPrXREzu4K3rexPT5wJ30/8OLJHPIrk5RHm+8ixb5VyA5vsEzFTi
jfB+Zby69PYd9P/dziJVcoibc5SYvvPOLGzQfP9Kmr8yRhPGzs0bCv93Y6R6
rCeeRXJzCOEeFdp5AYLvEzDjxhv5/WQ9sGOTK+n/O59FcsTNKWtfigZQMJ9l
f6UNV9L87hzsO+8LKPzfjRfXWJO5pStu0nC743dd5wUq41rl79LwRnvejf/K
fZDp+v+cRcqNm2QttIrvXecF3HFtB/PdOHLhjfY8Af9Z9p+u/6O2usNZJCVu
uttZOe6VmoEwjlPqXTnY57zA68diov4/Z5Fy+XPKuijtvEDl2E0sO3hz5GCf
8wKvH4uJ+j+Lu656FskRmwha6A6a4ar1rhxsJWebhn8Hb0zU/+csUm7cVDit
EreOuJy1dufUO1NLFn6iOdhKzjYZ/1ntUfh/CpYqbevmlkrdS1sXpWmGU6/R
QoTzvwT8u2PKFP1/ziLlxs0p66KVa3HR52kaiVAULdTlCzv1K+0LKPxPw9I5
i9SrY2k6waEZCHp1St2dg+3AgxIvps8FyPqfZtuo/clnkRxxuUsnODRDVO/R
7ECwuVvbZLUtGi8c+K+cCyj8T8MSwbYrnuk6L+Bet6xcFyVohp330+zQZXPF
Dg5fdmt+97grXLrSnwr/T8FSpUbt4q6dNky8R4WgGRzj67ZDZcnCg2Mu4OCf
Svxn2WSnbQT9P9G2isaIYnXV/p34nhVryPkztPmOG2+EOiHnISv3g9DfLJso
49il/6fYNktjKNyyWl/K0kWVz5M1Q/T9hPMd7uLGQ9SGWbkfWev8jnF3rHcp
/D8FSw7bRu2cxS079dXYRfeg3c9P0QyOdYnpc4EuPER5IOs9ZPxn2aRL/0+x
bZadHVpxNV6rM4/T71Fxawbl+Sx+o5UdreLOeVDWdqLv6eqvoy87Y1qp/6fY
tlLzRzkkS8dOvEeFMH9Z1Wlnvbu0Stb7s9Z2ou/p6q+jLzT9T7ZtpR85eGAn
1uzMER7fQ7hHxaEZHM9nYVLRV1nF3U6Hf1W+v9KejjYr/D8RSzQ/ypq/RHOB
umK6Evuy2uye7yiYpOmWrnyqaMlaD9l5f5c9lfWuaNsc+p+Wm9flR47no7lA
WfFRsUnlPTCV90Y6MFmlU143pu58qiwsVd794ranu80K/5OxNPEskuP5Hb6q
zH3K8qnK+YIjRu/0vUu3VOZTuf3L4ftu+zi4KLomkKX/abl5lT7VtUe50v9Z
OHTbpFL/EGI6gR8IWsWtPdwYU+zjblvl+V8ClpTnHX5E3nOM4jBL81fO0SrX
q3eep/FDl1ZxxKlKPaDYh6BVFP6nYck9Fg4tt6pn5Vi62+n4LdpcoItvu/ih
S6tkxd9KPUC449GhVaL6vwtLhPMCWX6alWPpbqfjtyrb5l6vjmp+Aj90aZUs
LE3UA45Yn9WeHf7f2VNwY2nKWSSCNu6aB61+q2uOlhWP3Bjr4oed9yhapWu/
mNCeqP3dbVP4vwtLU84iVXKRo51Z2CbM0XZ8X1mvzhq7Ln4gaJWoHSbqAce6
n6Ntyv7vlNy8Sl9wcBHBZ2ljGq077o2MYsy9b0jWKu794i49kGX/yrY59L+C
pSw7R3kgq/1Ru2VpY7fPZv3brDGtxInyHsI9aTStQvtmt/teHeX5yr31yvuf
K/e7HdxCmLtV+mxU3zrG1LEPUmm3LJvs8MN0reLgHIceULilS0sr/O+uu8fO
7b8KhzjijttnyWe6CZqwi6MUX3ZwlBvnlXpA4RbHeleWLur6/mPlfreDuwjz
3EqfVfRq5fOOuWE07ldy1M43gMhahRxPFf1Au6dI4f/KetbYVe6HdmmkSp9d
vd8xppX+W5njl8VRq/GK5kh3aZXKOOLeXybEOIXruvS/g9PcXOTor6IxCPto
jrwXd36I22cdc9uoL69ypCdyuDuedsUXt+Zc2YSm/93fdKbt60Wx3aUrou0h
3yfg0IRZ/qhofvc6KmE9x91H97h3zQV2MNOl/x1xLYuLaHMBgs8qnLOqT/l+
gdIGZV7j9hEyhxP6WBlfsuzjuP+TYMOsnOcuriPU3fF65z2V9wm4fTbqj8qd
ru5YQ+BwQh+Vse7yWcUXKvV/VlyL5jw72unAmKMQ8vPde/FdPkvjClrOiQOT
XX10xxfFPtG5ZJf+d+znTvx+JaGu2J9wNtmxbhYtBK6o5G23L9D6SPBTxV92
8OnW/w4eVnKeHVzn9vGs0qXDV20g78VX+mOlpqrMOclqT1cfK+N4lr/s8Ful
/ndo/sd6173QZF6i6fBVPKXtxUdLF1cQeNvBt5U4r7StUnffU+TQ/+540XUv
tNuPKotbhzt8agrPuOvk/VyaL9ByR3eKw+YK/7vx6fB9ZV55pTWKSh3uyM0g
88x0zX/mAvW2dfCnwo1Z+t/R38pxnHJegMAhK5y456oTeaaLE2i83Y397/ex
Mne00jd3uNGh/92a3zGObj8l8EYWh1Rywk6M7uKZrt8i6ORoofkC7e4UR3zf
yYfJ0v+O/mbp80qbk/UPGZ9ZMbTr3OIUTqDx9hT8k9umaKQs/U9Y54+OY6Wf
EvQPTfNXjqPbT6dwAoG3u3yBlh/bpT8V/s/CZ9Y6f3QcHWt9Svx18IaDQwjr
ooS9eAW3E23utufEGEpum/v8r3uN3eHLld/QdDzfxSEEnRkdR0fMnc4J7jo5
ppDzY7s0v8L/UX2raKeub/85OGEihxD0p6Mvbk013eY7hTwXIMc+QozL4v8s
3qvM58/CM/m8wJU0f9d5gavyFY0PHb5Azo8laH6F/3dsssN7jjjixvPqGcJ5
AQLfZhV3Xxz6YbrNlUKYC5BjH1kXZen/6Bq7O58/C887ObSOMaXp5Mq6oy+0
e48Jdu7iQ0dMIefH0jS/wv+O9nR9+y8ayxw4J+gKgv7siqFd7SfY3FEq5wKE
GDdFF63sVpn/4xi7Sv+lfV+AYH8CtqM4cZ8rmWLzynpWTOlaE+gqlX7nzv/J
8vfKPVPa9wUIfEvDdtbeursvBJtXliw/JawJTNRFO1h15/84/D3Lf6Pv7/q+
gGPcCfWudX4HR02xOaHuxmp33Jvkp478n8pY5t4z7fq+AC0vlIZt95m7rH4R
bE4o7v3cyjOVZF0UxapD/xPqCv9Unkfo4qWJ2I7apzLmkm1Orrvt1h336H6a
pf8JReHhSqxWrlEQ9Kc7drjP3EX7SLA5ubj3cydq10rMKPx/1br7PEK0DQov
EeyZhe2dGOr+fhnBhleqd+3ndsc9op9eSf93cYvCgVHcdu2zdGGbduZu1V+C
zcmli7fJcbwLMwr/X6nuzgNXMDDd/pXr/O73Tx8LQp22nzsxDrrH5Q7634GN
6BrR6ncJ3wsgYNsdEx3v77Y9sdB4mxDHCfNEhf+n1x2+r9x9FG0zwYYObLtj
Ytf771yfsp87MQ46xuiq+t/h+24cEnBbiW13TKSdF7hqqeQupZ2Vmoqg+Vdj
dAf9X5nPr+DQkbtIxrY7JlbGXMJYEOpurpsyFyCMRXS8rqT/Hb7vqHd9L4CA
bUc+v/t5gv1phcBjSvuvetZ+Z7yuqv/d+fwEf+kaI1o+v/t5sn4g1Lu4jjYX
IIzFnfV/FreQ/cWthabErOhdfO67+/4DReOOWg==
       "], {{0, 128}, {128, 0}}, {0.,
        1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzd17HKbmcVxPFDBAlYKAj2gpV22p9DOuvkCo6gVUCIhQREvArvxnuwSu8l
2FibQAobIYc9v1nzpkj4Evb77PWsNWvmv3/+uz9++oeP3rx586ePv/7Xp+//
/MkXX7z/8rMffvMfv3//+W9+/fkPvv7zb9/+883fP/r7v97+7B9/ffeTf//z
7W9//Kt3//nqL+9++dNfvP1///9Dn/kuz//v///QZ1J/P7nXh9aZev5Jb1O9
evKulK4+VEvN+nUNqZpTu9/cx5SW9G6mdJvawYWahVaF56T8/CofmzmV8kbh
acL3RD2iJ83MSp2f6q3YQe1vzV1u1tD0zNRdBG802aPppVfs0WQkPRfdnwX2
E7vfzMcrnmmybpN/UnNv6l/U1mSMZj0LOXX1HSE8atlPmnt3tftX+kzNQues
1m2TH1J81WRFUb/wN5FTqawUHCVyZ4E5RW3NvglP07wq6rziZP0urQE9o1Q9
KQbQeSf63NRe0zObXHfVc53FwseEHpqcrPlBs732QLGPKV1pj13rSWpHUr1t
svdCtgo+X94jzXUp/Whv1LVp1mr6bZPzhe9pBmv24YqFmmde+YDm5OYe6T5f
1a/99lXYb43xtFcIbkmx9NruiDkue6bmc5HXQv9XHijqb3LXQg2pM5u+12RU
ncWCK/TupLIg9Yz2zCf91HuhPVnrUOSOYI+mTnSdwouafW7mVOpMzclrPpNi
s7X8ambZVbZeeaNmoQXuXdPzglc3M1F7oN7TlA6bd391Tl7wPTELnV/6zCs9
pGpY4DGdHQu6fdITkWviG6e5LwssLfI31c8me19ldPNMzfnNPLpi0Stmu8qF
VA4KLYl90ZrROm9y8oK/CW3rDBIsdFVbin/WWFQzv9DnFftdnSl8ILWPuk7t
J2v+lsq4VL5cZW5qLpqlRW42WWshp5r1iH3XWtXZoefV5HDh1c27rPme4F7N
0kJXVxnaZNqUrrR+npwvOKTZz4WamzVccfWCZhYyUWip6XXaZ5rsd5XLC9wu
/PZK5zorNXuIGlL6EXdvskTKt6/0oDOoySqpHb/yBN23qzzVmZXSudhxsXdr
bCY0v+AbKT1rNnvy3qv5NvvfzO6r3Bc7JfJUeLjQZNM/m7mmWfFK500vSrFf
02cErzZnvTCjhdwX3q71rGcqdqr5zSJYK3VfkaG6Ht3nJqdd7b7ImmWdX+2O
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
Vx4o6m9y10INqTObvtdkVJ3Fgiv07qSyIPWM9swn/dR7oT1Z61DkjmCPpk50
ncKLmn1u5lTqTM3Jaz6TYrO1/Gpm2VW2XnmjZqEF7l3T84JXNzNRe6De05QO
m3d/dU5e8D0xC51f+swrPaRqWOAxnR0Lun3SE5Fr4hunuS8LLC3yN9XPJntf
ZXTzTM35zTy6YtErZrvKhVQOCi2JfdGa0TpvcvKCvwlt6wwSLHRVW4p/1lhU
M7/Q5xX7XZ0pfCC1j7pO7Sdr/pbKuFS+XGVuai6apUVuNllrIaea9Yh911rV
2aHn1eRw4dXNu6z5nuBezdJCV1cZ2mTalK60fp6cLzik2c+Fmps1XHH1gmYW
MlFoqel12mea7HeVywvcLvz2Suc6KzV7iBpS+hF3b7JEyrev9KAzqMkqqR2/
8gTdt6s81ZmV0rnYcbF3a2wmNL/gGyk9azZ78t6r+Tb738zuq9wXOyXyVHi4
0GTTP5u5plnxSudNL0qxX9NnBK82Z70wo4XcF96u9axnKnaq+c0iWCt1X5Gh
uh7d5yanXe2+yJplnV/tju6P1o/m27WsTPFGqofCw4W2hQdqjtX9XJhpkxU1
m2kmXPCZVM1a8805iqzU/U9pY5kbl5lT86TI3CuOfeL/zec1g4n8evJ8yruu
fF7sUep7RHOR5tsrdl3orainmbkiu3Um6uwWemtmUMrntVbF+cIztQ6Xa9M+
L7xCM2Gqb6+eR8LbF/JOc0VzXmI3UzpsesgVx+o+iKwUXnq1CzprFvJrwZee
1CPY48rDdW3NTEzVv+YnwktFDaI2fa/UHa98QPRZ+E/zfKF5wZZ675rsdKWN
VK5d6UF4cmouqTkusJDwTzHH5t3X9HDF/wtZ1mR7zUsLrCvyKNUr0U+tGZ3v
zf7r3RczWs5QzeHat1N3F++9YjmxyzoXtGdeMcYVh6TuKLJb13nVE8GNorZU
39b6s8a9KR9LzbeZU6l7LbCoyPpUtopzFrJSs4rICJFNTf1rTkv1J+VdTa/T
PtPMxGbWN71F747u+UIWi5kKPkxpSWtVn/kqDNDUVao/ggm1x+q9fhV+TvXq
ihX1fjVzX2SQ0E9qRk0ebj7TzM3mPmpOfuIJzRr0fNdm2sy+VBZoDxSzEzx2
lUEis3Rei3ulZid0q/lc+Ibwsav5Nj1Wv0swudCz3gXRB/2NoHv4KnUKLlrQ
QLM/TS660kzTB676vLZ3KZ1rT1vLR83S+hxxvsivpq6ad2l6SJN1NfNf+eoV
t1z1R/iMyOIFLr3aoyf5/qRO7Z/iXSmPEnVqRk3NdMG3dc1XPKx5pqnJpuek
8r05F12z9vOUtlO+rT2zySpaw022vOKH5fk2PVbsr8jWJienep6aV9NXm7pd
2AWRj1fstDAj3XPNUc356vcKXtW7vDAjvbO6hpRO9PeC0IbWcKp+0U+t/9R9
df0iv5raFnmt/TxVc9NXm7rSrHuVZSm96Xtd6f+J14neNjlN9PZqd4RHaU/T
9afeq7Uk6rzaryYzCB9I7ZruyVU2NXso2HIts650KHy1yYfit5p/tMaufFjs
tcjK5pmaW9YyXWtD3F2cr9lPZ/cVm6V252ouqV0TGk75sNBMiqm+T70S5yww
s+65mHvKo8R7U1mW8m3habrnmskFOzXnLjI9xQPNu4teiXOaXL2QL+J5vWup
notca9apaxb6bOZOk111T9Z46YrBrnZwYaeaXvfkvVd/N7NPM4/eWcHSwgf0
t0CTPZoMr2tuso3IkSYbpGYkZqd7u8Y2wq+u2DWl1SZr6V4tsEeqNn13PdPU
94LIC83SYjd1tq59LzQ9cCG/1nqemkvTA1PvTeXmAvde+YbewbXMXcgOoZOU
Jq9modlAcEXKAxfqTHmO+K3g6qZvaA95ld6usYreEa2xJmc2WaKpPZ1TVx6V
8uqF/qd8L7Wzgpf0jjd7K3xP+3CKZ3TPNUsLTtC5ecUAei5XDHnVf7G/TZ/X
30ep+y54o/B5wUU6y0ReaFZcrlnofDnfU89oT1iYi2Ak/Y3Q3FPhjeKcZf4R
cxfeK/p/5YcpnYvcb2qjyc9NPTTZOzVrzT9rHKhzdo1/hKdpz7mqoZlH2nsF
H6Z0mNL8VZ9Fb5uz0L9N5fUVNwpu0RrQ711mdc3zKTbQ9QidNBn4Sntivk0W
bepHsPEVN2qeEcyvf6vvtZxrzV6l+qM1r5lZ58jajJpMcsUMYr+a/KYZQOzR
1d6JLNa5pj1Wz0L0XzNzU/Ni70ROpTyzqTedR4KfBYdfMUxqF/ROCdZK3Vdw
vvDA5reMyNCrbEp58sIONvdI8JXORKF5vddNT9NZpvUp7rWm+StPEzzfZDnB
wFda1XnU5CKxR00fEHNv7q9gziarN/cxdfemf74iD+u9W9NYk3W15tc8tplr
qTwS+6vnovlHeJHOUJEFV57c9I0nukr9VugzdRetySutiv6ssaXQtsjiZVZ/
cl+RFyKXdaY0efiKM4Vv631pzuuKf/SZ4l1Paljj86s6m9wo6nzS/wVOFrvT
5BatSdFD4Ydil3VO6Z6LfNdsIHTbzP3U7n+X3v4XzC4srA==
       "], {{0, 128}, {128, 
       0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztmDGuXcUSRS2QECNApOREENsWEjnCjMBIEFiWkEyAnMEImAEzYAJEMBDG
ArZE4PA1Xbt6764V/K+Fdd6551RXrV33fvLtD8++f+/Ro0c/fvjm/549/+mL
V6+ev/7mg7f/8d3zl59/9vL9N/jzf/97y39/+cuTF1999PTFb58+/vPXv558
/Prrp7//8c/jd/99h9+950P4Ic9z6m937rP67qv32bleUbedz1Lcc/U+Vfev
6oGqd+k8I8VnqXvp1KxVeWznPgrnV9Wqk9XnUvW+bj5R/7sidxTvW7XzdHKV
Kzqdr+jJTnep9xDF3qt4NnU/qB2oyOWq+nS6onP3UDiqM/fdWNHPnTtn5yw7
uKvq2dT527kPq59z59zVbjy1W7rNptpvnTl7yvnqc3Rwzqn9Tf2OVbuKYh9z
qOfO3qLYAxUOP7X/n8pZ9S7hUPNTZ+e813X2g5uvqp5Bsf907r2d9VTPvttu
X5VZztdX9UkKd/Z5587f2Q+dGefwLoprOve3zuxT7EUOzq+a8VP+Jwtqd+CU
va5q76rqE4WjTr1L5/t27gyKrOzMTQf/V2W92mMTskDR/w6zrMidU95T7Mmn
drZTGdeZOwo3qut2ardU9J66H27KAuddotMhbt5TZ1BV/RXnqNiH1T1TlSNV
Z+E8v51OIAt6Zrwzj9Se3JnTU1mg3qMUXlLMbOffVu0JVT3m4H+H3cyZHbKg
qv7O/u/cdTt3j6pda+dM1fuqG1ftElWf67a/VdVKXU83dsgCh53h1P6v2IE7
na/4jtO5SyRyym7cOden9kmHfrg1C9L977APq/uh8x2rZjNxfhWuU3jAzRud
+4ZDn5AFnufbuYec6kmcf9b/nXmxsw87zHj6rDn03k1nqjjfCTsJzvfM1qoc
Ufg83Ru39hhZsH++p3q+sycd5hrn6+ZuxwMO8+vsh5v41iyo6vNTPlT0pNs7
3jqDCj9X9Sr+x/8TsiBx/1H0JM73mZ3O3UOdX+l8ax9OzoL0/aeqJx2cz6w9
/CyqzqUqjxxmgZ704fQsSNl/FPskzvdxftWZVu02+H9mf96aBen7T9XzODz/
NFa4vSpTdmbEwdVuroA9+yd9/0nJqR3nTOOdunV+d3CbZQdXwFlZkLj/rLrC
wf84f9+9nfdXPI+Dw/G/J3d69ab9R+0EnH+259XXq8/RYffA/1ms8KrDPubQ
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
/A/PZPwPw/gfnsnp/v8XuqmaPg==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt3TGuHUUQBVALECIgYAfIWzAxWKwAyazASBBZQoIAkRGyDFgBAVshZiMk
YInAiaX33HWrq+edAHT4ep4/09N9q6bn+/P0m+9ffPfekydPfvzov3+9ePnT
lz/88PLnrz98/R/fvnz12bNX7//HX/7/57W/+fPZ89/++fT5s9//+vzXD54+
/+SDv7/4+I+vvnjTb/vMm19/m+895i2fv+V8bjnmvV4555WxXbkXVeNTdZ5V
86dzLiXuRed5Vq3rqvO/9753rpH0NSbWTtVcSudJOhM6MyfxfdN1bVcWpb9v
1b1O9A+d6y5xvVVrcGX+V2VmYpwT2ZU4TnquputXej50/tn0Ou3Mrl01eleG
pOtgYu5VPeMkPtPZO1VlY2empXuexH3cNeZVPWciP6vWb7q+p/uidC1I1JSq
LJ2cG4msS6zHdD/Q2WPvytUJmT+tL9o15hNyckLP2Zknu9bUhDmczoeVceic
S4n8T49VYgwTdXbXOXfmf2Js0zmZzv/OOl71favGp6oPTMzhXX17ejwTWZ3I
yXTeTphjiXNOz5PO+rWS+Su1b1dvkH6+SNSmzrpTdY+q5uTkTEvXtQnjsGu+
deZ/ojdOj3PVtVStwapamT5+1ZxMZPWudZSYG7tq5eS1ls7nCX82sb46++Sq
a99VvxJ9766MTdfcqrWQ6HXTdSoxzyfkXqLnT6/fxPjv6mfS2dg5/un83DVn
Vq5rcr80IUMS8z9dK6vObcIc3rXuOnNmwvnsWgun3JdT+v+V+7irX6rqk3cd
Mz2G6TxP9wanzMN0zqSfZXblZHq9dN6XqmvvPM9E7Z5wXVWf6Zy36WeNxHHS
c2Dl+07IikTtO6WWJa5l1/3t3ANJ9wxVewUrX++suVXnma7p6TqbqE2dz5tV
dWpCNqazdLITz5udewvpNVhVN9NrfFceJvIzUTd31dkJPXBn/9/Zh3B/rk7u
N6rys+oznWOyK8Mn5M/K9SZ61/QcmJYVnX0I5/qBCZm/a72nz2FC75c4nxOv
MZFjV829q86ZR3ZnXz1tva98vWoOp8cqfT5VfUL6GtPZle49JuRD4hlwQoY8
sieszfR6r1q/6Welyfe9c0+sM5M7999OqQWdPeGEOcO1c2PX+aT3de/N+Wlj
tTKeVdcyIf/T57brWfL03mDXnOGzvKuvuGo/U/WsNOEaq2p05zms1N9pY3vv
3Jh2jTzTnb3o6T3wtOzaVb86a1b6mXHX/Emcz7Rr5JmuWhfTvj7NVdm1qxYk
etH0GJ6Yh4k6pf/nezOn6vPpr58yn9O9a2JMph2zqnZMmz+d62vatfPe/EnM
w0Tmd2bUhPxP1OuqLEofM1Fr0vUlvR4nfIav4ap10dm77sqQCWPeOW6dtSnR
D0zL+Qn3uqo34Gs7sQ+zks/pbJng9DNXom52PhtOvnedmb9Syx55nLl2TnYe
p2rOT5vbnWs28eyfqEEn3sf0uqh6Xnu0ceb1OZmYq5214MR9oapsn1Y7Vsb/
lPvYef6nHJNnOv08WPVsW3UtK9nVOf6d6zS917fSGySeRybf3wnPaCeOM+fm
Z/r5MZH/u55BJtyvlaxOj0midky4L9PW3bS1yfOd2CuY1vOnz2fCvZuWsacc
c8K9S9TKXWuTz/KufeB0Dly1n0yPc3qvfsIxJzjdC+06Dp/rqn2DU3q/K2VI
+p3CyrPGynuBqrrPzOuZf8txqjJKP5k7/6p7nd4nXLm/E+4X8zRXrdnO4zxy
P5l+R9NZB6v26ybcF+ZTnO6fE+ejn7z9HKquK10Hq55Tpt0j5mlO740k9hw6
c+zEfrJzzDtrfXqeMPO7rf2V+pLYo0jk4Urd3HW/dtXTCeOsFjDn1su0nq3q
HE7JkPTeV6LuT3iOmHYfmSdkSGIN7qpBifOcnCGJvF2pF53vjxLXyHxVT3u/
mXi3m8ifyf1k5/lMqB0TehXmK7lzLSS+V+dex4R+srM27dqj66wFzHyWq/Ih
vc+QrpuJvY6q+pK4RxPuBTPPz/xpWZfI/87aUbV/uFJzp9VlZt6b+dOyblr+
JHK7aj8nsS+kFjCf68594KrsSuTwrrqQfrebHudT6jIz356Nu97zXnX/OfF+
JOGV8zmxLjM/squyOpEJp9eC9P5JoldfqctynvksJ/Kzaq8jUS92jWfimasz
81fuCzPP8a594Kqsm/YuMl03q2plel+OmWc6vZ+zq3e9anZVPTtUjXm69jFz
f/5XZdGud4VX2qNO16z0HGDma7iz/+zM6mnZNXmPPb1PyMxz3LnGJ7/DneAJ
76/vvS+PfL+YT/Su/nPaO1xev7/uEfM1vGuf4Zb8lzPMzNdw5ztlZmae43vf
M8p8ZuZzXfV3vtQCZuaznPh7qROui5mZ3y3zJxyTmZlzmV/1e8a8I2BmnuOq
v0OU/j1yzMzck/+3fD6x5y//mZnn1AW/l5iZ+dqe8HtBJ4wDM/MjO/17QWU+
M/McJ/Z8Vo7PzMw9mX/KZ5iZOVcLEj8Xeu9nmJl5Tubfcpx7P6MWMDPPyfxb
Pp/Y51cLmJl7Mr/q/yE1+ZjMzI/mCT+rv+uYzMy8nsm7fv5fzjMz99eCzp//
l/nMzHPy//TjMDMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz80z/C3xa0Ec=
       "], {{0, 128}, {128, 
       0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}]}], "}"}]], "Output",
 CellChangeTimes->{3.774189172988782*^9, 3.77419363293056*^9, 
  3.7754961017497*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"ae0b1b1c-d0c5-4cb6-90f2-e07149f007a2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1rFqk3EYxeFgRbyNLsVZ9wQHwTkOjvIJOgXEOBQ3Z+/BvbPX4eJViHdh
Aq5Cwvf/Tk7xeaDya2m1qUnfc/32w/b9g9Vq9enx4Y/tdPt8v58+v3p0fOfd
tHv2dHd1yC9/34798eXDzc+77+ubJz/Wp/SLr9P61+/d5tub15t/9SlfO+rf
Ovd7mPNY5jzGc//+OZ8/5/90ie95zs9z1PNzzs9h1PN/1Gth1MeXeLyjPr70
75xRr50lfr+Nen6e8jkrAP5Lcza21lrr+9uXvj8AXEbDDdJaa23/A5DRcIO0
1lrb/wBkNNwgrbXW9j8AGQ03SGuttf0PQEbDDdJaa23/A5DRcIO01lrb/wBk
NNwgrbXW9j8AGQ03SGuttf0PQEbDDdJaa23/A5DRcIO01lrb/wBkNNwgrbXW
9j8AGQ03SGuttf0PQEbDDdJaa23/A5DRcIO01lrb/wBkNNwgrbXW9j8AGQ03
SGuttf0PQEbDDdJaa23/A5DRcIO01lrb/wBkNNwgrbXW9j8AGQ03SGuttf0P
QEbDDdJaa23/A5DRcIO01lrb/wBkNNwgrbXW9j8AGQ03SGuttf0PQEbDDdJa
a23/A5DRcIO01lrb/wBkNNwgrbXW9j8AGQ03SGuttf0PQEbDDdJaa23/A5DR
cIO01lrb/wBkNNwgrbXW9j8AGQ03SGuttf0PQEbDDdJaa23/A5DRcIO01lrb
/wBkNNwgrbXW9j8AGQ03SGuttf0PQEbDDdJaa23/A5DRcIO01lrb/wBkNNwg
rbXW9j8AGQ03SGuttf0PQEbDDdJaa23/A5DRcIO01lrb/wBkNNwgrbXW9j8A
GQ03SGuttf0PQEbDDdJaa23/A5DRcIO01lrb/wBkNNwgrbXW9j8AGQ03SGut
tf0PQEbDDdJaa23/A5DRcIO01lrb/wBkNNwgrbXW9j8AGQ03SGuttf0PQEbD
DdJaa23/A5DRcIO01lrb/wBkNNwgrbXW9j8AGQ03SGuttf0PQEbDDdJaa23/
A5DRcIO01lrb/wBkNNwgrbXW9j8AGQ03SGuttf0PQEbDDdJaa23/A5DRcIO0
1lrb/wBk/AFc+EAQ
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1sEqrAEcxuGJkqW9IjvFijWTOxBbm1FkoRRKFsqtuBArF+CWUBY2ajTf
vF55njr6nZMY55u8/43Tq6PzhdFodLP8/uFocndwfT25P176+MvZ5HJ353Lx
PR8//3z0+u3D+GLtZLx1cTr+2pvPK/tP24fjl9fVvXn8+3efM83XGepzZnmd
03zfafqnr3+W/8Of/lzJZzSP1zDUzz7v98As75NpXvNQ75mhnl3DMx3qWSR/
/wz1LL72CIB/aZb7QWut9d/t394fAH5HwwZprbV2/wOQ0bBBWmut3f8AZDRs
kNZaa/c/ABkNG6S11tr9D0BGwwZprbV2/wOQ0bBBWmut3f8AZDRskNZaa/c/
ABkNG6S11tr9D0BGwwZprbV2/wOQ0bBBWmut3f8AZDRskNZaa/c/ABkNG6S1
1tr9D0BGwwZprbV2/wOQ0bBBWmut3f8AZDRskNZaa/c/ABkNG6S11tr9D0BG
wwZprbV2/wOQ0bBBWmut3f8AZDRskNZaa/c/ABkNG6S11tr9D0BGwwZprbV2
/wOQ0bBBWmut3f8AZDRskNZaa/c/ABkNG6S11tr9D0BGwwZprbV2/wOQ0bBB
Wmut3f8AZDRskNZaa/c/ABkNG6S11tr9D0BGwwZprbV2/wOQ0bBBWmut3f8A
ZDRskNZaa/c/ABkNG6S11tr9D0BGwwZprbV2/wOQ0bBBWmut3f8AZDRskNZa
a/c/ABkNG6S11tr9D0BGwwZprbV2/wOQ0bBBWmut3f8AZDRskNZaa/c/ABkN
G6S11tr9D0BGwwZprbV2/wOQ0bBBWmut3f8AZDRskNZaa/c/ABkNG6S11tr9
D0BGwwZprbV2/wOQ0bBBWmut3f8AZDRskNZaa/c/ABkNG6S11tr9D0BGwwZp
rbV2/wOQ0bBBWmut3f8AZDRskNZaa/c/ABkNG6S11tr9D0BGwwZprbV2/wOQ
0bBBWmut3f8AZDRskNZaa/c/ABkNG6S11tr9D0BGwwZprbV2/wOQ0bBBWmut
3f8AZDRskNZaa/c/ABkNG6S11tr9D0BGwwZprbV2/wOQ0bBBWmut3f8AZLwB
nJTGuw==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1rFKlXEcxvFDQgTiJTh4CzrrwdH1NDWeICdFsCEcBG/CtaXRFgf3Lqsx
BdfAl/N/Hx/x84HiW6R1Tu/h9+x9vVidflgsFt8/Pf60Wv84vrxcX33++PSL
b+uzg/2zrce8ef7x1Ft728uf91+Wf693llP7/OTu6Nft7uHvhz9Hc/z+//7M
qO8z9TW+5O99SU/92qn/tk3e/03en1H/F6Oeh1GvcY7nf9SzNOpzMeq1z/Fc
zfH5muPzO+o93+TZnvr9FwC8S6P2gNZa67fVr31/AHgdDTdIa621/Q9ARsMN
0lprbf8DkNFwg7TWWtv/AGQ03CCttdb2PwAZDTdIa621/Q9ARsMN0lprbf8D
kNFwg7TWWtv/AGQ03CCttdb2PwAZDTdIa621/Q9ARsMN0lprbf8DkNFwg7TW
Wtv/AGQ03CCttdb2PwAZDTdIa621/Q9ARsMN0lprbf8DkNFwg7TWWtv/AGQ0
3CCttdb2PwAZDTdIa621/Q9ARsMN0lprbf8DkNFwg7TWWtv/AGQ03CCttdb2
PwAZDTdIa621/Q9ARsMN0lprbf8DkNFwg7TWWtv/AGQ03CCttdb2PwAZDTdI
a621/Q9ARsMN0lprbf8DkNFwg7TWWtv/AGQ03CCttdb2PwAZDTdIa621/Q9A
RsMN0lprbf8DkNFwg7TWWtv/AGQ03CCttdb2PwAZDTdIa621/Q9ARsMN0lpr
bf8DkNFwg7TWWtv/AGQ03CCttdb2PwAZDTdIa621/Q9ARsMN0lprbf8DkNFw
g7TWWtv/AGQ03CCttdb2PwAZDTdIa621/Q9ARsMN0lprbf8DkNFwg7TWWtv/
AGQ03CCttdb2PwAZDTdIa621/Q9ARsMN0lprbf8DkNFwg7TWWtv/AGQ03CCt
tdb2PwAZDTdIa621/Q9ARsMN0lprbf8DkNFwg7TWWtv/AGQ03CCttdb2PwAZ
DTdIa621/Q9ARsMN0lprbf8DkNFwg7TWWtv/AGQ03CCttdb2PwAZDTdIa621
/Q9ARsMN0lprbf8DkNFwg7TWWtv/AGQ03CCttdb2PwAZDTdIa621/Q9ARsMN
0lprbf8DkPEPFTYsPg==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztWrGqdkkRvCis5uYLPoCJmq7LvsIK5r+g0YKwBmJmbOIjGPhUYqBg4EsY
uMsqHLn2tepW1Uz3nFOwy/0Pc+Z0z/TUdFd/3//5rz7/5bdeXl5+/d2v/vf5
h9989uWXH37704++/scvPnzxox9+8e2v/vzdv//7+u/v/OzHn/7xDx9/8qe/
//Unf/nz3z756Aff+/T3//jnf/19HVONR8aw8yN/I/Mj31WeJ9aK/ZZrfpeP
yl64fHfZ4PqWEs/pmEmsFRufrjkT39rli+vdaszLBdVevwhAYik9XplTsS29
bsp3Ez661l+xJx0DyreU9a9scPnu8iVtMzJPYn1W+oLMibyLoLoL2DHIeMV3
dryy/oi/1TzsWiHvIvaz++jykbXZNWe9iu+3AbHHlTu5zpSy/ukcw2Vz9S77
N7s+K31BnrNjOuDqO7Iv7D6mOROxLZ3/K2MQ+5ExyD4qua7y3cp+xAZknsqG
BM8jYH10cX46t6neRda/+tsVnwlfkDknAllzl651nTPBmZXN1ZyuM+LKc5T5
WfsT54X1pZqfjUmWS3edX9YGlvPTuY3SE0nfa2w8KLq9a207wHUvV0j0YhI+
snMqMc/yv4vHlFpA2YtdXFH5svIsI/5W4yv7kW+5chslD3ftI5sDuGyuxkzP
/106pKJLs99N9zXY+XfxlcJjihahrFVa966+1UGbdfGSogcmbHbVL+y95pon
sSYT4brHr++u7PWwPrpqmfRaIfMjtrFrUs3pivlEvLnqFBdW5iquetmVyyVi
WDlTiO+sL4lvrQQbJ8oZRPL5RP6p9J6QNUzUkizfKvcXuy+uWswVb8g6TDyb
yF4k9qiCcr8oe+d6/uA12FoSmTNdy7P767KBXTfWNmSMK99z7ZFy7yjxdmqf
TtGxE/UyYhurQbFxqzyfeO+vRLpmdNXybG6Trh8TPVClJ5teE1etnYg3trZC
5t8FhbfTeoirhkXi1sX5U/Z9F9g7HYGihyBzsrznqh/T3KXUs4k1cdmG+O6q
MdkxHaBoyy7tBfkuG0vVGPaeYjl/4r2/C4lz7aodXPmqkktU86S5q7JH6RGz
Nid0MCXeVvbyOmNXnYXEv3JfpHVOxN87QLlblTlZ267PXfony/msDaxfyBj2
PmLXp/qWK04S8fbgbbhyFSW3YW1I6JxPXL2Gqy+DzKnYqeSr7F2gaKcJ3xVu
R9aneq7keIm/lTW8M1x1PQJFz3Sd8UcLwqH0ZZA5Xfm/wsnsXbCrF1BB0a5d
ehFrm+vv55y+D7vqLCVWXWec/Rbu3XlwceMVrrhSONmlgVR+KbUtAkUjUmxG
5kncs8q+PHiNlXWWS8+s3mVr1UcLehvK+UXmcfWYlPFKXCmaJPJ8JdI6qnLP
uuLtwWsk6vqEbcgY9jwiPP/UmN/AxWkd7lYlrtgcA/luh3VI6KjVu+z8Sn33
4G1Mr7NY3lZq226+p8HWStXztAaSwB1+b6DsL3K/I3eEq79w5zqdRbquXwmX
LsTGagff02B9Z/Nk5HkHsPcUG1cd6muWk9meOzsPYjPii75KZ+Okc3qFUttW
zzvnqwmwudyuXkACLr/Y87LyfLE1mpIfJnTmO+dmClx1fed1Vvq81ZyddbAE
XNzVuRdQQdGcWW181zqwOQ+7JorOwNYCd8vNFCh1fbdzWoHVcJTfh3ReBxau
2KjGdO4FsN+d+HuDdM6j3Beu2uoOuZkCpUfT4ZwiUOrNzn6locQGEjPXb510
ftl7jeVSl52JnMelfSHvIvzznOW34Yq9zufUpVvusn8X0jne9fn088v2CNjc
I7EOrvnZ/DBxp7BrqKzbdCj528r4dPl4fa5w1B2g7K+i07I2pPx/L5R+kHJH
KDa7avnE+ET92Dl+VkLp6bv69SvBnscpnJMAEhtKjsfGT+e4UvpBHX5v0Dn/
Ufop1fgOfnVAgvO7rbOSQ96Z/137y+Zsd6jLOvzewNXHXwm2b8LGZ96D/VDy
sYn6uZJDdov/NJTcyZV3sWd24r64tHGXDZ21XFajQHxcaX9nKPnYlDzNlRvc
LX4UrlbWdmJeyqJDXsry6q51Vjhnepwk4NIbO/Oni0PuFj+unJAdg3BOt7yU
RTf7O2u5yu8KuukP3aDojezaduP/6b9lSkPJCdm/lbyuQ17KokMvW9F+kXkS
UOKtg/7QDSy/sT2XDvzJ8kzn+nclXFqfMl6x07kWbnTTSFl7duX/Svzc7fwi
QPIQF0/uWn8X50/kGRaJ38spa7XyNzBpdNMYldp/pZ2uc3eH88tCyd9c+WHC
r/TvmpBvTQfb06meu7hi+jp30xhdfZyEna77fWKekEai59u5F+y645A5p0M5
44juerezdkW339gge/Ts6Xlw9XyV3Hhl/qDcca75p0A54+w6Zzzoi24aIzK/
a8yDPlB6vsrzXfVjQkM+lf8T9U6H3wDsQrff2KR/C3eHPZ0Otuer9IZ29YLT
+vOpMZ+47x7d4Bt0+I1N4rdwd97TiVDikOV85bsKEpxzKo+lc7y79VCu6PYb
mwTnP7+r6Y+E5o/kEsj86ThHnu+aswMSfUnl9yR5j9ehw29sFA3q+V3cGUho
/srvZFbqM+yY9JzdoGgCyJx31o27/cZGOdfKeX+wFwlNnuWBdC8gwTl34LFE
jpeoKSaiw29s2PhM3PuszQ+8cGnyiToCeY4grWOcxGPK/Y7Exp11426/sXFp
v8j4h//7wNV7YvN2tl/M2lwhwTl34LF0bn833bjbb2yUnA35XcdJtfBJUHpP
rrydvQsUfab6Lss5iTkr+3fBFRuPbvwaCc5Xcgw2Z1Puo4m18Klge08uvff6
HIkZV/y47qbEPdgNrM6Q5qvpeaOSM6RrJSRWnzv9PLDrz+6jS/NX7E9om4rv
U3gMueOuSPPVlHVDkOBbZP4rEj3fu93pE6HU9S5dyPWtxHgk52drgYn6J3t+
q3cVvpq4bhUSfKt8y5UXPXf6LLCaj1L7X7/L6jzsd5Xxiv2sj531T3b9r++6
ctGJ64YgUYcqOU96f+9wp0+Eq5Zn50TGKzmPy0dkftaGKfqn0g9ScjwXt3SG
qw5leZXVapT9rZ6feqdPQeLeR+ZnxyDfdeU8iC/VGNe73fIfpd/hqsWuc56k
Gyh1KMvb1+8megouHRh5/kAHEmNs7lfNr/CwS1dnz8gudOAxZY+uz5VzrdQR
3fa0glLzJjicrX9Z3nDlb461vzuUmLlC6QWw+SFiv6s/tQsdYt6Vlyq8zcZJ
5zv9CqXmdXE+8i3WZuXeQb7VeU+ngN075F22vlPqysT8iI8r0SHmXXk7y9vI
PIr9HeCqp9iYV+prZe+QdWA1h/ev/oP/gD3L1+dsfad8NzE/EsO7sIv/FV5S
+kTs+k/Xgly9tkSOzfriqheU5w9wKJq8km8kes2uObvlGN34n7WB1fSUb03U
glbmvUr/DplTqReUHKPbnk6Bwucu3QbhXuW5SztasR//Cx34n+Ufl0ancFE1
psOeXrEy72VrYWROV0yyd8HD/zoUXcU1v0urd81foUPvdaUNCv8oGl0iDrvx
hktbY+/iDr5XtiE5wJSarjMUXcU1v3LeXb+RUHxciZVnluUll1ZwHZPYo268
wXKywuHdfL/Cde93q+mmgNVGlPmr5yvvHeR5N3Tgf7YfxPJYhzhU5mfB6uQK
h3f2HbHn0YK8UHR4dn6lV6j4qHCR8t0EdvG/qx/E2r8yDrtpa64xnX2v7Efu
/UcL0rFSJ1+pTypaYueYWWmnEgNKTcdqhogvSi3DrBkKxR6lLujge7UOLP8o
9c6doWjyyDzVmJX6pJKv3pn/lXoc4XM2llw9oHSdy0LhPZc2vst31h6Fl6bk
dbvA6oHp/F/5rsIhyplaiV35P5tbKudX0YsQXxK8utKedD2V9l2xh42ZKXnd
SrA5G/uu8i3Xd106T7eYWZn/JzjBpWOzvlTzu+rctD1sXsTmQmnfKyD2uPK3
znndSrB86OLPxN/Vt6brPBXS/J/Q/di7GNlHxS/luQsu3nPFfGLNEZuVO33l
uydBOZssfyZ0TlZzuNozReepkIjhdB9N2Qvlvl5Z57rsQd69PldiHjk76Rrz
4f/1UGpwZUxC82TtqTAlHlbGsKvuc90d7Dwr61zFHnaexHqu7AU8/L8eaR0G
WVtX7Ck2TMcu/mdzQpd25BqTrnMRJLhLWasOfZCH/9cgocOwdeXVHqXPtatu
7YCVMcxq493WfGWdi8DFXUqcd+iDPPy/HmnOT+s2HerWDkjHsKvPvgu7alvF
NuRdhZ9P7YM8/P82EjrMSt2mW93aAbv4f0rNla5zV/K/0rNAxkzsgzz8/z4o
OozC+axuo+hIyPPpWMn/Lu1uJTrUsxVc/K/8fWofJP3uRLD+prWddE2h+D4F
ab9c2t3KNV9Z5yo+KvyfvqdcOi2Ch//XQNH9XNoOOydbUyA2nLTX6Xqc/W63
XkCizkXmR7ArH1N0nm59kIf/cSi6Ovuc5QQlb0Hq0266tAu7Ypjd0122uXjV
9S32XVc+xuZI7P3y8H9/uHiSvS9cYxL3VL1aM7ArhlnOWXkXuHgVGZ/gH1ec
V99C9iKtLyHr0PndiXDl88iYRH+Kte0OvYCVvkxZK4VXkdhzaSCJfEy5O1y1
+RQOP4kHKqRrzF36KptbntoLOMkXF1heVbQOpa5J6KtpzbNDH6TDu1OQqDHZ
vXbpq+z8K8/FLtwhhlkkchIlV7kioU25dFeXzVM4/A5nJ90bTeur7HeVuwkZ
3w13iGEE7Dok9G2FJ1ltip0z3aeYyOF3ODsre6MufZUFkvNXdk6Pgen2u5DW
OZF5lN4Wq00hc7IaKbK26fmnvNsZyllwrYmiqbI+Kn266VrQqTHMIqFzIs9Z
Hq7sd9UgrnmUOdn5H/73gj0LiTru+nxXTLK1xkQt6NQYZuHSOZHnyDzsfVG9
u3Ie5LmrVmJ96fZuZyCxms6H2R5cZT/yXKk1pmtBE21OQMnnWc6v5mHvHSU/
cc1T+eta28qG6rsP/+tw5bor9zERk8hd49KjduHUGEaQ0PwTGg7iy8o7gr3X
0hryw/862JxW+Zu1gR2vxGQ1HllD5fzuwkkxzCKh+bu0l2p89Tyd/yvP2bvg
4f/1QPIW5e80/1+fu7QjJT9kx+zCSTHMwqX5X8HmHgrnsPpkQtth14S18+H/
NUhwPpsPu/Qf17uuM9sZp/qFwJXrKrWDEquKvqRoO4ncDLEZ+dbD/zhYbdPF
+QndT7lrlHf//yr3xvQYZqHUdGxugOQVrM3X5+x95NJwEJuredj1V8Yjtt2Z
/69QtE0kTlx6C2JbNb/r3ZNwUgwjULjFxYEra9Xq3cpHxAYlN6vGsHeowhuI
Del3O8DFt0q+zcawS4Nl3z0V02OYhZLDK7r09Xm6VkVsTsc5whWKPa779OH/
99XCSr7NPnf1gNj8YeKesribvy6eSevYiA0u+1377tKTFS5StLWH//EeFqsr
pveU5fOV56IzpscwAkXzuT539bOUGpb9bjWnS9tn7XfdBa4+3cP/uCajaP7p
PXXVyOlz0Q3TYxgBq/lc32VzHlbHRt51aU3IcyUGEnoywiErbXa92wEruTGx
pyzns7ZV30LmnILpMYzApbG7akYk5pU6lL1rXHmOq7ZiOefhfxyuO7qaE3nu
2tOEbdX81ZjpmBjDCBRt0/V3ZU+6d4DcTQnNU1nz6jlbv7hsTr+7C8odfQXL
t8h+uTQ95U65Wy/4VB9ZbfP6rovzlXqh2/2VWPNdebtrnolnx6UxKv1f9m/F
LzaeE7HaGRNjGIGSWyLjV+qfu+4vRXdSniN4+P99UPjN1WNy6aisbUrtcKoW
NDGGK6TP8kr9s0L6/lLyJXYdOnBvBxtWwrXvbA2LzOOqQ5U8JxGrnXGSX+n6
Ecm9Ff1TOUfK/cXOg4x36VouOxPzTDk7Ln5z9Y9c+ZUy50ptqjNO8st1lqsx
Si6t8KriO2uDYid7plz1/sP/b0PhN4TzXfWsotsjc1ZjqucubaozpsQwgoQv
Si7t0tUVO5HxSp6jrAM7BrEfedc1z5Sz4+JwV/+ItUfJQ5Q5E9pUN0yJYQRp
X5SasVvMKLW8K59U7p2H/3Gk83bkuXIHufpcyp21MpdbiSkxjCCd/7N5UTWm
wzqzZ8SlCSTyvYf/XwPhMSVvd+X2iV6tUtdUzzvncgo6xzCLhC+uuq9D/eg6
L+y7iXzv4X8cLq0y0SNQcic2N6t8V85F531HMCWGESQ4ocOYBJT6XTkvCQ35
4f/XcPV5EW6/fjet7bBjXP0sl27WDZ1jmMVJviSg1O9K3uWqx5V+gbImiXfT
YHPyah6F61zajuv+cuUSbK7SGZ1jmMVJviSQ6FMnOITNRR/+f42Erl6NR54r
Grsr91Z+e+A6L93QOYZZnORLAmzezp4FF4cofTplTabzv4t7lXVA5q/GJHTC
agyi57OaZ4cYYNEthhWc5EsCin7L9vvY9Wfvner5Sg7vHG8s916fK764dD9F
J1Rsq8a79LRu6BzDLE7yxQXXWUbGuHQeVw2C+HgS/7Mc5dIx2NwemZONH5ce
hdjvqkc6oFsMKzjJl11QtB32LLDni+33Kf6m301A0VJcOgbL29VzRZNntRr2
3YQOuQvdYljBSb7sApuTs/mkq/av4OoJpt91IaGrJ/qq7LssV7NaTbVWSk3U
IR5YTLS5wkm+7EJCv72OQfaFfTfBP8hadYs35W5N9FWV3wCwPiL+suMVXzrE
A4KJNlc4yZeVSOi31TyIDUgO5tKCpvM/a0O6r6rMU0HRJJF5KpuVftYU/plo
c4WTfNkFRb+txrj6dCy3p89sh3hT1tY1pzKGtSeRn7P3V9rflZhoc4WTfFkJ
JadC5kS03Ou7Ln0pzVEd4i29d4m/WXtcPQs23pQ6dAr/TLS5wkm+rISin1Rg
z6PyXbY37TqzHeItsXdIvp3+TZGiSbK1oeJvYv1XokMMu3CSLyvh0m9ZXlW+
i5xZxF8XR+2Kt4T27uL8lf0jV8y4/HL1PtLoEMMunORLGgltBMmFEL5V+nSJ
eZQ1TCC9d9fnCW509Y+UfCN9l03hoil2IjjJlzQS+i2bC7H6DJsHKvMoHFWN
dyGtvbP9l0Q+nNBkFF/Yu2wKF02xE8FJvqTBni8lzl36j4vbEzr5Lv53ae/K
XZ/Ih1fm6q67bGIveIqdCE7yJQ3lHLlqcNd9gcyv9Asq7Iq3XXqFoiO58gRX
rq7EmEvn7ICTOPMkXxJwnS/kXVeOmtaIkPVB1jMdb8reIfMkcldXnqD4y+YD
LtuQ5x1wEmee5Esa7Pli50zX78p5Z++LCh3yf+U5y4esnUgOoHxXuesV+9n6
pTMvdbatwr8Aw+ohGA==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1jFqUwEcx/GHguQavYKuxtDZLS5do+gUKMRB3Jy8RRFPID2Ag3gCj+Do
BZwcTMBVyOP1/d4P+vlAy7ehtDRJ+f0vXl5v3zwYhuHt6vhpu3t3eTjs3r94
dPri9W7/5PH+4TE//Ps49Z+fzzdfP63W3z9+W5/Tv358fvrl6tXm5vb3s7GP
/6+nfP8cv2vsz5/yM6c8/1P+3jmehzle6zl67Hv7rv5H5njdk3/LlPfP2Men
fM8c/wtT3ldLvd/OeXwA4F5a6gbTWmu9bC+9PwAso2GDtNZau/8ByGjYIK21
1u5/ADIaNkhrrbX7H4CMhg3SWmvt/gcgo2GDtNZau/8ByGjYIK211u5/ADIa
NkhrrbX7H4CMhg3SWmvt/gcgo2GDtNZau/8ByGjYIK211u5/ADIaNkhrrbX7
H4CMhg3SWmvt/gcgo2GDtNZau/8ByGjYIK211u5/ADIaNkhrrbX7H4CMhg3S
Wmvt/gcgo2GDtNZau/8ByGjYIK211u5/ADIaNkhrrbX7H4CMhg3SWmvt/gcg
o2GDtNZau/8ByGjYIK211u5/ADIaNkhrrbX7H4CMhg3SWmvt/gcgo2GDtNZa
u/8ByGjYIK211u5/ADIaNkhrrbX7H4CMhg3SWmvt/gcgo2GDtNZau/8ByGjY
IK211u5/ADIaNkhrrbX7H4CMhg3SWmvt/gcgo2GDtNZau/8ByGjYIK211u5/
ADIaNkhrrbX7H4CMhg3SWmvt/gcgo2GDtNZau/8ByGjYIK211u5/ADIaNkhr
rbX7H4CMhg3SWmvt/gcgo2GDtNZau/8ByGjYIK211u5/ADIaNkhrrbX7H4CM
hg3SWmvt/gcgo2GDtNZau/8ByGjYIK211u5/ADIaNkhrrbX7H4CMhg3SWmvt
/gcgo2GDtNZau/8ByGjYIK211u5/ADIaNkhrrbX7H4CMhg3SWmvt/gcgo2GD
tNZau/8ByGjYIK211u5/ADIaNkhrrbX7H4CMhg3SWmvt/gcgo2GDtNZau/8B
yGjYIK211u5/ADIaNkhrrbX7H4CMhg3SWmvt/gcgo2GDtNZau/8ByGjYIK21
1u5/ADL+Agy4OO0=
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzlmjHKb1kRxAcFMXATugM1MBAdjMVkDA1klDGQAWEMxMwtuA234h6MXYYK
Bhehser9qs7p+6ZB+eZy/n26+55TXV33ffc3f/jsd9/45JNP/vjtf//fZ5//
6WdfffX5n3/5rf/8xxeff/nDH3z5zX//+Zf//u8/f//2F9/59G//+PtPfvy9
Lz799fd/9NPf//hXn/7z53/96fO5u0b57eRnWkN+m4rn1m/dOpCanMw9dX5I
DclejTPWOBuNs9p4v5vPZOo8pO5mCp8/CdmUi7Km/bcbcyr+k7mn3gupVcN/
u4aNfNsxt+uwoZ4bzmR7r9S7IPGTXkB+e/I8K70vVc+Tubs5TubyBDf3Bg+5
dTYafjZgPqlzow6Nd+T6bOw1V/r/m1Kfxr4pa9+LySeZlZT4lTWp3N0c3fcy
+STnXPHvxunW0K2byz9dPxswn5zVRh0a70jJMcUPG3jr5r4N8ydL3QvXv2Ip
jkruEcnRjdmNx+2DqRncjdn97bQm1SOUNW3Md8+M8t4bZ5W8o2k9+abQ1s+V
mKfcyT06aW4NyWzY0ENI7ineS7CI5Eh6U0qzcme01Hc0JUeyl1K3FC9qzCap
2ro+GzrMLZ6v2ObYFEtpLEq/buAtyZf0a3J3SI4pP0qcZC8XH9oakYuZjVk4
xRtJ3YjmQ543+JXip2GbY3ON5ELudZsbT0buqeuHcKH2rJTSLd1+2tYPG9qO
60eJh5wH149iLt8g58qNh/DGhm2OzTWSSwrzG5zW9X9yjnPvTlubIn059Vs3
/ra2o8Sj5OhqYsqatgaewnxyhknfbNvm2FxrfJMivGiy9jm/Nce5mkPDp/uu
3X49PVcwLaW9N74jKO9Cyb0x97mxuT5Tmt7kk/TNhm2OzbWUPtCebcl6xTbM
cQ3+2ebkbo6p+Bt/u98RUnVwY3P3algK81383MbTtsXmGtEHJj+Kf3cNWa/Y
rTnOxUC3nu6+LgaSfN342/g/xUx6qOszpcW1jcTscptt/XFzbK41uH1Dm1X8
k9y3zXEu/2zXIXWeiSY/PW98eyI91F3f+EbWMDd+xY9yrrb1x7f37qeluH1K
s92A/xvmOKJXuHsR3kX2Us5MQyOafnvyXTd01JPm4rzyW/d9neyPb+/dbgxK
/Ce52RTDx6TBEn6VqkN738aM6cZM/BMj2tcGPZnwovY9usX/yfNt1uCBJ78N
uflunuMIdm3bN4V75H6537mUvFxz8XPDHDrFo+C5+w2RxNOuz9t7t2IpHkj8
kG8KjRw38MO2NnXre00KN4jP55o2R1XwU+lNtzDErdvJufXku3tj73bN5YEp
TtXQh90cb81x7e8mt/Z1cS+l2xOfm2erk3Mo4XXte3Tynr69dyvm8j3SI5T1
5Lmb47TG/S2x9neTW/u6sRGfDUzYMFvd4pPu3W9/vyPc+8MqoOe1rXe71uBg
jfnd/a2y/tYcRzgVmanb+zbqvLl3T0Zmq/bc58b/fJ66yyn836yLvkULavC6
1Pz+/C2p5+Y5jugSKf5P9lWwjmg1ip9nbBvuXQPz2zqVkgu5Ryn836yLbujd
bo7KmtT7bei6RF9qrFGszVXa+xKMcvsOmTu2ceYG5jfycmd5N1835jfqoht6
NzHSB907SPhtSpfYMGO2/aQ42PO5e7ZJv1bOmOuzYaTHtec+N36i+RAMTPk8
qYtu6N0pa+Tr8gEXh11d4tYc90b8f1oK593YiEbU1oJc/ylsTOXixqzcwem3
ZF/yXLG3925iqT6o7OXe38YcemuOeyP+t7GU4EmKbzTin9ZMcSrrT37XSM1Z
rh9Sz/a92Na7G0buXer8K2tSvPHkHPd2/G9gKTkbirU1WPItTMHGk7PMFKc7
Z5E52s2X1Odj7d2ukdjcOpCZPTWH3prj3oj/J+dZ5f0qfoj261pbh2z3X6Um
RIch2h3pO+RevL13u5bCk8bM7uaS0ojc3JXY3oL/hHeRXFJz1klr8I0NerLL
1RU/t+74tOZj6t3ECD48n7fnazd+t6cr+36d8b/BZxr40LaGbrxBT1Zwr4EP
7TNJ5po39m7XUvrArRnHPbe35rg34j/RchX/z+dv4f8p3Tj1TS1Vn1Rvmnwq
d20ywskJD39L7yaWwodpTTv+VC9uz3Fvwf/GmVf2Ivhw0ho8U3nemL/cPqX8
tsEfTvLwN/ZuYg18OBmzEpvisz3Hbcb/9pmf1jTmi7a5s6Rb85R/14iuntLM
lfo0eHiqR5/s3SlL4YOyvmHuu1aeN+a4bfjf5quTnZwvGkbq42I+2VcxoqWf
5OTu/D7lmPrttt5NjODDrZmd9FM3r9QctwH/23x1w3zRsEaOCpYq/sm5cvFc
ySvFyZXnk5FemdK73Hg2nG33fN6a2VP91L13qb5zEv/bfHXbfNGwRo4pjZqc
q9TM1dYJlRgIZ1NmnMnP278FNPp7+84SrHAxU3nX2/C/zVfdmrTni7Y15nqi
UZN9U1puqr+nLKVfTTFv692NWk3rSR1SeTU0mem37dm2gf8nOfm0xr0XhKe5
dSOWmlm2zUqulutqp0ruSpyKEWxX/JP7TnS/hjX44bSmHfPJWXjDrJfS5Ro4
TPqFwtO2cSRXE07x+dTcl+K37jttvMcGH2vMUy438KqgWeNet3Nxz23q3W2b
9Rq6HMFhct8JB3Pr5pqbi8KfyXPSo1OYP1lq7nON3PH23dysc6buteI/lUv7
G0Tqm0JKp538k5q4uZP1qXN1SwtyY07NhlMNUzE05lmlnre0jqc1Zkyl/mRO
bNQhhXXKmpTWMcXZ1mQ26LSuTzKPtHnmlJfr89YdcdcTLd2N51bMkxF+3jBl
r9Ts4/ZuEoNiKaxL7eVaCmNdHCNYlKozqafCw10NJ6WJTc8bWKdYqie6eTV0
nnbMH5ORGj6fkxm8Peemzg/Zq+GHzFYN/aShY5D1qe8CynMlBjfO9llV4knx
BHd2c322Yz7J1U+a+96fv23zn/bZbrzrNv6nuBbRkQh2uXV265nqaylNLPXt
po1Lbq8nPfRWDI31bzfCZwgWNfQoxU8KHyZr4D/hRW5NpjUu1ik5ktlwWuPG
RnpQu+cqdWucVcL9FP8nY2isf/sskKoz0RYaWsHkZ4o5hQ9K/MpvpzjJehLP
Sf6cWt/Qz12cV/YlM7ISJ8lLudcNbL8Vg7L+Y+L/rj7cnnNJDIo1NF6ltqne
Qc6qG4+Lq4Q/u5otwQTCK4g+RubcNs9saGVkPj0ZA+EVb+f/BA8bc25DSyS6
QQPD3d+Ss6r4V9YreNveN7WGzKGKf6KRnuSZDa0sNR8p60kMyl6ujqH432AE
D11r1Irw2MacmIrzaS6mNXhISscj+6b+fvpP5UI47TaeSfqsW4eG9uJqR+5v
G/rwLUvhm+LfjYHEr6xP6QztOFNzNDGi3ZF9yX105xSSC1lP8iW1nfZNnT3S
+1K9m5wNklfqvbQthW+pGNq42tAQGnESPjn5UeJUfnuSC6XueAOfU318A89M
4Tmpbbt3t89Mgz+3bUMva+N/Q0NI4cC0npy9Nv8nzxVr871pL3fuI33czStV
28kaswa5L41ZrHFmlHzdurWNYOateNzfpriWOz+SHF0/z+cktkbMqfOT4nvT
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
5s3UzOJyg1TMKdzYhv8ur2icq5RuSbBIiTOFCYTPNIycYYLb5F0oNUxxyJPW
+H60bd4kswmpg2sp3CC6VgP/XY7U0DFcPqD8Von5lhbamA1Tlrp37l4pjtHg
kEouKUvxNCWvk98ySI4Eu1JzdOqskjgbukpqNk+dK4I/hO+d1FvI/HgrnlTP
as9E7p3a/D3UzVd5Ptm286/cZff+Esyc1rjnh8SZ0lWm56m/Sb6ps0HyPYm3
DT2kHU+qX0wxuBpUQw9s1Fkxl6elevHJ2aetGd7iS40Zs3GnpvUpzHdjaOD5
FI+br+LHNVLbxtlO9feUtkniT+mBb9HDU335ZO7tO3uSL02xKc/de9H4XuDO
0SmdlmC+YiRfZX0qntQMdTKeyU7eR6IPNLhEKpfUuSXv4uR5U9aQs3qylxHu
ofhXnk/7NrREV6cl9468RyXfkzpAqp7teKYYlOft+9iYVSfb8P3lud7lge65
OqkFTUb08w16qbtm8p9ak9ISXf/P9aneR+yWlpjSY9vxEJ7W7qftWfWWuffU
zZH431CrlMbViCf1N8mL8G2lzs81hM/f+iZFcKOBXanenYqH+L/VT1Oz6gZL
aThkLrilpU9GcKZ9X9wYyHtM+SG5uDqqG8PJb1IbNCi3Jyrxu5bSFafftnUY
Mqtu4LSN907O8La5ieBMu3+lcNvdy/WTmgXIvOnOnm7NFSN3v42305rGbJvS
FZW8GnhCZqg34n/qDJBef5L/u9rjyW9PpOZuPKm8UnfQnTdJv76Fe8r6Bl4p
vTI126a001v91J2h2rMksdR5IO9og5buWoNbkn2nNZMfguGEz7tr3D5LNH/y
HWGK381lWp/aN6UTklmS9BeCCSk8SZ3tDd8CXE218b7afKNdt2lNI/7G+W/o
SG2Ol5r33feSwr32vKzE3MB8UkOCP+1+Ss7zZk7b0ISVNSe165NGNBDXPznD
U2zTb9131+B4bswkfqVuZE1jXlbiaWC+O8cp8Ux+yG9T8Td66En8J+eZxNl4
vxtmgcnIvXB9kto25uIUnrha69NPSidRfuv6P8kh21wrNddMPpXnbp3d+Nsz
1Bs5rfvbtna9wRrzXYMTutirxDb5ITytgT/uvimOcZJDNnStxsySmq2UOhMt
WqnVSQ3tLUb42+Rng242GbmDik/yN9HflDiJrpKaSQlWTDGn+MYtDunijItR
5Bw27m9Dz3T9NDS0N1pKAzl5fog13i/hjY0Ypufu3JHC7Qb/d+vgrj+pG5C5
z501Upq8a0QfIz6nXG7NsBvs5N3c0DdT+sxkt3Ra1487R08+3RgIHzg5Vzb0
hCkXxX8qhsa84NbW7VnEp9tPJ59Kfdw6bLD23XTXtI3MworP5/O2Tuvm62JL
6h2l+EB7rnRrnprpCC9qaBoNfCYxuz6VvZ5rlB7xFk3btcbdbPMHYu4sTPi/
u6Y9i6W0VsUafKA9V7oxuzGk6kB6k7s+hc/bOJKb41s0bcUad7ONqylra7ap
72upWcyNmfhM1cSN86RW9lxPvo+ken2Kp00+CT6TmBscieS7WdN2rcHV2/wh
la8bs+LH7X1TnCfPWHsWI3wg9XcqZldDI3yp0buV37Y1q20ciehFSl5KDLcs
xdVv8QdiqXNOML/BgV1rn9sUpyJzOolZiUf5Ldlr+m0K/5V9b+kDk59tdXsj
/jfuV5s/ECO6rntulXwVDtPgt25NiM8pd4KTbV26oR3dWqOYciaVfVP6ANlr
s064wVLaV2pGOFk3cpZSmJNavxn/p/iVGJTnjbnyJCa0/3bjJHc8pQ9Mz1Mc
6ZZO6Po8aY252z0Pt/BfOUsE88lc3ODPZN+UT7cOz+e3dGkn7//1k7pHDb0r
te/kU3mPqXO+WSd0fbatMa+5db7VNxuaw7Q+hf+EPyvWxv8URrXnyoaWcuvv
xjzVxmH3nDd0DOX9ntSXGubG/3zerm2jbxLNx40tpT9MPhtnqXFWCS9S+HNj
rkxpKVO+7b9JbErMbq1Ss7OyL9ExlH2VGN7yLcCNs13bdt1czWfK0X3XpJel
+qlbn/Yc0cCN1FzZ4P8kLzJ7En1GySuFw0rdCEa570Wpg6vvbcb/KU43/tQ7
bdQtxTknn6m75p7ttlaf8kN65cm5MsX/25qqEgM5t67Pyf//q5m6l4sVZN6/
9e5OmovVpC83eopiZMZJva8UXqVmiska+E+46+S/PVe28Z/MO64fJWYSW0P3
aN+7VI9Q9mpzNtdIjqTnpnoKuY8ES1M6sLLm1lzZ0D0IzyTnqs0VSfxTrRrP
iZEYUppb6t6RmNvv7qSRftfQ1hoalBvPBo3OxfzGnHLy3pHeN/lPnRPiJ3We
yfOGdqfE8LSUvpTiIURnaLy7bTij8CWXOyn7NnpoSsf70Bp/iKUwv3333Vxc
rp7SyshM1/i+oDxP4UnjDJB5VlmT4szuWXJxb4rt5Dsi1rhTpI9M+5IemuIw
7XeU0hK38X/Sy8i8oMQ2rTl5Jqd9CZ6kOHPD52QkX8UnwW1X63Ax8CT+E66u
+Ce6UEobbGi5J+3kvNPw08D89rezFNd1/TS06MlPQy9V/EzW1hbcHFMxpObE
hrmaj+vT/bsx07nvlFU0Y41Z5iT+k/mFaMJuXq5/N3flvDW06On58+9/Adg6
aGo=
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztWzHObjcVjIIEbAOWQPo8sYVQgwgSVJGQQoHoKCnpEYugoKVmHxRsg0QC
6ZOSE2b+mbHH/u9I7+m+T772+Ng+PmfOfT/61W8/+83HH3300e9++NVfn33+
+59++eXnf/jZ97/+x68//+KTn3zxva8e//jfP18//+KTX3742z//8enf//3z
T1+f//qXn334078+/vDnH//gA/KMvDuNhTwj/ShtlDm6+Ci2UvpxjZvmzK6R
az8r/Sj7R7Fb4mwqZyfxrmsvpdu41i6xjh8BmPpB3mX7dPXv4raLwytc9mHf
VcZNr6nLDol+Grgp2MW/Ye4uNPBXOCB3BHuPTO0nnmz/CpDYI81h4uNqg8xL
GTexZ5S5JLgl9nDabgh22bZh7i40+JAGDgiQfGclHyQXW8nHBTbvVvpP8J/G
alijtj2sYKVtTz9TExr2ZwMHlttrm12cET5pDgkg/Bv2BoKGNWrewwoabHs6
GmzYwAHhhvBMc2b1kFPO8ik5IIK2NWrbwwrabHsiGmzYwAHh1tDP1Cf77OKQ
QHMOyKJhjZr3sIIG256OBhs2cDgR6e+mdqE5B2Rx6xo14LGtjgYbNnA4Eayf
bPafzTmggpvWqA2PbXU02FDhcIofcEH5BrLZf96UA966Rg14bKujwYYNHE4E
6w9P8Z835YC3rlEDHtvqaLBhA4cTgdRGp+dm/9mQh7pw6xo14LGtjgYbujg0
+4EEkPm62qRxaw540xq14bGtjgYbuvpv9gMuKNp4s5Z+Uw546xo14LGtjgYb
JsZ6Dzkdq42zzw3+//Rc/tY1asBjWx0NNkxweO3/1pyO/X+ap9itIQ914dY1
asBjWx0NNkxzuCmnY+fC2koZKzGvE3P5W9eoAY9tdTTYsIEDbrEeKLVR5H5k
x0rM6/Rc/tY1asBjWx27bMieTYVDQxyYADuvyc6KDRPzashDXbh1jRrw2FbH
Shuy+k+aw+nriMyL9YdIPwm73ZoD3rRGbXhsqyNtQ8S2Sr6PcJjmfnpNp7km
y+LWXP6mNWrDY1sdibmwfjjdzytOz+l28U+Pe1Muf+saNeCxrY7EXJB3V7ZB
3j0xp9vFPz3uTbn8rWvUgMe2Om6aC4uGmqCCXfzT496Uy9+6Rg14bKvjprkg
YLXltntwF//0uDfl8reuUQMe2+q4aS4skPPePPdd/NPj3pTL37pGDXhsq+Om
ubBANORmHWwX//S4N+Xyt65RAx7b6rhpLizY896mg+3inxj31lz+pjVqw2Nb
HTfNhQVy3qffd92DrL9y8U+Pe1Muf+saNeCxrY6b5sKCPddtOtgu/olxp+fT
c/mb1uhtVs3hsa2Om+bCYjrvrF9q8P8r+bvGdf1f7OZc/vQ1aj7Xj2113DQX
FghnxS+l4eLG8k+P64pJkLmk899b16gBj2113DQXFux9xz4nOCd4pjUcJZZQ
1shlT7Z9el/tWqOGGO/W/b/StjfNhYWiSzR8E5XgnNBwFJ0Hgcv+rvxX4dy8
Rm05/k37f5dtb5oLi7QfS+dByLguP8y2YcdSfLXCWZnj9DurHTWv0a69jeD0
/d9g27QNG/bJBNeaTu8m8iC2T8UPK/ndrr2xMpdH5svWAhrWaNfeRnD6/m+w
bdqGK+fCgvUJr7+zsesu/6/4HDYnUjSQtH0SuTw7X1denF6jhr2N4MT932bb
032gAuXuQ9Y6XQdR4hB2TZU2yHwT9knMBWmj7KupjXLXsG0a9jaCU/b/xLnB
ti4bNsyFhRIHvvbDxgMr41tWr1NyXtZuyFooNln57IqFFE0psV679ja71m37
/xTbKjZ87adhLom5J8Z1ad1sP6xPVmo9E9K5oXLulPkqerJLQ3Otl7K+rr2d
GCu9/0+07cr1ahh3FwdXHsT249JeWP+20iYTT4R/4o6bxmXnhbzrWi92nyD9
NOgV6f1/om13aTINWlDD3BWfgPTj8sMuLVSZi8If4ayca3Zeis6f0K7Te2aX
XpHe/8jvzbbdpXs0aEFtmk8iB1T22zQWq3kqc1E0pUScvHKNFA0hUadg+bNz
YbFr/yfaK/xdOamrz+Zxd3Fg/VJDfu2q9aRtgrRXfKyLM3uWV96tK/f8KXoF
W4tx1W4QKHZInDuFc3rcBg5szMzGbwmeSj9sbObKKRD7KLl5Yo0U38LynNpP
7yLtkX5O0Stcms/0e4NtE+eO5bxy3AYO03olviVQeCpgbcjaJJ0LK/eLorcr
eRbCM61nTkjk1+mcXan7KLqiwhP5feLpOncIdo3bwEH5FmXiv/LeRMDG2K74
apcmgNhhpQ6AcHCNi/BJa3pKn9O7UxuX/s+OO7VX7OA6dyx2jevikFgvhcPK
exOBqzbK5gsrNQH2DE7z3ZXbusZSOKQ1t/S6p7/5SdiB1SGRcRXO6XEbOKTv
6wkrtSDFNyJnSomfXXZg85qJw8p66654IJFfN+gVr78r+amLj0srZs+pywem
x23gkLivV9qNnaPy7QpbB1lpB0VTRfpxrdHKPNrFQalt7dIN2Pw0wQH5HfEt
rE6r+EDWP6z8ZoC1lTKuq8+03RC46p5TeyXXTmh37P019ZnITdJ5tIsD8m6b
boD4zEQ+wtohffYTObirTbp/dl8l4kDWh6R1BvY+cnFLa0HImWLtv9I/rMwH
ExpgQ/6brnsi2HW+WA5se9ezwtmlySDjTm0UP8bmMq6zz+ZHbH6KjJv2CUpe
g+QI7FiITVZq4wiHxD5M578uzol+0ueL5aDoJ8qzEicrz5PNlXuEvVOQ9Uqf
/UQsraxp+u5m465EzMCuxS5tHGmT8EUKN6R/l992nWV2rHQe5MqFlXgSaZPm
oGj7rv3G2oTtPxFLJ2JypA17R0/9JGIGxFZszLAyDmftiSCd/7ruTaUflqer
z6l9Qqthz47CjbVhIp9itaBd2h3SjyuWdvF3xe0KXDFJmw6GcFD2LTtfpE8l
v25oo9jBleO79BOXfsVyY+MiVy6v2BZp7xoroTMo2gvLP6Hd4Vb9JrdELMTa
xKWDIUjvWxZsvJeIK1z7oQGunBfpE/GHiu6HnDv2jKRzWLZPZCyWP+u7FD4K
f2UfujQxVyw09Y/YJNFm4nOKH2Pjz5XPbXZzaWWKHqjYUOlfsY8rL0trPq42
iP2Rflw5skuvS+REyLttsStin2Y/9gpXbOB6nsbKW+L/I+ETEjZn58Vq+4h9
VmoIiT4T+amiP7juCPZuctlWsYOS866MRU/0Y0gbVpdz+au2HCrhE9jzmPDV
CDd2Lko/E890fSGdn7L3/ivY/E7hhrRH+mH9vGKHdByl5FBtfgwBu16KbU+x
G+I3lDiZbfOKtDai3Cmu+xH53dVnIj9l94wrlkDedYGN4RU7KD5ZiUVdWtPb
rZwHa/Opjes+bbBboq7k0vMT2gh7NhM6qutOYdu78lN2LFdOsUtzSN+JiI6q
5BoJv9dwLytI55vsmqbnO/FMaMWJfFaxFRunsVqK4qt33Smu9tO7it9WfJoL
it2mPtN1LuVeZs818nsbWM3Hlde72ruQ0IoTGiPSDzJHZT+7NJOGO4U9+4pv
QTizc5n6TIC1G9LP6++uOherRbN+T8mXETuvBHuWlXy5eZ+7/B7Sp3KOErFx
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
TO8m9rnCvy1mU86I6+wg9lTauO4+ts1/ALBRYzg=
       "], {{0, 128}, {128, 0}}, {0.,
        1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
Wcd5VNln/L9rre7K/8x9AHTMFDjWHsP/qA8T79ehmMj/Kq5j6vTKN0eOt7KX
0fGHwU7838ntVX87/HfAsadUv0Xrsuq3aTkVgynrTdVfQ9eAKt+4QnVXR9XL
OPzPv8vR00/ejxXcZxyzH9E8ylH7p2GKz+j6Qb+jez8y/jO6ZZrmvBP/u+90
Tc8nHXsK/b6qu3lM7d+P3npM8RnN4VE+vL7LsR+ZGqTyrXoXcx8JnReK6fzP
rJkn6MnuM47RAVT+M76lYYrPqjuW1zFoXl39VuU/2stm6uu7tKDp/H+F4w5J
x34aVHkUk2OravPK/874KVx6RbLPDKdVNpk1qcpV0JqFmQv63sP/WvtPyyfd
99Dc6xbtBST01Bgk+4zmwB071+cr9UAm32M0q459dAyDNH522H9aPsnEhDlP
O89R/5ke/cTeffIaQ3Mk1KY7f2PyPbTH0Zm7SjtisKv9Dufvmk+6tUfVmAqO
fs1E7S5hjbn1PUaHZPJzxn4FRz3izmF24v8Otz8hn0TzFma8Km9B6+hdtbs0
Px3rnzmvmZ4s6hua5zj6BczdjA6m87+j5zs9n3ToiqozlPGfyRXTeLVCmp+O
PhEznjn3O2PQmgJdk0yew8SzM/cp/M9o1Lvmk478XJWTu+P5BO0uzYeVfjr6
DpV9NIdB65TOWbMy59yV/93nbMI+rfxh8nNmna+MJ6pfTdTu0vh/5Xnqfpcq
t2F6BwmcsxP/M9zVeZ6cT6pycoYzV8bT4U8CEtYVmku4ecP9LoeGjJ6bd3HO
dP5n8j20p5OWT6pqHKbfwfTIHPFM0y5QJPiW0Jd0n91uDbnz284YN+dM5H8m
n0c5innvSqzcL2ieszKeCdoFg7t8c+ulqA/us9uhIaM+VGDyMRRT+N/xvTp1
bsd+wp51+8bomSvjmaBdMEg4m+7Kf1ae3SoNubLJ+MP4z7x3Iv8zmr9D90jg
f5VvKvsrdc4E7YJB2lqqxjh8Xnl2M5pkQs5wF///FwHo12I=
       "], {{0, 128}, {128, 
       0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztmD0OZNURhUdGQk68CDLHkBqQAzJHeAHWINkREhIE1kRmDUQswivwGrwG
RxZbIDVIBCSWunXrO+er9zqY0Z1R9+u6Veev3gdffPX5337z5s2bb37701+f
v/37H7/++u27P7//8z/++vbLjz788r2fjt/+8ufn83/+9ftPf/zm35/88O4f
n/76/Nlf/vTJ79599/H3//3nH/7f+ZHvPvuZR37rkdoeqeHkvs/+/1Qf6Nqm
5vLsd6d+69kzcRcCwyfYnsIA0eck9oiap2ZK34WoOXlu3avVq6vOsdVDw2+d
zNE26xcOz/XcnAdsfTNwM+n7tmeaz8nZtbzY8LsvHGZ8MJkHDLl6qgaa74Tv
0/e9Uk6bmoWNyzSvaT7eAYeEhrS0bir/Ez7V2tlbe5Mh/9v4ODWLpJ7TNRPf
TfrCFhzezeOm8HaSqZIYTno9jR+zbmzk+wnON56ntDrJF0NGupLHGXDY8mvi
OTR+DOfkuwWD1m3nUatOg4bbco7Z48znls8auGPo+Za9jKjH4F9mn6UxYNDt
FmcJj3sE5xs1x5z/bZxN4paYi6GfWzLJ1OdPemvGc0tzaI8z70cGr2lxp8Vx
gpuGjGTQBEMmOdGTKZ2Z0hCzdhnOW3zWUGcyA9D56pHPJ704mZFaWmTwLxsX
kr9ryAOGWbTuZeBRa3eeev4WXzP7sgHntv4YuJDkcmuPs/GU/m6LR62eTOGq
lXMIXrQ0hO5na9YGnd/Ix1f+dOaE7Vww9Pak57Y9/VkdMPTWsEe0sG2eBZEH
tvidTU826pWt/y0tMuuDTQ+f/W6r5pamtWZx5xpa3mfoJ73LJ+/Y2lUN+pDU
4eS7hdZ3zdplyF0ba6CxQeAzua+d3GvL3mfeU5IcpDG/vZ+G2SUzjDn7GfCT
zGYbuWM4Jz3UrEt0Ztiot0mcEHecqtmc/ZJeScwr6WV39oWkbifz7cYsbX5f
0cppU/r80gEnJun3PAbuGM7b+zbFcYMOGLLx1KyT9yL6czcdaGHS3M8r5YRk
bUTfku9YaF8zv6+wYXWjztj6acAk/czW+wdbTkhmcqJvBi4QHNnyvmKLTtre
Zdl0wJwZbBpumEUSqzYdoDNJkiMtzWz5vrmfrcxmeG9gyAzEzm7ex+m7ELuJ
QZ9bGpv0xJb/mjMtrQ82LhOamazBkJ9p7Bk4bsA2jflkhmn1Nulf5kxr0w3D
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
lA==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztnEGqRkcRhYOCOHATjp3pVBJcgJPEBRhBRwEhgsGZLsK5q3AJWYCrcOrY
iQk4uEI61sk5X1X1e39Bwp9L3+7qutWnT53ulx//5vcf/+57H3zwwR9++NW/
Pv70i198/vmnf/rkB1//x28//exnP/3s+1/9/PN///n69yd//8uHX/77Xz//
1Rd//fD5+59/++NHP/nRrz/6xy+//J/flfZqn6d3K+3VftTnahzUGKp9Or+J
b0rEc+qb0t83FX9iraXWdSo+qfk68SFyIzVW6rt8MGRPf9T2p99TfhI+pDA/
5c/Jt853U6bGKuXz1NyncvgWc9aR2mZqzW6wyn53av98fopVal9L7d3OuKf5
qvnTGRPi3ZSl/FR9npr7VA7fYg62ODHsXLPbTK0Bn+9W6hraT7Xuc3w4zauS
P50xUXF1Wx36NLWmdvrsxP+pHL7FUpqbg1Hvgf9X5liJ86nP27GXqCM6Y0K8
22nEOp2a+zb+sM1SHFLNmfdWfzn1UaX/lIa2AXs3+KD24+TzhpwndJKpuW/L
n83m1D7OGW7Kh1tMraeccwG1zan9C/+/vZ9Knt/CeVI6yQa9fVv+bLPKXGiN
ouLnW6q/NnDyzrHeKv6n6qxtnMfRSSrtO/X2bflzi9EaRaqOTs6ZtNRcXvg/
u35VLuS06eQ89DdS72il5r4tf24xQqM49a/W0TfGPzWXF/7v8YGI/xTnIeLj
YPuG7070c4ulNIpKm6m/Pem0FM+5BRNS/WzzgeYhU5wnFZ/nc/XeeMqfzf1s
tk7u4XCAW74Fkecv/O/3ofNO4NT9Q0IfU7UCYo1v62ez0dxD/b6VGmHztyDy
/IX/PT5s46hTupP6buqucmqNb8jhW6zzLKbCB27Xgir7V+qeLe3/C//7OWpn
zZuqjyr5rOpFG+7LvVX87+QeDje4UQtS87nzXKxiG9bOBvzv5KhT/y8CJz6n
NhWf1f3ilvy5xWjukdJ8nm02a0HqHJ13X/jP+UDs3RvGOhkR59T9/xvz5xaj
uYej+dz4N2LOfrdBB6j41tlPpw/03j01VsXoGl+9/396d3P+3Gg09yDODk7P
N3wjdb9z+NIL/30fnH3Wyb3OsZz4EO+q90IdTrghh7fZlEZB5+oGLSh1Zt35
N5In27B2NugS6t6t4j89Fh1nBxNS3J6YF9HPBuvUKOhcPbXZ8LfztJ5D5+SG
tTOlS6j9bG5TMeIbpeqCqXkR/WwwWqM4jTvFVzt1ktSZlzNfYl434n8npm37
XZkjESvnLug2XYvoZ4PR3IPO1ZNNaUGpM69t/y+IDWtnw7vOnt75e+obOWe4
m3Utop8po/nG6dt1nl1uvi9H3O1/4T/3rrOnd/6u+EzEysEHJ/70vOh+pozg
M44/nd93qq5Ua58X/s++6+zpU5i/IVbq3tSpBW3rZ8pSfOb5LqGpqvPq1Eid
cdVzlhf+97+r7tHP552YT/Acop6txIfWgjbk8JSl+MypjeMP8X1pjVQdt9KP
4+cL/7PvqnsxrRFVxkrxHLqerfhwsk5di+6n04hvRGuq9dl9tz479Ssn5nS9
X7ENa2eDpuHwFkLbSflWiZVTz1bGdfxx+kn5o8+szzboaQ6vSPXpjFV5V/U5
1f8L/7Pvps4oVY1Ifdfx7WSpepaur1/4X7cNeprKKzpx0smlTk0pFTfHn7eK
/6lccupN9cyUyHOnniUsVb9vyOEp23ZPLKXPOzjp4PYGTanzPu2GtUPXa04u
Pcdy9Hmiz6n7No5NaQUp3zYYrRukeAXBl4g2U/GktQvHt85+iHrN0VIqGFt5
TvSp+k/Xs6p1agUp37wZ542IYaV/p03K/22/1Xiq3J7mbxvWjvNu6oye2FtT
pmK72ift/9NoreC94T9xH5LAxkre0r9T4xIYNcXfNqydFN9T3+3U2VRL8f9T
n1NYR2gFG3K40+j7kA5OpvQN4n61M64aT3WvnOJvG9ZOCsNTGtqGWkBdX057
GusIrUBtk/JzyugYPq2CewQnqYylYrWKt8R5gbqndPK3Df0Q+Vnpn9D6HJvC
HHq/S2kF9Pe6Ef9TWEGsX7W+Vvcd506dihVqbFM1CM3fNqydVH5W4kNrfbdY
535X+S4qhhDf6xb8d2JI7KFqe+fbEXd+nPik+Hwlbs58K3HYhv+pb3GylNZ3
o3VqQak1S3+vzfhP6JadnMfB9hQ+pPapis90bIm9ewP+O1ofseduxgTH6P1u
as1uWAspI+KW4tj0HIl7OzQ+VNoT68vZXzbgP3He9B40AdVoHfjUD7FOnTkS
7xKW0sEqc+nUA0/jqu+m7gJ1zjEV2xR/m8L/znX6VjUB1Wju/TTiLM+ZI/0u
YSlepK7HzedfJ3/UXJqqcWhu04nDU+M6cbgdExxT+eSGfXlbXtGW8l8d98bz
L4cbdO5xNLdxsO4t4b+qJRLz2mzOGValf2Jf3pBXlXdTNqW90Hog7bPDN4g9
js7tFH+7Hf+dMwJiXttMzUP13Up7dV+e4jMbvvUG/Cf0QMJn5zyXniMRW4K/
3Yj/zrym6qMpS/HtFD+p+DzFZzZ86yn8v+VvYZy7f0+jtaBUbGn+dgv+Ozi2
oT6aModvE3+bo+aw0/8L/7/daD0wZZWYpHSA1Byd2Drc1ak7bsH/SqxSWtAG
THCM+Nur5/NUvVBpQ/OZDd+a9oHmk4Q5a7xzjk5snb8jq8SHru9o/Hc0BGI/
rUem31IcQK0LOutogs9s+NZT+O/wyZRvFZ+fz536VM0l1U+1ZnHi6fxtlNrP
yQj8T2k+lTjQ9VGnORwgdUearqNPbW6/69WJ/7QeSJiaq44m4ORPhSM5a20b
/0nhv5p7ldhW/H/a5vOvijl/e1VZR6dxO3kUUTO+B/yn9UDCUppJpf/UvQWn
vbrWNvAfB/9TuF0Zy2mz+W9hHGwk7v8TPMq5L0FokoQRPtB6YGesCHxLnSM4
mgax13TyH4KbbeDbG3K+Ymrupfp8Wmofcep0Zw/a8H1p/E/pgZ118bYa39Eo
nLMAeo+m8f8WLH3aNv3zZERsnW+aatPJlzbkJOFDSg+cuhfayRWJsZyzAFXr
Jva1yhyd9bsNS582lfOqEbHt1A1UjkdoQW8J/1N64NS+SfOZzrHo85TUHp3C
fzV/NmPpZqx4Gn2ni9AN6Prdqc3fA/5XtIhK+07NivguxFhqfjpajTpH4js6
+8uGdef4uRkriG9KYD6R8+ocN9SkNP5XML/CXem10Fl3E/cf1HE79zhiD1Kx
aNu6U/3c4HPnNz2136wbn0yd15RvhP7g6GyVfjprllvGOvV5akPfgSTOC9Qa
vHPuqql4tQErOs+AKhzylvPWij+dvqXGncrJlN5I193bavxt9RSB1Zs1WAf3
pnwmvqmjG1T6rIylRSFnnZpzxYeUxnsLdnXW3dtq/A31VOXdlObzbLNBV3Hm
tWGtndo476r1PqEZdtqG+o7Az1uwq7Pu3lbj0/c3HExT90dVY1RjQpiKbxvW
WmqfUjW6im+VNpvPUNQ2nf6c7Ebsmqq7N9T4dO45mHbqM5VL23h1Su+i11pq
n6qsWSLmGzj2027RgZ32m7Grs+7eVuPTuafi1bY4bL4TNYUV9B6Uup//tG0c
+zTuNh04hWnbsEtd7yl82FbjE7nnxFzVc4g4nNpsuBOl/t621ir9O20I/9Wx
VNumAzvfbionnTVSGSvFeVI4k8oB+v4GweVUfxyj8UE9j1bzmeDPU3tQp/8b
OPZUnaL2P7V/OWvnNN/T8xR/cO4fprCIzr3UPqj6T6+FzjtRT3M4TCo+6lqr
vNtpt3DsKf2zMpbTRn3X8e1p6vdVNYoKf6g876zxidyr7GsV31T/bzwrdNZO
isOk/Ozshxh3A8feoAOffEtx0SnuWmmjxpPQNDpr/FTuqWN9l7h8k3VqHZ24
qtaMKod54f8ejr35rleK9xL7V2pvcuqCim9qbE8+EDW+k1dTui6NyZV+CFxV
a8NnP07t6cQhFU+1H2fcDRw7hV30PpXCJWL/cvamyrgO11XNWY+n5w63Ublo
p67buRbUHFPHmtLDnbV2I/5v49gOdtFn1nQ9m1qzBGfuvA+wgaM65xcVf5z4
VPqnvxdxVtipLaTGvRH/N3Ns574Kfc5O1LOp/Svl2/P51H2AKY566kdt08nf
Kn4SZyKVPHTe7YynM+7t+L+BYzv8ltaBU+86+9qpPb3/Emu8Yp1cojKuUy+o
PqtGY3KlfUpPo3nFyYiaRfWhE/+3cWwnh9WzyE78T+k2lTap/TdVd2zT2Srz
TdULp7HUODjzJb5XJW7O/qjuy0TciDYpfxzbzLHVnFQ12BRGEfif0tYcjHL0
DaJmJ75RJU8qcz+Npc4xZSlMpvkJMRe1/9NYxO+UP84c1f6nOLbDx05+VvqZ
wn+VIxFnjqna/GTbzllOvqnx6dR2KkacXzyfd+Jh5xm6uu7o8/Qp/N/AsafW
FKFTndpvOHNM1eaEtlDpp/Juiieo66LiW8po7upoYqmcpGOb0sArfVasE/83
cOyp7+6MS+xrqXVKcycVM6fqLHVelT5TZwFTvhH+p/CQ0A8rY6nrlz4LpjFw
A8cmsEI1Z1xVQ1PbbztzTPVD11mEOWeUG3xTc4nYZ9V6qvLcMXU9VvpR+3d8
U20Dx+7UjZ3+Ca6u7n0Vf6bwULXOOov2+dSmk1MR3JX23+F7t+DhBs2z0mcn
x1b1QHqfcnj7qQ1RR1fG+m4R6De6zqJ9VjW3Kd3y1CbVZ8rnUxv1zlLKH+Lc
tlPzrNhUbVXxp1MLcjR2FYcdfKPvGHQaUWfRPm+uWzu5K+H/aVznvoFqBB6m
+uz8pu9NC1Ixls5Jda+sPN9gRJ01patvqFtPY91y5/Bkzj0TdSwi36b6dObb
matP27CmUjlG3/3YjI0VS9VZU/zk1GbDHYYb7xyexursh8i3zj6d+EzpCRvW
lBNP59tV+lfHncJG1Zw665Y7lpV3ibqV4AObcyllBB7SfdJct/KcsM41deO6
2LB3O0bfS9ygUXTWrTQfeA/4T+Ah0Sf9HTfoCZ1r6sZ1sXnvPpkaK5Xbb9Mo
OrUgmg+8Vfwn8JDGWAKvOrlKxbdTG2JN3YL/t+zdhP+VNtvm2KkF0XxgQ2wJ
S+FhZZ9N7SMpvFLv007pCfSauh3/N+zdhP9qnxv0rm11a2qv3JA/hDl46Iyl
7iOpOs7RrNQ2KaPX1I34f8verfrv9Pl8PnVWdWrTWbdO7TU3mop1BFepjEuc
FxC/1ZhUfK7ER11TRD1Fr4sb9+7KuITusQGvOutWmg9siGfKVBxI3TFzNCJ1
Lqc2xF27W7Sgp91yLnbj3l3xX22Tigkxx5PRdWsnH9gQz5SlsF3N1VSfp/aV
/ev5bup+9WYt6GlqTVHxpxP/b9y7CaxWedoUPzm1cepWp5514v+W8F/d7zp9
U03F+VM/KuaffNigBTn9b9NFb9+71f1LjfmGOVYsVbeejOAD2+opx97SXJ5W
yf9UXbmNGxAa/gZdVO1z895N3Eu8JT9PPneefTu5saGeSpmzxreZU2M6z08+
bMB/4k7UFH6q9XjF505sdPynNaLNWpAzllonnvzs9LnTNteGKSNqzAoHmNpP
adye0kWdem3D3p3SllMaxTa+R9StDudxvtGGeJ7sPZ9rpO60OD7oM9B8I3A7
9Ts1xwq2q9yPxsZK/6m4qZxnA99Lxd+piRxusG0/PdnU+u20DfVaZzwJrN52
l2YKo2gt4tSGwP/N6z2lRTi6jcoN1LlsMHWN34j/J5vCZDqeKdw+9T91l2YK
o2gtQt1zVf9vOccktAi1z+dzZ4/etp+ejLh7cIt1YnJnPJ37kM/2qq5OnwVP
1deEFuFgu4p7TpvO9U5oEeq7Kp47uiIVx/9nzp64eS9TjcbkzrMVp849PVdz
/uRPar5TnCQ1rhO3TttQZ6W0COKcqPL8ZBv4s/p9b6llKrYBk4l4puZF6NIE
f1PbqJYa98a1M1VnEdhLcLnT81tyoPJ9K9xvcw6fbAqT6bMVZ15ODqicltg7
OvGfiLPjJ2GddRahRWzOjQ05kNo3N9QyqnVicufZijovx/+KD5V+nL2D1lfV
cZ0zdMfPlG2rs1QfNufGqZ9bzlY691baaEwm+AwxL7pWraw7R4+iOSp9hr5t
7Wzg0modeupzQ26c5jiVAyk+s/lc+2SdmJziM85YpzZqfqbO2giNkdhDCZxR
Y1Lxk7ApLp06b6LrF2etbcgBh8845+MbbAqT6bMVtU8n94h6ll779BpXaxYn
DrRNaZVODnfqFaqfakymzlZOPjhnfBv4zNM6MbnzbEXNPbpuTe2tztp3OJUz
x4pv6lgVnx3rrItP7zrnU0+j9YrKWiP4mxqHSv+nNqe5VNpvxn8ak1M4qeaD
w4tO/qt1a0rnIfiPc3aTOkMnOEbKOuvip6ncRm1D6BVqnw5/o/G/ErfKfreB
w5yMxuEUTqpY6uRtqm5V89zBzEr707tO/Vt5rmIUESvHOutiGitS+/KpjeOb
yrFTOeDg1cmfSj/b8D+Fw6oPxFiqHk70eerHqWVSpuakUx9V/Elp18kYfZNv
dBsCK5y4bYg5raVMnSvdcp6l4jBRk6q1lboXq/yf0Eg7uYGqzTo6VYo3dsZq
g1ZZea7OxalHOmOe0mwrY03xriktyKn3ifxU+9xWQzlcN9VnxVL4k9LWVJ8r
/Vf6VMft1CoJruusWVp7cfokONi2upv2IcXNUnVlxYeU7uSYuo8TXDHlM4HP
qnaamgutk9O6aIrrEjmp9l8xZ9xUnCvPUzY17tOItUPriqp2qvqvWgU/VZ2E
1jdoLq3q/6l82xArRxetxI04R07pLfR3TOVV5762YdyKP/QZk+NDJR+8SHx3
I84Ep7hBal136vO0Tu7UpJXnKo9VuS5RfxHfl9Z8Ntfd9Lgnm1o7xFjqu46l
conW1px5Oevr1IbWfNQ2av8VzN+gg518U99V26hz6dR8ttXdneOefOhcO5U2
G/h8xZxcSmnst3NpWitO5XClJlXPdivjqjF5Wme97MS8U/Nx6qnUHu3cb3HG
fdoUR61801vw3zkTrPRzshs1SVpjpPfZSntV3+us3U5t6HGJesHpv1PTVt8l
1l3FH3rtqDXa1B2eihG6lsOXbtEkCW5D8yhVz1F5DpHnqXtHzriV57TmQ8S8
U0uktZHOtXNqQ+AMbcS324b/KT4wNXdnLGcfdHAmxUufz2n+7+A2ofk4ZwGp
+VbeVe9TddYv9NqpxGSzFpTStZz97hY+QNQUBI9SMacT21Vzzh1Uc2KYmpea
M44PRP1LtFH9p9dOak9X50tYiu/RvFqdC80HiJrC4VEOV9xWn6p7Fl0zpsat
9N8Zf4KrpH6r/neunZMR3Jg2p66s+E+cF6j9pPgAUVPQbRwd4zQWbeodA4KT
E+NOnWWczMH/ylzU39tqECcmp/43rLWUXpHqn8D/FB949u9gbOdvJ583YFFn
P/S4p+c38n8V39T9jtZgCX0vxQcq7VNGcz8Hhx0fOvVG9R4IwZdSfGNzfXqj
VTDfwRzCzxQ3IzTJUxt67Ti6x+a1ljoHVPs/tUlpqrTemKphibx1/N+sBd1u
KcwhLLVeUjVOSoN11g6h1VTmQn93WodJ4a2Kbw4fcPbxlEbk5K2jxVViO8VL
b7cUr+j0U10vqRonddZ2aqOOW+lTi/IO3ZXmxpVcImoi55zO0evU+nTK55Of
/wGrvEUp
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}]}], "}"}]], "Output",
 CellChangeTimes->{3.774189172988782*^9, 3.77419363293056*^9, 
  3.775496102032126*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"66571627-eb4a-48f7-b62b-02d327e9641b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Testing Network XVI on unseen CA rule spaces", "Subsection",
 CellChangeTimes->{{3.7755132708373613`*^9, 
  3.775513281415778*^9}},ExpressionUUID->"0a8d295f-cd1c-4c3e-ae06-\
02bf92370bc6"],

Cell[CellGroupData[{

Cell["2-colour non-totalistic, range 2", "Subsubsection",
 CellChangeTimes->{{3.7755140711651707`*^9, 
  3.7755140789905977`*^9}},ExpressionUUID->"a84a1539-ef61-4e18-b559-\
dd588af4e059"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"test4Data2kr2C16", " ", "=", " ", 
   RowBox[{"datak2r2C", "[", 
    RowBox[{"128", ",", "128", ",", "8"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"test4Data2kr2C16", "\[Rule]", 
   RowBox[{"netECA16", "[", 
    RowBox[{
     RowBox[{"Keys", "@", "test4Data2kr2C16"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<TopProbabilities\>\"", ",", "2"}], "}"}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.772719248559807*^9, 3.77271927548206*^9}, {
  3.772719324257593*^9, 3.772719331356277*^9}, {3.773124904129174*^9, 
  3.773124928357933*^9}, {3.7731251153026133`*^9, 3.7731251512280912`*^9}, {
  3.773125217467578*^9, 3.773125219418065*^9}, {3.773125271868342*^9, 
  3.773125271954652*^9}, {3.773212712732003*^9, 3.773212729006225*^9}, {
  3.773212818178605*^9, 3.773212830613299*^9}, {3.773212941366901*^9, 
  3.773212951689026*^9}, {3.773213005636443*^9, 3.773213014527096*^9}, {
  3.7732132566474*^9, 3.773213256876457*^9}, {3.773294401307526*^9, 
  3.773294423203759*^9}, {3.773348269707011*^9, 3.773348280477676*^9}, {
  3.77334908518248*^9, 3.773349098431772*^9}, {3.775496430974524*^9, 
  3.7754964434954777`*^9}, {3.77551289547048*^9, 3.775512922391371*^9}, {
  3.775512964754963*^9, 3.7755129667207823`*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"5a117191-b84f-4191-8667-d3e7b34bf2fc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztmLHKrVcVRYOC+gD2kjcQrUS4YqN9BEshglYBIRZqIQTByvez8GlMwMLm
Qg57jTnH+s4uEs79Oefbe6891xxzfZ/+/k+f/fE7n3zyyZ9/8PX/Pvv8L7/8
8svP//ab733zjz98/sVPf/LFd7/++NX//vvm889++Ktf/Ouf3//wn9/+/cOP
//3Xn//jR7/+8NWnv/vw/3//2Hc+9v2PfefbfP9j6766n1fP8uozX/386ron
5z2p51QdaF3ReiA0ebIWodVX16LrTNTh5O6mPG2qTwkNE5qZ8nm6hif+POWH
SYYmtd3y2KmeSp59SidJHyD6juYpndlsHjjlCSc8orPTFDdpT6D7ndCk2WNp
dtD9a8jDU99peUvyjFN/T/LOkFvoHDj1/FY2IHKRWcPEPol1p85uyMMtHk2t
NbWHlj/YamvzecPzW9nA0PstViY9aspnTp4zpfPkzNWacU40mfRPG+tpVtrO
aOgFg7bpnE944ztzoZUPDX5L75l4Dp3Nkn578tlwRkMvGPww2Qu2Ht/IBVt2
sjHOxoWTrHVyd1Maa3Fw6oyGXjBwobUW7Wlb7sI8a9u4YNtzMlMlf5uc61v1
meKvQVfbuTClnyfdxZZ8mDy7ec+G3iE4e6JPm5fS3DHc9RZtv6oTOocY7mLL
HGrIgYY9b+cC4f/0fRE+QHuX+a5pbRNZzqDVqd/S2TjpV4Y+IvZsqzN9ruR5
T3RCa2P7HJrkQiu70v5j4IItbxj6iGDuk+pM7Lk1UyT7LumNZi8icqmhd8zz
Aq1/W65rrbs910155knGmPJ8Q9+18sbGmmzxKFrPyTxGPP8duGB4P5DUNq3n
Ex1O7d/ggTQXbDVpeSDdv0kmtvzHwOIkFzZ6BZ2TCY+imWXTaiunGWpy4tXE
GWk9G7Rh6E0zF0720/KKqT0T+6cZZM6NyR7cMocSPmP2ZMMeWr81ZzDiXYch
L23xupP6t2ZnQwbY6J+XC8492LjwJB+Y8oqTutm8zjy/E/d4uXC5cLkwOzOe
rLVFDyc+b/C6pH62eNflwuXCu3GByLpTXmHWw1Rmtnnddj1PnffOCx7PNJzr
SVyg6z/lJwYunOTq7b7xVC7Y3rnZ+vdywXNG831N+Qb995P+ndKhOU8+dY5L
3qn5fs3+ebng3APhG/TnE1+ie3nqt7RfbeR18k5pNhn81uCflwuePbS0mjxL
0osIZiU9M8nlk3u0edGdFzx3YTuXjQuEFxnmBUOutvkPfY9P7VmC0UndvsNd
bD+XgQuGdxf0/un3AEk9TOXh1vuiLT2b1Iwtg9nu4nKhq70TX6Lr/A5amsrz
J55DzClb6mzzisuFvb3c4oJBD1M506b5KS3Rfktng6n80KqzQXsnezD3yBa/
2niujfuh861ZSzafJ/RjmBemNJbUHj3b2nrE4FeXC5nfJv3BoHni3cIUH4l8
npwLps5F1J/QOcERQ4/Y/Opy4fy3tO/RfUE/08wL+l5aWYLODwZvoTObwW8N
/nm5cO5dyVxK9zuRw2le0PqZ0j+tq5bH2rhw54XLheTzW7m05ZMnvUPXaqq2
UzWZ8vCWj5m5QMw1lwuXC4T2kt9p9Zoha7X68YQvBJuexIXWPHu5cLlAZDYz
F5L53MCF5BkJntp8rDVHt7zicuF5XGj1ZpILrV5r1crgCbZ9GriwhUc2zpr9
cyMXDHdBeH7S50++b5sXpjzBts+Wj9numtiDgbOXC5690RnD3Dsn3tiarabY
asuEdL8T7DPUkM5jBm0YavjOXCB83jBr0+9AiL4zZAAzF5JaJe665WlJf7hc
8HNhahae8lViPy09vFr/Vo8beN3KJDRftnNhizYMNTRzIflegtbYlp6aOiOt
AVsmNGQAQ6ZKapieiy8X8lw4YfeJD0/poeUhtp5K5l6C10QWtfkMkakMbCWe
b7ivJ3EhmT3o2tI1NPQU4c9TfZ3M0lNZIpkBiExl9vAt3vXOXEjm9i1cSHKQ
qDnNstZssrFuSUa0/Mo8I18unGtmqgfNXGhxMNkXU/vccr9TvCD80OA/W7hA
e9dTuUCfceO8QOiqNVtNsWxKM4b7TWrvcsFTt9ZsZeDCVO8TPWXjAnG/htnK
zPrW/V4uXC4kNUbfy1Rmm/LJ1t8NTDT0go31yXkhObtt96vLhXMNJHPOiffS
Ppn8fLLnZCZP9gKdZwhGE3dK1/9ywd8LSZ+f6i+Dbk/6K8mFKY96Ui9MeXUr
Pyf3kOxNs789tReSPp+cbYnnJ9dKev5Ub9p6gbg7elZN3qlNS5cLHi7QPk/v
Jzmbn6zV8odkfVqMo33VllsIfya0RHjC5UI3IxE8avGL3jPxnORc0+ICneeJ
57R4dMJKWktT2rhcyGek1tmnztLi7/a5JtmbBCNO9kl7civ/EGsln088ZzsX
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
         "], {{0, 128}, {
         128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2190952680"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.008284257724881172`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.9917153120040894`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzl17/Kfml5xfEhgskp2EjSpzJtmGBrOTmCEUyjQVBQYuXBWXkCnkogTRyw
sBmYl3191lr7nUJ558fz7Oe+r2v9+e5/+fmvv/qvf/jiiy9++09//b+vvv79
T3/zm6//5z9/+M1//OLrX/3bT371g7/++ce//e+bv//yw//98nc/+9OX//fV
P//Hj3/953//xx/995d/+OW/fuvff//57/L3d3nmtz3/u/z7R78rzvbRz4jf
1TP5Lp//6Gee3OXq/FdnXviu8PLaLsS9Pnqeq7+vzqCzQnj8yRxELj2Z4Ufn
cOUdfQaRP0/0o70jtKq/q3W7nGOiNwW/Jc8g7qJ1pTsoqcMr/7Z4Q3NUkt8W
9Nyaj2CwVo7pbhJ+1z0uPqN/942dfuUR/cwrNrjyvsjbhX5vnUHzz/JstT6v
dq35PzlPwQBv6fS35H+LJ0VeCb/oXeh7JeezMNu1Xltg2tY8dT6I767N7TPx
5JPnJ7tYP/NKt635LDPncq/prhE5dqUxMfMrfyUzXGhpjSeTXHTlF+HB5V54
I6tozkky0hszc8FTgj/1nJNa0rlxpfMr3Sa778kzF94X3s4q4jziOYK1kpn5
xrxd6MGrTHiSyUIbLeYR7xRXObxwl6TOk6yycJ6rTtdc9H17F1joF5EJend6
v9ovC5mje+Ht/KzPv+Yv3TVJRhXffSPP615I7k54P8k8Seb86N31e8QyPydZ
5apnF7pP81vrXeCz8nyyUxbuspDhQj9i/vqdYo2fW1mU9Eiy+1oaS3ZWMj/F
OZPfTd5Fs+tn1Y+ef5IlxDtOK4uErq66b0FjLb0tzGEtT8Turli9lUUL/Sv0
cLVTvS+dgQvvAiKjdC9cMVjLd4IfljvlisF0R6z5t/XdJM+38nCt95NZdJVR
TzJtIUsX9p7kxuUsElpa8ItmrbfwfOtdQPtO5JjocXHH5PvCcu+ssd8az4vO
XeYxreHWTp/sV3eB1qTIH8GuuotbzLPWO1d6W+A38d0kI7V4THz3KgeSPC94
TPRjqxN1tusufjJPwRIL+3ojv7XYSet8od+T+l/geaEHkZPJTtRMKM624Otk
PidnqP3ymXj+ij2S/S6YJMnSV73Q6qOWfsTurv4W+klyheaoJO9pv4jvrrGT
3qn2QmsXV1z9Fg4U+knmQ3I+yUzW+73yflLz3zeeb/Fby7+6FxayosWBSS5a
6ybtkVb+JPnhKoevfvez8vyaRxb6XexxuU+1T5O5JDhH30tkhZ6D5gftX6E3
kSdv57eWf9d0lfS1yG3dWWv7Ff179VsLPavzVvSIYFGhtzfym2BUsd8FXSVz
SWhM5H9rv61uTfZFi+dF11/l6tWuhd6uWLHFb2u9o/lkIZdamdDKVeFZnY0L
2l7QT7JbW9koOFnPvHVOob0nrCJ8LXLpiseu7pXMNO3B1nd1dj3596s8F7nR
ysZW/lzxrei4Fntc3V3z/AIbtDgn2Quip5K9LDzVyjHBmQv5L86c5Ns1bWv2
uPK75kbRuUnOEZn8xncBnUtCGzonr/a7nP/JPG/tReekmIk4WyvfFrzzll5Y
YJ6r7wptXN1dcIVmtiQXJbNL9NGTM69xlDibzp9kpi30XfL5QoeCFa94Uvso
+W4i7iXO38quqx5PvisJjhJn097Rz2zlYasXrthM54nwl+DSBU3qey3nRrI3
Wx5cy2Hdm1ffXcjDz8rza3yl756coWbj1pkX+lc/R+9xzV/JThTaFntfyIpk
fy3w1dXdF1hrQavap1eZKXok2S8tXYlMW2Baoas3Pl9nQovT1ryZ7AuhpTWv
Xc1Td1ySnVr+enKG5XcBkRsLz9eZ0GJswY1JHk526BMPtry2loetPF+bg+CH
FmPoTk8+X/j6qkeSsxV9pPulxfZXbCa81npf0L/75Dxr/ZjU6lquit9Nfn4t
V698cZUzSb2J7Lrydctra2fQ/aLZ7CrzW1pt5eqCJkVut3J1OX+ER5IceMUz
CwyzfIar+T/Zqbjj1ecX7qVzUvNti+eX+0vPWfDbFVOJvhZ52OrWNYbX8xSM
1JqP0LDmW+GLhV4QzLA256s80fNMZqnoplZuJBleMInuEa1Pca81vk0ym2Yn
rb3WnIX3hQeTWSp0lWT1lgYEJ+ge0foUu9aefTIrzWyiF3SGa33q/Lmaoc49
PZOrbNQdoXtW5LnQttaw3vUC57Q6RfTCwi7EHXX+6Lm9hXn0zNc+/+S+2he6
R9Z4vsU5Yu/JntXvL0k+T+aPmJtmlRZvLPC5ziWtH53DgvM1Q16d56p/W3dZ
03OLYXQv6M660vCClq52kfy8/m6SG3U+L3Sc5k+RaUlebX03yTAio0ReCR8l
fb22i2X+0e9NIvdEJrfyOelr3bMLem71wpXXhJZarLjclXoXa/yT5POrmV/9
lu44rQfRZVf9u+YF3QtXXtMaExwivqs/v5BLC4yhuVfkSVLzrV7WXSa6Y8EL
yzzf4rGruYn+WuuCK25JsvTVnFs8s5Z7Wkviu0km1FzxWXm+xWPJrtS6Eqwu
suVKz5oxkjwjOlT8bksbQletPExmu/7u8nvHQlfq95Qkf7a48arrxS6S7xSt
3Euygc4o/c7SunuyvzSDvTG3db8vMEmSG5PvSlde0M8RWac7UXtEc2Oy+3QG
XuWMYLy35LaYudjL9yE/r/R5dXfNhIIVr84jnp9k7IXua7Hf2vvRQm5rnes8
eSMLXfXdGqO2+jfJey1GSmbsQve17iUy4Y29IPJHs32LV3XvrPn0SV+8xY8t
RkpmbDITnpwtud+17lvW6tWOdJ8uzDN55mSGX+39LX5cy0PBbDpPBNcl9Z/c
9UImCHYS+13jMeFlfS+tyTf6cS0Pr/SvM3aZzVrssZC9Ise0rnTvX72biOeL
/YoMX2AV3dHJPLy619p9dWaKsyW77yp739IpVyx0xdKCjT9TL4iZtPwotLec
sWv3TbLiGhOK7Lo6c7JTrnYtmEH02lt6ocXYSW0nPdjK/4X7Ct5byyhxHsFF
rU5Zy64nPSg00+qF5Eyu8lB3sZ6hzlihqzVOvuoL8fmrvkj2b5L3WtmlmUpr
5sq/yfkvv0doptIe17yheznJ7UlevZqnZio9/7Xs1cwgslT0wpUervSv3yPE
3LQ3F/Yr8qHlwSf71b4T/hIdJOamn7nQg2/xju4dkbGakzUTJjlKnFP4YiEr
tO+SfJL0lPaRuGOr0xfOf+V98RzdR1e+1t109XnNOcLLyecv9/ual5N82NJ5
st+T2m7l5FWvtc5zxZPJzyd9IfhH61BoUveL7lZxR8GxSZ0n56YzLZnbotf0
eYTOW/mwwGZihpoZklmd3KPmf3FOzV1X2hD8kOyyZNc/yd4FPeh3meXvvtHX
IvfWOkLPIXnOJFdcnVNki+ZVzZZJHbZ6QXR6a19JTQpfa70tc/JV/iz0r8hJ
zT+ia1pso3vz6u6tXnj7vlpsduVrnXvJHEjmnjiPYJ6k7zQPiJm02Eb7seWp
ZQZrMaTo6KtdL/zWAs/ruyTfd5IMINig1UefiUPemG/JLGrpUJxf86HWVVJL
C7wn9i76YmF3CyzxFg55S75pBrval86BJMO8sX+TvSk8JXpB5LDmCn1HPYc1
Dml1k+hlsaMrRrrqFzGfFsu1+lezouauFlvqPLziCu0L3UeCQ672qHNG8I/o
Gn1+zX7J/FnoX913grtabJnsO81UwjtJPkmytNCY9k5Lkwvdqu+1xqV6L8ne
0TMXmSB2ceUXPecWx2qtLnRHktmS+xVeEDNMekdki/ad4Ap9xyu2fzJD3Vk6
E67mo33U6v2rfQlm07u+ymSd4Uk96yxN8mRrDi3+TN5lLT+Fl8UZWr0vcjKp
q6vvXj0/meFCz8ssfZWxC5nZ6utkbrc4RHhw4fNXGha9nOQu0dFab1cZLjp9
Of8FX2mGXOjrFqcJBn6S5y3G0/NP5mRy/q2sWO4g3QUL+b+w62SnX31e9MUC
AwsdLjDhAqdd9VGLGVq7S+bS1d01Vwutrs1fZK/oa52Bb2fmN55Nvx890Z7I
kAVdrfHkWlZc5f9CLwh+uPruFcMv9NRVVlwxquaKBU4WGrvae9KPb+FJkeFX
v5Xkw8/E82L+Os9FjiX7tMVmWuci0/T7RTI3tPfXOLk1w4XOSvJDkqUX8lzv
96prdEZdnU1nbHIOQks639Z4Prn35AxbndXiec3SLQ9edfQV9+qM0lkh+F93
q37mwi40z7dYNMkPgnl0FrV0JTSj+fMq6wTPaA5MdnHLC0966krzC/4VfNh6
d1g+Z6v7lnlD8+TVvyc5aoHJBdMu8L/mRsGrOtOu9NbK87XObWlesMoyb1x5
WWTFVT4kvbPAvdr7upc1IwnOEUyid6rzQd9d6LCljSRv6BkmeUzcZUFLrbvr
Xrvy1FUvtJhHzFkwg+hckVfiu1oba53S8vKVfsRvaY+LXSR7/0q3wkeCV1vc
lcwWnXVXvXz1Xc2ua53yRi+/peOuMlYwm+hK4Ts9H71HzQYiWzQbvGXOydxo
dUryObovFjpu7fkLXfNZ+0h7TfhIeDDJaTrTdG4kdXI1zwUvLzCSYK2kX1pd
8/Y+SvadznMx86vsWuZ57cdWLyzoMNl9ra5c6CCt7QXWWvbak8xJflfv+i2a
F4y6rFWtw4Ve1roS2muxjc7nhT5a41ud1cI7wlNJzSe9v9ALSR3qbHziC6HJ
BR3qGT6ZZ7JPW70gdnc18wWvLWj+SifLvfDRzBGMscylSV8IHV7tca2bWpy5
wPMLubrWUzrThE6SvbDGM4JPRO+8RYc6J3VnrXW61onwcstfWkuCo1odp3vh
6pnJz1/1oPbygg5bcxCMvdDpC7MSM0z6a/mcrY67YqTkM5M8n5yb6G7BJ8ke
v8r2JF+JztXaSOr5ox680sbaOdc6bo1V3pJRrbklGUZ3pWAV4cfWTvWshJ5F
FiXZT59T5OTC3pNaTWbU8twEw4iuFCyU7HSd20lufDI3nW+aFZPnFDtq8XNy
7+IMrext5c9y1l2dJ+kXndvJvNIc9dGdJs8jzqn7S7DEwt5FlmoNJOemn5PM
urXzXOlq7b0pyYT6vsnza1Z8smuxl9ber1hRs+jy3HT+XGWd9k5ytoITtFZb
TJXUYfIMV/taznA98wVPtfhQ7Fqf82qGguU0g131yJX+xZxbLN3qx1ZeXX0+
yUjJjtOeutr72/tda0/PP5ljyb9bLH313aQO3/j+tca9IhM0z+j8TOZ/i2EW
GG9tVlee0gwv7pLsiCSDPcnqqyxt/XvyHeTJvnTGvj3/F3I7yfNJjV3pX/eL
3pHYddIv4u66E8XfuvvEeVq5vZz/Ous0413lwILmW/2SZIZWToqZJ3vqSg/i
b90dySwVmvnoflvvJgu9sMYSSd5LMtWyDvXvXs1H9FSLdbWel7lX9HIyKwT7
ie7WXl7o/STvJe+S9HiLAXQvCJ4XbKbnucYbC3yrd3el81bervV+kvd0Ny14
PMkAuhda3Z30QvL8Se5N7ldoI5kVSY3pzwv9JPlT9L7O7QUuTXpc+PGKJVo7
FTPU3mzxvPZpcm5a/wu59JbOuvpb8KR4jsifpH5aWhXaFvNf69k1zwq+0v2V
nOcVPy93VjKjhDaEr1tcncxA3WX6u2u5msxS4a+Fzm15X3fW1V4Ed4mMSnpQ
P1P0Y5KfhffFPEXG6lzVzxTZKJjnLZyc1Lw+c3JWV3cXu0jmQLIfRa6+/V0g
eX6tAc02Qntv5OSW5pMdLXpWM7DW/JMzJHvwar86xzQrLrO3vq/IN9F9wl9J
XtV9qvtRdL2Yp2aAt7wLCD5Z7oW1s73lvno+wrOazRZ4VXSE2J3ues29WsP6
XaD1rtHqhWTG6n21dqR75Conk3m+wKtX3dHq0wUGW+DhNU8tnOftPN/KwDfy
vPDOW/JwgTmf/K72qXivEe8LyZ0mPaU9fsV1C72Q3NcbeV50qPaXYEv9zCtt
tzT8pBf0GVo7TXJp0uMik5d5XnDaMs/rXP1/j33xPQ==
         "], {{0, 128}, {128, 
         0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "452760995"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.06975594907999039`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.9302239418029785`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztl7Gtn0UQxJ9AQsREpLQAMc+iBZsGHhJElpBMgJxRAjUQQ+yUBoAGqICY
ArAlAhKk79Pd7v1mZwLQZ+v8v9mZ2dm9T7769vk37z08PHz34dv/PX/6/otX
r55ev/jg3R++fnr52acv33/7+cO//737/vXF62cf/fHz45s/f3z87/ebX758
9vfvPz1+/Ntfn1/5+/87c+W783dWaln5/btn7tZ45XsX5yu1r2A4VfvK+bv4
d9XbqdGuvz/lmQodafmwy4fVGlX8zi5ud31Xe6M623dxuAtbcJ6tvSI3KrSo
wFPBf+fsqMjDUxg6Z3rnvl3dj7t6xGH3puGk1V49syr2GcLu1JkPNM908lY9
7yp2hoocqJg12b05uy6hdnKN5HcxLQMJ/VLBZ+fedWoeVc+yFX+q796ncCrW
Tqixuhfu8qmSD52eucsbbT6emke7dp7q2gm7BG1P3oWTUDu5Hwl7HS17T+02
FbOss09X8pbMbWc+kP2pjpOWe2RPdu51FZlW0Y+76q3Y52l9qshtZz4Q5h1t
Tz6F81TuETy5696Kf1uh1y78uzQi+P/UG2HFJ527RIXfFDOEljmdu8rU+V7R
UyuYT+l19zerf8ehTyu8Qa69et5l9+h/I0ya7xX+vIJfPVtWPK/if5rPybUT
vJrdow5nZ37S5uapnU0lWyr2PZr/aXP8VO3q3Gb3YM5xgmfu7u2K/q/I6grv
qfi/E+epmUKukZYhDvOxIj9p8905W2j80PxDwEnwW2eNNA+45cOurKDNd5qv
CP4n952K/wlzfJfutJ2BliFu+VDhmWr8tNmk4n/CvQT/KPZp5y5HqJHmAbd8
IOC/6wFFX1XgVOl3Ff+Tca54Q0WLvBF6cJ6a79Wzg+CrTpzq/Z4+3ftGmJSZ
ZA+o5EPn9wqezn2G7KtdOBX7PX26997OfS9vBH4+7Ppe8dWuf6vuq84eV+93
xdoJOE/te3kjnM2HCn0rdvtqbFN9RfMqmR9yn9I0Img3ldtqDnfpu1JvBeZT
M4Xgq104aV49xQ+t9lM4CdrljVDn/86c6cxemr5kX9G8SuaH3F8rOKd6m8At
gUP1t8bUHle5163fFWu/cq/KPCJrQfZA53eFps49Trg3/c7p0wqNsjNwdqpq
/+/6vlvjVJ+o+4qwfxJ0nLo/3N3/szPMyLFd34R7CT6h6bvrXsL+ObXfabWv
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
         "], {{0, 
         128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "1629569269"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[Rule]", "0.06405706703662872`"}], ",", 
      RowBox[{"2", "\[Rule]", "0.9333851337432861`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztlzGqplUThAcVcQ1mbkExncHExExXMIJiIAgaiIjgAox1HWLmblyEuQoG
JgP385zufp7uDv6fcbj1Tp3u6qq673z61cefv/bs2bNv3vr7/z5++e0HX3/9
8rtP3vznPz57+eV77375+t9//PHf//3z54/eeP7i+7e/ePH+Tz8///CX357/
+fkfz3//9YcXr/rzU37+vz/zqp9/1c/c4nPy9yf8M+dw8vMnO42Y56N/vsWn
6r0RP3PrvZmzelSHt3QbsYuTt0To/0Q/BG3TPD/T/6PvKPreo78ZjbXop+q9
hFw23uCJ15E7ZIQOCZ6fqSuCF2V2g+hsyvTYzGyq0hsh08ndnqCxzPwi9K5o
b6TtxeK90X0jgk/E96u8NFpvmVqt8qJOGUfOo8zMPbnZqr0QdFLVaY3dPqLD
EPoMTasEDRB8Mvrvo3cXnbkRnk94o33mmR5C612Zc6jyhEzfI7yrKuPIM6dl
LiFTaL5h78mEbpb5u0zVbDO1avcZu8YInCMyl/Z7RJVv0HpORIep4nzrveQu
UeW3Fp8h55eRc6bXVXl+1U679mQCZ8s3I/w54i5oPmPUmIUzzeuqPJ+2L8Kd
GjuM/ZuZPmD3GaPGOmVuxN6rev60mU/oMBFeV+WfNE1O6/ZVHYCWuZ3uoqqD
EfoA2R9ov8tUfTPzvmiat2vs5I2EzKV5Hc3zyTMnaJ6AjZh/5k5vecJ2e372
kb2XtlOy53ftMEbOtG9G78XS8Yx3EYHNnCdh79F3Qej55B5C86sqzoRvRmBp
Ha/rXRC8qGu3J3zz0XnS7pTm5wTOt+6F1n+is4nmRXYsoX9atE3+ZuYeCR2G
kCMRfanqm7T7NfZAC7YqUzrtNMI/CZ5PyNkqPyfkeOYeozVP+BnjDDPv91am
R98jebYRbyH0fELO0vyc3A2q9kLwf8IcLNgqXXXaKdlXH/W9Tv2TnCPR3SB6
trSfoWnMgqXpijafaA8kvDEzu2n5Hp0j0d0gs1cQ/N+oMSO2SleEzhzRkaq+
Sev5xnyf1g1oP0PTSVds5vej+1WVb9yaZ0RGZ/Z8QkZX/V5g7wZV/m/UiR1b
9X2CR0XkTuY3CZ3KktER2iPcAsG3CTpcbO0uMrP+1luqfMwy50zPt3Snqh3R
fLtKh4u92w0IfSa6m1XdPi3LMn2Y9i7LLWTmTvTP0PbVFXsriydkvfH2CT0h
Ol/s+qnqGwT/J++rKzbiZrt2swiPItxFVU840WrV7xGZ+snks92+N7aqb5Cz
L3pHNJ1k9sOI3MzM6Cr9EG6B5ieLPe9LhHyh+eEtL43oXWQvsmuV8G/R+Fjm
tlhOFtM8LRob/U2aF03ojYRdd7oFGs+u2O32OX5I+CY5yyy90bJrGnbCG8nY
qs5wcrPk3IzeUaZmyF5k7I1Vuya8nTa3yVhatz/BGjM3c0eZnhl9p+Q8omXx
5Dsy8iR7L0F7hNyM9l5CpyVk2eTeaNePZW5dscZuf8KHlrmWXhrhmRGa6dob
CRltxO58+nX7p2DJmRu9XwIfu24J/1amp9H4Z2K7zqdrt38Ua8xr2n5vzdz4
LnJvjOZDvgUClsBzWrd/CtaY17T9knsXYUe03hgxT8KcCVgaz+32555J6xXL
5+m/Rxj3W7U7y64JWNp8qryXoOGIWyPkUXSXM/KJ7mkTemNmvtPm3Gk+2+3P
seQ8smgjgo+9jxF40t5uuSMCluC90/ZIyKNbXmHhc/IztD5G5knIXNqcCdjo
WyDnCwFLziNyl7PobVpfrep4Ft3a72W7fdy9EPKI3OUI3pXpUWRtRPfM6K5l
mTPhXixdy4il5ZE907t6rH2eRm0bed6632ivI88kE9vJlzq9heCxxr7aiT+Z
J+EtnXyAgO3kSzSsxaMsfbUrf5puyTsyehoNS84jsk9O9ljjPMn8V/PnfKL1
PAFLyKOTvdvfYtcqbZ6WjmrsBlX321W3BKzRW4w+adcqra/a+U/uBhE/M2Hv
t7CdvKUT1qLVzL5K2xFBD7SZ3NJtdN5Z9p6JJeQR2evIcyBoNbOvVmmDoAfa
TFa3fA8hzPnWjuxvWa3ytWHp2+uxXt0SsMY5GzVDmyHh9m/tt0ob9puy8Oyk
W9ou7HNerEurj76RNueufZvG065bgsZO7os8Z0u2kmdI0GqEJmk7IvOk3ZpR
t8a9W7oWbe9GLE2r03osjed67Ex9Zu4lYlbGvRux0Tqp+iZhzhaek3W7+uTP
arEurVZ9k6BzC0/LnVo81rJ3y6wI+dgVm6nV6G926rE0nrQ7tXgsee/kfCfs
bho2+u8J+jfO2agl8jxp2UrYHe29xt1Nw9I0bOyxdp523U7Wp+W9i2VqlaDh
Tj3WwtNy46vP845d9V5aZ1hszo3TvIs2ZwtP2o2vPp/Os+q9hPkvNifHCZ5g
77E0nuuxLn3SOBvnv9i7GqN5Aq3H2nmSdTtZnzTOi+VjaRq+hbX0WAtPiz9M
0yeNMy33F8v0E5rmaTsy8qT5wzR9VnEm8Fns/9PGeperx9J4TvNYsj7J/y5t
hl2xxluj8aT1WDtP8r3Y9Rlx+7Q5LLZfFtO8y9JjLTwt3mLXZ/Tt0+YwGUu4
awKW5l0EbRh50rzFqM/MnKXNoSs2M9/JWCNPgieQeRo9lqzP6JxdL9puT7s1
Gk9aj7XzJN8pTZ+07yz2/+WyUfOTvcvSYy08yR5r0WfEzxNuzY4l3NdkLM27
CJo08iR4LE2fVdog3DUNe7IXwn3ZsUaelswi393kDpD5Flr+ErAE7U3DWrzL
fkcWnmR/qNLnrbdY8jcaezJbmvYmYGneNe2OtgPk6DOzo3bK3+32i6V5AvkW
jDy3A9Tui3bXj/K06Hyx/byLdkcWntM6AGFulvylaWCxzFuj8STfkZGnvQPc
6q4Rb6Hl78l8aBpY7Bzvot2Rnae9A0TMkPaW7faLNWK73tE0nrQOEN1jCW/Z
br9YC9bI05JZhBwnd4CIXXTlQ97FYvnYCXdEyCwLT3IHsM/8hA+B/2JnYo13
1Kk7TesAT/lmp5kTfo9Y7GLtd2TvTmSe0R1ggjYsu1jsYsl3ZOmxdp4RHeDE
uywzt+yCzHOxTKxF8/buZOEZ4f+38oIw86o9WjSz2H5YmndN607GbH0KB/vM
o79J7mOLXSzZuyzZSuP56C6iv0ObeXQmGvvYYhdr5GnJLALP6HfRZk7bhaWP
LbY31nIv9u5UxTNTD7SZ03YxoY8tth+Wdi/TulP07qL1YOkJZP5kfS52sZZ7
oWVrVT7SdkSbA4G/pY8tdrFGnpbMuvVv3crrR79Dm3m095KxFp6LZWIt92Lv
Tre6a2Ze02ZO2AWh55B5LrYflnYvXbsTgcNTsNEzJ89h+9hiF+u9F0K20vpw
JrcIbUzQDGEmi12s8V6q8tHOn8Y5onuQZ27sY4vtjbXcS5VvR/tSZu4QON/C
WmY+rY8tth+Wdi8R3SnTl6q6XyZnWn+w9G1LH1vsYu33YuQf4eEnnKPfuH2b
38cWu1gyz5N7IfCP7uTGtxD6w/axxU7Ddr0XAofM7pe5R3uPtfA09pnF9sOS
74Xch2kZFLHHaT12+9hiF5t/L13vKIL/SYYS3kLoSGSe5D622JnY6G4f4UvG
OzrhfAs7OX8JnYrQxxY7ExvtsdG+ZLmjEw4WzVjy18LT2BsX2w9r91janKve
SHuLpSOR90uYyWJnYsm+ZLmjrm/ppA0az5PbtLxxsUxstG4zfanqjqpmS9Mb
WRs0nrewFp6LZXZ7uy9l3tGjHMhv6ZS/XXmSe+Ni+ViCVxB8qSp3LG+x5C8B
S9MwYSaL5XR7glcQfCnzjjq9ZUJm2Xme3LvljYvld3u7L93KTftbCB5LmyeN
5y2shedimd3e7kuP7iv6O5lvoXksTRt2nhZPWCy/2xOwmb4U3RVpPdaSvwQd
knlGZNlic7AnvcKYa4Q3Zt6XZeYW77LMk8bTqM+uWEJnsNx7xL9V9U3azI2e
ME3DBKyFJw17cl+0u7N3lapv0mZu8QR7Zll40vRpxxJuZzK2al8nuU/zWNp9
WTLLwjMiy6ZhT/LdmGs07C09E/qAceYW77LMk8bTqE/CLROyqRPW7led+qHR
EwgasPC06DMaW9UVF5t/R9H87f3Q4glkDXTiSdPndvuZWItf/QXbG6T9
         "], {{0, 
         128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2240312508"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "\[Rule]", "0.11858808994293213`"}], ",", 
      RowBox[{"2", "\[Rule]", "0.799923837184906`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzd17uqbVkVheFCQSrzGXwFjbUQA/MSBMMSFARBUPASCAY+hMYGvp2xoQqm
gpvZv9baPIGy6rD2XGP03i7//NZPf/Xlz7/22Wef/ebzf//fl1/97vu//vVX
f/jRN/7zHz/76pff+fYvv/7vj3/67//+8/kvP/jH9/72w99/8ddf/PGL//X5
n9/8+3c//+2Pv/jJnz//vz7/P8/8X89/8u8f/duPnv+jz7w6z9XZru6id/RE
P1c7EnMTOhffF88RuXGlpSvfJb32ZIZX51nIgaucv5r/Vc60Zpg8m8hq/bmV
b7rrk15b4BCh7SvNJPVwlZMLO0qy6xsZI6n/VrfqzzrfdNe/nakWGFJopsXP
T+aTzNWrM1w9U+hfdIfWv5iJzqgksyU1I7J0gan072oevvKvZr8kW+r9it3p
HYnf0uydfI9odeJCl+l8XmAqvYsFXkrmqtjvAmfqHr/qDs2EgjF0JogeFBoT
/LycgfoMei9JBkty0RNWEX0kfHG1X8F4mm0WGENnXXLvT34rmdVrGXilGZFX
2puCl8ScdRYtdFmLMwU7JXOstdOrcwpeXdPYGk8mu0ZoYIGXFrhI896nyplX
d9SZ0/rbhQxPcl3Ls8kMTLKQ8F0rZ1rPWeDGlpZa81y4e/JvnzCP2G+S6xY0
JvbVek4rW5L8pp9zpZkkb2hNJvP8CWcuZKPw1JP7rmVOS2OaJ1t8rjWf9NHC
c672pf2ynA+6l99y9yuOXZjVGqsks0vsopWlV98ReXWVyS0mWZ5VMkvFfK5y
Kdkjb5+Vzhzd1y2eXGA/8Tl5d9HFV0zyllkl80Fzb3JHSa5bnpXIHN3XLT/q
XBLnEd5vMUaSST7qL/0dkWmtDFzo9CTXXZ1T54zoo1YPij7VntVduXD3tU5/
8pyr/Yo+EmfT3Sc6/cqnSUYS3hTM0GKVZHbpDNRduXD3t3hNz/OqxzVXvPHu
Sd4QPSLOv9zd+neT/fgkt3VX6tzQM9Re0/3+9gxfu3tSJy22ueK9BW2LfFvo
bp2lyXeHtRkKr4k5aE2+JcPX/PgWX4sdLXSc4NU1z4rziBxI7mUhP5MsLX73
LRm+ljPJTG7x83LH6blpzyZ5UjxHM+RCJmuG/OjZkiyxkOFrOZOcc5KR3tJx
CztNzmf5jkmGfItnk2dunV9nuNZVq2cXtP2kgxY6bmGnyaxbu6M4z5rXxAyv
fmuhmxYyXMzwius0HwptL5xNz1PoNpl7yTsKPlz2mp6h+F3dTWsZvuZxwUhr
2m7NvMUtV+dJZuCC3jTba20kddLiN33+VoYv7E5raYENkjNPso3g85ZOrr5z
lUVCPyI/xXPWmHb5zMse11kkOl0w0luy/cl5nuh5IQNFlwlfJzMw+Zy1PHzj
mXXmaJ0ku1LPPMm3OtufZFSyu5NeFt7UzJP0yBoral+8/czag0/Or/NWn7nV
lVdzuOJbnSfCC2IXgktFF4tuWta/9sXambUHW92k93WVRQvZ/iQ31vJkrYvF
bHX+tPpojW0ED+sM1/kjclj7MZkVra7Us1rOkysPap202EzsS2svyTbJcyZn
3npHSM5He0H04ML8r1h0QdtreltgswV+EP4S+aM1n+xNzQ+an1v6T2Zacv5C
t29nwuUMufJRix+u/KXzZ42d9O8KHV7dRXdK0iNPnq85UGRUUv+6i9eYSuxF
Z7vw2nJOXnm8xTYtDl/gjQUGELvTGdXKrqu5JVlUdHrLv63u032UZJtWP17N
OcnSLd4QftTMo2fbmtUyzwu9vWUOye5r5aTwo+jZFhMu71efZ4F5FrShn7PA
8yIn3ziHVo8kZyXYRt8ryYRrc2idp3WGlm5bOb/GhFe89MY56B656i/Brgu9
LPpds2Lr/Po8SWZbmE8r51s8/9EZJj3eYuM1XhIcq98jdO+L/S7MYWEvrZm0
5pPUs37XWGAqwaKCjd+eXS0WEj3yxszRfSq+s5CxC/Np+VTs6Mojb+FqsYu3
ZFcrcxb4YTlzBI9dfdZsI86m55BkjCs+EZyvPSXmIzrxLQz5pKNFbqzxZDJz
RJYm80HkbSsPkzNJ+lGwrujcK+5K/rvwrGDIlq5aTL6cObpHdAcl+Xatg5K7
01kt9nL1W2IvSQZoMaTWlWb4K/+2mCGZmYKXdBcL/7Z0m8zYVl8/YaSkNkSe
vKWnrnZ0pckrRtUzEZmz9o4jztDik2TOaP0nuVHk/xPPJjPn6mwL3LvQfQv5
ILzw5N+vckbPUGSO9pTOLr2XFs8kWVf7aI03NFOJWeleFtrWuk2e+clvid0l
79jiuivPLuhkuZefPHPhDMm8EtySzPMnnr3K6rVMe3J+rZkkTwqWW9Bqi5+T
vtOd++Tfk/fSbJn0cjInW7zdyrQn59dZLfquxVo6Q3QHtbq4xV1XWhK9nzy/
uKN+L7iaYZK3k5kmOP9qVmt+13klejbpcX1m/Zwk57dyT2d7S6tJ9kuyyho/
JPNTM4zWc5IB9H7Xnimec5VLrQxfYB7tr6vz6M4SGrvq9Bb7JX2hc1h48+qz
5pm3PFNk3dX3kzpZYB7NeC12TfapyHnBaZrD1/hZ516LDVr8rJ8jOkjngPad
Zh7d+3q/SQa+0tUyZ4r8TN6r5U3NBkl+1tx1xUjiPILfWkyiZ351hgX+udKY
9oLQpD5P8l56R6JnF3isxV2Ch3XvC77S+r+61xXnJ+cs9NnSc5Lnr1illW9X
2tA9u5YhSXbSektmteYu8V7w0e9feXmBvTXniBlezerJ3pNsL/STfGZLt605
rOlNcG+yB1t3XOtBzd6f6n71fJK9KTJWaLKlWzFnMQehN8EVuouTvXOVV8mc
FDNscfXyPJ94Spz/ar9PdiQ+L7C90FJLby3NXN1d6P/qtxbeI5K6TXJ1kiu0
p66+v8DSV3zYYiGRvWIOV2cQ3ZF8XxCsKM6p5yzeBcTdBWcKrhAdpPmtxdJ6
72tZl/SmYNrl2Qp+vupW4f0rBljI59Z+r2aSZOMFhtR7THZlMutaWao7ojVb
nZmtc17tUTNDsrMWZqu9ucaQa/q/6spkL7e8uaBP3SPLO9W/tcBRgs8FD695
U/DkQj6LHT2Zp+DbZIcKDkzq82q2rb9d0I+Yg9CM+M6TGa558+rub+ETvS/d
a60OveL5q2cudMrC3y735gLbJ7MlmQNJH72RT668pvWvc+/KC1e70+8UC14Q
f9vSj2Z70Zuaz5M5kPSRzsllvl3Tf/KcV+dPZrXoDqHJZAe1ejPpxysNa/bT
Pl2Y/9v59skd39J94vytTNZ5lcwinSfJHSX9eMXAC8yz0K1JVlng26vZrnWf
zhCdRWvzuZqD9ovOc5GxC+8ISebRHZRkEp3Da3vR31ngWO3fFt+K3Na51NJP
K8eu9vXGM7S8+UQzy3yb7E3dfUmOXcgHzbfLbK9Z6C05JvyoeU+wn86KVrYI
Dbd6U+/l6u5XGbusVeHZBb8kuy+ZYy1euuoXoSWtkxbbJ7NR5/OVNq7ukvTm
VT4kNdPSxnL3tXJM+EXzic4Z3fuCE7Ruk1kneEkzVZJzrny9cC+tDXFHwSoL
GXvld/0dfZ4k34q7JzlKZ3gy25f5RGhs7Tli/jrbW6yiWXGNbfRvLewi2X1X
M3ziL6GxJB9qnWi/LHCX9ldSb8us0vLIAmOILBKdpXu2xZOtHBB9JLq1tYsW
dyWZVutN/K2+e9Ija+yU7OirXTzJCp2fnxLvvWUvglGT3JXMB53DyYwS7J30
SIudRI618iHZ+8kuW+A9zZDJ+7a6+OruyTmL3kzmsO6LlkeWe7+VD1pvSZ5c
5r3WXlpslmSGNX2uzTx5/gUftfgqyRu6j1rZ+CnxXlJXSb0JPSS7fiGX9DMX
2PvKO61zLvBGcoZr+xVn1nsXDKbZUuSq5orkOcXvJlm3dX6RpUkGbvFGso+u
vJPMzAXeS3LR8vuL1qTm4Rbjtfauz6/3m9RzkjcWPPJkPgu8kdSM7s2rWSXz
+S0e0edvdcoT7SU5M8kYy7zR8siTvtYaa3X9lX4WPJ5kmLd4ZC2Hdba3GGMh
E9Z4Q/ND0iNiVgtdLzJN5/YTPSf11vKIyJyrHbUySveX1s9beEMzedIjrcxM
sqvoMpHbC75rMeqT+bf0v5ZRor90p7+FNzSTX/FkkocFV2gftbo4ua8rLbUY
Nck5Wj/JPQp9tnS4xhtrOSD6IqnDpI/0XlpscMV7yWzX3S3muZCfrf5K6lDw
3hqTa/7RdxS+1j5qaVh30BO/6GwXDCB4QP+72N0y/7R+6y1MvjB/zdgLbJ/0
48LZBDdeeUG/C7R2LXwhdqT5R9wlOZMr5rzyuO4aMfMnHklm1NX8184mNHnl
BZGNglWSvhAaE3rQXk7qVjO54ChxtmR/aTa+8m+rW4VORHcs7LeVt/r82rM6
u0SGJHUrtC0YXneZ0MAVjz3hB8G6rbMJvk36+qqLdd7q87fYKemF5H5bzxF+
18/U7yaiKxdye+Fegm+TGXjFSDpvW3fRnZX0QkvbmoWSmannpvlQaP6K8d5y
r2RnCS1pLro6g2AwzcPJc+q7CJ3r2erMFJmQ5I3kO0jrPJqNdWe1GFXnQ5Lr
RIcKVtSa0b/1ltkusNxCzoh3EL2v5OdWtj/RbcuPV3l+xXWCxwQrrmVpi3v1
bK9+V7DQ2u8u72v5XsKnrdmu+THJIcJrSS+32L51d/Fu0vpO8nc1+wmPJ9le
Z7tg5uWsazHn2vvO1XfWNNy6u/DFchaJ30ryg2ZXzbRJLtJ61vtt3b2ljaR/
1zTQysnlzBH613652nuyLzTTtvrxKouSz7/S3pV3WtoQHn/irxYLLWSXzpyr
+Sd/K/m7oi+Smaz78S1ZJ/Jc/9YCn4juTrK9zrGknq8yZ5mvNJNottF6TrKB
zrRW1mn9CA6/4pxW3ibzR+eY9rXm0jW+0t/RLLSmZ73TZG9ezUcwmO7EZT7R
fJvcaTLbhYZbmayzTsxQZ6zWc5INrrSts06cX+hH96PgE52TV/kjckzoX3Np
iz+TPLOg56t8SHLRk1m1mErvResn2Y/J95EnOam98+Q5gjNbOtH8qblRz1zr
WWvjymuaOVvdsdAv4vlJ7kpmpvDOAs9cnUHnhubqNT4Xek7myVXmCC8kuyO5
r7X+ErtY0Il4R1jQpMj/5H2T3k/OXHST4OGrzNF3WejiBY4SGaX7oqUTwZlJ
nmkxWysrFt5lhF9aPJ/M1SSvLni2xVE690TGJnWidZvkGZ3DV72f5JakfnT3
aZ4Xubqw94U8X+MfsYu1nGn1TpJnkmyffKcQLJ3UmGaGq5kkn6n3rplNM1Wr
B5PzT2pDZ6DedavXnsxQ+Egz20IHrXGd0PCT300y1dUulntQ+1rfK6kZwQNX
WtIZcpWxLd4Qc9AdJJgkyYpiVpqNBQst96DQQNJHyQzUc3gLC12dM8kbrdzQ
XLTA9oINWr2W9GyyB1vZm2RdnYFab2sslOR8zckiV5N+fNKtWudrmaP5QTCh
/i2dvYIzRW9qjkrm/FU36b0k7yXydq2nnuzrSuc6AzWfJM+c5DftkYXuSHZ6
q/sEC7UYQ898bW5rHrzKK80eV3cXmanPvHAekaWtrL46s+6+q7xaY4yrd4q3
zG3Ng60+fctzWnfXXljjQJ3VyYxqsX0yG1vM02KGBd1e6eTKm0IzC89ZO3Pr
HUFzoObJq8+fkheS2ag1tpa9QrdX3rnqYj1Pcc4nd2lxzlUXJLV9NXORz8v5
2drjMvMkP+sdtTwo/l34SD/niqXf6PeF7E3uqJXtmus0H7aYp/V5gb2XZ570
kWCGZF69xe/6PFpLH9X2cn4KlrvK8wVOW2B7wd5Jrnhjl72RjZf9fuUd3TUi
57XHkzpM9ukCp7XYXvfmAlcsdJlgP8G9C92X9E6ygxZ8lDzPk/mL8yc7eqF3
xDn1nK9mnrz7FU+2cknoTTNJiyU0m7U8Lna3cH7BPHpWayyqWS7JP8vMcNU1
ogdF913xoWYJzT/iO8ls/Ojc/gVqyXdI
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "482556537"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.08468368649482727`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.9148058891296387`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzt17GqWEUUheGLQrDWF9DKxkrrGIQ0trGzu4JWASEWopVv4vNoYeMT2PoU
JmB7YTZn5sy/9vyFcoX4zTpzZ2btfPLdj69+eO/h4eGnD97+69Xjz1+9efP4
yzfP3v3H94+vv/j89ftvf/zt/3/e/fzPRx+++OPvX198/fL350/9/Nlfz55/
/OenX77899snf37qz1ed6lrV/NX/d9aezNrPFb+LFd945TyQv311tll7uOvu
rF53hT/rHVt9x6/8jnbt52pz1ru02lxx72adz13dl/7tu7LN6u4Vnb7ift3Z
favP9p0zGPk93NURd5p33rvVMy3h7qR8++ps1Tuy626uWJdw71a/w7vmbdp+
Et7wFXu+ax5bMV8R7k7Kt8+6d4Rzvmu2SZwVaXnI7xhtfzr1wor3lnB3On37
rE5JnO1n9XLivaN94661UvYnsRdWvwO0fUv5dvL7TDjDKbM04V7ceZ5X30fC
/qT3Qkpfk38XKXMgrTuu/F0m/Z2hOVe6lXBfNPnzM/l7Cd9Om9lo+1/tAkJm
8v3dNT90+n2lmORsKd/bNSf593hlLqVlJpyTqkO7L5rMc5Viprx7p832V96f
lN8p+f52nRM07YWTzfRvmTWLpu8D4f4m7oMm/1xpnjnbV81qXxAy08wVf/9K
3AdNeyHd7PQt1TfnhH2g3V9aZk2+Sc6WaHb6FufPLDMxsybTJGcjmJ2+5YpZ
7QtC5k6m91rTXrh/vkr/lhXvjP3InEnImTV7mORss+5R4rfMMq/MnJ32gWZ6
rzXJJjkbYd1Es9oXhMynmd5rTbLpbM83R9Zyb5nn+bR7rdnDdLbnmNUuIGQ+
zUzJT86myTed7fnvDC3zaWZifnI2zSwzPT/BHFnLzuWY6fkTs2nuNdPzk80T
3pauZnr+9Gya68z0/IlmtS8ImU8z0/PbC5qd8ieaI2v5+8oy0/PbC+eY6fnT
zWoXEDJr9shvL5xjpuc/waz2BSHzyWZ6fppJzpZopufvao6sZY9nmen5ySY5
G8FMz3+aWe0CQmZNf3c0k5zNeUNzxKz2BSGzpjMY2SRn81ydaY6s5RnIMtPz
n2aSs3XKr3m9CwiZNb2/J5jO9pp3mtW+IGTW9P6eZjobaF4xR9bybck10/Nr
rusFWmbN+81qFxAyazrXac49DymZNffOirTMmna6prO95tw3wXPVz0zPrzlu
JmbWvMd0PjzHTM+vaY9rrjOrfUHIrGkvnGwmZtbca46s5bzRz0zPf7KZmFmT
aVa7gJBZ856/35Hzn2YmZtbMMqt9QcisOfdtSczfyUzMrJlljqzlWe1tpufv
ZCZm1sw1fQc0O+VPMRMza/Y2q31ByKw5d+ZMzJ9iJmbW7GeOrOUMo5me39le
U/N6FxAya97zXiXmJ5iJmTU1q31ByKx5/xkg53e219S8Pud7/jXT8zvba2pe
7wJCZk3ObEDOP8tMzKypWTWrfUHIrHn/G5iYv2omZtbUnDXX+Q5opuf3DGtq
Xu8CQmZNjtkpf0pmTc0VZrUvCJk175+N0/OnZNbUXGGOrOWd0qzOBrT8iZk1
NVeb1S4gZNbkmLT8tP3R1Ewxq31ByKx5v0nLT9sfTU2yObKWs5Zm9Qw422tq
8k3yLKfJN3etlbI/mpopZrUvCJk1meaVtWjfoqnZyRxZy3uqWT0Dzvaamnyz
2gWEzJpM05lBUzPXrPYFIbMm0+z0LZqancyRtZzfNK+cq/Rv0dTsala7gJBZ
k292+hZNzRNM5zfNWWanb9HU7GSOrDVipu+D5nXzyhmjfYum5gmm91Rz1mxf
7Qjat2hqnmxW+4KQWXPvbL+6LzQ1NeeaI2s5v2ne6Sfuj6ZmolntAkJmTeZs
X/UT90dTs6tZ7QtCZk3+bF89Y7T90dTsZI6s5fzWz6Rlpu2PpuYJZrULCJk1
+bO9501TM8us9gUhs2a/zIn5NTVTzJG1vKdZZnrmxPyamolmtQsImTVzM9sL
mppMs9oXhMynmYmZq12WmF9TM8UcWct7ynkPUzKvnj3I+TU1U8xqFxAyn2Am
Zl69D4n5NTVTzGpfEDKnm4mZV5vp+TU1yebIWr5d68zEzIR+TMyvqUkznbWc
7clmen5NzRSz2heEzGQzMXOKmZ5fU3OXObKWM637QDDT82tq0sxqFxAy08zE
zIlmen5NTbJZ7QtCZmf7M830/Jqau8yRtXwPczN3NdPza2oSTO9Uj8wnm+n5
NTUJZrUvCJmd7c800/Nrau4yR9bqOmslZta0FzQ1Z5nVLiBkdrbX7JRfU5Ng
VvuCkDlxnzXvP7fk/Jqad5ojayW+sbR91tx7BhLza2quNqtdQMicuM+anHmG
nF9Tc5dZ7QvCXJe4z5r3zwaJ+TU1d81IhDuVvs+ae2eDxPyamqvNahfsur/p
+6zJMdPza2quMKt9MSszeU80c830/JqaK8yRtVbfKdqeaPYz0/Nraq4wq12w
qyM0NVfMG4n5NTV3zUjeL81EMz2/puadd6E6z6fvieY5Znp+Tc0r5qy5qNOe
aPY20/Nraq4w0/NratoLmprX53x7QbOrmZ5fU/OKWf0z9oJmJzM9v6YmbUby
fmkmmun5NTXJd8Fe0KSZ6fk1Na+YhPz2gibBTM+vqXnlZ1p+e0HTu6Cp6Txj
L2jaC5qanlt7QdMZSfNkMz2/vaBJMNPza55jpuenmb4Dmp3ya/Yw0/Onm/bC
OWZ6fs0eZnr+E0x7obeZnl+Tb6bn17QXOpnp+TX5Znp+TXvhNDM9v6azvSbT
tBc4Znp+TecEzR6mvXC/mZ5f0zlBs7fpe+Usp+l50NS0F+aa6fk1r5vp+TU1
7QXfAc1xMz2/pqa94DugaadratoL9oJmj/yamgTzhF5Iz3+ymZ5fUzPR7NQL
/wFQ4s7U
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "1597446147"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.24808219075202942`"}], ",", 
      RowBox[{"2", "\[Rule]", "0.5669623613357544`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztmEGqXdUWRYNCEHtgUbAFWlELPuxCrFiNoKWAEBVJRWyMbbAJdsNuCFZM
wGrg3dw11xxj31v4n/zPeeeevebcc469P/7ux2c/vPfkyZOfPnj9X8+e//r1
y5fPX33z9M3/+P75i88+ffH+63/+/v9/3vz7y6e/Pfz97+cPH33y6uHPn//4
6q8Pv/3qny9+eXjM//+2Z97270ufv/Tfl37zpWtJz+TSb3jM306ta2q9Ce1a
frhG0ym90t88Nf/N2U7lzzUzIeypzRzYzPz0/k3s60QGbr5/ar2b2hH2VKv7
Nvf4plc384ewH1vZmPZJaz6b+zqh0RR3pfdmiwfS30zYmwSPJXRpcaZxPxJ4
jODVxO9a+ovMz63vITOn0WMJXWjsYd+PNB6jeZXMD4S5tc7RLU+mmZPG85v7
aMq3Cfaw70djztN43qJ72rfp+RAyf3M/Js7jtP075eHWDC37kdx9BK+2+NDO
D5vzT58ppvKKzC0WHVu6J7ilxQ+EOVj2RXpWdn7YnH8r5xPPtPLWct9FWBeZ
jVvsbeypzQy5BZ5PfD/hPYneIfC8hf0I+Ta1XmNOErLxziFdfkhrTXhPej8a
/ZaeP2FdLY0I+31zDi1/GjnkFubfesayH2m/e1K+0TqRxvOWHrdzCIHnCcyw
mfNT9zbG/ZKeG2Fdlk4k8Hx65pvndDKHEHiefE+SyPkpXW6N5y3ramUCOedb
+9dyB3ULPE84L6T3TmIPGv2W1pGwrpZGib1PngOBTywcQuB5AjPQzqotr5J5
nnwuNnaife+3enxzVpYebN0zEHI+8UzLt4TsImday/NTzxj3fqvH0517Ks/T
zrCEvHrM3276lpBdlnW1ziaJnCfPgcYniWdO4nkCM6R7M+FbO/e2+iu9rpZG
ib1PngONT6bWeCrPk/v0mmfI5zjy7ya8RON5Qifa936rx43vJ/A8oU83c55w
jiP/rv2cYulE+95v9ThB62vOCK1Op51h0zk/pcut8bxlXa2zSSLnyXOg8cmm
1pfqReh0AjOk905iD9q5t9Vf6XW1NEpkCHkOND4x7kfae9J9uultwh4k75eE
RjSep3nMuPdbPU7Qmna3ZulT2lmV5ltCdpEzreX5qWfIGULIQ5rWtDPdJqcR
ejndOy3fErLLsq7W2SSR8+Q50PhkU2vamW6T02jvSfvWzr2t/kqvq6VRIkPI
c6DxiXE/tubW6tP0Wdgyf8LvJvKNxvOETtzMkFYOEHievB8tHkjfkyRyfure
5tT9YuSiRA63vEo7IxPykKa1hect9ySJnJ/S99Z43rKu1tkkkfPkOdD4ZFPr
k3iecE+S+J40a5F1T+tIWFdLo0SGkOdA4xPjfiTwPK1TNvNq06u0/WLkImMn
EvadsccJWt898G57gdYpNN8S9CL7OZHDmx5rsZwlD2lan8Tz9pyfurchzI2Q
XZZ1tc4miZwnz4HGJ5tan8Tzie8n/+1UzpN1J/R+el0tjRIZQp5Dq8cJWlvm
tjmfzfekf/eWed4yT0snEljO2OMEre8emM2NS79z897m1P1i5KJEDm96u8Vy
ljykaX0SzxNyo5XJ19zbkHUn9D6B5wlnYfscaHyyqfVJPJ/4/tZ3Tt3/nMS9
rf5Kr6ulUSJDyHOg8YlxPxJ4nnBeSLNTaw+S94uRi4ydSGA5Y48TtL57YDY3
NtmGPDdCdpH9nNB609stlrPkIU3rk3iekBv2+x+a7oT+IvA8+YxpmQONTza1
PonnCdy7yfPXzMSiO6G/0utqnU0SGUKeQ6vHCVpb5rY5H9p70nlF5gdC7xM4
ltCJBJYz9jhB67sHZnODdt9i153Q++l1WTqRwHKWPKRpfRLPE3JjM+en7m02
985mdpH9nPDMppeMc6DxyabWFq7bnA/hOzd1OSmH099PZoxNb6dz3s6lNK0t
c9ucD+E7NxnM7rd07xM4ltCJBE2NPU7Q+u6B2dzYZJsp3e1+M/ZUQutNb7c0
tfiTpvVJPJ+efyvnE8+0etPY+wSeJ3SifQ7kfZHW+iSeT3w/4T2J3mn1puXe
g8bzNG+ndbRzKU1ry9w250N7TzqvjH5r6WjpqU1PWuZA8+em1ncPPP79rWcs
eUX7XUsOEGYydW9DYCSLP43nULsH0vckiZyfurfZ7E0CuxIyLeEZwkzIc6D5
c1Prk3iefE+SyPkpXe48331/6w4toSl5DjR/bmptmdvmfAjfSeBSst/SOm6+
3zITAsul+9rICa0cNnpg806G0Dt2v7U0ajEMYSYEljvJn5tan8Tz6fm3cj7x
TKs3CexK45lWNyVynuB5iz9bHELzf2s+6e8k9E6rNwnsSltXq5sSayd43uJP
C4e0eiQ9H9p70txi9Ft6/rR1EWZCYDm7jkYOOckD6XuSa54hn+PIv5vw0ua6
aGdhAsud5E8jh9g9kL4nSeT81L3NZm8SeJ7MM5tdn8h5Qh/RdDyJQwg8T74n
SeT8lC63xvOWdW1yxdTayR1N86eRQwg8TzgvpNlp6j12v6V1JKxrM/cIaz9p
LadyiN0DFnZK6G70W0sjGs9veozAcif508ghdg8k+JmQVzRuIWQXmWcImUDu
tfRvWXiSkMPk3CPkM6F3Wr1JyC7LulqZQMheO5eeyiEEniecF9K9mdDd6Lf0
/Anramlk9zxNR4L/T+L59Ptbz5DPceTfTXiJxvPkfL70nWlv0Pxp5BACz6fn
T8v5qXubzd4kZBch02ieT3j10u9v3RER9oWFQwg8Tzgzknme0JuE7LKsq5UJ
iZyn6Uvwp5FDCDxPOC+k905iDxr9ltaRsK6WRom9T9OU4E8jhxB4Pv3+1rky
fY4z+q2lEY3naR6z7H2CP40cQuD59PxbOZ94ptWbhOwiZxohE655xrL3Cf5M
ZMgt8DztDEvIq8f87am8tNkjLZ5P5+dUzhvnQOZJQg63Op3ADOneTOhu9Ft6
/oR1tTSi5WR6Di1/GjnkFubfeoZ8jiP/bsJLNJ4ndKJ977fWYuQQAs8TmGEz
56fubYz7JT03wrosnWjf+621GDmE0Om0M2w656d0uTWet6yrlQmJnCfPoZVj
Rg4hdDqBGdJ7J7EHjX5L60hYV0ujxN4nz4HAJxYOIfA8gRk2vU3Yg7T9Yj8X
GzvRvvdbPb45K0sPtu4ZCDmfeKblW0J2kTOt5fmpZ4x7v9Xj6c49ledpZ1hC
Xj3mbzd9S8guy7paZ5NEzpPnQOOTxDMn8TyBGdK9mfCtnXtb/ZVeV0ujxN4n
z4HGJ1NrPJXnyX16zTPkcxz5dxNeovE8oRPte7/V48b3E3ie0KebOU84x5F/
135OsXSife+3epyg9TVnhFan086w6Zyf0uXWeN6yrtbZJJHz5DnQ+GRT60v1
InQ6gRnSeyexB+3c2+qv9LpaGiUyhDwHGp8Y9yPtPek+3fQ2YQ+S90tCIxrP
0zxm3PutHidoTbtbs/Qp7axK8y0hu8iZ1vL81DPkDCHkIU1r2pluk9MIvZzu
nZZvCdllWVfrbJLIefIcaHyyqTXtTLfJabT3pH1r595Wf6XX1dIokSHkOdD4
xLgfW3Nr9Wn6LGyZP+F3E/lG43lCJ25mSCsHCDxP3o8WD6TvSRI5P3Vvc+p+
MXJRIodbXqWdkQl5SNPawvOWe5JEzk/pe2s8b1lX62ySyHnyHGh8sqn1STxP
uCdJfE+atci6p3UkrKulUSJDyHOg8YlxPxJ4ntYpm3m16VXafjFykbETCfvO
2OMEre8eeLe9QOsUmm8JepH9nMjhTY+1WM6ShzStT+J5e85P3dsQ5kbILsu6
WmeTRM6T50Djk02tT+L5xPeT/3Yq58m6E3o/va6WRokMIc+h1eMErS1z25zP
5nvSv3vLPG+Zp6UTCSxn7HGC1ncPzObGpd+5eW9z6n4xclEihze93WI5Sx7S
tD6J5wm50crka+5tyLoTep/A84SzsH0OND7Z1Poknk98f+s7p+5/TuLeVn+l
19XSKJEh5DnQ+MS4Hwk8TzgvpNmptQfJ+8XIRcZOJLCcsccJWt89MJsbm2xD
nhshu8h+Tmi96e0Wy1nykKb1STxPyA37/Q9Nd0J/EXiefMa0zIHGJ5tan8Tz
BO7d5PlrZmLRndBf6XW1ziaJDCHPodXjBK0tc9ucD+096bwi8wOh9wkcS+hE
AssZe5yg9d0Ds7lBu2+x607o/fS6LJ1IYDlLHtK0PonnCbmxmfNT9zabe2cz
u8h+Tnhm00vGOdD4ZFNrC9dtzofwnZu6nJTD6e8nM8amt9M5b+dSmtaWuW3O
h/Cdmwxm91u69wkcS+hEgqbGHidofffAbG5sss2U7na/GXsqofWmt1uaWvxJ
0/oknk/Pv5XziWdavWnsfQLPEzrRPgfyvkhrfRLPJ76f8J5E77R603LvQeN5
mrfTOtq5lKa1ZW6b86G9J51XRr+1dLT01KYnLXOg+XNT67sHHv/+1jOWvKL9
riUHCDOZurchMJLFn8ZzqN0D6XuSRM5P3dts9iaBXQmZlvAMYSbkOdD8uan1
STxPvidJ5PyULnee776/dYeW0JQ8B5o/N7W2zG1zPoTvJHAp2W9pHTffb5kJ
geXSfW3khFYOGz2weSdD6B2731oatRiGMBMCy53kz02tT+L59PxbOZ94ptWb
BHal8UyrmxI5T/C8xZ8tDqH5vzWf9HcSeqfVmwR2pa2r1U2JtRM8b/GnhUNa
PZKeD+09aW4x+i09f9q6CDMhsJxdRyOHnOSB9D3JNc+Qz3Hk3014aXNdtLMw
geVO8qeRQ+weSN+TJHJ+6t5mszcJPE/mmc2uT+Q8oY9oOp7EIQSeJ9+TJHJ+
Spdb43nLuja5Ymrt5I6m+dPIIQSeJ5wX0uw09R6739I6Eta1mXuEtZ+0llM5
xO4BCzsldDf6raURjec3PUZguZP8aeQQuwcS/EzIKxq3ELKLzDOETHjbM/8B
Yb6LYQ==
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2592600046"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "\[Rule]", "0.11131905764341354`"}], ",", 
      RowBox[{"2", "\[Rule]", "0.8018818497657776`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzl2DHqd2cVxPGgIG5BrGxtBEUQBIPgCuIKImgVEGIhdvYuwcZOV+AWXIc7
MQELm0Be7vnMzI2F8vfl/u59nnPmzHyPP/jN7z/53bc++uijP3z3i//65NM/
/vLzzz/906+/8+X/+O2nn/3kx599+4s///zf/3z59/f+/dnH//jL33/xw5/9
6OP//fujv/3q4399/6cf//OvP//gf/+qZ77Ot77Ob7/q+a/z95O7PLnXVZ2f
fOtJPa96re8odHh136u7XPXoif5bZ3jSd+EVYvaTc5Ss25OeLmSHvrvIi6t/
1zPbYowFNhBeIby9dQbNOZrfWlmTzNak37b4Ssz4FTsl8yv5TDJnNRtcabKl
8+S9NBct16flaUmmSs74VcYlZ3wtv1q6FTnb8vkrTxBeJ1iuxYRvqU+LJcSe
uzDjVxoQPnO1P2oPTOpZMEZrNq/29OQ8JneohUxp1WeBJVoa0DMusunqLiI7
dH7pXTL524X36F4IBtO9S7JQsj5CY2u1Snr1Amt96PsXdJu8y1XWr+0CYqd4
otskt1zdK8lCSUbVmZL01eTOsqDDJPMkz5O8S7JHQqv6PVf3ajGJ8Kur7Egy
qs5c7TNJ/9eav9LVgocIDei7aD9Z20eSOdjSm84RwSTiPSL3n+SF9tUr701m
jWaA1n2fzKD2Q8E2C7l5pZmkfjSfL8xCi+W05yTPKfgqyV2aixbuq3NK6zyZ
Uwvepd95VdvluyQ1nGSAFqtoZmtl60Jtk/ygPXmBQwSrJHOn5UtPzvaWuyzs
U1ee05pTzfYLuSxqK9gpmVlP8j05v0J7VzO14GlJnbTussZOV7/VHK71vOCr
yzOofU/PVDL3dZ5q/k962kIW6B5daWwtC8QZhFdoHS68p+Utyf4m81R4uM7B
ZJYt7JgLd7nK5RY7tbxUe5FgRf1bffdkHZ7092qWk9yld7dkTVpnFn3RdxE8
s5wFOkOv6qzPtrwTJRl7jSv0rCU5QTCz5iKdlUkmFJoR2ZHkB+Fp4o6CKxb2
iLezqOYKnXf6Xq3s1n6+xkWtvUPUsKWHJ+9J1mfNcxbmq6X51q4kznmln+Rd
xOwIzSSzPskY2m+1Ly2wpda5ZjZ9zgUWTXKF3suSrJj04WRmLeTjMo/pbNI8
tlZzwQNXzyxnTWuuW79N5tGCD+ueLnBRy88FF129X/T06pmFfBF/J2c86YFJ
rtDzvtAj7cNv7OnVd1tcmuTqq1488epWzfWZr+6ls+lql2lxRTK7k7Oc9OGr
WWj1NOmTem9a5oRlL2r5sNat5o0rreq5TupTeEvrDDrHWz0V9Rd9EdnUYpUF
L0rmSzJHkryRPH9Lw6LOV+cRZxBaTWpMZ5y441XG6axf0IDmCuFjov7J97d4
Jqn/pM7X/Goh75KzL3qd5GSd9cn+Ju+SnEftga0d4er5ZdbV31rjcK3hq5rr
TNe7gP5ti4uSf79lHlvvF9kn/l2wga5/i5OFX+nvah5b2LOEPycZYDkLklxx
VR89Ry1uTOa1qPMVPwiuS2pD8L/OmgXuutpNRJ2TDJD0hxZXXHnF1dyt8Vuy
/qLOLR8TZ9M5+KS2QvPJWU7q5Cr7lrNA7EcL85icl4UM/abuL0lm1nzb4v9k
dif3suQ533Lmlj+szaPw25YGkoza2l+Sv03m8oLnJO8lGKZ1rw/VzJo/aM9c
8BDNt8mZTTKqZgbtk60zi7kTnqN3wKszPOHG5UwRntZihhb/J88j/PnKK7Tn
XJ1NnFlzTnLuWvl4lR3J+uu51v6c5FLBDAs8fDULSV4V/rPAxq3Mbc2X9i6d
j4IztVeIc+p8v+r1QvYl/VmfQTy/UMOkv615iJ6vBa64+pbQifbzq/su9KiV
WW/xN51TCzO+xthJPbTuuKxz4e1Xd295y1VOLcxdMoNa2hOzo/ul9y/NY1c+
+UY+afGkyL4rLYmeruWarrneQTS7LuRLkvG0n2gm0T4jMjHJJ1pjQvNv3DWS
HqtrqPuS/JbW9nKvNQ+3ck2zsfYrkYNJBmudf2HXEJ4jerq2216x04K213ot
6qxZbiErW36V5OrkbqI9dlmfet411wnfeAuHf5N6LXTSYq0WyyXfo3c3fQa9
ry306Mk7k17UOo/47tUdk/nS6vVVDYXPaH1esVzSr8Tu1rrj1W+XM2V5rlvc
uFa3Flu2ei3ec1UT4RvJu7eeETnSOr/ORJ0pIluFtltnE+fXd0nuIK2cbe1E
C5q8yrJWPUWGPvG3NU5O5mNSG088J3l+ob2FORWa1HNx5SfJvNM5qPui7yg4
R8xFkpOvZkfzTHKur/z5SR10tur6JzXcmtkkgyXnMdkXXZNW36+yXnNmi9mS
9dT7wgIjtVhrIe+SWaZnXPvVldeteaZmv2TWJzmzpeGkz2i+Su6/os4tbhHn
0RpIem9r3pc9U+ySy3zyxnpeeak4z5UeBAMIn1zgltb5k9l9NXfJ3WGBizQP
vJFPkp58pSUxg1e60r4tmFBzqahP6/xX/qzZSTDSk28luUh8d61Hyax8C9s8
qYOe8QUPbOXLFbcke5pkBt0jXdvW7Cfz+o18or20xTat92vNt3acBZ4R7KG9
ZYFFtW8I/te8kfTnBT5JZmVrLpLvfzKDyblYYOyr82sPbDGe/u6yltZ4Q/hz
i0+S+8XyXGgOT+bdVR0EYwstaQ8UGbfgz61dTGsy6Z9JT1tj2mQfNQuJv5/4
ZIsxWtkhZkrrUGeN1q3exbR3Lewg2tOuaq4zTvt5i6tFviwwhu77VT4uc4LO
GsF1gv2SPKN7lPScpLY1G4j3C8209qMWYyzk5tXMvp0TrjjqjV6a1E+y/lfP
tzxZz4jY6a5yM8m0SX9r5abQfLLOer6WZ6eV79rrrur/ZNauMugtPLm2B4l9
6kqTor/J3Gx5mmA8Uf+12RF+2OKWhUxZ+G2rL1ozeo5ErZKZu5CbwnP082K+
lmdnbd9JsoTwB81La961kGtPNClmbaG/a7rSWZas25qPifon/UFnovATzR6a
hwXPLHDalc/rbEre98qLtL8Jv0rqJ8mfWktr/qC9OqnV5IwssIHgtJYfah5b
YCf9zuTMJn1eZ9ny3rewc63ly9q8azYQ3rKwO+uZ0nmqs1WcZ83/BbMJ/SRr
q5khmR2aA98472/k5NY5n3xL5NrbayW4RWteZ27Sl5LMkPztlQb+H+Y9mREt
lriaqSRrfVNrpbWa5BNxd5HjYj8V/qB9/qrvb593PS8thnnSx1aOJ+++Vqur
+WrtzrrmSb+90oCu83JN1uZ3jf30bD7pl9Z28u5vqVXSK67u1WLdpN8m/W2Z
Ua/ysTXvwgeS33ojiwr9J59f8NWkFwkfFj6w4HvJs7UYVfjVGmMk2e/Kc97I
ouKOV/+u76LvK7womaGaRTXbXGlSzL5m1JbXibvr7F7wh4XsXuNVcZckf+qZ
1f55dce3aGBtxnVtWxpI+rDOslb9k/m4pp+36LOVR0mfSWZlK8dbZ37Su6Rf
Xe0d+o5iHxFMspCPLV59oz6vNNnKtas5WtBnMsdbuhXeLjRw5avaP9/IJDof
k5zZej4514In9TOCc3TuXN1lQbf6Xi2eEfVZ8EPNJDofNa9e6a2VcW/xk2T2
rfGbyMeWznXut3L8yTuv5vctTPLkLsmaaLbRGdRiAD1TWhv6t0mfEX6itSHu
pWdn7T0LTNLK37V9LelLuhf6W0ltLPCh9tuFPSLpV2tn1u9Znq+F9wtOWN7X
dC/EtxZY6EpLmj2uZlx4S8snWzVveenafGkOFN/9f9jXWnP9ofVP3kv4oWaP
J3UTe5yY91buJLM+6V3JDNLMmeSfq/6KHNT+rP0t2a8kG7Terz1hzX9anqk5
SniCzqDkexaYRPOk4DTtyQv9uvq7xUVCh4JhFmqywBhXGbeQR0+8RbwnmY+C
K9bYbKGnyaxJzmzy/MmertVQnEdoVc+17ov2Pe0hOjta7CE0o3vayjU9R0mW
uNLblQ8ka3h1nit96rO1+nLldUmfXGPLlg8Iz1/jwCfem8wI7VGtuiXZSZxH
zNcVY69xV9LnW7OfZLMkqyRnU2hb90j7ia6JyKNkDTW3CCbUGk56qfaHJM9c
6XNhp1tgYOGTmgH0zLY8R+fRk/ov+6dmQuG9Se4S7LG8X7TmS3up0LO+V3Kv
Sc6s9hzhz2KOFvaIhW8JbmwxpM4g4T+t+RIecsXASfbQGbdwHp2POkP12TT/
Cw2L/rZ870rPyfwSZ9AevvD8wp6S9MA1fbb0vJb7QhsLmXtVt+TsaxbV9Xlj
xiWfX9hTFrS97HtXehbetVzPpG6Tc33lLcl6Co0t1HyNb9+ecUlti7m40vma
DpPZJ7SdnEcx1zoTdR+1J+iaa95ey9yF9+hd4EpvyVlI6lDPTisjNM/o+mvW
1TvmlbcsPL+Q0Vd1XvAWrT3t/5oV9e6W5JPlWUgywNUzT2bh6vkn2tD7UYt5
Fs65kHFa21f+nGSJ5Ay2tPqkL8v8eXWX5A4l3p9k+FaWLehBeKzOOKHt1i6j
+Uf3NOnDyXlP8qfu41WtxHs0zyRZS+szec4rP0z+rT2w9V3NkMl8fKK9FsPo
vUzvSld30TzQ0tIaV7TOmfQi4WNre0rSexeYQWS01oauVTJzhW61fhaefyNX
6HxJ6mchfxfyqMWQLba5mimtB73fLWR3iwNbWmr5p+aiZS5N+qc+ZzKPRI9a
bPMkv7TeWnPU0qHo45qWkjOyxiQLXKr9U5/zjXm0wDZP+tJi6Raf6O/qmb3K
9JYXJeu50K9WBgm20TVZzqM1tkn67dW31rz66ru6Di3+XOtdsi+tuVvIVl0T
zUK6Xy22WeCHq16/hedFXq/x5xqfaE9I5pTOI60xnd0LHnU1d1ozet9p8dVb
MkLvfQt+kuQT4dVJPrzyVeGTVzO+8C2dZclet/aUZD4uePVVrxfYqcVagk+S
z7T0IOZFaCbpgdqXNJ9oDtR+KDxzIZdb9dfs9Pbc0TUXWl3IQc1jwvNbfWkx
/EL931LzZC4nz5/87VtyZ5l5RIYmPecq61sMdlWTFsO3/C2567UYXuxTb/zt
W3JHcNGVfq7m/cqjrs6QnOu1PSLJP4JnRN619i/NGC02a/12OXeuvLq1OwgP
b2XW2nzpPULzT2s3EbpKMkNy1gSbtbJgLe80a4lvifprD1/LVsEMC+9J8oN+
j9Czzh3x24W7t9hD8MaaBy7wp+i19r0W/6956cKOI96jPfmJ/yT9sKV5rTeR
d1f61B4o7nvlnwvsIbw6Oe/iPVrzrfMk9fzkzEm/vZpHfbbk7OvfLuiq1YsF
9lhg1GTfNUetnWeNK8R3W7y30N+ruj3hvStW1H8n98oFzYtMWWCGZNZcza8+
z1VNxHl0HiW1ndyFF7IsySFi9jWP6dkX90p62lvyV9R2wSu0J+vdsJV9WsPJ
HWqNQ9bmbsEPk+8UtdVzITx2QauC07TeWvW/ynHB0to/NUvrLGjNbyv3n/CM
eKfghyv/WdBYUqtXHiueEXOxNr9iFt7C0mtstjx3ydwU87vAb8sau5o17bHi
72VOELm54MMtztHeoj1Ez11yFnTuCF/V7K011tqPFjxf9DQ549p7hQ+3OEf7
ofaQ5Nwle71wx1bu6+9q5tG8KnxenFPM+JO7iB5d6a3F/1f1TM5ycu6Svb7K
dHFHnft6BgXzJJkq2XdRhyf/rvu7pqUk52gf00y73Avt7eKOOvcX5kvfSzBV
K7OSOSUyqPV3Ukstlk4yrWDUpN5a3i58QPdL9yjpdWJOW9rWfCh23qTPL+Sm
ZrOr53VNWr1o7dprOlmbr6TXLZzt6nnRu1bur/GG6Glrx9SscvXdhf/PIck5
SYa/yv2FO16dWZ9NcJroXdLf1ual5Q/CP9/CAAu7s/aWhR5dZWhLh9pjxdl0
didZcYEZFvy5dX6R1y0GSO5ZC5zT6lFrJ1pjldbuJu6uuUvsnlf7TtJjF/xB
5HWSAVp7VlJ7V7mmeVJzS0s/gj30eRbmQnv4V/37fwABeNyu
         "], {{0, 128}, {128,
          0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2548551192"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.06912489980459213`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.9308436512947083`"}]}], "}"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.775512957379263*^9, 3.775512998494914*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"ada99cd2-14fd-44ca-b73e-202a77f65785"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2-colour non-totalistic, range 3", "Subsubsection",
 CellChangeTimes->{{3.775515807604021*^9, 
  3.77551582100325*^9}},ExpressionUUID->"5c1c66d9-c4c7-4612-b93b-\
51b5f32e2a86"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"test4Data2kr3C16", " ", "=", " ", 
   RowBox[{"datak2r3NT", "[", 
    RowBox[{"128", ",", "128", ",", "8"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"test4Data2kr3C16", "\[Rule]", 
   RowBox[{"netECA16", "[", 
    RowBox[{
     RowBox[{"Keys", "@", "test4Data2kr3C16"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<TopProbabilities\>\"", ",", "2"}], "}"}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAGIQ/eGloNAT6TeOnLn5oiDaxK5DGkTPT8uWAdFGSiyq
q2TeOBqUcGuAaKb1mfYgus3nuTOITvum5wOiTyXkgunSk7+DQHRTzz8wPSlH
nPUqkP5vpMAOopW2uwqBaNUFl4VB9PK9qxVBdAPPNyUQvS92iyaI/nH3ghZY
fLuIJ4j+wC0Dph2va774A6SNWp+9AtHX5m8zFZd94yjvyW8Ooh9cWzobRItc
9J0Lon3178saKL5x/HIrXx5E6/C9V7cA0jJtPtogeoXGDAMQvUzgOphe12Rh
CaK36Wpag+hf2WZPQTSD9+PnIHoSe/kfEO3z/hqYDnOR1LQE0jzR28H053BP
TxD9c2+LF4juYTDOAdEzogzzQLTZ2hu9IPrf/Pw+EA0Aw7asQg==
  "],
 CellLabel->"In[81]:=",ExpressionUUID->"9c2de349-013d-4f8e-bb27-2b2ef9e280c8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzl2DHKbWkVhOHGBulZiBMw0MzAxim0iaEtatQitoGYiIHTEuciJs5CBQMT
wcuup1bt24Fy+nLO3t+3Vq2qd/3f/flvvvjVtz755JPfffav//viy9//+Ouv
v/zDT7797//45Zdf/eD7X336r49/+s///v35b9/54ed///Onn//6p3/90R9/
/bPPv/eXf/zot7/47PMP/fy/nvOhz//v73/o59Q5P/QuqTumav7kOc3PT2qi
9bBWn9TnJ+8Vd3mik9QsCA2LXnzo7Dw5p6in0G1T5ykPaXp40zd01msOSf32
ah6b2aF5Ruf41TOf3H2ttjqvr+ovftv0hCt2upo7wUUpBrhiuSbDaK/TuXCV
g2IH1Oydeq/gJVHD5SxY2PWuvELcPeVLzZxdYImrOmtmaPph8y7NfNF7gfCu
hSzQutXvumIS7bHN82hfEn7SPINm7A/NerHLpM6g6yzu28yRZhak9CN6kfLq
ZSZp1q2ZC827N/ub8pYrHhC7QFNj2h/E7GidCDZuspD2EM2uV/ly1aOrbG3W
sDmPKY7SWrrSjP7tW3QitKEz9O11e/K56V1aG/qZyzXRZ1uoWyqznvz7kzx6
+46jfbu5y6RqfuVpTa672gVSmSiyVbOBPkNz3sXMXmXBArc0Z7bp882dUXOO
9grBdYIfrurQPL/ImuYZmjyg+9XMgqbHLvhVKoNEPTVXaJ0v/LbJvVcespDL
qSwQni/Oo1m6mXfCM5s7nZ59sbMs5G+TwdZ+K1hR9HqhnppXUx7+xJcWdnbR
L83Jb9mdF+ovPHmtDgvelfIizYcp72r68FUfm8+52q30d96ygyxzjubMpie8
xQe03wq+Evyw4D9aY2vPWZu7pv+8vZ46+0QmNnNKe06qR1r/zfla0JKYFzHv
zT1L3/eJ9pp7a4pVmvUUHpt6/pM6XDFSStta/6nsuPpOk6+E5vW8i1lI9VTw
Q1MzV16n69lkJOGB+jkpbxS538wsMQtXfPVE28JLUzpf9gGh8+YdBT9czb7m
Ya2ZZs1Ts3yVuSk/SXl7s1a6/leZ25zNBR8Q8/IxfdZzLbJPzJqYxysPfMsO
JfK3yTbaW0Sdxf617AMp3S7rZIExtA+IGgotNc8p/DDFjcKHxR2vvOUqB5v9
bc7Ik1ot62TBW570VOfvFe81zynq08z0puZTftjMx7WZFb6aYhVdN80YzRkX
Xqe5pclaV/wvfEMz+cKMiLnQTHiVBU8ySzNPSj9NlhM7l86phbppTmsyT9Mf
dB2ePF/M70K2NjP3im+v8lqfQcyp1r/OfV03PRdXnrDGhClfFayV4qIFfxM5
pbOpqUn9/SZXNzlK1PMqc5tMpfegphddcZT2PeH/qXlc8KW3eLXwH52zazO7
oP8FD2z+dnnv0xrW+lljjAUfW+OWhd4tM0xqZjUnN/caUf+1XUDURPDAE88X
86vZMlVnwTZNnYu6LfDbwr2EP+ia6DwV3tL0kLX66zy94k9Rk6bGmp62sPuI
MyzMwpqHiFnTXrrMmeL8qfoLDWv/F9pefq+o7VUWNFlaMEYzpxY8RN+32S/B
mU3PaTKn1kwzC1IMoN+rs34tC66yT89Oqr/aQ5b1kGLRhb40c0qfv1mrt3ig
mItmtjZnfyFTrvp+lV/NOuiafOjsN/N6ob8LWXnljdoDF7R3lfULnt9kFc1p
ukfLXpp6pvANnaFNBtbPEYyteeyKZ0S/nszdGz1fM2qTkXR+Nf1Qe3JTMyl+
1gyc0oBmnpS2hQ6bZ7iad5EvTW/XWhV91N9f7p3mmWaPFjxfe9dC1qS01Mwm
zSTNM2jdpuY95Zni+2tz0exdqg6aP6/eteAVgqP0c/T3Rc1Tu0mq11d7R7O2
+u7Cx7TOm94oNPbEPxf2oNQ+oncBzSffBP4X+ducl4V8ac5Fcy9bO1vTA5/o
X3OU0E9zT9Gz09w1hK6a3rWwR+gdtjlHWs9NtnxLjgsPFJycmpdUL/ScrvXr
yg/FefRu8pY76nxpauyNPq9zfI0Vr5hBaFVzUYptFnysqSWRTZrxFjS/oIHm
XDe5OjXvQmMpZhA+tsBjOq9TtdWse+VjVyx9tT/quyw8s+lXOt+bGltglYUM
bWom5ecLnJCqs/CxZn5dzbLObr2TPvmt9t6rOzZ9KbVHN/ejhf6mOCTF/E1O
EF73pCZrDPAWHtDefrWfLsxOk2fW7pv694X7Xn2/mV8f086la/iEc7QOdc7q
HSRV5+YO0tTGlVcInVz5z4LPr+0dOqfW7q69dO3MOgfFHa84sznvVyykd1XN
AGKWU31PPfOqJk0Pv5q11N01F31MOSh4foH/36Lh5j7ypL9N5tQeKGakqUPt
4als1Z4m9K+58SoHm8yQ8tg1P2z2WmSr9rrUefS+JjR2xZ/NvNB9SeW44JAm
MzS9+moW1vxHMOSCPlO1bfLAx8qimj9F3Zp5KvxHs+JVzl75zFWm67M1fyv6
JZhT5LiYxwUWvdKqYEh9HjHv2m+bOZva+8Tc6dxsesXCbDZ9Us+j9tXUrK3l
S1MPzTlqaialB7FrN++15mlX2b02myKDUntiakbewp+pfBS7fHO+9DPX/Kc5
Rws5m9J/06tTGZeqW0obOgsWsnXZN5o7QkpL2vcWOEf4j87Q5b9pNPltzauf
3GUh75o6XPs7Q5N5RI9SO8IVb4j36t5d9XSBu8T5BXsszKzY01Pem8r0BS/V
/JOqz5M5TXHIlX7eUmetH91fkd2ava845+rMqfkVvbvyZH2GJ33XOtEclWIM
zXULHrLAFc0zLGSx8EOdWSIr9a6kZ2rtmYIHxMymvEiwfbPOV74qWOuNnNDU
ebMvb/RPsScucMtVHRZ0kvL2K28UXtecx9S8LO/Impeuev3EB1JMfrVzaW3o
/r7lbwXNnXFhNpta1bv2gt40kyz0UfS6yXLNvq/Nqc7fJ7Vteq/YKa72Bc1s
2pNTmhF6S2mpyc9CA5q9r7x6YZ9qvlfk5oKnaZ3r7GhmWfO9C1wkfGYhQ9d2
kyZbLvSryWOCE9bmVDOV0Keu5xUbLLy3WcOmtgV7XHnpwl4metfc3XR2CyZs
7qQLetD5q/nhar6az0+9V8y+vstVvuj7apbTHnuVs/qOKQZoeu8V0wpeanqO
zpdU39fO1uQoPb9NTxbnWc6aq7M1tdQ8s57lK09rcpfYE5sZpJlHnyel7Sbn
a2bQnnCVNeJsTS01c0fMndC89rSrOuu8ExwiZmotB9/CyQt81dStqNvCviB6
msq45jPXZkT7mPCNK1ZM+edCDl5lbmqX1BzV5JwmP6TmQvuh9upU3om5SM3I
Ghs0d8kUKzZZ68pPFvJCzPsVg6V6J56j+UfzSXN+m3OkuUhrpumTzZo0e9fM
gmZeCG0Lvr3iq6ts0qwr2PjqXk3vXWPR1Jn1LFzxg84X/S5dk7V5XNsFRD2v
GED7p87Nq1xuer7eX1KccJWbQv+615rh9YyndCuYs5m5mqu1r+rsEPdt5tFb
+G0tjxZ2nxQPXOXsVW4+8bcmOwkfE+/SGbc2I9o/Uxmk95HlGdFe94R/hH40
ezdZq6nDZk2ammzm5lX9dc2vtKFz5ImnNfsoPO1qZjUPawZb9nzBNinfa+4X
zdpqnSzwgODt5o7WnNPmDtj0B333ZvYJD7nyduFF4mzNORWZKHTSrOcVh4t8
XOaBK52n/Fmzjc6+Bd9Y4PaF7Gh6adMTrjJUM9tV3Zq11XMtPErsETp3rvp+
tY/oHjX1JjI95S3N3+pe6Bl5oz/r+RXvFd+50nNKV2/JvgWvu/KE5qwt+LnQ
qsjZ1Pc1G1z5s6651o/Q3lv2lGb2NZ+fytxm1lztfc3fNnfYlFessYHQ/BXD
69xpZs3antL8jt6J1v69qb1UpjezbMGrF+rwFq9bu5f2DTGDol96r7nam4S/
CW/XmZjytOW9SdehuR8t7FlNhlm4V8p/lrWnn/nEhzUz6B0tlUdNTnjSx6us
bM6d1qGuQ2o2BZ/oeWxy0ZVW35hZmnUFUwmNNf05pRPNhwt5kdLPgv888fkm
1y3U9soHrnxD10HvDk0P0XMnNKbzTmeHztYnOml63cLnt2T3gq4Wzn+VWanZ
T82j5uHmHOl66ruk/F9zrNazzmvRxytO0LOTOr8+m/Z5nR3Nemp/E+994mkL
bCPmrqlJkS9rulr2jab+F7hUzIXQVfO9V3XW/qbPcOVjTS5tsoc+wxUTrvmG
PqeYBT2/2gObM7LAPM3ZWeM6vS+IWV7wirXMEkyodaX1oNlYaKbJG2t5Kmqu
vTfF1Ve60jVJeWxT5ws+8GTer9imqUPd95R3NfNO/1bnacpLmzvLVdbo/oq8
a2pY+OqTXmt/E/nYZI+FfVNo6SpndYamero2a2KvaWbllQfqWVjwhwUO1N4u
7pKq29W+IzhW+/NV9gkNCw2k9rtUTum8WGObK/5c43CdF7omzblu5l2T05ps
ILS0wCrCwxf8MLVrrDGM9tUn2Sr6Lnwv9V7Bn839UetBeIVmy4WZvcoXcZ7m
Tidm9ophtLdcPT/lJ8Lrmh6uuWgh30Vupnx+YWaFPnWvhU82+U3fsemHyz6c
YtSrvjR5THvLW3ItpStxnqavrrG60IDwirfsIG/34Sf1vNqJFvy2yZxruXY1
pwvaTs2yzv3mGVJ+qDlh4Y5XWhX++eS9OhPXmKGpmebnNc+84sYrZrjK8SdM
mPIx8Z21czb5Z+G3a7mjOaGpzzXmadZTa1gww1U2pWr75LPIR3HmJufoOwp9
albXM9tkcq3DBebRc536fpMZlrkr5f9r7LHAilf8/MZ80TO7wM9CA5pPUrOT
0oBmmJR/aiZf60Xq7qk50vnbzOKrz83a6hxfyF9d/6usb/LJkz4KjxU7zlt6
kar/2q6hGbLJhNq7BKsLfTY1dsX2V31scouenQWveGMvhJ9oj3pynubZmppv
coLWYXNfu2IzzZ86o5sMoD0nxbfLvRBe1OThJidc5ezyvql1vtAjcZ6F/Vdk
9xt5oDlfb9+txA5+tWuIOVr4W8HVzqsZRveoeQZdt2YvdM4Kf2vuyAv9usq4
hV049f0r3hN10/cVs/yEA5u5cOW3Vxy1kEELc/3G3eqqnst1S3mL3o+EbgUX
ifOk9PYx7RFNja35j55rPY9vrK2Yx7cwkqiDyKCmVwv/SfVX8IbOuytm07N5
xepCM2vZqjlB17BZT81dqTte8b/OOKHJpi9pTaY84eouTabSnpnypbV9c212
Urv8FXelzqD5fyGzFvYgXRPhgdrrrhhJeFdzrkWmLN9R5OAVL6X8TfRroe+p
nNK7iZ61VF9SPqZ5eIG9tcdqDnkjmwlm0PN7xfMi45p91/4jenHF50/e25wL
zQxNzhGa0XvoW9jsLfPb5Mxm7uus0c9J9eUqE3WWNdlMz/JC7qdyPHUGMXdC
t80ZFPygdwSR+01taPZrnlkzquYlzWnCB3QuPJnxq11G5LJgM8FOqTlq9lrX
RPRoueZiroWP6fdqhhcsJ/q4kAVaJ5p7mwyv36V9QOhTMJLWuc705mwu9HEt
U1Lsrb2reYamHza5biGz9GcxF6Keawy5UOe13Fnzw+aZ9b4gdsnmvYS3a/3r
e+lnat9e2xf0b5v5+ER7zRwUs9mctSst6Uxs5l3TN1IzJfas5jNFj0TW6/Os
ZcGTeRRso33mQ/t7lcW65qn80vvX1fObvqrnSOwI2pNTOky9q3nftfm9Yr9m
3a5yXOtZcM6C3q748yofRdaIvabZC+29b2EhsZto3TYzaMF7Re4ItnnSu+Zd
ntQw5bepfGxm69X5hYZTd1/uV3N+RQ6m+ORKV5rBmnmnZ1nM6bI2dB91jzRH
6ecvMPlVv8S+pt/1Fj3rTNd+onfM5bn4JnjO1X6amhFRK8HkVywk+CR13xTP
N3NZ1LD5N4Qm6+pZvvKxt3hOk0newhuCM9eyW+hK6Ce1RzTvq+dU6KqZBU0m
fwtXNz3nydk0n+gs+JgyKHV+nVlPnp/aKYTfijpoVm8y2xq3rOW12He0H+rM
EgzQZNqmtpu51vQZwefNGVzrte7plT4FDzQzWv+79snU3DX1dlXDtRkRzxF6
XjjDcq+f1OH/+fxPx6nXqQ==
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", 
      "192512040898603851305563821357837920322"}], ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "\[Rule]", "0.2771645486354828`"}], ",", 
      RowBox[{"4", "\[Rule]", "0.6498873829841614`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzl1z3qdlcZhfGgIGLjBARxCtonOAJBR5CAVqKghaSzdBwOwgFY2jkKK4cg
qGCRJpCXc//WWue1SPgnnOecve+9Pq79oy9++/NffeuTTz75/Xf/86+ff/6H
n/7ud59/+Yvv/Pc/fvn5r3/y419/+z9//vF///z377//9Z+ffv/LH372g9/8
+dO//eN7n/3pX3/59Is//+yzr/79dc989f9/k/d8k7+fvPOb/PZDnxFz+Lrn
r96jZy6euVqDmL+e8xOdL3zryiNXZ3HlcTHDq8wR/hVnJ/Ss+0XsJZntol+u
9Cw0v/D+ZFbojhDeeQuPiTm3zivJJzpzBJOIvVxlo8i0ZL61Oqh1j9BZkfRX
clZJHltgnv9nzmkxie64Fr8lM0d4IXkPSj6jc0b3UbKntGdbXKH7MbmehZ66
ysBkpl15QftaaO/Jvtbydo17dW9eeSqZb0Kfeg7JXntjT+k+WuiI1jM6e3Wf
JvWpe1/PRHfZVd+JzLzSg1h/a+/6u8n3J1lI5J7mQ609MatkzlytLdkdSZ3r
jhN9dJWHgjN1FyfZUvdFcg4La77Kt9bcWvrUHXqVtwvMfzW3qxxusU3Ls4KT
k4yUZOnkHPSar7QtvJOcuc6NtbzV39UM0OqLFtdpT+lzX3hGsLTmSfF8a+8t
jyT5Ta9T9MJCzreyUWjvyhdXfKgZ7Mkckp0rMrbl3+Scn+xdMPaVx7WWnnjw
yftbftdnrVn9LZkm8kd091p2XWle54POWJFFmqnWzl1rY415BM+L/tK5IebT
yoSre4TouIW9CM0kGSw55yRPXnXuQr+8UbcLHXflC83tCzMXHCj6t8UMYrZX
rHuVGy3GTua82KPgtLfodoHNtB9bTKt5MumdpKdaeSI6S78nyWlrrNLi8NZZ
JHtk7Y7Q4knRL+JMr+Zz5ak1vyR5I5lR+rySHknyZ5LDdR8tzFBrT89BdITo
3IXe0d0h+FN0qPZ78rfJPEnqOckVrT5KZoLWnu7ilgY0H+reebLfJP8k16P5
Lfnbq5xp6XmBY0UfXek8yQkLfJJ8Psmlyd4R3SHuGiK7Fs5Xs9+VNgSDaV8s
9EKSG1vnuMCouqf0HUfkgOjiFhvoderzvdKeOJcr3V71neCxZT1oDbd6VnOI
yDfREUmPL2hPZ9GVTvRvl7tS3HdaebWgVf3M1bkkz1T7Rcxf3DWu1rDMGAv6
v9q7yJ+386dgb/H+5XuQnttC3wn2EPmmM1Oc9VrGtnJD57DOn2X+vMqfKz3r
jlhjp5Z+Wn13pXlxZ9G98xYeuNKJ0IPQiei+BT8mNZzkK+HfBXZam8mVnpPv
XGD4t/CAnrN4PtlZSU5OskSSSZJZlGQhPfPWTK5y7IrfFjpC6yR51muck9T/
1cx1P16tOTmfZBYJ72h20iyX1IPOq6u9aDZLstwa52gfXXlQZ6DohYW+XmAw
wdLa1y09X2ksyWALvSkyRGhe52dyJkkG0L0veD7JIbpfPtZ+bHGg4MmFjtBr
0L544vcknyz4KNl3Cx2x4N9kv1yx/cL69b0m+cxVRgne1sywkJnJ7E1mo86x
5XvE1X5bWfRknUmfJues2WAhD7V/r9b/xGuCyVt9pJmw1Qsi50WHXr1Td7HW
zJXXrvaePJdlbr96v+BMzXW6I/S3BB/qXGplptB50jtJvyznhn5mga+EX644
Vsxf54xgkgXu0mys9a+/daX5J12m95WcbSs3rvpXzPDKj1e/FZpZ7lmtk2S2
tDq6lUstPT/xXYvDk3z1Fu0Jv7Ry78n/Fz0u1rk8f92bOuuSc9Df0l2QnPnV
30m+avG8mIn26ZMsfbIGzZxX+1qYv2YtnatiPgs5JvTWOtMkp1113wI7Je+M
ybm1+O0qK4SeF+afvB8t9OPVM8kcS94lhac0pwmPCE3q/YrsXciWtb5+O2O0
sm6tH7/J2pI51uJD7dkncxC5re84V/mmNaC/K2Yu1pPs1gXGEMwmOmKZT67m
pueg+yvptSSPaX4QuX2VCS1u10zS4qsFxrh6Ruuz1b86D5N6Fhye7OIFHtPz
T/ZCsvuW/ZXkUs0hSfZey7er/tUdscbSrWwXfKXP6Im/kn2qM+Gqu1t3CsGi
LS5aY5U3cojmq6RPr3rtyXxaM2+xQdLXgtlE/gvNJ/Xf6k3Bn1esov3S4hDB
q8k1iM5taVt/d4HBkvmTnNtCj7T0sMAnV+vRZ/1G/eiOaPk3yb3JzrrS+UKu
6m5KzrN1T3mytgWftthJezDJIUluX8htnQkfOgfthSt2Ehm45qkFftM+vfpW
smeFl3U/LvSLvpu0PL6wZjFDrT2xtqS/BNe1WPQqM5Ozupqnnq3u+lZuJ1mu
1aG6W5Occ6XbpOYXmCGZXQvdujaH5HtaPLamDX0uSc9qPSxopsXPSW7R7Nri
q7ewX2sOrWee8M+VDnXGXmlsQW8t7r367kLf6U5MfkvnTHIOLWZbmEOLMVoM
mex9zepJJtd70fNv9U7SL/r5ZE5qf7XYSWdj0u9rHC72pTviyUyS7PrkfJOZ
2ToLzRstFtVnd9XXmo21nnVX6rzV94u1b12do+4+keetbrryeOueldSS7vSk
j8TzIldbnb48N+Gj1reecKNgNqFPMWfBb0LDmmOFfpLvFz7S3kzypM523bnL
d43kt3Q+P8mTKx7W/NnqjmQHJfX5MXntSj8L7Kr9IrpbnJ34lngmyQzJLBXn
29LblV90dyzz2Nozya6/ytWknkXe6jnozBH7EhyYXJtYp15Di0M0e7fmsLCX
hY4Wa9CzTWpGd8STTlnITM0eV72z0H1r2k76V2i+xVSCXRd6TfDtkzNt5bPI
TMGiC3klelzklc7V1hrWuuxJlrbmcLUXkdut7mhle1IDT84imXvJHmmdUYv9
dNfrNQuOFdpIzkFnbFLP2qdi/ZpRk15o9ano+o8pb1sMLLQnMjaZXaKzkt2R
ZEiRJ6336PzRPCl02Hr/1WzfmLeaD5MZm8yTK07W3LimQ3G+ax2x0K1P+Ed0
ULJD36KZZN4KfmjxquhxnatiDcs6bDHqmt5Et76lg9ayN6mZ1kxEBia7eNnX
STa7OqMFHerzbd01dLcmz3Qh05L8n/S1yNIr9tP9InhjwfsLDHmVIQudLnSV
7KMFxrjSlf6u0MCyB0XvaAa4ynPBS62zFqyo8/Aqq1ucs5yrV7whfqvvJsls
Fz5KevAtvlvIJb3+q31dcY7eY5JvrzgnmYfivPR+W7mnO0KwgcjnJHMm97iW
veKMdEeI51v8nFz/1R5FVyZnleSWhfcLz67lj2bpt/h6wY8LjCTyPNlNLc1r
lr7Sknhn647Q8ojIhyfP6CxayPaFnH/iHd2zLW6/mpWebVLzC7pK5m0yw1v3
CM0wybuDZowkH+qcT3au7sGkX57MM7meJ2ckzl2z3JV+dIa39tvqPtFHmjkF
VyRnmOzchf0m95j0r+iItTuFyKtkf71lv0k2XmCzhTO6yqXWGhb2K87rjZwm
enmhI67WrPtrgR8WZnvVQUmWSPJMksGerOEqE7QeWr2W5DQ9K83DV33U6gXN
omK/ur+Evxae0V6+ynPhtav80Znc2vtVVgj2aPWpzpxkd7eeX+YckWML3N7K
dv1OPTfNfkJjSe0taPWq4/R3hZbEe0Q2Cm208lyw4hUTijW0Mk1r5oof1vgw
yQbaL62s1l5ey/Ynf2tt6Oxqcd2C/q96di3nNfO3slSzqD7T1jOCSxfWvMYV
QodPGE8wmO70ZOYkmT/ZiUmdi658spcW+y14KpnJovc18y/wjF5/K5eS73/L
OeoeFF2cPHf9ziT7ife8pbuTGZLMIpHnV/yp+077opV14hyvvtvq2bWcEaz4
xmdEHl5xQpLhdUfombS8v8wSyf0u912SY1saE5mW3GOyZ59oYy03dKckz06z
up7hQm8mPZLUiT5T4aM1zrn6W3T3WhYtMInWW/IZPYe3e20tq1tdv3a/uPK+
5hyxZnEWa3ml35nMDeGFq04Xc7jyV5L9NHvoDtXeb3XTVX7q9Qj9i45YY3v9
zjfmhvByksdEby5nkd7XctZdncvVd0WPJHNe5HOL7ZPzXH6m5SPRQVfrX9CG
8Is+9yedrvcruOgtDCbWtqCZq/zXWhL99XYftXL4iv2u9Ck8e5VpOk/0faqV
7QsMpuec5Aqd7W/JTzEH7aNWDi8wYTJPku9M9kIrM5NsrHljLW9Fv6zNraV5
kYctThCZKbJd54/OLn3HEd+90nmSjZfPVLCZyE+Rscn8bM0/2dc6xwSPvf1M
dack7w5XcxO5fXW+yTnrZ1pMm+yIt/y25akkN+qZr51pkvFad4eWnq9yW+fq
AmMITtY6TObVG3+rfaFzQHBI61ze0l9XevjQc1zWleC3NW68WkOrvzTPrP1W
6GEhB8R8ktwl/KUzROhHaEbrSnRNi41b3Jhkj+T6F3571bkLOaDfo5lH9L7O
zCcz0WvQZyT2pXtNz6HVQTozW2ycZB69ryudL3fcVT5r9ktqcjnDW/175esF
Da/54qqjtQeTfnkLk4v1C/bQM0xmdZJpFzJc9OxCf2kNJ+8XVxq7msPCWYv+
0hxy1a2t+WseXstqfb4LGSU0qftroY9aOZn0jubeqx7/0Fld+U7zsH5mgeEX
+EGztOgI4WvRp8nMXGD4t+S86Mrk2tZ0JTiqdRYL+kyy4pUOdQ63dJXkEM3S
2tdrnSL2u8CuOrdFd7e4VOR5ywuaJfTZ6TXrjhA8KfwusuXtOa+5Jckha1wq
+kXPdq03dQ9qjSXZ5mPiitZsta6u9POha05qQ+SY7n3Bh8n8ecvatNdED+p+
f+LlNfYTWa2ZRM9BZJc+32S2t+as9yLyp8UY2l/aRzoTrjx+dUaa/QRXPNGb
5tgkW1799uosFvSm5yx0K/o3ycxvYU59B1nOzwWuW2CDpG4X2PIJM1z14AJH
Cd1qNtNnuqzJKwbQOd/qKZ2fQqtinoKLdI8n2V77Zfn9yd5MMqfOjaRH1vol
yS16nQu9qXNsWXtJHmjNfOH9C3NLMucV5zzhwCdn3eKrZc1rtkn6S2fggraT
nb7A4WLvorv1vpLcpWd+ldsi55P5s6B5zQniu2sdIbSteewtTPJEV635rHlW
n5fQcItbrvpFcIhmZp29T2bemok+rySTrDGh7oUk8yx49kk36T5amHkyl654
Q+f2VfaucUKrW5Od8uQsWnvUe2kx2IJnWwz5ZD5i5mus2MqBq7NbyNgFZk5y
UZI5W9pLaqbFV2uZKbSqfb2cLS22FB2azJCrfQnmFDNvdUSSz0XWtXJb87bO
8CTDa1ZP5ucTPet+TLJxUktXrJLce5KfW+euvZ/UdtIjV5rX2tMcIma1kL3J
jhBs3MpG4ZcFX7Ty8OpbrWeEBkRnJfNKay/5W5GTuiNauZE8C7GGpDaSnCBY
OpntSS4SuS1y8opVnpyRZrCrLkuyorg7JPNN330Wcn6ZqZLcK3pwoZev8vlq
zrr3NZst80zLy7rrk/pf4I1Wzrf2JfpaZKnuU3Femm1a3tQskWSnFn8mu1Xr
TWfF1dm17ixaD6I7dA4saF4wSZJzdOeureEqN0TmvNFTC3pLMrPmomU9CA5v
8VKS7a/mmeQoPQedG0l+Fs+31t/qeq0ZkfPaax+rHkRWX60hqT1xvk/+XruD
aDZozT+5F/GeJPMss2KrI5b10MoKwYFC52INLWa76jV9N3kLwyxkgmDXpHcW
MvnqtwvMkOQB0RfiW1eco3VyldW6x6/45CrDtUee7EWzU/IsFrr7idfEvlr8
0+Jn4dkk3y7odm0mSebRXdOaiebYJMslc+lKh/qucTWThd9ezfnqW0/eqbtb
7FGzrubSqzkneXhtndqzC7ktNKl5ST8v5tma80J+Ck7WM9SdJbg0yS1Jtkmu
s3Uu+l7wxPvav1fnJeaTZJhkzryFVTRPPvH427svuX7dfXqGyW7Sekuyk76D
JPNQaFW/J9kLIqs122g9t7pP5FiS2ZK9oz2lvfyEqxcYQ6x/mdP0uSdntZAt
Yv6ipzTHava+6p3kHUTvMdmVT859gV3XWCLJjTrntTZa2XJ1Rh86z38DTewX
8A==
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", 
      "268814102680703659513703900569271732433"}], ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.4104440212249756`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.5857219099998474`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzl1z3qdlcZhfGgIM7BysbKSsHOiIUT0BFE0CIEBC3ESuOsnIW1I7ASS0sV
LGwCCef+rbXOmyLhvPD8z9n73uvj2t/95W9+/utvfPTRR7/79n/+9/NPfv/T
3/72kz/84lv//cevPvnshz/47Jv/efzT//777/Pnf/zOj//+j79+/Le//Ozj
/3/+3p//+fH3//XpTz7/0ac/+aLnL/rbJ89f5v1fdT1f9Jsn+/oy8/ky3716
Z/I9Yg4LZ/pEn1cauDpT/V0xN+H3J/u92kvyrJPz1F4QGSXeo/NK9IiYoc5S
faYiK9ZY6Crzkzpp9chCP4oc0Dywdhaif8X5XnW0WMMTPhHeX9uL5nOxX7F+
/c6FTrk6x4X7VEsbrbUl/fvGOSeZUMxT3AsW9qjzTev5LR5ZyNUnPk2yluaZ
liZbfd3ijRYTtrT6Vfd4pdsn7JHsi6uZt/ze0mEr95IMLLSxwKhv7OuFPYrf
JP82qcnk3kWPt9j7qkNb+xJ7ETkguuPrwKitvhbd8XV7Tna95qKF9ei7gJhD
MtP075P71d5ZY9SkZrTGRE8tP7d6U/NbMtOWmfnJOq94WHTWlfcX2O+N67zS
mNZPskPXnoWPtDefeEFnWpLNtI/ezgZXvZz09cKZJnOj1XcL/biW7UkfXflO
7HHtbiI45Cqf38gGQsNXexfdpzUs9vhVz711B9F6S/av3lcrG9cYe4039Jku
sIFmxYU+WlvnlQ41vyVn3vLFlRdEz4qs07pd6BThnWRnte4FmhVbPhI5k8yx
JL+J3hQzFN2qMzD5tzqLdL5prWoGE9rTObbQXwucIHI72QWCh6+0qu8pep5r
axPcK3hS60pnqT53cV46P5NsmWRd7aMFlmux0JNvtRimtTaRJ2/32pW/hJdb
eruaQyuXRP8m+/3q91d9rdkvmW+CW5IstNAjb/Sa/u6Ts1jQm2bOBe9c5aHo
96vfi34XenhLvon+utpXUttv8ZruU5GHazpp5dJVTl7ljzgL0QXLz1f5n8yT
liaFT6+0feUL4TWdOVd5uJDnC7kkekcwkmaMFrOtcaA4F529gutEJqx5R3jt
KoeX7zV6v8k8FHt58h7RUy1mW8j2Vndf6WphDUltLMzq6u6gO/pqPk/mr2e4
oPmrNVzlnnjWzJbknCuNtfLziR70Glp6a3lH5HOSQxbOXej2SvNiPa0e1Pyc
5K4kv63lp9awzhnd6a3vihlqnazNKtkFgj2u5n91Rq29aP5JMklSMwt8e7X3
ZKcLzej1aG7RjJfsyitfXJ2LZj/NqDoftGb0HUSf3Vp+as1oXenfi7mJXEpm
clJ7IpN1H2k+TPLMVSZc+Uuc+1UmtJ6fnNECNyY5U+d/kjOF7676TrOQOKNW
p+uuFx231lNJzhH3iOS3Wh4U/k2uTe+3xU6CRZPv1Fwt9LNwXxBct9BTmqWT
PSKyouVBfS5Jtmll0Zp/kzq/6uskt1zNdqELFjhHs/RVJqz57irfWufSOt+r
XP2Q7ikiA1ucozu9xYqirxc4p8UGIq+SOZDUzxontNjm7fcUndWaBwSfJPUs
uLTVOzpP9Hta/KD5raUfwQkL2ai9I+4prTz8kM7rieZFl4n16x68mm3rPbpD
Wx2ks+WN2ai76clvkiwt2GntvMTer7JI86E+r6tz0e/Rmal7R59paybJbNRs
KXIgyQk6i/R5ifULzbzxrJP6ueqdJD8nc1ho+CrDdX892ctVXy8wzxX3JjNq
we/iW1fzf+NZt1ji6kx1j1/pM6lt4UHdceI+pe9fmhNaHaQ5s6VV3XdaJ8L7
SZZoZfKCTzV/Jhlbe0rwW+v3ul9a7xR+1x3U8pRmquTvRXcne1bn1TI/6DPV
jP1E23rOyZxceGcyNwTbiOx6I1OJ7Erm6hoD6BzTHdfizAWPi9xrdVayB3Vu
CN5YzuSFPWoNr2Xs1bmIc9frfKI90cUtNhC+0N5f6BrBkEl9JjO5xR6CGfSZ
tjJ2jf1E5mjPCj5Jdn2LA/X6kzNJzrPl9zXW/ZB8qjNW76XFhMlnMWfBlqI7
kmfRussINhC81/L7lX70/evtPk12t2DpK//qe1brLMQaFrShWbTVBW/kCuGj
pH91H73Fp633L/S+nlWLDRb4PMnDrRzTGhZZkfRIKyvEHJK8p7ujlbFfdT1r
PZXsIO3ZhbuA6ETB3iK7lnlmuUOX95L0+JX3k9wlnpM9tcY/unOv7gJX59X6
21a2rOVhskOX96LPsZU5SZ9qX+szTfJPi3muNP/krBdYYo1hBM8kdb7QxSJ/
dIbrzBE+FXze0mRyzUlf6N7RmZP0sjg7sZdkDiezOqnPhU4X2dv67hXPCNZt
aWzhTJO90+LMqzMVWaHn02IDzbqCgXWfXvn365AzV9krtHeVgfpMNSsms07k
3pX2xNw0z2svP5mPvo8keSCZLR9SzlzNsOUX0V8tltBa1d19dRbJfEt2ZSuf
RSZrNk4+t/aoc0Z0t+4gzX5XHlzgjeX1C31qrSbzRKxNnLvWntDwwh7FGSUZ
+4oJr7x2tXetEzFnzZziLESeJ9+TzBPRI0mOunrnFSe39rjAycl3LvdUMqOu
GFgz0hon6xxbyMzlGSazTnByK4dbPLDGRZobk97RmaOzN7nOFjOvsYTgh6sZ
Luxlja8Wzl13n/6u/pbOH8HYrS5LnpHo9CTziG89WYOYg95LKwd0Zy3MSuwl
2bOaSa48lczhZG5rDrzyiOA30e96JqI7dFYkcyDJ3guzWvPFk+zS3KXfqTNE
/z45h6suEBwi3i/WsMaHyWxJZl3yvFqzFb7Q/a61keTnJM8nPXWlgRYzJ7tS
e6rFh6JnWx19xbo6Z9ZyVeShYJ7W/DWz6TNaYBidh0mWW+uCFi9pbQvftX6v
9axnrvvlau/JvNJMrrugpZO13BDeb51Li5OTd5akr7VmhFafnOlCH+lcFR5f
y2GR4Qss2rqP6Ny4+q7gqJY3FzJE84ZYg+4pnZPL2bKWw4LTRNe3mEqfo2bX
q9kud6JY/9XMW77QXdzyi+gCzdsiP5N61iyhWXSNUQU76RxrdeKVDjUPtPpa
Z7jmNLGv5P0i+c7WmpOZqTX2llxK8lJy/jrDk53eyqgFrr6ayRp7JL25cBdI
7rHlfcFjV5zWyqLkHWchhwXPLGTUE7219vUhdXdytsu6EuclclXnoWA54Tu9
TvG34v1Jb+pevjoLPf+3dLeYg+jBJO8l7wLad1pLSU+1OEHwhmZRwQY6h4Uf
r7JazzN512jpVjOzzuS1DhIaewvjXXWoeL7S81X36XNPMqc4C80tyXW28nZh
5i0GEx3UOnd9LpoJ11jlLWsWDCC4fW3Owu9P9nLFD61zX+Dtq4xNZlrLC1fz
1F0pWEXvXfhuIQOv+ivZ3Vc5kMwNnb1XmmkxTKs3k32R9ILg/JYeRL9o34n1
64zVmhHMLPwueD7Zp0ltX/1er0ecaYtXdR5eMVUrw0XHCb8n+UfoNsknrQwX
ehN9Ks5F8LDmwGSeJPM5eXYt5tTrbGnjal9reaLfedWPYl/i+WqPrXcm15DM
PcFdV1kk1qPPN8mfV2tL+rGlySt/Pemyq1npfhTsIbpbeEf7t9UjC/pvMWey
C65mu8CoV52iOSeZ26LLWly64Fkx27Xs0l2T7Lg1/SeZfCEDWzpvZZHWm9Bh
i1eTWm11luA9rcMFBtbeT2bvE18kn7WWRBdc5YbIK3EuC72me3yNeYRfkr5b
0EnrLrCg1WSPi30lz1TnsL5rCIZP9m+S5Rb452qeIodb3tHcvsBsmn+u9pK8
XyTnI7y/lqVJblno7lbftb6V1Ln2TpJ5RG6LHE6yqM7AJAPo3G7lZOu8ru4s
C2wjciapQ8GoC13cYjyt4SfzaeWw6LsWGwhvJs/0ii1FDifPXaxNn6Puu2QX
JPsimWni/UkNiy7WehNssMC9rVkJrSY7cSErBOO1eEacdTInr2aS1HzyLrPQ
I8vM0Fq/+JbOfMESulN0frY4p9UFSZ2IPm3l4ZVORO8IFhJMtdBfYiatPBT5
k/TXGnsnOUczSVJ7yX5v8dXV+9c0v+DltbvV1XrE7xc4sPWeK/0ssKjOQ6Fz
PbcWt4vsSnrkiv3EnEUuXWkvySTJbk1yoMg6wcNJjtL5fMUqLY8kNZnUj57z
wpqvvHDVcUmuaJ3vFZMk55Psr+TdQbNoy4NJDSQ1udwvT/paZ0vLC8t/K3is
xdhCwyLDn8xZ7Gt55q3u1vks5r/WLy1NLjNM8nmNUTWvJveVvDvoe8fCzK84
cG09QmNJNtPaXmBCwTDJ5wVGbfWvzti3sIrOjaRmRDaK9SQzXO+xxZAiS690
ftXdWkvJrEsymM7SBS5qPbc6S591K6PEvpJcncztFhMmzyWZUWsz0Z210AXi
vK6YQXDvVZ4LHSYzSvNbMp+XfZrkloVe052o/1bfZa7038oonclJltPf1R5c
ztUFllj2aSt7dde0ZtjS6pN3CgZ4opnWs/CLZoMWn4i+E/rU/nq7T1s9rpkq
qSW996SuWlktzrTlF9H7V2ct+q7VO6196UxY8OlVj2uWbmlGf/eqI0TOXGWv
zsMFv6z5Ts9K947IwyvNJzt0zadXjKT5YTkTrs5loYOS3kx2YpJbNKPq2bb6
S3Rc0mstny6s7apTRPe1el/wlc5AzRhCt5rZkr2vf3OVacmsEOfYysNkjom1
Jb32dh7QOm95R+sqqf9k7+uc0feRq3zQjHQ1hySLJjNQZ6mep8jDBfa+ypPW
32rNLOTkEz0k1yP2Ivx11a1rXmvl1dqz1k+SB9bYW3e37s2F3NZ9pPtCf+vt
mknOXPymdX9ZuLNc7XeBB9Z6SmTvWm4nOa3VBWt52NKMyNhWN4nuSPpRs7Q4
rxZ7L3eKfs9abifZ9er3a+d71QV6/slcSuaz3m/LRzoHxMyXs+vJ2kSe6z5N
svHVmS6s54qFdG6IfL76brKnWpnWyoHWOSbXnNRGkt+Sc9a/SfKP/lvtr1Yf
CfYQOkzeL5LsqrMoyVo698R7rjpI+2tZw8tcIfZ+5TWtW7H+JzNPzk3oSrOB
3teVdwTL6WwRfLLgr6SGBfOIrNAMc6X5Vvbq3tQ9Ljzb4hnBk/o3ydxLMqrO
w2Q+aP20mFZoW2v+SW4s3FkWnsUMW2xz1YMfEhfpe5DuSs0JLf0ITljLK31v
Eu9f63Th32SfJvNHa1jvXfC2YCrBV183NrvqsgWWeJItotOT69feTHZW0l9C
Pwv9KLy/kEWi13SeLLCZzhZx7qK7W+u/6kfhIz1b7ZFWv7dmIrhC5G3rfDX/
iD5t8bPIBPEtsQaxfqGBJM9f+V3Pp8WiydwQ2hO8l+z9t7Dc2poXuEXknpit
1p7IzORz8i6juVT4qzWHBc20ZrXMcgtrFvNvsc3VbEWe64x68h79Xf37q/Uv
ZKa+ryVnuzCrN/KVuDMurG1tDaJDk/cmzT+ix3Xva78kc1Lz3oKeW3y7zCEL
71x4z0KOiZ4SntUZe7Xfqy5L9l1r5poNknpOMnkyB1qaF0zYek9St0lm1j3V
8n4yb3WXLWhYaCypZ83hC+eywBiCi5LvubrjaB1enYvuqZa/rv52rftElr4l
Q3S2iAwR56I1f3V/ET7Sd58kYwjvLPdUkp/XWPqJnhfyQWdIsl9Ebrc0mWRd
7c2krjRjtLhRs4pgOaEN0eNXf5v0UZJVxNp0fyUZ9S2aTPKA0JWYrebDhU65
6jidjS1ubJ2pzpmrPtJrFh5ZONMnfrzK5LVuusqotf22+kX36ZWGRS9fcWZL
V0lOEBl4dS5a/y2PiPW/kZfWsiLpR312T7QtMlB44arvFrzQetb5IO4vC3cH
Pauk3nQ+JPe4zN4tLkp6WeSMyBBxdqLf1+4mV/cLkQPLd4qrvbc00PKU4N4W
ewuPCG4RXLfAcsm+S3ZBcm5JvkpqT2TygpaEJoXXBBtrfV7t6+o3rRxem+dC
5yb7S+hQe39BVwvzFL7TfbS2fv23uuOSfSG8o1lLM95V57YYKakHzZnifJN3
gdY5ipkkGTL5fs2ZyX2JrL46O83VIluErv7/+d9Skxr6
         "], {{0, 128}, {128, 
         0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", 
      "234179531560333249757404371202280747219"}], ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.2234872728586197`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.7765119671821594`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztlzGK50UQhQcFUTDzBGYGRpqY6OgNZD3BCBotCCu4mHkCExEMTTyAxzH2
Iu6CgcnI/zfdr/qrei9Qvl1mf9P9uurVq/e//u7Zt2/c3d19//ar/z17ePnF
ixcPP3711us/fPPw/OOPnr/5Cn/697/X/NuHv3/2989/fPrJXz/cv/f5O/e/
vPvl/a9/fnD/2N8/9jMr37mFH/tdK3z1+7vOrNBw5e4r3yTUw65/u0t/xc9U
aqs+m/qcu9660mfUPVjp85WaqGtGUSe76nBXzVf+3soaVszESq8+5Q/qelaf
Z1cNK3xGoaE6V++qeXW2J8/xyndRe4vCxwhzXDHfK3u/i78RztOFFVlLrfOu
7FRZh+rsV+nnit+lmL+EPt3l1Wp9KutQUcOVZ6PlEHVWqfSNXb6qnnGn6k2h
jyIrVs5Kwhkqfazy7uqzkd96Ug4hzOtKzRU1T/A3wgwin7OyB9U5cNf5FbVN
e9/K8xBmUxc+lYHVPUuof3LmIefGldo4lQPV51+5C+19FbtP5TtO4lNvqj4z
zd8qs26lbpVzc+XvO/oS7V1OvbVijmcX4PR15dsR+khdYyvfIc/Nylmm9iWC
PgRe0W3XzzjMWVqd7Oo7RS2d8rdd9Xbq+4R8ePXup2qpMkvQ+NQe1DH/EOYv
gbuff1df0HIj+ZyKDKn2K8KbdmSF/0+auV1qozIfkrlLblT3AsGrFTXW8S1o
vMv/Ff+W4CFd8r86m9Huq6hzQm6sPJu6fiprrMtbdOHMzXXvrXyXq7lI3e9k
JufGU99Z0Ued7a9+s3KmTOJd+1p3f+iY/wn90pHJubFLH52aR7vqedJbKDLk
yowg9DjBYwlvWtkvHZmWG8l9pK4ThVcnF+nqzWFukvP/rrzU0YvI/rar/sl9
VDn7dvVgcpFuR3DjLu+1KyORdaj0N4If0piQ4ZOL+O87icnvovYlB1bn4Um7
gNpvT2mbXFSTczoy4S0UuwDhLjTdKnNU98y5y0PUXtRFTzI7+wlB/6t9RDhn
F1bX9i7/PNVrCv9XZNEuenZnN88haF7Zs86sqO2rfkXrL8X5V+5FeNOwz15A
0FnxLuGa2lb4WGV/Xf29ip9XzI6pfkXwyUn+Q9A2uwBHQ9oecWoOXj3PyncU
tU3QdipP8h+Cnh19YxKrs1D3mb7rDLtqmPBG4RlzlqChepYRzkbgyhm68k1a
H1XuPor830Xn7tzRiwi6ETzHmdV1q/AxQu8QZuuu3aGLzl24iy8RtMouwGF1
vr3qReTeUc/W5J8ZTPYlgj6nNA/X1O2umqf1jnpHuDo3J2k1lWkeRdCE0Hfh
p9UtYY+Yyt29JVyTr5L/4xvdvch5pivqdqpWU/mUXxHuTus1Z66coWp/6867
6tZNt+5c6VeE+9K0DdfX5C5/mzrTV+51ylvC/L2AcEeCttHkbE1e9Tq3mX5K
/zCHFd5FuBdZz3BNTarrmTA3u+QZZw278C4fI9yFwNFHV5OVGd55pkdDT17x
McL5CRxN9mqo8P/M9OwC4bM95cDRal0fwlx2nunZBcJ5u+hG0+3UXFacpwvv
uruzht25sk8ncfSpqbeV+VJ5ho6cXSB8tY8I5yRwNKnRMDm2V55x1nASK/p0
KkcTXb0R9ggHjobhW3owb52ar6y3U/nEeaZHw/Au3yPchaAb4WwErpyhK990
nunZBcLqPDaVne+u1u3UXHae6Qp/cNOwI5N7uQs7332XbuqaTJ6pyTPOGnZk
ci93Ybf7ntIwObZXnnHWsAuTe7kju923ci8g7BEOHA19+FQvE+5O7h1nVtdY
Znp2gXC9R7nVg8Md1foQ5rLzTM8uMJsJvT+1Nqbei6DbqblM6yPavI6Gvdih
3wk89V4dc8It33fLKpV5xllDGhN63KHXJt2FrGFybK8846whgQl9re53Gk+6
C0FD2h7hwNFwBhN62W0v6H5+AqvrJzM9u4ADE3pZ4Z8EbVPzNfoQ5nL3niLk
GWcNCW/XkbvXT8czE1g9Q1e+ObXXsgvMY0Ivd/GELr3jxpVZdGoOoeUZZw1P
vdck7lhLXc5JZlqGd+u7aNiLCT3bxRMI70I4Wxde8fzkWE6ecdaw8o0cuEtd
kc/WhdW1kZmeXaA7E/qU4A/kuiKfjcCVM3Tlm859l12AyYT+JTC5xmjn6cLq
GbryTed+3HV3Zw2T//v6BqF33Lgyi3bMGLT+Si6qf4swv2cJZ+jOtAzv3JvR
kKl/WOcbtN5x5hXPT47l5BlnDXfpFu61F6Tm6+tfnQec+zQacjQP7/XhLr0z
lStn6Mo3nXszuwA//4SZe0Fqnjm7V77p3LO77u6sYfL/bG9JzfNn9y3fJ+QH
GmcXqNc53MtbUvP82b2r75z7Nxom/0/iyppMzetmN2GPcOBoWKNtmOMttN5x
ZvWbZqZnF6DpGWbmHELvTOXKGbryTef+zS5wNtuE++4Fqfl5c9m5r3fdPRpy
ei1c4z/ONd9lLleeoSMnF+3VMMznXXXrXPO0uZyZnl2ApluYzzT/ceYVzZNj
a3ohGqbHpzLBf5x513slx2YXIGgV7sU0/5nKlblx5ZvOPZ5dQOcb4fhP+Gla
ncq0zr2vyEuTNCT0Tni2/7hxZRatPENHzi5w+73CMzj1z2Fahnf2gWiY/O/G
qX8Or3h+5nhNL7hpSOiLcK+9YFL9k3stczy7QPJ/+FQWcqj/U95CyLTOPpBd
IH0a/v+cqd4j3Fg9NzPHswsk/4fVGaDS06ZyZRbNHK/J8B01JPRCmJNzaD3l
wLQM7+wVbhoS6j88w3+69wKBVzzfOcfScksXDQk1H+awcy8QWP1emd3ZBdKP
4V2+PakXCH2n6M2Vbzp7hUP+IfRCmM/xE47nnMq0zh4yNf8Qaj7ci+MnvWbu
Ld+pPENHnroLEOo83JdXPJ/WC2SmzVxnP5mkIaG2w31ZnWkJ/U5jwsx19pBJ
GhLqOcznyhom9AWZaTPX2Vu6a0io53BfVtdwvIU/c539pPsuQKjz8Aye1Bdk
Js9cZ5/ZdfdKDQn1HJ7H3fuiC1fO3MozdOSOmYdQw+HZvKu2nb2lcuZmXvvs
AoS6DfswzaOm8oqeHXMsjbtoSKjVsCcTPGoq73qLLjmWzGQNCbUa9mSaR3Xk
yty48k1nzyHvAoQaDs/mLh41iU/lxuwCvXYBQq2GPZnsUZO4MotWnqEj03YB
Qn2Gw+QemcS0DO/sSwQNCTUZDis8Kj7ztJmbGc2pc/V3CHUYDqs9x9lnFDM0
M3rGLkCow3B4l4fHZ552X0KmdfalU7sAoT7D4V1ZVL1HTGL1TMyM5u8ChDoM
h1e8S+H/BB8gzFPFfMmM3pvhT833cJiQhWh9151pGd7Zu9QahsMdWe0Pzp5z
Nbef2iMcOLtAOBzPIfiP4i0yl7MLhMOVeSme87Q7EjKts49lFwiH6/eCeI7O
K1a+6exdlW8RDnfneA5nnt7yncozdOTsAuHwXh+L5/Sdp87etUv/1HbYgdW5
l+AJbvPU2btW7p55Gp7KlV4R/+HMU2fvUvg8ocbC4UqvruzBLtxlnjp719W7
O9dzOKzwDTf/Ic9TZ+9SzAhCvYXDXXzMzX8q52nlGTpy6jkcPutj8R9Ohnf2
rso3DYcnMc3HOvKKVuo9woEzT8PhGT7WkXfpHO/KLhAOx8eYXOkVK9909q7/
3v0fevnNCw==
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", 
      "25383678045436598053387497115518594687"}], ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "\[Rule]", "0.06059623882174492`"}], ",", 
      RowBox[{"4", "\[Rule]", "0.9388547539710999`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzl1z/KZWkVxeFCQZyCZqaGimkX5kZl3lCCRg1CG6hZJ07D1JmY6DSchYHd
YFrgx1nPWvuWgXK7uN+577v3+vM7P/nN7z/87nvv3r37ww+//b8PH//4y6+/
/vjnX//gu//47cevfv6zr77/7cdv/vu/7z7/6Z8/ff+vf3z5/psvf/z+U5//
9tcfvf/VL/79xV8+/P2LT33+1PefPOetf/vW5/wvd3/red76u0/u/uQ7b71j
SifNXT/Z15PzPNG/9pT2SGrOq/lrL2iN6Wy5MJOUJoWWmjoX2X5tR6k+1Rpo
soTY44rTVvPX2l7ljGYMMc8LZ2v2iOaWZiY033HE2cTzxX5XmXyB67RH9I40
k6+6XrOZ9m9zd6kOSnWfzpOVti90jWCPCxnyit2nP6cybTXDFd9qHlv10eqZ
4p1LZ6bo3BU3NnlD++7Jfpvddy0bNbM156a9fDmLBFOJu2gPfk6eSn1f99Tq
vindip4V2aj5U+SM0KFmFdFfIouEzgX/N/u3qYGVp5q58STfVhmS8pHoxGvs
Ie4iOlfk7Up7elaC91bc2GTFa55aaVv0rNZts69TXJR6P2r6vcmr4i76mc33
C82NOp+Fpy4wpM4r7QXNFStOe+IRnec6x1I+vcyfeu/N9wKRh7rf9b2EHnTn
ruagM1nkc5P/m3nb7FP9WeRPM4uazJPSkvjOhTsKja26KcV71zJB9+O1O2qm
EvoX7CqYXOdtU2PXeuSJZnR+Cr5aMWFKh9prwqf6DBee38xY0TWCSVLc3jzb
am66R5qZ3GTaFF+tekrzzzWfCm7RXX+NqVY8s+JtkQPN/V5ge+2jCzn55Dla
n/psza5M5Xyq4zTnXGCq5r2a+dzU1QUeW+lK+Kj53nR5jyvmv9DjYu9i5qms
EEzV7O5X4bELfk/l0gUtibzV7xTXMqrZBcLXmgH03gXzi368nIcXeGzVZSlt
ayZf8XmTky/ssZlLmkl05ovfWnlHz0R0U9Pvoos104pZ6c5a8XkzKzQDX+5o
7QsxH7E7wR5POlrnvOYKzUsrX1xgWn3mpkdSPtL91eRhkTPib5s9qztO+F2w
nNaD1rPujpX2Uh0nGFjo7cIu9HtBk2Ob/97kpQs9pZmzqSXdm/p3xd0v9Mjq
/SjVNSsficxs7nTFb2LvzXxOzVDwfLPvND8Ljr2QMysmbzKb8E4zY7UfV32h
WVcwvM5YcbYnjHGBCcVsVx2te7nZ+7p/Nb+teFgzj/ZXk9W1VpvaE88ROd/k
OsHSgkMu9PVqFxc6SGSI0I9my1UO6+4TGdjco36O7nG9u5X3Rfc1n/lkX5rx
mvcSrN7MvWbXvAoX6X65wA+a8TSz6TzUPbKas+7NC2cQe2xmiNCA7qwLnm0y
vGbyplZTc2vOv8mEItMu+HTV480zNHch8rzJMLrrm8wvfLHKFs0YTQ3oTk/t
QvRm06e6Z1N/K/hhxYoiA0XOCF690AWrfEs9X+/6GlsK3Qotpeasez+VveLM
K50LNmhynfay1o/uUMFsK9YSu252aNM7Kc+KuzQzeaUfPU/x7yvubfZIk6lS
ua05VvROytepbm2yn+a3Jmul2EBruJkVTdZqdveKjZteu5Cfmm1Ep6Q+C+2l
MkozVZMndXes5inufsFfK5/qTL6gDaEx/bea21OZsJqb5iLdO80c1r5ocuMF
HzWZTXdQyuMpPQgvX7iXyLRV7wv/ps7TZCTBnBeYcHWG1Gw124uuSfVUMzPF
bC9oXuvzQi5p7eku1pyg80T790KGrD43O72Ze2K/zazQ/y74ocm3zfcF8Vup
HlwxQJM/V9rWXb9iMJ2fqbk1mUT4sckeWgO6s7Q3da9dm7n4TpM/V9rTXa8Z
TOvkWiZc4OQnu3gyh2v9uPJms2tEpzR7qsmoqfwRPlp1uuBhkedCP2K2qV2s
uEvoR78LXPBvM5eE5lN8qHlMM5Jg6aZ+mrNqMu2Fs2m2aXZik7dX2tBn1l7T
5xTzT/Vsk5Ga7wKp3xJ8smJFncPNjk5pQ7OlyOEmn4scSGVv04MXtLHqfc3q
ze5u8obYu+aHpj7F8zVriaxe9ZroaOFl0YMp7em7Cx7TuxD3XXkhdc5mXzf1
0+S0lB6E31P31eyXmluzO5p9vbqvYLxrfJvKyQt3XPH5qt8FFzX1oM8pNL/y
gu7oVY/rHlz5VM82pWHB3ppnUrNa5Xyz+5rMcOGcQkt6JoIbL/S4zqtmR4u7
6xwTz1llr/B4M+cv6L+pW5FdT35LZ5rmq9TdRWeJ95drnLzKigvP0brSGS46
SHdo00did4IZVvl8Iff0XQQj6T2u+PbCDC/4WjN2au+rOYse1Hu5kGOpO4qu
0Vmd+q0nd292bpPNmrtonqfJA00drjordebmHARHaa1e65pU/jT3K2aoM1Nn
WkrnK381uUJ4QeSe1t6Kt1f+Evu93NdawykuEs9PfV/zp9bDK7KKyM/Vvpr9
2NRMijmbHdFkpGveFAwm8rDJWqk+1awlOkhnV1PDondSmZbaaVMzqZ3qfEux
t55hSjMrjm2+pzQ5QTPkBS1d602t8yYPNxnmgoabzL/i2ycaEzmc2uOqU5q6
bXqtmbGr3knxntC26Kmm1wQrrjTc1KHO1dScdQ6LLtP5r1k65fcL3tQsqr0j
slF4Ss+wyQ8i/3U+PJnDK+rnFbtJc77IK70jnZlNTtO8ofXQZLOVr7UfU2cQ
uXqBgXWWrrqp2UFCDyJzdL41Oa2Zt02tXuNqkQ+vyNvam2JfIru0H5/o7ULH
aT2kdiR6UDCn0EPqLvrMmqt1Pza1lMpGwX5NltZZLc7W1J44c7P3V90kvK9Z
ZeU1/bvNzr3Ab6+Sw00mad6lmb1itivWSmlVv2eJPNf9kupH/f3mLi5kpmBR
seuUrprzFzO/kBur2a76S+yruXfd0Svt6b00+Vln5opXNRusZtXco343uZCZ
K5YQe7mQyc3vi+9cyyudXSm9pXJYzER7U/e1OINgoVVuX5ttyi/Nf0959oKe
RZ6IvNJ9oe914WyXtdfkz5Qv9DMFf4q9CEZa3aXZucILmplfkc9Tn5v6b3Js
U3urPtL9q/OhyQ+CJ3XXaI3pfk+d/1qeaA82e0Tr/wLf6k5s5qq4o/aR6Aid
h6m+W81c9JTwiM7GVM7rbBHPab6brN5ZdHdfYBWRw813InG2y+8mF5hHcF1T
8/r9QswzlQ9C87oLVu8RzfzR9xL6EX5s3l3zwOUM1D1ygTNXu9D8oO+S2qk+
v+BVrbEncxZe08/Uu17l24UZai83Z36ta4RuU5nT9OYqrwQDNDlWeKF5X609
wYTNTNMdscqHZg5c7vcL53nSQaIHL2SU9r5mWp1F4u4iD5u9I3zR/Fvx/dTf
CqZd9bvo2ZV/U75o3vGyrrSPmv2rtbHK+WuZluoCzYFNHhAe1PoU2Su8nGKz
po9EXwhdXWaV1DmbmhF3aWbaNXZa9YjwUTP3Lui82aerTr/2u029CT08+V29
uwud2zyzZkWdsdo7Yo/Cm9d0Lths1RdibsJTKz+KzF+xXypPhE6e3Fd8P7XT
V+RevXfBOaKzUp5d9azI8JQexC6aOSbm39SV7tkVx+qebWpAc69+B2n2nZ6V
9mnzzKncSO03dYYnbC+yVPyW5uprjNTMN+1B4QuRt82ZiE5vctG1/BGfdV4J
z6bySnCsyBCdq4KRVtoT2hC9rN9ZhB9THHKNCa+9N4ldiDkIT13Idq0foSXB
wzrrLnO7yB/dNc3MTOWD5v/U72pu1/e6wHXaR0KTFxhS95rghJRWm3MQ3N7k
zMv70lnRZGbNxiluEXrT3Zpi1CZLCC2JrNM6b/aUzoTUHV+RCXWf6sxMZbXO
Z7H3Zs/+P7O9zgHd3fouzSxanfManzfnoPNZ9OmFXm7mfJPbP1e2b3bTtawT
OZM6Z0oPF86p9azz7XPS4YV3nFTONGeSOttltn/F7zcZJtVl13j7Gq+Kvkj1
2mUdNnv5Qs9eY6pUvon9pna3+n4qYzWDXfN7k+tS89G/JTJH37eZ2zrrNMem
GCP1t022v6bJpp5T+nmV2aY02ew1zUt6nlqHusv03TXDCw+K/tK5kZqh3um1
vl7lTPM9QvP5igOF3i5kYEpvmlc1O63008zAyx0n8nbFtOL7OnNSe9G/2/RR
6o5ink1fC90KNhBcdy2fhf5XjLTKE6HD1V5S2bJ6d9OZmZqhmJvYY8rXzawW
3Ch+V7Cu5mrdcRey5VV8LbK02dGr39UdpHtcZ5fI8BWDrTI5NX+Rk1qT19j4
grab82xy1zUmSfWC5iWdwxc47UJOrnhPdMqqC1L70ny7Yh7B5/qczZzXe2ye
4Vr2pvR2LcN1XmlmE3wi8lkzquBbzSeaQ16xf/WcNf80MzaVvSs+vJDJqUxY
MYPoHZFpq45o5pJmoWYeNnv22juL6KZmxjb12eRh3fUih5/4dPW+8GQOWrfN
zGzOX3B4s3Mv8GTznUXMNuUvnTm6C8RemjMX7w6r9wU9hxSHi5xfMZVgyxX/
NM9wjQl1husebGpD857enThPSsOXv/9EPyK3NWOIPl3xz7Uz6POkPl/LAc0b
zeev2KCZn6kc05+f6F/zidjRkzmInEmxpehrcYYVP+h+ETkgcm/1fM1yIosu
Z0WTr5refLIjzTOrM+jOXXV9k09EVqzY/tq/p7psxfwpNhOs22TFpqe09pr+
1Rn+xAuXvZbSre79VW6selz08iq7dG6IPNc5o3MgdYbm/FcZ8uSOurtT3nky
h6Zu9V5EX1zret1fgsnFLl7lzGLXF9i4+V6w0vyKt0Uu6b5odmjqd3UuaR4Q
mam1JHSb+o7mXsF+TTZevS8IzV/Iz1XfiWzRGrjgF3EG3S/6zCsGexUfrbpY
nFN0TcqzQnsiG69laTPfhPcFgzV5oKnnla40O13gUrFr4YsmCzU5PNW/qTtq
jwuGXPnoGieIWaUY9VWyS2hV54ng+dTMm54VPhL7vdApeu9PZtV85gW2v8a3
mtVfJbv0HVe9IHa00m2T61Ldp/NH9HKT5bRPxaw0F6X4VvOqOLPOXp1FT35X
MHDzb7V/U3tJ6VP4etWzK054lTtqPtGsKM5/4cwX2GnlKc2BzR4R3NLsIK1V
4Vmdz7pz9ZybrKXfO5qcJt6VUndfZZQ+25Pni+4QXaP9pbNF9LLmlpQGUj2u
z586z4rbxXlSz7+QISnPCkZtelzksJiJ3svKjxfmrDlHd4roa71fkaWr+ac4
Z5WrKWZOZbVmEt37eiZ6zk0/ir7WHtQsofmnyfMiS/VOn+hcd/Q1PTfPo7k6
lSHCRyndai/rnFl1qOgvnS1Nntf+bXKp1n+qK1d3bHbWhftq/ac0IJg/1VlN
DmzuRWfdimNF36W6r5nzTe83z6C59EJeNe8lztB8R0j5upmNzczRWZrilic7
Egx2gYuaM1xl40obOsdSWtU6WXWf5nnRmyt2FZ0usuWJlgSriOdc0EbT++Kc
Qlea2VZstuqmJhelfNfMqwus3syKJk+mdi2YVvSy6NwVF2nO1BpIcUUzx1Ja
XXW0YEWdV82ZrHq2ef5U74i56bOJ5zczSvztBc0L/Qi+utA1KQa+kIcrbhT7
Xc1ZdIfo7mYn6l4T3CU4rcm6zV7TeXKha5oeb7LH5ay+4M3meYSXV53Y5I1m
pzfZWPhXazulsWs8tpp/kz1WWX3Nm+L7ojf1jpqMLXhpxT/Xsk509yof9DNT
cxB80uxEnc/NjtCde43rmhlyIT+b50m9g6SyTmjywsyvdVDzXWmVPxd2pHmp
mZOrvl5ppunfy5z2ZF8rTTY1cG1HFzjhwhm0j5oa1pkpMqrZZSsuTZ3nVb4v
OEp3Yur8Tb2tdqQ7V/O8ZpWmhoW2taeEtvUZRFYIDrz8/SavXvCX5qvLOxK8
1PR1yptCwzpDBOeLHk+dbbULzXXijkL/IuuauSq46/KOdI6t5rPqDt3dT7o4
9f6yuovouwvf188R2tAZvuKf1DMv7KiZAynmTOX25QxffW4yntiXyPkmp616
SpxZZLjuPnGGC/7V52myxKo7mhmu/dvs/dS+Vv5qzk33lO6g1V60d1bcqH9L
e1xrTzO/zo1X8b6+Y9MjQttiF1rPmpdSZ2vmie5ozZn6+9prqT66wPwXGFXc
6613/A9U4p8r
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", 
      "198476619696798272452027738615092731693"}], ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.059865422546863556`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.9400937557220459`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzt2jGOHdUWheEWIETGGBgAAZAhuRFTMCNoJIhaQjIBIgLJMyAm8CiISZgF
DIMcWyIgMeqrOrvO/9dawXva76ltr9rr1Fd1r/3R1989//adu7u77z94/V/P
H3748sWLhx+/ev/N//jm4fGzTx/ffT3+/O9/3sx/f/Lq/rdffr3//eWzL/47
f/j46v6n9/589vFff3z+lPltv/bW3/9tP7/q97/1Wm79c2/9tU/5/6f3P3G9
R65xVZ5VP3/krN7a6ZE9T8yrzu2Rn1nV1yo3aBkmdjth6cQ5n7Bu4j6dOAOr
uph+jqzyYeJemPi1E04S/Cc8H3e9R0286666FyZ6nLhnCe8q025MOzDtxsQ9
Mv2OMe3zLkt3mU94vhDew3e9V0w/y6bfTwjnfJeTZ2YjvKOeee/vemfY9d5y
1Zn2Hj7R17QJhPelM99Lafca4Qzsem5OXOP0n1v/OeavMpl2v0w/a6Y/K52Z
gXYOV+1n1/vGrvN8xO3pc3XkZwg7v+p85jsG+bpW3SO3/trpDOSOCO8kll1N
W014jhB2TrgXyPcdubtVf+7E+/zEr7WbNv1OcsQuwq6mP2NO3PvTzw6yG/Z5
4h3D4j/hPWriOUIzbdW1T/8+u87zhLcTJk880wnnlnYvWMyn7XnVmZ9+j5q4
FpppRv9XnY3pZ/30PUI4J2eeW9q9QDD/zHucbMiE4bvO87RptO4mrmuXyYSO
ztwD4Vlsn1f5Q753pu/9iR2e6TDZfJr/tO8fyJ/dCJ/lLS6RzT/zGWHxf3pv
09YZz/yZ/pM/H5GzEc7PxD1Cuxd2mT/x+9PunYl9Tpg8fW5pZ56wT9quCPeU
cSdnnjHC/UL4XoLwWZXw/j+d327aLv+N1pHzEPwnnDGy+UdsX/U96pk7n/Z/
VV8TzwLL/Uvz3/j9ACFP/eebP7G3Vc8FsiG09/kzP2sQzjmhC+OuEjIk+L/K
hzO9JdxHZ/p/5GcI33WTz/xEF3bzadnq//nn/8zvcKZz0gw5s5ddZ3tXLxP5
jzz7aKYZc9b/vde46zuNiXuW7P+RXo58X3elXo7kJ7w/0GZCzvq/93ppn/cJ
tuz6DuHIs2C6L0Iv089Zgi20/Vw1Q5r/R+5lwud9wvvb9HcIuz4XJH/XUf/r
P/ksEXZCePcjnJNdz6Ajz5Hp744sZ77+M3MS7mvyWSL0Qrhe8jkhfPe+6/Oa
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
SbIDxr6Mhtw6/wP1wkiq
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", 
      "338073225958790856870507077934439630490"}], ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.3547839820384979`"}], ",", 
      RowBox[{"2", "\[Rule]", "0.6433572173118591`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzlmEGqblcVhB8KwZZzcApKevrEKSQtm08wrYAQG8ZewF5G4BB0AE7Apg5K
E0g38C67vqpvn7+hnDzuPWfvtWp9Vev+4g9/+uyLn7x79+7PP/vu/z778Jff
ffXVh79+/sn3//HHD1/+6pdf/vS7x29++N/3z//6+ue//fzTf//mk3/+/f1/
/vH1r//2zf/ef/vf37//sX//mOeP+d2P+e5b30PchahJ6o6p+ry1L7ROiDqn
+n7yTNQ89TOEfujvpupM3z2lQ3pOm3ckuE3U/0SHJ3ygNZ/q3Wp+iXlvMpbQ
9i01pO9OzJ0hL63es9Jwir30z6e+lWJ46pxNDhBeRuTnZs4h2LWaC7puqzml
PTSV2Qx7R7P+xL83sxOd1VNZkc5ddNZN8Yp+J51JmtmPyIfNfJvS3ir/0zmw
yYSm96Vq2PQCOo81fTDFH6KGRFanmU/PI83JJh+I7EGcgfZQOlc0Wdrshc2b
bDmTYDh9fuI8qfOfzFpzZmkumflA6N+WQ4jMae6v4cypLEfzbeVBRE1O/Dfl
QSvmp975JP6ncqA5hxB52Jal6bqZs0dzpyOyBK0l4v1EfqYzOZHrbuc/zdXm
79L6JHyzyfxbdoHU7BA5bZWxmz678uVU3Zoseir/V/Vp5hx6jzB7t+1ezd2N
nouTfGhmQtNTaB9MffdG/hN5O8Vkur+pmhh6utq5DDmEmK9VbjQwIXWXEw4Q
NTnRD8HAp7JidXeadbbM3NxJV71r3mXFt1v4kMp4xPtTzCe8r5l7m/OV8lZD
VjnpXTPLrfIJncdWdznhM6E9A/9PZvZJOiH8xcb8E7abtUFkDyLvNX0tVZ/U
vKzu0pxH4i4rL6BZutJJKgMY+E/U5MQjDNng5F6EB9F8SN2dZrKhjzZNmncB
Ohc1dUJnyJR3mPW2yv8rr6dzGlFPmjMrv7PNZtO/bvECYnaIHLvaI8y515y1
CM+is0dTD4aM19RDKn8aWLGqVZP/dG4n+k5kIZp7dDYznIF+J6E3Wg+357rV
OenzE9ozcD51TtqLCb7RPSJ4SPtO8wxEJkzxYVUfc66jPZFgOKF/A1sMXpC6
O63DZo9S57z9DETmJGqS0uHKE1d3t91l5Revxv/UjmDTZNOnmjUhzkDrivaO
pp5PWGTL/DdqhtgFCLYYnpvet2LjyqdOckhT2zSjaE9PvX/FIlvmX2mG8Gti
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
p8koQm+2Xq9yeCpXEPNI1N/AbXquDfNI933F/FXmoftoPlvK41a9XnlHkxU0
t213NzwbMhgxj2Y/JTKPwV9WZ0vpock3OquYcwUxCzfe3cB8OoMR83hLL1K+
QHhiyqOb/07ca8U0QkuGXEEz35ypbnxe7VD0LmB+pmtF62FVkxQfaKYRvWh6
JcHVVfZr3t3AFlq3xC5G8MH2bJiFFccILRH5zebFzcx2wsbmvBP6obPZ7c+0
5640dmM9m3en37niMJEJV0xY1YTo3cr3aZ966rNtTl+h/vTd6XrS+2Nzfs05
pNnHJnsNPDH33cafVa2e1IvVHrTyFHonSmX4W7LHao9LcWBVW9uuZ9BPahdr
ntNQQ7rmqbvf2C+CLbfz3/z3qKaem3cx9N3M/JUODfWkZyfVu1UNbfe9nf+G
PqY4YGCIgWm33HfFltv7Qvgs/TeQlfaIv4ndwiXb2Zq9MN/FpoFm72x56ZZe
GPYs26w169PUv0Fjt/i1QYfEXQzPK+bQtbqlF7a5uD3zn/iaTcPmWSD4sMrV
9F1s2mjOlGF2bqy/bS5WXCLqk/JT84yvcsJJv1JsWd3FvAvQu60tO91Yf8Nc
rHzZkAfe+l2bxuhzGv5WYJ5H2y5g9mjDvBvqn/LcW+pG6JDgoa0XTe87eU6x
guADrT3DLmDwaAP/X81zzXWj2dLk/43Mp+eU4GeqzintpZhpmC+i/ubd+XbP
NXgZzVjzvBh6YXhO9ZH2JmLuUjVJ6SeVLZv7IOHvK3+h9WO7V+pnbPNiy3Lm
Z7o+NPNTnkVwr7mnNDVgmJfV3Zv6sc14qiaGvPfKuwDNqBTzU5nqFs4080nT
c5s5tnn3E/2Yd5mTGTQzJOVNBoYTs0Pn0uZ3CT7Q7yHyGL1f2PL/jVpaZQwi
mzV3ilS/XmEXILRBZ+YmG5v5je5F814G/p/U38A9epehs1nzPCkNr/KAjflE
L2j+pzJMMyveMqe2vje1cfLzhH5ordJ5LKVbum5NvzYwP8WQGzlAz1HTc29h
o+2ZztsnNaS1SvN/pdUmx2yab+rQzAG6DnResmmJmFnDvZrZj2BU8/2GXq/m
2rwL0DnzlhxI5/YVf56kJcMzvfet5iLlHYaM1Jxr+ucNGn5rv27J/4Z9Z3Vm
w3kM+YdgI8EEAzNv6XtzRggfsdUkxUYD/5v7juHMT9KS7bmZH8yebuj7akaI
3zXUJ8W61C5p4BWhAXoGDTU01NPgxcR76HvRDCFY0fSsE4bTfafzLVFn+u5E
32nGrnJOs4/mXcCggRX/V30nuHriWYTX0xxoZi2izrTv0znkRs+if/cW/t/o
sytfozlJa5VmOL3jnJxhxSsiH660l3p/s4YrvZn5n+oR7df0zDY5+dYz01q9
kRVNltJ3b+btlPYI5hBcJXICkZea/G/OAlHzpk+ZZ6SZvZt1SOXeZt5rcqDJ
f+JbK/6kNED4lIH/dB1sO0WTCavZaWrVlsNTmk/NAjE7Tb3dyB+6noQmV8xf
5cZmHkv5uGEeV9njxgxG54EVB1b53MCf5lw3M8nKZ1ceQedVOgsZ+E/4743M
J5hM/DvRC1pvBv40Z63pX7TPmnMR7cXmXGTwTcLrbcxv+njqDGadN+fa4H23
5P/mmVN6PvnWSic27dGcXPHqxvxsYNQtDCEy58r7iBk0nLnJz5T2mnNhY/4J
Y+kZPPH9W/JzMyekvrViCMFSegZTfGhmMAPfiFqt8t4qa61+N8WWVD1T578x
J9zCEDpv0Pn5hFHNPhKz2cwtKzau5prQG61VYh4JVhNeacgJdA1pfyc0nNIn
oSva75ozdQvzUznk5P1NvdH5gciB9NnoOTXkf0JXtIYJ/21ytZlLaSY08w+d
YU60TfMz5U03zmlKS03NEx5B1MHgfcTdac03PbGZOWkO23L+inWpTEjo3zCn
hH6Imt+oGSIj0b5Ps5foaTOXEr5M8NnAfNpDb8nJRH5L/S7B7dRspua0qRnC
U4ieEjmN8JcV5w1ZYpX/zR5K159mV7OGtnkkciaRYQg2Nue0uYsZak7Mb/Nn
DPmfnlObHlJ+SviLeQ9azRGdi1IaTmWG5sw2e01ovumhRDZYnX+lH1oPBv9q
zixxNsKDUqw2+AKhq1VOs+mQyLdNTzfkHNrfV3poetOqPk0WGepPcJ6eI0PW
amZLQodN7zAwk/BBmifN3aTZL4LzzZk66fXqDB/zzv8DuDLtdQ==
         "], {{0, 128}, {
         128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", 
      "327367588377016075437244034595798938936"}], ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "\[Rule]", "0.013391775079071522`"}], ",", 
      RowBox[{"4", "\[Rule]", "0.9865106344223022`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzl1z3ObVcRhGELJCCFGTAAEhODxRRsAiQigyCyhAQBQiSEDIxZMAGLUfAj
AkJf7X6qal8CW/t+2uectbqrq97+4a9+9/lvv/XJJ5/84Xv/+t/nX/7xZ7//
/Zd/+uI7//7Hb7786seffvXtfz3+5b///ef5l3//6dd//sVnP/r1p5/99Qf/
+OnPv//FZ3/77tc/+d/n/33nyfsf+tlv8vdv8vxNzvChZ9Z1eFKTJ+dvfaeo
w1V/rzST1PNVPYVORE2e1O2q11d9F75xVdurvrc8dmE2P1RLQrdJbxSzqe9+
pRnhM3rukr1OMklLMy09J3lS+GeSf7SW9Dwu5OkVF+nZEV6XnHftw8m8Xpg1
4aVrWXDl4SKbkjPbYh6xWwkfWOaiK20nmWQhv96SZWLWrrQh+tvSxlo2XfGJ
+M5kxj2puT5n8p2k3lr9usovkX0tvxK9aPGJrv9V74QeFmqenEdx9yuvXuDY
t7BHUs8tbk/OeGt2ntRQM5KY5aRnirlbZgCt8yuW071e8JBWr3WetvbTj3V2
FvrY4jSRKUmmXdNz8jzLWfmWfVD3WuRmsnfJPWhhdpJ91N95tReIDBJM29Jz
K6OF9nQvWgxwlQVvzDWRKdoHFmZnYWa1D1xlRKu2V3y7ltFCe3oetYcvs/dC
TVqZ0vIEzX4Lvyu4/eqcLf3rfrUyOslva9mt73KlyWSuLfCDeG7llKiV+N2r
XiRnZCELtMZE/RfmItmv5KytafKqJkLDV7Vt5eZCpixorMVCC17XYqGrWVvz
1TWeF/6T1KSer2VmE7m5wIdXOm/1/Y3Mv5YXrVlI+qpmEuGrT561BpI+sJa5
Yk4X5n15dpL3bTHk2/OixYfLv3t1TvF3sT8u7CY6c8XZFuqTnBftXQtnELO5
MF9XHqJnvDW/T3xGe7s4Q/IdoVXBw4JJWjwmGLi1S67x9hvz6MpDxDuC6678
OanbNz5r5lnLdL1/CT0L9kvWKnmG5Iy08kJooLV3JLNM9/oqx6+ek+dcyI7k
7rOQL4KRhK70GVr7xUIerfGwZqfWXF9xi+6L4MAkx67NcrLm2leTfHL1uy2m
veKWKw3rTPmYsuxqvq50nuxRKwuufGB5ltd8vsXnOvdb/nPl4a1cEzoROdXy
RlEr3a9kxiXnd20PWuiF0O0Cw2vPuXpf12d5fgUvteZxLaO13749c8XvrvWi
NS86g0SWJbNA9zQ5U1d9WWbRlucn50j4w0LmJjP97b/V0oPYBVo5mMyCJGtd
1fZjZdErbbd+q1UfnX06U5Kzlnxe4MkWn4t7XeXawr52ld0L7KH7JXJWc3Xy
HZEja3fXuaPZYzkLtE+25ndtr7maI8GBwkM+dKZEfa4+q7WnZ02cIXl37fNX
s7OQ6VczmPSTq74vZNZVL668rqXbq7vo+iT3gtbsiHO+kY0X5kX3Ivn3ljaW
Zy15l5Zvt3bJJ7pay9+rPegqy96oVZ3p4l5re83y3pSci9b5rzSZ9O2reRQa
S94x6c9X7189L2hV/z2Zm1d1E/pM+rzmt+T5k+ytuXSBFUUf9WwKLWmeTPpn
KwsWvGhBk5r3NAcu+0+S05IzuPa7b9Sk6G+y/vqzov4Lmn/iA1pvTzxfZ4pm
3dacCu5KemmSVzVP6uckV+gais9q/9GaF951NTv6vsmaJD1T90JwUfL8V/Mo
MqXFZq06aM20vKuV+8KLkpkr+iU0Kfy8df7WXCc1L7T0Fja76u+abnWthE6S
+5TeiZIauOKZBVZMemCL03RGCKZqeY7OOH3fFq9ecVqybmIGdRa0npNZecUA
yVy+mrs1Hb5F88LPdQ7qTFn+rWTdWlyhd9gPZV39W8netVhaPK/pcE3z2nOE
NpJ5mtxlBBcl67aQ3Uk9X9W51d9lXSXZQ/jkVb480bx+p+WrIru19p7UtqXD
1t1Fv674VsyOYLO36Er8rtib1hhyLY/0mZNztKZnkXdP6tniKJGhC9rQ2aE9
NqmfJ2dbYAat7YU8EmcWc9SqlfZn7YFJ5r+aqaS3XHlmslZi9rV+hDaSzHA1
18ksTtZfzEgyu3UG6dlPzrL+LaH5qzNo/Qj/1zOb7HuS/TSP6b1Da174c/JZ
Z1BrXvRupbNe9Gg5C8T5kzVvnWFt3nVGfEwcru8u5j2ZNaJfT+qmNaB9qZW5
LV1pFhXn171L7h3inAt3X/DABU9I7n1XtdXaE951tae0MjepDZFrVzVPspDw
Ad1TwRvJHUTkZmt/ae19LSZJ+saVJwivSNa/5fOatcRMiZrrrElqQ+8LgsFa
z1f6b+lZ+3Zyn9KeI/IomZv6DHoWWn1JZpnWocgy/f3JvWPNJ6/0vLYr6X1K
aHgtE1sevsB7wjOFrtbYVXhgch+5mvHkZzVjCA/RGXR1XzELrUxsZZPO6Nac
XmlA1HbZq69mtpW/SQ20sjg5C1e6Fd6lv/Mtz2J2tFdc3VF/j777wi6W3Lk+
Vk0K1mpp+4oJrzJC3+uqX1fPLZ8RfJLMeuHtrSwQfLjAG1d829JkS/NJrhCc
IDSZ9N41Fk36jJ6LK10tsFOSQ7Sft7xR+NUTjxK+J2ZZ6/DKn/V3tmZzjWkF
FyX108pcnQVrPH/lmYJJxDnf4ld6r1lgiaQHXs1mqxfJ+UrOxYJOkrVa5q4r
xr6qydpdRE2SfV9jCZHdrVnWvbg6j/b55JzqrG9xVLLmLb9Nnv/qDFe7T2vW
WiyRrFuLw0WPkjuauNcV7+m807XS3quzPtkvzXvJHSTpIcl3NKcl8+uJhlt9
1OzU0nNy1pLMv+Dz4jziLsus2PL25H0XGFuwgciOhdlcq22SrxbY9eo8SWYQ
9Ul6fut5zdsX6iNmJ5lfur9XHnV1zhYvJbOp9f6Td9Z4TPR6LVOuclPURHPp
k5po/0lmk+AoPe9Cn0lGepLLus5Jfeq+67tceciVZlrc8kRjQociaxb8XOds
a3cQvX7yTjKDBAcu61D7cHKORKYvsOJVnYWHXOXsVc0XWKLFUa15X+AQwSRr
nqxzUHidnsc3enurX2LvWPZJkYNXHtXqu6j5ArMJJlnId5GDa0wr9s2FOy57
o9ab9knBgU/YQHCR9ucktyS9XTCezvdk1msP1Dl7lS9JzxefXZjBt/Rdz9Ga
bq+yfo1L13LqLV70RJ+t72+xk5jZK4+60pj47ELfW/Mu7ihmcyF/hedrXxKZ
+5b6t/qrOU2/c7WH6v3u/6HvSZ68uqPICJ0jLW5fyx3RR51ra/vXQja1aqL5
cEEDV31P7rmC6xY8tqV/XcOF7BZ82JoLkWVXM7X2fHXH1s54NRdvyXr9WwuM
l8xH/VvLuZPcC8Q5Ra61Mkg8J+dijfmvvnOB357oX7PiApNf9ffqs6LmSR9e
YLBkXiQzaEFLy3vcQr+0h2vG0LVde9bn17OZ1MnCLIt3kjOrWfeN89tiwqTP
6/1I+4DYsz5Uhws7rKjhE+0lefKqF2vvrHGX7ntyflu5nOR27aVredryq+R5
dHYv5G/LhzVPivsmuVR7hc6INV5N7jWiFwsc8mQuFnIzqVVRT5E1CyzUqpXI
jmR+JXOt5TNX9dfcJea0xSFi7pI7yFWGJuu57Dnar0StnuiwlWVvz6DW97T8
ZPnvLY9q6eQqZxd8T7CHeNYsof38ancQGSf0qdnmiW7FGURP17y9dc7kfIn3
kzXXvyV+V+tBe9qVB4rvv/otPctXWZbMlKS2k1zX6qOeTa35q/nV3q5/a40V
k1y9wDbCB0TWXM2j9iLNJFe1FQypNaAzOulFy7l89VuizmsZLbw3yTZrPRK5
c/V+kkuTvq09TfubYIYW+7V6rX0gOeNXnxV9bNVcPy+w3wKTtGY2yXULLJRk
QuEnSe5a8IRk3698adl/tIY1T17VSnNpMgsW9nGR3Vd7jdBt8nc154jz6O8U
9b/iqJb/aG1cnb/lS4I3krUSfrXAA0nvEruSZp7lPoo6LPtt8rPJHURziNbz
Ms+37q5Z+qpu+u7Lf0/6pOaZq4xbmKMk9yb/rs+v87qlT82HSf5c8Hbhh2t/
F76R7NeV3yZzc8FD1rw9mblX/UrygPacJ88tbV/VUHjCmrcL30jWWfut9hPN
e8JLk5pZyJqkZloz0tJAK7vFvrOQBVf6FPN7xRJCb1dctMafwpeu6tzybXFH
waVJnmmxx5U/Cz0nMyI5O3qHEj58VcO3eEWL5ZLsKnjjal7e6NXi+7X+9V7w
pIb6XmvMk5wdwQMLmml5Y2tXEvq56lGSKxa8eoE9Wv7zxCuSbJOslThbi8mv
/t7STHKmlme55b1JL219/9o+e9V3ofMk24gZ0TPe8vOWpy2w0wLnizlau4vY
JZNnS+adzovWnCY5p6Xtq+wTMy501dKkmF/h28lZTupTz6bIsuTzFUPqub7i
3uQsXPmAPlvrHZ01a71uzbj2vWTW689eecjVO8KrxWf1zIp6tmZB1DO5O+g9
6yrrl3vd4p+kJyQ5RH+2NS/aK678pOUJLf8RPiNqu8yTyTtenaf1W3retccu
nzPJlsLfhJ9rfxZnEH6b5HPBKi3G1ky17AlaJ3qP+H8+p84m7WlJZhNnu+Ku
pA8nvV3zVXIWBFMJDtH6v2K/q/p8rOfUvUi+o/MomYM6Q1sMo7Ne11/M2pO5
XshEzVdXNW95b+ucYvbFvAhtt3QuMi7ph1cMI/zhanY0J2gPaWWB/l3he0k+
T3pCS7cLGfek7y2dtzw86dXJu4u/J99JakznlNCnyP0rr9a5uZYpoiYi39/I
UULbmjMFs+ksWNOJ1liSh6+0ulbzqzrovreYTWeHyHq9dzy5i/A97WlvZLMF
nQiubmlA8M+Tu+h5afm89lLhdaJugkMW7q73L+3/Lf9cqNvH2nc9Fzqvdc7q
72x5uM7oJHetsZbIcVHDqzNo/9T8sJBHuubJ7NN5t9A7XR89R8Lnk9nRms1l
Pmz1RbNNkif13XX9F3TyZB5bMyIYSWvyQ+crmR2az1usmNRqi0NEj7TPi3om
vVfrdmF+12q+zNtXc5rUgL5vkhX1GcQsC2bQ7JGcx6SnJb9fZ4H2Q80Jmj/1
XD/RgOjp1fPa3F2dX/dR6+EqN9f2o6R/LjBPsi9XHtiqp2ChJA+L+l9pUt9d
M38rf69qm3xH89VCXmgNCM8XNWnxWPKz+u9ak0kvusqXpL/pzHqjbyR70cop
0V+tgVbvdIZqnbeyIMnPV1kgenR1BjEjYq6FNyb54UonYr5031u+0eqdzuKr
LGj52EJWCm4RrL4wF8s8IM6Z5C7hM8LfkvOozyB8OzkL2peutLfAaUkPXNBk
kkU1DyR9THvgVe5f1VywR0uTorZipxDn1361sIvpTNR60DO78Nmkbyd3KF3n
ZV66eha1Ev4mcjbp25oxWkyoa6X1kPQZwZ8Lea19TGtY+16SkzVDJvlWaEbP
5tXs6Iy4Yh7tt60ZF/XRPt/iNDHXC++/sf7Jd4S2r3Iq6Z+aG68yQjBP8u66
JrovYi6WvUj0sfW+zkHhk8l3tM8vZJz2NJ2zazuFzgKhPf2sz7/mRTpfNP+0
svgtu6T2yVbGJfWj926dTUk/F7wnfrfVx+Su1OK05Xy/6t2yn2sf1rOW3O8W
uKh1d+0nen9f8PmFu3+s/vCh3yl2kLWsFN6r/bnlpa3etc7W4grNSGLeRda0
eD65a4hZSGZWKwdFriVnQWTlWhaIeiZnOfn9SY8VO5RmieR3JnlggXNEtorf
WmCMK59f8FJxx2QmtjSms0zMl96LW/nS0o/w5BaHtDLlqnfJXVJrWPdFeNdV
DgoNtHauZV/Se8GTd7QP6F4LjhLvayYRvLHAh3rXSPZlgf0W+KfFtNqXFr4n
ma1XvytqqGdNa1vfsXXOZE/XWLHV65bHJtmp5e2C7a/yPZkFV+fUd9ffI75f
s4Su4cKuoVmxNcvJ3Fz4LT2Prdy54mR9Nn1OwTOtfl3585XHLuhTe7Kuidbk
1Wff7oc601t51NrLtLck2fIt/WqxkD6PYMJWv5K9EB6VZMhWv66yJrlfPGGS
Fidf9UhrYKFfurba696YxU/O9k8M5lGx
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", 
      "64210583158946454226752791209536621761"}], ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "\[Rule]", "0.32766857743263245`"}], ",", 
      RowBox[{"4", "\[Rule]", "0.6720355153083801`"}]}], "}"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.775515222566045*^9, 3.775515269047924*^9, 3.77551534030693*^9, 
   3.775515508322213*^9, {3.775515748440173*^9, 3.775515789572682*^9}},
 CellLabel->"Out[82]=",ExpressionUUID->"45289fe2-6825-4390-944b-d5f907f9f0a0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3-colour non-totalistic, range 1", "Subsubsection",
 CellChangeTimes->{{3.775516030763085*^9, 
  3.775516035724475*^9}},ExpressionUUID->"d6046823-b720-4a64-8708-\
f52dce625b40"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"test4Data3kr1C16", " ", "=", " ", 
   RowBox[{"datak3r1NT", "[", 
    RowBox[{"128", ",", "128", ",", "8"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"test4Data3kr1C16", "\[Rule]", 
   RowBox[{"netECA16", "[", 
    RowBox[{
     RowBox[{"Keys", "@", "test4Data3kr1C16"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<TopProbabilities\>\"", ",", "2"}], "}"}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQ/eGloNAT6TeOnLn5oiDaxK5DGkTPT8uWAdFGSiyq
q2TeOBqUcGuAaKb1mfYgus3nuTOITvum5wOiTyXkgunSk7+DQHRTzz8wPSlH
nPUqkP5vpMAOopW2uwqBaNUFl4VB9PK9qxVBdAPPNyUQvS92iyaI/nH3ghZY
fLuIJ4j+wC0Dph2va774A6SNWp+9AtHX5m8zFZd94yjvyW8Ooh9cWzobRItc
9J0Lon3178saKL5x/HIrXx5E6/C9V7cA0jJtPtogeoXGDAMQvUzgOphe12Rh
CaK36Wpag+gWwR0LLIH0Gib/RSAaADfyiLg=
  "],
 CellLabel->"In[89]:=",ExpressionUUID->"761b26f1-8b58-49b1-a011-eed47ada9639"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztnT+OZkcVxVuAgJTAC/AWICKAFhH5eAVjCSJLSDMBImMhThBrYQeTIQKv
gtQetYOSP1Wrqqtu3d+5dX6S0fHo9fdVnfvn3XpvTH/59d/e/fVnT09PH3/9
w/+8e//3P3348P4fX/3y87/85f03v/vtNz//Qf7zx38+62//9+mPv/j3n5+/
+8/H59/8/9MffvXt75//+68vnnt/3tMj10d814ieXcPI55z0YddnRvi2a18R
P7srlyJyctf6V2K0Kx9m97Lrmtk97rp+V1x2eb5yzVOHkWtmr+9dM/tdvZ/d
ta9d65m9ZsWf2WtO+hbt5y52fddsX81a/661newVipD3294XRtY2e/3s947c
f2c/Z2Wds+vZ5UPEvkZmgF2+7Yrv7M/O6l3fNeLziOfR6x9Z5+zn7Lp+VywI
WmW/vTWsrH/k+koz/+yae38esa/e9SP5kDXzKzIbu5Ua3LW2iHw4eb06hP1G
zxi97xr5HPLMv+LbyHPCXWvuXT9L9MyvqGf3PvLn0WuLeMYVfS4gxJp23sya
/0fWv3LNyM+qzPyz3xs9k0efYQnzzEkiZv7odxC9e0H0M42IPZp1yM+4eutc
+a6V9UTfZxXP157512f+HrveQYx8/sh6Vta8a4/WzPl/JL4rP6s+87ecPC/P
Xj+bMwQ/T7Jr5o94Xrfr7/CcnANNLrRnXL219T5n5LtW1hPhieKcP/u9hNlG
ZeZfeV43u7aTs9/IGqw5uU2g6szfgzznK+ZPBBEz/+z37lpb9Hvn23JDHdo9
qNLMH31ept3XCLlEyMmIv6810rdn17By/SyEmFoz79G3zfwj0Ob8kfxR97zl
5My/6x3ZyDUnc2nXHk0chPvODTP/yXMBARXPs2b+Fd92fX7vmmgUc6OqJuSA
Z/5xyLWT7c0qKjP/CLS5KGKPZh2V+WrlGkJvvK12CL5VmvkrnR8Jcbc+31s8
869DyJmRXFKJS6WZfwS/JzIt5Plq5RpCP3TtvECLS7s29ZmfNuPNQsuN2/TJ
+Hrm3wu5drK9eY3bZv4W54Zpoc1XK9cQctu18wjNtxtmfpXzIyE3btYRMfXM
fwZC/qj0nJtn/h6+HxnCfLVyDaHXuXbGyXrufdvMr3h+pHl1g46InWf+85Br
h+CJZ/5Hbs4N84Jnfl29Hv3zeObn5AztnkXw5za9Ei/P/BwIuUToOZ7534bf
BdyJZ35dPesnjYj/7tUzf43zo6KfinolLp75mZBrJ3q/nvnfRtXcMK/jmb+G
Xs+E83jm5+QM7b5G8OcGPRILz/xaEPIquud45o/D7wLuwTN/DT3rOY2RHGiv
98x/z/mxqucEPeK5Z35dyLWzshfP/HEo5oZ5G5756+n1rDiPZ35OztDufQR/
qurWZ8/89SDk2ErP8cyfi98F3INn/hp6Ni40dt0vep/vXNU9P94clwjtmf8e
yLXTW+fIvjzzx0HLDbMXz/y19c5cyaCXP71rRj5n9rtu07O+nYTgj7pu/fTM
fw+E3Fu5ZzlXc/G7gBr42ek9ejZ2KjhXfX507N4Wx5OzlmGiWDsje1m5xrwO
OQfM6/Te83qOukfHZBYL52pcztDuoQR/yLrnVc9Pz1H3QMhPwrnAvA2/C+Az
O+f3fnbkGkIfsHbt9HCuxt1nCTi+4zN/xPMfo0vV2sn2tTKOLxPP/NaunUcI
nqvr1k/aTEjwhxCXXfGixdfEQcjh2/pVJfwuIJeV5zme+e/UvfjuzEsqzue9
+UPjhvi2+/XMb3ZRtXayfa2M43ue6He4VfuAtWuH4Lm6bv2kzY0Ef8gz/8o7
YlMbQp7f1q8q4XcBcXjmt3bt7MU5vzd/aKjHt93Lrpk/ymtTC/XaUexX6ji+
e4n+/+qpWuPWrp0RCJ6r69ZP2pxJ8Mczv1GEUAu39atK+F3A2zj5OxkJ9WjN
0bN5VQmfhffmDw1yfNt1Rs/8t9W1WYdcO1X7lTqO7zhZv4edECNrpl7NaTUI
nqvr1k/anEnwhzDz31zj5m0Q6uW2flUJvwt4JGvmbyHUoDVTr+SVOlWfd2Xl
Dw3C/Shr5leJkWFStTdm+1oZx/cFwszfQoiLNV/P5pU6BM/Vdesn7fx488x/
c12bdQi95bZ+VQnCs5eT8aXN/C2EurPm64jcU6Hq866s/KEREd/282kzv0pc
DJ+qvTHb18rcEF/yzN9CiIW1lt6VeyoQPFfXrZ+08+NtM//NtWz2Qugtt/Wr
SlR6F6Ay87cQas1aS5/MTxpVn3dl5Q+Nlb8/ozLzq8TCaFG1N2b7Whn1+CrO
/C0E/611dXR+0iB4rq5bP2nnxxtm/pvr18RB6C239atKqLwLUJ/5Wwj1Za2r
CTmcRdXnXVn5Q2Pkd6aMXL9yzc3+G12q9sZsXyujEl/1mb+F4Ll1DZ2Vw1kQ
PFfXrZ+EftgyktuKM//NNWvOQOgtt/WrShD64Wx8VWb+FkJNWdfQbV7R8jya
qs+7PIu+MPv7s8gzv4rnpgaEPHftaEGOb8S5IAuCz9b1dHZen4bgubpu/ST3
zJaVcwHNc2MiIOS5+5UuKj1TMQcIflrX022OKdbFCrR+paizY7iKSg5k+2Tu
QqUuXEccCPGtmgME36xr6+wcPw3Bc3Xd+ql4fiR46No0NAg5736lC/n82Ftn
llcjEHyzrq3bfFOpi12Q+5WKzo7hKuQcyPbG3Au5LlxTTAjxrZQDBK+s79HZ
+X4agufquvVT8fxI8ND1aGgQ8t/9Shfy+bG3ziyvehC8sr5Ht7lHrosIyP1K
RWfHcBVaDmT7YcxnaHXh+uJDiK96DhD8sb5TZ+f+aQieq+vWT8XzI8HDm2vQ
MCHUgvuVLuTzY2+dWV61EPyxvlO3eUiri2jI/UpFZ8dwFUIOZHtgzE8h1IVr
TQtCfBVzgOCJtXV2HZyG4Lm6bv1UPD/SPDSGAKEu3K90IZ8fe+vM8orgibU1
rS5OQu5XKjo7hqsQft+9MTSq9sZsXytDiK9KDhB8sLam1cVJCJ6r69ZPxfMj
wTdjaBB6i/uVLuTzY2+dJ/0h+GBtTauLLMj9SkVnx3CVkzmQvVdjRqnaG7N9
rQwhvuQcIOzd2ppWF1kQPFfXrZ+K50fXlzGPEHqL+5Uu5PNjb53RnhD2bm1N
qwsC5H6lorNjuEp0DmTvz5i3ULU3ZvtaGUJ8aTlA2K+1Na0uCBA8V9etn4rn
R9eUMY8Qeov7lS7k82NvnRE+EPZrbU2rCxrkfqWis2O4SkQOZO/JmFWq9sZs
XytDiC8hBwh7tLam1QUNgufquvVT8fzoOjLmEUJvcb/ShXx+7K1z194Je7S2
ptUFGXK/UtHZMVxlVw5k78OYnVTtjdm+VoYQ36wcIOzL2ppWF2QInqvr1k/F
86Nrx5hHCL3F/UoX8vmxt86V/RL2ZW1NqwsVyP1KRWfHcJWVHMheuzFRVO2N
2b5WhhDfkzlA2Iu1Na0uVCB4rq5bPxXPj64XYx4h9Bb3K13I58feOmf3SNiL
tTWtLhQh9ysVnR3DVWZzIHu9xpygam/M9rUyhPhG5wBh/dbWtLpQhOC5um79
VDw/ukaMeYTQW9yvdCGfH3vrHNkXYf3W1rS6UIfcr1R0dgxXGcmB7DUac5qq
vTHb18oQ4huRA4Q1W1vT6kIdgufquvVT8fzoujDmEUJvcb/ShXx+7K2ztxfC
mq2taXVRCXK/UtHZMVyllwPZ6zImk6q9MdvXyhDiuysHCOu0tqbVRSUInqvr
1k/F86NrwZhHCL3F/UoX8vmxt872z78HKOr9wA==
         "], {{0, 128}, {128, 0}}, {
         0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2473850236436"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.002916863886639476`"}], ",", 
      RowBox[{"2", "\[Rule]", "0.9966369867324829`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzVmT/KvUkRhQcF0cwtuAXNZzAVo3EBMopGA4oGYiIuwEjQyNhlGLoKF+MM
GHxJ6Tk8z3nvtWGG7/fSXV1VXX/Oqfu9n/3q819+45NPPvntt7/63+df/O6H
v/nNF7//ybe+/scvvvjyB9//8ptf/fnH//z39d9//tHfP/3sn//69K/f+cNn
198//8tPP/v1d3/82Z/+8bdPr+/J35b85GxyVyuf6GPZSPzQvgv5+0n5r7Ld
iu1XfSe5s46HRcwv3tTS4UkbE1s+ORbZf+1J5Fv3Jt+Tu9o9xEbiB6Lzkzos
/L+wPbEx0eFV30ncJnaRs0TndhE5C30s3RI9ybtfvSPZn9x17bf0TL4nPrSw
yqV/stp3bHVe69DKT3x7ySG2WzXqHfB/69v2Ta2YfPItEjnE3rVuVq4t9ltc
ieh56XPJbOs8eZdWfqszyf0kzhc8N5Fv9ax1XSV4xvq+6CNJbrZnLZ2Tt7Aw
G8F4RLdWjvU9uTfxz+WT6yzx2yWT9K9E/0UdsHofwc8L/vIOPWvNp0gNsepz
Ylcb52RZfNPCaQssTfA8waLXXU/2psSHFoda6Ea4rVUH2lrX+pPUcysmL/nr
ntXGD5kbtMuqzxZ2XdRVwgfbepIsCxu38pP9JMdJ7VrnCOFQrZ9JzJAZEdG/
rZPEz8SWRd9Z9Ky21rVyrNxczMYT/6zz0aonl3zSoy0svcCEiZ6tPtb8Ktlj
zWrW2PLan8ixYoxg3fau1q5EB9J3WpkkNqz4JzIJV7Xuve667iW5nPgz0eE6
S3Bay2fXmNC6dzEnt/jLghMRzGDFtlUfFrXoOnvda3GZ9iy5q/37oxxrXtfu
J7+zrHlE6/Mn45zgrgV+IzKTt2vlkDhP3sJ6U4sTWTMfghMWfcT67WDNQ8lZ
q25fb9r6tpXT1ljCra49Fo+4dE7krOP8sotgwlaO9e5kfk7w/2V7ixvJm1p4
o63nJEesvwnfXPinlWlxbaIPifkFB1zk43VXG8OtfKtGWXFOsFDyvomcJ+uw
hSXa760fLPyZ6Gbh+TaPSP285LRvZ2H1RJ9LpsV/Sb0lfiOYgfTiRLfk7LXI
bDyRn9jY1kwih+CHj2s9K0hsTGQusJbFidq/Lx1IfbBquDUDIf2L4HYLk1g8
tPX/gjcR31pzszUuIhi1lbPev8APJI8WswLCp1p/LjhR4kPiz0SOhY0v+e29
ib1WzVxg9UQOsZfMK6y8TmxfrAUuWuPJRH9rf+vDdg/5bs0KWv0XvzVc935c
SV8gdWYxa03sajmRxb+sHm3hBxLbBGtZM+RrfyLn0qf1G7G9jcnEXgtPWvFv
8frEhwv9W27Y6pC876vqRrKsvEhkLmbdZPaV6NzKJJihtZHEdiJnjUsX3xcY
dTETIFjUqkvkeyLf0rnVk9SrRIfFjKL1P5lVtnom+iQ6EKzY5pqFi9q3WODe
xayA6G/NOa3vJDasetLWkGtZmH/BixN7Sf2x8jfRs/X5dfZaT+ZdogPBVImv
krWYvSR3LfCV1cuenMNYmKT12xr/X/q0NlpYpb3Lip/L3mSRemv56rrXmhcl
tpM3vfYs8o70+lbnxcyN2E76MnnTRB8LZybyE33anE0wQHKXhZ8tHHidTfy8
7lMkflqOQ7BEsiwc1b5dsn/BiQgPTXRo/ZzsJ7i6lXntJ7ZbfbnlPq3MNjZe
FUutn9s9ia+sWkFw6av6FImZxM/Xd4KrCZ5p70r0J3F+LQuztfeSeUVSE4i9
iUyrdiV6tjm1nlFcOif6PxlLFu9o89HijMTnixgj80aC956cLRM8c8m57iK4
qNV50bufzLvLh63MNrZJDCz0XPyd+Dzxz7X/kr+IJYt3WDzFwtsEN1qz02st
+H5y73W2rb3Jd9IrW/2v79b8f90HF3lHfJX43/LDQs817yN4yeqbFg4h/c7i
KWv9rbqd+CGxndTbZA/BsYm9yV2L3ywS/cldl11kRkFyKtljxX9blwiOtWqX
9RaLfHnV/GfBawjvWPwOtciX5Oz1vgusa/k8kUNm/uvfLNpa3fow8ee1Pzm7
mD+3OrTxT3y7zlnrLZKz1u8R6/lPa6Mlv/1O/En0X9ieyFngTwtjJ3cR/yf7
W+7c+ofEYYu71vNnS//EFsuu5N42v8hbkLwjexIdCDa4bLd4NHmLZFn2WvlC
7krsSvxg4SXrN5rWJ4mN1562Dlu4MdGB8JF2WfqTPa0+5H0X2LK1y+JuJC8I
Nkh8TnCshY2J7eStW/+T2YjFgwheIj390s2aI117Et+2/fT6vqjVC57Y6k/w
SatPuyfxYfI90YHgOoIxSA1pfbXg0dcego1JjSUcas0jWl+1ZwkuauUneib6
WzXnWoTfWfyitYv4hMhfcEDLlva9rruuOCHY6ZLZxok17231bOVYdWbtn+Su
ZA+pe6+aIRM5bY9b1MB1PiZr0UOfxJkW5id+tmwh/No6S/y26E1W7U38YNUZ
MtNI/GNxKFL3Wv2tGTLpm63Oyf51vVrX4QUWTewib5HoT7DlGncl+pCaZv2W
YWEkUq/a+CS/NST3Wn628qiN88T2RGeLO7T2tvpbvdjCHgvMTLinhSfX9bb1
SesHy88LrmHNBgl2TRapmev4bP3T+rz1M/EP8f8insnMZIGHE79Z/b3FHhZm
TnS49hBMdelw6W/V28QnT85PnqxjiY1tjSK+WvTiRXxaOO1JLkZ0WPswkXmd
TfaQutHWPdLfrz2JbmRGYfEsi6e3Pc7q3Yt8t/qdlYMEtyQ6XzokNlq9uM19
S8/Wz2S+dPmEYODFeyX3XnsSe8mexazJ8kkbAx9XGw/t2QUPveS0+rS925K/
mJ8s6hjhRFadafUhMi8/kJix8ig5e+mc2EUwNnmv9u3WfWQ9a2plJu/V7k98
1dYoktfJIng4+d4uq461ui1ywfJtst/qTYlPFrmf6HPpluy3cnaBe8meZC1m
Ly0vJr2YYLNEJsFjpLYkNra+tfAh4Rfkjaw4WfTHRX+59iTyrd5k+bbdQ/CV
Fbfte5Ha2L7dIqdaPdt7yd/kLS49W1sSOQtMRXhKa2OLFa2ZRuvDRZyQ/tLq
n+hp9fcnZ7lWjrf4yopba878ca35EZH5/+K39izh7BZnsWbRiX8IhmnvsmRa
+NDy52WvhQGIzqQfrWe5iU8W8sl8oNXnVb3Mmj+0Or+b3667SC6seU2iQ3tX
sp/kdfsWRKZlO/Fnm7NtnF/2knmOlbNkXmH9zkLkL/xM8trqZRb2IHn3Dn5r
8y7R81oWr1n7vMUARKY1m13PM63ZtdVHrBhoayCZ8yS6kbPWbO3yg6WPNTe2
ZiYWL0h8aPEO4rf2b0ufFp8QnLzgdNddxJaF/ot5ZqIn8cl6VkZqYCLzSa6x
mD8QDtjmjjUr+2/vtNSfxG1iy8JvJL+IPm2NtXAy8fmCGy5wY7vfwhuJ/MQn
H/e0/IL8DpLotujXhGsssB/JR3JX4sP17KvVn9QoUj8tvxGMbfVoUldb2y27
LG64wI1rn1txZeEWwsetvmzxCLKIDwnOWfey1va2ly3mRUTP1nYLw697DcH/
Fk4mdrU6J3paGMDqRyQGLK60qAmLvkxwgvV3Yu8Cm637nYWZLf2Tt7bqiTV3
srBia2O72n607guWzq3+C/yzyGsyL7UwBrHx2kO+W3PIZD35dhavJDovMCF5
95bzXjoki/iTYMVEH6vnWvNhK26tOTPBGwT/JDoscqfVpz2b2EU4zqJftzlo
vXXit2vPdRfBY0Sf9fzQihlSe0mdaf1J8JjVx63cXLxv+44tplq816K+Jb4l
OidnW65t4c8n+WPrB+Jbiy8n9crCUZYOrcw1l7m+tzl72X7pkMhJdEvssnx7
6W+9b2vLpU+yx+pli/rWYgAyTyDySQ0kct6BPy7wW2vvggcRzmvVvUU/SnRo
c5bg0tbeJ3Fjcm8iP3nfde4nNrYxTHAamWMQDmLp2X4n8fBu/DHxW7LnyXlX
8u6XnguOc+1Z9KPW3tYPifw11rLuIv3Ost3K/bb+JPon39v6Ru4luUD6ciIn
sYvU1Sf546JHvEpnK2asmpasth8RDmjhT2LXYlZMfEjqVaIPqTmWnu2bEjy/
wJMkltq+THLkWmR+teCPRCbp3QudrdwnMZngMdKP1tiV1OE11iI1p42Ty1eE
U5BYTfyT3GvNH657E18l75XsIVyV1Lp3wE4LHGX1nUT/BfYjPmzfqM0L0o+s
nmXNi57EWkRnEqtEPolbS6bVc61at5gHLuxq5T+JnRKftDItfGLN8Vrst8DV
bc5a+biI82tPOy+y+i/BtNaMy8KibewRvpDITPy/wCEWhln0O5J3lw8Jlmjj
0/KnNb9q919nLey3jrc2Zy2cSewlZ9fY0sLJVm9K9Ez2r+sVmZNYuLrtWZb8
BR9s9xMssZ5dEBuf5CMW9ru+L3zV3rWYUSc6EC7W+jzR2crxxRu1far1p1Wv
Ev8kZy2ea8lJ5K9nlZccCycn8knNvJY1B7D4SHvWsov4iuCE9t4FNk5W63My
M2llJvJJPFh4oF2LmRvJwbbnWrWC9N8Wn1/6J/5scbLFNdp3tGy89hN7F3zq
0o1wGYu/k3sJNrZyzdpjYWyCGdr3JTHc5hSZuSW6JXZZul1r0X/X8WzN5doY
WPRHMgdo+wvpm5d/EttbHdpcs+rMor4RjEE4miUz0XkxY1nM3tt3SXS7ZFr8
mvSFFrc8WTOtmUOi2yJmLH66qF0WZyEYjPCj1j9k/7Ws+rbAjRanWPDixLfk
twPCv679rV1W/11j1yd5WatD65PFXM6Kmcve9vuidhHuSX4vsOxte8dCT4IV
LU5E7l1wFsJPLznJ2UWOr3lW4ucFdl3zsrZmtj5pdUj2WzZasymC5y1s0/rT
wpnW7GWBh9v6tuBEbTy0cUg4S3tXG0vrHLe4ldX7SG23cCPhZWsu3Orw8TuZ
P1h6WjihtYvY3va4BW9dY63F3GxRK1pbEjnE/4mctiZYfMHi8slavIWFz0m+
kPy99rd4r8U8bQ5aM0Br3pi8hYVVrDkAqZmtzAXWWnAH4qvELosvEE7U+j9Z
Vmy0PrG4tsXdEv9YuLH1cxsD5K51TVvgOjJvvHRu/dnabvG1Nl/ae1/lwwWf
auPQ+i2A2NX2dNJ3SExa79vqtrjrkmPN/8lZgtVbW65F+MUC1yV72n6R+MqK
q8S3xMb2XlInLS626OPJvdda/BZA4mfRF9r5wKUP0d/CeO1dBMde+y8dLOzU
9vrEFqumtfKtmeS1p5VJdLa4G5nlkvps8eXWP4SDkJqQvEurT3uW+Oeyi9R2
Es/kfddvYenZ5lf7Xtabtn4jOOFV8tu8uPasbbG4G1kLvpbcu8An7V0WDiSz
I2uWQvDnk/Gc2PgOM5NET/IuBH8S20kcXvq/g3xrP8GKiS0WdyM5S/xv8ZpF
Db/Oklpnzf8Tu6weQXzb6tzyViJzPTNZzBBI3CY6WPvb+FnUk1Y+wZBP4pw1
j2793363/EPqG5Gf2NvuIT3luovM263+mPjBmtUnMq2abM0eE7+1dpF5u9Xr
SV4/KT/xLXmvROdrjzW7JnW1jX/if8IvEh+2ci57k+/tnkv/ZE8bA4s4SXRb
z+qTRWoymWdeMi85VtxaGLWVSWYgJD4trrfgOC3OIfdaeWThYYLZLvmkhxJc
ndyV7El8lbxL4h/L3mtZGJLgQ4IfrHnyoneTuF3YRbgqwYTEh5f8NUde4Jx1
T7/uTfxmzbet2Et8eH23sDTJ8SfneGs+3urQxkOr5/Wd4JDFfMzSf4GvLj0T
/RdzPIurWv4kb3TJWff062zyPdGZ4DQrPtfYZu23d5jjEX1aHRb+WeS+NR9r
7W1jj/in5SYk/okfrrMEX7VyWplt/Fg93ZrnE/6SyGnj89KB6EbkWPyL9BGL
dxN9Fjq3ej6Jga3eQWwktpOaaZ1N/LDA4a1dC5yzxirJvZYtBGMkPiH45P+l
nz45x7P0Jzme6Eb0J3sS/1v2tjZeMhf4hOBV694F/nySyyRvbenZ3tvWdosT
Xfutd1/XwEuH9q51Xbp0tvRvZba5b+GoNdZacysLiy4w6iJ+LjnJnjUGIH0/
kWlh6XZZ77Ku4cld1mxh0U+JH9a8w8ID1rtcMpPvySJY68k3Iqt9d9IjSPy0
fk70WWCAxLekP5Je08pM/GxhuVZnUlfbGFv3UysePu63eEeiP/HDJdOyt8VO
ia9amYs3uuQQHE7qeTsLIjlLcC/BfuS91n3f4vXrnnjdta6r7VmLVy44Tvsu
C1xNaiCJVasOL3ze5pQVb2scfslp36u1y5J/nW2xH/F58p3cRXi9xaEu+QQb
WHwn8UkrJ5FJ4n+BEwiutmo7yYtWt0uHS84iL9r6ZvHZxMaFby0MRuQ/2YvJ
nNO6693suuSva0Xrk/auJ2fai96d+MeSee1p82LxjokfLp3bGLCwusWb2nsv
GxMdFrl2yW/7+KIXk0Vy7R3sIjmSyHxVbJB6SGbaVu8muNqSSVaLq9fzWEtn
guWu/R+/k7kK6dHk7Qh2TXyy6MUWR27r+RpjWPz6WtZcehEbbUxa2IzM+pL9
i9ka6adtH2zziHy3evei9rZ1csHNE3sXtaXFIYteTGpg64dFPBC7SP289rf5
dS0SGy2+umQmZ623s3pQa28r35o/vCpfEh3WtdeqOet5dWsXsZHUukQHMr8i
HHkRD4taZ+Us6R2Jnta8KPGtlTutDxc9qNUhkZ/YaOmW+OFapE4mdiUyF7Zb
M3yCtdq7rFr3JBcj8WzFA7Er8XOi83qOSvRs95NcSPa3mGGBb9f17bqX9JR1
vlw6J7otsERrexIPhF+sZ1AWDl9j7/b7O8TDpc9iJmPNUYlMgg1ae5P97fu2
b2rpadVYC1cnPlxgsxZDtr2YxLPFl9uzybJiwPpuYW9yr8UFLj9bfHDBrxfY
vq2ThF9b/YX06+ve9jvhyBYOvxbBliRuST+ycAXpawveQWKVxICFt9tFbGzv
WuOcNSZZzJ+tOUniz8U8vPWzhd+seGjvIn5Y1Mk2blvb2/2JzuTsIset2QuJ
gQV3W/jfwiEWzln0KcKJFti+jY1E5sc91lwi2UPuav2W6LCw8dpj1cm2Nrb6
WPovfsu47k30b9dibmbFHtFtPf8hGOxV+xPftvFm/RbQ1jSr3pK5BPH5wm+k
HhIMnPhhPZ9P9hAsYc1vCZ5v5S+4IcEwiY1r3kpw9ZP1av2d2HW9i9WnrPda
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
         "], {{0, 128}, {128,
          0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2347219495748"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.15800181031227112`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.8419979214668274`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztmDGOHUUURUcgIcQuyB1B4gCMiECE9gqMBJElJBMAmVfBLojZAVtgCWwD
WyIYgpaqXa/q3dN9rgQaRv+f/179at9jPv3+p+c/fvDw8PDzx2//9fzlL1+/
fv3ytxcfvfuPH16++vyzVx++/fHNf/+8+/npd9989ckXf375619Pv/rnj9+f
PXnx97M3T779389nX3P0+hHOyOvPcmbmnJl55ucqZtV5dn2/M/ez6kxWfKer
7+qK77rqDHd+RzN/plX9ubTiblTxHw5y9jVn+SOckfeenWfks2ZeUzX/yO/P
cmbm2fn9nj3/qs89y5/hrLirM/NXnfkMs+o7WnFndj7XO+9GQi+v9ttkV199
Dqv/vrDaUe/wXey8q6v/vnOlmdPu0oq7QenlqtcnuPrqc9h5njt/XzVPwgw7
/145M08Xs2vmmdfvvEtVdyO5l1f4ZFenJ/htgp8n3Le074I4J2X31Xee+Dwm
OPAKflqnJ/jtDGf193s2V/ouiHNSdp9hzvz/kOTn8eg1Cb2cxr+SW6Z5u57P
mpOyO+XO75xt5LNW9NTZJPCv5JZp3n42V/ouiHNSdt8580x2znb2s67U+0R+
GofoRZQzTJ6Tsjvlzqd5/oj/E3ufyE/jdEXP1/MTmFVJ9vwRTlo3XYmfxiF6
EeUMk+ek7E658xTPn/H/rm6i89M4XdHz9fwEZlWInn/03uRuIvLTOEQvopxh
8pyU3Sl3nu75R8y0biLy0zhd0fP1/ARmVa7k+Ue/T+gmIj+NQ/Qiyhkmz0nZ
nXLnr+r5Rz93dRORn8bpip6v5ycwq3IHzz9675W8ItnZkp1Hz8+fk7I75c7f
zfNH/J/oFSv4aZyu6Pl6fgKzKnf2/BEmpfuSnS3ZefT8/Dkpu1PuvJ4/7/8J
PbWCn8bpip6v5ycwq6Lnj/MpPZXmbMnOo+fnz0nZnXLn9fz341f1yOqemuGn
cbqi5+v5Ccyq6PnzfEpP0TlEL6KcYfKclN0pd17Pr+VTeorI6Yqer+cnMKui
56/jU3qKwiF6EeUMk+ek7E6583r+Hj6lp5I5XdHz9fwEZlX0/N6Zk3sqjUP0
IsoZJs9J2Z1y5/X8Xn5yT6VxuqLn6/kJzKro+Tn8tJ5K4xC9iHKGyXNSdqfc
eT0/k5/QU2mcruj5en4Csyp6fj6f7mzJzqPn589J2Z1y5/V8Fn9nT6VxuqLn
6/kJzKro+Vw+xdmSnUfPz5+Tsjvlzuv51+Cv6Kk0Tlf0fD0/gVkVPf96/DRn
S3YePT9/TsrulDuv51+bP9Mjye63M3q+np/ArIqefx/+ldyP4kWUM0yek7I7
5c7r+ffk7+yjZOcZiZ6v5ycwq6Lnyye6H8WLKGeYPCdld8qd1/PlH/l/svvt
jJ6v5ycwq6Lnyx95b3KvJbsK5QyT56TsTrnzer78Kv9f0TsJ0fP1/ARmVfR8
+Wc5ab2W7CrJ/kyZk7I75c7r+fJnODt7pyt6vp6fwKyKni+/ipPgFWm9mezP
lDkpu1PuvJ4vfwVnRe90Rc/X8xOYVdHz5a/mJDuPnp8/J2V3Pf8aZyu/ljPT
O13R8/X8BGZV9Hz5XZwE59Hz8+ek7K7nX+Ns5e/hjLfY/uj5en4Csyp6vvw0
ToIL6fk5c1J21/OvcbbyezkjPbI6er6en8Csip4vn8IhelFa5xLnpOyu51/j
bOVnckb6pSp6vp6fwKyKni+fyHmcZFdJ60rinJTd9fxrnK38TM5O/9fz9fwE
ZlX0fPlEzkgSepPSlclzUnbX869xtvIzOTv9X8/X8xOYVdHz5RM5M9HzWXNS
dk9wm7TZiGcrP5Oz0//1fD0/gVkVPV8+kbMien7mnJTdk91Gz5dP5+z0fz1f
z09gVkXPl0/k7Iyer9clMImzEc9WfiYn2f9HXpPWlclzUnbfOfNM9Hz5RE5X
znYWpSuT56TsTnEbPV8+kZP2vIx0xMjvV3OIc1J23znzTPR8+UROV0bmJ3Zl
8pyU3Sluo+fLJ3IozwulK5PnpOy+c+aZ6PnyiZyuzMyf3JXJnU7ZneI2er58
Iof4vDx+b1pXJnc6ZfedM89Ez5dP5HRlZv6j1yR0ZXKnU3anuI2eL5/IIT4v
I+9d0TUjSe50yu47Z56Jni+fyOnKCs8f8f+7uQFxd4rb6PnyiRzi81L13rNd
s7rLVnBWM+kzz0TPl0/kdGWn5x8lrcv0Opbb6PnyiRzi87LiDK/qBquZ9Jln
oufLJ3K6kuD5I///P6GPEnr2qjNTZiOerfxMDvF52XmGZ3psRx/dzeuS3UbP
l0/kdCXZ82f8P7nTKV5EcRs9Xz6RQ3xeEs4wrY+6mPSZZ6LnyydyukL0/KOk
9RHdiyhuo+fLJ3KIz0vyGab10WomfeaZ6PnyiZyuXMnzj5LcR2k9TnQbPV8+
kUN8Xihn+Jif0EcUL9o580z0fPlETlfu4PlHHL0uZ2bKbMSzlZ/JIT4vlDMc
4e/sI4oX7Zx5Jnq+fCKnK3f2/BH/1+vy3UbPl0/kEJ8XyhlW7VjVR2kdlzDz
TPR8+UROV/T8cX5CB13VRSmzEc9WfiaH+LxQznDFnHfzumS30fPlEzld0fPn
57xqx1HcRs+XT+QQnxfKGe6cc2cH7eQnu42eL5/I6Yqev25OesdR3EbPl0/k
EJ8XyhkmzLmig6q6qYtZFT1fPpHTFT2/984kdxzFbfR8+UQO8XmhnGHynDPd
sbqbVjOroufLJ3K6ouf3zknxxmS30fPlEznE54VyhslzHjHPdsfObqpiVkXP
l0/kdEXPz/H8o98nd1PCz3q+fCKH+LxQzjB5zrPM5G46y6yKni+fyOmKnp/v
+UfvTe4mirckfBbFeej8NA7xeaGcYfKcVczkblodPV8+kdMVPZ/r+SPMtG5K
7nR678tncYjPC+UMk+dcvXtyN1VFz5dP5HRFz7+e5x9xkruJMhux9+VncojP
C+UMk+fs2j2tm2ai58sncrqi59/H849+n9BNyb151d6/Gz+NQ3xeKGeYPGfa
7l3dNBM9Xz6R0xU9X88/ei/FbfR8+UQO8XmhnGHynMTdV3TTTPR8+UROV/R8
Pf8sM8FV9Hz5dA7xeaGcYfKclN2PmAluo+fLJ3K6oufr+VVMorckfBax94n8
NA7xeaGcYfKclN3PMmd6qqqD9Hz5yZyu6Pl6/mpmsrckfBax94n8NI6ef587
Q9y9ivl+zVXbQWmfRex9Ij+N0xU9X8/vYiZ0UMJnEXufyE/j6Pn3uTPE3Vcz
z/bOig7q+ixi7xP5aZyu6Pl6fgLzcRI6iN6h8vM5ev597gxx9647n9BBqz+L
2PtEfhqnK3q+np/AHElCBxE7VH4mR8+/z50h7p5257s6iNih8jM5XdHz9fwE
5kz0fPlEjp5/nztD3J1y51d3ELFD5WdyuqLn6/kJzKrYofIpHD3/PneGuDvl
zh/NtqJTRn7fxZSfz+mKnq/nJzCrMjJbWt8Re5/IT+OkedGVzjB5TsrulDt/
drYVnZLAlJ/P6Yqer+cnMKsyM9u/R/ayWQ==
         "], {{0, 128}, {128, 0}}, {0., 
         1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "851165089277"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.4239928722381592`"}], ",", 
      RowBox[{"2", "\[Rule]", "0.5759888887405396`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztmLGqZUUURC8ODAoaG/sLGhk4g5nxiInZE9RkQBiDwczcjxL8FVPBX3AG
DC4czqPP667dq7rrgXK9LM+tXd27dp/+7IdfXv30we12+/XDd/969fD26zdv
Hn779vn7//jx4fUXn79+9u7j7///8/7z84/+evHvd3989eXff774+ftPXvxz
++bls48/fXn2+Z6/+v9e/dzyWwqmp94zvuWz2v+rGkbVovitUTor11fxfNpe
vdpfikwY1dc9uaH+XOnz7e5vVM6cfb76W4TPZ5pH9VGP/y3aFLOjssfVmdaz
vorn0/ZqT88qMoGQIYozySifbw1/Lf/v1Zy5Ok/PfovwWZG3av9b9s+oWtR7
W7H3FL9FOGtVng1aevbq77Y8n5AhPftQkY09e3XUGo3aV+rZWpkViuztmQVX
ecU5Vj3jRr1zVa5vjw+KvVrp89VMmJUhhDOJYn3V+7zy/KPI/MpeVvjfM/cV
mtUzbtQ7F2FmqXP7dvJX6TM5Q9Q9WOlzj7eV+0r9ntWyFlc1qzNNkTOKZ55p
nnWWVjOEdwpFLTQPr/5WTy9UvjNW+tzjbeW+UrxnqWd6y1qTc0bd17NmnJoh
vDMq8oTmoTpDCPlc6fNVb0ft88qeqpzpLvc/t5M/wjmH3Dvk+x9FbpM9VPSL
+z4c1e+VOTYrMyv9d8mZSk+urhehd2a9l83KbbKH6ncox33Ywox6R1DvK0Vm
umcaYW/QzoEERpEVhNyuPBtc9fCqftr7DmGvXvVWkWOVv+Xybqv2pGdv0M6B
BIbmgyK3aR4qMkRRF43p8bbyzJlMqz8bV3rSsl6EtWthyD649BEhQyrfd8j3
P2d85ZkzmVZ/Nibsf3LvqNdX4YNLH/Vorpwp5H2o2A/qfa7YD6tmWuV5bKWz
tMv6ks8/6j6iZQhtj83aD+pMONtXybS5Z2PC+YTWO5Uzi3z+oXmoyJBRddGY
Hm8rtSXT5p6N1Z4QZhxtfdU+kPto1PPVM4W8D9X3P5XaFPttlv+0HmlhZu1/
cu843v+49BE5Qwh7jLx2ij2QTOOcjd3P0i7r63L+UfQROUMIe2wUQ9ZW6blj
prm8MzrOOML6qn1Q5DbNQ/LcJDAu2lbygdYjVxn1WhBmHGF9K32g9RE5Q2bd
GygYsrZVfaD1CHn/u5xVHO9/yGdjwjq2MGRtO+gfxThmGsE3x7O0y/pW+jDq
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
SNPWwsQ3XyZnQiaTWb8nQ9Z2xvwHVdv8fQ==
         "], {{0, 128}, {128, 0}}, {0., 
         1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "6208032017586"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "\[Rule]", "0.2913767695426941`"}], ",", 
      RowBox[{"2", "\[Rule]", "0.41874197125434875`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzVmcHNbVtOhJ9AQhAAAZACDBE0pNCQQLcEo5a6BQPUM6ZEQRpMiYARUZAE
3RKDO7FUpfq+dQ6/9J7O3fL2sstedtn7z37565//4x/89NNP//zHv/vfz3/x
L3/7T//0i9/+3R/9/h//8Itf/cWf/+oPf/fzX//vv9///p/f/Pdf//YP/+uv
//KXv/nZr//jT3/29//2Nz/7k3//z7+6nl+/E/lWZ6Ln+m3oTLBa7Gkx/JQ9
FM6tX1R+LvGlcDZibeBAxcuOkZ3Dhm0UPobMTz/8Xfb8dPy1MsnvS8+Pfy3+
ic5E/2JPgs8327PgfMm0fr2MrxEXSieFQ3vuUvcoe4wcNmyj8FnicslcmFA8
hOJIC/6tzharxJ4Fw2+zx9bZ5qQdXyouRqwpHAxfjDto5Jth28LzqXy4ZFqe
8ymORNnW6mzfbeOYPKf4MGVPcu7L5z/+tT0x+Wtry6XHjrWNQ+uLcQftHF5w
s+cgahamendyrs1dW9tanRfOF2e45Fus2li/tGfJH+P34mPy7lKTqZ3kMjvY
OCxc2piDPpU/xhy0YE59u7lwSOz8Nu6a6DT2z9Tui9oDL9+tWhyM3+3dWWb8
ZQdi52Grh8LBxs3Y/dr5s/TlFp9Ez9Jf7J3eS+6a6KRspr7LGLZRHGPhEi95
2iVD7UaWuFA6Wy70498yL7dnJfLLXTBq7yVD9eVW52Jn8u7CJxM7X3LXROdS
9xbMqW9qxnci+w7aPJ/KVaNXUnlozG4tDgZuxj39hh1UghtVE5b4trln9LLl
rBbbS77FsJVf+i9l2xIXqu7ZvOLljJ/YScXlsp/qocsOmdonLPhQub1wP2pH
ZM8XLf42v23PuuykeEWL4SVv7Ela26haQeFP5fBi2yVjcBhjb7zshw39L7+D
fENuUzgsNSGx09h1JDE1sKXmlBarT32rMmyg4tviT/H8xba2nyb2vKwJrZ2J
DYb+xK8LK7uGXPIv86ftj1QdoHgCxW+X/edlM3V/jTz81CxMzS9LrbP3sRQm
FOaXnZf8S45E4bDIUxz4ZW5THOAll7PvIPWukXuUfqOXUfd06WsveWaC+TJ/
LT627y7158KKivvCsRMclm8E1B1cYnfhv+hpsf2GnDR2HZTOJfcSe9pctXtZ
K7P0vpc885Kn5i9qRjP2w/aOKLHB4A+tzW0+2DvYl7za7jsUZ/6Ge9TWtJd7
WpuftzJtjr3kmUauUv3a4KJU/aG+cVD8n7J50WnXJaM/vuxNSz4YO7fF5paj
UhgmmLR6PhXrT/HM1ua2nre+LPVtsSfR2dpJ3TXq28rLGSTRaXPmSyaxLZGn
dhSLbVQd/hRPM/r7Ei/KBqr+XFi1OfByH9760ubPp759LHYmelr+T+1bqBmE
4maXTqM/LvN14vt1bhLThP+/vEdUf2ltSPQszxcOcMlQ9cfmmYmMcX+p72iL
Xwt3TfS3MgY3pu4FxZ0SGyjObMzXCVZUbVxmvRafRIbqLy95e5vPy469jbWB
84KhsQ9P+ORic4utUYvsGTbByrgXy7kJtm19a/MksX8561O1kcKH4gxLXAze
TnG25Hkba+obn+FXooeqyT/KULsXandB2WnbQPGixAaqD7Y6WwwvGeqbyBUL
uzYaNY3KH2NuWngUxedt/G0Oufhi1OS2bi/1asGNstOwIYkRdS+u3F5qV6Kz
zbGlrlIzXav/wiHJhwUfildf9re+UDXWqMlGT/kU/6fqQJtLPz6nvtNR9+uS
Wew0bLjete9R4m9iG/X9qMUw8XE5a7GtzeF2b2nXruUuLGddeWXvZpM4GnGx
OWRi2xU7exZr8+ryharnS680vh8tefWyty7fXBZe2tYK+7eBp8EzKZ6fyNic
rdVD9cpv4P8LT6P6OOUjlVdUP6L4pMGXWsxf9tYEQ4pXXOe+rP+XDRSeBs9c
OJJdexeOseRPi/On+P+FbRuLpd6+nMWWOrPoofhke5adV5QN7dyxxC5598fn
dv2n5tmXfKD1heLGVF5dPlK7RwOf5NxExubqiW3U89bHJC7GzqrFdsmZFh87
dpeMwVGNmdSo/xc+bbwWPrlg28Z6saHFarFt2T0a+Bj8P7HH2L1/ijsteWX0
wU/twai8WmJE9dY2di0+CbYvef4yF1D8n/puRfWaNq+M3aOBj/G9o7Wn1W/X
EMpHah40ZnZjD3adZde6JEbL7q4969KTyCw9q7WH2g98insnOtt7l5x1vUvd
u5dzUKLH4AnXWUbNecmdLpkkFsaOpa11yfPWnjbnqRgl2C62tWcZ/Nze5y+9
0uDeLQ7Gjv2ybcHtssGegxKc23Nbm6kYUTi0Z10yiZ4Ftzam1Kx06TdkKH64
1EC7j186DT2XzFKrbe5t7Cja+7JwAHuOu54vvTLRuchcWLXyBg7JWe25Vz60
Mb2e299KqF7f2m/vnJf7uJyV2J+c2+KwnGvPaImPl8wyI1B9asHt5Tx42b9w
SKPfGTz5OqvV09bDS3/iL4WhHZdFJnne+pXopPZCrV9UPhu5SvWXJHat/iXW
LbatL1Sfte1cZpyX+zqKJycyxo7U4CcUZ6biYvABm9tQ9cSo88vzxbYlN5Ya
aNdhKn8uX9q70Oq3a9olf+l/ua+jeLK9H7D3k4bOZU758c/eO13nJn7Z9cSo
80Z/bPFpc+PlPP7jcyPW1I6I6rOLncvOKrGz1blwCSpGrf0v82rhFfZMkeBD
xdqYQ9tYL1zX5tUUH/hUXNpYUHnY2kn5Ts0FxnNqxllyhsrzpU5SPZTaTxo6
DWyTdxcbEnsMHOze2tpG5XnrYxuXRMb4ltHi2c77i1+t/rZGLTVt2REZd5nK
AarXLFxuOffCvNVJzRRLHJfcM2ZqGwfKNqrPGveL2ucvPib+GjMgdUcMvmrU
lkueypnk3OUOGjPCS9yS2NnvGvd62R0tu2sDB2qvbuzTLj3J88SGRU97T20e
eMXCuCPUbmTBp40RhYnh48sdxcLxKM6z3MGlziQ2tzwksX+5Iy9xWOrzgonB
Ie35i7oLiQ0LD7/02/XwZS4lc1Pr19JnX97lNjfaucDALdFJ5UZis71PaGsU
xX9aGYq7tnoSO5f7ReUqdU8vnfZO28bK4JZUH090tjhQ9yWJRRvHb8bt0mns
2Kl5tvVxqVGtzIKDkavLfqDlMEsPfXlP2zxc4r5wv8WXl9wyeb7MR0uPa31M
YtrWlm/DrcXKmGETPctZVI2y67adqwvmlP7WBqr22n2fysnrrPbdT3HL5Lkx
ixk12ejdC54GbsaOqJV5OS+3ttl129ht2ntgYy9K1UBjNml7Uxt3Yx43ZBL8
7dr4DXvdl1zCxi3JT7tv2vMyJW/U7RZ/g49R9Xnpoa09S0+nbKbi3s44i36D
W7b8YcH5G86leHXLASj7LxkqFpTNlJ1U/10wMXabrf3tvLD4u8wUi7/GLE/V
ASqmF25JjNo4GjtSajb81Llt3rZ62hhRvNSYj4wZoZ1nqfmXys8W/wWTtr9Q
84t9Nw3+3/b9BJ+ldlH8sK1L1HPq3Uve3usm8st+bDnX4OpGnV9svmSMHm3Y
v+x425yh+NjCY79hHjS4xIJ/i2eiP8F/4QbUb3s2/IZzqXxY/DW4eiJD8atl
ZrnOauWXPk7teI2cSeKS6LF5yJKHrY8vcbveXTgh5aPxO7Fz4SffcO6nuDQ1
R7y84/ZMcb1Lybc2XPpbmZe9m7qDbeyM2mVwCaNnGbOGwSep+kn12W84N3mX
4tIU51zw/BTvbXG2vxEk+UB976DqG5XP1/OlJ1K1KznLrgMv8af4qs3zL5sv
eeobln3up7j0Jd++29r5kvcmviwcqZU3+nKih8LHyOflu8bCgQ0ubddJG/+l
7xg8n+oXFHeizrVzafFrmQepGYrivcY+tpVvc/6yLckNY/doczkD59b+1k4b
w5dcOpH/hvq59Iv2+45xrn0fbb+oHZG9w7lk2rMMbJN3KWzt+mZzuRbnFltj
P7lg+A1cmtp1U7a1OdzetcvfxMfkufHuwrdf2kbhk5xF1c82bynevswIdj2k
4rhwCWMuSPC55Be/PsXzF/wTPVSdMfqmwf8NjmHw7U/5Rdlg1O3EtiVvlxgt
tlH1MNFPcbkWh8S25bsDde8uO417Z+P/MhbJua2PBv9fsDX4Ritj+LXst6m6
1Mokd7/NH4OTL99WFv78bXuANq8Sfy/fr3epHabdKyn8jRre2kztIRPblvtF
vXvl5FL3DL8oG5ZaveC/4Ly829bVl3ly6bzetfcAtv2Xne1ZBl/6VB1e3jVs
pnjIkrfLLG/MjEt9pvxqbTbeNfaZVI82ODllP8Xzr+cUz7RnH4pvtH61eNr4
fxv/v2JxvWvMra0NLT52niQylF8ve0Rrf6vT8IXitIv9Rn+h6gBl/8L9jFkv
8ZH6/XLfm+hsc+ZlTWj7+2XDy7pt9O7Fr8Rmo0csuBlcqPXF2BkuvxP72+cU
/1/iQs2Gl/xyFhXHFv9v2zu1saBqwmJDK7/kc5snie8v7wVlT5urNheisF1k
DG5A1eEEKyMuLVatDQZHNWJ32WPvo6ha3Z675HNrw8KfDT3UtwDqXlzyxl7u
JRdK4pL40mLV4mnXTJv/GxzV4A9LXIzYJe/afHXB57JzyUPKhnZHtORAoifB
eYlFey/aWCT2UN/drnNf1vClfrY4UzVzqcMJhktcDJ7f6lnsTM4y9oQt5kbf
T3Cwd4ZtPlxYtfZfOhM9Blat7wtXtPMzsefSuWDb4rPca4qDJc/bd5d72saF
mjVaztPezYVTJfi/3Ectff+ywe6hFBdq/WpljDrT2mzfqQXDhYtSd8TgHkY+
UHZSvKLF8HqX4lTJ8yUW1J6zxf/SacfxJSbfcMcTvyj8l/ub2Pyp/RKFYWKb
vUunaumSDy2HbHv0Um8NjkrJL7VrmQso/v+SH1LfaBb9l532HW91Ju+2MhR/
M3B7yQNbTCicqV2rbadxZ22Ot8yPLTemcGhjSuWb8buNo41J2+uvv2+44/aM
QGHS4taeZfBAo6ZR3zGTOkzZ2XKkpUZRHI86q+X5xs755bcb6jcVRwOTFocf
Zb7hjlN5RZ1L9Zdv44FUTbuef3NNTvC8zkr8bfkblfNGHFvclvga326MPfCC
/8Lnl360cKcWc+qOL3lFnfvS5k/xwNZ+mxsk8vaOeulBy91scTZqXVurqT2k
8e1mwcSoq0usKQ5M1cPFhkS/4Xty7oKJsdN+yUOWeXPp0a0NFw7UXova5SZx
pPaT1By64LD4m7xr9PeXddXYRS/3a9Fp3HHDzvbc9qzF5pc80N6ft9zgUzWZ
6rNUfi7+Jr5T/HbBqsWNwsrA36hXRm5T/GTplcv+YbHT3rFQNv/4Z/PAVma5
4y2eL2ty+3vZSy++tDJL/iz8k+odRr1qffxUXU3ebXO71dnGdLnjrYyxl6Bi
Yc9ECw9M7E+wavPhsq09y8bWvjuULwaPpebNBKsk7sZegsL/ZW4suU3V58tH
e0/e5lWb58b3Fyo3Xn7voDjYwvFe3jt7D9Pe8cQXQ4bit1Sfomw28H+ZG4k9
9jeptj4Ydtrcw/j+8g29o623xl4uweeyzb53C+ZUXIzeZHDjJI4U/0/Oovxd
vncYuWHwwLY+v+SiSx279LzkeC/3Hva3nmWnbfQaI8eMemL0dOrdBQcqH17u
PRJ7Fvxf5oZdP1sORtlA1TG7R7cyxt7jsuHST9m/4L/0msRm6vsUhVsi/6na
2OKw4L/saQ0bFr6x+EXlhl0/W38NzpNgkug0evRLHkL1DmOf0NpDydvfp9p6
0sbR3rtSOFC1dOlBxk4v8T3RQ9UEg5Mkdi4yLc6tL0aOJbZRMtTdafG85F/2
ZcN+O8cWG9q6ZO9dl/pj99P23daGJQdaPW1taXNj4WMLD6S+DRl73Ze7x5c7
3qUmUDWH4iqfmsEXexLMbR5u1GcKh6WP2Pn5ss4kthk7zOvdS8/i11L/l3MT
X6g73uL2khu357Y7lutdiqtQNth6llpK8fBlz7zcTbueU3fKqNuJDS03uPQn
7xr1kPKr7b/2ucsdN+7m5aNRV6kelJyV6DR4o63nU7vE5Y4vebLM+9Rdo+5U
i0mSA8sc9/J+UdwjOTfx99KT6GzPbc+ifF/0G3G3936tPQZvNPRQfXapaS/f
pXBI9LT18NJD2dD6bvfK5X4l9i8y1H71R/0Ur/7m3trq/4a4L7Wutf8b6pLB
nVr+b3NLA4dEz6d4qfH9qM1/e8fY5oOxM7nsoWoa5ePLGtvq/4a4X7EzerFd
n+34tnfZ4Ief+hZj1MAFf2PnT3HRlztGA+cEk0VPIkP5aNfYH+XbHPtU3O1d
rvFtiHpu+GLXovbdJO4tDu1vasY35sQWnwSrxIY2pjbfTuwx+MaiJ/HR7q3L
rNHWVSPul/x1FnUfDe6x1KWX3OnH50sdfvktpv29YLLoWernkjMUbtQerMWZ
mhkX/a39rQzVW5e63faUl7gZvKu9Ly1WVF36VC1N7DHmIGO/R/G3BdvF3+Wu
UXvRJI6JzPItI8Gwxdmw395pX+8mvlP9NDl3wY3qL8veg/KL6l+JPUsttetk
e99bPkPlSRJfe75uMb98pPac9q6MsqHFh7Jt0W9/h7ryIbFzOfcb6nCLD+UX
VZcSH6laumBl9EGqPix2vpyvFw68+NvG3a5RrQ0vv+Uldr7caS/98TqrzfMr
t1vcWvm2Z1HfmBbblntKyVA1ubWfysNLPpExOBg1X7d2Ut8Bqfz5VA4v+ZO8
a3BOuzfZudT6mOC21OGF9y4cj+p99gxI1WRjP0DVNOoeUX38Zazt7zJ2X05k
llxqa0t71mWzsdO2e8cyTxmcJLF/4boJ5nbva21oY7HcI6qetDL2nL7khuFv
G+sf3zW+yxizw5LDLbbGDrmdQSh77N6R4NCea8wyS15ROWzMUC/7eILzEosl
Rpf9rQ2XHmp2sHcdS260di65YXMAKpdanZf8N3zHSTB8uRu8/Fru79L7jNym
ep/dBy8bLj3GTEFx3RZbqm4bNlOcrdVvzIA2B1j4f7sXSjC0sbVr3TfM8q09
l/x1rr1DtmvUYgNViyg+adtp7NBaf5ezWs5mfwdJMF9qfntWcu6nvnfYHMCu
dYu/1PzV9l8KT6ruJe9Su8RW56V/4XKUDZSd1A7tetc4y+5By92hdlnUTNHy
/ySOdk1bsG11XjIL36D6uPGdgvIxOYuymdoltr4sfae9v60NL/lbEq+XczE1
7yT6KU5i+0Wd9Q37SYMDUPXcmB+NWd74ZnHZQ+2QjV1iIr/IGDtGg5dSv6me
2J5F7XAurJY70vpu+EWdlWBi17QW21YnZT/Vixf7l9ymbLZ35m3OJ+caHPs6
q72Di7+2/hZb46yX/DDxsdVD+UVhuOB2vZvIUN90PlW3Ke602E/tOiibl1gb
uLX7z6XuUXMTxcNf6rfPus69YmFwzrb+XHoWvyi+nWDS4vapmvaybhs7sTYu
lP6XvD3xxeAYybnUbrC1h8ql6yxb/0tfEnljR7T4e+mhcLDrAMWrE9s+1a9b
G4ydWMuvDP0JhksPXfBZME9ypvWdwo26d8vewN4DG2ddsVswafN8yeFPzW4U
n0ny6lM1zcjhBasl9y6dxjzV2tz+Xs5Kni/2U7tfm6dd8m0/WvS/9IW6I9dZ
FFdfalGLA8WZ2/y57Dfi9bJfX/Yk576M3YXVJU/lxkuOZMwURg2k7Kd42tKv
E/0UPu1ZRq9pa5eRw60v1P1KdLYyxi7UsHOxh+J+VG28fKH6chvH/48zxZLP
9t2n9mPL89a2xZc2H17uiJZaSt33dm/Z5hjVB9scMGqavc9cOHAbu/beJT4m
NiS+UBzp5UzxMp8NnmY/p/hAOytReWvsiKiemOBJccjWNuO7zKdq2qfiZcRu
sa3FYdmPffNM0dps1E8KB+P3stda6oY9g7SYtzGlepPNIVvbWvtf7sHa7xSL
jM0nr3MpzF9iS83yL/euxnxnzybU7ySO7btJznxqBmnzwe6JbYwWDrnEl4rj
y5q23DubTyb3PfHxev4S20s+wYR618i3xfdP5dKnuDpl88t6S+0cKL7dPrf1
2zl22bz4Ys9HRm9Nzlp2RAa2xn51edfYA7R1qbWZyqWF5xt4Xr5/Q71dcsPo
icm5Ru+jzjVyjKppC+9dZvnlubEjorC98GnfTXxp301kjG9krT0v+RhVlxY8
F9yoemvs5aieaHDpVv9ST4zet+Q/NR8t9lPPjR5B9d/23AvPhVcbXCjxi/Ld
4GOtL9RstfQFo95eMnZuUHv49txLJ3XHX+ZYovNlLi29e+m5LQ7Lfobq7/aO
yOZClz0t5u3+dunXVN+87GnxbGOX5Hyrc5lBjD6+5ENyrsGXjLNazKn7ZefS
UvMTTFr+39bSBbfFBuqshQstdTXx3eCBC4dZZsDlPi5clKq3bbyoPk7J2DlM
9bJvuF8ve/fC8405aIkv1d8X+xfeQsW9xTA5a6kn9u5riam9u1vqbeL7sqO+
9Cw9sa0DyfNLZqml1PNW5lO5tMwyib8U71qwMvr4whsNrrvgb/Qa4x5ROdbe
R8p+o94mvl82UPcukVnykOIG1Lmful9GLi29hrprl81J3i699dKfYL6ctfhl
5xLF541d4st6nmD1KZ6T2N8+b+ObyBi8sY3Rsn9YcrXFZ7lfVF9O7E+eU3et
fXexx+jj11lUfTZ2Lwk+LeYGr7Pr+eJLci5Vb1/WrqXXULsjY+6w997G/Vpy
aXlu51Ib06Wv2Vz9epfS3/pu9JolLkutTmTaOYLat1A8x+itS02makLrV4KV
UQconpzY/PK+LM/tXEri0mL7DVydqhtG7345PxrnLjmWnHX5culp5Y1+ZNQu
mwMYc6uRY8Ydf6mH4glULiWxW+Lb2mb0mqVuUHtgw4a27xu+X3/tjojKt6VX
Jnou24zaRfm1zAWU/kueqiH2HV/0UDxhObfVSeUDtUda8mS5X4v+b/vmaPh+
ybS4tfLUTvU69yX/Mfwy9kiLfnuWf5nnFDeguM2Sn1SeUDyc6oPLfVn0X3ZS
Mxd1Txff2xq+1AqjJ7Yyi85lt2z4a+yvEv0LVpf8wg2WeNn3JdGZYJLovGTs
mWLByuiV7Z1q9xstPokvSx2m6g+1I6J8f5lvVO0yfKTw/La5iZrTLxn7ubHD
pL5bJTYsMwUVa+P7BVVjl3h96juXwQmNWpH4sthJ7S5aXy55o8cZvI6SN3qE
sfuienHr+8sdkbErW2Ld9vGFzy93itoRtfYncXk5X1O15Xr3fwHlBGkN
         "], {{0, 
         128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "7322710481736"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "\[Rule]", "0.04177264869213104`"}], ",", 
      RowBox[{"4", "\[Rule]", "0.956849992275238`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzlmE/qtVl1hT8ihBBwEE4hNuxVEeyHYEZQgrYEQRshIOJQ0qmpZDyxm1YU
bNyGG9fiedZ774cXqvh9L+fss/+dtdc6P/r5r3/2y3/48uXLb//pT//72Xf/
+a+/+c13//Uf//jnf/ziu1/9+F9+9YM//fmHv/z357//5yc//faPP/q/b374
x++/+ef//uW3//v9v3/z+9/927ev368119/JemKz9Tn5O/GBxN76b9XCyg/J
obWe2HlX31pnWT1MYlz3A7kjT+bNuiOLe7S+v6/fv7z8rLuT2Fz3wJfyt7iD
pBZtDte9bX238GHdt6RPrDwsYlzUZT3XFnl7EmPfhYELnEnquMDVJPYrLuJn
G0ub22t9e+6a/y+0FTl33bfrs9oeXs9Kqy6LubbI25NaxuKH5P5aOGPdF6sH
LjtXjIkPJD/JXuKb1ScLDdXmrT3X6p/LZttj1py61pBzFzqC1Lfdu87bWstc
8bZ5sHjU61kkzwtMXujf1p92L8F/4pvFxywNZWHOdS7JT+J/62d7VuJ/4sN6
Vj6pT0lOrLwttMyi99o8L/jzuzCZ1Pfyv+UqRGu3ubXuZstt2lpcPwv/CXYl
dhbY2N6vBce47Fj2rbyRnlzosjaWKyfv4gbX+jY/LT9c3BerbwkHWOi+J3Wl
lavWjnU3iZ3E/3f12IJjLDA56SurvmSeWtjbxkJ0wWLGJTG2/bDuVYu3tz22
5n5JXy10ZRJLm6snc0jeXiztv1jfarHkXGuWLbhxW9+rn0neEptWjBZOtnYS
/61+WPSqhfkkxnavVZdk1pPes/B2ncNkr+Wn5TPBfHIvLB8um9a5yd7rXEsn
Lu7OAifJjLO+t7W27Fg9QM4idSd91a6xOGGbq+v3JP63dtY+r7VSEot1Ny+b
7bltfds+b2Nfc1RSiyc1Jrk7pNaXndfv5O4kvZGclcTb5sTiKos+THJF8rzA
/8SfFjeIz9a7ipX/Ns+JzXV9F/i/5qjtXqs31rzX8qHtq/WbJ9Fiba3b9a2+
u+y39Up8uGy2cRF8eP3e3utP4+0W3iY+kDwveFoS71p/Xf4ksV95SPxJzl3g
/2V//Q5mYfKVqxbDrTe0JM+Wz4TPWGsWGnaBD4nPbS0s3p6st+6spbMsnmbV
95O1T/K9PZfEuObYlhZL8nz9CIZbGq3FJXJ/yXxs16yx3cIH4vOat5MeWPRq
kmerz78W/F/P4nfp6DXHbtdbWiNZY80yEmO7d+2npcUW2L7wf53P1s9rvYW3
1+/JO0vuwifg/1r7PKmjFxy7XW/x6vYsa72lcVofFn5e6xf4v8D21v81z29r
3dpp70LbA4k/lv5dc48F/lva5106ur1fa217+Z/sbe9XYp+sJ7O7vY+Wn+09
te7UAtstjUzySbSbhbekB5K4kvyQuD4Z/4n2sXx78v0qsW9hl/WeQ2YTmWUL
HFj72d6vBf+3sN3iUVbdSQ8vOGqLV2uN3+b2E/Cf4M/CN+K/pdHa75YuTtas
Z5nV51ZftWdZ/Jnwf+vut3yVcGkLTxLfWpsLvmRpfHIvPgH/yfoFj7LeItYa
tuUbBMMXGpnUut3brn9XDyTxXv5Y2N7ms83zWvuQ9Wu+vdZ3lj9r/L/WkNgt
HmWdteauhNet+2c9yxZ9ZcVOcN7SWWvdscZDMvsSf57kIU/quzX3WHDstl6t
D+s8XzZJPhObC1250C/rWfYkDlg9QDAziWWtO5L179I+yfrrrAXfbvOWxGhp
DYsTruu14LfkrCSHl/3k+2V/UQvSP9Z8tN5VFjjQYhS5+6S3rb5N8pPkc+FD
e+71vcXSlodcPid+Ep+J7rA44bvqlcRCzkpqSvwh+bHwf9EzJD+Wjmhrnfi/
mEFWbxMMJ/1pzRHCRdtYCO5ZGnzRq9eP5J9o4UW92rNaHnXZTM5t/blqZHH1
xJ9r/YKvEn/auEhfkbtgYWYb47X+yf605gjhoq0/ln3Chy0MtPQa4XXEfnuP
krPaNVbPPNnbpPfa9STPLe4RPWLpwSd1tIXV67nWrml9ILGT3mjtX3El/rTY
ktTX0k1XXBZvadevNfiiJy3cuGK5/E9it94ckrOs2i1q0c56awYt1iS1fnKu
XbVbYALZ2/LbduZadSGck2i9JJ/k/aS1b2mHFg8JT7Dwf9F7bS0svvqk7mtj
XODkAvPfhf9rzG9z2+69/FzoR1IX0mMWFyI+rGNs9yb5v3rD6kMrn6T3iG8W
JyS1+wTtkNixYiR8YM3/L3/aHrB8uPZaZ7V3k+BP4tu1vv1Z93rxbvC6xuIq
LZa2/hDfSF0u3xaacc3xFvMxOffy09JfJMaFzl3rmrYHWh8Smy1Hsu619WbS
8hyLw6y5XBLjQpsQzWLNtcXsaP1f896rjqR2pN/a2l1nXd+t/mz7oeWZa11z
+W/hD8H/yx/SD0TTkXud+Eny/ySXI3275p+L9dZ9X+Tk9Ud4b7L+Sd33pLZt
7X8CH2jru+4Ba1Ze3xfafK2z2r1W/l/XrzWjVSPLZ8KrF/hvrbd65kn8bGtn
cVerT9oYSbwWLj3ZA+Qut2e9i5sldpJ4rVlDMK2N5Un8vM5d5ITE2PpsrX/9
kZ6xsGuh+xb6peUwlz+WliQ5b/Oz7oG2FuSsJ7mZlec2xna9xZNJ3oif69lH
zkr2XnbavL1LG1pzlnDF9u4setLSj+39Sny+cpXkp80V6SVLm1j3PYmxXd/m
2dJ0a/xM4k1ylfhpzcqFprh8bvNA1q+1oWWH6Oj2LIu7tuuftGNxSytXi3eG
JC6L1yX5sXT0+l2C9AO5s+3sTuqyfit4sqZJHginXfBbYudL+SNcyOKuiZ+L
tw7CUQm3JH246B8S1+tZRGdZM9HSiVdci36wevjyueUei7cC8t2qKfFnoQ3b
HiNzlnDjNd8mfM/iGAv8X98XEq/V8+Tca337fZFDS9ORu2PpjiSWFofJXotn
Wrhh+ZnU6PottHnSS0muFlyF8MO2Xq2dxAeLJ1u8dPHOsJg7C27WxmX5b/VD
0m9WH1qznmBjkmfr3WONXUn/kDnV1vrV5gJjr70L/tnWkXCJNf5b/MriTm0P
XP6s60Wwvc1h4tvireBJTLA43hqfSd4u+9eaNlftXgt7E5sLjCV5XuivNoeL
Xl28X7W8wsL8pI5k7rT1Svy8fGtjJLPV2kvuzgJnSA7buize5S777RtLexeI
TeuN62vRcZed1mayfsElrHt3rV/zt7aXCGa2d+HyM/F5kUOLx7brLUwgfpKc
t/fCqh3xk+gsUrvFu8Sn6bhrr8WZv0YukZxl5bm1n/SVxTcsnd7WiGgxUpcn
tepam7R98mTtCIYndqy7YNWa4MxCx7V7W9+I/5/AJdYcldgn9yWpNeGu13dS
o8vnd/H/9X20tMni/YHU7hPuYMvHrt+T+HmdS943LK7Sxt7i+bu4BMmnxd8I
57ly3tar7QfCLS2t1OYzWf+6ZtE/l30r/wRXiU1in9hpc0tmcesnedMgd22h
nS0d+slcIll/5ZDkk2Cs1W+t/2ReX74ltbP6P8lnYt/Sqlb+n5zva/vWjCYa
0+q9BX6SdwlSL8LJvxYuYeEV0a2Em1m4ZM2+xIeFz+29/gStat2R9Xwh+oLc
QaLpkhwm3wmXI31C8tz2D+GuZB4lvi24hIWlVl1IHhb99vpb62ULSwmve1Kr
rvXmYr5Y60kOr72Xfat2ixna6uVWHxE7az3yLi6xiJHUZTHrrX67bF7f1/yT
5Ln1f6FVWz5AeK/1PnCtaddbflozgnD1BcdufU5ykvjW+k9itHh76/NCI5Be
tXyz7tRCKy34J+n/9UwkGi2xn3xPfGvPbXtjrZ3be0G0Z4urSVyXn8neVptY
nI3E2NZ6zSUsjXD5Q3BgjXUt3yC1W79vtNr8yZlI9G9i39JcybmET1ra2cJ8
6+/W58TPtnbkbar1jcyIJC4yv9o+sc5a6+53YR3hz+s5bn1fz8QrRot7WBiY
nNt+J7jU+mPFm/wI17Xu72KGtpyN7LXmMsEcMiuf5F1WbxCsW2sZ602g/fuK
8fJhzQ3WbyMLHtLeEUsHWfNlwQeIz1bPtzUlusDC3jafFuZY93TBu6zeuPy8
zm3vF6kX4TPtz5pNa25g8bqFriF8Kclh4g+ZL0kvtXdkcafann9ypi/4Xpt/
ches/l/rXGKH1GWN/+sYF7Op5W+Xn6SHSSwLjtSuJzls56ylNRIfEjuWJvqE
mW5hL3kTaGO0dDfhq9Y9Wuimd/F/K8Z275oLtff98i2J17qbLUdqfbb4ZIvP
FvcjeEU0EZmPSVxtHkjekvve3sHEB2veERxre6+10959C+tI/7T482nvG+TO
Jr612E5qQe6vhc+tz9aMJr1h4dVCx61nepu3xDcLYxc8+dpLeuPyoeUzi5lo
4f+Vq8RPYmfNhdY6mvDqpBZtjMne1+9trxKb5PvircOaWW29Wtxo+3ChMdu8
Ecwn/l82SR6S2i1mq+V/YseaUwTrLC5k9UOynnxf8ITEZ0u/kLuwmMttTS1O
2Pqw4G9rjdnijHUfW99e11u+We8wax2UxH7ZWXC5xM6CC13xkr1J/ts+WfOx
pNYEN8hMIXlu975+X3PjNm8WfyPfSc7X95HkjeQh8cfqByu3LVdpeZ2lo8kM
TWIh92LNkdZnrfNDdN/VG2sMIdqqXdPmzeJv5K61OU/Wr/uN3BfrDlrvBlZu
W91KMPnVDuGrC357+UbuRZK3dr2FOU/m5126zJrpSextDpP15O609i2eZmFj
chZ5T2j9WeT57oK/bsfK7fo9YaGj2/XW+wbhEsn3xLf1XFvn5126I4m95TyL
va3/13rC365atDhgYeP6PaH1h7wXEe1m8cz1e4KlHwn+J/lMcrvmElbOrbgs
zXj5Q+py7V3zHAuLyP217k6Lz4lvC2y0uD3hq0SbW+8Y11nt9/W8XsxlwrEX
/La1T/RRa4fERbAr8b+t3ZP+kztOZneSB9KH1vuGFZeFjRYHI5j/ZD7JTHyX
llnM5VYTWfw2WbOoV5vzpD8t3bHgJwvdQXjOIv+tfdKHJBbCu9q42nyu9UVy
7jqfFoaTXiWz0pp3bf4tfnid284Xq15r/Cf9sJh3lu6w+nmRfyvP1iy71rf3
jsRlcW/r7lxnrfNp5Sc5N/GhxfxFvO/ihxbOt/Wy7Lf3NPGB+NlimqU7CPdb
8H9rBpE1l89tbklc197k++JuPqklE/ttfhZ6LTnXetNo/XkXPyS9RPRRYv+y
Y9Wu9bPdu9YdC56Z7LXebaw1C4607odkfXs3rbOsfF5+EkxY61DC90g/PMkP
SS+ReiX9kORw8T6W+LDQvJbusPwk+b/2JnYWa9rYW5uLN4EF1yIcY5HPlodf
5yZ713dhMd8X/NDCJVIv8h5FeJp19xeal/DMBfe7ziK8K8kh4ZCJfYJ7i36w
3klIjAstudAFC722wH8y362zCIZc517rF/Uis6DNIZlxa7xKapTESPQg6YfE
TssHFvzW4nskD0k+FzzzOjf5br2ZPIkDrf/t3nYNyXNrh3Cbdb0sjWbxXsKd
SK7IjFhzP4LbT/aVpX/b/iFarM0D4Zkkt0lOrP4kfbvAlmsvWZOst+Ya0cXt
fSf3IvFtrX/X5xLd8ST3u+wTvFr3laV/k9y260keiG9rDp/keTGjWx7Y+pPs
bec7wRBrrrX3i9z3NkZSo4Vvi71Ed1jrySx+srfbu7nGimtNG28731vfPoHD
k7OuWIi2Svwh/J/UtMXh1g45i+BMey7Bz4Vv1t7LzpOYn/hM3iuueEm/JbEs
4krWrPlAe1Y7TxccPtl7rVloq8v+gv+39UriIv3c5tB6QyB8w8I04pu1N/mt
Md96L2pxMjnLisWKKznX4mDXWUk+rzUJFi04PMFMEi/RVkRjLriQxY0t7UPe
ECz9cp1LOGqbN7K35XhJvGRGLDQ7wRbLZuszwYqkdoRXX98XPU9wz+L/a+xa
a0yLC7X5TGwmeW5xvo1l8c5gYTjBAQvriJZcYH7SwwveYtm0NILF5ax5lOS/
PfeySfKW7F30eetzYj+x2fpJZtCTHLI9d3F/1xi+xiIL/9uakvvS+kZ4S9JL
5I63HMyys55Hbc+3+V/XyOpzEte7OOpa8y5m61rLEByzdF/rz91xf/3X4n+y
xorX0iZrLXn53/aGNdPXc2ShMa0+tPA/WfOuHrY46uXnk5z58mGNqxZ/szDh
Wp/stfAt+U64n8WR1jyH5DzZa9lv7Xyyxmx7YHEfE/uWfiFYfdlpfX6y5y0O
2Z57xWvpSqvfLj+JP8Rm25+kdmvfrrMsLUlqTWZ6Yuc61/In+S005kLjt71E
1rTcOPG/nbnrnicaYT3Hyd2/fFjozdafBb5Z+rStHfEtqQt5s1rUur0vSQ6T
3mj9ITaT74tZ39aIaJM2n+S+E/xPcv6k5l3ctfU7UpJbK/9P4pv1nmNpxtYH
gr0LbtnWmtTx70FjtrlNakT42KLHFvrxST1FfH5SxyW+va75BD37JL6Rd4BP
6Ierdgusu3xY9GQ7O9rvn6wxkzwT3WTxMXKvrdwmuVrrqbbHrHMT/LnstGvW
eratkTXTL/vJ90/uB/K+Qbgl6UlLj3+NGpPgfzt3LDut/9YbBcH/q+6L943L
TmIziSvJs2VnoWdJbgmPJVqe+HzFnti81lg6l8Ru9aSF/1+LxrTwv/XZskP6
yqop6Umr5y0Nu8aZxM6TfIDk9l1605qJix4mOpfEbvWkhf9k/VpjXj/SD0mM
i7qQ+96e2+bqWv8uPZXE2/q8nl9JXSw+QHxL7JN5Qfx/Vz8ke5O4rNjJzG1z
ZeXW0pgWL2q/L7jQlduFfklqlJxl8bH1fW99XsyvxE+LDxBt3vq5Xk8w5LK/
mPVrTkh60spVi0VrzvD6s/gV4WNE3yW1SHLe1pTgxkJjvuu+r+fXk3zAiuVa
c/lmrV+8FVgYRfiPxS0JByC5snLb9sC1/tpLckI4WBuXhTNtHqweXuD/u+77
gq+SOibnEn8Sm0k+F/q0rfuiHxLfFpxwoQFJrtrvlsa81iz4T/trc7vmyQS3
FxptEVeS58u+NbNITZ/UHQu+Z3HCNp+va4imJhhlcZLW5rW31WgkVwRbEpvX
GjKDSD4XXG6Bk639lsO3/iziWt93MmsW/H+Rf8L3LL1Jvi/uoIUtiZ9rTpjE
uMCr9u60dzaxY/Gf67fA27U2f/L9YaEx1/ed1C7xZ3Hf2/yTWrS5Ilyx1adt
PpM6tr5ZexeccNHzhD+/6862s6nVUwtOntS65S2tP21cVz4XetzSOFbt1vjf
5j/JM6lFGzv5m+BtknMLG0keFvhPNH6L+cS3xZ29fguNb3HyhTZv8ZO8P1ga
8133va0dmekL3dHmZM27rnwmP4LVrc1FX1n+WPyf4NW1hvQ5iaX1rfWfcM6W
ky94cjJfFu8PFo9K7Fv3K6kRuafkXhBel+Tk8tPqseu7NR+J9lnjNvEnyWfr
j3XvLh8W+tS6s9a5hAeueTLhzBaOrd9VnuylFh8sPmD5Y3H7hS679pLYrX67
/CR22hot3hZa/9u+XehT684uNF07W1vfCB629q/eW8wjkvNk76KXLG6/0Jsk
t6RPiC677JAcLnj7k/W1OGGbc8JjCdZZNbJ0IuHGxI6FddZ8Ibkl3IDkmdTC
ql1ix+qNBcez8P/yZ6G5EvtP1tfKv8UJF33ezmKiTy3+b9WU9Fi7JsmVpYsX
d5P41uZk3UutzTVuW/yf+Lx4H2hjTOwnZ7X+LLTt4r1inYe/XRUPW6xZ1taU
5JasudZb3J7MRIL5hDMkOVxgWpKT9dtCsretncXfyHxZ5I28k6z5JMGi1v4i
D6QuVn4SO1dcyd4EY5O42jVtb7dY0d67J98rLp+T2i3eu57s2+T7guMlvzXv
srCxzduivsldaOvV+knenUgeLD9JH5K9Cwy8fEjyf/mZ7F3H29q0OEObE+tc
q2/b/rF4SOtbYseaL8mPYFrbDws+acW44GYkDws8SfJzfW/vwvoNivB8EuMi
XqK/CGdo1xD+TDAk+ZG3BXLfFxyJzBerx9q8Xb59MhdN1lh3c6FZFpyQ8G3i
pzUHST6TGNs8LLj6IldEw1oc8qrdQitZfCypF3kHSPKT/BZ5u+xYXD2x3+5N
ziXaba13WjxpuVl7f0nPXD4nvhHNTmJs82DVZaFBLC2/qJHVJ5cdsr61uf5O
8GrBz5/URJZmIfhPZt9C+7dxWX3Yxnj52fpPOB65a4u3nYXWbvPT2l/UaMHx
rPXrXiWcysLVNm+L7wsueuVqgf+LfC7qbvVeGyPxsz3XumuE81vxEg3S+rDQ
eokPVw4tLUPWt74leWh/REu2vZ3Y+bTvba4IfyPaqu3nxbtH26sE6yz91Z5L
7uOCV1u4vcD/hdZb4Crp55azLfT+Ipa2jta72Sf8feW59b+1c60nvNfiY+18
JDkkWsbCseT75YM1R6y3o8T+mv9bfD6pEYnryXcMovfb36KOa7325G/BuxZ9
2/pjvQ9YmtrKofV21+awnQWX/Wsvqemn4f9Ccy16o80JqZGlYdu6Wxxywf2S
3ljz/DYPpDcWmLbWtlddrDcNcr+INmnrleSnnfUWBpJ434X/T755Evwnsbf1
ItyYxNXeI4v7rbXP5f+1Zv3GZWHagndd9tdY0a5PeixZQ/K54H5trtqcXPY/
Af8X9Xpyprf3jmCL5X97j9r8t/1paZ+1Drr2rvNj+UnwYX1uEiOZoaT32vUL
zCHzKKnvJ+A/qRfRTaTfrhjb2Nu9rf/tHbFmn/WukvwWOqjV2gu9QPwkeVhg
xeINhOCAhf9X7NY7hsWdPhn/LW5v3dl1/yx6ZlF3Mvusd5U1pyL3KDmrzY/V
byQPa/xvc0JySHKe5DDxrfWB9G1y1qfhv9Xzlqaw/L/2Wu9Obd7Wdqw+uX4L
TmXhhsV1rX677BA9aM2dJ2dom/P2/lrYS2pB8vMJ+L/wmcxZ4n/LH57E2zVH
au1ceSA8f6GDyJ1N8tPm8MpbYqfNw5N6f/FelOS85YqkduTvBV5deSBxJXvX
PhMsfbJ/1nhr5S3Zm9hpZ0Fi0/q+mK0ET0i/JWdZOtHqARIX0eCEK1pvC22M
7Xxsz2r9ITxk4fNat5L+aXmONVvbGC8fFty1vWsWp7LeDVo/2zy3uH35Y3GP
BSchcS3wn+ij5I5Y3CPJZzsvnsTVhQZc61bSP0meLY5H8mZhzhVX4k/Lechv
waOsdw+C2xb3ID1J8tb2w4L/E33UzoI2J0k+Sb0WuEqwpc3PQreS/mn703pP
eDLGpNaJPy3mW/lv62L1pDUHLe7R2lzkjeQ28cc618oVObe1SfKzxn+iAS8f
LP5vYVSSH8IxLLy1MOfKA+nz9rfAzMROu570mMWNW5tW3khuCf4v8knmvoX/
RIeSnLf5J1zoOvfygdSaYNSTPJPk9tN00+tZa55v2Wn7gWD+IhaLA7R5a3Nr
aeRFbyx0onUfyexucdjSFxZHXfP5d/HMBba/SzeROUvyb2n8xdsCiZFwY/Lm
0ObtinHxhrDg4QudePls2V/gZ7J3MSuTGF+//z8j5lQ2
         "], {{0, 128}, {128, 
         0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4864402493091"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.07580898702144623`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.9241909980773926`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzt2LGqHVUUBuCgIIK9vaWNhfYJtpYRHyCCVoFALFSw8MXsxMrGlxDfwcYE
LAbCHPactdfMWvt8gjJe9po9+//PfLk5n3z76vn37z158uSHD9/85/mLH798
/frFz19/8PZ/vnvx8ovPX77/5vLX//99e/3q09+ffvbxv0///OOjZ3//9M2z
r3755+lfv71+NvLzyJqRvTLWRO4ZOXvGXhl9RfKc1VflHCLXkXvO6ivj3Yw8
W+T+GflnW3emXUdnn2z+2a7Z+/nI7N6akb1mrTl6xr01R88eyWFWhrO63stz
VrZdcoiYc/Ses/o6msPIPWc9W+T+szLMXhN5XyLrZ33Oj94zYt2s64x9K5sf
6Wvkd5vt7Kx38+jvhBVyqGB+5DkjeUbyP/oZi3yuOpofyWFv35FnnvU5qWB+
9t/ZR85SwfxZsxX+PK2WQ4XZqz6TGZ2e+Z5WNj/7z/GM39urmT9rX+av0Vd2
Do9gfvZ65ud1ynzmM5/5Z+6V/Rlg/u1OM75rYn5NtyOzK/WVnQPzmb+S+Rl/
L+huSBe3Z/Xbva/sHJjPfObffobuhnRxe1a/3fvKzoH5zH8E8/fOO/IM3Q3p
4nZkdqW+snNgPvMfzfzt+pE13Q3p4nZkdqW+snNgPvMf2fxHMKSL25HZlfrK
zoH5zGf+2oZ0cTsyu1Jf2Tkwn/nMP/+7feYzn/nM37sP85nPfOYz/5y9mH9t
p8xnPvOZf+ZezL+2U+Yzn/nMP3Mv5l/bKfOZz3zmn7kX86/tlPnMZz7zz9yL
+dd2ynzmM5/5Z+7F/Gs7ZT7zmc/8M/di/rWdrmr+9nrWXhXer6tmmT/+PMxn
PvOvNX/7DMy/b5b548/DfOYzv475kX0rvF9XzXbpqEIOzGc+85l/9OzVZrt0
VCEH5jOf+cw/evZqs106qpAD85nPfOYfPXu12S4dVciB+cxnPvOPnr3abJeO
KuTAfOYzfw3zt9cZWVWe7dgR85m/dx/mMz9yzy5uR2a7d3RmDsxnPvPXNj/j
7NVmV+ooOwfmM5/5zD969mqzK3WUnQPzmc/8xzR/e3307MzP6yg7B+Yzn/nM
r/BuZjxnx46yc2A+85nP/ArvZsZzduwoOwfmM5/5zD8zN+Yzv0ImzGf+yPru
nlTIjfnMr5AJ85k/sr67Jxnv2tH1zGd+hUyYz/yR9d09qfyuZezVsaPsHJjP
fOYzv8K7lrFXx46yc2A+85nP/DO/n2c+8ytkwnzmj6zv7gnz63eUnQPzmc98
5p9p/vZ61l4rdZSdA/OZz3zmX2X+Ve9d5Y6yc2A+85nPfObX6Sg7B+Yzn/nM
r2b+0b5W6iiSG/OZz/z77j+yV0dPKrjNfOZXyIT5zB9Z392TCm7Pml21o0hu
zGc+8++7/8heHT2p5vas2ZU6iuTGfOYz/777j+zV0ZPKbs+a7d5R9tmZz3zm
M7+a25HZ7h1ln535zGc+86u5HZnt3lH22ZnPfOYzv5rbkdnuHWWfnfnMZz7z
q7kdme3eUfbZmc985jO/mtuR2e4dZZ+d+cxnPvOruR2Z7d5R9tmZz3zmM7+a
25HZ7h1ln535zGc+86u5HZnN7iu7o+yzM5/5zGd+Nbcjs2f2xfy5z8l85jOf
+ZXNj+zLfObv3Yf5zGc+85l/zl7Mv7ZT5jOf+cw/cy/mX9sp85nPfOafuRfz
r+2U+cxnPvPP3Iv513bKfOavav72+syzM5/5zGd+Nbcjs4/cF/OZz/z77j+y
1yMY0nH2kftiPvOZf9/9R/Z6BEM6zq7U1979mV/n2Zg/t1PmM5/5796f+XWe
jflzO2U+85l/+/5Hn4H5zGc+86u5HZldqa+jOTCf+cy/7/4je3U0pIvbkdmV
+srIgfnMZz7zq7kdmV2pr4wcmM985jO/mtuR2ZX6ysiB+cxnPvOruR2ZXamv
7ByOrq/mQ4VnY/7cTpnPfObn5bCdZf45nzfm3+6U+cxnfl4O1ZxkPvOZz3zm
5+VQzUnmM5/5zGd+Xg7VnGQ+85nPfObn5RCZzXg25jOf+cxnfl4Os2Yrfw6Z
z3zm13c7MrtSX9k5ZM9W+Bwyn/nMr+92ZHalvrJzYD7zmX97fXdDurgdmV2p
r+wczpyt9nlgPvNH1nc3pIvbkdmV+srO4czZyPf/GTkwn/kj67sb0sXtyOxK
fWXncJX5e+uZz3zmM5/5eTkwn/nMv72+uyFd3I7MrtRXdg7VzN9eZ+fAfOaP
rO9uSBe3I7Mr9ZWdQ2Xzu69nPvMrGNLF7cjsSn1l58B85jP/9vruhnRxOzK7
Ul/ZOXQ0f2+W+eNrmM/8am5HZlfqKzsH5jN/1R6P3n9kr46GdHE7MrtSX9k5
rGT+9vrM52H+3B6Zz3zm5+WwqvnbWeYzn/n13Y7MrtRXdg6PYP7eeuYzf2R9
d0O6uB2ZXamv7ByYz/xqPTKf+czPy+GRzd9en/l5Y/7tHpnPfObn5cD8d9cz
/9oemc985uflwPy5xjKf+dUM6eJ2ZHalvrJzYD7zq/XIfOYzPy8H5t+3PtI7
82/3yHzmMz8vB+bH1zN/bo/MZz7z83Jg/jnrmc985jO/Qg7MZ361HpnPfObn
5cB85lfrkfnMZ35eDsxnfrUemc985uflwPzzzd9e780yn/nMZ34Ftyu4euZe
2Z+B7X2Yz3zm3ze7Ul/ZOTC/jvnb+zCf+cxnfgW3K7h65l5Xmb9ds/dz5jO/
2vt11exKfWXnwPz65md8/8N85ldzOzK7Ul/ZOTC/l/nbNcxnfrX366rZlfrK
zoH5fc3frjk6y3zmV3M7MrtSX9k5MH8N849+/8N85ldzOzK7Ul/ZOTB/PfO3
a5g/fv+RvToa0sXtyOxKfWXnwPy1zd+u2f6c+cyv5nZkdqW+snNg/uOYv+d8
tR6Zz3zm5+XA/Mc0f7umWo/MZz7z83JgPvOr9ch85jM/LwfmM3/vex7mr2FI
F7cjsyv1lZ0D85l/9Lt95vcypIvbkdmV+srOgfnMZ/7t9d0N6eJ2ZHalvrJz
YD7zj5q/vc7okfnMZ35eDsxnfsT8yPf/kbMwv+b7ddXsSn1l58B85s8y/+i+
kbMwv+b7ddXsSn1l58B85jP/9vruhnRxOzK7Ul/ZOTCf+dnmb69HemQ+85mf
lwPzmX+m+bPOwvya79dVsyv1lZ0D85lfwfz/AN/b37I=
         "], {{0, 128}, {128, 
         0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4457586281952"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[Rule]", "0.0002853880578186363`"}], ",", 
      RowBox[{"2", "\[Rule]", "0.9997105598449707`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztmb/qbUkRhS+KoqGRiYmBkZli6FwMBaPrE4yg0YA4E4iY+B5GvoDgm/hI
zoDBwKGa1XtVnV5dtRqUO5vd9Wef3/lO769++oc/f/rTdz58+PDVD77+v0+f
//U3X375+d9+//1v/uOPn3/xy1988d2v//mP///vm3//7p+ffv2XH/78sx//
9j+f/ehfv/r4s3//5ON///69j9H16J7o39FeJtfudabO3V6yeqx+Jlm9ZD3D
3c9L+TOtrm03b8VzyPq+I3FOxWeeZ0WPFaz+AKzo/igXsnc31+5C/k5282bV
hjzPirxZMSueIcNhhc8U6aW6tltyIc+HqZOJH8VBatj9+2R63N3L1IbEjO5R
4D8S3/zHVzX/d+tR+Ey/vbK+FxP4H51dmTqZ+EyPyP1ZPe7u3X1fyIqpzP/d
Os1/vk7mXRKJeeozjXp5Z2038j+6fio+0+NuzIrv+25tzFml4resmv9MXvOf
r5M5S+zWqcD/d9Z2I/8RX10dH2EjUgPC9gpnklXb7lnlRv/P5DX/+TqZ84ny
b/puzWpMVjj/R3F235sYz1PtQyqcyW5tFTGV/T/yW2/+4+vU/LfCo9r/vz+X
2vw3a1aocAZmvl9MzFv8v/nPx1SY/546Y+/WZv+/3lvxm17heXZ9yG7NzP3I
3ur5b1Yv1f5HgRXm/zOXGN3/zjM2suz/75r/Zr2D3ML/6DrzvqPQe1QbEt/8
x5fC/PfUGRtZ9v/P/Mw7579RzCwfslszc/9ubRXvO8r+n+mxojbz/9n5RHmm
H9Vs/4/vjeJkzX+zZge3878i5i3+n8lr/vN1Zs2nkDObGv/t/1/3Vs9/mb2M
D9nNy9y/W1vF/Derl2r/z+Q1//k6K3pX5j+TdwL/s9zLO2u7nf9RX8z7jkLv
u/3u5jX/+Tqn8f8WJiv4n+r5b4WbysrL3M/UlvW+c4v/V2CF+T+H//b/673V
89+s2pA4t/C/ev6r5v9Pncd245j/vflv/7/eG8U5Nf/t6v/fGVOB/0h88x9f
5v962f/zZ2ymTvt//Pyf5bsUeo9qi+JXn8d245j//fh/C5NP8R+ZzTHxs/Yi
cRQYyLgaxnfd4v+ZvOY/X+c0/tv/43vV5r9d/X90nfFdt/h/Jq/5z9c5mf/2
/697lee/Xf1/xfw3q5cK/iPvmOY/vsz/9bL/z3UsCvPfTv6/IqZC71FtyHXz
H1/m/3rZ//OOhanT/h9ndVa/yv7/1PdxN47534//9v/rvci7OROf2dvV/0fP
PGv+q+b/kfjmP77M//Wy/3/2eanNf7v6/+h6Vr9ML+/kf/X3cTeO+d+P/0ze
Cfy/Zf7byf9XzH8Veo9qy8pr/vN1TuP/LUxWOP9HcU7Nf5HasvIy9zO1ZcW8
xf8zec1/vs5p/Lf/X+9Vnv929f/V8181/4/MmMx/fJn/62X/zzsWpk77/2es
zvq9Y3qp9j8KrDD/5/CfyTuB/9F1tflvJ/+P9LsbU6F3pDYFVpj/c/h/C5MV
/I/a/De653b+V8x/lf0/Et/8x5f5v172/7mMPTX/7er/K2Iq+/8ofrWP3Y1j
/vfmv/3/617l+W9X/18x/83qpZr/TF7zn69zGv+ZvBP4H/0+MnXa/z87qzPv
Owq979a2m9f85+ucxv9bmKzgf9Tmv9E9t/M/us687yj7f+SMYf7jy/xfL/v/
Z/5Hbf7b1f9Xz3+V/b8CK8z/mfy3/1/vjeKcmv929f/vjKnA/1Pv47txzP9+
/GfyTuD/LfPfTv6/Yv6r0HtUGxLf/MeX+b9e9v88Y5k67f+fuRrGdyn7/yh+
9fv4bhzzvx//7f/xvWrz367+P7rO+K5b/D+T1/zn65zMf/v/173K89+u/r9i
/pvVS7X/Z/Ka/3yd0/jP5J3Af6QehflvJ/9fEVOh96g2xDGa//gy/9fL/p93
LEyd9v84q7P6vcX/K7DC/J/Df/v/9V7kbMbEZ/Z29f/RM8+a/6r5/1Pnsd04
5n9v/tv/r/eqzX+7+v/oela/TC/V5/93nsd245j//fjP5J3A/1vmv538f8X8
V6H3qDamx4razP85/L+FyQrn/yjOqfkvUltWXuZ+prasmLf4fyav+c/XOY3/
9v/rvcrz367+v3r+q+z/mbzmP1/nZP7b/7/ujZ4PU6f9/zNWZ/3eMb1U8B/5
GzP/8WX+r5f9/7PPS3n+28n/I/3uxlToPaoNuW7+48v8Xy/7/2eORW3+G91z
O/8r5r/K/v/U93E3jvnfj//2//jeKM6p+W9X/18RU9n/I/HNf3yZ/+tl/88z
lqnT/h8//1e87zC9vJP/1d/H3Tjmfz/+M3kn8B+ZzTHxK2q7nf9RX8z7jkLv
UW1Zec1/vs5p/L+FyQr+R23+G91zO/+j68z7zi3+n8lr/vN1TuO//f96r/L8
t6v/r57/qvl/5B3T/MeX+b9e9v+5Z+xT89+u/v+dMRX4j1w3//Fl/q+X/T9/
xmbqtP/Hz/9Zvkuhd6Q2BVaY/3P4fwuTT/EfeTdn4mftReIoMJBxNYzvUvb/
SHzzH1/m/3rZ/z/7vNTmv139f3Sd8V3K/j+KX+1jd+OY/735b///uld5/tvV
/1fMf7N6qeY/k9f85+ucxn8m7wT+I/UozH87+f+KmAq979a2m9f85+ucxv9b
mKxw/kfy2v8/21s9/1X2/8iMyfzHl/m/Xvb//BmbqdP+/5mrz5r/Kvt/BVaY
/zP5b/+/3qs2/+3q/6PrWf0yvVT7HwVWmP9z+M/kncD/W+a/nfx/xfxXofeo
NiS++Y8v83+97P9zHfup+S9SW1Ze5n6mtqyYyv4/il/9Pr4bx/zvx3/7//Ve
5flvV/9fPf9V9v9MXvOfr3My/+3/X/dGz4ep0/7/Gauzfu+YXqr9P5PX/Ofr
nMZ/Ju8E/kfX1ea/nfw/0u9uTIXekb4UWGH+z+H/LUxW8D9q89/ontv5XzH/
vcX/K7DC/J/Df/t/fG8U59T8t6v/r4ip7P9Pncd245j/vflv//+6V3n+29X/
V8x/s3qpPv+/8zy2G8f878d/Ju8E/iNulolfUdvt/I/6Yt53FHqPaoviV5/H
duOY//34fwuTFfyP2vw3uud2/kfXmfedW/w/k9f85+ucxn/7//Ve5flvV/9f
Pf9V9v9MXvOfr3My/+3/13ujOKfmv139/ztjKvAfcYzmP77M//Wy/+fP2Eyd
9v/4+T/Ldyn0HtWGXDf/8WX+r5f9P89Ypk77/2euhvFdyv7/1PdxN47534//
9v/4XrX5b1f/H11nfJey/0fim//4Mv/Xy/7/GWPV5r9d/X/F/Derl3fyv/r7
uBvH/O/HfybvBP4j9SjMfzv5/4qYCr1HtWXlNf/5Oqfx/xYmK5z/kbz2/8/2
Vs9/b/H/TF7zn69zGv/t/9d7ozM2U6f9/zNXnzX/VfP/yN+Y+Y8v83+97P+f
fV5q89+u/j+6ntUv00u1/1Fghfk/h/9M3gn8v2X+28n/V8x/FXpHalNghfk/
h/+3MFnh/B/FOTX/RWrLysvcz9SWFVPZ/yPxzX98mf/rZf/PO3amTvt//Kxe
Mf9V8/9R/GofuxvH/O/Nf/v/173IbI6Jn1UbEucW/kfPPOv3jumlmv9MXvOf
r3Ma/5m8E/gfXVeb/3by/0i/uzEVet+tbTev+c/XOY3/tzBZwf+ozX+je27n
f8X8V9n/I++Y5j++zP/1sv/PZeyp+W9X/18R8xb/r8AK838m/+3/X/cqz3+7
+v+K+W9WL9X+R4EV5v8c/jN5J/AfeTdn4lfUdjv/o76Y9x2F3qPakPjmP77M
//Wy/3/2eanNf6N7bud/dJ1531H2/1H86vfx3Tjmfz/+2/+v9yrPf7v6/+r5
r7L/Z/Ka/3ydk/lv/7/eG8U5Nf/t6v/fGVOB/6d87G4c878f/5m8E/h/y/y3
k/+vmP8q9B7VhsyYzH98mf/rZf/PM5ap0/7/mathfNct/l+BFeb/HP7b/+N7
1ea/Xf1/dJ3xXcr+/9R5bDeO+d+b//b/r3uV579d/X/F/Derl+rz/zvPY7tx
zP9+/GfyTuA/Uo/C/LeT/6+IqdB7VFsUv/o8thvH/O/H/1uYrHD+R/La/z/b
Wz3/vcX/M3nNf77Oafy3/1/vjc5jTJ32/89cfdb8V9n/M3nNf77Oyfy3/1/v
VZv/dvX/0fWsfpleKviPnDHMf3yZ/+tl///sjK08/+3k/yvmvwq9R7Uh181/
fJn/62X/n+vYT81/kdqy8jL3M7VlxVT2/6e+j7txzP9+/Lf/X+9Vnv929f/V
8181/4/EN//xZf6vl/0/71iYOu3/n7E66/eO6eWd/K/+Pu7GMf/78Z/JO4H/
0XW1+W8n/4/0uxtTofeotqy85j9f5zT+38JkBf+jNv+N7rmd/xXz31v8P5PX
/OfrnMZ/+398bxTn1Py3q/+viKns/xHHaP7jy/xfL/t/nrFMnfb/+Pm/4n2H
6aXa/yiwwvyfw38m7wT+I2czJn5FbbfzP+qLed9R6B2pTYEV5v8c/t/CZAX/
ozb/je65nf/RdeZ9R9n/I/HNf3yZ/+tl///M/6jNf7v6/+r5r5r/Z3qsqM38
n8l/+//13ijOqflvV///zphq/Gfymv98ndP4z+SdwP9b5r+d/H/F/Feh993a
dvOa/3yd0/h/C5NP8T9iLFOn/f8zV8P4LmX/j/yNmf/4Mv/Xy/7/2eelNv/t
6v+j64zvusX/K7DC/J/Jf/v/173K89+u/r9i/pvVS7X/UWCF+T+H/0zeCfxH
6lGY/3by/xUxFXqPakPim//4Mv/Xy/6fdyxMnfb/OKuz+lX2/1H86vfx3Tjm
fz/+2/+v9yKzOSY+s7er/4+eedb8V9n/M3nNf77Oyfy3/1/vVZv/dvX/0fWs
fpleqv0/k9f85+ucxn8m7wT+3zL/7eT/K+a/Cr1HtSHvmOY/vsz/9bL/z3Xs
p+a/SG1ZeZn7mdqyYt7i/xVYYf7P4b/9/3qv8vy3q/+vnv+q+f9T57HdOOZ/
b/7b/7/uRd7NmfhZtSFxbuH/t+/5HxvZfZs=
         "], {{0, 128}, {128, 0}}, {0., 
         1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "7458524800199"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[Rule]", "0.009640593081712723`"}], ",", 
      RowBox[{"2", "\[Rule]", "0.9903560876846313`"}]}], "}"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.775515927546496*^9, 3.775515958692295*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"155d8df9-62fe-4383-863e-dae7e8d9e8f9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3-colour totalistic, range 2", "Subsubsection",
 CellChangeTimes->{{3.775514087949081*^9, 
  3.775514092324644*^9}},ExpressionUUID->"aaf1b729-b679-4ed5-b370-\
c84ebbc49a47"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"test4Data3kr2C16", " ", "=", " ", 
   RowBox[{"datak3r2C", "[", 
    RowBox[{"128", ",", "128", ",", "8"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"test4Data3kr2C16", "\[Rule]", 
   RowBox[{"netECA16", "[", 
    RowBox[{
     RowBox[{"Keys", "@", "test4Data3kr2C16"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<TopProbabilities\>\"", ",", "2"}], "}"}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.772719248559807*^9, 3.77271927548206*^9}, {
  3.772719324257593*^9, 3.772719331356277*^9}, {3.773124904129174*^9, 
  3.773124928357933*^9}, {3.7731251153026133`*^9, 3.7731251512280912`*^9}, {
  3.773125217467578*^9, 3.773125219418065*^9}, {3.773125271868342*^9, 
  3.773125271954652*^9}, {3.773212712732003*^9, 3.773212729006225*^9}, {
  3.773212818178605*^9, 3.773212830613299*^9}, {3.773212941366901*^9, 
  3.773212951689026*^9}, {3.773213005636443*^9, 3.773213014527096*^9}, {
  3.7732132566474*^9, 3.773213256876457*^9}, {3.773294401307526*^9, 
  3.773294423203759*^9}, {3.773348269707011*^9, 3.773348280477676*^9}, {
  3.77334908518248*^9, 3.773349098431772*^9}, {3.775496430974524*^9, 
  3.7754964434954777`*^9}, {3.77551289547048*^9, 3.775512922391371*^9}, {
  3.775512964754963*^9, 3.7755129667207823`*^9}, {3.775513033765952*^9, 
  3.77551304928683*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"0d9d69f4-4f66-40ee-b606-0be341fd69af"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzlmTHrpWkNxQdFEWz9AraCjfazWIvNWiusojYLwlqIjdjY2/sZbPxytu6C
xatLdnP+5/yS3PGBGd653Pu8yUlycpL5/q9+//Fvv/Hu3bs/fOfzvz7+5I8/
+eyzT/70829/8Y/ffPLpj3/06Tc/f/zLf/588fzrv//g/Q9/+a2P/vHX373/
7p//9f5n3/vb+5/+8xcfPT+vnqvvPz/vfCd1Z+f7zj2OPc6dqv3OPSl8VByc
mNJx2crbyfuJeKVqgc4Hp46c76f8SmHiPL8zjnpP6r2d+zvvonF7xs7xq5N7
nXuI/FFxvmBnKm8v3E9rBgJnmgeIM8mrqj3Pzzv8sJVXl58rDDu4bekoR1d0
cuZCLjl20jbTOFS17+BAa5Lq+xdqfFLnvMozkVeXn6t4OfPdpI4ieCk1hzq5
1LGZ2Lc4nNY5qZx0dAKNoRqvV+EctY5oHyt71Bx26utVnh371b7vnEn9lvJl
sqeousux2fFrMvdoneDkRsdOomYJrkjpf6JfX9ONF3ieeE69i9ZjW7PGJG8Q
dhK9dQtb1Zet2nFsoLmiss3RM46/1W87cad142RfUOuCxqR6l/pbNdYO316Y
iwmupu10OISw2en1HY5K1Q6hGRxMqntSNm9pJKc3bWlpp0en5iZ6lt/S5Cm/
nPra4j3HTqcGaZtTHOLU1AU+ITQ2cQ/tu5MD6nlFPeD4S+jD6l0pHU745dTF
Bd5zdIjDY6qdRLwc/qxsSPm1xSHEvE88d2y4oBsv6AH6Wc2NlK6m9/9VPjv+
qr/t3EnkM5EDk3mY4k96VnXmaCeOqTmd3g8471LzYWt26By6n9K7YoJn1M+r
s6WBJ3nvrXn3v3d2cCO42tmDTc4sW3q1c7+KW6o2tzTnK+rzyX07sdN2Tmq2
vdCbKr+2+i+tzTpxdPAnarCTk4Q9ak1N5kAHE+fQOb+l4en5womvo38qG1L5
T3DOlgZO9W6CK6qTip36HVo/0HNryuZU/VY4dN5LzLNOPjsc5cR6y6+Uv6rv
1fedexzb6Bkn9S4HW0ejpvopHcdJ/TCp/yd5crL/qphsaexJnTnpV3WI/qXe
T9jT0TCpWpjEUI3v5H6Y5tJJ/eBgm8LEsSF1aG2c0lp0DU5qQtqvlL9OLqm/
VW2Y5NiOnYT9dB2pfhG4qffQ/YuYfVR+uMaTRO928CT2/7SG6ZzUjkL1N7VD
prWimjOEncSOrpMbdN5e0DnOnmGyFzt8Tuc8wSdO71brNMVFqV1rB081l1L7
5Mn5ohPryd3Xq9j5PA4/OL2D5sAcQm+3LdW/VNw6dhI4pHr0hb4/mW8p3UXY
PMnP9OxwYVa9YKczs1SfE1pO5cDJOKq4TebPZA5fwNzhYWKPQWOu+pKy2alB
p+9Pcp2TG46mJeysvu/kA6HrHA2p9ovJPYMar9RM5Lx30scU/kTeOrVJ51WK
G6s7K2wdrlbjpeZzBzeHZwgOdHT1ZB9Usd16TvWarXxI7TEIrpv0PYWDk89O
ntMYdux0+JzgHwdnYp/g2J/qazSGKraEnZPae7LXTOZDKu7OuVALHdu2nmkM
q8/pHpricLpvpvYnji+d+4nZ1tHGjv0dO7e0t4P/Vj4Qcb/Gh3T+p+J+OUYp
fDrngoZxMJmcHS7sGCdjSueqc+fkPseJ6QVOI/gw1fc7HLKlPbb6jqrfiLq7
0B+JHCD6l3oIzU/nreMv0ctUPKvvO351zuQ8ldI/xH7VyeEOH05qmMm+4/DY
JId33rvFA9V36Nwmeq6KD6GHU/rZ+W0HBxWfFI+lNPDkex1dROsHx07Hhi3t
ncqNLf3v9HSHB1K+d3DY2iumeLKyx/mcOERuP09Kq9B2pnLewXxS99L9l7Ch
k1cq5p14dd47ucNRbe6cFCbVnY7WJfaKDj4f6nOFFRFf57eOnZN8rvo7aXOK
P53d75aWS+UksTva+r+AlAZQ8zOV5yndkuLJy88O/k69q8exwdEDF/pF9Vti
V6DWTqcGiVmgg4OKeSpek1xa4UDwg4pD9f0OzpVfkzFS73R0Av1M83aKZxyd
7Nip8tukNkvpFhWrDob0PFK9d6suUho+hScxp6R4g87zVH/s5GTllxNTmufV
GKn3qJzpxMLRk06eO9/p+EvzA9GLUz3R4aXUdyrMVfxTHOvUSCpnHH7r2Kbe
SefwVr2kcqlzv5obqdjRzx1/J22mtejTfkfDVPeoe8KUJnnFZyKXHA2W0sBb
eDozfmqvlXpX554PKW/VfJvcQxI2q/bQO7HUXE/P4ERuOP2rY09lf+cQd1bn
Q6plYneX2ncRtk3i3DlOTTkYOnHp2K/aTOyCVMyr70/qMUeXTvajyZ6behdh
56vUcgqTTn116oioL/XOSc5M9Th61nDy88Jzajfi9L5JLZqKe4oT1LjQmKhn
Us8QtZzCYbJmnViovhD+dt5F3985qb2Z+i56z0CcVH+Z1Mxqn3IwSeG5pSu2
NEwKTxVbOpec2edVZjoH/+q3xP4hNdc7+Kd2Dltcqu6XCA2W2idM1pGzl0th
MrmbvbZLTGFF1zs9v3RwqPwlODPFyR1/nRpPYT6Z553j1GmqVzo15dQRwYfq
b2ldkeKoyc8rbGmudvq+E9/q+7T2cDg5xUV0rqr5RuvnyTzf8qU6jhYleooz
Z6W00NYer8J263NHVxC81MEqVS+OzUTOEPY7nFy9i/DLwf9VNMkFX5zfdmwm
ciBls2oP3buvPXew6uTzpJ2pPp7SLUTOqL5c2yd0YtexTY3LNU1y2RfHL0dj
pHbmaj6nsHL4YeuZiLXD1bSdhMZztAexW5jkECd2W71mSztV57IvKa1F5K2a
Pyn8nb3o1rPDVwRXp3i4srNTd8SZ5LfqvcRv6X1sB9uUPnTup7WTY7/jC621
tvq7yjPE3iDV+whdt6WZU9hu7WFS+v95CE5TT0ovpTSSGuuUDYQmmZxnCd8r
v1K55/R3h3NSNa7Wu8NpKrer9nS+7/hIcKwTl5S2TNUajQOtweh8SOnDjs2T
vjzvT2lR1Xdaa9H9XX2vim0Hq1ev5cncJub3KkZE7qX2G6lD7xIrbIl8cGxL
2Un4Utn2KvNsShvQeqNzrvXu6p5XeU5hm+LeyWdC86fe5XBLaj+QirWDg1Nf
qi/Os8OBqXlWvb+DD5E/qTra6t10LRPPBD9UJ6UNaJ3pnNS7aH3r1JFzP20n
rYcJTIh5lvC9k6vOTD3Jb7T+dGqBxoHmB7UuOrm0pTMJPnHikuprdH+pTsrO
zvc79zu2qXbSfZPw3elZhK6e3BWoWKXOpDZTbUhpJ5W3CduI2DknpQ3UXvO0
4cL+hMi9Lds6WHVyI7WrmdRvk3FUcSN2QcSMOYnnq+hPNdZb+UngT//2Qm47
tdzJQ8K2ztmqfSd/HNuc2Kl8kpo7CE1V2fm2LPLxpHVdSn9W9hA7OgJPIs9T
x+GH6k5HA6RyiZgxt/YMHZwJPlF/6/QOek+r8pjTTyd7TWpXNpnbdCw6+Zzi
ja34Xpg1CBwInpzk6pS+SuUAkc9EvDq51/mcOE5dpPiNmONUDOmdj/PbVA6r
2F7gN3rWoDUVYUPnXQ5Xp3RXKgdSGF6L1ys+d3Ag4vs8qd2Ok9uEdt2awZ0e
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
/wY9L/cn
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "22138"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "\[Rule]", "0.432672381401062`"}], ",", 
      RowBox[{"4", "\[Rule]", "0.5673275589942932`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzlm0HKplmxhAsFEXdhL0GRdlSFg3bkQNoVlKCjBqEdSA8EN+HIRTh2Ba7B
bbgCu8FBTV46oiKezPyoA1f++5InMzJPZmR8da8//f2fvvzjD968efPnH3/7
H1++/8uvvv76/Te/+9F3/8sf3n/185999cNv//zb///nu79/+/lv3v7787++
+8evf/Luw7//9Ysv3v3ys7+//ed//vuW+K7EVf5OYrm5KziJuK0aJvkSdXPf
vfVGSaxWPYm5IHJvzT7R20SP0TzTmjWizgS2xP8b4bg1+fBuMgtuvkrca/0z
WbenN1XeutVLbo9d0A9JXq3a0vxwoVaExlBm7cNzQd8qtUp2q9uTrXd031p5
lxa2yf5R8CR1I3b9kw39fVI/tHZlknvrXK6VW4fWvCfcSOjMJMeED11+cG2S
eVH8u5yc5Jj0j5J7S4e3dn3yLsl3N1aiH1q7soU/ybe1Wz+0adVqsg+f8BO/
TRJ79zvxb4zXNF6iaV0eoH/vJHfdvIh/p1KwETZubWneTvo2sVfwXOhbF2eS
S6LNFK1IzC+dr4uH3uMEzsl95+JPjtvPrd33FIuoDz0Lik/XxsWf5NW6q2BL
zpZOIPA/fXf/7f0Cn7t3L/x7xfdXNvud1co3iUtwY/J/32mdLW1D+0xyUXy2
DqH5aa4mZp94l9Z8tTjz++q0eQidk8RN/NOYE/zJXeLfvmht81w571zjqyf7
lqYifh8RubixiN2k/P8+JZhb+bb6Ifm7lTuBX8F2TRNOcl0LwxZfJfhbffXk
81Uwu/hpjUrMV3KUWO6/C7lx3e9EfVr8T+vDCxiebFz8xKwRmiHJi9YzrZq4
dxP8BGbi7dy7RF5J7q1aTf53qdzc3fq0MNDz7uK8oFGVmk/mlcRq5Uv0DFFD
Qv8QmJO3aJ2tXX+h57dmtlV/Ja/EnugNBcOF2U9qleTl4nFxJndprlPwTHLy
BX1L18f1k+AneqOVl+LHzSXxM6klLvAt8XY0/xP8Nhk3waPYT3Js0mNujluz
QNgoOdL+CQ3Z+j6pgd27lzV5Us/kjdzauvbEvCf5bunMJEfF/7Vd737f0jMt
zbm1lwmupvG3cE72A7FPiXyV0/JJzy/9/Zp+S/JS4rqYFftWXNfPZD2VuFv7
SMGs3CW4cYu3t2a5xdstrpvMV7nbwrxVB8WG3sutuUhwErFobUD0cMs++e4e
ogdc/3SfKHdb+Om49Ixv8ck1rmvN7CQPEDUksD3lrvhM7On6uLlP7qCkDkle
yXfl0PO+dbeVb2uOaE4mMEzOi+JHiTupM+nebuXoxiXeOrF5Ff+tN3JxEj5p
PTDJRZN67ILOTGri+p/UM62ZSnwS/NDKcSsXF5ti755J/0TPExgUP4lNYu8e
Gs9W/yT2NP8k35W8Wn6I+iT4if1OayS3tom964fe9UlP0vWh9QOhCVu5uD4J
+wQ/MZstnDQ/tGpyrWfouaN7ZtLnpM4kOJzQTte0WWsPKv4J+wt+WhxF1HlL
y7Vw0rsywUD8lnH9tLiIyMvFTOCf5Fsll0ldNPkbxz2TO6Xlh9DkPuqPx0bs
MuI3RSvfVlxaRyWzPNlXtJ5vaafJ32uTGBRsNOakPpPn2n6Z7A3iN90kv7Vw
JhgmtXHrrZM6KDatHTq5I2gN3Jrlyf3eqiHBb1s6xz1bHNiqD60HiNyJ+rs2
iX1Sk0kNubVTaK5zcyf2chKX1mAX8nLjbu2XrR1Ka7DkLRSbyR5QDlHPrZmd
3F/K2dr1Ch4Xs2uTxG3dTWyu5TXJz082iX86Fr0jCI5Kcqd1L7GbWn1y7a2T
uBdy3/pOzBqhN4i8trSHkstWXltcOomt1Xv07NMag3jfBBt9t6UfWhjoHm5h
a+Xr1O9jDqGXXP+T85vktVUrYn+1bFp3t/IicqRz3+qTrblT8CT+af5R8BD4
W7nTu96tT0sDTGr1C33Vmqnk0HrA/X5BMyuYW2fLP62flVjKXTfuFh8Se5/e
9Qn+JJZyl9YhLrYLmo3WD0827ndal17e41t96OK/titp3f50l57xFoZWTWg+
UXAmeGifFzR5Cw+thVwbNy8XpxJrUlMpd6/NFM0/SS4tn0osgnOSu8TeTzAo
35N8E8x037Z26Bav0tyS4CE0DIHfPfS+vva74zJOQp+3/lZw0nyoHJoD6XdM
crzA+ZM12Xo7N/eWn8md2+olmlvc3JNcWjiJd1T8uLFoTlBsiLlu9aqSC4HH
jUtwPj37W1qOmCnX/xZnuvjp3wKE1nJj0XtEOQS2xD/Nw25N6Lq5Puk6J/Wh
e8b1Oen/wjw++WnZb/HDpPZwsbk+kzO5s1w8BE4XA93DNE5a97bymsRDa/UW
T07O46S2SeLSOo3IK4l1Tau04rqxlLPVP1ucsJVLYp/kOMkzyd2Ez1t73M1l
0n9StwvcQmuV1i4j8CixkhoqeSmH2E1KLNeG2Be0vlXsJ39HXOBAWn9e07et
M1mrxKf7vdXDk/vCrUPLXrlLawCiVq03TfxP7mUCQ6u2StwkL0IjJfVRcnf9
u3fpd6R5ia4JrVWU3Cd/U7j+k7s0T7rfJ/mZ0GxbGoPepwoGwueWnncxXOAu
N8etOrT60M1rS2sp2OiT4KG18QXOdLG5fgg8Ck5a/7R0ON2fyrmAZ7I3FD+0
HiZ2Ab0fCY5S/F/QGK++v4h8W9xIaydCkz/ddX0q9gQnXNYql38XXNbYF/zT
mpDWGJN8S3O462crlxbmp7vud5rrlLitu7RuV/wQM05z9dauafXbloZXYhEa
z8XTysWNNYkh8dniFhq/m0vrLs0tW3tf8ePGSupGc7WL363PpF5S8Lj+CS10
YRe0cLbySjAQumtylltcqtTTPZN7dhKPgs3FMMkJxB6cnDWiJoof9/tWbQl+
aPEJjZ/WEq4NoaMu6FKC211sCs4Ez2TvEZrZvZvEVey3dDvByQke9y6he5O4
RJ1d/FvceG1/Kfi3OIGYtUl927LZ0mbEvnZrSOvhp7uKfyLflk/3O42h5Yfu
7Qs7bnL2iRzdQ+tbggcU+639RcRyv0/qwAu1bdWH7iWaN5L6JLFac9HC7x56
Zymx3BwTG3o/tuwTzPT+Uvy4sQgbgsNbOC9ovxY/uzUheI/gosR+MhcXJ8G9
LS4iOHaynls77rLOdH223prefbRebfls1Y3w4+ZI8Am9u1u5EH4me8PNi8bp
xkpsklpNani6hnRfEf05yUtP9u4h6nOhV2mNkZxr+2hydpI5Ir7TvP2Uo3Im
821hS+ISfZXMfmLfegua9+i93+JhGg+hPSZzvBCL3lNKLnR9XPxJrEkd1fKZ
xJrk/8kcXZ/u3SRHeke7cWnNQ3MarXvpXdDaia0zuR8TbHQPKxgSbDTOJK9W
H9L7gp6RSa3eiqt8dw+trybfmtjjbtwWnsldnPgn9GTLpsV7Wzpnq1Zujq79
pO5qYaB1BYFziz+JQ+uWT2EXJ7kkXDq5a5I6tGqSvIt791V2n3uXiEXUvFVn
F2eL62hsRO+19INyJuumxFV8EnNH7NlJnk/qo5wL80jvx1YuNA+33sX1o/h3
bYgaEthaeSm5uH629k5rfok6uJgn55fmqwSze9e1IWaB0EutWbigDSY1A7G/
WnHpv11sif3WTr881xf80DpH8ZnkQteK0HWtXt3a161YSg3pt6DvTu6yln9C
SxA4Xcxbc93Cn/iZ1MxuXi0+V/JS7m5pGNcP3ZOtWPSepbVES19d2IlJfYi7
LmYFgxKLwDyp211sBE4Fw+Quds8kT7o2Ck767WjMNLcQ76vEerJJauXicW22
dmILp1If178bl9YzCk7F5+R+ce0n35fWLQRXu4fmn1fR4UpNWjNOvyPxpsTc
ETPYwnyNZwiNneQ7qQndu4k9XX+in4l9pNgnPrd0uGKzpauTuxf4mfBJcDit
H54w0DV0c3f907ls1T/B5mKgtV/yPcmlhc29e2HvT/pRcklsaG3ZqhWthRL8
rfq4sdxctrSWa9+q/+TepPcUXQe6JpN869aZmDUllnKXzt3Ni+bwrRyJu1v9
SbxRUodWrdxYk++o3HX9t3r+mtZVMLtnUoco9pNzN6kZCG5PMCf2rUP3Ugvb
5V3g4ndzpHEqfugZUWyIN32V/klyce1pnezmS2ikpCYtn4o9rYtamBX/yt3J
nnQxu3m18Gz9rknySvzTebV6z8WZHKKXEj/03Wv5TvJw4p/Wb5M7d7IObqzE
p/I9waOca71K9JXyvZWjYkNoYzd3gtvpfOl9vcUVCR4XA81jLZxPPmn/hPZw
Y01qYNon3eeKz0+BBwgdRdfnyX9iT2BWfG5xdYKHyJ3oeYIflLju9y3uVe4S
2pL+243r1ieplXu3xQOKT+LQfH5B8xCc7MZyMSv2tDbY+n2R5Ej4ITReCz+t
sWnM9O8IYmfRuROcptyla+7WsIW5lVeCbRLDk42Lv7V33BwJ3qA16uX9cgEz
rVWSWEleSe6TtaJ11+Qeb9VhS/cSnPNUE/ctJvNKYrXyJXqGqCGtGwkb9y1a
Z2vXX+j5rZlt1V/JK7EnekPBcGH2k1olebl4XJzJXZrrFDyTnHxB39L1cf0k
+IneaOWl+HFzSfxMaokLfEu8Hc3/BL9Nxk3wKPaTHJv0mJvj1iwQNkqOtH9C
Q7a+T2pg9+5lTZ7UM3kjt7auPTHvSb5bOjPJUfF/bde737f0TEtzbu1lgqtp
/C2ck/1A7FMiX+W0fNLzS3+/pt+SvJS4LmbFvhXX9TNZTyXu1j5SMCt3CW7c
4u2tWW7xdovrJvNV7rYwb9VBsaH3cmsuEpxELFobED3csk++u4foAdc/3SfK
3RZ+Oi4941t8co3rWjM7yQNEDQlsT7krPhN7uj5u7pM7KKlDklfyXTn0vG/d
beXbmiOakwkMk/Oi+FHiTupMurdbObpxibdObF7Ff+uNXJyET1oPTHLRpB67
oDOTmrj+J/VMa6YSnwQ/tHLcysXFpti7Z9I/0fMEBsVPYpPYu4fGs9U/iT3N
P8l3Ja+WH6I+CX5iv9Maya1tYu/6oXd90pN0fWj9QGjCVi6uT8I+wU/MZgsn
zQ+tmlzrGXru6J6Z9DmpMwkOJ7TTNW3W2oOKf8L+gp8WRxF13tJyLZz0rkww
EL9lXD8tLiLycjET+Cf5VsllUhdN/sZxz+ROafkhNLmP+uOxEbuM+E3RyrcV
l9ZRySxP9hWt51vaafL32iQGBRuNOanP5Lm2XyZ7g/hNN8lvLZwJhklt3Hrr
pA6KTWuHTu4IWgO3Znlyv7dqSPDbls5xzxYHtupD6wEid6L+rk1in9RkUkNu
7RSa69zcib2cxKU12IW83Lhb+2Vrh9IaLHkLxWayB5RD1HNrZif3l3K2dr2C
x8Xs2iRxW3cTm2t5TfLzk03in45F7wiCo5Lcad1L7KZWn1x76yTuhdy3vhOz
RugNIq8t7aHkspXXFpdOYmv1Hj37tMYg3jfBRt9t6YcWBrqHW9ha+Tr1+5hD
6CXX/+T8Jnlt1YrYXy2b1t2tvIgc6dy3+mRr7hQ8iX+afxQ8BP5W7vSud+vT
0gCTWv1CX7VmKjm0HnC/X9DMCubW2fJP62cllnLXjbvFh8Tep3d9gj+Jpdyl
dYiL7YJmo/XDk437ndall/f4Vh+6+K/tSlq3P92lZ7yFoVUTmk8UnAke2ucF
Td7CQ2sh18bNy8WpxJrUVMrdazNF80+SS8unEovgnOQusfcTDMr3JN8EM923
rR26xas0tyR4CA1D4HcPva+v/e64jJPQ562/FZw0HyqH5kD6HZMcL3D+ZE22
3s7NveVncue2eonmFjf3JJcWTuIdFT9uLJoTFBtirlu9quRC4HHjEpxPz/6W
liNmyvW/xZkufvq3AKG13Fj0HlEOgS3xT/OwWxO6bq5Pus5JfeiecX1O+r8w
j09+WvZb/DCpPVxsrs/kTO4sFw+B08VA9zCNk9a9rbwm8dBavcWTk/M4qW2S
uLROI/JKYl3TKq24bizlbPXPFids5ZLYJzlO8kxyN+Hz1h53c5n0n9TtArfQ
WqW1ywg8SqykhkpeyiF2kxLLtSH2Ba1vFfvJ3xEXOJDWn9f0betM1irx6X5v
9fDkvnDr0LJX7tIagKhV600T/5N7mcDQqq0SN8mL0EhJfZTcXf/uXfodaV6i
a0JrFSX3yd8Urv/kLs2T7vdJfiY025bGoPepgoHwuaXnXQwXuMvNcasOrT50
89rSWgo2+iR4aG18gTNdbK4fAo+Ck9Y/LR1O96dyLuCZ7A3FD62HiV1A70eC
oxT/FzTGq+8vIt8WN9LaidDkT3ddn4o9wQmXtcrl3wWXNfYF/7QmpDXGJN/S
HO762cqlhfnprvud5jolbusurdsVP8SM01y9tWta/bal4ZVYhMZz8bRycWNN
Ykh8triFxu/m0rpLc8vW3lf8uLGSutFc7eJ36zOplxQ8rn9CC13YBS2crbwS
DITumpzlFpcq9XTP5J6dxKNgczFMcgKxBydnjaiJ4sf9vlVbgh9afELjp7WE
a0PoqAu6lOB2F5uCM8Ez2XuEZnbvJnEV+y3dTnBygse9S+jeJC5RZxf/Fjde
218K/i1OIGZtUt+2bLa0GbGv3RrSevjpruKfyLfl0/1OY2j5oXv7wo6bnH0i
R/fQ+pbgAcV+a38RsdzvkzrwQm1b9aF7ieaNpD5JrNZctPC7h95ZSiw3x8SG
3o8t+wQzvb8UP24swobg8BbOC9qvxc9uTQjeI7gosZ/MxcVJcG+LiwiOnazn
1o67rDNdn623pncfrVdbPlt1I/y4ORJ8Qu/uVi6En8necPOicbqxEpukVpMa
nq4h3VdEf07y0pO9e4j6XOhVWmMk59o+mpydZI6I7zRvP+WonMl8W9iSuERf
JbOf2LfeguY9eu+3eJjGQ2iPyRwvxKL3lJILXR8XfxJrUke1fCaxJvl/MkfX
p3s3yZHe0W5cWvPQnEbrXnoXtHZi60zuxwQb3cMKhgQbjTPJq9WH9L6gZ2RS
q7fiKt/dQ+urybcm9rgbt4Vnchcn/gk92bJp8d6WztmqlZujaz+pu1oYaF1B
4NziT+LQuuVT2MVJLgmXTu6apA6tmiTv4t59ld3n3iViETVv1dnF2eI6GhvR
ey39oJzJuilxFZ/E3BF7dpLnk/oo58I80vuxlQvNw613cf0o/l0booYEtlZe
Si6un62905pfog4u5sn5pfkqwezedW2IWSD0UmsWLmiDSc1A7K9WXPpvF1ti
v7XTL8/1BT+0zlF8JrnQtSJ0XatXt/Z1K5ZSQ/ot6LuTu6zln9ASBE4X89Zc
t/AnfiY1s5tXi8+VvJS7WxrG9UP3ZCsWvWdpLdHSVxd2YlIf4q6LWcGgxCIw
T+p2FxuBU8EwuYvdM8mTro2Ck347GjPNLcT7KrGebJJauXhcm62d2MKp1Mf1
78al9YyCU/E5uV9c+8n3pXULwdXuofnnVXS4UpPWjNPvSLwpMXfEDLYwX+MZ
QmMn+U5qQvduYk/Xn+hnYh8p9onPLR2u2Ezq6v8BzJjyGA==
         "], {{0, 128}, {128,
          0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "15962"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.07861936837434769`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.9213806390762329`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzVmb3KddlxhAcZjFJHzgwODMKhFXuEEl2AHCsYgxwNCEaBmUCgG9DdGV2F
0DVIAgUnUI/r0VO1z5kF38d5N2uv1V39V937X//7Vz//nx988cUXv/7hn//7
+Vf/+9Nvvvnq2//6x7/88cuvvv7xf3z9D3/++du//vvL75/95vf/+S9/+Ocv
f/Trf/vJH//vd19++4t/+sm//+iPX77+vva8PjfnJL/pu4nMybtG92tPCwdz
/gKHhU1bMiz8YeHzC98w/rP28yf99l26r+O9lQ+T318c69qztkXrd6LLK24X
Dhf+CW5UzsVdCQ5r+36aDHR9mj/TnGN+t7CieF7nP6l7gsnCD1u1jMqc1JpP
s0uCYaJ78u6lL303wZ/elehCOcklg7HFkzIk2CZ3PZmHqX1Nrqb6UhxMLCSy
tXS/lrHLtZ9y+0ueRZ1qybywi+n9n+wHk3OMnyTvGlub/ca3F30E7e/We5L9
T3JFw1HpDOeSecFRn8SE5u1LxwTz5MwWVzR73jWfTLB68reJKVPfk7uuZTjb
wseu59THWvpSTFq4Lbiiwdb04C2Oeq1F/5Xo2OrpWvvpnlZsGn7YyqtP9iam
Dl7nJL5k+otEL1NzExkWfQf1w0tfirmp+xQf6sOL+mXkb+lO4+h1j7Hvtd/M
M2nOTPR9sm9K/KRVy2ictnSncrZq5XWv6T0Tea799Px1bmzxrgU3M1xlIbOZ
l75r9mLwMfNqU2ef/J34G/WN9fzZzPNbs8fE1qaXacWv0d2c34o7U1vNrMDE
CM2Hhq9Sf0hkTvA03CY5/8n5qvGxS/4LB2rflr6JPNceU/cTHzNcPdHLxLiZ
I31CvV7safU1a0wMn1ng+brMDPzaQ321xdVbetF6lCwjc6uPaNUaWqONDGuu
db1L5zPXXRQ304Os9TVytvIVxcR8c6GYGDmpDCZ3GXvRmfMixlu5buHniR2v
uyierZnkpW+Cw5PntM6kcpo5T4tLt2YRhoNROSn+6+8aixnRQv7F946Wn1Dc
WjMBk/cW+SE538TCk89fl6k7T8ZUsr/F4Rd40nMMj2rN9qmftOze6nFa9jWY
m/MvvUweXvCZVm1q5Xwzo74wN3XE2NQ8X3w3edLWxscSfKjMrdzemnMuZhQG
kwW2NO5aOLRqRKsetWQ2cdTi862cf8l5yWO4LvX/hd0NzpQPrzl/YmvKo653
n8yZC9xM/Vrz9lYtaPmD8TfjA61YTuShPkzlMT0j5S2UU7X4ZIIt9WG6x+CZ
yE/xWejb4vOLPuI6f50zE9uZ75iJXk9+62zVhUS265xEfoN/Cyv6rsm9yV0U
z+Q5xerab2rKdU6yx9S4Vn/RyjnUDxNMDH9b9F+GVyzyGD3fzH4v2RL7Gk5F
z3xyBtjiA617TT6/ZDZ1zXCtJEbMfN7YwuQrGl/reabJXdc5iS7Ju4bPt+bJ
Zg99vpiLrt993bPgn0YeKtv1Lr23Jdt1ppkVr3Wkfk7lNDznOsfwQPrbyJxg
kuDZmsst5hstHr7gA8bWLW7cqvt0mXupremZi1q58EMqWysnLHS8dEmeJ+fQ
HiHRy8hgMDQ6GjlbfHtRy0xOMzw88ZnknOvdBU8w9jU5sLUWfVmLe6/9sKWL
wYrmwNe1nr2sZwLJntbMsMUbE5lbZy5mjKYfafVfia0NDpQvtfrWFqel+LQw
X/MEU0Nbv9c55NI9WS3ZWviYekHfTTBZ85OFXRZzv5bPX3K28rDh/wvbJftN
D9LiP61aQ+Vs8QSDwzpmL5npOSYXXTIsdFzg3KovlzxP8rH1nI3ai87TFn0B
9ZkWVzQyt2aJ1/7kfGO7Vs2l+rbq43XX9e7C31r8kO43vKulb4uPLfJScpfh
iq3z6V00ZqnMJvbXffE6Fqit6Z5WzTLYrm3R4gCLM991V2I7k5eSPQsulMRL
S85Fr2eeJzJT2V7Xk/ytlR+oDNd+w6/omS3OT+sLffddfPv7+PtJHamNqL1M
D9Lyh0THRX6gMlNMkuf0nMUs5ck8Rn1g3fuYOV7L/1ucJFmJjVr1neJp9Fos
gz/Vkdri2kP3XzK34s7UzVYfQfPkk/KY32vbLXze4ExlSHRcz6IX8xlT+1pY
tTjhu2Kn9dtwpMsuxmfoXDfxh2Qt/I2eb2ZfrflSIs+i32wtGvumh6IyJPK3
ehajyzoPm7y0ns8nelE7fh9/Jzi0uMeCY5jV4glrf04wofFL5zMXbmu+dN17
3ZXonuyh8pi60+pfKN+7dFnUnUW8G05CfT6x3fdlRnQ9X8xbWrHQkjO5y8R7
Is9lI5MHzF2md6byGx5i5L9kaNUmahfaCy96UsM31rWvZbuWbKYf/ITf1KYL
n6e+9+Qcj86jjD8bvr3IXa26SXVM9GrlwGT/J3ChBLeFfVvvtu5qzfGoDxhu
Y/LYkzNYmv8pbgarT3iX8l7Tb7ZyYGsm38K2JYPh0uv81pJ/IY/x1WS18tKT
erX4P41ZKmeyaK5e8JlrUX71ad8+WlxuwSdbNejas8aQ4mlkMz78ZLwYeZL1
CVzdzEhN37euQTSmnrQL1TfZv86ri7XGf2FHM3cy8duqX5ctWjFrZoCt+WGi
4yf43pNc3eTMVuy07l3Y99rz+tzYhdbi1nwj0T3xT3NOK5bf1XckeLaeL+KX
9kRU30/wE2NTiuF6Jmy4+nXmtQz3M3Y3c5J13F060u9llM8sOBKtIy3ZTK28
zkyeJys50/C0BH8Ts69rUVPoOVS2Bdd9cr7RmhXTvsD0Ppf8rdxF9VrwQ3MX
PcfwjXfNbNf8f+ED6/53cX4rnyRxneSHhV7rPGw4w6KHWmNFbXT5AMWH8hPD
GRZ1n9674EuGKxp+aPxtUeuND1Afo/tbsf/6vJWjEnnMfjNXbM3QqF4Jni1u
bORpxXurz13kDeNLJn9eOCxqdIKt0YvKafabeGzJ3+KNiV7XntYszuhuav2T
dTDBM3luOAzNLYleNPea/Gb8c4Et9bcWJzfxtfj2kbxrbNfKJ9e9Ceatd02t
XPQ+C45xyZxgmOie7Ke1g9616K+NDDTeDSdscUWKD60pNNdR/K/V8jdTR1qc
cMHHjF/RWEswX/xu9cWtee+611ic2epxTC249Lr2UH9b+MMn2JTi1jrfzN+o
PIndEzlN30TtbmbRRl/jY4bHmnhMFvUHk8NbPVGyWvgkZ77rN81L1/OWPycy
0FyU/P577fldi+Y66qstnrCeW7buauXq1rzU7Kc2Nb3/k3vWfIPGMq01l45U
d8rT6L1GztfnlBssOHMis8kDZt6+5uGmfpl6kexvzRvpXSbGrzPX/pnsWdf9
a3+CId1D8+oinyRYtWYaCQ5U5if5j+HhLVss8jk9vxWDyb0UK5pvTdwl8rf4
GPWxVr66lolH+v0iOT/Ri9ZE6humprT833DmJ3Mm3b/oVem9rf0mNk0+v7BK
9GrJQ3WksbawnZl1vMv3KP9M/IGeY+Rs+bmJrxbfpqvFE8xdCYaG2yx6xvUc
ksrT4j+Gn7TyUvLccNQWr/tb9vmuteA2T+YQ02sYOybyGJxbvtT6Rkb3L+qa
sSnln8lq1b6FjsnzRAYz0zN+m8hvan2rF6b3mt/JmRS3Nf83+JhZ0Prbk+kv
1jX32p+c2bJ1q7bSfGg4CZXf8LFWv0/taPyT2nrtq8bu1C4UH5OjLtkMtte7
CQ5G99b5rb6A4tCqCyZGTBwZ/kblb83WWvmN+pjhhDSfJ/ou5r0JDolNTU2h
Nm1xVLO/xbeT5wk+rdpnzk9kpnsMfzPxaM5p6f66KDdocR4qM63LLV56PTe8
wvC01vnJmcYf3oVhK6+2eH4rrxo8Df4mXz2J+TreP+234aKtXE3fXeuVPG+9
m+hF969nYq39VHeDiZHBcMvXRfvNVl5N9E2emxx47aEcI1kLbpPoSH2D8vnW
70SXROYFBzO1nuplOIDB/NP6uCdreoKDqWvGRqbfac06TI9AZTPzfGPTRT9o
8hK919jLYEIXlSHBwfRulwzGt42NrjONbK38s+jjFn19i2ut+/3r3cSOVOY1
N1vwJWPr5By6p8UbF7xogVUrD5h82+pzab5KzmnxQ5NLqe4U58Re9EzK/d6V
Q4y/Jctwg1ZsJlg9OZ+kuLVqqzmnNZ83s+5FbXoyDyxyo+Fyl76JP1DfNnZP
cF7E6ZoHrnOyqRemhq5xMBze9OatXu9ai965VX8vmY3tqJ8sZsJrf6Z2X+S9
lvwm7q5zkudG98VciOqb4GBy8rXWNm3Vrye5ViuHt/o4w9sN/q09tG6ueft1
76WXwTl5N8HHYHWds/CxT+hBWv5MdU8wSbClulNsTU1p1fdkv6mzi56rhfNC
NlO7E7s8GS+tWrzwkwQ3imdiO3Nmyz+fjEG659rfwuq6i3I8I+d177ruJ4ty
PIpD8pzuSXRZzHAM/qbfSeRZ54RLl5ZeCx8z/M3w3jW2yWr5ebKH2oL6LdWR
YptgvuCEFNvWLKXVX1z4tHhggs/13MxwEru3emRTR1rxYtb6u0Zy1yXbgrua
+G3l/FaPdp1/yZbk83X/2Mpji+9Kpg6ua8ele/Luomdv5WRqF5MnW9+PEo76
ZD1q5Qpji1YvuZhdL/Lboicy82ETp9QnWz1OYi8j53Vmiz8sasdivkHvWuSZ
9R7DORf5k3IYwzNb34PMLPG6l+bJJ2PT5DrDexd5jNoi8YFkz7r/ovy/JYPB
Z8GRTH5rzZMXs+JFf5cs0+8k59C7EhmSd1u9g5mXJjgYHa9lcuaiJ13wsUtm
akeDT8ufKWdO9ryLA1M8W+dTf2jlNGr3RHfDwaj861nQerZj7LL4dmP0TfC8
9rR4HdXXLNP3XbItfKlV35MzTS9DY3ARaxQHc6a5t1Vfrufr70pUzndxVHqO
mf3S+kh72EQGg2cr9k3tuO5N1ifk29fnhvPT+Y+J/dY51BaXLtc5LUzWc9rF
XM6c38LHYEV9b+FjJhaojhQHkwdaOc3kT5MrTGxSjtHKt9eZrf6LYptgRTFZ
n5/oS3MsjWWTq1u9zKJHuHRs4UxtR2V+F2ej3NXcRfsFc+a1Z83/W/yz1Std
7174XOcsvj/SRWvZeh5o7PiuvGFmei1fbcVOq160OJupL/Rdal/K7RMMzfcR
k7cX32VaHL41AzE+s4jxFoam30nuNbJRGagPtGKfxhHNk4a3G/saDI0/U/6z
4EWtGpQsw4EpDoYzUPlNnVrbxXDjT3jX6EUxXJ+T6Juc2bJ7C8NWDl/0cZTv
Ub2S1dLd5H+jb+uuBcdrzV4W+WGdwxf15V2/E1sYztyKr0VdozgYeVozQIMt
zaWG5ydy0vkGxac123+SdyV6GTwvfak8ixxCdXxXDqfYfsJvivOag63rZku2
J/vHJHaS/XS+0eqhaM68ZG75m8kh615vXftavY/x1eRMykvXtTg5x8Rscq9Z
ZuZ5nWl0oTZtxaPZv+4f6b3Gx6jdTU90rXVNX+QTM5uiOdPUvtaZhism+w3f
MPGy7iOMvy1+t7hlS/eFvS5/S+5t2cX0CGY2S3OOyT/r2QuNu+Te5F1zZnKX
4V2tc649hm+YmvJkDLb8yvQOyfqE2U5L94XtDEc1sW/yXrIWci5koHfR3GV8
IFmL2DGYmLsMf0v2G05LdW/FoPG3BIdFj2BsZ2Y7T/LbS+ZEtsRPWnqZ/sLg
kOD55HeHlj8nWF3yXO8u+ADNFYlehj+b+DI4JzIs9tMYXMz3TBwZHzBYLXLy
kxzSYGg4Q2v+38rJrVz9CbV1UUco/2/Fe2tW07K74TMG20VOa+VVc+91F5XB
4LPG0Ph5Ik9rNmViPDmn5WNG91auNvPMRW0156/50oKzJfJcWK2/qa17h1aO
NbzC+NIiLy1mBSYW6L10P53fvourGL3MzPC6d/HNbvHNdMFb1rP3Viy0+oLW
7MLITN9tzRYWtWzBr1rzf1O/Lt0THzDf0Vp+SH31ktNwlUT3Fm9J7jIcz8yf
r/3U30y8J+cb3RechO6n+XOR5xMfSM4397b4TItXL7hEKz8YDmy+j5gca2Jz
MR/4hPhd+JLhmcldLT7wrv7C1KDLNxLZPiHfLmyx5kUmd1EZTM0ydYrW91aN
W8QalXPB51t9Sit+F/kn0XfBFRe/LxkuHa/nNF8tvnckd63zbSJDy/8X/IHq
0pq9J/K3ciDN/626f+l7YZXgT2vxdeaas7V6lvW3HtOnrHlOa3Z6yUPxp/PV
RC8qW6uuGdu15u1Ux0Xdp5x/wasXMrfepWvRa1yL6p7I2ZqHL+KL+qrhsa2c
Y840tc/M94zMVDYjj8G/pfsiri8MTd2nerU4mLELlXltr7X/mHxLsaU+2cpX
9MxWP5LIuaihCz9c3EX1pfk/uct8qzK/36XXtT85h3KYxRzYxDu1NY0F0xe3
eqLrrsUcxsQFxZNiaHw4WdQu1K/elQ8TeWgtNnZpcRUaUwlWi/6rpRfNz/Te
RT9izlxjZXiRicHW/uvd1ry3VRdasU91b3FUg1Vy7zp+qb6XzAt9TbwndyV7
Wn3Qgmstas3rHsPNWnkyWa3+a83BWvwtWTRvUPnf9fuS09TH68wEB8OZ19yy
1ZOaPs7kK3pmomOCDz2/NSMysd+qlcmehV3WvGXNMT4hH5o61Yqjhf+3dF/U
8ZbtWucbfRc52cTmJWdiI9pjUr7a4rR0BkjfNfP2BNtEL4pnaw5MZWv1euYu
wweoHxq+anwj2b/o0UwdT2QwtazF5xN9DbdJ7mrVnUVvteZgNJ/TenetxVwo
eX7tafUCJo4SfIyPJfIk7yZyUt0X/Jbm/Bb3a8X1hYOJ0xYfbuH2ZN1c5M/F
Xe/qSZP9Lc5g/ORJXpo8N7q0fK9VlxN9TQ9I72rlCjr3a/lqK3YW34kMzmaO
SmVo/W7livVdC1507V/k51ZeanFXExet/ujJ+cmCAyTyXPrS5+v6uKiti1lK
i2/Q2WYrx7bia82B6czQ+I/J1cbuyV003inmrX7hWkb+Nf9McDO+1Jo9mhpE
8xWd8VLZzEowMbUsOefJenHJY749UR3pvLGFYWu/ed6aP695S3JO8rzVu13y
0LuS/ckemhMM7zL6mjpi8sAlp8F23S8Y/pzoS/F5khOuc0KLh7R63kTHVh/R
upeeY+xi6ouRjfqw+Z51nbmoHQn+VB6KrdF97WPGFoteZo0JlWch20J3Gnet
3vw6M4k1kwNNLqIcjN61+P6V7KEyPJkPTWxSeRIZTP1a2yW5q5VPkntb+lLd
DSbJ82vPGrdEl2S1erdkv8nhT86OzG+Kf2KXRa2/zjF1sJUPTR1c81VjI/NN
YfHNLtGLYrWoUy1MEl3WM41WvTPfWZ6MixYm6zzc+mZt+sQ1zzE5rWWLhe8t
6qDJb0/682LObGqNeTd5nqwkl9JzrufJnkuvRJ7knHVuadWs63zzLfuS08wE
qI3M95d34UlzDrUF1TfZT3FL9rd0b/02uht9k7rW0rHF1a89LZxNfU/8h95l
fIPmtxaPov7Qmr9de4zMLcyNTU18rfl2S+YWV0meU72MjyXnLOLxOv/JPHDJ
YPxkgUOiu9m/iM31mabeJfcmNvouWxK9rv2tWk/PpPZqPV/kySd5KbVXa6a6
iJfX1ZrnfFrvkPhYy5da30rW+ZPaJVkt3zN9U7JaffrCdmZG1/qd5KhW/TI5
lto98Yd3zZRa89gn5zktuyc4G35u9E1sYXhpcr7Bh95l5s8GE7M/0cvYveV7
yV3UFkZmU2uuPa27qI7X/gW3oTyzlScT31jMVdYyfAJvNzykdS/1w2R/IkNr
Tv5kP7Lwh9fnhntfe1pxQWONfvdp5bf1NwJql8SHjTyLvL2eD7fwXGCbyJC8
S2VIVut7n+HeRs4na9lilt6qES29aFy0cguVZ1G713V/waUT32vN+RMdLzvS
d5+0l+nHWxw78e1Frm7lwCfj9DqHYpLIQ2VOfMlw8ie/s1wym7zUks3Iv5gp
JTquOfNChuscikMiW7J/jVsij/k2SutFq/6afH5b4//fv+DYCT6JbLSvT2Ro
5W1z13XOpft1V4vDUJzXMW6+B113JfZK3jX7FzFufNXUC4ot1dHwN+rza26W
6LuOHaOvsUvrnMV3PYNPcteCq5ucTOVM1oKXmlxq7qV3UZ7T+i5jYrDVQ7W+
K13vrvtNk8PNjKXFwRLZTB54V/6/9lD8L3xafeXatxc4tLiHwcfIbzBJzjG2
oBx1wYfXcxUT+8b/n5wBLrhxssdwxbUMybuLufe1n8pDf5u+w2BL9U2eJ/1g
a/6ZYGW4UyvPPMlVKDcwZ7b4m+l9npwNmp69NQuie5L9i3y4lqE1PzeyGfmN
79EzaZ40vQatawvORmWmtbJV61t+mMic6LKQZ60v5SELzkmxNf5/yWlmvBQH
w3PWMiT4GDuue8BWzrzuuvRqyWzsvqh3a463mL9RW3zCDDCRs1WzWhy1xcMT
TmU4XiIP9X/zLeDJXv7JmvVkvl3kAfrc+NKlF+VdNHYWtdLUjgTbZL+JfSND
shYxtf7us/hN5THzydbcktox8YdLzgXOZp5g8DR59cKK+hLF3+Quc87ie8ci
jxk5X88xNSg5J5Gf9iaL+aHJUYlerXhf1CPqzyamqL3MbzMvXfjMoi8zei14
Tot7rHO+qdeLHsrY8V1zbxp3CSamlzH50+C/8I1rGe5N68Kiv0juNfVu4dtU
F3oO3UPzFZWzVUOpjnQ92Tct8lui44JLtBadbZp83op309dQTCgO1x6TH0wP
RXU0d7VmR1SX5MxW3aH6Uj9J9Lr2tGKK5skEfxrL1x6KTyu/UTlbc/tF77bg
S9RPkjNbtXLBGUyfuOjjnsxj1x4aL1Sv5F5j3+T8Vl695GzVdxP7VPeW7617
PcOLEt9I5EzkWfNkw/0W9cX4gKk7LfzpXQt+tZix0Bye3GX0vZ63uFarFpt7
E9yM7tSmiS3MrG9tu8X3nUv3Fkdd+J7JV9eexTcmI48588k6S+Vf9H1UHsoD
rzNNvqK6m/10tepIcr6RoTX3bs1qWrZb8FLjG0YvKsOT9lrUqUW+ffK7hrHp
Il5a/d31bvLczH+uPQkm5l06b6E+dp1p5sytum/qOMWtVX9Nr9HCIZHH5MaW
Xmb+Q2U2WCXymFyUyEbvNfgszkx0N3KamTzFszVbMDWo9f3C5Fh6V7LfyJ/Y
iJ5v6gj1t9aMPcHB5AFqF8MPW3MGE+PXngRnI/Oi16N+2+J1697T5BkTj8ZP
TOwYLk3tTs+h+BsuSvO/wbZla2ojiudCd9MXrPM/1T2x0drfqI6LOfaCw19r
Ic+iPtI9tAc03HXNY2mNW+cWY0cTs63ZYyvvJbZY6G761kS2Fg4LrAyfNPup
Xq05dis/UxtRmVt8rBXjLTwNDiYHLvabHELPWcSgwZ/uMfPJlg8Ybnnpu/gW
0ML/yd/Uvu/qd2hMXWcm9jI4JPZN5Gz5s5nn0Dy56Msufc1+yqnMXa060sq9
FB/qh1QvKk+iu5HNxCyVLTmzxVVa2JqcYPqdRQ01clIfoHtacd3qBw1XNGcm
y+RGioPZb3hIa67Sqgstmya2u95NMDR2pHsW8UvxMfZN9qxz9SUPXYtaabi0
ievk+bUWMduqEdeZCxtRXWgsm36wxQEWtjM5fO3DlwyGB15nmtg3mLTyWIvD
J/ZKFrXFkzzH3NvKA9eZxlcTORd55tpj6mCyp/U8wefaT89p1dDFmfSu63zT
C1MZWnOeFiYtbr+Qx3CqdW5c8JwF13rSr6j/UPwptobbU67V+t5hzkly1KVj
q4Ya29E9Js9QPFt1h+povrlcd9H+kfI3k+sSbBMMW/tbub3F0+gc0uQK00u2
5h6JPPRMmieTMz/hN9W9xZHoHsO3Wz7ZsinFnHISk3sNv732UNwuXf4E0Ikt
FQ==
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "14359"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "\[Rule]", "0.28585195541381836`"}], ",", 
      RowBox[{"4", "\[Rule]", "0.7133151292800903`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzt3b+OJdURx/GRLSE/AJJjPwAJ5IMI7XCdkiwyS4KEBAFyRuCX4Dl4AAd+
JjtmkQhGWh/pVJ0/UzXzaWnRd1t9z63+9a9+XX3n7vCXr7578+4PDw8PP/zp
/X/evP3xi++/f/vPv3/021++fvvtZ59++8f3+NPvf37jP3/8zeO/fv7r55/+
45fH//37b4//effJ5//98vFxtH/ET48f8czx0fdaqTlaz8q5zOgT1XBFz13H
7PLGCR+e8O1NH97slxUddl33EzWc8PPN892Vq6PjH55so/OKHvN0G9Uws2a0
hpl6Vs4luu26vrvOZdc1ja4Z1WRl/RV9VtY5sf5KDTNr7roWu97rph9m6j+t
7Wke1TOqP6r5yv10Zv2V/ro5b8zcW2dqGx0f9dhonZnt5nPc6Bx3PaOdeLaa
qXmk58o8OXPtdvVR9Lx26XPCD7t03qXt6Zw/Uf+ubN81W66svzJvPJeGK+8V
/Yxi9F67nuNO6PNcz1Y3r+/M8Ssz84lnxpt+ONFHT4/f9Tyy4uGZcxntX/n8
52afRu/R0XVWNLyp1cy2K09W9DmtyUr9u56tdp3jqIbR++7K8xWPRbfKmb+r
/tHxMxm16551Yv2oDita7cq9Xbqt3HNP3B+j60Q/94vqMPNeJ/TZdf+Kbqev
7673iupw4meglZ8HV+pfOZfoOjPX63Q9p6/j6Lyi8/+un3ecmJ9vzjMn5sCR
5ifu+xXum9Vy7LnuL9U8X42j+oy2mdwbvfZEj9y8pjP6zGy7tIrOxhW02vU9
jei5rLy2Ws92qb9ajlWovwKv9OOuHDidw6e12rX+6c8ibvr/dM0nvi90U5/K
Pu/IT3Wo8DPxLjyjw4pWM/pH1595bYVZ97SeFfxTzasjD6zcfyuc767ver0G
Huk2s79C/RV025VRK9+HGW0VPv+5qSde17yj/qOao/sxXumXXb6aWXNl/4ma
K+uJP9T8Jc3JI89U+M4S7ssjL42O3/Wz+JU+Xfm+/em+uKknnr++0f0VeKbm
E9+lx/j/5fSsf6KvHR2/slXL1agmeK/OHefkUW279mN8Ooefbitz+wxX6/Go
PhU80JFHGo68N3N8tfOaOZdq/sf1eeSfXTkc7dNd+5/r896ontWeUzryaV9V
PpfT62A846UVf0bnmRO/G+emhnrwjrYd5+RRPaPaZvZXO0fci0e9c/rfVkTX
qXYvmNHkdA0vlUe6RfXctc7p/hr5fOV43sMrPRL188w6J3JyZs1dvTA695l7
1q4aXgNHr+PM/hN+WDmXaIbf/B0sGO/yz8rvNu+Sw/pur4bd5+Rdftj1Wp7E
z3W/GPX1zPHRXrjp+dF76btzmVl5Tq7ghwo14NfJI19F90fntJu/A+rpOhWe
O7rzrmu067XRdSr4oUINGI/6aNfMv7J1ed5/DRy9dhVqiNZTwQ8VasAvm0e+
ivZR9LPc6Don/D9zjvruQ626zMkz9axsFe5rFbyB+/JMT638bPfEPah7jr0k
7phLUQ9Uu6/xJD7dF9E8n3ntyOfR7xSd8Pzp9V8Sj7Si4R2dK9SGXx5H+3q0
RbN9JedX+iJ6XhWuUQVvmFHr9GCFmnFfjvb1qMdnPLyS87vyJHq+ciyXVxVq
68I8ibvwiezd9Xvt5NjzakVDnsR4JvNn7imnPS/H9l7Hp2xG5UmMR159Lp/L
sTt5VaG2LsyT+DVw1KvP9f8F0FM5rWjIkxiPPFzhc345duc6mlF5EuNqLMfu
5FWF2rowT2Jcpwf1VE4rGvIkxl1YjuW0MqPyJMYdWY7dyasKtXVhnsS4Tg/q
qZxWNORJjLuwHMtpZUblSYw7shy7k1cVauvCPIlxnR7UUzmtaMiTGHdhOZbT
yozKkxh3ZDl2J68q1NaFeRLjOj2op3Ja0ZAnMe7CciynlRmVJzHuyHLsTl5V
qK0L8yTGdXpQT+W0oiFPYtyF5VhOKzMqT2LckeXYnbyqUFsX5kmM6/Sgnspp
RUOexLgLy7GcVmZUnsS4I8uxO3lVobYuzJMY1+lBPZXTioY8iXEXlmM5rcyo
PIlxR5Zjd/KqQm1dmCcxrtODeiqnFQ15EuMuLMdyWplReRLjjizH7uRVhdq6
ME9iXKcH9VROKxryJMZdWI7ltDKj8iTGHVmO3cmrCrV1YZ7EuE4P6qmcVjTk
SYy7sBzLaWVG5UmMO7Icu5NXFWrrwjyJcZ0e1FM5rWjIkxh3YTmW08qMypMY
d2Q5dievKtTWhXkS4zo9qKdyWtGQJzHuwnIsp5UZlScx7shy7E5eVaitC/Mk
xnV6UE/ltKIhT2LcheVYTiszKk9i3JHl2J28qlBbF+ZJjOv0oJ7KaUVDnsS4
C8uxnFZmVJ7EuCPLsTt5VaG2LsyTGNfpQT2V04qGPIlxF5ZjOa3MqDyJcUeW
Y3fyqkJtXZgnMa7Tg3oqpxUNeRLjLizHclqZUXkS444sx+7kVYXaujBPYlyn
B/VUTisa8iTGXViO5bQyo/Ikxh1Zjt3Jqwq1dWGexLhOD+qpnFY05EmMu7Ac
y2llRuVJjDuyHLuTVxVq68I8iXGdHtRTOa1oyJMYd2E5ltPKjMqTGHdkOXYn
ryrU1oV5EuM6PainclrRkCcx7sJyLKeVGZUnMe7IcuxOXlWorQvzJMZ1elBP
5bSiIU9i3IXlWE4rMypPYtyR5didvKpQWxfmSYzr9KCeymlFQ57EuAvLsZxW
ZlSexLgjy7E7eVWhti7MkxjX6UE9ldOKhjyJcReWYzmtzKg8iXFHlmN38qpC
bV2YJzGu04N6KqcVDXkS4y4sx3JamVF5EuOOLMfu5FWF2rowT2Jcpwf1VE4r
GvIkxl1YjuW0MqPyJMYdWY7dyasKtXVhnsS4Tg/qqZxWNORJjLuwHMtpZUbl
SYw7shy7k1cVauvCPIlxnR7UUzmtaMiTGHdhOZbTyozKkxh3ZDl2J68q1NaF
eRLjOj2op3Ja0ZAnMe7CciynlRmVJzHuyHLsTl5VqK0L8yTGdXpQT+W0oiFP
YtyF5VhOKzMqT2LckeXYnbyqUFsX5kmM6/SgnsppRUOexLgLy7GcVmZUnsS4
I8uxO3lVobYuzJMY1+lBPZXTioY8iXEXlmM5rcyoPIlxR5Zjd/KqQm1dmCcx
rtODeiqnFQ15EuMZ/hVwCibK
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "84285"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "\[Rule]", "0.045650415122509`"}], ",", 
      RowBox[{"4", "\[Rule]", "0.9538025259971619`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzt00FKw1AQANDQgujSI3gFXWsUPIDUA0gKuioI7ULceRLBjQdw4W3ceBJb
cPvhD39+u3kfEl5C/mQymTlbPi+eZsMwbI63p8X0crNeT6/3R7uLx2l1cb6a
b/n2f+w8fV6Ps+Xp+PDxe/l9Nx9Pfjbj7df7VdSlODX3S655vuZdvfNsySer
tj1yyPreaJysWu0zzx792WN2sno72qstM9hSq6ze7j0jLfVsqf9QWNG5i8Yp
PdOST2lvzcqKWfONLbXtvTdak0PFzOqZfda5Js+a+9G9Lb2dNePRlRWnJn5W
faL/8VAzFX0XMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzPzH5SzcE8=
         "], {{0, 128}, {128, 0}}, {
         0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "88604"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"2", "\[Rule]", "0.03653455898165703`"}], ",", 
      RowBox[{"1", "\[Rule]", "0.963463544845581`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztm0+KZUUXxAsFdQXO3YKOuxtXILTQIycl6EAahHYgTsQFuAxHLsFVuAPX
4AIEuykHVx5ZZFbmyYx/P/gkvuL56t6Mc+Odiio/+fr7l9++d3d398NHb//x
8v7Hz9+8uf/pyw/e/Z9v7l9/9unr99/KX/773zv9zxd/Pfv5u9+f/fbq4xdX
/eGfL1788evfz7969fx/uvWann+3R/e8/+hrRu9r9H1WvX70NaPnP+Nd9TnM
zMzoXJ2a84qZPOXvzLNzyoud2cXyPN5dqH4GK77XXYOK9+xh5tp2erHz/Gfu
a+b8VTXa/Y56hHb9jGde8bz0fL3a09HrrLjHVbvNzPeteNZm2Pm51nr9qnNm
4VQm91xP6+sVz8VO0M685zpbXx/d/2feZybrVl3D6M9fTz37KnaeCcLn2uhr
Zs7z1FntPNvqex/1Zeb1OfM9XszsYz3fF+F79bwG4dln2ZFWMTqTSp/1MyDs
nBUeIfuFdm2nvFj1c0HrPWe+l0OWIn9mIfdjSueG5lFFdx2/9nhR8XzNPMut
96+AZcYQzgqB6p8Hw+Os2tsZ9380KrxAuIbqTGaZt+y00Qj6VLZnttd6MZqH
CPNQ8XvAntcgeD36c9/M+YTQYqZP2PmeDqzqeUa/18w1zHzfZOnjIH9mRfPq
mc52VeecOX9aXo3m2KoZmPEO4XOfZcYQzir4MPqz86rf92W2+5npz2fef/Q1
rdf3vMY5SxHOKjp61S6aPb/Oi9HcmMnGVf7u7GTYs1Spvwp6ZD73sOozdPQ9
R69n5v3zu4B+kD+zon10Tz+McJ3selVGjXrX4yn77/dZZpXlPIM2O/8uJTyw
6rN11e/rZ3xHyFuW+WTvr6I1dDp/nDMfzYceVn2OI+8A7Fmq1F8FPTKHazn1
N5bVuY2QsUpZinCe0dHR+/f/Vg60XjP6eVHdO61LwTWwZCnLeYYQnkZFDo++
/6ouqOc1ydLHYTnP6OjotTv/ql595998jt5Xz/Wvgj1L0c4zhLCWmX27Z//v
+V6jed7z/qPXnCztB+E8o6Oj57Ooom+p+Fmj4vMCAZYsZemvQgi3rMr8nqwY
vYbR62T5+3/2LGXvr6KjnXXF3+33vH406yr+e7GZ+62APUuV+qsQHFj19zwV
WVGd88nSPSCfc3S0m17V4a/KhNGvr9rnk6V7ZozxnENQBaEPX3XNp64/WXqL
s0fR0SwaIUMqrh/hvlbBnqUOHoXAyKnOf2b/H70vhAxMlt6i6lF0NLJG6Pyv
VNwXYx7OwJKlzh6FgABC579q/2fvRhyy1Nmj6Gg0jZYV1feFdr8zsGepg0ch
IIPQ+a/a/0fvFyEDk6W3qHoUHY2g0Tr/K9X3y5iHM7BkqbNHIewErfOv2P/Z
uxGHLHX2KDoaIR92Pu897Lxf5HMYhT1LHTwKAQG0zr9i/x89B4R7T5beoupR
dDRCJrSetZ3P+JWd54BwvzthyVJnj0KoALnzr97/2bsRhyx19ig6GmH/R+DU
ObCcTw/sWergUQg7Qe78q/f/0fNBOIdk6S2qHkVHn9r50XLg1PmgnUM1LFnq
7FEIM7B0/jv3f/ZuxCFLnT2Kjt65/6OBcD6M59aCPUsdPAqhApbOf+f+3wPL
WTlnqapH0dHVOz/y845wbsjnUwFLljp7FEIPjJ3/qf2fvRtxyFJnj6KjK/Z/
ZNDOjf08r7BnqYNHIczA2Pmf2v97YDxDtyxV9Sg6etXOz/Jco50ny7mtgiVL
nT0K4Qp754+w/7N3Iw5Z6uxRdPTM/s8C8nkqnTN7ljp4FEIP7J0/wv7fA/vZ
OmSpqkfR0aM7P+Pzi3C2rXNmPM8ZWLLU2aPgiVLnj7b/s3cjDlnq7FF0NPKz
OQPC2facs9L5s2epg0chXFHq/NH2/x6Uzlw1S1U9ivbUqp3/FYRz7jl/9nMe
hSVLnT0K2qh2/sj7P3s34pClzh5F+2jkZ3AVCOc8ev5KvrBnqYNHwRPVzh95
/+9B1QulLFX1KFpbO3T+VxDOfNQXpfPvgSVLnT0KGjh0/iz7P3s34pClzh5F
62nkZ60ChDOf8UXJL/YsdfAoaOPQ+bPs/z2oeqSUpaoeRWtot87/CsL5z/il
6ksLlix19ihw4db5M+7/7N2IQ5Y6exTNq5GfqWoQzn+VX0o+smepg0dBA7fO
n3H/70HVO6UsVfUomks7d/5XELxY5aODX1dYstTZo4CJc+fPvv+zdyMOWers
UTS+Rn52doLgRYWPSv6yZ6mDR4EL586fff/vQdVTpSxV9SgaU6fzvwXBlwp/
3XxkyVJnj8JZ0vnr7f/s3YhDljp7FI2jkZ+RUyD4Uu2vku/sWergUcAknb/e
/t+DqtdKWarqUTTmM9KavZ0zjwCCR9W+u/nLkqXOHoU9pPP32f/ZuxGHLHX2
KBpz/3cGwaOdvivNA3uWOngUzpLO32f/70F1BpSyVNWjaJydn/G5qADBr53z
4OY7S5Y6exTWks4/+z97N+KQpc4eRZ/d/8MDCH6dmgelOWHPUgePwh7S+Wf/
70F1NpSyVNWj6P07P+P8V4Pg3ak5cZsHlix19ig8jXT+2f9bsHcjDlnq7FH0
nv0/3ILgHcKcKM0Pe5Y6eBTWks4/+/8MqjOjlKWqHkXX7fyMc74TBB8R5sdt
Tliy1Nmj8Djp/LP/j8LejThkqbNH0Wv3//A4CD6izY/SXLFnqYNH4Wmk88/+
X4HqLCllqapH0fM7P+M8nwLBUwTN0o1UwJKlzh6FB9L5Z/9fBXs34pClzh5F
P23/D/0geIqglbqRFuxZ6uBReJx0/tn/d6I6Y0pZqupRdP/Ozzi3CCD4i6ZZ
upEKWLLU2SM30vln/6+GvRtxyFJnj5w18kyyg+AvmlbqRlqwZ6mDR+GBdP7Z
/xFQnT2lLFX1yE2n898DgtfImqUbqYAlS509UiWdf/b/U7B3Iw5Z6uyRg0ae
PSUQvEbWSt1IC/YsdfDIjXT+2f+RUZ1JpSxV9UhVp/PfD4LvLJqlG6mAJUud
PWInnX/2fzTYuxGHLHX2SEkjz5gqCL6zaKVupAV7ljp4pEo6/+z/jKjOqlKW
qnrErtP5nwVhBhg1SzdSAUuWOnvEQjr/7P8ssHcjDlnq7BGjRp4lBxBmgFEr
dSMt2LPUwSN20vln/1dCdYaVslTVIxadzh8HhHlg1yzdSAUsWersERrp/HH0
qRlgh70bcchSZ4+QNfLMuIEwD+xaqRtpwZ6lDh6xkM4fR5+eBWVUZ1spS1U9
QtPp/DFBmA0lzdKNVMCSpc4enSKdP6Y+NQ9KsHcjDlnq7BGCRp4NZxBmQ0kr
dSMt2LPUwSM00vlj6tNz4YLqzCtlqapHaLPROvOdXocHEOZEVbN0IxWwZKmz
R9Wk88fXp2ZDFfZuxCFLnT1C2//DWRDmRFUrdSMt2LPUwaNTpPPH16dnxBHV
Z0EpS1U9Qtj5GedBFYSZcdAs3UgFLFnq7NEq0vlz6VNz4gB7N+KQpc4endr/
Aw7/Anl++z8=
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "105626"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[Rule]", "0.0013401691103354096`"}], ",", 
      RowBox[{"2", "\[Rule]", "0.9986216425895691`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztm8GqZkkRhBsFmZcYwYULtw4u3Nj6BMK4c9eCrgbEcTGIC31J30bQGVA4
MFR3xo34MvPcewKUOz91srKyqrIio6p/8oc/f/mnH7x79+6vn337f19++OY3
X3/94W+/+9F3//HHD1998fOvfvjtn//83/+++/uLn/32/S8+++X7f/3n9+8/
/8vn73/907+//8eP//2r69/XNkT7yreOTdW+Y4fwJ+UnEWfHf9U+vX5S7elY
ETFM9ev407m2U/6kfCDW/9Q6nPr73QF39Mfx/+5j3zynnbEiYniXtXTq97Wu
AXU9EHnmwYMH/VA527S/D1io9cKzNh482I/rnj21UXlaxeaDnajkcIfDP2vj
wYN+ELoW0deDHkzNhao7PefFgwd1EDU4kcOfPd4D9e1Hai5oLejhEg/eMpz1
f9rjqTdLlb7oMb41qFpNZa5V+ymfnTPr4RIPXhOc9e/oNqffnTyg3iE+e/z7
SN23Em+9UnmbWOcPl3iwGQ5/q7Sv9EvkBKf9W97jtM7m5NiT/U4+76y3h0s8
mELne7nUXa3zb3Yc35zx3mWPp/Kh+o6r8m3q3wLQ6+q5X3iwDan1U9nXDn+r
+E/8+yBH20nl8849TujzU/53viVTfXPW0qM9PlBB17POG+w76j+psV/bd+5x
+vyttE/5v41Xp94SqLXJW9MeH3wfd+dvlXF16j/bxuWcO7SfdF+qHZpXO+e+
en511rb1CD+Ywt35W2VcND+/47jUfiv5x/Gz0i/9jpeoy5z3aZWYqN+q9omz
OOXngzruzt+cNtvQOa5UvaPar/jm8EZCM+yM+SkOlfikdLzUudnp84OPg3hf
0cnfVO1l87rqHNcGHYDWxDo1N7rG2VZTVHxQ/XzuFzhs0OcJ/kb8XYmbA4J/
dvLVyrgIrfjUnuCllb7UsaTaE3VWSjerjLHiZ2rNbOB1ndigz6fGsuFMd9ZV
579lUJHKgfS6cjCVo9Q6rvN9cmrslfbbxnKy6diZQqf2WOGrqffqUxog8Xau
04dOmxU4tcmULk3kKMJO6m/63ZpzdqTWzIbc4mCbPn9F5/pMaTW0P8S39Lic
NUBo2il0xjnlT270Wr93WW+VvT+VWzrHRevzp9+JOEzxDccf4m89chlUeFQq
np3vUlQ/1bEQ8ztVv3TC4e0b6rLUWt2gzxM8sNJmqi7evF8q+8JByqaTt1We
4/h58llt31kvp2xWxuWMpYLUG4/N39JwOEYqN6o2ifF2xu2KbXm4szZ31hXh
v3q+0GuVfufpxEptP7XXpmptJzeq8angtdawzluyDRw+letSY9xWs1RwGtcG
/ytrtZPn0Plf9e3ua0+Fk+uI9ldsrmFT3xJnE61NOZgaLwFCX9rmm8oPN7y7
qPim9nVqv+39zAnqPZTDzZy+ttWwqb+92dNAx0r9dkN9R9ufOutTNtX5cuKs
8hO1X0LbUdtv2/uE9pXy04l5qoYl1pLqs4rUW9mpM66zvpvirq8VqbPP6avS
PsU/U7Gi975zZjn5ZPOeSvExdbyEnxX/O9f2yZ+p+o7WJ+9S76fQqecQ2jtR
Z23Y+ymotWHnO3wVnW9oHc6jxlONA7G2r6Dfual7jdAnK/5vqPdTIOq4yh50
9tTmu9rU3lf55wlqniHOzZR9moc4NtW+iDXfyfNT+9rpd7PNbfWCU9dvO+9U
f+h79lSuuzvHmNIZ6LeXFd82vH9Q46aOhRgXUbt12nTGrn7r2FfXucNPHP+J
tzoEj53CBo5B59WUzqDuBTcun8LmuxIVqlZTsZPaj1N7XNWaUnX95vVD1Ikb
eCadezdwDIcvEbW545vaVyr+KT83nPWEfYdnOue7s8fVc+30bScP6cxXqfNo
A8+kNWpHCyLe6qTeTak+pzQNmmNXcpGzPqe0QbrfbXryZg3W4SH0uDbwGYJn
qt9WbKbWvDp3qVzt+LAtj1W+deq7u+QN+p6C9l8FPV7Hz9QYO2th4g3VyZ8U
vyK0OGLuOnWtlE0CTh7bHM+pvOGcg6ffU/VmfdQfH0tKZyD8THEhIv4pDS3F
b1PcVY0hzYeJdwin9vTdUwopjn1qU7FDxDNVk9K5ohI3lWul9pGzT1Mao+on
zTGI+NNQfZiK4QZuTOcNdS/QdaWTH9S+CJ9P7U826TcbG3S2qbOPWGOpWKkc
w1nnBP9RxziVY+k7PsJP5286H1Y41WlcU3pLih8SvqmYustO9UXHvBOVWG3m
lio6OaFTk6r9pnQPp5ZR85Lab6UvohaufJvSW4g4OP442hrNOen7AoKH3EWT
VEFzSxWEznayr/q2gcupuSilV6h7ZFsNXrHp9Kv6r8ahYjOlM6vr/PStM0Z1
nav7rnNfVJBa25V4Or7pI3u5zSmdzcmrKS6XisnLZofDa6rBK3ByqZPHNqwH
4p731FfqjHbGS+tXqv/q2iBqSfp9Qgrb9k4KU/UdoTNsqE9PILQgwk9iPXT6
TNh03isS/lf67dQeiTeQU/t927mTwlR916mNbDijp7QsdX6J9UC/46X5Z2W8
joagjqVix1nn9B7pPPc7azpa23SQyiH0Ox9nLCmbTg6cilXn+ZLSHlP3Po59
NT/TILgKwb1TGk7q3E/FJ3VPWllX2+oUp75zzj5V83TWJ3GPX2mTilXqXN5Q
N9E+pM4UJ0edkNqnnVxLbU+f+xXQ96RT9RHBB1K+peDUtk5+oHlpan4r57Jq
U4V65nbe5XXuX6KOIM44Z46It2GV9mrePrWhQWgptB3CZzVuRE6gzzi6Tqc5
EqGHn8bixEr1jYj/qS91fxH1Wic/IfqqfFsBkZcqfRH1Qqcdor3aRkXnGUfk
E+L9TIrz0zWXiqnz7uRD6u+Tb5V+U36+LJJcTBye7+QutS81JpVv3wLUeZ86
41ReSuTzU1+O/dO5tuG8S90V0nrOFOizVb2DS/Xb+e3JjsMJt62TDdi2ZqZQ
yecpLlrpV7WT8rnSb2UPEj7Tb1RUEP44a0z1OTWWVByINw+Vfdd5BzcFZyx3
2Y/qWAh/UjqAY1P1c/NbI+LcoXU2Vees2Ly2SdVZDq8m7jQrc0HjLnnsBGKO
rvY37McK6Lo1tbZTumXljK5HwAehV6RySGWtOnXxhjOR6OvaRj131PntXLfq
GujMYyc4nKTS3vEntR9pLXrqfCd0S0JHqoDWK1Sk6i9Cf+jU8J2+Ulql+q06
rtS3RJ2YyifEW5eK/06OIviJs7+I2qfis/pGIsWXUrWbE/9THFJn7l20BUfn
OYG+k1K/Te3NyhhT+oYaW/qetJOPpXIFzfmn+Jvqs2PztaKTG6j+EPUdsYZT
vqXy9lS/Kq87+ZDy82THqbMIPqbOVwp0Hp7yM2V/8/2RCpoXOXWB06/TxunX
WTOd+sAUN07xPcc3Zyyn3zvnK2WfuAMlciZx/lbsq35uOLtPcHyj76YJDpni
n6fxTs216uepDc2NXza6j/tZ6WtKq0/lH9XnzedmBYSeSfi5+T465Sc9F4Q2
SP/txF/9Vh175VvVvuPzCXQOvGKDVqliM+dJIXXvTPD/01ycflfr6IpNNZ6O
n5X2lTab91QKFf7pxId+L+TMaepuOnXWV9qn4qbaqWAz/zn1q47R4Y1qXyk7
9LxU7BBvIabQuadS6HyH4/i2LZ6b1+EVtMbitN8GJy9V8pWjmdDvx6aQquun
ajr126m5SPGiztqT/raCzZrnFSmtoDOnTUG9Jzp9O6XdqfqGE4cUUjreyT6h
z3TuqdRcdJ77qdqT/tsZS2V+aW0hhU4Nc0NMpjRbQvPsnKNOfX5qTaZqpZTu
re6RVO5V26dqT+LcVNdP536sjLFix4mt46fqT0oHTsUkNd5Tv0QtkOI5RHw6
tSZnTVZsOncf7tgUqDmTuK9Ra89UbFN9qdiw/lU/p/jVZmyYl+vvjgbVydtT
/abyNj0Wtb3DH05IvWPZsN/V2Kb66uQMU1qro/2e2m/T6lVs0F0781jl2w33
xcT5QugPqfFWxr4hJ9PrX73fUd9CEGeHY6di3+Eepzb0vt5WLzi64pTu6uQx
5/wi1lilDb0Op/QNdexq7UDkZPVbZ1/Qfztjp/khsc5pbtN5z66CuKdTfXB4
i1NX0vdcaq5L7f2Knxs0VQf0OZXqK7XGOkGcTZ1jT+UHur2zNjrz88lO57sF
tU3Ff0LLTfmm9ktgg1bZqZttqJs6tWL6bHLyZKrupv2cyj+Vs9Xhz078O98S
dObz1DsQosbpjCGdh9VvnTdaKQ7vjV4DwSucs0mNrTv+/yN1r5HK/51jr/jj
+E/4WfGBvpOqrGHVZ6dmSdVBlbHT93qp+4vO3ELs5c47X5X7OWuJ5q6V9o4/
qXWifnuyk7r7oHm1s57VnOOMpZMzbwChFTj1YMVP9dxP5ZZO3u6c9c7YUz5M
1TUn0PWms+aJ/ZJCaowV+516Tsq+Y6cT9DuTVG7p1OodP0/tp96iVNCpM6hn
dArE2xjVZ5VjqDZpHcyxo+5rh9el3hpNvUMj4NSzDtftzC2ERkToEp3jPbUn
dE66L6d9Kv9UbJ7i4Jwvqf1biZuz5jvzQ4pnqu2dteT4UEHq7KNzdcUHVbdR
10mqvTqulE5FnykEv6305dxHbODP9Hx15pO7wOGxzvu01Bnk3BenYuXYcbio
2u8GpOqjTt9ObZy+HH5L8FW1/ZTOUIFTk27TH1Kg64u7cGZaxyDWz4b6QgWR
i+j7dMeOel5sqBMJ3p7qK8XliDy2ba9dscE3unYj3qep/hPrp1NnTiEVh9Re
VturdvyI1ZGqEwneTrwh3MxzVD2E9mfDXSpxX0xwZsdOCht0ZscfombfsK8r
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
PrBhb257GzzFnVLYcF9MtCdA7Jepu/5OnUG1T3NpouaqjOUu+oC6Nugzq+K/
OheqP7T2Uhm7g1SNo94F0G+naW5WiWHn3SL97ckOoX+mQMTK2b+O/46dKTg6
WCeHJ7QdAql4btuP9FvNU5uTndTac/Tbqb9THLvSfuoNHr3HHR3pLvrAFak7
BSf+nTmQ1qWn7miIPEzYSb1XdHw72dzMH65I+Zl6a0TUv9tqHOcsntIHHP+d
Wpiuo0+g3zAQ8Uy98XY0n9RbUFq3od+7Ov54o8z7TKxhZyyVnEBz6Sn+oNpx
xkjUvMTfahxObSrjqtin3zOoOdmxo/pTaU/YqYy90i9Rh3bWcfR6pnP4tY0z
j6f2Ts1I3+l/KmYvGS+Nbf44cObUySEb3impYyFyZuWMUOfiJeP/lE2a/9P3
4HRerfyeQmf+mdoLjiaQGvvUOzQCKhfddq7R92UpPyv9Ej6kuBnhw6k9Ef/U
/QjB+VWbnfmns96hdTm1fWc9QuccWoeZ4jbqOZXSMXIjy/jgnOMpDrDhzJrS
otX70E6enIrDCZ2alaMzq3d/xF2hU6tW5oLeg6qdFLfRR/Bpf+i74FO//wX8
twj5
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "131100"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.12699860334396362`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.8730013966560364`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztnTHOZUcRhUdGILbBFiBmLFISJLMCIyCyhGQChEQAgQMSVuBlIQLWgERO
hC0R3MBt1/nrfFWn31DSjO6MqqtPnaqurnffvf1+9KvfffLbj969e/f7H371
1yef/uFnn3/+6R9/+YOv//GbTz/7yY8/+95Xl3/+35+vr//1zy/f/+PXX77/
63++//Hp+m8f/fzjX/z7Tz/9y9+/eK9en+xU/n/yuoKhgp/w3TW2gpPIAZU3
19hJPl1+EXm1lScd+8S8rnXX4ZmoV674nq7fHaSiUxl747Xq76TvBB51bIcf
Qlx8TvpI5JvLzi1r5Bab9Non/HLF9BY+KzrPPZf2XbW/xfOJH+K6w7nK1Um/
g1kV2g7RDxBrpON78v6VUDcm950EPicxVOalsaXZuf1a/Zx+4o2+B0vMlVDr
nvrqXpPc47kkrQam7X10Tqo5Rve3atxddm6/nvSdjguNP41PldsEv546rs/C
W3V4a++riCt2FZ2EepVwDyGhnrv27o7vKidqXOh7aGl8bmGe3Gvoz24nzBUh
uCXuFROytYdWbLqezejYdHE4medp+86J/+dYoj5UuJrks2KTxuzy62SHwOyq
w525XLx11shJh/ic5YodPdYlW/XwRjtpfKo69GcKFz8uzB1sKv6T/of8ufuV
fNzCfMqlrfsGJ04qcosdVz50bLrsJ6z35GuV88o1/Z5OAj+0fGh72ZbvHQxP
/VuemXxKGp/E2pxc7wn1anKNd7hK462C56mT8Ez4jXuZy84kD2rP09FxzaXq
d3imY+rKARXDU+eW+xidWHT4OXHlenejMnarZ0iIadpepgp9r8ZVEybXGm2f
2BOfOlvfQ6lzJazZhH51EptrLJ0Dk7nk8n3y2vWuUOf5nAR+OmtNFXotn+a9
sZbSvrhsnux0fKfXWgWbCz89lsZP9DYEtsk8d/k+2YOpY9X6fFqbT/3O92tb
PCT3M65cqnCr8q9yQuBU50q41+3iavLsEZek5TmxF2zlg8v3rTpG81DBQNh0
+aXaUT/TuTATONPycBKPei4rjZN+tj8tf1SbnXlV+x3fJ7mqiIuH5LNrXDxX
rjt1oxIjAqfreYBvy7Pvkq3+LcEXdWxnD3Lhd+VPhzdXvGjfXflQwfnUSXjm
c6u+0Ri+O5POQuSGCycxL72Pu7ilfVElId+IvaOzNitzPXW23oNWcap4tno8
okYlY1DjuHX+Ib33dcZO1hmXj1v7iCpbz0l2+KR5pq87/BN1TM0Z17pT53UJ
gSEhryZ7LRpzgr6LZwKn6xlI+jnJCg8urtSxafk8yfkknxVsT0l7f+SWZ04S
7NA1s6PvWl/E2lHHVnjoCFETXHbScpvmeZKrDp8VnJWxne9EXM/Edjgn4lix
WZnLZWeyb+n4RdTbhDVYWTuuHmmytrvGqkLkc6cXTd7XEvJ8Cw+BQbX51Em4
D1yRTh1z2ad7vK2+y9Uj0c+mVjhUpZNL9HonvjN18UPsuQl57sJDYCC42roP
TO+J9HOwdIxc+aNKgi8V/afO5FkiW30CsXaIsYQkYDjhoe3TebIlxJ64hcG1
jxC+PHXo94Y6mFU8rj6kM9fW/p52/fSFPnuWxnDLmUgJ8SLOEz6JOjb53b2K
v0TOEO8NVXypCD2Xa5+a5CehtifsWZP8pJ2JdGO8tq7p9yIJ/l3vSJ6ryNtF
9eWpM3mmq6tnU3108dOZd7Lednij65U6dpJPNX9UntWxW74n5CfhexrPz3k7
n3PT1kVlD1V7gy1/E3KsMvaUS+pYulc5iavGuuI12b8l9xh0ft74XiptJ+0z
6S0203Ke6JES9rKte/UVHk46BIcqJ52+iO4xkud1YTjpVGxW5rp9rKsG0jY7
/tL1uYLftT8SPqr9iap/mmvyc98Wz1u1VLW5lVf0eun0OZV43SKTvSiNbfL5
gcq8FTtbNaSiT4ylfZ+sY6q/BAZirU2O7cxFc9jpbdKuOxwSsXDZTHh+YPLM
THWstrp8QvvembcytoNzco9OzoGn0M+gbuVMxU7ytcuX01iXTZfQ67cy15Zf
T/2tvoLwa6uXntyjCX+JPrMy1+R+utUDE7Gj85zOz46dpw7dP6hjVR5ov265
7uTAVg5P9lSuPSsh1rQvTx3Xd+j03jS5plRJyI3KdcI7I0Re3fJO9CS2yRyu
2OnMpdpXfaT5mayHLswdO6exW9hU3uj7bAn5c5JXqm9b9XAyRhXMqo+VuTo2
O/Kqe3Ta3kHHqDK2M28H2xb/dF80uZdVeKjwo2JwzUv3QmqMOhiS615yr1XL
mu+OkcvOlu8Jzxi7eJtc10R96PhLx4Kub6q/lXnTcnLy+ai0vXur16roP3WI
M/Q6mFXf1bnomja5B1V4c8lWDVdtVvRdmF3vaBO8bfVFndxwjZ3cuyv6W3uc
msO0zmR97sSlkw+TvqtrmXg3n67JlXk72Oi9dXLvS87PrTpA7N10Lk3mw6Qk
cLgV3608V9fCyb46b4cHJc5vsdnZm+jnTju+u+wkXyfzU9F32Vf9pfvGtHfw
k/so1UdVEvDT6z0NJ+Hj1r3ZBN5UnJP8uPIzuSe8/VrNga1+TPVl8t5s3eu3
+UXvTQROep12zh5x2ZzkzTXXU58+e/OW3CbilXx98p3uo27n38UD3aepa6pi
Z2ud0lx1MBD1jZg3rU9wxULl88bPd5P76WQPkMy/C1uHq1PeJjwrfpr3hIHG
VuHqlc7USsh5F56nnYTcTojFJM7KWFVuWQsubFu9E6FPzzXpe0JPlYbHlYcq
nor9rfcg0uwk2N96BnIr97bWHbFmlZi8RVx+uXxPmJfAkMYDHXfVpspDnb0Z
O5O5p2Ko7MsnmzQegtu0dUfkCfGOg2uvVHUIm2pf5LKfxoOKOaEfc60LdWzF
jssX1zMtnT309n5mqz8h1pEaX/X7HXVsAleTfYiLB5Urggeihkz2crTvru9G
KxxO1thX7WfS1kvFR1X/la47vm+NpdeFax2pPnZ42MqTyTWo2pz0saLjei7l
NC/BCb1mVXGtZRf+hLX5qpi39ndXbmzd00vOkwoPJw4n3+Hd4orOhw5vdD5M
nldJ521ybUzDTOR2xUeah1O/R7zvRnDlst+pz+q8rvVCc9Wx49J3rSNXPhDn
VaqYO/yk9QlPneR3cCqx6+Dp2FG56gjtC5EnCXV7q5dwvWfqerazopO8fjtj
6R6A5ucWTjrzdvzdqoeqzaf+1m8ln+zT827V4Yq/Ff3TtetznGqf8EXVp9dv
cg/Q8f3G9ZXQA3xo9ZCojfTYrXxQbXb86sylYujgTPPlxh6gY5/Yo9M4oXuA
is7t9fCWvZLoeQi/nnZc92HUuVzfTVeEiNfkWdmEjx1x+Z68vlwyWWcqGCax
ufqWtL3S1be48KTFunJNnMnWybEOV8QZs5286vQAJ19UfaIOqDx05to6hy25
fhI9Bo0nrVa79m4VD82tKx+2cG7hd/l4sjPJYQWDys9Wb5CcSydfCH8rcxF7
gWtfu3Hv6PBDxJqIy9Z9gzT835ZP32SnkxudsR07HZwJebuVS5PvQHVs0rmn
ju1wleY7nfOEbPVOk3Ym96NJbMS8FZtqXCr6LpnMpUr9p++5ufa1hHU0WWc6
vp/GVvC4MCfc83T5NdnLJezjCWNdse7kA/1bKgk9DL2OOjgnfUxb1yrnHT7T
7p901ri6N9E1TRXafppM7i8VDM//p7+Ln6wtFTuqjio31uHJmqzWLpe/qp1J
nrf2FFUSYtfpV+lr1V8iFq46r8ZdxUyPJerA1vNLqhDxJc6lJ+pnh6vO2Ft6
iaf9hM/1W3ti2vUpLpOcdPJQzW2XTPpI1/DJOnyj7x19l2ytcZcOUbcn60lC
rZ7kkLAzmSeTn61cOdPJ1dvz+ZV87+Sh6he9vibxnOK1FcetOubC1uGzY8eF
4Ub+t+JySz6/ku+TvLl47sRlcp/tYEhbs1t70FOH+B3S5O8sEtYdEZcOBpXD
Dp8qD8m+dyQh35KvXfg7sVB10r6Pq9jp/MboyfeEnKH534rL5Pfmaed6dcZ2
fJ+8T/hKvegkfsIvmquteE3OmxyXju8JcTlhUH057S/0b7Ym9ACdvihtPT51
kn/zqINf9aWjXxG6D3HZpOfVWNPn6tiszJW2dzx1iHtBLp5d826NTfPXNddk
PhPxcvUhxB6U0P+oubSVP65nRys2VU62OFRtdu4FdfydPOOdljR/J/OHyOeT
nY7vKocJPEzWcIJPArO6d6vYJnsDmv+Tnc7YtOsnzrR3HidzhqilhND9kqqz
1Xsk1JCEvFUxJ/CpzkvHQsXc8Yv2JW3eLWxbOUPslWqO3VLrKrxVsLl00vIq
oYZv4TyNddns5OTkmeSTe1laD1PBRvur6nc+83bOpHXx9qHVzIrvqqTVAQKD
C2eHK3qsa10TcVRjlPZ7ah1stM1TzlRiocpkLtF9F82Dy04Hc8J5O5P7yFYs
knOe4JmweTsnafyovt/ynKeKn+ZhK2cqOltnZbvmovWT64nKZ9p5Ly4e0jhJ
48eFs/M+4Elov1T8Lp1XinsljgTmk00VQwd/xa+nDl1jK5i3rlWeO34lcOLC
2REXJ6pORd/Fp8svQhLmdeF01Weib3TxUJGEWuriKqHuJTxL2bHvyhmVk879
ilt6TlXfhW3yWd9b4u7iOW1tbp2XQvfPrrF03XteE2cKvWoPUMnVCmaCk0kO
Ozi31mxy3BN6g46ovLl8J2zSXHVwTsaX4Pypn9wD0PY7nBCxINbFJG+usZP4
t3oDem2m7d0d3jpc3fg8pIufhDUyuT8S9aoyL2GTqIcdPitjVdmqRXRNJnDS
uT25d9NcEWdmquLCqfKZkFeuuSbPHEjmSsVP+/4ce8t3WDQPk7mhRffO74Ir
c9G+PHXo94ITclvh7C32t/Ys+vlVF1cqJ+q8xPvFnb6L8Hdyz61gcI2la2DC
PZOTuHqSDs6t6y3MJz7VfOjIFj8dDFvnFVf0iXfb1Tiq+pM9ZCe+LiHWbOW3
wzoYJn18pRpL9Btpvj/tT56tVLE5yfNkzhC9lsqDi880v9T34NLeLd3KsYTa
W8kTFT/dk0y+K9fxneCKyM/b83bLjovnG+c66UzmwGT+J+CnfXnqbN0fTuA5
oQ+/sXYR/qp8nuZyYaDHJs9V4Xmylrq46khaD0NjviW+qh3it3tU/k86anzV
eTt4tvi55Xd4K3MR9jtz0f2VOq/u8dvtb53JU8GsYuhgpvsxmh8aA733VbDR
vwvpquEEP/R+3akVxNmhW+c/qJy46hJdqyevT74nvCvhyo3Jc+wrQvctNJ+E
fsK1i09VaD7VWlR5/kT9XvU0V4eHytgOb8QesbVeKvZPMb3lnNjJ+NLvgiVz
UsGsjt3yi7BJPDdF9ANp13RcKvx0MLji1Yljxw49tiNpOaZy8kq9BxFH2q9k
nGl5m9BX0HFRbbpwVnoG1U7a9cmvyTN/XLFT9V+p95jM4Q4eVSf5d6KJXFJl
cs966tDv4nX8deG8fe9OwEPEriJb64LASfuYnA/J2E5x2frNR1XnJLfwnzDv
W2NL+biFh5hr8gw3F+anfto5XVtrSpU0bJ24d3KbPvMnwSYRC2LeCoanDn3O
zxYedWzHLxdvKobk3uPET0W28D91ks8Md3H19gjVhNjLXHgScqMzb8L9oopf
k9iSr9VYb3FYwaDieepP9huTHKq8EdhOdk5zqd+jEc/8d3w/+aLa7GBIvnZx
m6B/yzWR51vxpfG7+o1JDlXeJt+vVDnsvEemPvPvel8vuc9Jrjku6dS6zlxp
1y6cFTsqb5M8J9ghOEzbBxPqRgLmTtxde80WJyq2yc90rnqVzDnNiYpn8jnY
SR5cc03WPVU/IYeTf/fZtXYInB08CfZP1+q71aokPyNdsVPxhcaZXENUHk52
Jn9PsBMj1ce0/jCtRhFcdXASXE3ad+lX1jjxnBjNuZoPqi+TOTZZQ9Q4us5+
SVhrrn2kg8eVw5M1uYK54xftewWPilkdW2fpbWMn14ULg2onbS6Ck8m+iMZ/
stOZyzU2eV24eiEVWwXzU2fy9+BcMVXtJ+ybHR9d+iqeDv7kdTdpk8BA7IkE
/wk9jMoJweFJXN8JJsRoMocT6idxj7SSM2lrtoItbd11sFXsuDBM7iMJGFxx
SeDnKZ3fDkh4tzchf05jK/mgjlWx0ffVOzhd+eDiamvddTCf7HeEmJfmc9Kv
hJrjsln5/qXDc2fs5Hp0+ZuWq8Rck/zTe/TkulN7LTVeT53k52QInYR33ifr
QMdORT/h3d6KDpE/xHo5zdWxqfqiztWJo8p/xeYtfa+rTrquXZ/TXZhVrrZ6
Y1fc6TpQwVYR129sbdWfk0yul868k2twK/9pbJN971Y/ubVfqzmvYkjrDdLy
QfW98nnzpJ/gu+qXys9kPpzsdOaaxLllp2Mz+fupSr5VhK6fdL26sW6k7fuv
dD3Jwyk3OvmQnP/EPuiy07HZqXsuzJ18fuokfGZJ4CTBpms/pdfLjdeTPKRx
SOBRuTrpb/3uD50nLjuTdZLOpY6PRLxo+2m14jlX2ueRyfx08dCRW/Y4AjPx
3O/k8y0dnul9yhXHjo8Vmaxvac9U0FwRPBM4b8fznGvyXp9qM+Fd5kkhYj35
+3SEXx2bT/3Jcz4T6ttWHdvqP12+v5IdF4ZODqhxTLt+YiZ+64eoLbQQ+eyy
v5UbFb863Hb42RrbWVPqvCq3WlTOdlyx7uDpCJEDtD69lm+pLfSeVZn3pOPC
nxAXF36CkwRJXlOqLwnfx53w0GuZ3k/pNULHJaG2/P96pi915QORS087rvqQ
UEPofKjoEM9CV+JV0U9bd5WYVvQrdohYn3h22U/ed265JnhTdehYnOx/aDnQ
iQsd97RYbOWka526+ooEfjr4X/V5Nnrt0/kzuUbosWnXJ19ovzr2T2MnMatC
2HfxTJ8dMenLh7B2bsdfmfeEoTM2bQ+9EY9qR41XRwjMFZ2E8wmJ+pyWtxV5
pbVzO/5O7nVkkn8CZwIewpen/tbze6q/9Bok5kquIUStSOhVEmrCFn6ib0n7
DlTVSXh/oYKnIwl1ieaQrlGTe1BCP+OyQ/P51N96b/eko44l1v5JiJxMeO6C
9rHCZ4dz9b3CG78L63BIcJ6ch2pME8712sq9yfd2E/Df+N7cjf0Pvd7TeEuI
0QlPB3Oajwlxmcwfl48VO7RM5kxCP0b0HoRO2vs7FTvJvZZrrhMP6mferbWm
6nQ+yxNx6chkD9yJ79b7OyedTozovTstdsmYv21tfJPQ74OrNitjXXNV+Pwv
JvMQ4A==
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "74382"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.0076439096592366695`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.9923560619354248`"}]}], "}"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7755130580367002`*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"a809837a-98f5-4017-94aa-e31f3f146b69"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3-colour totalistic, range 3", "Subsubsection",
 CellChangeTimes->{{3.775514102785697*^9, 
  3.7755141064216957`*^9}},ExpressionUUID->"bad85301-117a-4187-a53a-\
185773831b7c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"test4Data3kr3C16", " ", "=", " ", 
   RowBox[{"datak3r3C", "[", 
    RowBox[{"128", ",", "128", ",", "8"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"test4Data3kr3C16", "\[Rule]", 
   RowBox[{"netECA16", "[", 
    RowBox[{
     RowBox[{"Keys", "@", "test4Data3kr3C16"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<TopProbabilities\>\"", ",", "2"}], "}"}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQ/eGloNAT6TeOnLn5oiDaxK5DGkTPT8uWAdFGSiyq
q2TeOBqUcGuAaKb1mfYgus3nuTOITvum5wOiTyXkgunSk7+DQHRTzz8wPSlH
nPUqkP5vpMAOopW2uwqBaNUFl4VB9PK9qxVBdAPPNyUQvS92iyaI/nH3ghZY
fLuIJ4j+wC0Dph2va774A6SNWp+9AtHX5m8zFZd94yjvyW8Ooh9cWzobRItc
9J0Lon3178saKL5x/HIrXx5E6/C9V7cA0jJtPtogeoXGDAMQvUzgOphe12Rh
CaK36Wpag2iRqu0OINq8670TiAYANAuIoQ==
  "],
 CellLabel->
  "In[104]:=",ExpressionUUID->"217c4d79-581f-456a-96ef-30559568535b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzt2kGKZTUUBuCiBXEVgnNHOnHUjWPBQbuCEhSEBqEdiBNxGY56TU6duAV3
IHaDg4AET8xNKvecL6B8hlev8u5/759XwY++/v7lt88eHh5++ODtv14+/vj5
69ePP331/rv/+Obx1aefvHrvLX/55593fvPZsxffffzm+V+/f/ii5y9+fHzx
689/PP/zy9+e9+Yjrxl9/9UeXXPv80auw+h1u+r1V32umbyuev1V1+qpMpq5
DjP321M9ayuekZlrclWPrbgfrvq9o5/3oRm9+d7orS3ynpGf7Y3IZ79qzSs8
s7bIz46+/871r3jNVdeh9/rRaxh5n5n3H13DzNoiz9eKa3hV72XyaHaj73nV
vh9Z24rvFVet86oOjCf172sSuVaj7xNZ81U9tnNErs/oa0Z/11XPQu81M/fk
Vb09+lmuug9X/C1w1ee9aozmuOI+nPldM599xT4++lkir4+sv/eaq/7umHnP
FdmdMHZ24Mx1m8lo55nM6OcaHTPfxyLvOXNWs+YT//dY8Z38qjWs/tkV3392
/l3Q+yw7+3amA+8+Zp73q84nV38PibxPbz2R+bt8Nxi9bqO5tPOr94XVnX/a
vnZVV/d+NjK/+vvVTOesuM53P9vpjRV9teKcfMXfnivuz5nrtnNc9bdS+547
n9mdvdR7/5n1j47RDn+qfl69564+o9v5s3ccK/62Pe07xt2/K7bjhJ686pl9
qvsksoad46kyOtkVvqtnGifcM1m74uT9tLfm0b3ghPXv7JmTMz3hmbr7eWyF
Ue0ejnz2atd29Jqs/v95VuxldzzjyuqZ62/MD/fwur0g67XtfZa7fMaZrLNm
epfrb8wP97B+4P+3l8n0nGfNiA+9pB84nnVvnLDOrI70lREfOl8/8HymsrYX
3GXofP3A67rF83WvvCoM9+Q595ss7uVeRqPzfP6zmWnoGf3A67LujRPWyTX3
Ap1/zv3WGyesk6/NVNbnO9KTdxw6/5z7anScsH6+tis8j+d7Jt8ThnvsvveP
7O7lXkaj83ymZ57lnUNvnOleFqPzfL4jz+kJ6+Qce4HOv5cjmZ6wTr42U1nn
c6SHVwydfy/PZH3C+vnaZ9/zm88z94N7Jp9n7gdZ38u9jEbnOYdnnn09kM/6
oY4jz/UJ6+Qz9wKdn9v6IZ8jmcqauab1Qz63GTnfY2b9UNO9jEbnmTmf9UMd
R/b3E9bJzPqB92Qqa+aa1g/53GbkfI+Z9UNN9zIanWfmfNYPdRzZ309YJzPr
B96TqayZa1o/5HObkfM9ZtYPNd3LaHSemfNZP9RxZH8/YZ3MrB94T6ayZq5p
/ZDPbUbO95hZP9R0L6PReWbOZ/1Qx5H9/YR1MrN+4D2Zypq5pvVDPrcZOd9j
Zv1Q072MRueZOZ/1Qx1H9vcT1snM+oH3ZCpr5prWD/ncZuR8j5n1Q033Mhqd
Z+Z81g91HNnfT1gnM+sH3pOprJlrWj/kc5uR8z1m1g813ctodJ6Z81k/1HFk
fz9hncysH3hPprJmrmn9kM9tRs73mFk/1HQvo9F5Zs5n/VDHkf39hHUys37g
PZnKmrmm9UM+txk532Nm/VDTvYxG55k5n/VDHUf29xPWycz6gfdkKmvmmtYP
+dxm5HyPmfVDTfcyGp1n5nzWD3Uc2d9PWCcz6wfek6msmWtaP+Rzm5HzPWbW
DzXdy2h0npnzWT/UcWR/P2GdzKwfeE+msmauaf2Qz21GzveYWT/UdC+j0Xlm
zmf9UMeR/f2EdTKzfuA9mcqauab1Qz63GTnfY2b9UNO9jEbnmTmf9UMdR/b3
E9bJzPqB92Qqa+aa1g/53GbkfI+Z9UNN9zIanWfmfNYPdRzZ309YJzPrB96T
qayZa1o/5HObkfM9ZtYPNd3LaHSemfNZP9RxZH8/YZ3MrB94T6ayZq5p/ZDP
bUbO95hZP9R0L6PReWbOZ/1Qx5H9/YR1MrN+4D2Zypq5pvVDPrcZOd9jZv1Q
072MRueZOZ/1Qx1H9vcT1snM+oH3ZCpr5prWD/ncZuR8j5n1Q033MhqdZ+Z8
1g91HNnfT1gnM+sH3pOprJlrWj/kc5uR8z1m1g813ctodJ6Z81k/1HFkfz9h
ncysH3hPprJmrmn9kM9tRs73mFk/1HQvo9F5Zs5n/VDHkf39hHUys37gPZnK
mrmm9UM+txk532Nm/VDTvYxG55k5n/VDHUf29xPWycz6gfdkKmvmmtYP+dxm
5HyPmfVDTfcyGp1n5nzWD3Uc2d9PWCcz6wfek6msmWtaP+Rzm5HzPWbWDzXd
y2h0npnzWT/UcWR/P2GdzKwfeE+msmauaf2Qz21GzveYWT/UdC+j0Xlmzmf9
UMeR/f2EdTKzfuA9mcqauab1Qz63GTnfY2b9UNO9jEbnmTmf9UMdR/b3E9bJ
zPqB92Qqa+aa1g/53GbkfI+Z9UNN9zIanWfmfNYPOfw3sz0HlQ==
         "], {{0, 128}, {
         128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "13965620"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.1292005181312561`"}], ",", 
      RowBox[{"2", "\[Rule]", "0.8232693076133728`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzt10EKZtURxfEmYsg23EIc24lbsFfQSoSAGlBQnDl0He7BTWQBkllW4TwK
DpKBkKbfe/f3r3sHLdVg33fqnFOn6nvv43989OkfXrx48dWffvnPR6+/+fDL
L19/++qPv/7lb68/e//Pn73zS/ndb39+rT9/9c0HX3z997/89Yd/vvzv+qdP
f3z5yb9+fvnu9//+n/r/+X+u+rdPYrsb8x3Y7sa5Suu7eb6qr997524fXtXj
m/byNt54U66u0veqHrWcvArPVb3fodEdutwxgxrmu3HK83iHh5/Ud5V22sze
gXNVJtyxc4uZcwf/d98qMm8C53fcrpNqYTbr9aob/m3eF3jT/HwVV8KN9OTt
VMkW7SbR5kK7PbT6SZ9o+aDVFf4Friq1nFEVrYUbQ+anyKHQ785aTOJTqAVN
Zf9M8piMczdsFW//HmaN/yKfGocCTrn3isdknLthuxu/tpu0XooYNA8LfWnz
K3hMxrkzNs2rd3texjY1J+X5qvcu+1yrZa6E+1aeo3ovQm4L72u1pu+bYtN8
fmo/9+Q5EnjQMlbIybofrtJI8M8OGp3a3/syBnnups6shl/7PS5orWl06udz
aSqGu2df9oCGp/6bq661ptGp13pY8IB8Own+F3goerKYaZUeZQ6LddHzAgaZ
f22mBI/JfngSz6red9NUqzV+BE0nzZ0wX5rHdtBI+FY9ZwTvabkqZ2wxx2Rs
gic1PLtpJHCl4RT4n3Sr1DWScVYwaJmg+WdqnhzPOPxo2aVpJHMi6CvwL3te
wyNgK3KueUbLGQGDVlf4F7gSPCZk4x0eELAdz/j9Cng0TQUOK/4p3h7C+3dr
J2A4nmlljoZnEufCjGh+FnbfJH/u4B9BUy1XNT7r3hN6lOdlZz5363eVf+oc
CnunvqcETrTdJ+/ESXzK2Xj843Co4ZF1qWj6JIdFvQQ+NX3l93fwj6CRwIPg
samYr9L6+MecKSEbr+p3qn9kzoVM0/otYn4y6wRswnxpmIX7R7hVBC0EjYS9
o+kovFnRqILz7H0nc+p3tdzvJA8Us6WeXavuf8E/wpua5wVdhF7kfSTzps1U
sdY4kb0kzMuZQcfDgnaCpppeu/FZ5OTJm0fzp1AL+gq1wFVF06IHJvEpYH5S
I8E/9TvhcLKWkwp+OXMEfgTdJ/UocFjZuRUMGh45nwX8J0NM3es9artyUu8C
Bg3PKgxCfgoeEPSqe77Y4yoOBX8K/hEwaHimenKqz7V+67oLe+cObit349Rb
V8azCkMlHwSfa56U369gEHoU/LbbrSvjETCs8pvmc5n/yl4TMKzygOA37X3N
DwIeAcOTfqj0O3VPTb1tKpwI+SDUgic1PMKMTPKAoGllL0zNLiHnhV6EepK+
k2bkSb8JfWkeq8/gDj1ehaHuHwGzoO/U/X4Vzkq/Wk5O2jv1HrX7X8uTHWZE
uP+naifshSIejX8Bc4UTwT/Cm9qMaHiuwqxpV7zlirfrKn4ELwmcCJks1PKM
aP1qutfxVzyj4Rfe1HJe9onAoTYjZ6bW9qL5VvOMgF+op3Io9LIDhoofNO8J
OCu7eNL7Qn04bN0tAobjh/s0quM/taNjXVOZK0GLHXoU/HA3h6t6L3Iu1wKf
AoYK/uKOEzBP2lN1zs8uNjOqmANTOZzauzALcmYWd83d3NZ3scazMCP1Hle9
L2OrzGARj7BrnuS2uIt38Ix2/9frw5V/q8i7dYd81nL14GlpqtWHn3m5rWWg
jE2YEY2HIh7hTbnerV+NH22mVuGXtSvuVtljAp8aJ5U5rfMg8FO5hSq3VkUj
wZOT8Ai11qPsgaOXuXcm1UXPCO9re0TIijqHwqzJM6vpJfi8WBd/R8gzK/NT
8VIll+p5W9SrqK9QH84d3jT8AifaLl6li+ZVQa+ivnJeTfpuBb/w/g5zLfdb
wTlppoq8yb3XORcypD77wlzXPVPURZ6pIm8Ctqmcy5pWfCLM9SRPynlb5Kfu
t2IvAk6Bh0mzfzgx+RH2ncCP5s+3wVPsRcAp8LAbHgHDVDzCzhL2l9zXHd+V
eynOoODJOh4Bw8FjzkIxEybpJezQIoe7ZcIkDFPxnAwxb1phr+3svbq3NfxF
DHU8O8zaDvvobr9p3p6kab1fAY+AQcYjeHISTiG7ivXR9Bk8wvvn/jfzTdg7
gre1vibVq7jVNBVuufosVzBo+XZHvxrPO+gl1wK32nd38IDAj4Chkm9PerIy
C1P535krTaO6BwR+Khh20FSYcc3DdTwytkmZIMzCpH4FDFNnp5jPWr8aHhnb
VA9oGVLsV+BE232ypgLPGs5V+grYzky1eKvwqfUo4Bf6lb+ref5unAKG3Waq
yFudTzmvNA/IeSLwqflTruVdL/BTwa/hmbSb5L0m5JjA8w57X9NI/m6dtwqe
3eZoqkaTdKzvHVkjOffq79f51HrcYdYq+VnkX8ZT2XECTq2u6y70qM21Vl/V
i6Bj0Z9P6lWZBeFmk2/FOp9y7hX3zqS8reirzaDM1Q4zpWWIwKeAQcsrrd+r
uKrMVDEbd9vdRe9N4lnoUZs7Gc8q/lfxXORTroWc1DxQx7PK8wKGg9/0RvFG
FWZz57zSNNXwCLrvwEkd/1VvruK5zufJz7WcazwI7x9O5r1/h47y/a/xKee8
8P6qXJI9I/c7lZN6vUrTqT4RsrHOoebhqbt+lSfrnNRrIccmzY6cgRUOix6W
3y96WOOkXk/Va7fvrvJAHf/U+njYx3z4MWdf/q7ggbNbzbq+d6bOXd0Dlb5W
8ab1JeTAbrt10iwIeIpzV+dc4GfnjJqae5N2a4U37UaaVNc9oPFT51nICiH3
Ju3WSXrV+RFqQSOBh7vzs8KzoNcOv300D2t6afe/kEV1jXabEYFDWS9hrou/
I2S/aTM7qV/BY3X8O3tj6gw+ef9XONE8IL9fxLODZybNSL0u8rmbx4Qc1mqt
36Km8vt1PFoteL6uqTBTcq4K/Nf3yA61xrng7UkZVde0PiOCpjKeul7FWuO8
rqmQUUVN5bnejZ8d/CZkxfGw76WdPaZpIbwve1XDI+CX+z0cru13h5k6uepr
pOGvv1/HU8Rc8czUmarksDA7dQ/L+sr+0fAUMcseqNz/d+sl+LaOp14L+1TW
S/OzgFn2mJDnWr+apkU8Qr5pMzIVv7CXhbqu0VX61vuVd42GR971Aj91/HK/
Qi1wLmgq4Fzl4WJuazMyCU/9/Tqe0+PhQchYLbeF97V+d6s1PoXZ363HVZxU
ehFw1nNM61fQcZJ/6jO4Q49X4S/yoHle5moq53U+tX6Ld4WAWcuZCj8Vzwuc
a56pe1LI88PPtf0K2hVnSuNhUj3VMwI/Gp8Hj3lraRxOmqmKLlrvWq3xo/F/
8MyrZQ9X8Gi67MB5Bf8OM74znmJ9PNnta5Jn6vh363c3PEJWT+pR9oDW16ps
qc9d0fP197XcrszaDrk61QOCN94Gj8CVVk/15FR+KrNWwSB4bJUnp+oi3Cdy
rXlSqzV+hPfv7reeq0VPVmphRoq1kBsCDzI/Wi30O8kDGp5Js1n0W52rIue7
9SvwI+eeoKngScGrq/BoPEzFrM34pH41PEJ2FXvUPDCJt6JeRczFHKh7W+Zf
uDfqGgnvF3mT+Sx6oHLf7pAJcg4LeIoardrFO3hb4P/Us3NJ40d4/+5+d/Pw
uf/X3v+ndjw5NRME/MV+J3n4STxFre/YX0I2TqrruST0K+go9zs1rzQ8O/BQ
nEGh1jgUvCe/r+ER7oRij0frLg/FWtNOyAStrvMp+Lzu+Td98z+c/K7a
         "], {{0, 
         128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2834469"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.002813570434227586`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.9971864223480225`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztnLHKL8lxxS8yCD2DMj+BwErFLnqF1QOINdjRgmAlEMqUK3CgQLkzv5UD
R3amxKm1INAkLc655/yqa751wb38v6G7uqqnuupUdff84z//6qt//cGnT59+
/aO//PfV17/9+bfffv27X/zwuz/+5etvfvpP3/zDX37+/q//vvv9b1/94ss/
/tdvvvz3P//4y+fv//jvn/zsf3/5hy/+50//+cXzt9L+1Ibo68rstnFlTuat
NeeubC0ZWnPS6ku/05aNEe8rkZmez8SGP6rNtPwDva6JtdCaB+Jd39KRtvNP
D0pi7mSMJuywhT2I358AItb7R/pN2wwRZ913TfgQ2sboeLEtTk1ideW361sS
OT/HrzmyJXK25FH4u2tNGZfg+VFp2xqnMZhrk8n6veVXb73rzb/TdfK57/rU
xuWZtE/mRImPSTxV5N9AG2yYsPkWxp7MnV3flejlzpU7VisfUcZK+rrvyJ2f
hAicScf61lwR457WTiuHSmJES/ckRzithUQXl9x119I30X0b5tRnO59Ddx62
5bxJfDzZifuOWjizpZfLk84LEvtPbEOJFy2erk+erMUp9tmy+cT3Ks8TomNN
q55P47FEX9pWE/npGNrq28oBJ/15Mv+EzETMPZHrP098aCykEG3nt/KOhFrr
go4FtL5ETqrwd2XeMIcnau3ttmxM4dl674rMG97jNmxJj9si+tzChlrKSTb3
ubtHsMH/J3xuretbuPdJrZw3kc31w3QNM9kj2xDHPyrRtq2Mq7Rx9/dvYYYE
p7ljbaBkHpJ3RGDaFmaYxEWnNq0zt608onVO7FasfONvd34Ucv0wIcMt3U8y
uG1oOSftp+WHXV2U9oq/bcUjGhfdqiec+NO5RqJjEiub80XSrTsLBCXvdNK3
uLpMzn+CCVvz785Dq40yDwq568jF860z57TNKG2SXCPBGDT2a52NafmrbXcW
6HdB5/XEnCi6TOYpBI5S2hAxwh1X6euSO9ZkXCCIWC+Ta1DxpS2Zk3dN1KsJ
W2q99214o1XrUPSdxDC0Lgqf0/tq5QK07i4fF78RucAGu7pFyZ5L6/yt0j7h
qej7ufOXElFvmcQGrVgwmY8QOVfi5+k52ezHEpyWnAEgbIyub7Ri1gasO4n3
3ljDeSNW2ebr6DoJ7TdunX29ZYeTZ+SS9gqf0ztK+D8p2QuexL2u/bf22ibl
V/omPo2oz2zzmcndrmSPzJX/1F557o7bmp+Wji07JL4b8EYi9jjc9dLi6RKN
qSaptaYmcxwa85zaTJ6vTnSnsb3S/qRj6x70LRubrMG2cpkNOfhHin00blH6
Eu+RWHcK/1t0Ky9rEeEzE5+s8FTiQuv+0efOK0WtvKyVg7TeqSuDQm+Jfdty
baV9wn8yr9mGYVyZ3fYb8qCETzJu613TNj9ZT1Bo8g6C29flsy32teICnbMT
+UVLNpdaeI+OdzRtkOFEyVy5a/zW3aIN36Wha00bzhO+Mfa1bD4ZV5GHlv8W
FrqFuzbkxQoROPZW7uz2JTDbpM9/C9F4aUPso/3qqW/rORGntuHktxPhnxP+
iZ2/xR5aMhN5x4bfhPxPPtv2ggm/R6yvRP6WXpN9vw+/n3PSOk91mudb55cm
7aHF35U/0XfSH7rnr9zfrm207uES68Vt737vrvU9LldOIh614uA2bLCZaLzq
8mnZT7KmaNsm8hr32wUtjO36osSP0Rh18t2549LfQiHwIYGviHt/GzB8gvOT
75NsIBqHEPlLK49I5m3yG48tnzmJvZMcivCTCp/JeSNwiDJWa8223pEyFjMr
f6PWuZSE6JiVyKO0Sfx2MieKzO6c0PuVpzbE2klqgEScnVxTiWyTtVNX5tb8
t9bsZL6j6LvNbyt9T8+V/OLWPCttiPaKPG5OSuMN1yef+BBrjc4F3L6ubISc
b8TzrmzJ3NLrepJa+dEtm7w1t621SeBPhX9CbnxJeBLrV5GBzjEVGZK+k7nw
LTm3vWtar0mfQ+fsrXlQ+LR4bva9k3GwtZeR6LgBX03WQGie22gb5mmNleQa
rdpyIqfbxh1L4U/8dmV7O7nzkJx1PLVRnhO6bIsjNE2uI3pu38jTfb7BXyXy
0PmIW1to7eko9Pb11aJb+RSx7pSxtr3rVo7v0q29uc3Usj16PjfEppZ/I/IR
Rc5Tm9ZaI76B+cb48qTWOkr4T75r4l24+Or78C3xSV90y+cnctL+nMbqChHr
zr1DQayvVn7X4k/YRiIb0fct92U2fJf1Vv7yJPq862YMRseC1liTeYFCxNpp
2TntVxU+rXtthC0lbZSxvBk802a/keCWRE737rnSd8O6o+28RfSabY2V6JXw
oSlZa5N52SkWtPIRwsaS5y1ydX+L36BzjScl+Vord9vghzeMm9jzNsyzTX76
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
ebOPSnw7rVdLx83Uyi8Ieeh1oTxP5Nzgt4n4uM0eWrhRkeH0PDk/f8smb/lM
Oq9MZJukDfhhEjMT86DI7NJk3FHGpXPnFhH2cHqu5ImtmqTSZvO6o+OgK38i
54nos8fb8jvinJKib2tOEj6uXhti/ZOIfJnwP8S8bfM/bt8E024bS5Eh4ZPw
VNoT+/5KGwWHuDKcxiLuvysyJDmv0oY+i0XPya0cwe27LfadaDJPUWRIZKPx
kjLW2ynZ02+df2vJ7PJ3Y597V/QWJqd5nuZKoRbefvt63JbntmQm+CT8E8xD
5DKTv0+y3boL02rjytYaq3W3MbHPSZu5lZ8SeGzDukvyXOIed9K+5f/d9q2+
k/OpvF+XJs/xtmojSXv6vnMij9LXrecQGC85c5uM6xJRnzm1oe9sJjITeDjJ
SVt6uXK2+CdjtcZ9UlJbSGSj7a0VF+h7l7dy50SeUxviWwSJjrfm2aWkdqfQ
Bl9N9/Vm5GOd/zmRW+uga+90HamF7ZW+Cs+Ez4mIPDRZX0Qc3FYnoe1WmStF
zlZfwh+24m/L926IR7f8vMufmPNkHSXri/bPk3sHLp9JDJnINlmfdH8T3zFI
2rSIxtg9ST9/XEIeOnd4EmEPLQzs+m3lDOGGnH2DDN83SvLQE0/FxhQ/T9/F
SOgt9a4TvbF2R2D+W3uLCU3mjG69dNKWiJrMR/p9mgf6vkNr/pOxXJk3xI7N
dTZaF2I+XT50Xb01DxtyPWLN3soZ34gB3HrIZC6cyDBZT0ioZf+uHW47P+zm
dBvebyu3bb07ZazP0/Tvy9yK727fRJcTf+W5Qu5dMxoD0PjczQUm96Bb+tLj
3uJz8j+0L3X9PLFOJ31LostbsDqh4zbMRuDYlv9U5srFLfQe1qkN4cOT9q21
cMu3K88Vcu/O03ftb9UElLFuvSMab2+wbUJ3l4jztEp7Wv7JM1cb7uu11ohb
o5hcp8o8tN7LZOyexO0EH9rXtcZtxYVJfVt1Etr+aTtRdKHXe+LPk9jqjtXK
bZPzSK1YQPvGU5s37oW5NOkPb2H4xOZbduuO+2yT1EkSomv+7riTd0kIPL/h
fJHCZzKnm8zNnzR5v/7Wb1fm0/NWrCdsRvGNxJlqOqa0qOV7TzzduSXygmTf
weVJ13laPufURnneakPUPVr5rzJWIrOC6xJq+S5lLCIGTdokgU9ObRI/P3nG
xp0HZU4Ie3DXzi2/ncic8KFrLLfwHl1bONHkXdcWDlFkaOGuSf/fqvm4MhBE
5zvP9nSuMVl32naeZ5K2rXF3XJfnZB6x4WxAi2dL5knMrLQ/yZPcoWjpNRk7
FNomz5OStbnhXM2JJvOvlu4J/m/pS+QpylzR+0dJ7rnNtk9E1BAI20tkpjHz
rVrNhjrShnP4k3krgUNccuVp+S663qiQ62OTfJPAooRtb8CxiR0mucCGms8k
Xmrlm65skximdbZz0l/RNRlanoQPvT+y4bxWK39JxkrO6xJ6KTzdsSZzgbes
OxqfK2MlZ++JepE+A3cpyUc21ABvnZVq4Xx33Ofzlm9U5CfyVmcOVH1bsrVy
T0LmDevuRIntKTwnc0831rRi0K38msYPLfknMfatc7bE3gGBtyf9vNuXaO/K
3KoXTa472ue0/GTrPBKRo9E1tLfUIYn1+MY8q0XEmUyXiFqH234zBn6SEgta
69flSdfqXZqcB1ceGnufxm3ptWGtJXW8lt/b/DuZ2xPdipW38L/Ls/W+Epuk
z88r1Lob0jrPQPu6JM99S76WjOXKnOiYtEl43joz0MoZCTkn49SkLqfn7p5+
a127fek9IGWsUxsiDyVqLK5sbr5G69iyyUk8v5lcDJPkL65sdC55arMhZ0l0
meTTIvr+SJKz0BipVQfbgF1pfO6O1dS5TbdqKcS5oGT+J3MQwm6JXHsbTdrh
5NnCDTldgqVv1T0m5aH1mvS9ST7+pGQfTZnD01huX4LnLSxB54xvtFWCv0Ib
9nRofTdjFdreCFt1x3LPVtH+QdFL4XnSZcOZIvr+Vwu30NjG1WXSVhP73Jaf
0nGqJaerC/F+W7iU9m/JvCU8FTkTXWhcSsuZjKXsRyhyJueiaRzi3rGaxH6T
c+ISsS9Mx0d3XMKGW7K54xJ3Bgk+LftP5nZyjU+ui+dz9/xJEgtc2SZtQ1kv
p7Wz7SxEiz9xl/xEhM+/5UMmMW3SPrljnuwfEXfbFd2TOaRzDWLc5J5jIsPk
ebxJnDxpkzRtqz0qpNjAG30Inb8neXEyLkGbZZskojabyHArj9iQQyXUypEn
18WkzASWvjVXSV86T6Hzr1t2S9gq/bulO/2dosnvPySYfxtmcHONZxviHh+R
HykyT/q0bX74xL/F88Sf9ld0LkbbKk0fqYbwJOJbGe5zohY0GbtpHEvoQrd3
aRsGI2jSBybnIhJdJnO65O7tadzJ+uqtfIS+NzTpWwj848rgyqO0T2Q48W/x
bI170v1WDrUNP7jtaX8+ieUmaxQtPrfie6smoIylPCcosTE6dyPWiCtDi+g6
jPI84en2nYw7CdFYMbFPIibeuttOUCvfb/F8Pt+Q7yTyK35+gx+jMVuiL42B
35KDtHjSsrlY8UTJfZmTPAm2p/c9N+d9G+RJ5G/xSXxL8n0PAk+6426zsaRu
fCuWvZ0SHV2/2lpftF4KJf5/Mu9LYvpk/VPRJSHCZ57aJ/PWypfdMxWKbG57
RZ7WXiFtS5N5zQZsRufp22KrKw9xn92Vh64PuDwVIuoGSXsXzxP4P8HJCTZu
5SAJT0KGFn+Xp4v3Ekowxlvq2E+ajIP0t62U5wof2s/c8vmuXok8m++wb6iT
JLQN4z2JxmYKJecqFdkU/3+rjt3CqBtsnogRRO5/q+5EYHUi90n0dSnB/JN1
EgIPuGNt8z8KuT4huf9Oz0mS10ze6UvaJO0VovdEWrl/4qvp+DupY0s2Vx7X
5xOybVibRP2E4JP4eVc2105c+W/dw/2o1PqmTSsPavV1ieZJ14tacrbat2oX
t+anhasVXzp5lpu42z6ZC7fitaKjK8+23yf5iW8auG2U+XTnXBlrkuicbsOc
EHkWURtpzYmLXQn+CU8a7xF9b+Xyri6Te9aTe2qTewdKe7eNK8MGv3qSOdFF
4X/Lryr6ujK4st1av0r7BOMlPAnba8WOSf/vUrI/cuKTyKPwJ3BLC9sn71Th
SdcVW/UQhT/RxtW9RURu2LL5DdigRa21SWAJGpPc8j+uju6+DL0n1cIwyd0f
wvYIXEHHwZZvb/UlZFB4botfiQz/B33NmTc=
         "], {{0, 128}, {128, 0}}, {0., 
         1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4592009"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "\[Rule]", "0.13600973784923553`"}], ",", 
      RowBox[{"4", "\[Rule]", "0.8639901876449585`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzVmEHKrUkRRB8KIm5CnDuycdqNW2hX0IKOBKEFm545cOgm3Iq4BXfgEpwK
Kji4iqURfeLUd1+B8velvqqszMiIyPeDn/3q819868OHD7/+7j/+7/MvvvrJ
l19+8fVPv/PP//j5F7/85Ee//PY//vztv/73z7+//suvPvv+H7/36Z+++uSz
9u8f//53n/75b3/99Id/+M2//U3OaX9PYljFRt7bvqWNgZy/eruRf+P81VuM
/Bvn38RAWxeDQwysEuyt6m7UbtWb5O2n/R9eVvv7ac8qV0k8q29JvyfnJ3lr
95C+sHmA1KKt9SlvJM/k3qf2r3Rk9fZ2j+HB2tjaRTC/8kKnb5N7Df+2OtP2
RYaeJvm3vZPt91o8r/xP0sstNl6/Pd112tPWuuWQ5F5Do1fYTnJO3njT87Te
z+ZAEmdSO/vvJG+tjpO6t3lO8rnCVXLXqr7Jtyutt/XrJp+0fux1tXzb4sH2
cqvcJtpnYOOmZrU1auu7qp3hG41ZYzUPEt/V8mpSuzae1tOu9JG8pa2L4eve
zbuuvJyhX6tv2/hJX7TaavT7CmN2fox5yvC0p/WUL131101vZnhFkpM2ftIX
Kz950z/c1JEEDy1mVtxyureNn/g0A+ervJG3r/Bv9wjhCmMWW3nm5Py2RsaZ
bb+0v7e9SWIgXq6NYfW34U+MWa+Npz2/7fdTjWzfuMJJ8u07+AHiOU/3trNk
8u2q1qvzE8wn7yWL1JTofhLPqgfberXxnN5CNHeFKxvbqze2mFndRXxjUve2
Xu0biV60/LOaF1pMrmJIavTUHLTySC1mCLcTz2lwzilXRt+1bzT8f/veFScY
nn/FLUl/kX5s30hwZejsKretFzqt1exA/NtNn7nilrZGbe1I3k7nGBp601ev
cGt4ckN/bX0nuG0x9g7avcK/4cfafCb7k34x8GbXIsFk0vsEbytP8lTvrzRx
xben/CQ4t2dJ2/ut+Od0fou9hENIzCuPYXOF3VOGD0nykLy9nS/It6TWRO/a
XNn1WvW+3ZurGeqmJ1zl3PClrYa2OCczFPGcN/mt5RzSL8Yc8RQnrPC2Oqfl
+Zv5NzzSSoPaXjBmLmNOIV6uXe27jBlhdRfhcIMbTzk3+NbwzG0ftfn/5qi9
q7MGbld5JnetvPSqRoZPeGrWeM1DoqGn/cQDtzpO3mXXetULRC+M/JO6rN5o
aDp5CzmnxaftjVe1s7WMaB/JIeEfsn+luTf5YcWBq5hb70dqkfyerFWvrXiD
zLarmFc+f/U36UfC1S1ODPwTfjZyRd7S5sTmxlUeVnPWqqYtbk/5TxaZj5Iz
kz1GXydvvMm3Bj5Xvu6m3hH9tXvT3kO4tMVzi0PS463WGJzWYmCVnzbmFQ+Q
upB4yNttPiT8acRP+IrMSja3rM5M9j/lnwm3J29ZcV2bt9WcZXiV1dtXOW/P
NPzkql6Gb1ztf805ecupjga2V3lbeQAD/2S1utzOgESPkpgJnol/e13Euyb9
1b6X9D7hz/a9NzUuwc83xeN/LkMLTue3MRB9eYf3rvSLzOYr30u4tK1p60Vf
97R4WPkHEv/K89/057bnIZgx5q/Vt2TOWmFyleekj1azXpsrA1dGDHbvrLxZ
q++2dyJ1JPuTtxPOX9XR+NbAVcsDK61sa5dg254RnsJ2y42nZXjdpO4kt2S+
MDyD0fsGL608A6mLkbfWj604LXnXas/KD5C3G56nrWmSf7u/bGzbs8Mphytd
tjX0pl81fOBNjCX1WvGJge3Tvcnvydtb/Le8dDrf9h5G/k85JBzV5n/Vmy1O
VjxDcnjTH7a4JXhe1aL1FSsuJTGvsEfqdfrWmGXaGcT2kATDRt5aDKy+XXFd
gufT76RfVm8nXEF4z+AcY94kvGrwz+q9xHuf4idnrno2wUmLq2QPqUsST6t9
xEOe4jS4hdyVfGv455Yf7Hnc8F32zLWKwfYnKy1r96xwRfSFnE/m6+T3lU8m
PNBycvveNv6Vt0lqZM8a9n7DN7b4bM8k+CH9m+RhxZ+E38g8a8RwwgPpR8Jp
hB8IT7ac0Nal7cH23lWuVvU65dbwxit+a/sieSPh6tX8YnBUq62rb5Mc2vzc
xkA0i2CJcGD7luTM0/nJ/uQcopvt+S3ntGeuPEDyrra+JAZbd1qebHNCsGT7
Q/KWVT6NN5KcEGwnPWtrja3pN73BzXttvD0Vv72/1ayEfwifkLsMLlr5q4Sr
296xudqY3dq7br53FdsqJyseM3rB8Aw2h7R9Z+ThJv+3HP6Uvq9yZfBncqZx
zqlGBt7IfEH6xb6L8LM9cz3l1VecufJCSW5Xnj8539ZTgqVVvYweIXcR3iD5
MTBA8tPW5Sl/aOCqvYtwiIHJxC/ZtTYw2XILiTO567TnhIGbenqz74x5pM0t
WUQ7bK91itPw1e1dtmbZumbfRfa8gycnNV1hhvR+Ek/yra1HScynu9qcrHzR
yvO32nrT+51iaGeo9tv2nJUPP8WwwoMx67U9Qn5/iiftOSjBIVkrDX09s52/
TvEY/WK8/VSvdiZd8TnRcdLX5F22P19pR1LfVoOSM1f+3PCfpC5JTtqcr7h0
hc+WM1f93s6trSdf3UX8hjGfPjVX3uxfcmbbm6s+Jf6QcALBw00tXvnhlR9Y
YW/1bVtfgiWiZYZGEwyQWrT91ebQ2GNg25g9bb1Iapfk5LTf0LLWk6z4Z+WX
Ppa/Cf6TnLSYJ3k+4WHl+VvtIH5pxTPJmUbOb3r+Nv5WC8iZ7Vp5udUcR2I7
YcPwoitv3MaZxPYO3G7o8k3f0noSUrv2zJWe3sR82+9tPkktTt+ucGjjluj+
6tuVx7jZ7/bcdHMWI/W130L6cYUfgslTPMmedrW90J751Iy2OrOdEVaxEU08
3WvPjE95+JWfX/GS4feMtfJv5K6VX2r19/XMm36A/JvAKWZj7jA8SRL/U/lP
cmLr2uothDMJNgycE0+y0tDTmW0/krl1pUGre5OcrPKzwnCCjTb+lb863dvG
vJqFk7q397ZvMebrJAbyreEHVlg1NIXU9yk+bPmkjY3UhfR4sofU8d3mR6J3
tiau+nHVU3a/GBzV4nw1G9ozmo1PY4/R14aOrHScxG94sJYTbL99c34keDvF
1sZ56muCvVMMp7tWf6/wb8dpe9eVBhkYS74l/Lmq+4r3VrpjaJM90xH8rDBD
6k7quMJqq03JWwzcvt678oQtd61wbp9v+xbbp9m+gnhCwgmrucbgqKSmK04w
+p1ox01dI5i3e5/gimhTgqWbfyc4bzHfnpnkYdXvN70W4fObvWZjhuTT5gRS
L5urb+aK+AFD320OT/JsYOymj11hnqx2/rL50JjdkrcbPo3wSZurtqb2fERq
tOqpJLcrXk1qZ89QCT6TXiAxn85P8m/g6qm/jX+vSDBm6FSCKwPPN7Hxzj4/
6VniUe2YyfntWwyPnfRsm+e2FqRnT7UweOzmLGDMWcZc9lTeDJ55KoeEE5L9
yXsNn39ahn6tdNPuKcJjK99CZgo7ziQ/bb0SXlpxcnK+jfMW/4Z/IHkjsRnz
/irP7btOWLK5pf09ucvwQqc9p3NsjLW1eId5jfxu+yWyJ8HkytOusLGaE1c4
T84htSCz0sqHJ7ltl+1tTnloYyDat9JNw0uQXjjllsye9sx4s3bGzEV8EclV
e/654/9/PKf9LfcSnLczoIFt0gtJ/kmeDb+RnP+Up2q9NOFqmweMXBFOS/JG
6mLzxgoPJDZD08nM1Z5D8PnUbHgzNtu3ED5pa03mPrsWSb+QXl7NAi1vrHSw
9R62Lts9eHrLCf9krfyJ0SMED6s55ZQrwm/2G1uNTtbKwyTnr/o3qZ3ND0mu
DD55B99+qjXRxxZ7JFeEw23/02Iy6bWVnhr+sI1/5U9W+1ez56peq7uS3jzF
ZvAY6WsST1LTNleru9r4Sd1P99q6Zmv6ClcrDLS6ufLGSWwt7xmzA+lfomXG
G9u7kt9XOTzheYW95EybE1a+l/DAyp+Tb4m3bzXF+Hbl01bzYLJWHrt9C+Fe
u3b2G2/yIdEmYy6z56DVvUmtkz0kzhZvpzqecLKaxVqcn75dzU1PadbKwxsa
tJrBbZ+2wozhgdvV6pSt9cSTkL9X+DS44pQrAzNGzm/OHW3t2nyS2hn/RvEO
ft7oCzsPKw0imrXCMMFAggfDh7feb1WX1s+s8tmeaXs5u8eN9668h8HzRsxt
352+JX5+VaNTLZK1ynlyPomnzWfy+8pjrPqL1IXkk/hkm2eMOY680fAARl+/
LlvvkhjaeYHgNnm7oZtE99scGjp404e3b299kT2/kByucG5jcuUHbF9N9Drp
NcPDG3Vv327kre3Zlc8n/tCeWexeSGpxygPx2AmH29xFYiN4MPhz1dcEt0/N
BbbvWtVl5YtW/jn5dqXXxlxGPInhkdr8t7GtMNzy/4qrE1zd7B0jn0ZNCbYJ
95L9Bn8meCM9bswUN/HcntnWkfh5e0YjGnc6c9XXRn2NfknubWMjvER6h3j4
9sybPLnSNTIHtb2QxLmKoT1zxfmnurd4MHxCyzmva+U/iccmvdDqguGZCc+0
OG/raGiZjVV7jiPnJFhaxUw0rsXGCj/2XLPilnZ/ywMrb2Pn0Mg58SHES7ea
QjBg85Id88rbr/S99Vpt/gnm23jsmegUg+2pDC9K+p3goe3rFe8lOT/tT761
Z4dVL5NzWgyTPaReK/4hempjIInBjs3wrqeaJuum7hvfkhzaOm7geYXh9l0n
zBB/m+w3uHrlvVdzWZKT9tvVXLbiqLbXyDy1quMqnyTnJCenZfQj4V5Df41a
vFveVr351N+EQ1Za32rNql4kNluPSB5sH7iaPe25rK3jKp9JbIbPIX+v6mj0
+80a2TmxZ5aVvpO+W3HOTW4n2LD9QJvbpzxV4tsJTpJ+JL2Z1De5q43htL/V
FFLfZBlzqK2zSb0I3lYz7KpnW6waM4Jxb8sz76DLJP7VnJLgdpW3m/Pjqr+I
l2g5Z3WXgUPCXac9pzwQ7217RcO7JvGvviV/J1ht+2i13+D2Fler3rE5dsW9
bQ+Se1uuIJxw+rZ9r60ptkYkeWj5jXjCpO6rPKy4JYl5xVFJDklvtmeu+H81
693ESVt3Y040akF8lMHPr2vl5Va5JZqS9HL7O5krbb9h+PDTG0mf3vRgBkcZ
Gke4keSfnEn8502/fWaCDtun/cnv7b0rTTHmCLtG9huf4slVLW72i6E7q1qv
eGnFG4S3kzNt3CZ1X+msgYH2jaR2q7eTnJN8rvzbTb93U4+IZq281k2PRDDT
zmgEt0nOn+JDG9uneG7ijXAyqZFdd9tn3sSJsZ/gxOY3e9Yg/Jn0rM3bq94n
PWvzSaJNrQ9P1sonGzUivZ/E0GKMnEPq8jH6UsKxSf5Pe8i3pI7EP9h+4GaN
2t9XeTB6ZIUfw9u3byT5NzxYm5/VbGt7ZnLv67c3cb6aKVoPSfJ5OvPDYRGv
0vo04k9WWF35fNvrEt5IcmjwBvm9jfn03rZehpd+B/656XuTWrT8kJyz6nG7
N1decYWrtkdWHL7qx5YHVj6tPd+or+3hV2e2GCDnrHKY9IXBpStusecFA4cr
zlnlzeCQVisJ5lf9ksTf5q3V+pXPMfCZvPf0ljY2u76rHkkWmQUM70owvPIS
K/1qzzd6wfYehPcM3iC5PeUtyedTb7T95FM+x577yLxs9C/xLSteJXp3c1ay
5x27jk/NC6tvSWzJmat+T3qczBo2pxHNTeI/7W+XgatVbg2NJlgl/ZLkn+Th
pi81+GSF25VGr3jD0IindNDQTeKdTnh4/X3l+VtdJv3Sfrvq6yRvtncieVv1
WsszCVYJ/5xq1MZJ8GBgsj0niYHgJ/n23Ty/7ZEM3SS4WvVju8f2Xat+N/5+
vZdwl4HDU05aXNl6elqGP7H5ivSjzQ9tDm/OTUYMSX5WGGjfuJplDG9m88/K
YySzj8Ebq5y09bL7lODHnsdvestTHtrareav1Vyw0rVVzom/Mmp0+rY9c4Vt
grGVfpEzE+zZ+CexkZyfarfyS4QHWmzb3uMdPE/bay22DT9PYjb00dA44vdI
zG0O27q0tV7x8Gol/ZgsQzdX/dX6qJaj2lydljHLrHp5xV1PzRq2ZzZmuhWv
Gjkk2t3W6PQWQ5sMv9r2SHKO8d6We2++3eA9glXSX6ecrPBpnGn0eOujiI7Y
HtjwPIa3N7SPYO8UZ/IWsoecueoLwtskNts7rfpilf8EA6u72j5dedSbfnul
F6sYDM9jeIkVBlY4OXmS19V6mOTbJIaVD1/hKuEKo2dJD7bvujkjE++X4Nbo
U3KOgUlbW8n8Ynjgd+NSkgdyfuuf38HXtVhKuHfVj6czn+LD1Tyyinnlddu3
PKX7qxnt5lsIZtq3tzhceaqbXGpoGXljwld2LxM83/RUpBakdwg3krytarGa
TU45bPurxcOKn1teJVha9eZTXi7xVAQDK8/f9khbaxJDcuaK01YctdLcthcI
rtpz2jMNj0difl3v4J/JPJi8i8wjZC4jPs3wbKTuhgYZ82+CB5L/lR9eaffN
WXjlJUichpcz/k54gLzLwIaN5xWHJN4y8Wwrf9jWuo3t9Puqj1qOtbUm4efk
/FaX7d5s35Lk3+BnkocWq6u8tVi9qZurOSjBSVujNodP+QqiZYTP2xq1PtPo
BUNbiZ4S3jD8GOmdm35m5d9Ir9k60vaOMUcQfU84hMSZcAjp2dNazQg2Vlcz
wkq7CW+vPNVKO27qO5k7bnLg6r3JG4kGkZyQucmOn+CB1KKtUYvhtheSuhi6
RmIm2CNeK6npKZ8rj2fXrn1juwiHtPq7yvOKJ1ffPuVL25q2OTRmoo/9b8IJ
px4hPdhygo35lXe96flJDE9pNMHwCQ8rPWp75N36t/Utba8l+w3+MXBCZs93
04gknlM+V/rYzmgrP9Z6DLu+7b3tftKPxgzVxkCw176RaNaKW1b9u9KC1Wxi
xEn0y4gzweHqvavYiLcxMNnmKuGWlQ9vNWiF54/F56/qu8IY6Z0TllZabMyn
qzNJ76/OJHloPS3xigbeVucQnBheYjU3tf3VejOijy2HGDlM7l1x+wm3q9lh
xQlkfxtPm3+DV29yOPGZyVr5WFK7VWyrtyTxkFonZ5Iesf2bcU6iR6c82G9P
8k/8g+HrVvNIi1XSIysf9bFox6qOBFdJfxn+8+Y8+87cstJQgj0Dz+2MQPJm
991N/BPtIPh/yuMli+RnVd82NqOOxr03ueupv5/ilnb/a40ML23r1wljBuaT
Mw0f295LcHWzdqseIfgkvpRw9c05i8RA5qxTTuz8JOff5CLCFW38bT6TuiS9
QHqWzGU3dT/RzZtcetNb2r7LwPCKB1Y5sbVs5WdIPlceo+VMIzbi695tljFw
e8p/i8kWt7bPvKn7RjzGXW3frWYTY9awvc2KY21crfKTeCRDr0+xtfGstOn0
FpLzVZwEV4autX8nWCK6eVP3k3NW/LmavwzdWWE+6fdkkX5ZeRiCvTZmkpMV
/7T5ad9rzEeGJ1n5f3KmMSvd9ISrPavebH8nWkBqkcRD3mhjcqW5rU9rf1/5
c+I3Wjy/83z61FyZYInw3gdhkd6/iWHiGVaxtR7Ajtk4c3Uv0d9T/O17ye9J
Dlf+2fZUSZ4NX214QsOnrXKe5IR4BpLztu9WnEDeaPj5le8l/mqFTwPPLYaN
mZfo7GreOdXutIcsg9OIzt6ckQlH2Xpxc8Yh70pwRfBp93sSQ6tTxltWupy8
6yncrjQx2UPOJDxDYlvpms3PBIfEE5JcEQ4n+20Ps4r/VIsVVpNzEjwYM+mH
YK28LtFZgplkjlj5qBV+ntKgU8wJTlb3tnkjvm41K9k6tcrn6S0rv0Q4inj7
5I2nfBLctrWzPT/hKILVlm8JxpKY27kgiW019xkzdVvfFXe13PtunpPMNYTr
yAzY9pQx97W4Ivhv/dUK86fzDR00ZrckP+2y+yjR07a+Rm4NvV7xCdHB1gPb
sRl+0vb57+D32vmizX+iQS1m7Fwl+G9Xi+E2z6d7bS93uov0ke1JVp7/9O1K
R8gMsuqLd+A3wyPZdXw98ym/R/TX8G/tbE72r2q06i9jPlppuo2x1d//i/v+
22rz0M5KK0yudI309c1Zw+jfm280dO30FiO2ladt8X/6ttULG9uEf0huW65+
ql8Il7Z5NrwT8RVkD8HMO8wm5MzTtzc5zfbPJA/EC63uMma9VU1XtV5xzooH
buZzxdukv4gfSHB+Oue0p10rjT7FacxHBn6emjXavBl7yHvbdyU1tXu/xd4K
M21PER0hXoXsT+pOcNjeu+pT8m2L/xWGDU5bzZI3/a3xdvuulUaQPLf7DQ/c
xpYsAw/tvcnvN71WUqPkjYbnv9lTqxmf6Ijh0wwMtHkms8YKP6R3CP+seOwd
8G/PO+3vLT8TbK/miNVdCU7e2SOteJ7MBcZ7kxhOe5LV5pN415bP7bwl/dvm
2eYWkoeVHhl9Z3uPVncSzBiYT/KfrJbbiZ+0PdJNv21oNOkX4m/bOFf6a/hJ
gyeJL0piWOFz9W8vK0wafEswY8Rm9EJSR0P7jDfexLztscldK52yz7zpeW7i
v43Z0ERjTxLPijeIBpHZcNVrtn4Rb3+TYw2uTmptaBPB2yr/JA+rmXHFt8Ye
u9dWOmXoHcF5gqsWk6R2LXet5rtkrb5tzzHmixWu3mEmWmlxUi/iSVa+xZgv
Vmcmb1/xA6nL6ZzX3w3OWZ3ZvmWVfzv+FX7smcvgvdUMQjBg6wipaYKNE5Zs
L0HqZeua0bMrPSL93vby6XeSW3uGSnK+6kGDH5IeXM2VCZZW+riKmcwpxhxk
5KH1YIb+th6P9ELyRjJLkhw+Vd8kDyvfntxlzzJP/d2+l+TTqPVqFjNmGZIf
8kaiZTe1bzUftRgmc2WyZzUn3tS4xEOuuC7Jebva+G2v23oJQyPs3rH9j823
qzwn55N5zdZ920vYmpL0Ozkn4S7CJ+TvtqarnK+45dTvZOZdYTjBFfHGCZYM
bBDP2fJGUl/jvSu+anOY4JDMoaueNbB0U7/ezUvb2ko4quWcRC9Wv7d9RPqF
8NvKD7R88tSMQH4nObE12sCAkVuD5w19/Dt5/KiR
         "], {{0, 128}, {128, 0}}, {
         0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "5085210"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "\[Rule]", "0.04797526076436043`"}], ",", 
      RowBox[{"4", "\[Rule]", "0.9520247578620911`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztmTHOZVcRhEdGQmyDhAXYuS1WgAQSuZEgskAyASIjYAtkELEA1sEGyIgI
2QS2ILgCtV01VV+f84a/JVtvnu47t093dXV1/9//2a9+/IuP3r179+vvffW/
H3/+mx9++eXnv/3Jd7/+x88//+KTj7/4zlcff/ef/77+/Mff//Szv3z0p0//
/rdffqp8/udff/TZn3/w8Wf/+OQP+DPKb6fPyrsSH9x7Kd8rd0ni03ovkd/k
7i0MEOe0fHBjTsSzhZMkVq1aO4VVmjdcn989bPreNeIcghsT31z/iR6n5JHo
a0kM3XM2++aH9Pm2mBD9IundSu20MJ/UCKGvnu+6AavPz65vLZxP71XOT+JJ
a6Gk97n4Uc5R4qb4ltT4m91jCY9t9rvJ/6Sup3OU+Cj+KLVwShsrpuRROYeY
m1p5TzSMEiuXt4l6SfoO7WdLZ759zjUSof8VvCW4Suo30fOTz9O9kj4yfb+J
jVa/PrXrS/Rq4k9y9ymGyZlJ73B9a/l/w/7kts8tHmu9N9EMCR5anDD52Ypz
sv9xfUty19KKLQy7HKI8Q2uJG3jMjUmrNyV6ie41b9Y1t15OYZuowda7lH1C
oucna/WmhMNbPiTao6UfTu3uiN7U2rkReZzOvGHf8iF9Tmoq0XIutpP5UXlv
q68pGG6d03pXiw8T35IzW7tKt8cRfKvkOqmXVk3Rc5Abn7fd0ftptqQeb76X
ix8CwwoHErsR1x/XNvWY6z/RW2/gwE2uvmHGac01m/6/irn8edrf/zaiNyVa
kY7VKc2vnD8905rX3HdN8WlhJulNim+u/y2dsDnjKFhK+J/w/1U+J1qX4M/W
PsrFiVILBBclXErUiBIHJT601k3OdH12OTDBJ4GTVr6SOxL87+6vklnpFJ4J
f1yt5bHAbK+yR0pqJMFtUl+tmiI4YXM23NQVNCck+5zWLiiJGxF/unfQ+LzB
kplu+r6lgT/UXNBc7daX679b79PdFTy4MXHfdUr/TObuc27Tojf01rf9z/vt
cxK8beZ6usurxzzRzK0+Phk9eya6lOAQJQ4uDonZKtlhtqylVU759or7n2TH
tfkuQnO2/DwVB2IObfH5FPNWb0p2Bcq9FEvwkJzpxqelV6dnCD2zqfGU5xWf
X33PQPCt8q4En9P5tE5uGaFX6VlpirN7r5bOdGu/xSGbnycfbt6HnNLttM90
7uh9Al13bj9t5U7xTelrRA0qcUhm8BbHbvaUFscmMWzVAmHEfHHKiFom8LB5
39aewT2nFdvpvslesTXjt55p/Zbg0lbfOaXTFDvVj9yY03/fSXL0Kndx/26S
4EE5n9Z17s5T+b7FGwR3TXdUYrhZ10ncNrk0qX0ip0lPPBVDxVrYSHaerXmf
0Eub9ZL47J6vxN8952lJfbm+JbFy+1QSE+VM5beJKfXl+tzqj0+jzyc4nI7n
FJ9Ts1KLi26YgxJucTGWYGAz/tO96J7b0vBJfGitPsW2FXNiNkni6d7X7Y8J
f7r10pof6V0ZMZu4+Uo0v4uZlrX6MtGbXJ+V2bm1H9vs10QtuL9VsOTmUcGY
61uLP2nNpsRTMaV3EHfZ5LHWnJKc6eLN/X56plXvyvmEtpmspWmnexHamI5J
EreWrpviSWiD6Y4tzXYqp4k+ce/l+kBr3aS+3HNoTUXMDm5s3e+JvXFS7zfk
NNEtLQ1A8DCtUTf3Zgn2WrOPm1MX/zfMjC6fTPlt4erm3chkyU5gOnOzZxG8
1+qJhCVcpNx3s67dXXFiiZZwe9z0Xnp2c3He8i3RIa28J3FrPZ/03wSHiQZ7
fu+emdQ7kd8Eey19RfCJmy+6fhNLZnm3dyTnJLht8UYrhvTzm2dOcU5qefO+
Lh5avyXu1cJnS2+3emUSk2RmT95F5DqpNeW3NG+0Yjvdxf2+hXk3/jdYoq+m
c+j6bd13k5MJ/1uaNtnVEPXV0mDE/jDxrWWtGXny/4Z7tXpBa/+22cc39wyJ
fnBjrmBAqa9WzIke3fJfeT6JifLb1l5FiVurTpUzXQ7crOvW+YR+bs1Zrfcm
PLa5W3ua2+MSTdLSPMS7klzTs/yUO/eZG7SEy40tH1x/6Hon4kDMGsTzr+7/
hCvF6B1y0uOSXpD0smRucrVTSwcmOXX7F61dCSN6ffKuRBMmRuztE314apfS
Mtr/ZO6bznTz7vpM8Azdo1s9Pel3bo5cnCj5PYU3Qo+59/qQZsNWPW7WVCvO
xH6Y5o1WvZy6Vwtjye5i4p9Nc2Oe5IvgmU3/kzgTWE3yS/RfZQ5NarA179BG
9G73zJb/7ufpHOJ8woi92fN8uj9O73Lve4P+TPDWqqkkd4pvCiY39Rito1y+
SvCpxCTRddP5rby7eFD8aeHcfX7zvUnukrpuzW6JTlMw42K1tS9tcULSg5Lc
KfGk9yQu5t18EabE54b5MalBok6VZ4i+nPjv3sW916nZyv3t816tnQmtA5P5
Xcl7wmPEbtDVn0n/Svg5eS8Rc0IPJ98nc2JLm7XyRWDAteTuiQaj79WyTa3S
6mVP/906orXEJocT/rtxm/x09RJ9r5YGI3o3oVFbtUnsfFwjtFmrFpI9Q4vT
WnqGiMn7Z322Tb4ljJ7TW366vk2/Vb5X4tO6l/tetx4TH+i+M93XrWVaj7X0
dpILgv9d7UTsAGm9pOQi4RZi3iTwPJ3TirmLf/cZJZ50HJT80n0qmYnceidm
tE09TJxD3JeOf9I3kz6o1Athrd0L0dPpukhmjSR3SY+m8Zn0MpfDJ0tm50Tv
ERrYxcYpc2ciYmee1JSrP2nNTPS1BP/Ju4j+3sppyxI9QHNvC5NEfDbrZfLn
lJZWvlfw0Op3xK6GwBXNmS5ub+jXrfpKelxLC7mcSeAqqccpLzdjid5nKu+i
77LZ7xQ71VNazyh6O9HzkyX4eXUdPp2vxKc1H23uA917uZhs1R2x+2phKelf
dAzdPpLoTEJ7JLPzZh9095BurbkcNRkxF7T2ioq1+mnCIW58khp0ucg9k55N
XAwQfXDzs4t/Yj9P9NYb9kstDCdxc89R8pXs6pN+7fb9yWeXixQ/XR9aHNXa
sbh+btZR0i+U37pzUMv/U0bsnN26cH1ozZW7kf52a9VOa5aZvk+0AcHnNBe1
NHmiSei9SitHLUv24Zt/RyD2yW6+iLmbnkMTrCr4uSH+rR7q3p3gIgU/rZ0n
0fuUuCnxTD4n+Wr5kOA24U+6Floa1e0XLn6SvCf+T7614ubmK8GYchd6L9Q6
n9BaLh7cu7Qw2eJnQtcpv1X8aXEd0TdPnU9jSeGcZBdE6PxWvbf0kusDMQdN
d3S/3+Tzlv5s1Ysbk6QXEHsnN1YJj7nxb8WBmFluMGJuInYdBFco8XF1cqvW
XB9aGobgz5v1jxsrRZ8TMafPTOq0Vb+bmtN9b1Jrt+2FFJ+nPLqmnJnwT6If
FJ9p3kg0duvzlIsWx7by4lqi2Qi+OqUbiT2Y8q7WXEbEn+AW97f03sY955lH
glsUa/nc0rHu7OByfkv/KLFtaU4nn98UQ6KPEHdp1eB05vR9Cxut2J7i5Na9
3Pldeaa1MyEs4UDX51YPIjDQeu90X7ovE1r6Bp2wWQun+CrZTyac1jK61xA+
Exh236uc7/pM6IokL8ldlPM3jd6zTe9Svn9aojMTjNE7yUQPJ3cn+IqOVcJj
BGaUOLTyvqn9prsoGEjiQMxcxC5UuWPr7jQ/0/hJ3uWeQ8xfBM+38EDwNoEZ
9130PELMIJtnKjl1c6301gQDiVZsnd/iqKS/J/d1+53LD+4+cJPTCL1K38v1
oeWne2ZyLyK/RB5P9e4Wflwedp9RYpjgjdZC07vo2dO9u/s9XV9ET3Tj49pm
zbb64BRPep+jxJPQPJMPxLzceu8pDG/uSegacTlWiVULn8kzkz/T93TMaVwR
frr4TDCg4GqKW6sGEzy4OueU5iH4PMndKW2Q6AF3J6Pcne5rCX5a/JnsOaf3
ElooifOpnptYa5d12+dTsUowcJt2SvbPCZcSuZssyeN0Tutd7m9df9wddcIV
rZgQetKNSaKfkzpSzm/NRERsCUviSexz3F6f6MnJWtqpxQOt3t3qp1OsiLu4
M5dy96T2pzPdmLh3THKU+Obip1Uj7rtav23pTCK2xBzUqrsWVyc4Ue7V0orJ
ziHZXRDzDvFbYh6h63pTe9PcQu8ZiJ3bDbtN9/nkjkQfnPDZ6qGnsET0azdH
rp+JPk/y6CEyM3rH5cbExUnrXS1+eHVr7X9uwDathYjZmZjF6Ngmd0l61g0z
rILzRJdO3yf+tLBN4Lw1vyf4IXLxKp9pra5gnsC2wo1ErKb7tizxx60XJc7u
DkTJBT23uvFMMKl8PxkxoyX8mcSW6Bd0TgkNc8Nnoo42tS6do+QZJSZEj9vk
gZaf029bd6ff1eoLT3P3ft9Uk992Jl2Pkw9uDOm5242VEvNXsdY+drPXJOZq
0ef3BPZaWE3uTtQCzSeKEfpBOT/B/Ctqwk0t7fqZ3F3BnqsNbv68qdWnGNK7
rBZOiB5H41N5lxsTFzNuHFq81NJ+RI0oPrt3d2PSmqGSPV6Cnxv6ZvL9qc8t
XClGzHH0OZuagchpq9Za9dvCJK09Wn3/lG5JYkXMswn2XpHfXmV3RMwOz/NP
6ZyWtfalLW08+ebOUM9zNjVS4nOyn6T33kq+WjhJ6pHgJSKeyY4x2d8mGHMt
8Yfg7daMk2gJJVabd1dw7urAzTkuyfX7ofr9fHBz1MpvwuEtvLXmKVePteam
BEstfLb02KnZpOXb5nzkagkaz7TGa+mKhG8JHd7C/PRMK1bEveh59hQ+kxlQ
wWGrR7u5S55P6svlOgUnLW2cGKGdCI232eMIbUnE0NWQxF2InE7+b/Kqq8ES
nZ+Yy5MKxgjt2uoLiTZTvndjrsQzyVeLY1t1Ssyqbm914+nmKJkFEnP1jPt9
SyO5/tN9k8iFe68Eh9P3CT5b/e6G/Lb6b0srujx/W3xO+UZ/bsWfnoNaOaXP
IXgp4eqW/8m+S7lva0ZIOKoVz5YOv8ESbnye42p7Oo+TD5vab9MIPnTf+4px
exqhB27TEjfoHCXmz2doH5JeRvTNZBeU7EmUumhpiUQ7tWJOaCfiM6Etab2X
cBEdw1Y8X73f0ZZoS0Kbbfbu1j7Z7Tubu6BWfqcz6d2vixMi5kS+iBk2wYaC
meTurfi7eHa5ZbPf3aZJEh5u/faGeZ+YMV3tR/jW2vMQvZiod6KmUmy9b06T
c1x+S7Ax+aM8c0N/pLFN+9PSKs8cJRhI/Hd9SLChvKvF20QPdeN5Qy9zzY2h
YoRGov0k9NgmbyRxe9vt/K+5+iHRWooPrX6d7Fg2tYSSo4Q/W7Nti8NbnNDi
SULDbOpP5Y7ujN/67RRDl4eT54ke9yqfXcxsamMX863dRTLbtnolcS9a8yv1
1cInwZOb73Vzp9Sjcr57jlKnyjnTewkfXH9uwxWhtYjvnzFszXcuDxP5SvpL
gisCb0rdKbXTmlk25wgXn8Ss6nJ4okNobBO5cGdStwbpGapVa7QlvLrJn4QO
bMWNuOOmvlXuu6lP3Pqiew09Fyf6k+j1Se9LYuLGJzmT5jTlLi0O3NS334Yd
1TZnH1eHE/V4Khd0z23h4VR/UfJO6I3W7jHBuZKLyedEKzbw8k12A789jd61
tu6VzPJEH0ziTGtsYqaY7tLSzEnPms5Jcq3ctxXPyRKt26rrU3vLKV9TrFrc
1YpPq1+78VGw2qpZBbct/tzMaSsvk/9KrFo6ocWBN+hemnPoXuZyBaEBWvqf
0KjJvWjNpvhMazZ6H6v4cKq+aOwp5uKthY0WBlw/6Xi+ihF13epxidZy8ZD0
Mje2z2eSOLh5JPRP8reJhFvoOe7m3ZQSQzf+im+te9Gah5g7XvFzgp9XmXGS
mLjPKHGbniF4lehZUx0pz9923yTXrdpJ4tPSV8l93Ti48Ul8S+6rYJ6Ygwgu
JXTU5uzpxr8VqxY+E+6i4/A8k36GrjuCH05pHldj03UxvYvewxB5ae0Hkjno
BmvF83kmgfMkj0R8iFpT/En6jnJmS8+09i23cWMLb5vz+KaWSGJ1ql8TOs3N
3eZuZ/ItwdLmvNPKddLLEpwnd3F9S7g0qd9TfbPFjUkdJb2+NYe2dmWt3qHg
J8njbRzS0kg3+7Cpl5QzW5qBnome3yd6eDon4QQlni1dkWAj4TGiRhSsEry0
WactzCQYOzXvE++62QfXEr2kGD3LtHRXS3sT52/OxQRXTL9V8p7UUUtzKnGb
7tLihNa+qKUNXN/cnnLDXuI2HxKuoDHgYoOYl10OIebHU1i6bS5u7RaI+cXF
cCtuybuU327y1Sl+c3OnxOoGH1raNdEJredP6Qpih9DK3anZ8NR7Xfwk2ibh
4UQjJfMgXVPuXEAYwUVJrJLfJudMzyuxaun/Fp5pTku43X0XvVt2NTCh7Wk9
r+Rx+r7F50Tfb80aLYwReFbykuwWiLpza0eJm+u/8t5T2j7h6pt11CntNOX9
1J5HwWTLiPi7PVHBKh2HVn6n81t5p/UAcS8XY9P5CiYT31q/be2dWrMnrZ3o
eaSlnWj/FR8mf5J9XaLfXK3b6u+tumthKbl7CyfJ7O9ibzK6jxCzM621CD5U
3kXrT/rvHS4nTOckXK3k0dUhLby5+Nnss4TeSDRhq88md3E5POl9yb3cuyv+
O/FWbZOjkly3uIvQvQkmiZ6rxHxzjrhtV5PoH/d814ckhnTMJ1y537t3Uc5X
ntnM+ybOE917SrcrzxAaiegdrXkk0cAJVyh5nOLT2rMp5vJDq64TDLu+JZ+J
WZLuNcScNd0l2Xtv5oXGBsEzrbnMnX0SDt/UnFNsk51tEs+W3mg9f4NWmd71
/L61307s1CzZqk367q42cM9PfEt6ohsrl7dP1RfxXlfzuzFU7jI9Q8TBrYVk
flFi3tppJP3F1TnK9y0NQ/N2S+Od6t1KLpS8tHSR+66kdmhOcOeCFpcqZ07P
J3Fu8Umrj9P60L1XwtU3xG2zRjbfO+WR+BsNwZkJTjb3q624tfaiLY51eaAV
q1fh201+bmkqgp9beyQCq/8PRves6b3E36RacyIdT7q/0JrKvW8SH3p3dEoP
Py3h5+nMG7SrqydbM7LyfUsv3fxZiVWy7020aIINF+cKNiZLMEboE3rPT/Aq
4X8rtsnccWpf0ar9TSPiQOD8tv0PMTcRf/t4fp9wftIXlDgk+Jx8aHFjSzNP
d6StpVuU84mYb/KD8vcON7bJfQltfBtW6dl/0zZ36cmMoNgpDe/6kNRL610t
riNmyUQ/uD4nvX5TM7t9ZLq7ciZR+y1tqdSCkvfN3NH9kdh3ufFvYUOJW6Lt
XQ2vvDfRKrQOTKylB1o808J8gqsJJ+7z9AxLcLVyR6XWWpqfmKcSLiI41o1D
kt9EIxG4asVKyWNrltmc61sYnp5x8X8Db7t85er/pHe0+oXbF1r1696lhZlN
zeOaoglb+oe+S6L33HM2NaSLNyU+mzEnehDNw5s6k+iDLV2UvHe6O61hWv39
Nt1O7yqJulby7ta14n8LM4RWTHZQbn258U/4x9V4kyUcRVtr10rzW6tvujXY
6k10jjZ7/abmIeamxDeabzfnEWKma+m9Vv26MWlpyE19nmgMGrcEB7Z0I707
TfQqwdubWtGtX3r2SWKSnO9aUlMJ3yqW6CJ6FiY+t/LSMpqvCD55Pk/oAVr3
ntKfCVYno/tIq0ZaGqPVWxOcJ3WRxEQ5k9DJRA3SluxOpzOVXCd5JGqQ0KhE
fbmWcLhy30192NLhBI8pftJ9nOinLR9cvD0tmXk3dxetdyWYb+lSBdvu95t1
0XqvG8/WPlmJoXLmDZ9d35K7tDTMlNPWnkd57w3m9vfk7xqub0Q/asWkhZkE
20nMXZ6nY37KbtAVrV52KoZPS/xUMNzSFYrPCgaSeTPhmZY+dHOXaCdaDxDn
t+o3mWtauiiJScJFRKzceLo4dPcqU021rJXTTT5R/En6ArGbauG8NUe0fkvs
sekdXTKP3FynBB8+faDPT55v9ffke6JGWj3azSM9U7h+unWXvFc5030+4aXW
jExooVYcNnWsgrckj5t1quQi0TkEJ7g4Ue6SaEj67rROaOku2lpz39NO9VyX
w10eSLQH0eMIDmzxubtPI7RN6xla+7m143LFptZN6tT1X/mtwrGtOxIxV+6y
OWts8p5iLc1J71Lc/Cr3TWaQpKfTnElgo3WmYqc0T9L3iTi0akqJs3Jfoo+7
v6V3aEmtJXNrK7+0jk34U8H8FKtTs1VSg0RPJ7BB1/vmXqhlLU2uYGZ6vuWP
y6WEzkzuQsyqiZ/uHDQ9o8Sc2GfS+rNVL24cWrupVu+j9edtPHmbVqfn+hY2
6N2pixO6r7m/dXGY1IJyd5dzNvN4w8xO9PEp/i1N3tJOdJxpXZrMF7dpSGLX
l+gQhZfo/eQNWvHU5wn/CbZb/b2lAdw7tmb2hA/pvBM6bfJfudcpXXpD3Sn4
UeLQijPNh60e0dK3b/ZvI3Kn9HQCby1Oo2thij+hG1s6je71rTOTWLXsVH9R
4knfndg9ElrXrYtX/Nzin9b3iUaaMKbo7daOgtiZEBpS+Z7WUTSekxmErqlT
vYnQ9vRcdioOBHfd0Os3d18ur7o+TxhLsKecqTyT9MTWnKJwoFt3btxazyTz
QmtnSM8ySswJ7qX3kIS2afHD274ot2SmUL7fnA0T/iT6LH1f9140r76KPmnN
Jq4GcOtuU1sqvWyyTS1E6Jwb9jn0TJ1whduvk/k6wR7Bq0///wWNIA4O
         "], {{0, 
         128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "5151167"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "\[Rule]", "0.49108636379241943`"}], ",", 
      RowBox[{"4", "\[Rule]", "0.5089129209518433`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztmzGudcURhJ+MsNgGMZmd2iDkDSCcOP1tmQjJEgSIyGyAdRCSsQRWwhII
HCFAcnBl0aaKqq9nruBIoMPVnJme7urq6n7izb//6/0Pfvfy8vLxGz/86/1X
n7z70UevPv3r73/8j3+++vCPf/jwtR9eP/vvPz++f/3Bt3/68t+f/fn1/7z1
zvT+zedfvP3VX957+x/f/W18n9Yr+yg2KLYpvyd2un5ovbfsJHzYiu+mDa01
9PrW7y1cEWcRsU7ycTMWBD4JTlPeX4Yn+Xbax12f3OXRh+5Ziv3ut67PXZ8k
/iS+dfeh7bz5vYUBwrfJc8rO22J6gw+TeqrY5tqsrN/Uq5M9RH3fjK9ybgsD
LW1D9F+3vZ+6l4uN1ppTGpjGQ+LPlg9bfPK4T2uOQfeM9N2V31s2KD6czp38
NtnWstnlc+Vc17fumk1OSO6bfEvzZ2ueqdivYJue2dJz5k290dIkLb6dcN7C
9g2z95ZtN+yZ5OANuXAD7yn1S+H/xJ4pdlPeuU+iDZKedHpcnyT1uvUkHJXo
kARLbo4r5xJYms5N/JDUvhse2g/KnpNttAaj/XlbzWrNE9z1yrmJZnDj0uKo
xAaXS5P6nuCnpeUUrnZzltCWm3qPrhGtOk5zVEvTPj6tvsmNHYGlZA45+STp
AYm7tGwmdMKmtnE1fMvnrVqvxNSNe1L73LNaeefWQVpLEzni+pzQMHSOEzVx
8s9tf6dIcOVqSCXu7kxSOWt6knn4qbrZmucTms21mdCcSV07Na9u8RX9d41T
763ZjluPbtOlm/0aUS9a+yg807q7a8+0XsFY4sOE91o8475PflN8tZmDLX5W
7kvETtnzlP9djUdrMDcuis1Ejzmdq/yuPIn/idjReyb11/VbUnM3c9DlEwXb
NK/SMzdCkxD7EHrP9b/bY7ozvQR7p7Q3/U7wSXJ3ItdoLZTU31Ydcfen+1Z3
NqXklxILxSeKr27O5VZ+EY/bu7X84M733LgnNrvnEjhp9dfuc1vubOYj3ce5
9kzfKnu69rscTnOF60/ld7puEvWaiDWtLSd7plgosVPiOK2h46icm9Sm5F6K
b10M3FwjCGy07FEwTNSXlv5J8NCaRbQ0f6KpXB5WcpC+V8sPrp1JL5xgrBXH
pBbf0J/SeUHPJVwuVeLeilHSoyWzyhvq6ab2I+oa4avpvkS9a90x0bduD5jk
muvbBKstm1u+TfZPcs39Nlnf8nMrpxSMub5Kcmda09LVyn3dc9251g16qcWZ
Lran+Lr5kmjjlp50734qvq151+a7GzsXP5saPsGki9tE097ALXS9o+0ktCVx
x6Qm0rht2dA6a5PfWnOMZO6X1HqaowhN68ZFyetWjW71Be7dXS3X0l1ETrlx
VGxO7pXUCyUWhG205kw47TZtQ+dmksutWUqSgzRH0bFw+dCtv4qvpvWt3lnJ
RyUWxKyjdVZSW4m50KYWbWFSwV6LT1prNrUrUadoDazsk8SU1hsuJ7fmmTfU
I0I/uPsk3OI+m1rOvXurlyf4weWQxyeZyyU+3NT5Lt5aa+iatck/tAamZ5hJ
jNzfN3Hemmm3+NONy7Rms57e0DsrGJseWgMrttG8ndSpzfnVJiZv0MDEjILg
NyJHaJwrPEDUR0JztnzoxlThq8lXig/d/d1zXfy7eEj0DF2XE314w7viT+Uu
Ln5aNivnKr8TNic2uHlBzAPpOnID37rnKjFN1iQzfGXNphZS7ktwrPL7zbPT
zTp1qt4RfOXirZUvm9xLaLlEG5ya6bnzh+SORK1v+TPBpOufyVe3cVFSs26b
nRL5QswSEw0wZ+3P5w7tNzevk3slWsXVjcr+Cccm+7fqewsDBM/Qd6FxlZyV
cBFR95P6Tvi8pbenNe63hD5RbGj19W5Nb9U41/+ultusibR+29xTiVGLY2/z
QytfEu3k+q31NwX37pv4b/URtG5R4ptooWTm08pZhR/ompjcS/Fna67SOqs1
Q2vhYbOXJ/zQ6mFdjE2/n/JJklPKegX/Wvb8/JPwFcGHic3KWS2tS9d0Wick
9XST99y61sJPqxa3uDeJSxK7zRzZ1LcuHhIOoXU48a5g5pSOorHa8g9R+6ZH
0QZuf5TUIEJHtXDVOpfQe9P6KV6bvJ3UHeWhe0aCqxU/JDWI0A8Jl7qxmO5C
1P0EP5satcVLLb8RZyV4PqV5Em2TcG/LP0p9T3BI5wuh9xLNoMSFwA/R37Xu
4tavJBeUe9F3JGYgyh1bs9lT+qE1L23FN6mJCQ5dLD2LfzZx6MaIwPap2NHa
ZvIhbU+Lk1u5nOCHwBXh8wS3ig9P6fBWjrt+aN0lWX/DfCDxs/K0uFTZk55R
0PyZ8GqLq5PafYPPWxwy4bCVs0Qf6uZIazainJtwxSbv0ThPfOVyJsFRShxb
vmpxqauZ3SfhTMVXLTsTbfn4tOZOif2TPbf1jMoaQne5/mxxi1ubCF092Uxr
OUK/ERqpFVO3ZiUaw83HRHe5OfIs7won0Fya8Kc7t1T2J+5FcxqhLemZhnKu
Yn+ikxXMEPpNwfO0j3KuYr8b01MzkOkurs1unt7Az7RvN3v8G/yQ+E3JNaIu
E3oy2dO9b+Irt49O+EHZx80pN45Jj0zsT+A20QmuDYQWuq1GtOZaCT8QWvpU
TWxpoVZvS8+fXfwnfNiaG7j8k/jKyaFfsj/BLS3dnmiDls9bedTa3631hP7c
7OOSOdsNvWSiK5T7JjhvaackZ1s2E+sTHdviwynWLgYSbZacu6kBNjXbdHfX
z0nPmPCbYj/BXS6/EXXfXeP64f/F+6f2dDHW0l30fMn1Q0sLtTQnYWeiA1tx
aeXgtGZTA7T2PDXb3NQzSR65WG35tjXHo/UArZNbfa6y/ob5Gx27yYfJQ+Mq
0YdErWzhltC67rlEfJU70nrG1TaKH27wp7unYnNLh29qQreGuhhT/DzZvMkD
rk9czLQ0GNG3tvZJ8o7II+VcZU+3t0p0SDI/cf3T0m+E1mr5k9C0t2nRVkwV
PyjYu603d7kuucuzaOZWLihYcnuKxLfTfRU/tLi6VUdcH7bOUjCQ6LdT/Eac
5cZrsy8j4kLzVctvxBxjE2Mtjkri2NIMbv0ldFrr9+TuLd5WeoEWhicOcevI
ZKeyf2u+5J6VcG8Lzy1sTHdXbJi+pTVn4k/iSTTbZq2cbKDjfkozb/ZTrZqu
YMyN77SP8rtrj5unyho3Fu65rR7z1CxIucsm5yQ+dDHf0pPuejqmST1V7uJi
JrGB0DwExxJPS+e3amISC0IbJ3WcmB8mut2tra27tHSgguEWrlx90rJH2bM1
/2nhKrm78q3bv7s5rvi5hbGWFlUemjMTmwlduoln1+eJDYrfWvq/pWOTu9M6
ZNOGRBu4cXH9TPM5MXtpxbGl2Vp3dGtTK6eIu2zOGVr8c4r3pnxRbGthYzMW
m7OR6dzp91avMa1X7FS+JWZcidZqaWP3vq4P3VjQtZL2IZFrRLwSDLfimGDb
PVfRb5u1mNClBC8lMd3MqcTmCQOuPnT3n/ZxsZ3gn+hPEzunNfS8otWD0PU9
4SKX6+g+bsJ5yw/E3I+u6S29pKyhuZp4J2oHXd+Tb904trDhYnKzjrRqffIt
kdct/yf7E3dRbE5yZ9qTyH3lvjS/EfF17VTOdfHQymu3V209iR82a2VSmxLN
2dI2rbpMa4MkXgo2Ep+07tWqj8l8SVmvfHsK84luT3DVui/hh01MzkjxbJu+
3fRVUqMV+12fEDPG5L43aPXEBiK+RF07lcuuP2n9496FuPuEnyS/Eh2V9H2K
DcnsscXtBH5u0/bE/qfeCU1F8CRRW2m+dXmJwH/LzxMPKHdxOaeFgSTuynND
/iZcTeMqmaEReTStV353H4L3Wvl7CocJblvznxvqrBsL14c31BRiXufmuOI3
V0tMe27irXXWdBclHxU/JDi8DZ+tPZW68yz8dmoGq+CWnttsYonIBSUWSu4r
Pp/W0xx1c44kOXXbnMTFUosT3G9bvk36Czdfkhlgqz668VXuS+Cz1e+48Wph
ZnroXCBqGVGzCDwTe7pxJL5NcO7us1njWn6Y1ig+mb5t9Tg395JJfFva4PF3
Wu8pNSXBSXJuEjsP5b3/pzV5XL1EvCf5TuBfwcPkz5ZOUPb85VHnOVw5q8Xb
7r0eH7rO0r6i9V7CD5v2JBq1xVen9EbSsyRc18Jzksut3paoQQlvnMISEUe3
3k3fbnKL65MEky1fubFQ7qLs3/KVe5cW77nnJuvp3qr1rmA18WeL6xR9coM/
CVwRtam1PunXlHtNvpr2UfJxE6uJPUksWrFLcpzQRaf0VYtnlD6F4PbW/kms
p1xIuOK2Oktg0t3TxSox02jhvMVjSX1R7kjgR7FhM5eJOpLcK9mT8Ger9rl1
cMJJ8rh6e/qWxmeiOVu5uVlf3NjRuHXPVb5V7jj5f9qzpS0JDUDkiBs717du
3Ft8mPiW1sOT31xd4dasVh/n+qrVTxGxbnHdJre38lrRugqWWrUywdJks8I/
yWzqVE13ebt1L7fvaHHOtEaxYUaEd26yzyn+vI33Jl9tYvhxDd0rEdzo3nFa
n9ip3H2z3t2Abfq+U7wSnNB6uLVewXCCWxrzrZmAgoEWxtynNQPcxGeLW6aY
ujW91bcqOFFsULDq4t+NY+s9wbaL8wRv7hxVsW1aQ/Q+01mEP1szpaRG0Lq9
NfdIeuqk5rZysFXfH38nZkeuHnPv2Hqfzt2cPyexU9Zv1nSXAzf7DsWGlm7Z
tJnod2j97M7QWjmi4HNTkyd3UXyVaGZlf/e+hJ654b1VQ5Me+bYZTtKbEFzt
4tz1/7Rnq/ds+TOJkZuzrq52favE0c2RBDO0plXwsMkJbt1370L0Ji3/E3FM
dKDif/dcok61uJSoiS0d2OKQG7Dt2tnKWRfPrfx18XZq9pXgZ/Jhki9JDXLj
0opdkuOnOMQ9q6WZCc5p7T9hI+GH6WlpM9onLa52+5QkXsScvBULd449Pcod
b9DDxJ7THU/lwhTHVr4o+HyWdwWria9a2sPdR4lLCyfTPknuKza49rs+Iea9
E95cHLp8kuyZ5H7SHyWahM7TJH9d+5+FG0/pPaLu0z2p8rS0R6KB3d+Te01r
lDu6+djCknIvYpbS4rfJt6dynKh3Cg7dvKN1VysXFKwStU/BFT1LJDBP4CGp
uS4XKbgiNGRLV7h3n85SngR7070IG5K7t/Yn6tH0uDrH9UNSr2mtRete1z9E
P+7Gi6jLSi63YkH3SgT2TvWqrs0JJom5SoL/JH+Vs1p6r8UnNJYI/iS46PFx
dWwS301fubjd5LpE+yWPqx+SOW0Lz8pdWv68YXZ6iq+U+CpxoXOhVVNcLCU2
038vuEHzE3enc7A1A6FzhOgRFDtbOEz8n9QsV8NMd3fX38YPLq+6mHdtU/yp
PJt1U7HBvWPi88RvieZ390+4cfpdycFkVu9yzmRna8/JZsWHrTqu2En0C7ft
456VaGyCH4gapOzf0lcEnpOcbcWIOJfGOaE3pieZV5zigRYvEdqvxWN0X5Dk
xSld3dJphJZo2ebuqdQLxZ+t2pHoTMV+IgcVO+n5yWZNJOxx68gpO5V9Jt9O
+CR4uGVzq24mj3tugrfpXJcP3byj5yStXEj6C/e+BCe49a5lf4LnVr4QtSax
h+CZ1qxssr/F1TQPJ9yY3EWx313j2u/6PJmfKLbRPm/lbKIPk33cswh+SGan
rV5YiYt7X0IHJj073ZcRfRyh/RQsndJ+Su2g9R6hr9y8SDAz+c39Vnlaft7U
5JvzvUQDJPWC4LQWhomzFHwm9VrJBZo/E+2X1M0Wflo9CI1DFxsEVyR6xvVh
4s/EhhveFT9McU98SMfItZmYdbfmdS0N4Now+TzR5O63St1vYX4Tk8k+RJ3d
nE8S3NXC5KkekH4n6mlSr2neI/af8JzY0MqRFoecqpWufwgbJh8q+G/FtKWT
ifcEn0TdIWyeYjdh7zZud7Gn3HfaR/ldseGG91N82Op5CQ3g3nFzLufmQkv7
tfRGUsfd3HQf5Vy6TiV+UO7l4pyeE9L1kdCQ7ren+iwFYwQf0u8Kzt3fiXOn
x/Wta7Nbu0/lhZuziv9P6aKWnS3uUmLt2qasn85t1Z3Jt/Qcu1X3J/uVeLn8
PO3v8pWyntAGxEyp1XcQ/knO3dRLN2iAlkZt6ZyWT05xV8u3Sa1M9EAyx1Ae
tyaemmO4d0/qfhIj17ebfmvFt8UbST5Ocd+cPxC80dKrxPvkB1cnJxpSsYG4
L60HWnNO1z/KHVuxa2HplN6g8abYr/g56QWUuNzGIZsc6GLsBs1M6AqiRrv1
bvr9Br8l9rgzbYJb3JxtcWaiG13ecG3bzK8WnqfYJbgi9L+LJQWrRG+V6NVk
3kvPLiZ/upx8Aw+38s7lHOVxed6N+7QPzb1JLtM4mc4ibEh6Itf+Fo/d1he0
6k6yZhOfrdmdu4bWsS3eIPKu5UNXJ7jaO1nT0r2u3xLbCOwR+N/Ehov5hENa
9tBxUTA5raF1dav+EjXdzXH3IfSAsn+rR3ax19ISz8J7Lc2fYGbyZzKXcLFN
9F/JuZvYIPpWmm8JPbOpnVo2tPSDu39Sy1o8tsmTCico2JjWELxH+4fgn0ST
u2sm/7dwQvjH/VbBaqKjXLwl64n5Z4JPegZySh+6uCLqWsvnrj5s9fLKXZK4
uL6ice5y+OR/Zb2rXZU4Tue6OtCNi7KP4hPXfkLXbc4AE4y19HCyZlPTJnPL
UzNAoqZM+7fuqPjQtaeF82lN61slF2j91qrv7j6nciHxc3KWsj7hRtfPrbpD
zEsJfU7PeRROU2K02QcRcWlp9cT/N7+3+Mfdf8IeMUMmZgibueDa09LtrbNO
5VqLV5O5RGvW1KqDif1JTiX9svK0evNnmfudqsWEr9w68vgk3DLto5yb4Mft
DZPaegOWXF5N8NmqQS4ftjB2g95TcNXSA6cw3KqbN+RUcncF28qjaPKWDlcw
nGCghT16TtvSlre9n+qzFDy3asptMWrpFpcfCP8kdip1SsnfUzGl61oyP5zW
J74l8jTRVC09737bsnkTn633JBeUdxe3t8XIvSONEzoHb8Aw4U+6rim8PT0J
7yV83jqLrt3JLP1mXaFgxo2d8rsb9xZmCN1Fx8XN2cTmaR+ivtP+dHGY+JPW
FW5cXF5SMKn4SrHTxTmtx5LYTWtc+yfbCD1DaPIkjjT3JjGdHiLvNuuLq3tb
mG/hnLg7oW9betLFcItXW32rcq+kNhH2u7qCxkkr72i92rrj9LT4tuWTJC4J
Nyazi+lp1WhiNrI5u0u0gevn6Y6tnj3hpWRmtalzFBsSzdOap03PpsZL4k7M
AVrzigQbLd+2NIDLga79054tPqfjQtQg128JVt0+2uWTxLfJHWkftvhks7+Y
7ptoqlaMCH07Ya+VF3Ttc21u4ZnubRWblTVE3WzxSfIQXLeZj+4aYkbR2ifp
O4hcdjHj6kPlXpszZHd+ovjtGeeuxJ5KrIlaucnzBA7dWpBwaavv28Rwq99x
5/PE3RPsufmlrJ/84Nrs+tP1lWune8dNDXObxnPtpHvVTZ3mYsaticT+iZ8n
zLhYUtafwq07T3DtVNY/PknP2KqD0102e213vcv/BCcQvKT4ZDOmtE5T8EDo
tAQzis0EnxBa94ZY09r4hnw8pRs3Z3SJzS7nu3nq/j6tIbglweepGZES38QP
9AykxTOERmrx3nRW8rixbuHTtVPJ6818cXOHzvdNTbhpf2um1PL/hElljYv5
ZJ9EoxK5M91lc/ZLaK3NOadSH1sxdfNxOrdlv7v/Zj/u+mSyQdmTeE/inrwT
WL257rTuq+BH+balP1t8637bwnmL9xSfuN8StVipR0mMXE5OtBndj7e+dfHZ
6gGTb1t7trRWK76KbYQeSHpMmktbmpa+LxE7N6ZKrGkMu3FX1hC6kY6LEosk
N11ftbC6OcOh40LX2VO+atUU5VtCYyjfEvdSft/k1VaNm+yffm/V/YR/3Fi7
a07VEXpu9jI8dP7ekBeEDZM/k4fIKUK/bdqj4L+l4Vv12uVboo4nv09Pwj83
6HDXn+4dp/gme9K+SnSUghl3nyTXXHsUOxOtoqxJZgiT3+j3yW+b/fgNc6eW
HmjpJTdeSV2g/UP4hODJlgZOtErrrMn/RE4RPHCKn09pGFcHug+t21t+eNyT
7lvpPp2Yb7Ril+B82tONl+uTRM8Q2J7OUh6aTxJ+I3S7G1Oan5UYbWrgVh10
85TQKjfUxFYubOqBUzMT2j9JvrRyTcGSkncJxtxzW/FK5iqbOeLmO107ktls
UmuIOk7fJdFvCZ4TDZPkRWIP0bMQXJHo6hY3Jvsk9rdqDRGXxIfELEvJken3
lh8SrdjiJQVjif+V/ZU7JvWulS/JWTS3tOYhLTuV/adYtzTVs/RHrbqZzKmm
J9Ebig0Jbyh4I3RIYtvjQ2CP8L9bxzd1SNK/T/5R4kXrW4JnWnsSfU2C7aQu
J/F1exAix4kal/iQ4Gc6Lq5tLp9szkla/VHr26THaWHS/dbVaYrNLQzQ74mf
W9xFzKM2cTLtecMc7BT2Wj504zX5X9mTzvfWvZKH7i9OzSUSfD7akOgNQrdP
/mnFPYkpMU9T7FfWtOYwdN/X8s/0tGpli9Nc+xUbWnl3Sku37tji2NtmHZu+
om1uaaSkXhC8lGiG5O4Jj012uvY/rlH85uaXomNbtZjooZQ1rbjTczl3nyRe
9Ls7K7v5Lr+G94Q3CD2T7LOpMZL61TpL2TPxT9LzKrnc6heIOLr1Mbmji/nW
fQlfte6V7Pnbu84bRH7ROZvY3+KlzbxL6rjiH8Wfk9+m3+kZ5iaXujNe1+dK
LKbHjUXSSybans79UzrwBm53OYHQLZucRvQgRF60/haQ2NPScslsZOKBxLcJ
VyT2tHDr2jOtSXLW9Q/Rv9P85sb6Nm5v6boEV5OviF6yhVvlofd3z918b9nZ
wkPin2SOlNTKVr64/QWhG5Pa0VqfYGDyVcuHhP+n+/5ULv7v42pF129JbWr5
zdVLN/AnwT9Evre4IsHqKR3l3jHRq65PpjVujXNjlMRrs/+lsaH4P9HkrVpM
+8S9S8KZtLYhcELHyM2LBKs3xCW54/cEyX6/
         "], {{0, 128}, {128, 0}}, {0., 
         1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "12114410"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.2306571751832962`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.769342839717865`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzVmUGqr0cRxR8K4gacZZKpQ50mPiSQBUTF8RMSECJCHIizrCLTLMiBK3EF
TkzAwYdaL+fcc37VfQsS/q/pr7qqurrqnLof/uHPn33xozdv3vzlp9/977N3
f/31V1+9+9tvfvL9Pz5/9+Uvf/Hlj7/7+fV//vv+959+9snbf3z787e/++C3
b7/5+wdvP/7XH3/16e//+ZH7+6ln+q3sV/Qn9iR+EbbRMWzFrWWbaydx73RM
WnnVym36jW/mFWFP8t5b+Uafq+h/85Bpfdqj6GnpTPYrPrp63LMSv5KYt2xI
3uyk312nf3u3O0vyLlp54p7b8jGxuZU/Sc6/LBq674rNrs4kbs/3O52l7Elk
qieuPUqNcm1r1Y1WDAkflXr+3K/43rJN0en+VvRP/io50DqXEPesxHfatkSS
u3Yxz2au3iB0LWpxWNeGU3fUqnuE75vYgMD8m/Gh+3WiJ9lDfOvqb/mSzFWe
egjOfkM9Sc6dbFBsS/hRcl833BE9C9r0Xbl35Vt37jrFh8gN91u6R7jfnhKi
JyrxdLnAtOc2nNnqWTf0IOVb4lwXDyjnKuuE/bTvrTtV8i2Z8Z7iTYSdSs4o
QucPbWerR7s1x/X9FDZL8t+9F2UP7UuSD604JNi45YtrM9EvWtytdReuDa38
ueGdKvFJeusp3NiKYeLvtGdaP4Xl3LtL7nGzbrj35dYZgqMp9rh3QfTi5Nsk
Psp+gicq59I47XkuMX9w/U32tL4lMP+03uL1bn0jeFNiM+EjjRmSmtCaA7d6
H40lpvi4PIvmlUncaD5Lx4TmAjfLJh5zz3UxG43laM6r7E/egmKnIjRvuoGz
TPsVnS0b3Bqb6HTtT97UtJ/oIwR3IHoK/aYUO1sxSXpK6w26tbGFK071Gnde
OulRbGv1MmUPwbVPcWrXtlO1go55EpMktor+pG489Sczf0U267Nig7Lu+tLq
Zcq5ie8Jj271zc2apti2+a1r86bOSX8yX3WFwLeKj+5bcN9IsieJm7K/VWOn
b6d1ej6/+cZdPW583P2KPS2O+TyL6PVJ/N39Le6c2E8IwfWId5ecm9jfwsYJ
92+9ixt4nHuWst/dk9jg6lH2KLkx6WzhLrdHtH5v1n9FCD6e2NB6a4kNxMw5
eSPu3wISTP60jZjpKb4TOUDwOOLvFJu/WzXKrec3z0OSfGjVkFN8TfGFwDxE
Pit+ufFs8fSkzrTOas0TWhyzxakVXzaxxKnfLTys+JicdRsenmSTD7rntvxS
1hVJ6tW03nrL7tvZrBuTnKpRSRw25xIul5n0tDBYa0ahnKXsUfafmvcS7yup
aTRG3ZwtENJ618n+BCsSPhIchBCiJtM8zp3TErEizm3hLgJzJvrdb2+rgS6f
IjBSclbiYxIresbYykNlnY6bKwTvSPAqMY9K8t/13Y1PUmMJG5S40ZiTzplJ
NjFwEttJj4tp3Vm3kieu7258FL9c34lYKXdEv+XEHrov0L679S3BtEk+E/nm
xo2enbawN4HHNnu9sofAsUnPfdrp9ojNuLXOOsWt6He9OSfcfFMKxkvscd9O
q58Sda/FSd26ocST7kE0hnGxd+udKnFO7Dn1xmlx49/iVjTOmfa495u8R7p2
tfgmwVs3c+YGfHhqZuLGVrmjVtwIfEXEMOkjp2YOCY5ybSNwHVFX3btI5ooE
V2rVQKJHtPa04jPdo7JOf3uKA9LvMYlVYr/yLa3f3U9wmaec6q1Jbid/L2jF
iq45iv2uHrpXKjGc/FL8deOZ1FUCL7V4kyJEnZn0tOpA4mPCxU7xuBY2duPm
xtbFhKfmDHSNcrmeYjMhrXq1OROm663bQzdnETfkBrF/0/4EGyfYSdlDzHgT
DOyuJ/i8NWdI7prupwSuoznj89tWTSN0tjgvPbt2+wvRK5VvJz03vJ2k7hFz
CXed4JXEjCW5d0W/ErenJG+51etPYbMEgym50appt/1uxbw1L2rNS4m3n8TB
fVPJ3SUcrcUZW/Fpzecne9yasInxWjngxqcVQ4ILJLa19LfykJakfj6lVQNb
OCqppa5fir+bHKdlD1GvFPtbcwz3Hl3s4a4nPZSI8xSHVgxvmNO2sLobB1c2
ZyMtbqvodPNhiokSt6RuEHU+6a2tWasST3oe5cbHvWvlrNZ73+wjiY+TbZMe
Zb/rb/IWNucPrXnCJC2cSd81jUs3a++0v1U3Wja4sVWkNWcmZhdET0n4CPGb
6CPunbYwv2JbK29P1bdWP2rVseTNEm/nKcQM9hQ+d2t1C8PQ89sEb7d4aIvT
Kba5d93yK8FC7tzSrav0bHNTaL5525wq4Rduvin2JH4pPhKzr9a7TnJpuiM3
5m5O0jMx104at0z73fqZ9M3pXNceGrcnQry7xIak5077E1z0sqi+zPcE/5zK
saR30/g/wa6bXNs9q8W/Wj0o6UdJ3KZ1una1sHfr7ROzgmTmluCNU1iRqEXu
twk3nHS660QfJ7hAghVb90VwLsK2pKe0MHlrdkFw/808SXpxMpsl5myKzqSP
tOqhey6BEwh+0XovSb92z2q9NXq+1HovSqw2MZtr82vBui7vaMWqNTNs2dPC
Toq06meLf7n7kzrT6iOtXjD51cI/iV9JrGge1Ip/q9+1elDLTho30nEj/qZA
zwxdX1qcNKmrBCZxYqb6qOync0yJQ8tHJbYJJknqc4sLtOpSon9ab+FDxbZW
n3Vx8mRby0e6ttzA05VvaSyh2Lw5cyDEreEJLtqUhHNtcnnX5oR/tX63Zg4E
F1bimfTrBGO08InbZ13+eFuNUnxM+u+kn3izRP2kZ0otPLCJS1vxd2taUlcn
v1p8xM1VRee0pzWHIbBZq+a7uK41b0xiSPx2Y0j3fVdP8pafegjMTN8dgSE3
z5rivDlzcHGFolPJAXdP61wi3whsQOOipA7QMW/hTKImnJohtHAd3fuIOXMr
b5Me18KQNIZp8Y5Ej3J3xNtJ+mYSQ0Va9UexObFT0enWgYQXKOcmb4R47248
Xd8nG07NPxMs5MbBjY/7rWu/249cO1sYhv5N96mWtGYCk05lXbEnwRIviYtj
m1I/W3EgavW03uopjdi/JG43zB8UOzff+2TDtO7OKpM+2PJlc9YxxcFdJzgp
HSvnfv77XHo+0JJW7aXzKsHebv9q2dCSzbffmgPQ/m6e5eYSUfOJvvxcJ2q1
u5/m8q2apvh1KlYtna0Z6VMS/jjZ3OpNm9yQ8NG18ynEfNKVG3Ba6+8FLhe4
gR/RnFfBxi0ur7z9ZD7g+t6SzdkdMdtJYtu6l4RrtLhnMk9Qzk32b3KBFt4g
+kLCBVo5n9jpfkv3/VP8VJEb/E30JBhm2kP4MgnxNwV3T9ITkznSJvckuB7d
d5R4utg1eUd03Fo9yMW37n0p+1scluBcLWm9qcnfBN+28Jhy1uZ8wN3jvhHa
R8WeU/Xf/Xbao3yb4IoWB0zeo2tnMt9Q7J/8JWrjJoYnuKp7lhsH910nf8dJ
ctL1fTO2rs5T9SSx+dS8fbJnWie4AzHPdP1S7uW5pzWjJu7L3eOeleD5U/lA
9IWEfyk6pz2vJVa0bMbEtUdZn/YQuMi1n657yUyDWD+V/6/xrbl3RPw+lYet
mtPSfypWSZ60eIpyblIHFBtc29w7bfWpzdriYiHX9+ncZI6n7L85zvS8hXj7
ip7nOlFLFfvd+jlJ0i9c/dM6kTO38X0izjR+IO5RyZlJWn152k/0X6IG0pLU
xlPzk1PzBxdLTOtu/XfzM8krF8cmeaLsd2NL1MbNN+7WauXbKVat/CfqG8Hd
EttOYYkkJq2YJ3mS5LMrCo+b9rt4rPXG3Z6S5BJRl4ia6dpA9NakX9BvP7kX
AsMkfWET4xE9i3gXm/FXciyxIalRyXtx78j9dvOsVs4kuTrpTOKW1KWkViS+
tPS06qFrQ/KOlJi0sFaSzy2dRO92cWYyD2nFc/JF8bGFQ5L3kmCM1rdJr1Ry
I4mte9Z07zf/nvxqiWtDci8tv4hYtXTekDMEryH8JTiXe3duPhP4IeFQii+J
nhaXcYV4163+1RICpxFvlrj3zR7XkqT2tvKqhc1asxq379O5l7yFls2bmDDx
sRVDN56KnpYQsU24fBLPZCbWqkWn7vcUz3LvV4mJW3MS207xjqedSawUafGj
G/BhYg9d55N35ArRB1t3esO9uG8tqUWKza64+XZq3pjgQ9cXd7bgxpnAde6s
SbHN9SX528G0nuBqd7ZD1F4iP11cMfni+tjq17f1Kbr/EjYotrnfKrYR57Yw
LbHnFB4m+nIya0r8cuM2nUXEdpOnJLxMkcRHJbZuv27l+SSb97X5e5PfJXFu
8Sk332ic09Jzw7tuvf3JnmmdeOMuF0tyzPW3hSeVc1uzAoKzuzlP4OfWfRG/
W1yY4Cnuty386Upif3LWJqZV1pU9rZnbzZgkwVQE51LuIsFOSaxavSOxWYm/
m5+tPkXMXhKc7767ZKadcFX3LbTykOhxyrktIXC7q5++a9cexS9lTyuflXqV
8KmWJDmwaZuLAzfr52Szuyept+7bpHM48Z14Oy6uOzXbV76lZ4mTDcTsMcnb
5L427zGJM435W3nVqo3TftqvVu1t9VOCa7dw3WY/VaQ1j23xOyLmrp5WzJNe
6epMYkhjleTNtnqN+62rk7iXTTtdXP3c42LjhBsqOol5i4JP3n8j/yutfppw
osk2Avu1bGvdLz2Lpn+35q6u70kvI7DxprTuYtN3Fzs9heaDLUl6K8FnXf0u
F57WW7XIjYPi16lvW9hs8y0Tsx2aT21yW4L7uPeSxC3hWTQG26wJrRw4NX9r
cVuCM9J4+AZp1e2nTnddscfds+nv5GOyn+6nm7+T2UgS5xZHo79VpMVbkzkt
wbUn24h5FI3/3XtsxZaYRUzfEn1/Wk8wuTsbdGOV7E8wMPHGW++6hdmSXKLx
ZIsnuj62/J18mc6i6+1m3ZtieKp3EH3NxUVKTAiMnZyV3FdiQ+vuJptb9iix
onGC6+/NeLKFl5I4ELzSvTtX3H46fav4Rfjb4q2tfCM4mot/WvmpxKrFL9zc
a/X61r0o8SH4IFEr3P5+M55McjWZdxH3lbyj5KxWzaHzVvHFXXdze1p3a68b
n6RnuTFJ3hHxxgksmsS5hQOJ2YUirRpF8B3CztZboHtZS4+rv4Ubp7MS25Jz
WxjbtSGxs/Vtgp9p7kbM3JRzb5CkZ92Gr6Y9rTdFcM/WPGqyp6WfwAlEn1Lu
UbGh9e0NtrnnTnoSbuti5hbeoGvFpj3Je2nZSeOilh5iJtay57nf7bOJbYqd
hP3TeqvXuP66+zfnCa5tpzi4st+dO7mxavUjhXe4f3v9ofi9z5dNbKbEp4Xr
lJi4elrvq/U3JsV+GnMq397w9+LbZiOtut3qX6f4tSIEjiJweDJ7nyTpBcl8
4LVgMzc+ST/arEt0rOhaQWDR5Nsb+KOrv4V/kn5H2L85l0hqIIHD3Xi68Un+
nuX+fYGugS5vmnxxfXRtVtZbvk++JDFMYr7ZK2nZtJPg44kNLVy0+ftpJ7Gf
5qTJHbX+fpHcO+HXc0/SjxK8pMQn8dHtZUlfcOeNbvzdc5XY0tivJQQPSnpo
gj3cfHDXiTslsNZmLXVtVvZPsjnbd6WFKxJ/iTty35fbEyd76L8hur4nPat1
13T9JOYJxMyBrj9Jzk86T/ELok4SWKWFPZI+7to82eC+Hfc3fV8ER3Zj2Jr7
ETFv4Vua9ymxbd3vqXfXEnqGsMkT3Xx+2tOaRRN9oVWviNwj3tHmjHHao6wn
eG8TSyhxoPvdDdgs4TJJryTqAFGf3fgn8Wlhp8mX53qrHtI4U7kXxa+Et7qx
VfzanCXSPW7zfbnntrDWDfjhuaeFsZPaMomiM7kXum9O9rTqM1GXkhq7yf3d
GBI1M9GTxHOSlp4kr1pC96BW378NP2zirlatI+qqe9fK3SnfujF3v3X1E1g3
eQvuOs1Dp7i1ansSZwLfbuJ5ZV2J/xTDZH0T87fwA4056TfuvhFlzw2YxN2T
nNuymZgbtHxs5ZtbJ1uzsiS2LeyRzGBdfxVx3w5hg2sngV0TLjzZ7O5J6oAS
t/QO2jpb+ZbgscR+1zZlfdqT5CedJwmGbM05Ex9pjHobnlfspDHV5lylNQMn
YkL0mhv6dUvcPCF65c24WtFP1yLXhmnPtO5yBLqXKT7e8AYTzEDPhBWbXf2u
zgQjtWaGRL9r9XH6t3J3rfgTPNG12fXX1UPcRcv36e4UPa2/2SWScHPi7lyb
lfgnswhFz811qTUjmu5Cia3rO10DW7PWBDNMktxj628lN8yUNvugYgPdHwl+
p+xJ7nfznbr3ldiv7Kfjo+hv9YXW327c9+vG+TZ8Qvdl5S5a9iS+KzYo3yp6
kplJMp937Vf8cn1J5hKt/kW8Kfe+Nv3axD+TEDVc2ZP0kVY8XX8VvzY5hVvb
Xd/d+z0VqyRnFDsVf+mZmCIEXj2FlwiM58aBxm+KPS1Mleh331Ey55nWW73g
Bq5N4HniWxqfJBigVZcU21z7J3voOR6NXVsYYFpP7sXFP65+xS+3Xrk5szn7
cn2n8Qwx9yC4dgvDt/iRWx+SPElqZotHTPsVf4l+TfDf1ntv9bhk//TtDTqJ
eQKBzVr10PWRxiFKTWhhJ9V/R+drmZ+0ZhdJPrSwelJXk/v94SzJ7nT61sXn
yX63viV3RP8+lfMEP02+dXXSvOMGzOAK0QeJc923767f8LtlG42XNu83yUma
lyU9VInbZl4p9hB1taVn8tFdT/jOFDc3ngRnnPZsztwSHEvYM9n2Wn5P8Umw
nxsren442UDM91xJelCCk1v9cTorqZM03qbfu1uLlD30fCPxN+HFhBDYVdnj
1i5a6HPdGuL2kWQW1OLXtNCzi5Ztm3Xj+W3CQej67/rr7nH1t7iGooeed23O
jpJvW9zKraU0HiBmlQkmVOJJY1qCaytnuZiW4Pstm+l5F30v7v6Em9BYujX7
mvYotWX6drNfT9KqFa5+AvO0Zp4tjDpH8f/vd/m1onOTX7sYbLOPu3FT7ojG
Ei0sSnAlZZ14g8l7afVQN7ddHxUhMICi/wYbWr+Vc92YbMZHkYQ7t+YVyVvY
xFFE/3X3tPrmDfmWfEv7SPxNwX1fStzoWte6i9a9tPg1jW9pnKzkgBtPJT7K
uS2O4/qe5FjrfSk6XUk4hauT/rYlLXxF8PFkdjTJKZ7uxqRV64ialvji6nlK
gnsVPS0+osSB6IMJZ3f9TXp0Cwe6corbnvIl0XlqhtnCA8QMIeHINOZJZgU3
vC9XZ2LbtH4qb12eNa0nNisxd/Pf7U0E13BrlBJbdwY+7XH30z1LOUu56ymG
7jrRX1w+ntgzxbY1+3LX6Zw8hf1oTJ7Uipad7p4Wj3ZzW5Gklt5WJxUbkm9p
bpVwTyXmrRi6eZ70HTpPEtzVmgkQ2CCx/7aY03ytJZs4s2f1y89NeETydmjf
3Zgk/irntmandBxa2CDB8MRMg+CkBOdSziJ0JjG/YUZN489TNrRwRcI1Ej2t
uROBtaY9CQ5U7FfsdO3ffLNTrAieqNTzJH9efhOa3Ix5lLi1ZoMu1lLsJ/jO
qdlIq98l9z596+65GT+07vS5362N07mJEHnocp/W/N/1UYkPzS9assnLnvtb
nKKlk8CZxMy29XeNU7a5f1tp9R0CP9AzKxcXKbm62UMnPcq59Gx8Exe5/iY1
/xQvS96X6yMhNKZVeqJr5yb+V8R9m5NfND5XznL9JfYkPd3tU8ndEZLg7Wk9
iVtr/pP0Fz1679dDcLEp5q5fBMZz40NjWlcS3NX620eS/4rOBNcldbuFjSc5
hSuS3HDPbe1P9NAzimmd6DtufBR/N+vAZEPLTgIHTva0ek1rD2EnwSkSe5IZ
Au27Ys+kn5jpEVy7xddaPcLFAAmWoHvWqbpxQxwSe9ycf55F8OtWr3FjSPfH
ZB4ySeusBPfecKct3u3mbevtE/MTgs+27GxxUjrHNt9FYlvy3t15S4tPJb2m
xVtde07xl2R/y/fnfjcmhB5iJtPS6cZh0vnyG2W4Zyv+iV+uHqU3tb4l9rsc
MOHpCd9MJMkxIs8VO6f9yd3dIC0MOa27WGWTD7bi08q35O27MXfrlZvPyntR
zmr1kcm2BHsnPTTB88R7TDB2gslb9Sepz8m7dv1145bUltasbLN/EX180u+u
J3j4KUm+JRyEyCviLpSzpngq57r6J0m4CTGnUva7NTOxv5Vjm/g/6a3J29mc
K9K1vZWfp+Kg4LTWm03yTbkL1+ZWzBO+0OopdG4r3Mr1MakzBJ5McibhOO5d
JNiglatu31TsbPGgZH8iLVy6GcMWzlfisMm7CU4xxVDZr3zr2qnchSJJf3fP
InIv0UPUIoIbunoSGwge3fIleSOtWqTYPO1p1VLlW1onze8SfNWqJ4rvyp6k
Vri5PelRJHnXtG2npIVnTsWhVbcTTkTY2er79KyS7pWEtGZKz/1uPU9wSOKv
G4dETyv3Emm9tc0eRMx2JhsIDNOKA21/K7atWQdhZ2sOQOcGnfNK/kz7E77c
wud073btJ96ge3euvwk/be1pzSETTNiaPyT1sIWvEr7prrt7XN/pd53Yn9zp
Zq+5eZ5Ac8YpnpN+Ys+0/1R8lG9bNrj+JqKc6/aUpyTvztWZ2ODWIiWGiiQY
w7XzhrmxYn9yvy1eQ88ZWjOERI9rm7Lf1UlgP4LPtjipGxO6/rtyqk8lZ7Uw
bcsG10diHpLUlpaPbhxu5gItv5Rv3dqe1JZWjW1hBsU2YlaZxORUHhI9hdap
7J++bc18iDfi+kJgGMWGZAao6G/Fgbjr1myciEOyTvTHRH+LR7s8d9pD9zLX
hptnobdhp2k9wUiEvy0slPAXmmPSve+GnDzFxxNMQqwrdhL2u0LzrBYOn85V
1qc9Lax7M3Yi7KTrT4t3uPEh7GzZ4OKZaT3JSSL+in53P4FJWj2FsDOJuSI3
zB8SfuTyfQKbJXqSb11/Ez3JzJDgzi2/XHta/ZTQ495LEnMlnpMkdaOVq8o6
rbOFFTd5WasOJ/mZ8CbX/gQbu/Yk37pxo891JeGGk7TwgFtj6dru2qD4RXCx
U7xjk/sn3EGxeZOfunFOdLZ6n6Kz9b6UPUlNSOIzfZvM3jd5KCFPv/4NF+BU
3g==
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2816030"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "\[Rule]", "0.017561836168169975`"}], ",", 
      RowBox[{"4", "\[Rule]", "0.9824379682540894`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzdmT/KxttVhYOCaOMcnIK2ErG2MoJ9BK0CQkTEzjFYOgVrGwfgMByAlaVg
YwIWX5Ed18qznvN+8cC9fPfl/PbZ//da+/7eX/z1j/7qN37wgx/8zW//7F8/
+vHf/fFPf/rjv/+z3/r5f/zlj3/yB7//k9/82Z//8L///PzvP//n//7D3/3P
P/mjP/2Pf/vh9fc//c4//vBf//1ffvj3f/tf6E77bfL79Xdyn9i4enelw+rd
1d9tDqz+XulM4rX6fZXDbVwMn9h9wPDDy964qiPDxh+Uh3x7+eG6s5JP/n75
lq1z4ufk9+uOkZMkLr8u8VrFmtRU62ejDxg5b/dGo58Y+hO/kTw0+nmrM3nL
6L2rk+CB5Nuvvxu4/dKh/Tb5PcFOv6q/v8tJ8OT1bZsbxtxZ1ekls+2Brb0G
bm9tbG2/DsmZNg9XuLqtccKREz0Te+05vvJtEnejvj7F0S67vsPfL/3wchdh
54Dx7ss8IXquelE7lw2sSDhIK/8lFl292+aPwX/JrG8PqQXi2+TOp+b7aqav
+t7KllUO2D4kedL6P/GV3UOMfYhdm4nfXuLStscmNhp9m9Qp0f9l77LzOdGh
tTH5nfB6A6us5JO4XMeed4nM1m9k1id32nxb7biMmU7sTU7yVuu3VodEH4KZ
yVuJDpf8FYZ/uU9IfLXK55e4167ZFa4ju5EVd7Z7eCufxMue+5du5He7ZpM7
q156nRVmJpziUziH4A3yN8HtlxyDe5LcXs1NY7auOBTxVfKWwZuM+b6a0UZ+
GrzSkLPqD5cfDOyavGX3KKIn8Y/Bj+yd6soPhj+vb7/+TnZ93+Fvu/e2tl/3
jRnXHmOmtPJt7JTY3vonyT0yg5L7NnZqbVnhxku39l1bJpk1iT5GD0zkX3da
3Va2rHYRpK+2/TC50+ZP+y3B8Abevt5tz6p/rmb6dVbfJnq2ubTC9u1bRGbi
t9Vp8/m77bVe8p0VHvsOOwQjXonOKyyxmqEGhyKxu85qLhu4wsDqL3GUUePX
IfaS2Uc4kcF3Vm9dd5K3krhcd77z3DT2G60/jZpN9CE2Et6U5OSqFpJv2zsv
ZzGR2frcrtPV3DF2AoYtZE+4ysMVX0juEE79ck+Y5EOiZ+tP8rsx1xJbbFyU
+Dy58ynedNme2EiOjX/auW/k/3fDQjY3XOWPwfuIfOPby/bEt2S+t7a83JUl
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
tj4hcyexfcWVEnuT83I2rfYzRl8yuBh5y+aDNt4w9PkUzyV7A1K/be209pK9
B+mNJEZkpie2t/dtrG5zZIOHGjwuiQWpR4Nr2Hsh2+f23sCoBSIz8f8Kw7cy
yfxq8T/xP+nbq5xsZdr9ahWjxN7r3esYs9vmUKs5tao1ItPgXNfvZA/Q2kgw
qsHTCYZv/bnqIcaeYWUX+dbmg3ZekTwh+OElJlzN/eQYmHPFT0m9tPauZs31
rj03iY2Jnu3vyR1Dz+T+ivcl8lf4gdhIsP11XnJVoo89i0nOJIfgFgPnJDa2
M9fgpy9xyMtZb2NgI28NX7U6E25i87VEz8su413ye6vDS65nzyx790V2XMYe
I3n30rOdoQb3TGz//3qI/8mMJn5e5UNbg5ctpKYMXtbmect5W31aPyR2Gf4h
PdPeryYyid9WvCmJywrD23sbo8986u8kLonfVndWvCCJqcHNk7q+vl1hS6KD
EZfkLbITeMlxDJzQ+pPwzeQYnCuRs4qdsUNodfsOf1/+af2W3E9qkHBYozeS
HHg5j1b8heTDqsca2Ixgm5d88NIn0bN9azXrbf5l9LHboxvdVnZ9By6zyu1E
TvvuFa9VP1zhCpIbyX3DDyuZra/svxO/JbavcpL0xkt+e8fuz21fSuqI1Gny
Vnun9WfiB4JbVviz1afloYnfVvrYXInUYOLD5M536KsrTEgOmb+JzgYmTN5t
7V3lkqH/y93UCvu19UvuJPcJ1kr80/bzFfZe4ToDA7e6tTYSrGgfgm2I34wY
veTgq/3PCucb/kl0WOV2mwOtzqt9iIGvEmxD+m3r5/bdyxbCv1b7h1Ymkd/W
4PVt63+7v72Mhd2TSa9L7G192PZPexYYOU+4j8FJVzncHtKXjBpp+SDBcitc
YeD/9l3Co5O3kvutzsb9VT4Q25Nj7EkMn698RXrXqgeu5lH71nWnzTHi59V8
aWel0SdJXzW40qWb8a6BgZM8sX34qV3KKtZtXVxyyEx/yR1s/GxgpLZG2pyx
sdkq7m1uG7h6hZ1WvTF5a+Uf8q49v9pj8FDS94ydzHXH8LPRwwl3IL3OwM8k
z1dzocVLbR6SWUx89amek+RbG8cVpk3ilZxVTyOYIcnD74yx21gTXGrw0FU+
r3Qwat/odW1/WPkqOTafTXKbcLHWXuKT6xC+QHZoK3yymontnGp1Iz552etW
vXeVVzavt3W+7rQ6v7SXyGlxSGuvgQdsXH29a/SBl31s5UPSM409Eqm1VX6S
mZscwmu+npc41qhr8u3L/F/paWCwJEZkXlzvGnmystf2VSLf4P4GfyE9YXU+
xUGMObjyFeH47berGlnh5JfHzhmy2zE4tYF1Ca9/ydcSHVYzzpgvBla3scGq
duyZSPy8mvUrDLnaEbW/tzlsc/A2/1dcjHy7mimkfxoYxuZWxG+tnisbV3PE
kJnct2PX4upVfAlvJbz+5bt2jFYzyP778kniKzJ3khxoZzGJdSLnktl+u8JO
iW6rncZqv0S+NbCQwS/sGdrW9fUt4RdkHiW2k3cT24meif4rnRNbVryG5NUl
k9Raclb9LZFP7CI4odXZ2Lckd+zdVGtjq7OByVc+b3dQrW9Xu6/kd3uPscKH
l/zk3VUdfYrLrDBS4n8Dzxt4zNixEEzS6v/1zqp/rjgm8eFlV/vtyoc2nl/h
kJVuL/Enme/kvs03E18lh/QNIj+xl+AK4lsDbySH7PpW8yV5y9glEltWmL/d
daxktjobc22FyZO3Wn1aOWS+fCr3yGy1edxqzq4412XLdd/GOYmexm7kJXZq
Za50Ts6vy4xLfGK/S3JmJdPgdElvXOGl1e+k9l/uZIwZR2o2wVFJLJI7hEes
cAuZNWSvlfjKwJCrmL6ccS/rkbx7R3Vz7P5DevglP3mXfNvuHAy8msRo1cMN
7k948Qpjk163ioWByVf+MerCmLMv8cAlP3mLnBU3b3sviW9ri5Hbxoy+5JN3
V70iiZ3Nf5Nj+LZ9d5WHL7mVwe9a3652Ze0hPr9krvYtq95L5pGxazJqbcWd
E5mXfKJzG69Eh0R+a0trI8m3FTZIbE++vX43dh2tDokco37bd1t9CM4xcNRq
Z2LP4iRebSzI7FvNgpdzysZRq/mVxCLRh/i/nbPEn4k+qz6QyFzlQ+tDggeS
2CU+X/VM0h8+1bdXHJbgUiMWhnzSb1c45DrGTFnFmvTMVS0Yu4iVT5L++X9n
wH2M2lnVgu23dhaQO4mN5F0y4xKdDVta7rzSuT0GzzVmWfvWpbPRe9saJHjm
U3ExMLPNK5McSN41uFii56f470vcvppxrfw2jm29t29dvrUxw6qnXfr/slz/
VXPJ5rmtXUTn1bsvcdElc8XFrm9bHew6anVY9dXrfuLzNnbt+c5cNXm3tSvR
bcWhPpWfhAeR/Fydlb1GvrUYJtHZ6MkrXEfi0up/vdXquXqrnfUtB7lkfgov
XTrYMzTRoZ2/n7LrpQ7J/VUPbOWvOGDrE4LbV2+1coyen9hoyDewFsn/Swfy
LampFWZI9CeYkOhJcNp3wHirPUOrz2ouvOxLicwVJ2pjbWPsJKat34i9L/FY
a3sr38iT1d9kF0TqgtQp0YHY+DIPCZZYzazk3fbOqh9ex9iNtHV6ySfxIjon
OiTyV3a1b5HcNvrbCsdefkj8s/qb+MTojStemfhzFZc2D1s/GLnd+nBVR6ue
0GIJG3OueNP17YqnrGwnc/zXpV+Rt9ocIDq0b62wQXJsHrHyoeF/Y0aTmUL2
AISnJPfJfimxMZGZ6NnaQngQyTFyn9h73V9hHiJ/dVa1RnYXq72KPTcNTkfm
QqJD8q29K1j1aoMLX++uOG+L25PT9lWyEyB2rXjo9fuKM7b81MjnVv+XO5Pv
wH2yrPnVD3mr5UTXt4afSa5+ioe2fiP9jexY2tmUnFUurebgamd16U/0ecl/
SYxWu45Lfquz3UNs7mPMQdIbkzskPy/5Xw/hDuTb9rR4hshM9Ce5ZMzBxMav
v6/iRXZWhKuudlztu5cticwVj05yqbWL5Jixf7P5FPE/8W2LwZJYE35k95wV
5kzimJwVdl31+US3FS6yY233w1bmioMQnnjpTHpO+zvpmXZvWfVzoy7IWwbX
W/n/knnJX83uSz759lM7q3aHs8KWK05B/En8c/m/PW1PMPqVPb/sGm/9TDjj
Kv8Ne8nsu2SS3LDxyWq31vY9uwdesSDftnYRjnDJf4n5Ez+0uZHYZeBto4e0
XOM6q/1bokPiN5vDtj4k+H9VjwaPtuua5NIKS692gKs6vXQgWK6d3a1v7Vxd
7R9IrFecd+W3RP9V7bc5vJq/Rp8xcnu1NyD2Ju+2sbPz6uW+7iVfftkfyLx7
mf92TpL8+ZSfbf7b1qyRP4mcJB/a+6R+2zuJzisM0+qZ6Hb93vbzl5zdOKue
8/V3Owc+NeNsLHTFyOC/hH+t/JnEOrnT4jEDixo4nGAqglFXPZDwIKMfGvoY
OCrR3+DUlx9WM7flbp/iHcm3Kx1s3YgOBre9dPt62pwhuCLJ55cYo72fcB9i
1/VtIjPRk+xbVn8TvNdyCoNfXG+R2fSyn9g8t43Rqp8YvLLVYcVbCWZ4iZ+T
+Bo4kMxEAxsY+6iV/ivssdLz8kmSP2RGtDbaNZLIITlwybfn48o/xIetLdf9
y67rtPIJ1zBmX+LP5I7Nx1u7VjnQ1hGJEXmX/E52Dq3tq9xb9dvVfsnAG4Qj
JHEkufEdeCXJDWMftdo/2LxyhZ0MvtP2w0t+++51bDxD+EUb61WtXTqQ/pnY
9RK7Xr+vMKfhwxV3a21PdDAwNvHJCickehpzbbXTa/2TxILEiGDIVZ7YvIO8
9Smdr9yw+d31bourLzmtPiu+QLDipdsKgyXHyLdWtxYPr2qK9BDyll3jK/xG
4pXYvuLUBqYih/S0y2+rfUI7u0mutjhz1WOTb1e8xtgzELxKeibZcxpYceV/
0qOMHWNiV3uH1HuiW6vPCueQGdfqudrRGftAQ77BrQhWX2Hgl5x9xRFI/7n8
0MaO2N5+m+hs1JFRUyQP2xit7GoxgIHlWr8lcmxe8zLfWv1XtiRyVrold1b9
/OshtbaSn7yV3CExTX5f7aMI5nyZn5fOq/mb/L7igJddpP+s8KExc4ldKy7Z
nhVGbWUafkj6dotDiK/a+iW10PYEI17EV4l8G9clMpPTct5E51ZP8jvB3mQn
+andZuJbYy5c7yZntT8hNUL8Rnpj8u5qz3B9u8rPRObLnVJ7/1Pzd6Vnog/p
2+38WmH7RLf2DsmT1j8rv7UxWtVU+67BEWzc9ZJXGrEj9b7qmYn/rzuJrxKd
27dW+hs+MWZZqxuZrYRzEdtbOa3/X+4Z2m8vW1oub3N8YheJ6Ur/FWdJ9Gzl
kP6zmkEGxiNYN/Ftq489x1d89jvPX9s/K1+tdh2tTMJJDZxg4FK7di7frnoU
mWukH7bcs+2lxOc2dm05XeufS+fVTElOW9fJt99h/ia5sZojZB9F3m3r9JJJ
eNzXs8LzbexWc/k6bayvb0ntE4zU9uFW/5f4c7V/MPYYZH61fcnGVyvOTnQm
ddfGi7xF+n8b6xWONfZORE5b763fEt1a/du3SO0kd1r5Nhc2+NEqb1fxJf12
hbtanVuZhMcZ8+UlfljtKJJvV9jD4I+ruBv8pcXVpE4v+f8D4Nz2Jw==
         "], {{0, 
         128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "5685248"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.16995669901371002`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.8300428986549377`"}]}], "}"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.775513126403324*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"3a98b199-5476-417c-9e07-5e37c80ef7ad"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["4-colour non-totalistic, range 1", "Subsubsection",
 CellChangeTimes->{{3.7755160686613913`*^9, 
  3.7755160733401546`*^9}},ExpressionUUID->"d4b0f0b4-3179-46d2-82ae-\
d65d595ef149"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"test4Data4kr1C16", " ", "=", " ", 
   RowBox[{"datak4r1NT", "[", 
    RowBox[{"128", ",", "128", ",", "8"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"test4Data4kr1C16", "\[Rule]", 
   RowBox[{"netECA16", "[", 
    RowBox[{
     RowBox[{"Keys", "@", "test4Data4kr1C16"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<TopProbabilities\>\"", ",", "2"}], "}"}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/eGloNAT6TeOnLn5oiDaxK5DGkTPT8uWAdFGSiyq
q2TeOBqUcGuAaKb1mfYgus3nuTOITvum5wOiTyXkgunSk7+DQHRTzz8wPSlH
nPUqkP5vpMAOopW2uwqBaNUFl4VB9PK9qxVBdAPPNyUQvS92iyaI/nH3ghZY
fLuIJ4j+wC0Dph2va774A6SNWp+9AtHX5m8zFZd94yjvyW8Ooh9cWzobRItc
9J0Lon3178saKL5x/HIrXx5E6/C9V7cA0jJtPtogeoXGDAMQvUzgOphe12Rh
CaK36Wpag2iRqu0OINq8670TiJYwfOUJotOyLXxAdMvauE2WQPru1nObQTQA
IiGW4g==
  "],
 CellLabel->"In[93]:=",ExpressionUUID->"41c53108-02ae-48d0-8081-c9c2138f0b99"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzNmbHKrttVhQ8KYikW6SKYwgswrexDQGyFeAUnEKtgMClCOiurFF5HchHa
WIu3EHIBFqnFBBS2xYLn4RnzP6fYh+98fP/7rjXXmGOMOdaf/+DH3//7P/ji
iy9++se/+8/3v/rZ937yk69+/nd/9Pv/+eFXP/ruX/7oD3/38Z/+99/vP//D
L/70y+/943/91W//88++/Pzzv/z1P3/6m1/9xZe//vd/+/T6/vX5+pnkXeXz
ao+r+qzWb/92tcdy7hd4uHjXxfmWdRZsXLzrm7yGCw654JxVv5DP//Htf/30
J7/51qf//s7f/r+1ff49+f3FM8m7yufVHlf1Keu3z7zYoz33gkm7x9W7Ls63
rLNgo2DY1vCbsIZvghbYXij9Qn7/q1/+8tP//SMa+vnvP//N59+XZ177Z4JJ
ssfyt6/fFJyTZ77OvezR+q7Xey0myR5fzyz4f63Bnm9ZJ3lmOa+Cpddzvq41
XHDIinNee7TPJLUq/U6wZPXX+oQLb0BqYn1sqQ/5jT3H1/fFq9vnECxZTFru
Jb2zwjA5O7vOwiHkvF7nstKmgg27ho+cwVfzdZkTCU5svxMeI+dOvB/pi+Kv
LM8XjbAehngke44EJ8QvkZ6yz7Fewnp+wjmkfy2Grc8v3Fhyj4K3wjnFL5E1
kDO1HHLhyQuPEWzYHiR6/eIBqzUF89Zf2fXYbMr+ra3JCyeWSwu3r2YBwl2k
X8r39jerXiP/yDrJHGFzD6sL5bP1S+T3q3zM5g/Wk6/mRIIf4vHK2uzsRnC+
8lekDpaT7fna2Yr0puVSi0Pre623JH1q+fbis81qSl5k11Myt5Wu2c8Wb3YN
JR+zfGX5kOjyyudbfJJ+L17UnmnxV2QvNkMmeLYaZ3t8lV0THK7uBewerbe5
/mz7mtS27OX1fPJeO4+UXNp6OZvtWG0t82nx5CssWT0if3vtVWx/XXhs698u
dMr6c9LjNuckOCzcQjBvf3/tRS0mLWZWe7ngtNXMXtZvvaLFocU20eWSexQs
rTBmPb/1KnbeJGdqz8tyy8p7rPy57XGL28LhFvOFZ669KDkjwi32TrP0ywWn
WR622fhqfrQzqc18LMe+6kz2WLBkMVZ42/KS5WTLFfYzOSOC/+I97NlZfbT3
R8WbrTC/OkfrRclsUu68LJZIX1i9vp7Z7frLXog3IL6a3AtYziTnW7SM8Hk5
03K3RX5jtXWlZasc5iO9B/lbcl7kmSXbL5i3PHPtRS2H2x5ZcXLJPFcze1lP
ySvsjEz6wmK45ITlvoDopvUwq8zz4s5u5U9ITV5nZPdVvIet1eou0s419r1W
a+w5Fi9qz8tq34XPtD659C/JXa1Ps57fzshEL8jabC/Yfi/5hs2QyXnZ3iH7
Xc0jq4z04r3Fe9jn2/Ml67RzR9G41Vz8Wk/B3uu8yqxk7ztWvsjucTUT2fna
/q2dSa0Glfmd4NPOj8ULrbJWyz9FIwpvWI4q7y3e42JWKnxldd9qHPlbOweV
NZfzKrkQ+f1qDrrYS1nDih+KZtnnW54n2CvaXfJkondlDrV5mu0dq2WFZy7q
Wfzh6pkrTNr5+nVeZS62dSPYs31Rsn3LXeU+qOzlVTeyBuv5i+6XrMNmemVm
L7pp8WNx9dpjmUcKp63myhXP2HpaT1i8kO2diyza9lHxACuvVWYBm+3bPM1m
RDYTLni2PE/O/SP9xmr2t333eibRX5sv2RmTcGzRHcvVZa4sc7o9O5s3Fr9a
nllmhOIHrj1A8Vp2divcZbMpy2l2j6R3Sn0Kt1z4DVuHFSav5z5Sk1U+Zvu6
6BHRR7uX6yzOrqH41XIHZPXOcj55V/EAZI/FP5P6r3SQeHWbb6wwZnv/tRfb
Lyu/YWu76rXruc/OQeWf9TArPSp+1eJwdXZ2drMaYddQtLvoWskBVpxm/TPR
LOvhyX6t5399b31LmYnIXso9VOFVO09de4nV3EfweeHVyyxv97LKZ2zO/+Jq
cnZ2DeX+zs5KZM3FY5ceX2FsddalX0hfr3KS4ltshmDraXt2NUfbu49VdnfB
ObYvSr9bzbU4t3sp+QzB4ers7BpIna2fsVpTtNtmIKTHV77a1p9oMeHGaw60
HG51gWCJ1LP4SctdJTuynmelfQSHduYq/sfWf6X79kxXmfnq7K4z1ZIhWD4s
WeJFDmB99Qqrtt9X2Ct5+MoDl7MrWb2tv+UBe0al7y7mRKs7q8zkhZnVDHWt
fTbPXM2Dq0yVPN+uofDhhZ7aNZO+K1glay68ZLNQMnOtOJlwHVlb6TvCsRfa
UWZtW2e7X/Ib2++Wx8pcXHBYcjOyttKz15mqrTnRa8uHNqspGmGzCMulK10r
/oTwucVA4WTCh9czS5mXi3YUz3+hfXZmITplM0D7fLL+kq1Z7bMccqEXJVMt
PtZmLGS/xJPY+tizIBxruWLVI+U+hfDJBQZWOLHcuPKQr3O32lE8/3VeR9ZP
uNH6ZDsLv55p62C9Gdl74S7LUSVTtXVe9WPxvQQDZZ2ktuRMyfelR0oWscID
qe1F1md51WoZWU/JXmy+UWpY7r/sHFH2W2Y0W3PimcsaXu8iPUW4ZZURre5T
rH6Vuaz4IsuHlreLrhWtt96pZJ4WA4Q3Ck5sjxP/sPLb1nusaniBAfv71X4v
/pbg2a7fYsl63TLflYyx+Byra9b32rms5ORW6239C59Yri7ecuV7S9Zne7xw
LKmJ9cArP1903Nbc/r7kJ4WTi8ewa7D4LznDKiOyc9Z1vxO8XfjSC09OdM3u
cZVFkHMps3bhZ+t/bI8X3rDvslxh/fyKY60WWx6zfUd8UeF2UgfSF9azEd4u
vpT83nqP1ZxrvdCqPnZtxZOX3IbMDqssguzd+oTCaSWTL3tc5U7Ww9j5kdTK
cmzR4uI/V555NQtbfbQ9WHIMchZEj4p/sOdSPEzxSIWLyHpsjreaBwnPFB9b
+sVmLDZDsD6k9Dj5vngY0gtltrV4eL3XcjipldV0218rHrDnbrWj+EDrk+35
lnsfu/5VDmN9KZl9bDZSfEvhjTL/lrmD4Mpy2qqXL3D12kvxMKTmKy9UvKvt
L+JPLAda/bV7sTi32mH7y2pN4cbih1+cWfwYyWFsvlreZfXL6iNZm+UH60NK
XldykhUv2b0UP7bKtEu+bXWk8An5zUp/S45h92Jzm1WPEEyWuc9m+6X+5Xur
OyX3s3pBerPoY8m6V9gos6StiZ2nLFYvcGVzIfJ8q1NWs8hzbN2KP19x3SpD
sPpbMm3LLRZLZX5fnS+pldVNchYlz7fehnxvtYb8s56k+BCCVevDLzyPnTtW
uCKadfGZ7HGVe1hNtDxcuK54WtvLF5n2hQ4WzS3na+emojsXeX6ZTYrW2GcW
PbXcbr1uwUzhgYu12dqW7Kt8Jhxl+Y3UnODq9a/0lPWNFzprZwHbj6VPy+xv
10meb8/uOpMsufQqH7DrWWVoxS+VO1Bbhwt+KFpjcV7ypeK3S/5pdbDg0O6X
ZDLX+lv8LVmz5W2C2+LHyDpXM6DV08JvNr+yGLYZi/2+6GnJylZ3oCvPb/Wx
3HHY2b/kS8WTWD16/Z70BVkDOSNyphfzacGVPdNyJ3LhhUitLNeRXrbYWOm4
zaws9uwMYnFOeLh4rQt+sz7N7oXoI/me9CPpi1VueZ0TlrmpzD6E31aZOdHE
wtXFGxTvseplgmHr+UsGRc5o5QlXay6z8IoTitey80XB+cobFM9pcVvml8KB
1ieszsj6rlVtL7xiOdOVx7A+mWiW7RGCK/uu4s9L3xVPaLWDnF3hpcIJxWuR
70uGb7XD6ix5zmsvxVMV7V7lS6uc0HKXrafVjnKmxStaDBNMXnhOyxukVmUG
tNxiPYyteeGKVe/bOpes4AJjq/ug4uuIlhE9KtxCcGj3QnKJ115sT9neLxpk
dZzkOeRMi69YzRHkvMjZrTIci7eSWxauI7xdPCHpU5u32D615/6RmViZAYlf
sjhZaVnRi9f3pe+sLpDzLXP3az0F20X7rvvd/n5Vf6tBJcMhvW/75ULjyLnY
ex/yTFt/2/urcy/zwmquIR7JnssKJ6Vudo+rmdR6nsKHhIevsb26o7EcVbSj
eH5y7va9FxnO6m9XfUfO0eKZcI69Dy25EKn/Nf9Yv2HvuVZ4WPklO1O/sFGw
V/rR8qGdte08aD18ydxszYt2WF99oUd2ji55uPXMr764uDsjGcjqboVwqfVp
BLfEC634h/xtuTsj51IyqJJJEmxb7rLZeMkobJ+WHG+VF134dlv/65na6lHJ
RUvvW89P8HBxd7bq8dX6L+44iO5bzinrIbUqvVl4xuafxcMQ7lr5t4JD4oUI
rxJdKBgouWLRr5JdWB9o8U80vfgrO+PYetq7Eqvv9pmlj2zNra8unLaqW5nH
i7e09bQZDnm+rUOZ4+wsYHu/ZHQrrbm+Bym+msybRCtXuYR9ZvFX5F02A7GZ
T+ENuzarayWHLF7Ics7FDGs9pO2XFZ4tl5aZ3d5rFA5f7cviZKU1NgO081HR
VvLMMlMXDbWzNjkLy2k227R+qfBG4cPVbG71gviBwmmkF8oMa2fqkrMRLFkf
ZZ9p12bxb/PP4lVKzS+0psw+livKOb7+FQ9sMVl033Ia+X3hrsJ1Nmt97bHM
5tarkDWstOZVE5tdW75daWKZiUovrJ5T5ibbj6T+peYXWmP5lpzR6j7rIutY
eX7bX6RHbK5i/eeK60jvr3TTnuN1tmB5qcxuNju65pOSV1hs2L5YfbYat5p9
iOf5SK2xczrRixVPFp4vmF9l3at51nqAwnUXvFTWf4Exy3uEl8g6S3Zk5+uV
Zyb4LL1pZ8PV54LzizpbT1i0xnKv1c3Ck+V+ZJWbkbWtZuriV1fcaD2G5Qq7
fpsRrTBZal68MeFSm9MWL13eVbRj1afFn1g+LHUm/XuRj6249zpzJjxQPP9q
v0VzC05KXmH7wvJS4ZDil1bZgq25zfnLvghvED6xGLDaXe4TbZ+SfVk9srgt
XsuuZ6V9tj4WA8WvXmRfhKsvdHmVNZG9Ww5ZPXM1p9hzuZ4pyO8t/1jMW560
WmafSTjQ8oPtUztzFT4v/LOarYqmEwyQXrZ7KX51lX2tZiWryyvfUrSyeH7y
TLKeMqdYbKxmCjIHreZfe0Zkbfb3ZH4pa7bf2/Mia7Z8Tr4vvoV8b59JPID9
ZzXRapO9+1jlXWVWsr1mfQv525X/tHmm1YVy7kUTbR/ZNb96wfqWMiMUz18y
sZXnJ3xrf0PwY+fKoll2TrHPJFxR1lx4ya7hhbEVV5RZyfYm2YvlnAv/Sfra
4pbUx+pFwZ7FJOGxV93KGla+wp6F5RCLwxUXFf9jZxmriZZbSD2JB7P9azXU
cpGtm51nV1xh76GKvttM3uq+9Z/2fAluS27z4ii7Ttu/hTcsfkgvrHyFPQvC
IWQ9F56/zOl2/iJaYDXdrv9al0uOt5pHSgZSuMKu7ZrDbS+sfCNZ50WmVLBU
sLfKlwi/We0rGfvqLCyHFK1c+XlyLiU7tbnNRW62+luCB+JDyjxic9TX96VP
rYe0PElqtfJp5N9K90umVLBUZuHCJ6tZwM6wpN/t2VmusOssuVnB3qtWRads
bvPay7W2kr+1Hmk1y9t1khpaXi2e/GI+uvBpFz6K9G+Z9YqGll6zXF34rfCn
zd8Iliyei/+5mEmLNyi6VvJwq7m25rYXrDezvGSfs8oBir7YTMDu0faF7YWi
HSutefHSKv8semr5xNbW1sdy4OpuwmqK5XnCb6QOlrtWc3pZj/WHZc02Fyr3
FxaftoZ2rr/YI+mvlecvnvnaR1mtsX6bYNVqtOXhlcbZmr+wVPTOro1g3mZQ
di6za7B+vszpZQ3Xs5jlUpspFf60fE6wSupc9mj9UvFpFj+lhkU7VjP7qyYW
q7Yv7LkUjVvlq+SsrQ6WrLtwy4qXLBeVOd2up+yx5EWEGwuXEqwWPrezmM1m
yXOKl1vNFEVrLnzL6/vXvzIzWh1ZeariryyHl9zDeomi12QGLD1iecnO45a7
Sp+SHlnNYiULLXO6vWOy/bXy3iXfJmsrM47N+kgflXeVOa5ozSr3KJ6qeMLC
h9avrvjBrtPyTMmsyixveYCc74pbCu8Vz188DMGY9dv2LsnqI6lVwRvhEKJ9
hAfseZW7AzvH2RnKzhcl47KYKf7KcrjFmNU7wgnFj5HzKv7K7nGFMethCk9a
bS2e3/Kh9Xsle1lllQVX1kMWP0N4+1Uronfl7sCux67hIv+58FrEXxX8lCxo
xcMWAyuvSDBGfItdJ1mzfablFtIvpD4EG+VOx87s1k+W7I7U2WLSYsNqlvVv
JZsl3Gh10+aohJdK/mN9Benrlecn2CO4sh7Dvtf2PtHl4q8Kngn2VhlUyf9t
/lm86CoHKL7a4tzmPyvPv/L2du+WH4pPJs+5mENfz1/lhMVr2XuWgh/CRVaj
Cz6JDto8hKyTnLX1PKt6ljuO8rcrz1By2nJvUuZfshfb7ytdJuspeC59R3xy
ec4LJ4QnbQ8WPNi+IOtceUKbl5LeL1mW5dJVbmDna+tVSj0tlkomY31p6Wt7
pq81k+9XnFCynQtNv8iNS05L8G/XWbLiMndYH0X2VTKTVbZMuNdq/auehDfs
Hi2GLf+s5uuVV7d3MWVmIXiwuajFQNlLyVKsRhQsXfPwKg957f0jdY34tMLt
dpa0nGn9ANmjzZYvdNb6Q9sjRd9LX5T52p47eY71A5bHLH/auwzyG+ulCc7t
Olc1ITp4wcMFG5YbCS8VXSt+o8xNRX9XHpLUs3DpKg+x52X59gLzdr6wOSQ5
F7Ke4gdWXstqN+Fwm6Ou+oh4g1KT1x7tvLPao8VG8fCvvZd8zPoN6xVLVmbX
ZmtL6lkwvOq7ch9nfe8F5kk9SV/buYPsl+DW6ki5H1nNShdz2fUdVvGi5L2F
h0vvW4wR71H8apmP7G+sR115LeszS4ZpObP0+CqDusY86cfVM+0cYXmmZAgE
/wST9uzsHFT8g80ELB4srkruWvynzUxWHt761dczST3LXi48v+0R4knI+b5w
Zeedizn9I2cumxsQL1qeU2pL+uJVq+K1ynxH1kb6uuC26OYq1yW9T7iL7NHO
ifbsbLa56kFbz6IjxfMXLbB1XuHc+r3VvHAxc13kumXuKBnIat60mlJ8r8Wb
1X27R+KjrP6W99o62Ezpel4ruXrJEMrcYedicl7Xa7M8ZvdlOZZolvW0F56f
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
UqJBq/WQNZD1rLix5KWWl0qP2PvZ1/fXme0KS7b+5L1FE22/l/mx1LZ4fnu+
q762d77kLIr3s57fzixW3y2HrHI28i57pnadpT6k5uSMCi+t5mLrdVcZzkdi
qazzxcMrTbTeo9Sw9IX1/Cu/bbFBME/OdOX9bKZtMVO0lfiKMr+QfrRaQPZi
MVA01J5R6YuV5yfnS/TL6ovVpoKlVdZEevbae5QMzXKLxcYqy7q4aysee8Wl
NtcqmLnQx9VZW+9KnkPOxXohy1Gff1+8U+GZglU7p1gfsspsi/9czVmvsy79
VTTr2ktbnJfs2tbf9k7JT4rfJudL6ml5qZw70R3r8ew5FvxbDKy8hJ0RXhgg
/VI8v60h8WalLy4wUPzStRclZ7rqxzLLlHraviv+mXjI4lteHF70tMyMq5mr
6GPhouIVS55mcWjrY/GzygZXfsNmbisNvcBA8UsknydrLt6jzGjkvAh/Wk0n
uraa61ezNqnbStdsbW12Rzxk0cdVrmtxRc7IcpTNVUiflvzNenXrwVY9ssqy
LjCw8ktltrK9VvIrgg2roXYN1g+Ud5XeIbxk5ynrIUttrXda9f7qzrHcWdja
Fn4rdVj1juUT8vvSIwTzds0XGCh+iXDUqybFi9qcp2RuduYqWRPBht2j7R3C
P4Q3rB+zfGjxTLxQyaIvPD/pRzvLWB9C1mnrUM7XerOVl7OYKfu1fLKaZ4uH
LHxbeIOc0YXHeL2r+M/CjaRP7XNK3kuwZ/nQnm+Zp2x+uPL89vPK162ymqJ3
pM4EA/b7VY8Q3rD7tfmJnWeLh7TnezHHlWcWj0G8E/GfhRtXZ2S9MZmXVxgr
84vFgH2vzT1Ij5TPtkcsv5E1r87aej/7fem1FZYKhxC8rfi8YGk1lxX9Kl6a
nJH9zUWGc5ETEjyU3rEcWDJzy88rP7A6U3vW1ucUX2rnfXu+hIvsGZVzKViy
ObDN4i68Qcldrc+02LPPJBxl7yNsnl+40a7H5oQrviVe7kKPyMxlOcf6AYK3
wgMrDie/KfOI5RbiMWwmUPIZMueWfrGcvOo1y+eEr2wmYz2J9dUWh7ZnyW+s
VyxzGekRUnNbB7IGO78XPSL8b8/O9uDqvsb6z1KTlR4VH3KRCZRzsf1ltZ58
vug1wucES681lGyq3M2ROpecxM6VZP1lJi3z/iqvsPpr+Y301+pOofSg9U52
DaRnbU1K3mL5nKyt8BL5feHAktna9dv12F4rnrzkJCUbL7UqPX6xfsIhhFvK
vF/yCuv9ilZaf1vWvOKfkqVYPKxq8tpv8dWreYH0aeEQ6z2I/hKutnuxXtf6
iqLLxTMQ/iHPv8iybM/aNRcOKfN+mTtI/xZPReq5WnPxRZbT7DlaD1NqUmYQ
Uttrn2A5pHgPm9mWmbHMgyt+s/mJxaTFrcWD9UgW23aPlk/K/FXqZtdA/pbo
48rz27yL+CLSR+T3xR8WP7aaSUuWuPIJKw6x+Cx7KWuzmC/8Vu4piP6WTHU1
31k9KnO61eWS/ZJn2tzS9qblH7KXsuaLXiAcbutDOKd40de//wEjX4/Y
         "], {{0, 
         128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", 
      "24580558256129418488831337020120596557"}], ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.05918809399008751`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.9408117532730103`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzVmr3KrutVhTcRTPAEAnYWVmmMaVLthaVtPIIdSKqgkEDEzlPwKJRYWHoC
VjYejJBSTCDCam64Lq4xv7Ut3s27P573fuY9f8Ycc8z1Zz/9u5/8/DtfffXV
r773u//85Ju//6tf/vKbf/ibP/79//zsm1/86C9/8Ue/+/qPf/j8/vsP/+sv
vv7xP3/n07//568//fn3fvD1b7/7p5/++m9//unzv9vv9pzPn399J+eTc8qZ
F++6+O0qdvb8lW0X9yo221h822xb1Wyxp9iwuuNH1tEK32xc7Dn/+pvffP1/
n8///t//9Cef/uX7P/z0P//xb1+T7/acz5+3n5f9F2devOv6U2Jnz1/ZdnGv
i9y7tvMin0vNXvvhZYP9+3WefxtyzPptdc4qjp8/fxG7VYw+75UXuXHx/cUN
7G/t+eW3xIZyr3Lfj/T/yjZbg6/nV7lUeOCrBgmPvcjzL5VjL3ssHpLZgfi5
xJHYb/15gXsXdXGN+a+/k3x4xcLWC/mtzT17L2tn6enF/xe2lRpc5dLqty/7
ixZk8/xLxfFlz6teLB6+6ovoVDaONvdI7Ao+rGbMgkUrzCc1vqoLEi+rQ1q+
Qd5luVOZZVb+v7CN1ODq78UPNq8shtvffqk4En+WM+3uxvYXi8+kfsk59vwy
+9i/f6S2QPLE1kXhkIT/2Jy0/YW8a1W/1v8XtpEatP39wg+2L1jbiA3l/FUc
CW5YHCZ4brF6hc/l37SU2dDOyDZ/SO5daAu2X68wqnAzwm1WH8ttSv0S/5ec
ueBpJBYf6Qdip80fUvvk/FUcyW9J7ZN7WUwmWFTwucRixeGLH2zuXWgLhV+V
2iSxs/yfvKt8tzqhrV/i/4teuZoNLae68EPhTva9NsdWnMfOHaXerT5j7Slx
t7Gw2ELy1vp5tTtYzdRl91Rqs/C0omOUucnOp9ZXpH9ZnCe5Z+++6lMrP5Rc
LfyB5NgqjhY/SQ7YfCBaaKll638bC+sfO0eTHFjNHUVbKPVYapPkFYmdvZfd
p5T51OazjeNFr7Q4c6EhlJ1F8cOKg1ltx/JPW4MWf2w+2B5kNXPbWy3nLFzX
5hiZR15+uPBz4Xs2ny9mHHIvsgOyuGfzwfZuEqNVryT+LLEunIfElPjqZZvd
gxRsL9rUqo5sLtlas72GxIL40Mba9uuLGik7FHKv8n21pyZ1ZHGS+JC8y/bi
VQ8izxeOWuYCi5/230gUnd8+X+y3c5ntC6u7r/qUzQfLb4umSmJXcMli9UWN
vGJX9uD2O8ElknsWA+2MY7mExYqC86XGLU+75pNWLyW5YXdeq3wo9hcbLK8u
cSy5YbHUagVF67v2ua0vi5/EfoKTNs9LL77mn3afbvNwNZuTHC589QIPV3Ep
HM/mbdHZbB0R+0tO2riXOJbcKHMN0VQvYr3yudUKyv6r6LFWIyr7TVsXhX8W
nkBmRssrbF8oOqq9V8GTEhf7byqsBlvq2vrNzn3ED6tebONofbjKVXLHa03V
fmwtE8y3nGrV61+22Z5lbV7lvL1v0crsbrdw7xUntM8UrYP40/biwv+JzRf7
FJI/djYvu0gba5t7JVetb1exXunYJIft7F+0GsvZCE+zmqHFYZvzBYuI31b/
DsT2uLITKZ+V5k9yu/x7DJInZUewqjXrc4uBpa5Jn139WwubG6SXlVhbXaLk
zIW+UXr9K0aF6xbOYONldTCCb6sZ3963cJuSw6uZvdhv/z1G0bUKb7S1ZuNi
c8xi8up5+28tSg8lvazwOsLDC66SGZBwg1JHRSe3PrH5aeNlY0dsK9y1zJ4W
w+2uYcVnVn2H1O+FnlB4I6nlkp+l31luT2qf+OFid2m1MmJb4QxFEyAf4hOb
e5b/WBy2PWjVr21dWNvsfS1ntvVO4k6esT2UvMv2HYuZRWewuVRqxPLbsssg
eFLqjjx/sbu02E5y2M6Sr78XXC2zg829lSZv71JssL3Yar+2X19zY1JHFt8s
TyDxtdhS4khsJrGzffN1XzsDktwm9licL9yD4JudR2yNl3nQ6gwWS23e2riX
mav0I4tFNodXXMj2pmsNf8WNV7EoWtOqvkhcLHaRXkNw2MbF+mSVJwVLy4xM
fFVq32o4ZB60uEfuUnRvEgvrk3J+6fVlziV1XfKT8DHLY23NFm5s87nwB3vH
Ul+lX9v5umDgR+JPyT2CpWUfVGafom+Xj83J1Uxt+/5KuyO5Z21+3b3oRZYj
rXQe20cK377YAdn9I/FVwdjXb0t9rfaYFpNtbq/wp8x6do9p40XyecVDVt9X
M9RK3yC1Y3X1FTcj+bDSi0oOrHpi4UhltrrQ3F61afHK1k6Zne33EvcVJtu8
LVi94m9lN2F5BembRKddYX6ZoVb6hq0dy7sKNyM5ebGTLTlQ6vp1L/J3kieE
/6/2a2X/ZXPJYu+q15d91gqTC3cqs/aKv634uY1F2dEXDmZ9S/xja7bsQYqG
aftL6V+lp5QcsPls9RlyL9t3VrNS0Z9JP7L3JR/b623Ol1oumGz520ofKDZY
fm7znPAQwivKHsr2Edv7CJ6/bLYYa2crmzO2f5FYkJqyvcDOJhYrLBYR35bZ
c6U/F25p+TA5x3KV1S7V1oKd76w/V/oAscHyh1I7pGbtLF/m0wu+uuIPZZe0
mgUuNFt7F/Ip/W5VjwS3y3dSm7beC7e0NWj5dskZi/kXmqT1m601i1crzLE9
3WqPBc8L5lzkf+nFFq/szFX0ioKlNpfsXGb7XanHgoHku83blX5L/ECwxdbO
xX2/lCb5+m3BeeJ/W5s2nwlnsHPEKofL7myVD5ZDltoheEh6ro27zb0VTlp7
rOZp40vuVfodqTXiTzsvEMwpWnHRDy0/tPVifWLjbs9/nVO0oMLrilZg47Ka
xy3mkFgX/cRqDq/asX3ZcmOLdSuuuNIKypxla9zqBnausbsMy7ss5pS+QHxr
fVW+W7wqcS94aHtK4UIF00rsSF4VH5ae+LKt2PDyM+kLVucsOyaCkwUTLt5b
an+1HyE5Y/s4wZ+LGrG1WbCiaBpWo37ZVnQ5krcFH8rcXeaRkjOE29t9AbGn
aDKvu5P6tbOG3fEVbkZiZLFlZc/qvaX2S38nsV7pWrbWbI1YP9se98qNomnY
2arMHbZH2Hmw1KbFN4sJtl4IjyK88XXHolNZHcbWGql9y5dIjhX93+ZDsafs
pF7vIvcq97V8aaVr2XuVmbHM5uRdpXcQLC16iI1F0bFf51gbiha36jsrbc3W
YNn/vnxoNfPy94I55e5WN7A9q3Bpi2kkn8t9V5r2Rb0QHlhwwM7mlu+t8oHk
RsFnEmuLyYWf27nb2m97H3nG6mykv692TJZLEF99JH8gdye+sprnikuX2bbE
i+Re0bRt7Eq9rPiGnbttzhQNvOSk7R2Fk9hdw4UOQM5ZYYvFW4v/hT9c70yJ
/4kPiQ0rPcfW4GoXVrRTqxmWvc9Hxq7Ui8VJa4OdQ21fLnqgzZ/Sm1a7LctP
rP/JOav5q+xfrvmDjZHtgyTHrvmDrX1bgwWjiB8sf7axKDqV5SSF+13sj1b9
xfbTVyzKHcu9CHaVOZTMRHY2LM+TurP+JO8q+5cVfyD1SPxZ9ndWfy78ofSd
0t8tD3ndl+CGtc1ijvXPKnalXlbzL+lNNt/KDL7CjcK7SqxJDRYuSvy/2nNZ
/LHnWD9Y/cp+f/lnxSVW/MHaSTDEcglbvy98tv201LXFfzs72BnK7itLzyI5
sNIKiqZacMPuXEreltosNl9oZbZvkrgQnxD/rDQB8t4yB5W5o9S1tZn4xMbU
cjwb6zKb2zolPnm9y9ZdqRcSL5JvxE6Sb2W2Xfmh9AXLLcsOjnBRq3us5n0b
L/suO4fa2cfqq1ZPsLln7bdxKfW7qvcyi9naJP5f6R6vd9k5xfqw2GY5JLGT
5OoKh60fSJ1an1hNoMyM5Hyrm9naJDaUGbDMmEUbKVqo1bhKTElvtbhX5gXb
m4idBa/sbE5yr8wd5HkS66KpFo3Ccp4VVhQd29Zv4e22Xiyvs+eXedz2r2Jz
0dIJppXaIedbTcbiVelBdtdp54Uy95EeZ+23+s9K47L2lJy/mMcLXyI6ksUK
a5v1g+VjBf/LbGjPL5zB4nbRpe27rA2l913fkeTVanazdWGxoujGllvaHmrr
zv629AvrE4KT5I62913M3Rdah41LmR8vcIzUAsGZ1b8HKDlQZvyCA6t5eXVH
cr6dQ1cxusAKy50KtyTn2+/En2Q2sX4uXJTYTPC5aAJFW7jmhKv5sfBAO9sW
DlCwt5xpudbFbFtybzWjkXtZHYb4ocykBStWWHQxk1ocsDsRixvWJ9afVodZ
aVM2jkVzW+3yLK+zz69yxs5K9r2kLixHKnPNKk9I7q1mtFKbhGMXjLW9o+C8
xaKip63w2daX7RHk7i/fEputDvN6pvSdUsurHCO5bevL/r1gTuk1VisuvMWe
aWdzy59JX7C7pPK97BYtVyw6j8UTO4cWnCHn23nwgvsRPLd2rvoUqbWysybv
sn3tWmsiveNijltxAFsLq5wv/dT2nTJr2H3Ty+ai1xGfkLuvdnZFly56l+25
5PzST+0zlouWGcfOg2XGJ32taEEFV0uPK/zH6gZFvy0coOC5zfmVPy1GFf8Q
P5Q+stISLd8rOztbj/YZm58WN2z+FL2O+JbYb7UOyxleeGK5FsGEVV7ZXcDK
TtvHiW9tvy7PFA5DYnfhT8tRi39sjtl6LzzfzmUFM4ueYJ+xHN7iRsmf1exm
e2vJB1unRbsj973gLQTzbY+zMXrl0suGMm9a/cfGjnwv56z8ufK/jQXp0Rca
mvUtwQpbv/bu1ueWWxZ+aHmatdPuC+xsUnqExdVVXGyNWN3G1o7N1eJzElPy
28LzrX5e9JMLf1qcJz60PrH9wmIOsce+i9yr9FbbK1f6T8EN4v+CJ3a2tVhR
4m5z7zoupZZL7Vi9xfrcxsvmT9nfWR8Wne3CnzZXC65anrPCamJDwZbVDtf2
SnvOKodXs6rVKsmZhVfY2rH1ch0XG69SO4XDk7uvdp12frS9svin8KviT3L3
lS76sp/UdcmfVU8nZ5beWjSBgjM2h0vPsvpwqSmS/xaHy87ilc8X3IbUctGO
SrxKrVncs89b/F/trInfVv3azmilv1u9sfA9Ujsr/daeb/PKagIWZ1ZaSuEJ
ZY9snyk4XO5utYjCbWxeXeuutqbKv6koOGk5m+2DL/vJvS52PcQ2209tvyY+
KXyv8G27y7B9pORVyY0VB7Nz9ArD7YfgjOWQdtYreGg5pO2/JK/sbGJxpnDg
i71qyfmCP2SOW3HRlW0kP8mcVc4vfZzUpp0TS/5b3lj+XUfhYCS+9hn7Lqvh
kJmX5I/duZd7lbq2PcXi2EoHK3hF6pfkduGWttfYeXDFRQl2WcwpmFzOf71r
dRc7J5a+c70HJHG3+uqFf6yWYn9bZkYyxxF/Ft5l65r0Xzsf2f5VNBliD4np
aq9qfW75BnneclHbO8p+h+CGxbTVTF3m6MJz7F5jtQe0PdFi4Mo/5L3lt6W/
Fx5C3lX8TDCh9A47m9u5idRF2Q2tfFI0gbJbKfW+6h12hrX6WLlvOeeFGwQP
C+aTvCJ1RHLeakQ2l4p/rK9sD7V9zfLA1Y6A8D2bM8TmMgMWfcNy9aJfFZ/Y
mYj0CDu32npf9Y6iV9i8svct57ziaONrMd9y0TI7F6wu+hKx3/KxomMXTLjg
umU3ZP1WtIWXDTbfSv8lsw+p2aK3kL5gubSNdZlfVlyx4JvlmateZvFnxYft
Xezsb3lU0eqLn1ecrWi2Fq9KfO1vba+32qmdkS3fuDiz9I4LjaXgWPle+P+K
K9q5yfa14pOCG8Q/do545Yy9I+FRZK60eWW12TJrEF8RDF/xhxUmlF5sY0ps
K5hcZvYyE1k/2DnaficzyOpdBIsIhheuSM6/7nGll5W6s3csObPCqFVerfi2
7UcF/y96n8WE1d3tntfiw8XsVs603KbkXqmXojcWfLN1Ubgi8e1H9jjCGUgv
s5zh5U9iv8XPwh+KhmD3pB85w1r8t9zM1qaNu707+dj32l650urtmfZTdIOi
3ZE+a/OhaBove+zcV3LpI3uc7WXEZlIj5F2lB5WZxWoI1ier3mRzz2JF2deQ
e9lzCrch2HKx37QYS2rzIpfsb0mOrbR9m3ukHks/LTaTd9l+avtOmbVXGhfR
02wc7Tm27uzMaN9rsWJlD6nx1Yxm85bMp6ue+5FcmnCh1c7C8pzXb8ucZWfz
VaxfdW19VfKTvMtqdxYbixZRanlVR6842rmS8HnLAYjNxf+rGdbab3tQwUPi
q1X+E0y44NKWJ5edhb170XOsT8q8Y2Ndnic+Kf9upPQmi422Nkst29ywcVnt
Jkq+FZ8Xf1qcLPbb/m7zofClwg3KjPNt0OqtbWXWLtoI6Vnk7zbWdo6wGpet
a3LHUkdWE1j1yhW2k7jYWljFizxPfF5014IhxB7LW+xcvOJL9nyLFTY/X+df
aPWv+FpeWnavZSe4sq3MUC+/WT/Yui74bO9eMNaeWbDd1qnlsSVednazvbho
6XYHRPxDeJfNkxW3L7y6aCwkt6+1+oudhcWrMo9f2FbOtFqZxQQ7RxR9idz3
ov9ancHmvJ1Vr2eognu2X1t8thhF+qztaxeYY997PSuRmr3Q6sms8Tqn4NVq
HlnZRuK10rEtJpDasTm2qiOS8+R8G9/Cw60mfzFD2f5o40g+q/mr8A0S0xXm
lBx4+W01K5WY2t5qteILvLKz2IVtNueL7v2Ku9Uqy96N5A+pI8KRCh97nWnt
X83CF1qE7Vn2t1Zj+ch9VuEhFnMst7c4s9JzLGaWnmLja+cRgldlr1dsK/uv
wnOsnkby5GIusDVrsf1CGy/vIjFdYXixjZy/4sAX+6zCQwrm2HcVXLJ3We10
CFYQ/CkzKbHhAldXOiHpFzYHVjpD2ZFZnmBxgORn6ePlviu9sWB4ObPwtNe7
Si2Xvm8x09ay1XAsryA+tNzbYqbd3djfkv5e+Cc50+aD1ditb20OkPm66Ay2
n9p6Ic+T76WPWx5i9bELjmd9W7Da+pzYcF1rrzPLHoc8T/B5xaOKlmIx096F
1LKdKy1ereZukmPFtzbfiA22xkk+25xf+fN1jvWP/VjNueSk5Xi2F1vflpm3
9JpSa1YvsjGyv135baWl2Py0mGDzp3BUck6Zu0neFr3X+p9glI3Xtc3Fn6/n
bUxtnlhtgfi27NSu+zXhWnYX+boLsc3WWukjF5qYzYfit5UuXTg2OcfiZNGF
bI1b/xONpXxf3X2V/9Zm4rfX320fKfpA+S2p5WLzNccgvdj2ZesTUvuF5xe9
pcxlZV647tEX2Ev8tuLk5F4WMwlHutj9WX+Su3/kHtO+l/CWUnekR9vz7YxA
uASx+YJjXOs5hW8QG1b7MovzNkZFn7/o0SSXLPbaOiLYYnPM7v7KjFPeZTHE
2nO9x7ScymK+rX1rp+1HFruK7kpsKxzDailWl1jVl9XK7CxPnrGxtrldeoe1
2XLdVb+2PdpiIIlpwSg7y5e5yc56JAcsbqz89noXyXlS+6u6sz2F/H01+9h6
sZi/0nMK37DcbzV/kVy1db3C81IjtmcVrms1K1vjJA9tjZO4l1n+9Yyd6Va1
b3XvUi/kjrbPEv9cYy+xgeSG7YNWv7V4VXKvcIAV97Oc/KJ3fCTPX3HRcn7B
FuJbe0eCLVZns7l0EQuraZBaK3vM4rey+yN5suL5NlcJtpS5ifS7Fc6T81fY
bnd/Vnu0OVZ6x0fy/BUXLbuGEhfLMWzdkTsSP9tcWsWi6MbEz5Znlliv9POC
XaTWSM4UrCvvInlScJ6cb2t2pee83lXieNE7SJ0Wnr/iokXHe9WRrX2CVzam
BZesb62dtndYzcrWY5nxy+y/ijvBLoL5BcMJ1tkYWd61wnnb40hdl7yyOmTR
HkvvsLW5ykOLJxfYWHT1ktvlLiQuNm9LLKw2stqPlLms4Mkq7va75Vdl92d3
W6v6KthY8sTuE4k/bb0Te8jfC97a+No8tLP/irPZnrXap1hMW/XxMo9b2wr2
lr1D6XEWnwt22foq3NueQ858xZpgYOkj5Y4Wq0meW+600mytJmPx1s5NNg9t
PdoPyTE7jxddpcwIpY+vOAC5o+3Rtl8QzLHnWB9e8G17TpmXLWcoGEVqp9Sv
5Q8kf4g9xf6ipRc8vKhlO+PYfmp50YqrlLmb9D4brzKTWr2rYKbNVWuD1cAt
V7c9a8W3if5QNI2VDkbwn9zLfrcxsjVYdJiCFbY3WWy0OENssD58vddyG/I8
0cFeZ5b6tflgc/JC4yI5RvKnaPt2pi69mOQS8aflGzZXCScs8bK4dGG/1YRt
zpSZ1844RaMjv73AxlLLdvYs3602RTjPSgO33K/k5Ko2Sc6scM/+/YJXvHJj
lc9lnrJ9fNWXyflljrY9peyYLD7bvZX9rdXorE8KNpaZy86Vttfb2rfcoMzC
5F4X3M/WKanB1TxbaopgcslbUi8WtwtG2RwuOL+aN+0cTe5SdBKLh0VjJ2eu
9J8Lzargs8UiUuMr/Lc6hq3NVT8t3M/yh6Jx2XnW1kXpxSteQd5r7bR5XvDE
xnE1b5IY2fwpOomdAS1e2TPLvUpPsfEi+Gy1L4vbtn5tHEn/Ws0aq9mhzLOE
P1gN0OaG5QBlxim8wp5TZnzL/WzcrYa5mjdfdpK42xiROirYUmal0nOLHmvj
Zd9VemLZF1i/kZyx/iGYs5odrCZTeKl9F/EPwRZiZ9E6bJ0SP5D8t7Vv7Se5
VOYmG4uVhmPPtHPfNbaU2ZzgUtEtSS2Xfmq/Wyxd2W97kMWcMjuQM4k9hQNY
LaJoX5Zv2x5E3mU5z4p7FE5OMMT2R5vbpA8Sjkry1nIwmwMFW2yvvMg3Gws7
U9tZ6WJfUOy3GFW0l1Wvsfa/bF5xMxsXws1K7Ky2Ruy384K138591zyk+MTm
JMFMO39Z+0u92w85s+Rbwbfy96KblVmS1JqNL5l/S7ysbase+pH7tdd7X38v
/rEYa+9idfVVThZcKv2raFarmrJ7t9KnSr2X3YS1ufw7h7LbLXtD2+vJ/GL7
vtUzbR8n8bJ1QXqrfVfp3QS7bByLfwq3t9xppT2uet+Kh1jsLXze+mSF7VZ3
te+1ttl42bwlM5TV3Ej92v0mqU3LtYquteJCF76yuGT1RnvfwudtXr1iVHo3
sZn81vJwosWVHY3NE+IHmz+FM5P8sTzz5SsS3zI7FD5D8nCV8wXzSZ4T39q/
W5y0MX3dvcyV1lekvxSMKrMYyY3Vb0tcrEZhed0KN6wfLA8h+WC/rziz1cQu
8KHUoI0pwQHyPLGT4IzF/Iu9mOUk5O4kb+1u9EInL7vgL8V/Vjssq12Tv1ss
svzW4v+qd5NYF25jbSv8qmgLVhOwsy25S4mjjZF9huQPyQfbs4pWQ2yws2fJ
MYsnhZ/8f+E/dq6xvy14tcJAyxMINpbebXuf1ZpIvtk5zva+ouPZnC/7poKH
xLfWhqLBFg5ccKbow6TfveJic8ziib1vifuX4j/WV4WTE7yyeEhq3+LSRe8u
u9TCxwhPKzlcZsCyDyUxXfWdEndrA/G/5erktyutrOwI7PNWW7b86kIbtHl+
wX9WtWB7pd1FEtvKbGh11NK7bd+54FqkX1itwM6Ar3NesSY2FL2R4IONL8lb
q9vYWrC9xmoFNm+tPeSZEi/ih5XGS/xQuFzZOa52T9ZXZf9IfG573wrT7Ay7
ikvxc9EKSo+wM2aZW23sSn7a81d3J3lSfL7SVMuey2Jg0XCsFmFtfvnK1pfF
t4JjdndJdJvy3jIbFkx7vcviUsGoosNYzmDn+qKlFA5QZkN7Pnme5HnhPxa3
L3xeZlvLLa3ea/1jY22xztpZ7LHxtbpB0W3I3cvOy+bYyp/k7zY3rP/L7oPg
jL2jxaWyOyD2k3ov55PdFskx4n9b15aPFUy2Npe9hvUniSN53s56ZV6w9pT+
SPhh4S12RrO5Yev0I3Gb8G3r/7L7sJzc6jkkBwpvLJzE3tdqKTbHrjUWi12F
b9jaKfO4ta3EneSz7b8r/mPjYn1u+6DlDMSfqztaTCu4bXti4edl3rT6j61x
qzXZ/LR7NIvbpIeSd13kRqlri8Nl77PSQOwdS9xtXyB5WPKnzKf2nNIHV7yR
vHel/5RZxnJs0hMtvy3zpvV/6Y8X+UZ6t9XxbHztXFxyo9Q1uZettQvuXXLD
alCrvlDy0Oredj4l/cX2XMvtV7Oh1RxWGnLR1gjOWF5Rep/1P/GV7UerfLMY
ezFz2Zy0Pcj+1vqtYA65o+13BQcKzti+YONisbHMp5YjlZ2j9aedDS0O2165
4icWB8oMvtp9WJwp+0HCeVZ2Fj5PepbNSZIDJI4lf15nrjgwqQvb7yyfsThj
57iVHmJrzWKCzcOX/fZMElNyx1KPthbIrH2xp7MzuL1vwQSSz4WTlB5n90cr
XC11bTmkjWPh5OT5UhcFQ2xvsn2EvJfEndQ18QPxYcGHwqsJDtuYWjyxHJL0
uMJPLMcgNtjZxO47bFws3yg6c+lxBLtKf1xpC0UHsPlj85nk7QUu2T5l42V1
GJtLpRZKf7T6/yoWq9y+0JRsj7b5TGL68kPRSYouYXOb1DL5lL5/wT9tf/xI
baHoACs8ITm/wiXL8VZ6gr1vsadgiMW91a7H6hsX+j/5bekvlhtbjdfyN+Jb
Ox+VedbOFyudtuS/xa7VXLDSFgr+FDwhOUz6Rem5ha8WzvA6v/SaC42l6A/E
TovVlvNYH9r8tDZfz5iWC9k4kh5ddAY7XxTctj3O9msSr5VuVvBtxS1tfRUN
geAS6SnFzzb3bFzKHFE0Fov5No4WbwkOFB+W/Cw65GrGXM0dtmZtrZU8JPdd
4ZXdp9ict/m2wgRy38ItL2Z8klcrjrSKqe1NBLuuNZaXDZYfrvDNarMkRkXL
LbrNyzbbQ8k5du4o+oOtl5fNhbdfzAsWc6ydNkYrzLR5SHxSZkA715ceWjiq
zT3bm6yv7H1tnVpuQPLW/tbyW9vjbL8uOUPuYrW71V6gzFMlV0nsXjZYe0rt
r+Y+8vlIzCz1WPqmzU/S70i9r3bWJPdedy96l8Xw0teI38qesezpLLbbmiUa
V9lHFJ3novYLN7ZzgcUHO3/ZveT13Fc0kwvMJNys7BAv+g6JL4kFqSPLpV+2
Wb5XdFSL4SSXynxt54vV3s3OZTYWJGfK7Gx7Vql9a4/NSVsjhYfbOcjWS+Fa
hdOWnLE90dpMbCt9h/TrwhtJbZI8JFzCYvKKD5Tzrd5SZjSCdRbP7fMW81fY
XrQXW/tWmyqaJ8nJwsNJjf8vvMekMQ==
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", 
      "320024124365477690559134299487833253915"}], ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.0960659310221672`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.9039223790168762`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzNmkHKNlcVhIMBcQ+OFHQBikPz60BwHIeiEEFHAUkyEHHiCtyD07gBQcSB
6DbciAMTUPgcXKiHp+r2O/hC56ff7nvPqVNV59z+xi9+/eGvvvLee+999rUv
/vPhR7/54aeffvTbn3z1y//55Ucff/c7H7//xeXv//v35fXX//XJu7/96Fvv
vv3HT979/Q8fvvvnz//6/e998wf/d/32nuT69BzzTPr807voesw9dJ2td93c
r1lP670tPFDstfbVwpKpKbO2V1j/oqaewu1NnPz0/Z+9+8ePf/fBv//8lw/e
3vP235P1nJ7zp88//+B/f/SZ9Pmnd9E9vv33t89M7qHrTOKTvCtZQ2u/p2ea
ddL3JvFM8HB6byv+recvaorW3aIW1pywrvEWbpM4LOKcPJOu7e2/m2cmz6f6
mMTN9BFJvVPMnK4NxoxPOK2frvP07zTvp/0u/GFrXwZLrZoyvvoV1k85p1Xj
Ldye7j/9thXnZC90Xwn/mFgZH5usjeJz7WcSfku0JtGdZP20XpI1J+tv9S/G
Fy32RbG0qCm6NlMLa06guTA13sJtUpsUwxSfp/cmPNDy7QnGjE9OegGKz4Wf
MfmlNX56TpJ3uscW9oyXM76ota9Wv9zyS3TOQHG1WH8rL7TGaf9Ovf0CJ4Yr
Es6kz2lxI/XJSY0nHJjggfqZVn5bvcaif6GYTPpu2r9QfqA+hNYa7ZcTXLX4
x5xLLta/wNvNWRnVixZOKD6T+UnL8xsuorxtdGHRuyU4SfJL80LXYzSaYrLV
BxneTvyP2VcST4PtJIYJ9xoMUL5tcSPFcOvcxMyEDeeYWqC+y3BLK4+GW6gu
LHSNzhIXHoaux8ziqOYmfJKsh/J20ufSGk/WkKyf6gvF7ek5NObGs1EOaeHN
6I7p31s9tcES/Yah5eFNHpM/M+cxmDR6kWhxy8MYP2/iQHul0/2t2T69J+FJ
yidJzRrdpL3AaS/mOxCquYuZDM2L8a7GR9EabGGppfvJTMPMEk09Jrpg5vYt
LBnf3sI27aFaffRCLwxvU1wlOm7OqWkcTH5pvRs+XNTLglcXHL7olaiPolxN
PXyL9xItoHMeGtuEeymWWrVssG36RKpB62s6N0vySGdfxoMZHjA+nNa7qXG6
9xaWaDwpH9J3tfJC92LyQt/V0s1kv3TOkzynpWuGJ83smuaaauUreDn6XjpL
MWeLpi5ov2BmqsmakzhQPNOzCYMl03+1dHbRK5mz2kXNtnTTeK0EnxRjLV1L
Ym5m1/S9RitNH73w/AlmqP+k8U/qmurO+ryJ9trUYyxmHSaP63lsiytuzpZb
NbvQTVrjCV8ZXTZnWC1tTeLc0rXTu5I1LLwc1X1aj7Q/au33qfOmJG4Ue7QG
F2dwrfMOg1vDFWt/RefbN3Uz8VpmNk7j1uptTZ22ZsKJrrXOPlpebuHPaS3Q
/shgY33eRHnVeI8Eh62YtObqJo90/k99V8tvmFwsdDPxVKbGFz0XrS+j3WYm
TDUliXkrti0tTjiKztkS30hrMMGYibnhxpMfMN6D9p4tjqIYNjVOtaZV41Sn
TC5a3EW1IFlzq09pxbx1zmVmmKYfoWsz8aF5pP48iblZP+0p6PmjibnhxgSH
i/caTmh5UVNThkvXHruFN8MPRo+S+jXnRMbbGF6ifVBSp6YXONW48brGy1Hc
tmZWdP1mv6d93TxvWvfRxk+2NLF1tp70zrQ2zR6NdiR4M9yV1GMSw8U5kcE8
xSp9/ikmxn+aucSi96EeI4lPyxcla1v4+ZbPMd9RrH0y9TxGExf8QONPn5ns
sTVTTXibYoD67VYtUO/X+nbihNWW/6Q+oXU2mvCqOTNt9V8Jhhf5vemvFv1d
y38uuMh44Nb3DGZ+ldSdeSb12K1ZhLlONJTWAu21DVYphk0MT7xh5smUz1u9
D/WfBktUT01+aR6NvzJeNOF5851M63wn0UrqeSjHmvlV8t6Wt6G12ervjI+l
vrTFP8YPtGrN8D/FMF3Pwhsn/a+ptdacgea3dd3yOQvMm5lGgk/TW7X0N4mV
mb0b/jdzaTqzXeM84WoTH6q5lEvNLKV1jpZg2JxxmDOC5J7WfKA1r6D5vemX
jC4vMJ/4K3pPi9vXvHTCAMWz0fqWx0t+u8B569sYM3tJMNma7Rj8U95O4nbC
Ep3J0DOvtf8084rW/GHNUa3vOlpxSOr31TTUeEjqnehvW96G1oKpwYW2tnoW
6plbs50W/hMPYOZjJramV2r5TzNnSDTI6Onal1IsJbVGOdDw0lMaSt9reDj5
LfV7LW40tbOYDxvPb2YvrbODRGuML6WxMlpJ19Dq643WtPTIrHPhbxdnqWa/
ib+leX/qLLLVw9L7kznS4jsWw/8U5635SRLbmx7V9C8J/o2+LLSSakdrxpVo
zUKPDA4pJ9O+z+DZeAlT48aTP9VP0Xgm+aKe0HhR2i8k+zI8tpjPPMUJVCNo
v5asnz6TaiVdg+E9w40tPVrg0Phb42doXRu9W/j2loaavSRro99ynPaVxD/h
GcN7yb4oToxmmVpYcwLl/xaek/gbrUw4ge6F9tcUqwn26DpbODT6Rf1AsjZT
d631tHj7Zj9Fa7BVy5SLDO8lNWW8SsInphbo+aDhLqMFLTy3fGNypkz3Ynx+
i0OSnBqdanFyiw+TujO8YdazyKPxcsZDPnVNZylJ/VJ+Np7f4NBgw3BCgjfK
/68wP1+suaV3dA2GGxczbdM7Gx9IvUrCG635beu7kZaXox7yKS2gPE9zZPye
0dMkd0nM6dmHqc1WrS3ODWnfSvnfxPamdiTcmODfzOoTPmn5QPo9CcUYjZXx
UdTHGi9Ha+cVvk1KOIfmyPgfqqeGh0+YoV739NskF4muUS9E8WzuMT0LnXvc
1A76/GS/Sa6TPS58YOIZaJxpHdF+Kqlx2hu2ZmuJhhqPush1a85Dc2G8kOFh
mtMkDjQvVNfovlo+n3raBA/GRy20g543mbpI8rj2h2aeSbXM9IyLs5vkXRS3
ZgZ1etfN87tkDUms1vW+Pv8yWmCeQ2vB9BTG59N3mVgZ32t4jOKcPsdwcosT
Wh6jNaM74aQ1PzdnnYvnt3jPaA2dLSQefl3vrXe9wrU5U0s42cwt6azD8Mki
v6ZXMjinz0lqreUPzQyc+h86Kz49M+Elw7eGYxezxORdxkskmE+0I8n1ot7X
c9Gb161aWPdfCf+YnuUpLCV+nq7N6NfiHMdwwkJfEv6hcTNnlGbvrVmi0Vwz
I6XPpDg0MVzo9StcU8+QcP7CM1MtNrOLVn6Np6L83zq3NeeSNM60j6O9Bs3X
oq+hfEv5h/ZQSR6N5ppvTqjPMXhOYkhnhou56E3P3/rGxswtW7NKql8tP2a0
g/ZfxgtRzaVxMLpvYmX2bt5l+iaqO0lsk3qkNUI5geY6qc1Wn0J9rJmbvZoW
UM9g+sqWHtFrqhdJfJKZJNUOqiPGd9E10HeZvCfxbOXU9A40hqYvNjOok3Yn
fpv2kmZGas76W36bxifxRQsfsuD/ZF8tPBs9on9GvxazI6Mjxjudctf6TqZ1
5tWarbU8dnL2nehggkkaf+OrkxqnZ6/Uk5se2WC4FaubPmRxTeeEBs+t2jca
nehXwtVJvVAfaLTGeKdW/7XApJnpGY9Na8RgwMS/NUukNUJreTE/pzGkdZTg
ZzEbWWuB4SXKsevaN1pg7jeePPEti/PuRf/VwmrrDIV6koR/DB+asxtz/kK9
RFIX1K8mHon6ChrDVi9A+4uWD1loAf3Wgnrgde1TP5PkgvKb8RJm1kT/3WC+
5fEoJukZCtV0817Kh61vVOj6k3qnXrc1Y6G61jpHoHxFeyuzl0Ut0720uHFR
+60+xdy/0L7WGbf5ZsN4D/MuOsNJ9DThf/rehNtb8TSzL+P/E45KdKHlvQ1X
m5wa/2b2sqhlmiMz+2r1VtTjmf4xub+FZ7p387foRxZ4S/Q94XOD2wQbLe0z
sxq6R+r/k98abK9nGmZed7NfNhzYqi/jzRbej3p72pubOXbrDI7Gh3J+C5PG
e5g5HtV9g9sED4ueLuFeOvta+BaqL626bsU88YotHlvwQMJLtL4od6173tYZ
RBJDkwtzBtfyxi0/TPduNJHmKIkn5X+juTe9HNVN6vlpXuiZRYuHFz6q5YUW
/XKLW0wfnWiH0UqTU7p+U78U58lvTY9PzyKTeBo+p7hNctRaz7pfW3i5hTdb
9Lwtjl14aTPTbvEV7ZfN82mPmXBjsuabdWdmuWZWafoFGtv1GTf1tK3zMpoj
2nMteO/m/CHByUIvWrxt9GJxTt3SoIX+tjxzggeKH+obTc+b1B2t60V/Z/pc
Glva7xg/bPzqok9P+Jz655anWvAn7Y8S3mjp2s05qtFQ6oHpXhK/QWee1He1
nml0h2LD1B09/2r1jIZDzIyXrj/RhUWtUdzSHFEfSPmTeqo19mgPm3B+4mOp
h1/MUY0nN70ejXmCt5amU8/cqvdWL2Z6pZs9oOmtTH/X6lVpbFszWFovSY6o
h6G1TP1h0je1elXqeczcPuGrVnwMNowHpjVIz7Co70rqhWpi8sxFr2p6w2S/
1Fu+vZ/m0WDM1KbpVY1nSHLdmpnQHBkNSmo5uZ/6KJpT4w3MbJZyPuXAFjZM
H0r5OXlvy78lPRd9fsubGT+Z7IXmi85dW/9uziYM35oaN/ky/tb02gtfkWh6
cj+tQZNr6g1MLbfO9VocmGBj4YETDJgctWae63PMRa+a+PmWD2ldmxjS2jEz
MaMjiR+m9dXytIYzac+YaEdS4y2sGo+XPMdocauHNTMB04ee1mnmhAa3rRy1
zk0Wviup90QLqH+gf2YmRmuf9tFGy0wfaq5bfsns18yiad21sEpr1ni/pDYN
n7RmAsY/0N9SzFB8JvhP1mx688U8h2qomfPTXCe4oliifVmSR4p/qmvGOz3V
VxpNN2umnqeF1VbvYPww9botvab5peuk3LvwnyZHZvZI97LwXdTrmn6kNWtK
fIKZ7SQaSu9J9MLMGW72lUb7WrVsZkqGnynPGD+ccBSta8qHFP9JzFveoKXp
Jkdm9kj3QvOY7Jd6XdqPtM4dktjSejndb3yyqZebZ0k0j4u5gcE/9Sdmjy09
pesxMaH6YnouM6dq8X+r56IxT3Jt9pJ4Hlp3LU9levOEM2nuWrVA937yA6aW
DbaNLp/2ZXoomlPqXekzkz225rQ0hjQvSU2ZtSWae8J/y8MY/9zyTgnejJa1
OJPWCPVUpjc/4SSZcy58HeUr438o/xhsG11ONDTJ+83zo+SZ5vsN+vwEz2Y+
Q3sNU2umLlr+3OSXrpN6ttZ1gof1LMXUacIDrVmi8XXmvPup7weox6C6bDDf
0vSWrzZYpXE2tdDqSZOcUu0z/YKZl7Y40/RuizN943koZ5oaMdxCeaDl2w0G
knoxeKP8b3BlZub0vIbylZl1tzQlWVuCf1MLdO8J/1P/Q7FnevMkVoYPW7pm
MNPSr7VmUf+80CnqT2gcKAaov1p4vNa81MwTKFdQ/qR8bvJL45bovqkFWnem
J03ykmCP1h2NQ+tspaVrhrdb2FhoFvVXLQ1KcNvyAEajTX0ZDk98pqkF6s+N
Xif8ac4d6HpaZ+ULz5Z4nmSPpq9scVRL46guU6+YxIpqWfLexXzJYCDh51a9
UG+/7olamDQeL9m7mYeYeQLtBZL7W/6EaqjxgWZORT1kck056uRJqC5TvqUa
Z3gmWQONG9V90ydS3ad4aHm5m/Wy6ImS/VJMUo9n9MLMQ8x3AsaTL/JCOf/E
gVTTE5+wOBNs6UWC7dY5F+UlyjPUY5jZToIHWsvmvVTL6OzFaKWpl1Z90bm3
waTRCDMToLxN90j5vDU3S97Vyp3p6ag+PqUFrZl5cg/ljZYuUz/WimeS61YP
YrQs6d1a6zT1Qv9oTunz6byIzmpMvVDeTvZozmsMPhP+TzCc5M7oNa2X1hrM
deKjkvpK7jF5N/tKaqGlxS3vuu411udKrXqhf4n/pNqdaAr15K2zWsq3dI8U
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
jNb16fn/AZ+a51w=
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", 
      "106948342425382488412301983608519263756"}], ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.11214813590049744`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.8878449201583862`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztnD/LbktWxC8KOuCnmNRwzM9FEExl/AJeRTG4IIyBjCBMOtGEfocRTA39
SIIYCCbOgMhJWus3VdW9+n07eA77POynd/+pVVVrde/3h3/+Nz/+q9/65ptv
/vYHv/rnx9/93R/+5Cff/fRPf+fX//nL777/gx99/9u/uvzZ/3x+ff393//n
lx/82c++/Me//MW3P/zFv3/513/8/S//9s9/8mV1/fX9ym9X9yvtOPfQZzn9
X92vtE/74DzLmav22FN4oPPWwEZj/lNjbOBkJ54buHVw2I7ZnfH+9W//6Ze/
/N/PKcy3r53xrq5//tc/+vZ3/+GPvv29//rjZfvK5+vfft0mfdbOtaBjb3Pj
at5ujIXUGBs4oWtN8TyB/2k/nZhV5q2xjqs+tOfz1LUz3lU7ylp//f3X16t2
Vmu9epYzlvbYG31TvBDlyWmxkBpjCvOrNpW1pvdM4H/aTxqzNEZS8a5g6SP5
/8Z4FZwo8UKxpzyrHTtUCxp9U7yQwpOTY8EZY2pcSn+oBp3ik0Y9TdFWJ0Ya
8d6uK07g/MZ4lfupH1DabHNpWwsa/l/JnZW1mBwLdIxtzK/6s8pt6XNP8b+T
Jyo5Po0RJe+YMA+3879TK17xM81zlTbbXNrQgoZmUT5fxZSTL7RjwdEsp0ZN
+5PKvybU/2meqHA4jfEGLzXm4SPxf8oDKLzntEm599R1W7MUbldiiuYLO2NB
GaPj/51xOXpKfVGb/5U+K56c1uRpHaChBe3a6QQuao83pQWp3PzU9U7Nohy4
+q2SL5yKhVTfUuNSah00/zrlJx0MUJ536m9KH9rzkKqdTrhue5WUFrTzvoae
tjXLwZ6ypk5ekIqFVN8UX6qMS8HzKqaU/IuuVwo/dJ6VeaBjcepLKS1QMLxa
31v4n8Ys9SopLXD0YsJ1u58Ue413Mdqx4PTN8fCOpqT0rl3/p+voYFsZi8M5
q/VK1fFStdMJvJQar4NtRQtSucPO63Y/U37beRejHQsKhzc8PG2zUe9a4afB
JwpnOn5MGYui44p2KM+i65WqnU7j/1Q/nXE5ee40LdjZTxo71As5PioVC05+
SjXRmc9UvcuZkxR+FAxQz0YxprRJ71eeRdeuXfPc6fkn9JPmhp9ZC1Jc55zL
pX7M4cNVnCq5iRP79LftmEq1qeBQwYCjX6v1cuJIwWHqDEBKR055/gn9VNaR
9vOjaoGCZ8pjdH7oejkYU36rzAON/VP1rjb/Nzx86u+HOLpDcajonVM7ncCr
k/OURj3to2rB/+cx/6+PU7Ol+ztUdxQPqbRJeV6J/VU7EzxVo/7jxCb1LQoX
pfykotHUbyjxMpn/d2K1rVO0/7doAd2TpTUc+j3lamf/lPI5PTNJ9U6Z552e
qtGm8w4O5dLV+lINUnBIY19ZO/qsCbya4s8JOtU+s31KC1K1F4XfnPEqXE09
hsLzFD+0JkZj55Sn2ln/d3wL1e4UvyljaWjWNP+f8mYTdIrGGh3XKS1Qnpuq
vTTiRclHnJiiOFQ0iNYoKMYm838D/46vcLQgtZeR2uuZ5v+VWJjQz1Ss3ZIX
0Oc6tReH26lm0b6lfKBSU3LyAgVjt+z/prSg4SsaWuDUrBzPdopXlViY0E9F
p2isKbpGx3tKC6hXUeanEUfKvFG9cGKf5kqKNlG/cQv/p7y04ysUz+PUJ5Ux
0v0jqiMT+D/Fh+1+0lij76gq4729RqTElBNHtH6ixJfjA5W1o2ut5AIOxqbx
P9V6x1c49Uynnk8x7OjIBF6dgFWnn07/qTej89DWglPPpXFE503ReiceFd2h
mKFt3s7/CqdRX+FoLn1WSiOcuDvFq8pzd2LV0Xcaa6v2b88L2s9V/Izjc2ie
ouCE4pbWrpW+nXr3px2nythTfXZqlU6fFd5O1bV25ms0Xib0k+qCoxcvL/Dj
wsG5c/bG0R3K4VSzbq//0Lp3qs+r+aQ5hRMj7XHt1OuG7237CscDKHrRnp/b
tcDxTg4PK5qrfJR1cTDW1sQJ/N/AJ/V+jT47GkE1iOKzgYGU7237CgUDTp1w
NfaXF2TbSekjze/ouqz6n5q32/1/G590/p026VhSfThVA6R+6ZT/d3JMxb8p
50w+c15A15TOIcW/0h+lfWW9GvPmaOIE/m/jcyeHNM4FKXpxildX7Tv7p23+
p1hSPJjiK5R9zI+aF7Tbofhffe/E1+oeJZbpeB1NnMb/O7XgFIc4GrG6h34a
ek29x6mzChRLCiekfONHzQva7SiYVOaHzv+qTVrnaZ8hv5H/b9ECZy1o+7Qm
2fYANHYUHdyJVce3K31TfKOjRwqnKbrT0IJ2O3S/jHqVVd9oTY/6gbZXvJH/
p2lBe2+LzqHCXSkMpPZPlRg85Svo3K40QvGKKW1VtKCdFyhz1fC3zn4r5VVl
3al2UwxQHv5I/H+LFtB5UPCjeI/VPDQwkNqfOrX/6+iCEmvOOwJ03k7lBak9
OKcGQnWW8qqy7o7W0FyS+quPyv/TtCBVz6ReeoIHSNUBJvA/xdsq1pR1b9Tk
FT5Uvne8biNe6LtRSvtO/qusu4Nzh08+g/+foAWO1jv+h/rABgYo5pWx38L/
q34qewSpOFWwl8oLUl43dT/lgca5cSWnc3Cu9J+u72fg/7YWtOuZKd3ZWf9v
nH2ahitav1W0eOdZHacPjtelGE55dYWrU+uuzFvKq6/WQvl8Nv4/pQUp/5Pq
fwMDtA6gxPtk/l/1X1kXGsun8oKVLlCvS+vYDS5S1quxF0/9v/Oewqmzfzfy
f1sLdp6LPlVXT3m/U/sUKZxQ/qHf78wL6DxTr5vaL3DwqfQ/tRefer9AaUfR
uMf/PS2gmE/VjpQ2Ux6A5ji0TcUD34IrGsv0PaNGXqD8VtEpB8+OFih9dmp3
znw6WuzM1c6YujFOU1rgYD5VS1d+m8JA4722yf7fwT/19oqHTOUFSv9T7zI0
aqHKs2gtiK5p21s62vH8f08LlPGm9kOVWivVJiffT82bw2kTsKGMS/koY0+d
4afxu+qnUn92/IDjdVMx6Mxnw1tSP/n8f/Za0dnUfijFA41lmu8r3yvzRrnx
FlwpvE33Xlft07wgpV907A6WqNd1tEC534lHxyPRuKN+4PG/r7NOjZHis11X
T+3TKTF16qxCI34V3lb2GaleKBzl8AatLSiYSe2LOfV5ilvH/zixT8+BKNh4
/P+b6bLjl1L4dLyoggEnrp0x3lj/b/hGhYepP3f0y9E753unZpXy1W280TlR
/KHyefzf41jn3Gaqrkg9gMInqfhVNGIy/6c0zuFVJUdw+CdVV2mf+VQ8w6m+
UQw4+3p0L+bxfxZvylqs2my8k658nPd6UvvaqX2KCXigOk7PD6fmh84h1YKU
p3Uw72jrTi1w3kGm3unxv3+taLHiQ1J4U2r41B8q+HF8C81BbsGVc0aFctGp
+aHetXHmk+5bpXDb8GmN2F95vMf/PY/XqIs6sUDXWsEP5TGFuxr+doIfUDTX
2bucMD+Nd0CU9mnNf2ffKIekYn/lnXZ6qslx2sB84/yD4/3oWqfe62nUiifw
W2q8qzmnPDZhfih/OntAit6tvnf60ODqRvursb/6/36PRzHsPDfln5V2lL2A
VFxP87dOLFNdUGL51PykzirQM2POOw6pPd9pWtDQysf/2XVxcKXEguOfVz5f
wRjd13Zqxbfwf0oXFI2YoI+pd0BSuWHKY1C93qkFTm74/P9+/9PAvBNfiren
exlUC1J7xLfjiu5drn67c34obqnu03hxYid1nq2tBUpsUq18/N/zP23Mr/hc
wQxdu1Re4ORKn43/ac1nZyw3vI0TX22fP6GeTzGjPOvxf9b/tDHv+H86/xR7
7dz5M/A/HeMp/5/yNo4Xom3uPI/q4NzBjKN3j//nY371fePdSYq9Rox8Bv9P
PfypXJ56FeorlPZpXkm/p31u1PNpf+jZjOf/78I8fW77/cRTuc9H4n8lh6Jn
tHbOD13r1H6Z04d231I4d3zXCgPP/9+LeeX7FCapb2nnPp+B/xUPv7pnp/9v
1/+dsy4p/98+8+nEqfLblTdQ7n/8Pwfzjfp/SgvauY/jjSdghs6J4u2VHH/n
/LTPNqTeiWv0LVXPp2Onv6X1scf/czBPcdXOVRteThnLTn+7Ez8rnlfWWtGO
yfV/56zLaoxO7DhjoTincerkPhP21G6M0wmYp3hraMGp837T+C11vdIyGvuK
dkyr/1OcK/N2Ki5ojNP4UjBA1/TUntqNcXoK886apnJVx0uktGYCv6WulTM8
dE6Uz4T6f8rDKD6/PZbGmT3az9X6Ur56/D8T844GOX1on1tQYmECv+3kfyXH
Wd0zuf7f5o0JWkDjwvH/Su5D12VnTn1LnE7AvMPb7VzV8fOr+xVO+0j+fxXL
qzlRdHNCfaxx3piOq60FqTyacvhqjMqaKrh6/D8H86nnpnJVxZM4GqH8dgK/
Ode0z/TM3i31f6d9ZVwNLWif2aNe3dEjRQse/5/FvMO3qVyV4s3JF5z8dzKu
Ut5VmcNTXq4RF06tLKUFKW/jtEPH4qzL4/+zmKfPVdpP5arOOwhK+9NqlQ29
pt7V8R4756cRF7RWlsoLUt6Gei0lLpRYSMX+4/+ZWuC0k8I2HSNd6wm1ygbO
qXedHMvtuFD6r+CBtuPEWmrvmOpgKvYf/8/UgoamtN9ZoPhUxniL/3e8q6On
0/bHHT6kfE7zgpS3oWOn87/qP62dpjT38f8eLXDaSZ3boRye2kdQ+jmB32jM
OvzT8M8T4kKZH7rfrWiug//2GWkFJ1RTHM19/L9HC1bfN/JK+tv2PsIt9Q0a
s06dwdHlafOzGpeSK1EtUM4VU/ynvFPq/Ftbcx//79GCRo2R+u0UrlI1olvq
G6uxKJ6TzgmNqcnzo2iBohEKHhy8pXwXHfsEzX38v8f/NLSg8Szafvv+Cfzm
nDNRxqiMZfL+eIo/aZ3H8TapGmZKg3Zq7uP//f7HyROVGGk8q50LK/wwjd+U
/jhrROdhwvw0eFJ5N/xUbKbOv+3U3Hf+Z/9a7OTJ9t9wSOXCFDMT+I367dSc
O/WQCXHXwBjNudo1TIrzCVrw+H8/5lM82djborlqY99hWn2D6lGKN2gNZBr/
tzG2Gq9Tf6P3T/D/jt49/t+D+fY5SafNdiw4OjjB/yt6lJoTBT+r6wn838aY
orO0/vaR/D+dz8f/Pcw7fs/R8QZXNzytEtcT+E15brvOT7VpQtw1MKbMiXI/
XYsb/T+dq8f/+/1Pij93+pZ2XCufNq4or6Y03ckHJ/B/A2MrnaVnsRrvoThj
3Mk/p/bUPhv/U652+NPRnXYsOHE9ob6h8GqKH5w1muD/KfZS5wroXgytHTXi
6BT/nNpT+2z8T2PcwXxKR1Kx4MS10odTWP36uRPqadP2x53xOucEVmNX3hdu
jGWC/1f4Z0JMTeDqtv9pcPtqTR0ffiqunRhvY5Vyi7Puinas+jDB/6d4j57h
pHqt1IJSazdhz13Rgsf/e9YiNXYFnw4e2nGt4OFUfUNpn85h+2zAqfpYCufO
fK40evWh/WzXQidoweP/3nXq7y04539O5SZKf5R9vbb/d2rF9Pv22YBT/j/1
N0yUca3G2HhH2Fm7CVxHeePxv39N/cxOTWnnJtRTKfhs+/8Vt7TfcWi8c7GT
/1M4dzBANbcdgxP8v9Pnx/9Z3kvFSANXqVhI4WEnvyk1ZKfO3/5bHxNy+QbO
G5qr5AuNGJzAdUqfH//P1IKGV2/nJinubfObU/NJeT96/zT/395jcjRXWUdF
C9r58k7+ObWn9tn434mRBj+3PZvTn1Xtpc1vq+e2z+jS76f5/xTGHI1LYTil
+5Ov3/n/Odepvb/btUDJxxv8Rms+dA5TnEZxMuHvY+zUOAVXlAN3xmD72pmH
x//7dTm1pu0zGCndcXKfFP8r7TjjbdQ0aDsT4i6lcSlNcd4Lm6wFqXl4/H9W
l501dTB5av96J7/RnDeVF6RqGspaT+D/tsal4kU5LzohX25rweP/mWtB20lh
sr1/vZPf6J5XKi9o7yNM8/+p2mZKUxzsKX7gdi14/n/mWjjtNDDZ1q8Gv9E9
LxoLdM/CWcdpsUz12hlXO16U7+l8TtaCd/5/znXqHaKdmEzFo1MTplhV/u7E
ShdovuBw+y2x3PYbp965W2GM+oFpWqB4ksf/e66pZ558zidV06b9ceozlM+d
vcKPGssNjFFstNtX/MbkvCBVC33831uLG8980jii2pHiN8XbKzy/usc5c3V7
LKcw1vYVKewpOJmcF7zz/3Ou22dmJsRpqn1n33Z1Dz0HTus8bS2YEMspzWr4
iga2U3XCnVqgtPn8/55rur4OTtr7YjROafurexRPrnD1at6cGFS0po2fCf4/
5RPo/W1sU89wKi9w2nz8v8f/pPiT8tvOOE31h2KS1vwbfLt67s7ztxP4n+I8
VdtJYZvO87S8wOGfx/97tKDBCan4ou003t9RMKk8V+HnRgym8oJpsZzCOeV2
2v+211rl3bfkBc//779unPmk+Kd9o3HkxKPioxQsKXzbiMFTecE0/9/A8zSv
pazptLzgnf/ff53y2M7cntrzVeJRiR0lXpzf7ozBVF7wUc//3+61FP+/My9Q
Yvzxf/Y6lQs7sZPi6pR+UW5U4uWWGEzlBRNi2cFMWwvaXkvhNLpH3PYkSp8f
/+/3IQ0flcJ/Sr8oNyr4pO1MiEEnL5gWy9O04JTXWs258ml7EuV7Bf+P/7M+
pHEOgepO2yPR5yqYTLWzMwapZin+bUIsT9aCU15rlbs5Z0epJ1Hy7pTPefzv
Y17hMeV+ek/DI9HnOnHktHNLXkBrzhP8/ykt2Om1FL1WcJjyJIofWPXtnf/Z
j/n2+1kpHXHup31z4oj650YMpvICpf9Uv6bFXVsf216LemyFe+maOjr46j/7
r1PnEJRYSO35OrqT8myUz6m+TMgLHH5TPpPjrs3hO9+zUPCp9HO1jpRLHcw/
/vevKWYaZ+8dD+PEUSq+KJ8rsUN1R9EC6r2d/RGlPnYL/zc4vH3m0/EbtFa/
872Vx//7MazwHm0npSNUO1JzlfIzShztzAsc/K9+u3rWjfzvcHgbw8pzqR+j
epFaa2WuHv/3MEz5kGrEzvhqn9lI7YPTvVTFI1H/T/uj8ICTg0yIEYfDHa5O
eTNlT0rxD8qcOGtN606P/7MYbu/5KtySiq/UGGl/lDmhe8GN2qkSpw6ulPHe
wv+NPREHeymcUGw478JQv6Ho3eN/H8MpnnTOB6biq31mw5kTmke3taDRHxrj
t/C/ggHHDzjfU5w4ep3ieXpG9PH/TC2g3lhZ91RenMovptWgGn7P6QPNKW6s
/6Tm6tR5BkevHU2n54WcPj/+38MhKV/kPItyeGq/O9XPnVrgzA+NkcYe9LS4
oH2jWGpjRtFruo5070k5a6r0+fH/WcynNMLpQ6pORe9v16B26oLT5io2aV4w
Oe7aZzLbuWRqv5VqgePbnXrU4/8e5tsa4cRL+0wFbWeaFqSuVzGoeLxb/H9q
jVJnqp3+OPutNC9QdGS11hMwMw2HEzCf4j2nRkG/p+2n4nf1/e1aoOwdKNwy
ef+3vS9Gn9voj4JPpX0lF1CwoeQgz//vx/zOd1hS+XLqTEVKI9o8M8Eb0LOj
t9R/UtigY2mcKVV8vhPX9B7F/5/CzDQc7rxu57aN8z+0nWn1/MlakOKclCec
pgWpfqZySXpmMhXXdCz0/MBOzEzGYeO6nds6mEnhM6UdTwuy+ngL/zfmvH2e
QeFSJwadfWSltn8KM7fgsIG9VG7rYLtdk7mlnj9ZCxrvXEyOu/acN7Cq4NbJ
a2gN5+v+rGr7jX2Ex/9ZDk9huNE3yuF0LKe4eoIWpPTxFv/fnvMGVhUeprxN
ebJx9uP5/z3XbQyvzgc6faO5xu1cvVML2jWKyfzfmPM2Vle/VeaZaoHSfiPf
f/yfvW5jWMFqe8/3o9ZwdmpBqkZxI/+n+KqBVaU/q3lW5j91pjR1DvDx/3wM
K/Hu5LmUZyZw6Y3tUzzQmLqR/9teyIkFZZ4plyq6Q/M7BXuncsYbcTgBwzRf
cLiLtvO0QG8/VaNY3aP40hvjLrVGjhYr8+zkBYp2KH2me76P/2dimPpDuj/V
4PanBf4aUV2mPHNL3KXWiK6d8h7uah1T7/Aq+FHmTWlnJ2ZuxOFODKf2BHfG
0dOC3yw2ndwtVX+YsO4712h17Zyvo35+1X7jvBB9f+Hx/34MU2zTM8BPC87y
zCrWHI5axezOWL4dA048KmtKv1+Nne7tKt7+VM54Iw4bGE6dyVld/ze46Bzv

         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", 
      "86351110305322460128720263758500775714"}], ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.21000126004219055`"}], ",", 
      RowBox[{"2", "\[Rule]", "0.7889826893806458`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztXTGuZUcVHECyiNgDCyCBmD8ic2yzgbFkRxYgg2Q5sETijI0wSMQsAsmL
YAckThzYliz0pNFBVb/OubfO7wpq9Kf13r2n63RXV5++771ffvTHDz756atX
r/788+//+eDN57/77LM3X3z43g//+fjNp7/59ac/+/7Pv/6IH/7+5vd/ev35
V++//vtXX75W/v73R29/+89f/OHpvZ98/YS8BvkbeW/XvZD7su3se7u4Uq7J
5reLT4VD5V4T439izFwZcxfnE/NdGatK7hQN7JqzXTE8tn/47ddP//3L357+
86t/PbF/V9f5x9u3/0MVJ3L96joT96quybYjcU5zVeUIuabCucInEmcXz8qY
Z7mdGDPTMU+PB+VeXRwquVM0kI1t4vVVO7LmPr5XWdOr+7LxKPeqXvN4nSqP
Cg/VexWukJir9yqcI9dU+q6MAWQOstdHuGXzjrx3Oubp8dD1GjY2dl4g/LN5
7BobXa9n1wtWi1iPV/3N+h/kXqwfqOaRwkPVrnCFzOuKhwqKf2PH24SHRPQE
6S/rGZQ5hbxmIuaJ8cDOO3aOILFV4wHJneIzlT07m3fk9RN1WiR3bN1J0Vuk
L6zesuOBHefsmGT39Ui+kHhY/8b6NOU6FQ/sOEE0B7kXO6eQMTkR88R4qOJH
+ojEgMTWtS9G1iPWkyPjZ7pd8aiIVrPzGskLsh4pfekaD8g4Z/uOcK6srezc
ZNed6r1d12HXvolaijIOEX6m6z/KeEDuq8ydrnmn6DCyHrF12i7tQtqRWgG7
VrKahmg7u6dWal9d/LDjge27wiHS9675xe7jlOsg752upUzU/9m+K/Ufdj1i
xzYyR5A+su9VPAarq6xHVcYM287uBar3Kj6E5VzZUyN9QfiZGA/K+GRfw/ox
ZX6xnorVQLbGyO6tlFoKsgYpvLE1w2kNZ3PatXdm553iMRQ/zNYZWH/Lzs2K
Q6UmieRFqR2x/LB9QfjpGg+KP2fnIDt+lPmlrO8TGsjuibpqKaz/Ufwhm5cu
DUc4RGJj987Ia9i9lbI2ddWOFP+vrBGsX0KAjI2uM4uu/azCGzseuvbmXWNP
mV/s3GHXO0UDq2uy44Hlnx2Hij9k97+KhneNf4RnRXPYsVe9pqtW3KUVCA/s
GoHkhfWKbJzKmUXX/oIdkxP7QXYuKHVLZX5Nr+NsjQvRNMXDK+tUldNpbWHj
Qea74mlZn69oDuufFU6UsY1wy9aNWX4UTWCh1NZY36J4YHZfqeikokVs3bIr
711nIuzZrnJmhIxDpcbFegy23sKOH+T6yNhm9zLsfkTRMXYOds33rv1m17xG
+nIXlPVLqU11eWCFT1avWM+p1F7YvrBrmbKOs2eySh24q5bCrjtszRwZ20p9
idU3trbD+rEuHWP9D3tfdr/ZVSvoqtVPg/WiSt3gSg/Mzgulbj9Re2FzV+WI
9f9IX7p4q2JAcof0V6n/sGOYrWMr9SVWP5X1js1Rl/5MzH2lzqbULq7so8K/
cg5V8azs9yf6yOZXqWkotRelj6z/r9rZs11lP8XOF2TfgZwhIuNEGRuIFinx
KD5K2Svd5f9ZdJ3PdnkqN/1H+t7VR3a/P9FH1kOyGtJVe5nIqVJnUNbErjoq
69OQHClnrOzYUOpLbJ2WXVvZnHaNzwltVNZTRJeUMx03/VfWR8W/XVkTYz1k
V53/Sv9fXVOpc1btiO4ha4dyPsL6NMQnK2ci7NhQ6odsX9gzrCvrtHf5f9aj
InOhuq9b/V9ZH9n9NbuXn+47e37HztO7/L+y5rLr+EQdXlmLFR+rnIkoY6O6
lxK/chbDntE4679Sf0B0g11zp+vbE3rIjnmWNzf/j5zTddVDEP675hE7FxTd
YzUK4Uc5K1fOZJE1pboXssZVMbO+HcnvRO26q0477f+V+oNSc0PG87TusZwo
zx4gvCHeeLrvrN521YGv9P/Keq3oHqtRyJrF7qMVvVLOBarrKHrL+g22/qP4
/wktmtYBtv6g1Nzu0rdpTpQxXM0Rt7yzYxWZF1fW/6fXl6q961yYHWNVPGxe
lLWDrdsrz1+xZ+jKuf90zdbNB7Lj00HfpjlBPDC7Dt51PqLci/XYE3VIZTxf
ySHraav3sv624pPNEbvXqPLb9fwVu96xdTOFZwUO/p/lCtEB5/NflhOk78g6
qIzziT4q92LrIRN76ivXF2WPjHhahGeljsHW6FjeWP8zocPsuqPws93/K3tP
hHNEE6b72DXHu/bR7P53oo+K3iqesEtnJnKn8DBRw+mqY7Bjia0dIbhSh5V1
R8m7wo9bnRzZn7LnJlfqWxcUv1fxeWWNgu3LxHuR+Tu9p2ZjRq6JjGe2FtHl
Exx0afr5ma5990Ter+R5er6wHG6p+Sjjja2BI8/aIbmY6MvEe9k1cXr8d41D
Zc1iaxdKnbyLNzYvV9b6lD0CO8au9CoO/p/lkM3LXf3q4oGtd1XXnz5XqvqC
tCvvVebghHedvr6yxrE1jWr83NVHNu8TcVaY0KKXVP9H4kGe+WG17q5+dfFQ
vYa9zvS5UoUJ/8/Ww6c9VVd/kZx21QOROXXlGYei/3flGrmXokUn6D8b5125
vqvvyvi563x8wv8r59fTnxO50v+ztQj2NcpnD7v6yF4T+XzWtNZt0eqN+l+N
z42f/5oGWzN3fv4H0T3kvsjZqEN/J2JQvj/Buf6PxH/XZx6dtXqjTrLf/bKl
XxNjD2nfHo/ynM/EOYgD/8i+qXqv8hzjlbqE9LFaF66sBTlr9Rb9R/J4V66d
4db3CY2dPgN16G8XV0ic7Dy60v8jZxPKswHT8Z9wzelxq4wHtz7exdv2eKbP
QLtic+AfiZOdR1f6/yov7PecIO0T3Dpr9RZtRMYn8tlz5z5eydv2eCbOQB+v
33UO4sY/wicyj67so/L5BbZWPMGns1Y7639XDXM6125w858O8bDPDGzvbxfu
+vxv1+eqkFpx/L+n/rPjCqlbOvdxAm7+88p4EE2YPidy45+N+crvD1Fqd8i6
MPFMvtKXl3rNK8GeEcT/n+n/2brxCfX/KjakZj79Haeshj+CXSOm+XTW6u36
X+X9sf20+g/CSeJ5d2xM7BPd+stywv4einJf5UyHXSOi/3PXvBKI1zrtswBu
/tMtHsXfbuwvywlbM79LQxx8PjIGnLXagauJ8aC85iXBrb93xYM8xzixT3Tj
v+Kkamfn1JW+2sHns+PthGvexTPbr4397eLktHjY5xhPq/8rn6NBnguazqkb
t1u02plDFsr3ALxUuPXXIR6kNniy/2d/w9FtT3c3r1OxbbmmG89utcErOUHa
T4unwkv6/h8lZvY5n7uer3aey1u02plDJf6T6z+PcPOfbvFMjw23/iJgn/O5
6/k6Z+3aotXOHLLxI88DbJyPCidI+2nxVDjZ/yPfiY3U/OP/52Lbck03nPy7
AG7rnVs8J/t/pP6PPAt6V3+d5/IWrXbmUMFdv/fhADf/6RYPMmZO6G8VG3v+
O/1dQEjMbtxu0WpnDpW+XPl7H85w66NbPCf7fwTsdy3G/8/FtuWaDmDPhV9q
35H20+KpcLL/Z3lw+Cyw8/zdotXOHHb1a/r3Ppzh5j/d4on/x3lQnrWejtlt
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
W7TamUNnfAccl1fo
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", 
      "77433156501235157602475680472280279759"}], ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"2", "\[Rule]", "0.4749247431755066`"}], ",", 
      RowBox[{"4", "\[Rule]", "0.5246545076370239`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzNmj3KZlkVhQtFERxBm2liYmILBgZVOIUyE5MSNJCGhjaQthMNnUoLDsDY
qZiKQ7AbDEpww3p41rpfBSVvv7zfvefss/f6O37/15++/e03Xr169fvvfPU/
b9/94eefffbu8198++v/+M27T37y8Sff/Orjn/777+vPf//xr9787O2PXv/l
d997c33+4lt/fv3Rv374+ot/v8Wfk2cm76K/ab2LPiepJ63tYj3rNdO9rM+u
9Xzz+/VezH4Xs7lem6lz671rnGnV+XrmL3/68Zvv/uOfr//2xx/8z+//+uWX
r//fP/qu959/PfP931/fJ79pvcs856onre1iPdffttZM+4G+i55d6/nJHCU1
Mf1sMD8598VsmrNI1taqs6kJfb6Za1rn5Jnv/23CERfvJM+/nnPV4f3nUxyj
7zLPuc4lwRD6Lrqe62/pfC36gWIsPTvz/OS9yewYfEv2Yvh3MZuLWUjWSWto
Zi3BpRbO0DonnoieS+JBFnN37T3BseRd5jkGe1v+upUz0Fkz/UBxpoUPrfO9
OC6ZU7p+Wv+Ef2kvJX1r9r5Y2/UuUx/qZw3OJGug2oDq/AUGJs80WJfwztrL
m15K6mPWZjDBzKbxBVRL0N6mmjnBwNb9wgJ/6LxQPWbydrO2luah80j5+no+
XQPFc8rRLQw0vsDwWsI7Sf1bvinBXqonk7VRHW44yOgBqodbGE73fp1L637B
zJfJco32S/rQ6JAWhizeRe9kk7lLtBDdS8LRCwxcZKp0LxT3jJ812Etz3Zb/
NRkv1TzUFxj8oRhOscV4kNZ8tbyGuWsw2cKCs558V4LhRoebuUu8VcIpZp0G
Byi20+dTHKZzZ3LjZNbM7CfnS3Wp0eHJ3pOaUAxveWFTK6MxEu4zOo32Ns2p
DOcmuLp4F9WTVLsu8i6awRqN0cpU6WxSbE9wOOFKql2T+tAeM2ujuJr0D62J
uc9aZBoUD2n+Y+bLaF2jG6lnMfNOOcvwF30X9dH0N5S7DRYZ70B7stX/Jh+m
uLe4K6HrTObaPJ9m7/TcW/m88Zh0PbQPzXOS+TK41FqPuZOie1noUvMuyl9m
plp5V+JPaZ9QjbHgr4V3M9hC90IzEKoHWnPUmp3F+bY4hWp16kOT967zajp3
NA9MdDWdr4UuNe8189L6TO8REgw3c2fwjfIX1SdGI7WyXIoJRrcv5sj0eSuf
T3qMcorJdq41tPLMdV6dYHKi+RPdm+yldYfS0sN0Da3nm36ja04+G7xq8Vcr
26T3ay0Mp3q7ldku8o2kz41GTea3pRlMRpfUzeSZLQ6lvd3qVdpjizuU1rxQ
3qTPp5lMotmuf8m7TI+Znlxkmy0f18oeW7xsakXr9mR+YnJUitvmN4lmpjpq
oQ2Mfqa9ajTz4g6F8rvRA+b5SYZm8Ife2S10NeUv+vyFj6O9R2c/4eVWJt+a
2ZfKT+hn4x0SXEqe0/JNLW1g9LPRgZQ3qZZY8LvBIsoXZqaSOiTPX/Qh5Sl6
7rS2FAcW2aO5ozFrMzO7eD7tjVZGSj/TmaKznJzvIhtv5XW05sksUE3b4nfq
6Vp6zGT4Cf5QnDd92NLYxgvTvzUZAsUEOoPJmlv6x2S/dA3Uk7YyUvqZcney
ZuOXF9m4wTdaczoLtG9b/E61pcmsEp6i50tr++RdSVLPRe/R3xtfsPDX9N4n
6StzT7HIT6g2pvqN5q7JcyjfmZytlY0bfFvkqPTeasHvBg8pVidcZmZzUVtz
V7LwwtS/0F5tZXrGX19rW+Qe17uMBkvWn8wdxUA6vzTDoes0ui6ZkVZvG9+x
0EvU/xp+X+u9lq6jPEvXRutDMcrMF+VrejeX1NNwGe1zo0mMFjLegXrMJM9p
3VPQ+pu/peuh80h9pdESixyV+gvj8eleWnqvdRaLetL+pGed8NRaJye6ztyV
mDmlc2ew13B9614vWX/yzMXdFp3ZVg6T7NH4SjqnLR9qOJHqXopvRo8Zn9XC
zCezqZaOovhgnk9xg3qxFrbT8000nrmjbGmtZD0mP6HnZdZgMi66ngTrWhqS
6r3W/Bp/avR5K7OlPquFma2zTmZ2oaMSfKDn0sqfW/Wh2G7O13gEugbaGwlu
mxmn+p+uwehJeo9MMZZmFy0sMvNL69bK3Kg3T2ahpRPWGUurni0d1ToXOqcL
3WLuRxbe3KzTnCmdkUUmmXxv5oJiu8nZjB5r6eRFjyUzmOCwydxadytrL7O4
b0qwiPak8Rr0XCiGG91leqyVFRif8mTftryG0Y1GJ9C5SO7XkgzfYOyaF1o9
RnmNapVkjhLdZfRAS3sn/dm6i6QalWq51p0X9Z6UC1r61viRVu8ZbKTraWXp
CWYmfL3ITxKManlYujbDxYseNvo26TeKjYu7lYWXMT2weI7JrpO7ZpO9XPta
PL91T9TqE3O31epbiiEG0xI9k3xP8dDwBfWwBp9bvGB6mO6FntfVe+sMgfo4
ykHGgy88YIKZFDcM1xjf1Hr+Ik+jfZKc0QIbad1Mnt+aBYo5RjvR3m7h84eW
Cbf8stlLUvPF3Qr1MiYTWHjAxfOpRlr7poUfb91zGc9rdCzVS/Rvr/NazEIL
q03WYe7IaJ2T2i56eOGXDU4uMoQFvpk8xGhseqYJxhospXcuLd+08OOLe66k
/vR7umZ6F3b9ns4pnYVkv7SHqT+la27xV3J2rX4wGGh0MtV7rQyhhW8Jnpjz
auVFdDYpbyZ1uNZjtGIyI2v9QzmohUu0N5JzoT2/0Cfm7oOuLTkjs2bKX9QD
mn5Y+GWqk80zkzXT9bc0wIIv6N8mObnZC83fkjNKak5rstYSFOcNLpm+ovpz
wUFmvmidqQ9K1p+sma6f8qPR8wYDF2ed4DNds+l5owGMFjIYS3Up7XnjW6m2
oXosOaMntYTxdJRDF/nJk9rGnJ3pT9OHLaymGJ70aqsf1mdN62+yX+przF0V
7dUWxrZmoXVnZ/INw020n1tagmI77T2jN+gZrbXNwqPRGU+4j/JvgtUUe5N7
pXUNF2edeCh6R0B9JT0voxUXGLt+TlJDo2+vd1GMbeWK673Q3ktmn/qCRN8u
tI3Jrhd3JRSfkzNNslazX5PPLPJD462MN6HcnXA65QKqdZO5plzTeo7ROUlP
0j5MzotyFtWHrb1QbWPu/qivoZ6LahuKD+u7Esp9i3sK40mNDjd63px10p/0
XS3fmmCp0bpUc67vXAz/Gk1CMcr4F4qByVzTvRiPQzOilmZrYRetVct/JTqB
aozWPUULHxY1pLyQnPXiDi45owQf6FlQrdvSnC08N89P8CeZR4Pzpg+TXqKf
W9rMeAfKHeus7EO+K2npYaO7qEalZ0drSDUD1QNrv0N9q8kHqJZYaOOW16N4
2Do7M6cJ/7bWQzXV4m9NRrSeBTovxhMZHlx4RoO35j4iWU9SQ+pl1jO1+P1i
Ng3XLLSx6dUnz26h2YyOTfSYeWZrPSZPXvTSIpOkmNm6K7nqn5wFxVtzH0E5
tHVG9G/pTK3f25rNJ/mupVuS/NPULfn9WrMl82jWk+DDIhelXPkkT7UySeN3
KDdRXUF/n/QVvY9o6Xl6RmaPrVo96aGuuXspvmvpalqfRRa90GwGT+h61nNk
cjbKI4t7kwUvPHlXQs8umbUEt+m5rD1Xy2sYT0R/bzwU7bE139FeNfNucgBz
di3NRnl2nevSOWrVn3KK0UjGL7fuqlp3JfTszKwlnNXiRMoLdAZp7r3ASeOh
ru+p5lzwF+1VM+/Gd9Czo89c8OxCv9E5ovz15N0Z5btrX4u7KuN5r+cnPEg/
L+Zo4bkoVht9tfYFFBOoz03qZvgrmQXaV0YXUdwzXL/2lQmP0P6h+tPMuMHY
5PemtkZ7GH6h3Nq6K0k+055fcKLxBS2+M9zU8lB0PbRurZlq4Qk932QNi73T
3jNcQ3Ud5ZQWLy8ySaMzTZ5AcdLgj9F7VOvSDJk+Z+G5aH3o+ZreaOFkK/sy
2ozWnPLXwj8aXUT3Tu9rWr6SarBEcxrMMT2ZfJ/oHzqbRhfRTKzFL2YeaQ+3
7lBanGj8RdK3Lc1gcNL0qqkP1YGGvxb+kXJZgjOUswy/UK5JMGrRP61nXr9J
sMJoTrqvZF4W2dH6rsTcNVPd0vJcpj5mZlt3GVT/JOdCeyl5ZstD0czErD/x
vzTrpho4OZe1Zk72aDJA05Ot+4tkzUaHL7S6wTezF8PFVBOaLIvqaqrZ6My2
zs7oH5PhLDRta52UixNMoH1iNEkrm2ppZqrDaQbYOmtzf2FyP3onkvR567Ph
bsqn1O/TXLelqRZ6e5H7Ua5s3W21tMo6q6c8YrSrwSL6fOP1WprZ9KGpSasn
F7mu6b1W1p18pnqbaifa/5QfW3p+4ZWMNqBamnqfRJeank/4i2JRK+Oi80hn
hM6LweSW12vxFMVq48tMTxospT1Pe6+l1ZPPVLcbnWawN5mvFi8s9PZLaTaj
w03Wbc7RZPWt2af7XfimVrbW4qmW1jVcTL9f57qLO2iqzSimJTrQ5JaJhqfr
bPWY8VNJ/RM9s9Zs5k6NZkctD5s8n2p1w49G87T6qtXnhqcSjF1rY4o5dEYo
PtBcgs4FfSZdcwsbDU/R+7In/VfCicm7aK2SPk+wguItxQ2K1ZTfaW1Nj1Gc
b3Fr0humz1sekGKs+f0Cc8znhUaiOcz1zMQXGy2x6B+TadA6m7szo51MH9L3
0nOkXoxqs2ROk+9bWJHUOdGZC25t4UlSnxZPJftq5RVmdmiWu/BWyVzQz1c9
kxmnvdrqH+ObqA6nPdbSTuZOocXLyTm2+i3RM7QfqNZa5GYmk2n5NXoWJhNo
8dT69ya3TGaQaqH1PUhyXqaGJpuimEN1DvX1VC9d66faiWrCpN9obakHpH1I
997qhxYWJXWmGphiePIuymXXfqkvMzy19gUtzjJaxXgro6VbdwSJVknqQ7mD
1tbMjvFfSZ+bHjMelvYV9Ue0Pk9qNoNFNK8zWqWF7S2Nl8xya9YWOr/lrYxW
Sfx1qw7Jfhd1SHqD9kzCTQvfRH9jcj+j2da5menDVhZqNFuL91vnaHgk4Vzz
nOR8aX0W2btZf+ssWnNBz8Xcz1LNTHupVc+Em5L1mCy3dS4Uq6k2oHsxvmCR
CTx512x4v8X1rTsg6o9otmnuLF5Kt9D1t87O4HOCGzR7ac0C1WYUf2j+edWq
leWaeTG1MrzWyknM9zQToFko1S00p6L8a+74qFZJvHOCCaZW1xo+BN1CfUFL
N9K5aHnthcenuEHXaXR4Ulvat63ZoT3TyvfW9+mUu1uZyUK3GN6nNUz6xHDu
1c+0H5JaJXX7kHXLAjONf1ysreUfaT/Q9Zi+MrWls2PwkPL7wj+a+VrfZVC8
Mrpl4V8MN9EsJXkm1Qmm/lQLvZRuWWDmYsbN2pLzNdhizqXVV7Q+1A9eXENx
suWDjH+k9aT4QOtD/ZfhdDoLxusZbkpqYrQl7duk/iYbf1K3LDCTarwn9RLt
Q6MNKP5QLWTqY7wz5SyaNRk9Y3i89Uxa56Qm5m+pbkm85MLr0Zwk0SH0TE39
qc+i3NrSLS1NkjzHzHhLLyUzkpxjogESXUS5nvZVK5MxPt1wrskQjH9s6ZkE
f1pzlOAk1Y0tzWN8Df1s9FLSh8ZT0/5f6BaaD1BNYrzzYm1Ub5j8JJk7Wofr
rBccamYk0Wb0LMyZLjA8wQHq48wc0TyZ4rzRPFR3mfzW6HDDocaP075t6Rbq
d+gsmPe21rbgUMpZC01u7h1oJpPMCMXk62/NWbR4weCw0ZyLHG89g7TP6VmY
TNX0iTnrpCZ0PWvv2dL2lBcWazN+jea3lAuMJk/e27r/SupsdB31Ba07JsqD
BksTzWmw1GBOaz0Ub40fTzDf9InhX6qFDL+3vOdC29MzTfqKrm2xZsqnVJ8k
3oHiZEsDGC9G8Sfpk0WvJhhO+dT0vKnVYgaN3qD9Q31oUh/TkzR3NfjQuiOj
Gthoe3Onk3CT0ZBmzUme1noO1QlJH1KfYnrb4A/tyaRP6LnTM6UzbrCU1rY1
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
qm9pntPii8XZPXnnlWjIBBsX2bXRdRSLTK5lMJPuy/Rhi7uT+iTY2/pM10ln
35xvixfo5xYHmZ6he6FzvZhByhdmv62am3w+4Z1FxtjCN9o/xle2tHELz5M+
pLh09TDVEklfmc+mD6mPppzY4gXKoVedKbaYnqF7SXrD9B6diyfPzswpvfOi
c7rIGFvnley31Q/JTFHNSb0VfSbVtIn+WeceLb1EedbM8pM5W6LNjAagc7S4
O0g0Le3/Fv6sz67lC2imZ7gv0UvGy9DvqU+hnGj2mPgy80zqnSm+UR5c6Fuq
MQw2tubdeOFkxmlW3+LT1t1Bckb0bstw9JNnZ/ymyRCSHkj6x9SKcqK5E6H9
Q5/TmhGzr+SMjDZLenWhkaj2ozzb8okUB5L5onWjPEv59Pr92lcm9adaxczd
4uyMF2tlCNQjtzSzySQX+EZ1oJmR1r5MbVtc39JIyV5o/tnyoa2cyvSS0X6m
5nQvxlfS/k/mwni0xdlRjkiwNFlzS7cnv2nhQ8tr05lNMDaZr8Rb0X3Rnjfc
auaulScbf93K1RNtRnGbvstov1bNjUY152g8Du2l5F5joeEplrbO0XAN1d4U
H0wvmT4xGE7xvOUL6NqM9mhhlOG7lgZOMijKHbT+RofQOaU1N31ichI6vws9
2fJ9FDNbfErX2fpMNTPtH4NvFGONb2rpKMprrUyG8hfFIqNJjAZO/EvCWUkd
kue0sNp4cFrz5F20JlTDUK6h85hgqalPci50jwv9Zmp4rZ9ii/F3SV+t74bo
eRleo2tr8SbFSXO/STUwXYPpH6rhDVZTL5lwzdr/0v5JztHoSVo3c2dBe8N4
aqPfjPehHqql4Q2/LPqwxSOmB+iMmHlPzq517jSHSfaSnK/xYsnZURxLZs14
2Jb/NboiOV+DdVSjmtrS3ki4xsxp684r6Z+1hl/4GoMnhkdMxkt71cz74o6y
pXOSOiRcYHqMakXqp67eSPa4yOgWfqp152LuPqieoXcKlGuof2zdCZq7qoWG
N9xhsneat5t8KekB03tGJ5gcZqFzWr6+xXGtc0m+pzzbyuhaOid57/vP/A+q
fhFv
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", 
      "596023145536016638713432023142370353"}], ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.024182885885238647`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.975817084312439`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzNmk/Kb9tVRR8RgmBBSA9U7ICWfZd0IWnBC6ggQUlSCKmlnhTTitiLgAVb
YdUmiKUkYOEW3DKGY67vvsIvfLmcs8/e689cc879/uJH//KDf/jOV1999bM/
/cP//OCbn3//pz/95hc//O4f/8/ff/Pjv/2bH//JH/785f/8/vj3f/36nz79
9T9+/fXvvvvnn15//8eP/v3rv/rvX3z6z3/7s+cz5d3Pn1l9a/X36izX75J9
kn+//m7ZW8m1raVVvV3Uxqr+L9b5yP66wIGS91X9XOPe5+/+629/+/X/9iPP
lHc/f+Yv/+4nn/75ez/59Kvf/Fx/l6yz6vHVHlbvkpi/9v/5v19/97U+2VvZ
c6nhVa5LnFd9dFGH5Yylv65x4NuAV9e49/k6n7/7+d+v776et++SmiHffa2z
6nFS53YPq/2/nieznvRd+W7p64s92xou9WbxjcT2un7sOuWMtr+u41DWX+HV
l8K9F1aQ775ySt4lvU/whHy39LjlOWV9u0+CmeVc9rulVu0ss3smNWyxi8TE
7tn2fqmfsk454yqnqzh8Kbz6NuAemX22T4uOIOcq3y3z8ZULG1sbc1I/ds/W
G7Q+D6nV8i3rZ77iXDCHxN9619faoaxj9U6p1eLdXeDACq9ea34p3CvccjW7
r/nGSuO/nrng87aWCrcstUfq0Oqm1buW1xHMITXw2j/px2vtsNKV5JmPzOlF
HFZ4VfZ5jXs216+9lftlWz/lu6UHSRzI/m2/v2qp/PcDpfZIXxAea/O7etf+
LA6Q/RRv5EI7FA31wvaPzOkqDitMWOH5Ne4VL8g+T3R0uTdccQC7N1vbpN9t
nO27lsMX3LD9WHr5gi+V2bryRgpG2ZlF6pZ89zqnr1hd1wDpI4JLBf9XuLfS
KRdntN5CwRybL1vbZA/FC7L3v0XbWtyw/Vh62fJnUg/2V7RhuRst2qHwE4J7
q5yS7xIcWOkdOy8K1l3gHtHvVn9d4/+Kb1hMs7VtvcRV3dq7CeuBlzuvUvMr
bnDtFdt+JLh6rR3sTCezZoWBK6woNWBzWjzSMost7q28+tfZV/i/wuTChex8
J2dcab1V/dvYWi1Z9HjhBhc6keTL9s7qrrzgavFALOexvWlzV55Z6X2bd4ux
FvcsPhSsI3ViY7vy7ctZLJ8v+7mobVJLlntYbmzXtDG81okEP60GLx4yWZPc
X9g9WMwkNU/6ruSX7M32QpnXJM4XdUWet1j3et5qdjuXi04sXKj4qNbHvsC3
lc4iM6jwjZVvvLovKPspfIb070rjW8/K+oHFW7P1SbBi1ReF31rssnVFasbq
ULtPUp+2f0ltr7gQqQHSp3aervDN6nT7DMnjBTcge7Y6cTXTi56yvW+x2nov
JI+23kj/Wq1qecWqLwimFY/L7sHqlDLfLc4TfC7axGrP4gmU/iXzlKxf/Lqi
KcjfNj7F37B1W/RR8X5JHi0G2n2Svig9ftEjZV6Qs9i+IOcisSU4sPLTLP6Q
+WLnLOnxghUrf69oB3t2i0uWt5B6WNVzwUl7h2Wx1OIGiT/xfks9E4y60HRW
a9hnLEe1Z7G8jvTFapYVj4tg2utvO8uKF11mjd3Dyt+zWLeKp8W3FaatNFfx
EosOsjG0s9L6bxb3LJaSWi2ajmBL+RbpEYuThVOVeWFnGfFnim4leGXnC8Gi
grfFr1v5e8XXLfG0eEL6pfD/wqlIP17U+Qq7yAyymsjujeCP9Zxtr11866L3
7foWM61esGe3WPH6d4tXxT8ke7a4VLRY8fdW3lfhKnYWXM8+qxNtLiyGWw+2
YJetpVLD1n8u2tB+d/Wtggkk/qsetB6FxdKCva91il99kd/VXYDlQiWnJM7l
eeu9kJ69mH0fyatXnLDgg519xXOz/rydOzYmq3uH17dsDVv9Repw5TGSM77O
UvDQ8r3i/5T8krPbel55jAXTyvNlvtvZQc5u+QypgcKriyf/2kPRp7Z37J5X
vhPhcqt7tJV3ROJgdRA548pjLFqm4KHFaqtTCKatvAiLG8VjLF4B6X2LvWW+
E+yy/Wv7dMWr7Xy0/G01H21MXutf9L6dTYVvF++IYKDlIdajeMXHajdb2xZD
Ch+2+EPq0PIugkvFr7MelI2/xQQ7s0h8bG+Sd0n/lnNZ7bPSDtZrtfhP+oXU
6kXvr/jDCm9tfdpc2Njaeii8q3CGgi2Wz5M6tGexHIPE0M4pq3esNll5O6ta
snrNcjw7i0kvv/ZptcPqXrjwB8v5Laey/UvOWHw/29el3+0stvOL1EC5g7C+
9MV8KfEv/gnBQIuxpA4tVhQOULwdiz+2bgsvIvhsa9vOAjsjyEy35yr4TOqh
eHofyf9XvV/8IjLXimdezlV86cKdCGez+FC8x4KllqsTPF/5wIWDkRor/VXu
TAmelPMSv3GlE229rfDEzp3Xt2ydXHyreKcXfpHVAsUbtPzw9SNehNUpZb7Y
3ineo8XSFccocSg1UGJS+KrNqe19MlMK97a5JppudZYV5hTv1/ZI+ZadfZYn
2Ple5t3qPo7gCal5WxtkD/bek/RF4b0lzkVfkNja/di6td+yerDMVlKHNubX
OSJ7vqi34j8Uz6RoHFsDxGderVm0s513FqtJHsu3bG0UDryad4X3WqwoXLp4
7BavVl6NrSvbp+QsK013kaPXPslsLfVW7izsPYvFitLXK122WnPlN5Zasrrb
6qnXPlez6bW3sqb1AD+Sw5A4kLMUv6LUvK2rcr9AcL5oumt/mOTuov5f71qv
0no+BNMst7Ec1foPH6lbi39le4qc3XJjyx/s2Vdrkj2XuBUuXbzHMgdLzVsf
5hUHcpbiK5J/tz6hzdG3oacKj7X7tL7c6+/Xmis+fLEmybutgeIHrjT1a/82
zmRvpGbImhfe6aqWivd4wSusl7LyQosHUnrE+gPXd20f2VN2ttr5TvK72r/t
/cKvim69wD2rGW2OLFckcSs80/YywSh7V1h4IMmRnR22xghPs36R3YP1DQpv
JHyycAyba3vXtuop6/mQeiBnsZzBxtnOeoIVK+/Xzpdy92pr2/578alsXlYe
DonhSgPaubPCAYvJxKsntVH6lPgtlnsXT8ZyjI+8a1v11OtduyY5i8Wu0mul
ry1WkH4h8bS+YtGMdhZbb9x6jxYbLbYXjLUacJWvggOWw9vnL2aixR+LFWQd
y/esD0Bww37X9lThdSs/385W63WQfyfnKn5C8dNKb1ouR+JDetNiVPmW7R1S
nzbX9iwkXwUHyHmLz2Y9Isu1bDyLTiRnt7V9cde26qmV72drrMSkeB1kTauh
7LyzPVt60+KP7Xfr+RCOtPoWqY2V12dr3vKZoiNWXN1yWsslyp140YmFm9m5
bD0WW58r3kK4YpmDVv9a7v36kfgUnCG9Q+JJzmu1g41h4TA2F6vnrZa0XIj0
KYnbqobJ2QtXL7hR7m5KXa3qkNSJfabctREMWdVwuSe1WFH8EIvh5eyrs1jt
QOam7ZfiZVleVzRI0Sy2X0guyN8EQ1Y1bHUEqX9bV4QLkV622Lv6m5xrtX7R
fbZmCA6sNJrl9lbvExwr2tBiu91DyQU5u61JywmtHrmYO+XOpcw4W/MEQ0oN
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
iclKN31kLZV7kNU8WtWP/dn6WXlxdg6S+JC6sphAcl3uYspcsLzi+r5gtQ55
12Km1V92b5aHrHyJUnuFM1usI3teeSZFH9l7kI/0T4pXucIuy5GKN7XCTHsW
u/9yh2t1ZeEV1/cF5X6EvFvudEg8rc9meUjxFi7uVorWWGklgocX93QrnWXz
a/vI5tFqlsKdVjyBnNdiZvHhrRYu83ql9UhOr+8Lyv1I6U3L5SwnL55e6VPL
nYpHbTX7CissBhacKf1Fapjw+eKfFJ/W4p7tZZK7smfrb9ieXc2OosuK1rP7
KfPU1qHlsWXmkpov3Nhita35gmmkjwrfts8Uz63UucUQWw8lvyvdRPJb5mzh
kCvvzuKw7V+S39Udrt1P8Sctzl/fF1judOHJ2FlW7kzLM3Y+kvgXLLW5I/tc
YbvN9WruW65YNNFKL9jasBzS8gQy14ieKv1L9vD6re4jVh5IuT+y2tD2go3J
hSdTfM6VriwzpXg4FktXeEtiWL5VtHypk8IlLM+0GGJzanGG4OcFLyKYXPhw
mbPWPylrkpiT2b3CruKLvjBh5cms8LzoyuJVEgxf6dNyZ2HxrXyL9MvFTLT1
Vrw7Ek/L2Sxu2xlR6nmltW0MS37LfcTK/y8+ZMGu4otan8HWYfE3SExKrZI1
i4fzqr2iHWydXOAqmSOk3izWWZ+ncPXCIUlOV7PJ8jQbK8vNSH5Lf63uI6y3
Y31F+7xdx/aa9V1Jz9o6eT1fvGvCJeysKfPLzmury1ZYZ79VfGbrGdr1Vxzg
wjezeyY1X7wL6yMVvV/mb9G51ruzuqloRhK3gjOEwxNuYPNL1iRa6UK/kHpe
zS9bVyvcsFhncdtqnDLfCfaW/i2Ys+JOFocLHyg+sz1L4QMl1xaHr/1tO/uK
z2D5ua1Di+F2TZuvMvtILuz8sjN3hRsF6whuk/sXy0VtD5Z3V3z1Is62fwsf
KFqD8IcLv93mmvw7qWHbg3YPZX4Vfm79fKsl7ZpF79vatjzE8nkS/6K5Vli3
iiepT+ubWfxf9e81llrPx353FQfyvM11iUPhexYnSw+S+BQPZ4XDJP5WK5Va
snsutV1wz/L5lT4qvJp865rzlHteu+dV/17MFJv3lfYhcbDYSHJtOSTJkZ2D
JLalB8n+7XftjCi9YPWXnTW2B0tf2Nous5vkt3BUG/9yxnKnT/Cw6D6yZ4vh
tqdWumyli61usr6KffcVE5uvVb+UZ0gu7P2yvUMpeLjSCGRe2F4rOs56d9f3
uQWfrT56vWvjYL9lOQ/ZJ6kZ6wfaXJf73FLPRRdbPCwzfXVHYONf/ATrY5C6
InhY8khyQfCQxH/FkV7nJXhI/t3G3GLX6j7X4l45o50jFkPI3+T+t/gVpCZJ
39l8lXlBvnuhs6wnVvrC4nDxAew6pX5WvpzFc9JHtuYJdpHet3Vr8ZD4JPbd
lSd24atbbP9IrkhyUeYdwUk7f4t+tBhIzms9IovJhfOTmW6xnWCRvSOzs8A+
U2ZW8Y4Kv7W1bXX0am92/2QPpFYtltr8Fl+9zCzbd4VL29harLA4WWre3juU
+W59v8LBSMyL7l7VQLlTILVNsMLW24V3ZDGW1EbhnCtOazWRnftlTTtrLP7b
Ol/dp9i+KFyarFlmIsElW/N2LpSz2Lq1eS/3nraPCD4U3rLyPa69rJV3VHSE
rSvLOQunJbmz/V5mRLm/e53X4k/B4dU8tThJ9lC8brIfW4erOWXnRckpySN5
fjVTbP8W34/MNbt/UgOF7xXviMyCCzy0s7J8d6WJrFdg53XxjYvWtnknf1st
aWdE0bCFqxRuaWeNxRZb21bLlPXtTLGch8TN4mo5y6r+LVZf+AzFj7IaluBV
yV3RfXZv9g56NcuKd7HqRzsLSI9YPCzzdIXbRL8XDbWag7anbE5XXoHVXNYr
W53FYix51/qxBXMshhA8LLxlpbtL/C1HIr/Cw63vUfJSsNHOJvLvK6/DzsRS
P/a8BSeJJ0DO+Kqfj/ROLW8s+yka3/INkncbtxW/td6F9Z8JRtmY2Loq+7/I
XemXi/lCYkL2sPJjC44VL6LgtuUqlv+QHi96iqx/4Z3a2rD1U/RO4Ujku6VP
SRwsZ7vw+shMsdhF6qrgA+nZMvsueEiZLxd3XrZnCT8neyN1RXJka6B4EXZN
0lNFT5E4FO/U9kLB1cKdbO9f4CfBTBIH2zukZ+39HTm71eOF/xRMsPVpZ1zh
MBZ/bN+tPGdyXuJvFD5mY/Las/XxVthi63zlt9getD5V4VpFm68ws+Anebfo
epLra55WznvhOxWcJzVMZpzlVKseJ3EmOG+/a++8SD0TnLQ1b2ffxTyyP8uL
rE6xvW/ftdym4EPJ3Qo/ywwiWFR8lVVd2XulUg9l1qzyYvdpa6/kovCHFbaU
c61yYc9u59dqHll+XvyBi3qzXuWrf4tnZfWp1VkFP1c4sMI9En9SV/ZeyXqJ
Vi+v+sJyg6JzLUey5yX7JPW2irPlJysf3tZk4R6k78pcKzPO5sV6O+TspPZs
35H1S+7K/Co4ULR80Ufl+RKfoj1XvLdwA4t1JNfEA7G1bfdQ4ky++8pF0fuE
n9j1rY4geFI4xutcpWdtb1odbfWUrVW7PtGARN+t7hesZ2JjZbWexW17/0J8
P3IW8szqjqNwUTtzbc1c82ebi5K74qnaeVp45rWvtYq5nQu2ZohnVXhL4SfF
lyh5KfPdYqnFQFLPtr/K/SDpneLZkr4g9W+1p81F6f0L/lxyYb1ZEn8bk3LH
VDS4nRcWK2xsCdey3oKdgwX3XrG1Pjmp4ZVGW2nhUg+2BizuvfZfevZittpe
trOv4JudO9f8lpyreHp21hfvxc7H4j0WH5jgwyq211ya1PkK9+w92oqPlZ/F
8OLnl3lH9lz4fImD7dOVZiGzw8a23O2u+G3JKfmu5R5Wq9q5udJfxedZcQCS
a4L/hUvbWVBwz9Z54XVFF9j5dc0J7Uy58Dktb1zNVrsfUhuW15X70+KVXeTU
6iYSTzvvVjG3vWYx8IIDXPSvjZWNQ8E9i2kXvM5iUfmtOKH1ggq3IXm/nr/2
jqDwwwvu/eqp1b1GySmpveK/2XdLzG2cr/0lywEsHq60CdnPRU9d6yySi9V9
gdXFlhNaTCb5LXc9pMdXuSa4ZGdrwZDiXV/g6mo/ZQ+23oqmXs0vGwfrXRR9
ca1NrIew6qlSt6QmC+5d3BcUjmF7kHBj8l2CVx85f6/rwWLs6/mV91L83tXd
pfWTSV5sX9j+KvOu+E5F49jaJv376rXi56966vUuqUmLz/buY+VXFK5l73Ts
nskzZC7YvJT5S+rZ1kPx5C22k16wuql4zvZHMKTMhdJfZH4VnVu0oe0v4nWv
fJiSR9tTr5/dP1nH4sm1X2G51qqGrV9he9Z6TeTfrWa39UCeKTGxWF1q9SN9
zoJvhYuW30q/EExeeSAWW8i/r/Jov1V6h7xre5zkdNVHdiZaHVH6xXIA278F
04o3a7WVXWeF1bbOVzPlwucs/tv1fVypeetflbsnWw8k/qSnLG6/3rX82XoF
dv+rnK76yHpBpG5Lv1gNQvrX6ugLjUz2Zmd0OZfti+L7WU9p5cPY/r3oL4Kl
pOZtH9k9FNy+qPnCw1d3JaS2La8rOb24LyC9b3n+Ba+zHHXF01Ya2dY5eddi
I6n/4uuWelj5nGT/qzovfsLKs7UYazG/cLCC7WWOr3Jhcax45mUuF31H1ine
VOkXe17LSS76jtQ/6dPiF9m8F0+VPGN5L4k/iYnFDVLnBStWnq3F2DIXik9I
ap7gcPFXbS5sX19oNIKZFqPI+uXOazVbLZ5YTkLyaPuOYMsqvxd1ZfUI2X/p
8cLbCQ4UL9FiBVnTen323sf6nJZX2JonsS28boUJtq9XGs3yZIszFnNIr5U4
rLRkmdf2uzanBGNXvqida/bd4ikV3Ci4t+KxBCss9lqcLxhecGZV87YOCT5Y
Drk6I9lD6WXCk61XUO4KCW7bfVrsJThjvUF7R/M6b/FR7XyxeyA/yw1K7la8
vXBjMl/sLLBzZ/VdG3+CM6THCw8k9VP8Q5Jfe0Ybw+KDXaxv5yD5EZ1uMdb2
WsGWcndzMSPIPLUabaU3LebbWbPCPctzCne9uH+xurX4tys9QurW1pjlwBbD
bU5JDIvHeLH+hQ/wio/F+RUntJhmtWGpMcvPi94pXjRZ03JdO/ssHyi+t42J
xS6L+fa7No+2nksv25wW/3A1L1ZelsUZWyd2fTvL7N4sHto+WtUMqRN7v2O9
aztPLY6V2rZc4hUfMt8t/tu5ubpzIeuvuBM5F3nG+rdWB9kZuspFuVss88J+
165fenPltxQfoMTZ+l2lf63uIP1FzkXyaPXOqrbt7CgzzmJFwaiyn5V+JOtb
bky4ip0vJC/k363+LZ4ViWeZFySetk5sHgnWldm9ug+ycSZ9VOK24tUrX876
jZYrlhiSmU5ia3Hb8slV/EkN2NiueJ3V1Cs9ZXmgnTW2hu2ei79BZqjlWrZW
L/jMqqdsPZM42/m1uiOw/oCtn4t17Lcsh1z5KuUeqtzFlPgX72vF6yweFm9z
dfdhz160gM3Lqo9KnRSssHym7Mf6Hhbnre9h939RAxZzrPe70qpWRxMMtzzk
tTebl4KfJf62rsoebL2Vvi53Q7bHbU0Wrm73Y/vIxoHg6krrkVjZ/bxisuLb
hNuX2bTiSEUrlVlm17zwbUqPvPZsOYCt2wv9ZWNY8mL9c7IH0hfkGdLjNp5l
JtpzrfrIYuaF1rN8psyvMu9W71puudJiFossn1zlkfAHgsOlN8t906rXyPor
jm3r0/aXxZaL+7jit69m0Mp3Kn1U7shKPIv3VbCO7N/WTHmXYJp9pnBI6z+s
+MAq11a7vc5F4l+eJ71me6rE09an7S8StzLvyKxf3REUvWM5GLlTKJyQ1MDr
GbufgnWrGb26V7rwagrHvuCQZEas+MBKIxQPwfapff7iTnB1F0PiWfDN6qCi
Pa/9dlsD9l7Y6iaLFaUm7X6sBid7I/1lNe9rbyu/vXyXxOGCQ1rv5ULTlR/B
N8u1yvMrL7f4EqTeSpyLpr7wQ1aczc5NW5MrPCz8oaxJzrXy9GyuV5zQ9qnt
ZYKr1zXwqlWyf6v7rnVBwTdSz+R5klPrX73WKXsr979kFpBvkX4pM/dC79v4
Fw1bOCfZf8EHO3Ot/1B0ir1XKvhje6fEYVUDpH8JHpbZ9P+dt/8XrtqYFF5R
5lHxTq0P/3uBJop4
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", 
      "185023579802380747817653061728311135906"}], ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.0751294493675232`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.9248243570327759`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzNmjHLbttVhS8KItbmBwiCjZVWFt5DaouE2NldwVQXhFiIkML/YB1sUsXC
QkjhD/AXWViagMVpFj4Pz5jfOcV7+M7Lfvdea64xxxxzzP1Hf/v3P/np73zz
zTf/8Pu/+ecn3/3jD3/2s+/+6a9/77f/+bvvvv/zP/v+d3/z5z//3+e3f//6
X3/06b9+/oef/uP7X377+d9/9e9/+u3//Pinn/77l7/4S/v3657kb3v/1Trt
92UNF7+93gu53p5vWcPFXlZrvsD2RU6VtVm8XWN4tYYVv13E+YI/P//7T/7z
Dz79zV/88bf/8qMffPr8+3/71a/+30/BLXnuxTo/v8/n17y+/3xfdg1l/WXN
ZS+vMyX3JGu2a7jYy+pZBSf2uSWnSt6RvZdzvPh+xXUEP3Y9X4o/S114xefz
+xDcWl3x2otd58XHruFrW/8Lq5///cLM66xf19g1rO5DeNU+y15PsE2eZXPq
Fc9VP2vx8zVguNR9i4EXP9ucWvWbBFd2PYQril4iMSy5efEh9etrWD/J5Zeu
IOu011hM2pivzs7yG8llsubSL5DctLF6fax+uMZwwdXrPoX3SE5d9Jsr7WHr
aTn30p9+JJe+9k50yEeuv/StZJ1Wf5Z8tzEn+Uh6h+IzE52z6k3Isyw2LFes
uMiu0+KNcJ31l0q/XHig9JvFE7Pao+Dq+rnlQ/Bg68KX6qNJThUOtL4ZeVbx
Il55TeJQ9I99rs3Z8ln1KR+pcwjeSNyIRvpSvEd+W3yhMpMq/chqtnuhPezH
ellfav0WV0ULFU/Pznatri5+eMk769XYHmeF2xLP4ofbNX/+felVSS6s8rd4
lZZPihddfKFrPNvnfqlaYPFwsf6VV2Pzi6zH9uMkLwo/lHiueIn8fdEzln0R
/F/41RZLtse0+13x3ooTbO2wPSy5zwWeLad9pMdSdN31+gtWba9qdT7hTBJn
G0PrU73iad/TKLXgumck+7L4J/EvGsn6VMXTKPlesL3yeVb3XOmZguevwWMh
PEb2fu1xWayWXtW+O2E5k5wFmY1an4rwpOUl61d8ZM9Y8uv1Ke8e2BpBsEF6
SdsTrXRv4YRrL9pi+ALPBRurfCma1uKwaCeCVevtEH4rHhGJub2P5YqC/6Kv
7LmvekbrmZPz/VKenvVYiL61a7P6iqyZ4JPE2fKk5WSCpQs8X3sstp4W3buq
mzaPSBxsbAkOSawuPKLVDLHoq9W5r3pG8ixyH3vuJWctbkuPVvLLemvFpyK1
yfoDJP4kj1Z4trW75EvBWznfC34gGLb5UtZfeKnUbnLPi+e+cnPV95WY2xy3
2F7lheV5EhOrq4ufaWsr6UdInK1HauNfeMbmjuWHlcdC8FYwv8Iz4VWrB8h5
2fWv9JvtO67nMlYrXvCYzQuCGbJ3m5uW91Z6qezdeqQ270gcbA9O1lx8NvJc
22tYb6Hw/EoTFh945Q/YZ63yi6z/ot6R71+YvJjL2L2/4mDXRs6RaD/CycUf
Jryx6ltXOtxqFVujiT4hOC91beXDk5iQHCx91sozKTlVvNmvYaZv66zVG+Xs
yrzA6jHLw1ZrWV+a4Nnquou+29Zo62OUmmv52c7aSo22uUMwRvjf8kDxHMjf
BHuFMy3GVjllMVz4/CK/ip9Q+g6bd2X9RXtYrVU8zOIjWa1luaJ4zva5hDNJ
rbQeS+EBq9Uv+pcLP5x8T2YNKwyQcyRxLjllc9nGjaxh1bMTvXHB5yRWZf12
PTYXSNxsXSBrsDrT1tOiYy2ebRwsPxDPsPAAyWWLN8uNF/Mj68GW2nSRC6uc
LbrRrmelr2ztsFxR+NxqNutvX/gMVjvZGlrqtc1Bq7Xsx3pidv0XcbjGAOGu
i962aJKizew8ztY+i8NyXuV7WzuKviI9+0VfVvpr8ixSI177XfFe0e02Pqt6
bbnlgnutx1X4ttznAgPkmsJRlquLjiLarPQR1ue3PcjKI7J5ZGvECgNEe1hs
21pM+Oe1NoLJoiUs75Fn2XvaXq9whY1P4d7Cb4VvV2u4wADJC+trWa4rXFHW
afsCgsmiOQsmycfyXtEV5LxIDSXYXnmPhTPtela8R66xfinRwEU32ly44F6r
wS741vaVFxiwuUl6W3uf4r2XsytxXnEv4ZDyXMt7lnuLNrOzA3L/4j2WPLLn
aL1o652uvGLCV1Y3rrTHqpdc6Tfy/cp7LBiwPfLKn7f3t1xK1mNzc1XfbV0r
+uTa/195NbYW2NwpHFViRXBC8LbCtj2jwsOlrydnVPzbouUKfqwOtxxSvFzr
ddiadaEr7HouYl5mx7ZelNkoyetSIy7iUDBJamLJI/J96butJ7N6T2PFw7av
t5qBcIXVloUHbD+y0pa2pyt6xtaLlVYsmoHE38b8YhZM9mU5zfKqrRG2n7Uz
cds72Fy2erKsbYVhsl9Sc1c8YHnY1g6LedvrWU4rPGz/XnmMpC8m35M8JddY
XXGhGcp8hPQ7RasXfWJjUuY4Np7Wuyi8t9LDq/7F+jm2plxojxUPl9y/eM/E
1oVSCyx+Vh7j6npbg0gvYH3mlWYo85GiDUi+XNSmlbdDagTJWXIupd8pHG7P
heCfXL+aea20R9E8ZJ2l3pU42Lqw8mSKbnzd067HXl+41/qW9relf1/NB4s2
IHq11CaCQ4KrFc8TzrFrLj2jfb+C8AzJTcvV9rkf6ROSvC76xMZwNauyHL7S
4TZfyl5s3Vzp3vIp/fuFh2Zr8WrmWHoxWx+L7rXPWmlFy6UEY6/6Us7FcjWp
cZZDindq89fqrpXvZPdua+61DixeCok5mdd8qVpgfbPirxIesDVi1bOUOlL0
0ioXLMZszV35RQVLxdMga1jp26LDyZrtNXa/5P4rX6h4zhf5SzC/wrad3V/U
gqI/X7EqHtqqb7LnXuoIOS/Sd1w8i9QCsh5yjmS/xesongbJtaJvrU+48khX
fTfJRxIHO38k8b/WgbYuW+4icVtdTz7WR7Wzg6KXCo8Vb8dqS7I2go0Vn5fc
JPyw0r2ll7ezG5ubVoesfBvL1au+u5wLWc9rL7bvKN4mWaed75A4kL+tJ0By
qqyZYI/kC8Gb5Z/C4eT+hRutZiZ4KDG0mC/+lc2d0lPYnqV474TTSH4V/l/p
2OJNWW4vuUkws9KBK8/QnunF+wOW98jarnWC1VHWw7Ee+wonNj6r9xxW9a7U
X8vnROPZfFz1+LbnKp6MxZ6t6YR/St9X8LaqBZavSL2zszPCgdff2z6i9Clk
DeRMbe0onqf1B8oso3B40ZC23hVPqZyR9YiKh196fIIfy6UEJ1bHrmbN1s+3
eCN7seditY3Fp/WaCg+/9rjyzy0fWmwTPiFnWriCrLnwmD07y+G21qy8C6uL
LFdYjJG8szGxsSU8Yznc9rOl7yu5bNdf/D1bC6y2Kc8q7+rYHLG9nuU6q3XJ
eVltVu5v64XVn4XfSp9I8tfqQ1uLSw9C1kPuY+NQMLzy3+z9yTW27yizS6uT
7d+rdwZKX2OfZc+36IEy17NrJtxl42NnEFaHWwxbbVB4zNbZiz6XxLzkVNFj
pQ6SvVgdQmJrz8jGv+jA1axkpTlJPVp5cXYWQ/Ld5jjZ4+u3pNaXHCH5uPI0
rGZexfDC/7Q8tsqdlbdj/RmSU6ue8aIOWi2x8jpe6ymzCctdxYO1a7B13K6B
xJnEn3CFfRbZr/U6VnqD5AhZp/U0Cp4t/xf9Y+vpyqtfaTnr7azwY3Fb5mLk
ufZMbZ6SeFrNSfZSZogkJuRcVnNMssfig9n7rLSuvcbmqfV5bP4W/9w+t+S+
jaGdx5F9rTwKu9+Vt7PS1SVnVxy7qmWWi4qPZHsN0idenCM5o9JDWY1Hvrdn
UbTuiodJnpa6vOKBlcdI8Fz8mTITsRrGxnDlw1hvZ6WrCYfYGmE59qIvtrpu
5SOVuYPlKHuOK5+wzAJIXlv9XLSujXPR5DYXSI2zPLDyGG0NKjOgFSevamVZ
G7k/Od9Vn0tiSHLT4sd64CuPqGDScmbRzIWjbEzIp+iZkterGFqtWDSkrTWr
vtL27KVu2rpMzovExHIywTBZg+VSm9cEJx+pq0tuvq4h8Sw9KfkUDrH8eYHn
UgsKP9u9X7wzYGNIrr/uza0/ZvPa+q4FJ2W+aT0coi2J7n3Fufi0117Tag2k
1lzkpn1n4KInJXu3NYLwJ+EHi+eVR2R9lRITm9fltzbmhQOt7l1xbPHKCG4t
hknOknu+fmv7rNW8ntx/NS8j2Ci13taXkptFp5E6YmsZyV9bI0qsLJ6tfiu1
oPRZtm8q81zLb6taSeJGzt3ep/hOBYe297/oy6y2L32x3S/RFbb3KbWg6JCS
mzY+FzO4gm3LGyRutg8q76WQ/LI5vuKl4nVYz7nkUell7DoLH34NnvAKzxfa
yeLfcuPrt8W7WM1nrQ4puVm0qOUWm2sr/WPP2mLsQp+XmrLqc0vft8KD1Q8r
D83mIzlTctbXnjDR3jbmK+1k8W/jXPitzJIKhi032twk507qi/U6ynsLRf/Y
mnKhZwjf2rps40bwbHuosk6by6v+i/Cn1Za2tl57wiTO5JrSH9nYFvxbTrDf
kzpIarHF8LVXVubvtuaW+V3BEqnvF3rG1iCLQxu3Vb9cztHm0YXGe62haHty
T6s5S49G1kOuWfXmtq+5qN2lXyv+3soveu2leGV2PkU49oLfis9Arr/WMxbz
K5xc+JblHAt3lRpq9ZL1H8hzV34CqUHWx3vtnZwj6V8s55T+2uqxMu+w5178
otI7rDSqreOF32zNLXPq4tXb/F29B2L5s3CpzV+LgYJzst+iYy/OhcSkeC/F
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
+hWlLti/r3uu17mQs7NzwKJzijduPTEbt3J9yRe7/sIPVgeuNAapI+W3pY5b
/7/0DhYzpdZbPinnVfBs65f19i96arLHL9VzFY1UamLhxnIu5Z4WG1afE/yT
uNnYFo9ipTHI/YsHUvZyrdls3C68HavfSo2wfEg40NYmG7eCjRIHu/fX9TbO
tmex3Gt7lov5SMkvgnkS21W/Q/BmcV5qffHQimYu/Vrpm4p3SuJW9B6Js9VU
Zc5CuM72ofZZxcOx76Ks4lB6roszsrW41Jrr+YjNx1Uvs3pvx551ee7qPR+b
LysfZhUHmyNWc17UEasxLvJihXPLn4RzSGwJh9jaTfKl6M/SO5NnlfO1/Lma
j9jzKuey0m9FtxduX/V09v6WHwjGrP4v9yc1jtSIVS9vc22VF6RGF858redC
X5Fnrc696K5yvra/e+33Oo9e3xcvusw0y9ld61XLvVZnWg1g+zir0wjmLzwu
oovIOxWreYfN5XIutnez/tJqnnhRd8i5kLO+7rlsz0Jw9XouOUebR+RZZI9F
t6/6cVLXil613G77LLIeey52nVajruos4V6CVcv/5FllFmPxU/QnOZfCgbZP
vKg75NyJXiLfrzi8zExLvbA4L7XVaqdVD2tzx+oWy7EEA3Y9tuclGLY11+aU
zR1yjparLW7t2a14u+Q1ifmKA1/XX887rIa0Ws7yrc0RO+94nXvxey2WVr6T
9VrLOdo8LT4eiaH9WP1WarHN35JTttaQfZGP3Zc9x8LbxaMrHmnhPZJfpZck
uLX9ZumzLHdZ/Fz4D/a8LnwnW2ssB5bZio2n9R8uagHBDFmz/a3tj0juWE62
WLWcRjBT+MpyY/H0LnjPaozVvMPyMPktqdcWDzYHLWaKZ1t6gaKxS69E7rnS
clY/FB1l+b/kSOlPbWxXHk7JR9s7l5kLOQvLyaXftD3CKs4W/4WXyHqKv2rr
RelNiq4rM9niYa7mNR/J1RbbZV8Wtxf3t7255WRypsVvt/loubpcU2YHtjdf
eQgrDVD6/dW8Y+XX2Vyw/oPNU7IXcqZF+9kaZ9dstWLhautjWK4uuC1nYddJ
8GN77ZW/tJr9Ea62fG77TVuvrW+2wqrlPcJvVntbL4jc5zoX7LlY7rJeol2/
zbWVd1T40OLfzkpK70zOiOy91NDiiZW56ipWZWa9qgWr81rp2OKzrXyJoqsJ
ZmwNJXsh33+kx0swduGHW0548SeJ1Ufuxca/zMVsPto6WDSMXWfBoeXAC0+v
8Kflf6tdrfYg52t9Not5Ek+LZ3vPUncI1616f6uLVvxZcofck8SQ1F+bm6u9
lOdaD7a882D12Ov7i7mt9SpLbSUcUjwKexZ2nmu1Itm7xVvpE23cVu9sWJ1m
OZbwQ9EnVhsU/iya0GpjEmfLCR+5F6vTrF4q+Vh4svgVtr4QbKz2a9dTtFyp
+6S2Wo4q+t/yG8lTy+EWD1anrebgpXZbXrJ8aNe88sNX6yRnd72XFQeS660f
ssoRy1G2Rya5aT1Dy8/Fo7C123pE1ou2/LPqv2ycLT5L/Amfv9ZjvTWL54Jb
sgbrtZKcLf2g5e1SC6y+Xc1ZrB9C9nLR2xac2Fmt9botX9m927Mr9yn3J88q
uWPr+GpOZ3VIiT+Jp63R5CxW3lThq6KFis587cty3aoftGu2HiD5XHDOxQyC
aMJSR145Urwv27/Y2aLt2Vd4sHrG4opgqXAF2Uvp3y/mjLaHLXOc0ieWfFz1
XEWnEZzYOmK190VfXOqIXYP1KkveWXza87I8U9Zs6wKpg6t3Wj5Sg616YYtn
O/8q76isem2LAaJVio9q42lrqNWZr3XaM1r5XWUv9lwsv5GcLX4RyUGSd3Y9
5V0U26dY3racs9L2Fg+F36wvUWqKzS+bp7a+2HWuuI6cl509kfVbfWi1nMXP
iusuZg3Woyv9iL3e9mW2ry/cYmNOOM3GvPB2meEWri7vBhDMkA/RomQ9RDfa
ft9+7BlZn8dyneXnooGLHrMa2/YyJA7kHC/6XBK30qPZOrLyNi0/2LMonrnl
E8Lztqcrddb6hKQWFK1SeLLE6pUvhZ/tvuwZWa1ruc7qvQuPsejD1eyY7GuV
R6uel9SLUhNt/2Jrn41zOQtbF0gulLy2XortZ1f9OOFDck2ZaxSNYWO+8pZt
7lt/wHqAqzgTDi/zoOLJ25posV3yqPhvdk5ErrF5ajFD9rXyzAs/25y1Hi9Z
Z4nbaiZV+NbWXKLlSi4TjNl9ESyR+kvus8IJOV/Lb0T7kXxZcbXNd5vjRRsQ
X4Wsh1xj9bPVDOVdBbL+4qUUX6VcU2qN5RzLb7Yft/lIuKL81uYy+b54CHa+
U3rA4gVZ7iVxtl6B9UaKd1d6OluXbZ6Wfs3WIHuNna1feAIWh1avkrOwnFyw
ZznnooYSziz4tF5Bqd2rGmqfS+pj6VUvfC2LJRKHMkst/Gb/LlxXuJdgr+Dc
6rQVdxVPgPRBFrc2L0rcLjyW19pWNbTM+i0fkhpXeKzwBuE6gkPbO1tsEK5Y
zSBsTbdxsPcsMSHcbnPK9rDW5yl6ZuU3Fl+ixMSe77Xetl5K8Vgs59gaSjBc
+nfCCfa9AnLWVheVOkJiSDBGsGHnGjZnrXYtcSg64SImK65beexkzeW31qu0
PPm63mLP6uHyHgjBT+HA1byArM2eka0FRYsWr8D2JrZG2DpSfCTr+RBOKzlb
ejEbh5Ivq5iU8yLekfXYLSYLD1uvsvgShD/LHP+1BsvtF/i0HkvxN0jcSi2w
dZmsh2gA600RDixexMqbsrlAzsXmrNVsdjZh+eHaJ7FYLf5zyZfCtwT/xeuw
cVt5R4WvvjZ8lpmd1RW257K8bTFP1lz4s2jXoosKr9r+pWjv13pIXlt9uKpx
K6/Dct1FX1Pub59V9kX4jdSg0rOUeBbf4AKfNm6vs7D+Cdlj0d6FV219t5xJ
uJpwgq0v1kssNWV1je1xrP9fPLridRAuLb35hU62vEHiZvOXPNf2yDYHbTyL
b/CR+LScaa8neyTxJHu0Z1q8lFfO2n6ZPMv2I+SMLnwwO3MsddPWbts3rbwO
W+8udJFdv8XJynOwmtOetb2nnYNYTiB/X+DT1veVdrX9r60vK/1vc7nMdKxm
I+dVdKDl+VJP7YzMrofkiI0bwRjJ/dIv2Fyw67d9n9VLVieQta1y0PqK5CzI
3q2HXPBZakHRCWT9RBvY+FxwkcW/9QAL/xcdaDWnzZ3SZ9k6Rc7C7pHg1p6R
5aiLHrZ4NWT9K9wWf7L4GPY+NmetjrX4LB6R1clkzcUTs/WO8HzJF8IJpccn
WFr5PCTOZI9E5xD82DpV+nGLfxJby+cXNbdwMsHndT9CztHyDOF26xHZOL+e
Wzwfq0PsfQh/vtZc/i4+SdF41mu1eWHXbGtQyTWCvdJvEj6xPmrpx23fVPoR
63HZmmvnBYUryvnaXLazsNU8ndTcVZytZ0LyneSs5dLSI9vZt+VPu1+rJYge
Ixxe9HnxeUqsCk5eeCj10fo/ZL/lXCxX2Phbf6BwctEzq37E4tDmrO2zLAZs
nMleSl6s4lxwbvnfxu3CnyHca/FQ5teWT0qNKLWAxL88l/TORVOtzmU1+yDx
XPW8rzhfrGeFc5LjK+61npLNzRL/C7+O3L/gpHgyF/6MnUfYcyfcteqvbY0o
2LA8VjBp53rkHO1MjZxLmX0UT2nV8xbvjuyR5GZ5lv1t4fDSV9ocsddf88mq
D1rNF6w/Y2eXpU+3f5M4W3wS3i7a1fKY5VKiwVYaw+J/VbMueu3rnrfoDdJH
FzwXn4Gc6aqnJmdU9M+KT173sTXU6iVyptZnXulzgsPysfVo5T8UL9fG0+rP
orGLzrF4tr6BrY8WMxc9r8XYRXzIuRQ8F8+taBgSfxLbwieW66ymtZxgezq7
TusjXdQCsseCsaK9V7qXXL96ls1fe16rGZDVxjYvLnpeq/dWeUc4iuTIhedm
sW33Vfwcgo2SgysOtL2wPQvyrJKPZb8XGCt6dTXje+Hwwheyc+fSK5Ue0+p/
y28WM+Qayw+2btrct7Me60cRLl15SiV/Cw+vcrDoKBIT4i2Us/hf1vq4/Q==

         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", 
      "273295602940247217835514841293393314396"}], ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.20162388682365417`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.7978114485740662`"}]}], "}"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.775516077202188*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"bada75c5-b2bd-4fdc-8ca8-230a395e5677"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["4-colour totalistic, range 2", "Subsubsection",
 CellChangeTimes->{{3.775514113632599*^9, 
  3.775514118388816*^9}},ExpressionUUID->"be241203-31d0-408f-be3c-\
539692b0e61a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"test4Data4kr2C16", " ", "=", " ", 
   RowBox[{"datak4r2C", "[", 
    RowBox[{"128", ",", "128", ",", "8"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"test4Data4kr2C16", "\[Rule]", 
   RowBox[{"netECA16", "[", 
    RowBox[{
     RowBox[{"Keys", "@", "test4Data4kr2C16"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<TopProbabilities\>\"", ",", "2"}], "}"}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQ/eGloNAT6TeOnLn5oiDaxK5DGkTPT8uWAdFGSiyq
q2TeOBqUcGuAaKb1mfYgus3nuTOITvum5wOiTyXkgunSk7+DQHRTzz8wPSlH
nPUqkP5vpMAOopW2uwqBaNUFl4VB9PK9qxVBdAPPNyUQvS92iyaI/nH3ghZY
fLuIJ4j+wC0Dph2va774A6SNWp+9AtHX5m8zFZd94yjvyW8Ooh9cWzobRItc
9J0Lon3178saKL5x/HIrXx5E6/C9V7cA0jJtPtogeoXGDAMQvUzgOphe12Rh
CaK36Wpag2iRqu0OINq8670TiJYwfOUJotOyLXxANADwjI5/
  "],
 CellLabel->
  "In[106]:=",ExpressionUUID->"1bb87011-4698-45fe-a076-b11de909b696"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztnb+qpVkRxRsFMTUwHTASzHRiuxnwCcYnaFGjAWEMxEgzMfQ1WjA2MFcw
lMlMfBNnwOAmG2vNWr+q2ufcoIYzl332V7tq7fqz6ut7v/ezX336y2+8efPm
19/+8j+fvv/NJ59//v63P/3WV//zi/efffyjz7755cff/0+++vzFv//59qM/
fPLu4z9+9OPT5w/f/867P/3td++++OFf31Z+flpT2Se1p6NDSv+KburnlD5T
+xD4UXGrriF0c56l6kP43bHP1J7EHSf8OIW9055//8kP3n33H/95+/O//Cv2
+eVzif3pzycbVr6r3mVHn6nPU35RMazGE0efVHzrxMOG++KcsTNGOfm3kncI
7J3O++cPH97+PyHuC2FP57Ojz8lu6r2o2H8qL1R8R/i0gs8UVp3npmqeig4O
HlJ+TOVW9eeO/qovVPs7d0rFm4o99Syn/U/frexP23OqXj2dsWJ/FQN0fUjc
CycuVWK7ilU1zp/WqzWAc78qOqhxu3LeznrPiYFToub905oUJlO4TYmqQ8VW
U/Wqeq+d9Sr2KjEhVX+qflfvfuXndE+RsoOT39W4nbIhXe858WGDqHZInVHF
c0rPTt3UeEvUq+rZnfifygWVZzn6O7Ha0dnpcRw8ENyUc4+cO+XgjYhRdNyb
8kWlv3Nya+XupPyYsn8Kb4TdCKHzSOW7DufQiT0nRxN1vlNXpOreVG2j4uSk
W+ru0/c3Fd+m9K/Yn9hzAxe3rZe5RaZyzQZsEHltqldy9Ke5x06eU+0dOvnA
lP4qHhyMvfycmrsR9kn1to7dXmVW6DpTFZqjc/RR1xDvPKh2S+Ud5z2HVKxL
cSCpnJWaudNzDbq3VXV+tn5hgxBz1amYM2XDlG5TdyGVX1TuLoVD4r2CUy5z
8r5jn8r+lVxT2Ud9rmPbTpw8sxD9eOd8hMCnI5280NSMMrUnMfdP3QVnTeXs
ROxVuVY6zqt2I3jd17xQx1ultqnUD6p04nBKUthW12+4C1O1sTOb2GZPund2
cJiyrapnxdep9bcIPa+h52UpHG6WVF+fsv+GOKauV+M/PU8h7DnFizrxdmom
RbyTQN8FR1J9KIHh221LiIptekbQeRfoGU0qRzgcxQZ7pvbcsI+KeQcPm+cL
nbjqfM9hg21p6ZxZpDCf8hfN6aXWp96xcfBP+Hca+0mhc7SKq87ZE3FPU7MA
1f638NWbhZiZpmaRqv4b1hMYS92RzvphgxC8Zap+TulGvEuTiv+p90bo+v/Z
8gLNe2+wbec7AJu5mmeo7R37p/gHgidU9al818ES3eMQd3YDX71BiNkoMVPb
YAcVS53c12aunhY6PjvvrjjfVfUh7gKBgc6exTnvLTUt4XfVj3RvtcG2nT31
q3D2d2r7yj5TXOgUr+L4ayqubuhrnk02vzvk4I3oqZ9Zpvh5R+fTHLMy03TO
O5VrpuZfm+PqjTVtpx22vTtE88Pq2af9NomTDfy8g59Ur+dgicg1G/zrPHfz
uW6fL9D9OD0bmso7qn1ul238vGNz1b8b6uTKGiLe0jPxVB80hdtb5gt0P16x
rbp/agb9ygF+PZxs4Oed9Q42UnZL1ZMqblNnV++v6sfU7/it6Obg9pbY0smH
0KLmEYITUG0+ZSsHJ6n1RJyp4IH4rsppbK4bnf7LkdNZKnxX5wy94tMUL5fS
jcZhSv8UVtU1jjwSB7iNn0/lAgJvqXun2l89u7NP531P+ZHgnJ1YneLZCN2c
ftzRn6hP6O86HNQ2DvCR+PkNot5NJyanYhEx19hW26RwTujj9Lwp3Rx9UvUe
4S96DpWyc+p+OXehosM2fn5KUnf2lCuJmNkZ06ZqG4I/dNY7cSwVS1P6pOI2
YX96/pLKg6n1zl1QeZXN/DwtU7k1hUmivk0917kX9KyNniPQfLsqKUyqz3Ly
AjF/IXDi1MOOnk7u3sbP07mAnnekdCPOTmAvdUan5qT7KWJ/un+ZklQMdLDk
1MDqGdWzO/fOwYlTY9yCvYqt6Hos1Wd1culEf0rHYYK7IDhtun/ZIKp9nD6U
mLt19owV3ZweMKXbLTE/VUcRdd3puafP6ruOU9xIiisg6hxH/xSnneJvO2sA
VaZ6/FT9Rs+nUjivnD1l281CxLrUHIfoy5yzpHTe4MeKpHo0goehZzfb8gIh
zizJqVXoOW/Fj8/A1ah+dHq91JxanY90+mVDPKE5rlveJaA5Z/q5m0XlTFLc
ZgpvqX58A+ZTZ0/1dKlc4OjcaU+CJ3S40xTHRZ+RwDD9XWefG/NCp86pfu20
Z4pD2BBzVHtu5udT67f5hc5xKS7d0b8zznd+dnRIfbdT6J5RfRZx1xwOIaUD
7bvUeoKfT90X1acbckHKdyl/qbil7en0Ms5nYqZ54zyUeC/CubOOHQg835ij
Hb+odnPw48TtbbxEynfOnNQRdVbu9DgOJ6zmhUq9V+Ewif5iwzxU1Y2IM0Qc
VvHs3N/UPb2RnyfmtqpPHf1TQtRXNC+Xslvnd9X4o97xVN+xbR5K2DkVZ4g8
6NikcsZU7riFn0/1Tan4PMXz0HWs6nfHp7eIU6M6/kr1vKnzpvCjPpfG2+Zc
6dRmRD1M8/MpGxLSyfkTvUmnbJ45qjo76517R3AIKR+lan56DkXjbXPsInoQ
9YypHETHW8eGKfzfHjMdf3We0cmtqv50zUDzpXR8S/HbNN6I2pXu0VI+St01
+o5sq4ErNkn1ehv8WPEFwbWq+xD8cAqTG/hJIqc43031ShWcOHrSHBSRdzr5
CoKT3xzzp/poehaj+rSzHnN0qNifiM8pvDl995QdiOem+LGp/emaxMHkjRwF
LSmbdOLKqY0763/1XOqzUrzlFPY669tOOxA9hXovUvqk7pTq95Q47yM9Ul4g
sEHjqvIs513QqXPR94WYh27D7TY7dHJfznzBsfnmmEnPMm7pFzbffeJduM6c
peq87b7ciFviHYNtdkj1zp3cqeNTGieE/ttwdYtuqo86ufGTqPMs2m6E/afq
GdWn6r9NTtmEtkPnTJPOrVM9Wqq+SvHJBK5u0U31keO71NyZwOeG++JwZVP3
WsWwqgOBQ1UcHjJ1B1O/36niI/Xzy/1pjjQ1M0rhioilhG4Op5TiJyv2ceKV
gze63qg8S7VzSufUPe3s6dQ1RL9AcLBOPEnVXWquIfovuk9UY7iKJSLnpu7j
FI9K57VOHDpnUe++E6sJvuL03U5+z6mxU+sdIfgTJ1eq/SZhfycmODxkxS90
fnF+jxbBmaRwTvTONA9A1JMp3ehejFifelaqJqysobnW1HrHho6/UvZP3XeV
j6rYRO2JKjG8ohtdhxCzJAeTzhoHk47dOvff0K91PovgA6e41qkclDpjqtYi
ckEnnis90cs1KZuk5mgVn3bOGZ27n4oPRB6kcyudlzuFiL0qZoi4RP/NHede
EJhR44wzP+3EJx1vOzlkVU9nzxSfqWLb8QX9N7OcdyBp3HZKqqdzeiV67lbB
G1Hnq9i4pQ7pvC9O7+ZguHOfih1S2CN6BOdZTg9eub90/ebg9pHyAs2HqM9y
ZhOOHRw7E5xbCm+dtTFdk1dspeJtGy/RiQ3VvyrGKmucfK2uUfWf4vFo6azV
U76YtlnSDiebp/BGcPupupr+bipW0LyEmrOIWivVv9Px2XluCgMp2zpnV8Xx
XSovOz7dnAtUOzix+pa6YoP9Vd47xUOm4ryKE0L/VJ1zS3zozCkVX6uyIdfQ
tiJwtUFSddr0OSbxk4qBzv6pHi3V73TGRjomE9+dqjnpGVnluamzvErW7yn+
/FF97dhnW32bmuk4dkutJ3QmMNO5Dz0jc+ZQrzUkJ47fibnM7b52zkjX0ind
ts36b+RgNwgx51L95fx+M/UszyzEO4fEXC+F222i9k2d74lVdNsw63fkmXPB
VC1dqU+IOH97DZnydWo9bUOVS9zcGzq5tZPLVde81l37pfNdrIp08o1Ts+wN
vnbmMp12cPiNbfOFFIej2oHWzfHdtlz8qJLC2wY+trOuu6WGPOl88h0xT0zF
CiL+dM4XUvOR0/4Eh0/P5lSbp3D1bJLq5el6ib5Hqp6dzyJ8neLn6RhOvxuQ
slWqJnfuVOq5jqT6Dic+3FJ3dUqql1f97tSBxDsA6hon/jv6OGenc2tqfef7
P6oOKZyo+EzlCFUHQpyYoNp2c93VKUQv7+CQxrPD4ady09RZTt9N8fN0LUe8
/0PUCSluPHUfiftLSIob7JwV3tIvEL084ccU5um71ol/9Sx0PHFygWPDqbkh
jfPKc1M8OcE7pTBP+NFZv+25t+t28jtd905xMoQdVK5b1Z+Iq4R/1T6F4OdV
/1b0rOhTsXPlHebN9WrKpzd+d7NNiLuQOrt6fwlOJmUHovdJ8RIOToj4//Kz
87cz1LMTuHVqgBTmp/LCBu5r6nMKJ526TeFBvS/E/p25wLG/o+cUb7xh/qti
jO4vUnnKya0Ef5Liom/57JyLtol6Lzp7GSdGETqrtiLuy7YeLdVfOHHAqWGc
mQVxx51nOb1hqiYkuGiV+5r6PJWzKjZxanvHp6m6zolFj9r/btCftkPnGYl5
LhHzTzrTNkn5K1XPVGIdHefV3xvj6FbZM5WXU/4i6hZCbul/O3u0G+2sClED
O9jeYJNOO1fsUPm5an/n9z06NepLqTzr5RrVPuoaItZVfOSsSem2rf+l6386
tmzua1Rc0eu3+Y6w87Yaz4ntdP6qrN8w/03lEQIbdL2d6n9T+qT8RXB9xLmI
PpeO887dIXxHSKcNVfyrOOyc8aX0J+a/at6kZ0+qrSrrN9Qnqn1S+9D51zmX
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
AEA=
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "1806102772"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.09196737408638`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.9080325961112976`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzdmzHPdddRhS2QEFCmTIf4B1DG2HKb0ggprZGCKCxFiguULo3/R2pTpoSG
io6SioYyPwIJWwrSJ6SJ1pNnrXOvUxzr+tW5++49s2ZmzZr9/cXf/+zzf/ij
jz766Ks//fY/n3/xT5/9/Odf/OJv/+S7//npF1/+9V99+cfffvzlb5/vPv/w
P7/+5N9+9fGn//6b//ibr//1zz/99Wf//cmPfvDVp/Tv1zv0fbpm8lvJ+k/u
zdhkvf7C12vftX7X2NPYcLHnJ31tzriOx/XfF/G4+O61zj9/880n//d8+M71
9+tz8v71znWWD983j8Gb2Zt5/0k70Bxizmj2THFo1nwSS/R3F+dtxWCrbi5q
ZYLb1tkXsbB4PrTnn/34Jx//z3/946d/9y9/qeK9FbNJzbrOkvxWUuuTc31o
twS3H75PPxs7tPz44TvJ2Rc4vPaZ2HCRNyhvpDY3mGnlwwTPNJbfoTYlsdb6
/Op8//+xSv1lMEZzy5r70b+39pDkOhpTdD+JH69YMH1fYgcaj9e5kt+lWF3E
I+U5BjMmZpP9X74z9mzVpgQzT/LbxF/mSex/vXPZLfFvUt+pzQ32FvUr2UNS
Q5Oc1tIMKU4MZ07WvPZD+yaaB1p9jelxqA1buYL2p2sem/yuOXvCZ0weS373
3fg/jcfku9RWSV2m2KOcMPG7qXdUT1vwscTmLd5I1zE8ofU5sduT/aap1/Sd
hQZo/E5jjcY+1a9Mb2g40js/lFOZuDZ7M/oAxTDNYwneEt5Cz2t4iKm/136S
WFjkebM+1amM36l/KbapDmniq8X3WvmWckI6Z0m++33pC8yMmPql1Q8aPeTC
JD1vq29t2bk1jzaYodijOdPY5/ourWuUu1LOQ3MU1Xko5zc9kem5jLZgME+/
S7nTq/oCoz+bfpNq5tTXdD8Ue0Yvpfq28W9SFyjmDcZMrWndCaF4MHONpOdt
1RoaF4an0X22OCTts9ZPi5c+eXeoZStT76gdEn6VrE/1K5qTjfZr9BaqbSb5
x3AkiuFkTZofEjubOm7mRFRXN7UywYN5p4WZJF4ozzf5zTy0/poYod9t6Yfm
jkpiK6PxUjsnPY7RUpJzUZ+25iy0FrRwQtdvzewM/0z2Q/XDVv299kB1+HVu
WWiDrbMszm5mPYu9Je88qavQmE3mO0ltopg0c7okNo1+e+FtPbcyOFn09Ykd
aL1IbN7ac2vma+YgLT18saaJqYXuQc9l5hpmb2bNlq5C/UtjkNaaln6bxB3d
w6J/THCS5B8606HawuLey2VbWmcT3yXYNtzP9B0G/613XqXPtGq0ybEtzZ/m
UorJ1iy+Zc/ku6a3ov5q5TSjpy00lmtvi5il+ZbGMuXJiR8pfpLzUl2U3h9o
5ecFh1/XgkWepHgzGgjti6nebmajrfsArb6PcnJ6x8nYk/rI9O+t2eiCq5g5
kcEV3VuLM5j8ae7kLDiYydtGa2rl/FZ8UQzQet26B5LMVZO/Uz8mfzc2b+XY
BR7ovM9oOHQP67NTXpHsYZHfzNnX/XvyPq3pi1pJudnCJi17JnGR2JnO3aiW
3soJRp+nvkgwSWdSyTqmr6E2pHnG4C3Jt4Z7JHtLbJKsQ+tCgoFFHqB+TDC/
5t6Ujy10G3pv4cnPid1avNRoOLS2Lu5RtOq+mS9Qbbzla5qTqW2TXGryc2JP
ip/E5pQzJzZZzGFpDk9waLSjVjy28qGZ8ZnaTfsyyiGpbkPvRSQaXYJ/E4Ot
+kvzW4tXm9+i/Jnydlpr6B5ov9bSxOiaVGOk7xieTNeh9T05O12fnreVDylu
k8ec3cyJTG2l2nirXiR7o5hZa6e0jhjdydQmqrldNlzMQBM8JH6kvJRy14Tn
UP8u7vm0OIyxA92/OQtds9XDJnajs0iahw2W6P6vPSQ5h+7BxALF0iJ2zJNg
wMQFxRv1e4IfyhNamqTpy1pneXJOampH0jsvYm1R74z+ltjZxHvCx5L4pf2p
uTdI99DKh63PLa3syafFr0xctHJpgmdzB8zEYIL/ZB1zf2adPyk2Fr2n0Txp
XNA9mLqQ2DPJn3Q/CVenM8fLnov5zvXdlu5n+pF3qAUm9hN/teYUVPegsUBt
csUInTuYfELt3Lq7Rbm06U2uv1NcLfLMq/Zj5r8XHpJ9mpilmnCyT5PfqN9p
fW/lWHrelk3oHJZyjCQHJrg1Pl1oBTTeDXelNmxpgDRPmllegmfT7yR55lX7
oftc4N/07FceWOOzlW9p7qJ+eVIjMnij67fuQVHNn2KgZc/EDmudZ40HGi/m
vNTXrXhsYW/Rd1Ad1eQTmuefxF5iqwRvBgNJXbt+dz2no/Fr1jd4Tjhzy6eL
WkA5g+kr6dlb+dyc1+hUiX3oGVtzh2tvJo8leeayrenTkz1TPbDFx1r5Kuk9
KVYNr6CzodZnmjdo7NCeN7FVwnPMXcd17UveT2KNxvi1vrFJwoGvsyR+pLhK
zth6Z8HZkv3Q/NPSn5M1F5ikT4tDJk9rxkFtSPODsbO5Z0jvvyUx/g6z+JZ+
a7REyq9oLlqs09Kyrt81cUdrjalfhm8s7gCYHNvC0pMP5Yqtu3PXmi3NgfK0
ZD+t3JvMd0ztXvSh1OYGh8lZEhsanCz6ypZWbHq91myU+jSpU8nvUhsm/KHV
vyz66NbT+l1qz5YeRX1Bz9LiD4t7UObsxj4LnCd5oKUrmtpq+qlrz3QWk6xD
92N4UbLmov9N6kUyC0hi9tqzwU8rHp98aB+d9JvU/sk7Jv8Y/kB1p1YtaOVb
s2aLu1JfUy3I2IruJzlLomcmOpjBFY39ZJ+mL6a+SHBFdSp6H4nWuGTP79AX
GD5P58hGn6Q2pLFm+hRaU2jMtjRMMxdY3BVJYnndQyW+TmpKouHTdxIMGA5j
8EzxZvxC9ViKf6pD0rMnWF3XAmpbyiVo3ktq7jvobAZjBktJrqD3T2itb2Hs
eszvtu7UGc6c4OTyo8FDUneuM7Z0JJMrEn/R/a9jNonBV927M7FptBF6zy1Z
h8YCxVKSTyjfoz6l/T7NOTSmqO/oQ2OH3jOhmKd+p3ZrcXWTAylmaFybXtLk
fGNPGiMJZujeWvoGfUwsGM5gdHKTiyjvNWu29OeEK1KbUD0z2ZvRbxdYap03
OUvilyR2qEZN+XnCW4y+kcQXzWlmhki/u9aaFr1AqxYkPkrql6nLLb60uFew
uANAMUZ9ar67iJ1rfcMBaE6g9k9s0sKt4T+tOQjtrdYaNY1Bw7UWfZbRtxP8
UP9S/YFiht4ZaGl3LTsbXZ3GEcWt0R6pfmJyy0JXTPxLfZTUXFrfFz0yzZOL
Xmw9K0n8krxP7Wa0pstudNZGfZScxdSF5LdaPK2VB2j+b/UddJ80/yd7WN/T
MDqP6evXHPvaD60FyT7pO+t5YnL2xA6tO2CGe1BsJzikNcVwiWs/yf4X+nPy
WyZPUjvTnsVoC9dZKCdf5ExaFxJ80l6A+tTEYxKnxr+tvSXvJ/zQ1DXqC8OZ
Dcc29zronIvuoYX5JL5oDV3oz6Yu0BxC9Tfqr8UMi/o9qQt0nVY/aDTzBZZM
v2P+Tntw06MZzZ9yb4pVkzOp5mb6i2SfVBddaHFGk6S141onsb+JWZoT6AzR
5GTqF/rdRU9t9kDtcD00Rkw+pz5NeLLpxYx2vdCN6TstrtLqnWldM9hozQ2v
9ylPaNnHrE/PReOX7meRr0xOo/PQhT5Gc91Cu0tyS4vz01p5rU99RHVFylWM
bmzOlfiX2if5e4INo1MldcHoZglPoHoOne8s4qhVZw1+kl6GYszkNJrHaFyY
/be4UKsuJHyP+rE1d27VuOu8if2TsyzmKa380Ip3qp+YHJvwSVpnE1wZvS7B
MK25lLfTPnGRh2mdXdwfa92/WsdL0m+24prqEgbPSW5caC+J/ZMzJjqSyQlU
L13UWRpHi1lGgqs1n0y4fWJzo8UtfLfeA+3lKc+k9qT5nJ6X8sBW39F6qJZu
fms9f6fnas2RFzZJ+iyqjZj+4km7tfBm+mgapwtdZR37iz3QuWFrTkF9kdgh
OZfhz2bPxtcLLYLaav1bSe6i7xhb0fsbF/4XNYjeFWnZbYFt4y/qIzMXvtah
eallK/r+dcaWhkDrKdV2qH7S0gqe5AAGhy1MmrpvtI4EV3SWkdQOYweKVRMv
1HeJbZPYvPBJcU45W1KzqBb35HzT5IRFzklsS3mm6TGpjxJbJeu3YsTkW8p5
kndM70z7PhMv637TcPskzyfnbfFnw/0of05i4bIzrX2tOKV5hvr3yfm+4U4m
T5petdWz09g3/MHkDWrb1uwjwXNyrpbGnnBgM0NpzWRNDmnNeii3aeUHaodW
nFJuYPqyxD5JLNCezsz3TX6juYhq44teo5Xnk9hZ5zdqc+OLRPegOKGaRhKn
Ld5u1jG5nda1FuZbMU5zKc2Z69hJ7Gn6zdZZTD+VaJLrPpFqksmeTc+S2Ife
BWr18hR7Rt9LdMtkHYO9xf4XNcLgNlk/+V3TXyzi3eQHyqMoDo0mmWApycMG
b9QvtC+m/YXxqbH/4g4Anf+aXizJsSZPGl/QvpXi38zQKTZa/QjlV8l+WvcN
qL8MtmlMtfp3avOWRrTOOdeeaa5ezIvNOgvdpnVeylFNvNOzmF5j4QvDYxNs
m/0/iZnrLMk7LQ7Wyp+GeyzuCJnaR/ud5B2jUyX2X+DQ1DXztHgm9R3dW2L/
aw+0fzRxZzDTwuf1u5SrL7BkMNPifjRPmtmB6buvdRIdifpogUkav6ZuUk5I
16F1P7FJa7a+jtNWraS5l/LtxVyY/lZylpa/kv231m99l76zmNW2vpvUDqNX
UxwuuL3JIXT/CbZbOTA5C+WZ199pT9SKa+p3midbe7u+u4hlmlvoLDLBQIuD
JfZs6RILztDKP+tzJXkswU9SI1rzxAWuTJ9iuFMrz5s1kxpEdWD60PlOK29c
7yTrLPBG16TnutY0d/DWHJvWykQDafVWLTsYfkt9l+Rkw0+up3XPZ6HzmJyf
nHetddNYS3CY8EmTK1rr0LzRwi21c2vP1C9G91vEl6ndtI+muE3eNxosveuS
4I1qMq3+rnX3Y5H/TSy3ehbDqdYP9QvFg9lD624JjRGDZ4rVFj9M9CWK51Z8
Uc2tdXZ6P9Bo4yZfJftczPSTuL720Lpf1NLHTI9s9M8kT1IMUDsYWxmtwMSm
iceFPVu9v5l90JxAsZrY0MRXwr0p9lp+NL3Mgqsnvkj2n/DwJB6vd+g9HKN1
tPTSZE2a81t8z2jLBkvvYE8a14uZAsVzckZjZ+PT9QwiOSNdv6UnJ3x1EcuU
q1NfJ7miNfdP7JnU8UUuNZoh7SVben6rR25pDq+yJz2v2XOC/wTPVPdu2bll
W8PhF5+TsyQzCLqmqenmTiPVHBLenth5cQ+ztbfWHR4Td638TGNqrXuY2G/Z
k8adsZU5Y8KjaP+y5tuteEww1roDQ3m4WacVj4vzmnxIZ0+G21x7vvZJ1zF5
ZpHTkpxgaqj5XWpnasMW/0/mJknuonZr6Q/XO0nst3xBz0vtnOCqNfMyOcrw
WOpf0++3uAr1r5mxGg5p6ri5E2W406JevMN9jwQPLd6V2GGhcbX8brSIBfe7
7LDQn1szO3pfaJGjknq3wGqLtyw0sYTnJ1q92SfdwyJnLuqF4aVUE6C9v+kX
En9d79A+lObAFj4X+ZneV1lrazQGE75t8klyllbONxod/UxzmtEDje+SPdOY
Mpok9SPVLY3u1+IAtF5Q3Y++T21OtdDLJpRvUJ2t1Ssl+ZlqwvQsCw3faLPJ
+7Se0jhK7GzqUYLb5LxJrFHdI8EnxUOSN1pxlMRpElOt+y2G/1Ou1dKZk7xh
cEJ1AKMPJDFi1mnVgtbdHnpGw8EM/6f7N3mjpf/TvRkcJu9T7CX8Z81n1g/F
Q+t3W3exTL/Q0plp7Ld0AJpbaL2gOoDZT0vbodze8PkW/ltaBMWbmQVQnkz1
DXquNR+m9mzn6Seelg5G4/1J3YDuc23DJNYSTCb7aZ3r2g+dE9GcT+cg1+8+
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
DnQmlXDa5Cwt7CXYNvtc97DJ+v8LpmMEiQ==
         "], {{0, 128}, {128, 0}}, {0., 
         1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "1872979601"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.3498079478740692`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.6501920819282532`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzlmTHKZmkRhVtHRTB2AboEhUnEbkwFk5nYoBWNBgbGQARBF+AOjAwdd2Fq
JrgC3YbgDBh0crEOz3nqff82+JrbP/e7t96qU+ecqu87P/v0o19+9dWrV7/6
5hf/fPT21z/67LO3v/n4G1/+5xdvP/n+9z754IvL3//38+X1xz/+2w///eE/
Xv/r2797k17/4ad/+sGfv/7Bm6/987uvn66f7k+fuRkDOXv63c08288hOSQ4
SWMzznUDrk493+i7Vo1uuMeOmbz3j1/5yZu//v3DN9/67c/j6wmfvHs9eU7r
XWkMN1+3zm5cv6/5ueFcL/HayOfkmbfVzoh58pw0/3/5/PPX/+tj8HYrh5OY
W3mwP2meT8V2Kp9Gfm4410v8tHgyfSbhk1N5sDWRvCvVjpafJzgxdGSTY1t1
fHpmK7ZJzEY+jfy8e8+pc73ET0sfW/zW4kYbk7dp4uSZm7NVmufWzP703ZQD
W1z6xFFPsbV6s+WlST7J/Smfp2fcxMkNn5bu33xtYNLm9pb+krq3+NzQ/dYM
SHxm67vGPfb96TMJz7f2gZN7jPzcoAst3Se9duqMRBdu0K+WV7/5XHZ+SD6N
3xYNbjE0tOX9NveN9t9T/iR8SziwhatWD26e0b6+Tcteoic5lR/Ch63YWvPF
DRpqn9f2SIauvYsH4s0mGJv8nXB+ivNUE8kZbX6zNY6c5aXodSv/p/h508e2
vJmtobb2Gfi3f89K7zFmz6fntPqrhWFjdk57sFUXAw+2XpOz2DxPYr55z9DC
v9GPhsdoxd/ialvX0lq8+3yjLjfMQXa9Uu0jf5/oadr7La6zMW9773QGMXjb
5ih7n5/yf5pPQyMM3BIckhiMewycnNJWUjtSi1P70gl3TTzwKW0lekTuJ7qz
2dc2fmxfZOON8HPLM7Q8zKn+um0Osmtn+KtT3nUyL0z6Lo2H3N/iK2Pvbe/E
bvAwdvyT57TelfqitKfSucbgVYMPDe5qcVqrdqc0dBJz6zeFyXtbXm7TQ57y
OfbOJNXEVjwtjTBwdQo/T31keIlTGEh1KuXblrYavUO0zO594udP7XU3a0S8
4gTntk9Iz96KzZhfSL9s5rDlDYi3b+0hyV7C6LvJu9IcbvoQW8cJbgneTvm6
CW9s+lJDHw3euw3/k7+nHs/OYcsbEE4gfqPFM+RdRq5a3Eh8CPGHaS1aPq2l
F7flc+IHWj4knWdtTjA4rVWvFFfEn7R2zpt61+Jzgj3DSxh1bMWW5jP1JCmH
2L5rs4/sfJK+SM9OtHKiQS38t/S0VS+DG1v4N7xBi3OIdz3lH4gXauGk5X8M
j038ktHXho4Y701zNcFeq6da2Gh5PNtfbWLM6OvNWm/yT4sHCM9Mvnsqn6Rf
DK9r7NxIH6X42XwvybmBH0OPjN60d4m2jpO+3qz15Lst/klrurmDmvhewpmt
uhs7IsKHdk3JPSluT/FMigeid6R3Jn4gfT7h/xY3Gjy8iY0W701iIDsfA5PE
exhzZVov27eQ/Lfe1cptis+nWhic0+KW9P50J2PjipyxxTOGr7C9eqvW6bte
ur6TXf0NvrflWwxPaOC2xRUGP7R2yCS36fMn303vIbVu9Xhr9m/V0dBuUuvU
80xqbe9FW/puzDinvFCa85QPJzpONHSz30mtW2ck/E/ea/PzDb1j6+ypHida
fGoOaj2z1e/E5xB/2+o1ghMy97Xee6rHW15rooMTPLRibvlbowft3iH9Zcyw
p3o8PSPBCekLmxOMHiT+cLMXjN4nM0j6LqPHCZ4nfibVAuJhJu9q1euULhNs
pM8hc9Ztemf0JqlFy8MQ3t70q5v7yYl3nZylxfktvZicxY6fPN/Yz9zG2wYv
ETxP3kXisfmB8F6rr1O8kbqnnL/JvTfsA41+Jxp921k2OZb0grFXSWM2/GTL
927Wizzf5gcDw63Zh/CJsRvZ3Bel95Bea2Hb8O2nznKbRm/OAq3ZfFLHU31n
YKala5v+0/ZR5Cxp3jbxs4kr0iOk7zb9D+GTllbeoNEkb6kvMn5zmcRgYMzu
O8JFKX5sn2/4qLTu6XlTHmvtKDZx1cJ/S8eNHBIdt+NveQaCecMDGOdNvd8N
3qzVd0+8lHIa0QjbX9m/YRm9Q7yc7fE2sW3zf4vfWvl5Kb+btPTututJHQ1v
afu0lGdOedfWWcgefrN3Upyc2tvb2G71Qsr5RCPSupD4b/vdZHM+3cTPKQ2d
cOmmZhHPn+Y5jS3NVYtLDVzZc1AL8ylmDM9j9M6E8ydxkvni6TnEs6V42NzD
GDghZ2xxKeHVFAPGjmWC59Y9Lfy08mD4xlNewuB2koen56d/J/xJ8D+JcxIP
0dBW7eznkHdN/j7h2wn/t36zSPHfim0z/tR7tPqR8LPhT0j+Wx5ms68J9lpc
R56f9hrRBXt3RHrHwJKBW9LjZDYkOG9xSOu7rTxP6n5qx37Ke5Mzntr7GWef
7EZOea2JJ0l9JtG+yYfsTlvXtl638JbqaZp/23vffJ1iIOWBTa9i+xayo7P3
fsbZSU0JP6Q5Sc+S+jHC4WnMLX1pYfsGnkm1fnMn0OpB+5PmIeV2WzfTcxmz
mNEXxrzZ2mW19KilF629E5llUn2ccD7RL6Jrhr8iPEN4KeUr+9rQ8ZTnWzuu
Se+c4goD25s6Rfh20+e09odpTiZ8a8ynZOdzarfTem8rZnuOa81WBoZTr0J4
fvL3U7vZFle0MLnZj4SHN2cQooOTXmvhjdSOePiUc1L+aXm8TQ9GOJDMcZNa
pPU1zmX3cuv5Lf4ndW/FaWgE+RgeyYi/FWfKUZs5aXG1seckvGfoeAsbLQ6f
xNnif3umNrT4hn3Lpne1ey31aae077Znpjkn3G7fcyrmVq/ZMdzmo554fvJ3
w0+2+qXlaQ1/aHB+67wtn2lwnaG/L+WZBq8aXiLVejvmU/khmDF8lOFhNr26
cU142/ZFtj4afXTKpxm6f+qZ6Y6IYIl4mCd/SGZbo9YGrgwfbvTpph6RGcH+
bPq61BcRHb/BqxjYIxxo99emtrZwnmrNhCdbuE2fn9aC4Mr24S/lenJegrGW
LqT5t3nAxs9tWmnrS5pbG/ObmCH+uaWhTzlp7dVbz2mdcRPPN3zIuchOe1I7
W3cIDxC/lPYF8Sc3aA3p5dYMYvA5yfnE87e8ur2va+G89TuU4cMNztzUBRJb
qxYpP5C+JlyactSkf9P3pr329F4jPy2MGXsPW/fTsxhe99Rck2I+xUCL243f
FFp1mfQv0QXyLnv2IfcQfTH6rsXDqb4Y+0xj9050kOjRDVxqeI8brgneNnN7
Q55bXpq89wbPsJlDgttWPifPT7XA0KbJGSccnj6H6ALxmae40ZhH7I9R05eo
O2mu/t+uWztkEkOK29Y83sJ8azax45/0e8rt6f4nrbvR+8RXpDHbu+JUW415
7QbdSX1Ui/deyqelEYaX3uxBQ0c2NdrQPsK9rb4zOIrwVVqLCSenf097wfAe
KYfYukPq0ortNJdPeT7tC5K3CQ5J75NaGxy4qdFkj0Q00ei7FFebu+JJrp5q
Z+ffrqN9rtbMS3o5xU9Lu22uSM/e8nhEXwhOJpxJcmJ7A8P/EI9nzBEt7bB5
o4XbVONsjTB8NckJiSH1SGnfpb4xxeGmJ0x5pnWd5p/0I8GDgbF0nmrxZ/pd
0o8GftKapuclWtzyDymHtGrU8nstLd68J+X5CU6MfQLxhC3vYXhXm8davrfF
kzbPk7Pb7yJ8bsc/6RGjXvaMualHaX5OYS/lfMLPLR2f6FFrHiFnIbVu8V6L
Wwxc2We84V2nck5wNfFCaa8R/Up7sOVtUt9o8E8LexMuSvV9gpOWxyZ+clKX
9H6yi2vNmwa3GLiy+ao1/5J3kTy0+rqFh5TH0v5qeXJjN2LwEsln+vyUtyf3
k7O0PHaLVw2en9SLcAvh0pQf0hq1eC/tL5KTdN5seRsyR7c0d/LdtGdbexKi
rYSrDf4nPGNoUMoz6XPSOqb4IbxKMGnknJzduDawZ3s24+ynzph6LcLhxn5y
gu2W90j9jMGThEuNvZDR+6mupXgw8kn2Jy1tSp9PdDP9bPK/je3W2W3eSHuh
xc8tPifxpLND6/4bfJTNXYY+GpicaIfhzYzY7HymdZzcQ3qq1V9Gn7b8W0sv
WvOj7UnSHUXqScg9Rr3S/rK51OiRtH9JntPPZh5SzKfcSGJ4euZmrgwME840
ePgUrsj1JJ+pvrd8EeETY+/U4sCU5wmX2tetGqW+ccJpRq7SeqU+J/VCpO9a
WmB7j9aerYV5Qy/SZxJv3NJlgzMNjZjo2uZZUu4iGGt5aUMH03qlvJrW18hz
iw8NDzY5yymPsTm7GXxuaJDhB4x8ts5lcMimrqXvMrBHfEJLlw0dTPNM+HOT
0+x9OOk7Ms/aHLt5bZzlJeakVWuiTU+ccNvOZOJdJ/xm53aCScIVqQ6mOjLR
FDIXGJzW8jwpnxDvROZWI+fGx+DJTb6182Ds/wneWhzYyhXZRxFMtjSulfPW
vNPiSXtH3eL/1lmIzzdy2JrrDX4j2mRrhJ0To3da/NPynOSME95uvcueZSZ1
t/nh3RjSZ5J7br429pA3zJJkN2h4pxT/NrcTrUxz0uK0ln8memdo0xMvGf1r
a9zkvZNatDSuhYeWJra8UwvzBve28GxoHMFYa1YiNTJqSjj/FJ+kmEnPPtkP
k72onauWpttnNLzlhP9bOCd4M3TB5tJTeCb8mcbWwjPhavt6cnbiK1p8YuSQ
+ORJnCmuDC9kxG/0jsE/5B6bYyfvTXvB6LXJx/D2rX6fxNnqr/S9hu4TfrZ3
xbf5gVZNyY5xc29sx094z9Bu0oNEUwi3tOZocn9aL3umI/WaeNoWDok+tuZB
ws+T+O0dhc0bpKb2e1O9TjFgeCpDy9I4ibaSPZ7NJy3825q+2Y+k7oa+pFhK
n5lyQlpTe59Jak3q1dJKsj9p8UO6byF+gHCvrZvGu0ifEu0gtTY8xkTTW31H
+iLNYevvqdZMztvi5Jv5vOVhWjG3fE7KP/Z8RDQixWTa++l3Cc+0+oXoaZrP
CZ8YM3ILw6mmGH3R4jrynJQDN7nX5vMWtxsa0eqvlGPtOdrYt6QcaPg9Y95J
z27sPFsclWIsPcskJ6kmbvISyYkRG8HwKe5tPdPg9gn2Uk4g/T7xRcQ/29ph
xJPmv8Vprb4jWLL7ZVIjkp9Ug0jdN3nJ2LdM4knrsoml2/Qi9YdpbCnPTGJI
OZP0bIurUx429pCTPEzqZcxuaZxGjdJ6Eb5tzUotXrWvT+18UgxMvmtwr60X
rRqlXoX0i7HHNvbPxA8beEjPS3iv1eOts7dmSbKraflk4qtbPGnzob2PMnaM
qXYbfG7nnOwtW1ht9UUap7GrfIphElt69pSjiN6lumD0BfEwrd43ztXCHtmj
trzcJu8R30jw0NJfI4dG76Rctxk/8SrG3oN4yxavtvLT6qkW/9g+p6Udt/X7
UwwTr0I4wchDa3fa0gVDHyc5NHon3fkY/Z5i7+m7LU9l+LQ0J8STp/mxc0Lm
F9KPrb62Zxy73ye60KoR0U3b6040cVOLCdcZntbwXSlftfjHrmkLnyk2UgwQ
vNnnMjxVi/9TjTa8XKvWtp9JudfepRj+p6XFLXxu6lcaQ+tcZPY0ZpNWz6b+
ZLLbuc0ntzBg83/qJQgGyP0GVxs8k95jYM/wGAauNnvE5rSWPpJ6pVxE+nTy
3Zb2pf1i7MZbdWnhk3BC6lEnfz+la0a/b+rIqRiM/BONaNU07cGU09KPvQM0
PF7LF6X1JfEY+mj3UUtHJvk/Ff+kjjb2WrmyNdrWtZbutDwPqZGhL2QvR3ba
tkan+xPigSe4Sr395oxs+xCjvqSOrfhbWLL9T4o3g9Nau9CWNpHz2ngmet06
F8HzU93T79qaYujXpO9ILxs+NsXP5gzb4gSjf1P+meTN8KWGjyV9lPKAcU9L
9wmeDS3evE69a8sjtb6beksDD6382FyXehiCk5YPafkN4m8JBt6n3rex+r6e
veWfySeNjfTUZu3Ss7Q4/JQHIN74VC/b8yPJYcrhrRnh5t6fxNbyVPZn8+yt
OY5gj3g/o6+N2qU1MvbPNgfa+ri5/7FzQnqf4DPd29/W+4Y3bp2FcIV99hb+
U3/yhL30/k1+Sz2nvbdszXcGBgx93Nz/GFpm9FfaUxP+J5pi936KE8KTpPeN
XNlnN/xJSxeIZhkxt7x3S6Mnfd3yq6k2tXSW9GOrX1pa1np+utNL72l5Tpvr
WrVO52uCZ+I9bru/dU202PByhKMmupD2VNo76Uxh1GsTJy29m+STaEd6rpbP
2ZyXW/p48w4z1YVT/WJcT7wKwUC6u2v1OMFSel7iNwyuNjwtwYzhE1J9T7Ug
5QSSEwPzpBa3cVHrmS2NNuZN+0N0P+21zee3MGBjdcInKeZb+mJwBam7cZYW
BohebGI+PYvtFVt8nvbLpEat+NP62jxPZplJrtIzkucbnnlzJrV3s6fORXjS
4IfU1xnem/TCDf6ZeDmSZxI/+X2E/KZAPMzTGdMemfy9NUene+zWbwEtv9qa
3Qw/lsZPuNo+1wR7KT4ncab90tLr1g6QeEWiay3ta2GYcBTJVYv/W3hraQ3Z
caXcTvauLby14mx5sBSTLU/e4gGjjwweTjHf8hK2T255rdu8jeExJr1GcEhm
20k8xLtOzkXuMWqX5qSlccSvEt20fdopX5fWbsJphk614rT7xdDuU96GfE55
7FbtiO5sxkn6elK7yfPTupN9OJmh0uuJztp9Z2Ob1NG4TufQlNsneTBm21Me
gOymUpxM4kmfT7CXYjvVo1bPkudMamHPBa1dcUv70j0V+W7KUS2+NWIw4kmf
T3YCp3SnlQeiNQTDLU+YxmbkP+XM1t77tmtSO4KBSZ+2/NWp2XDTAxvvNfCf
cmPKVxOckD1eC8OtmbTlf0geWpzf8iQGNgh+Wh6AfAxvsOnPJ/W1OTDNp+39
jLO08E+8HPESZE9I+Pxmv0HmphZmWr6U9AvZJxs8aezcCA5bXovoTgsnm3ye
xtPyTsZZ0tgmfbpZd9KDqUbcPOO39tWtnBv8QPa3LY2w+d/4e4r5CTZsnj91
3cItObuxzyTfNTiW5GQzz094MLwcwVvqD1vYtvOf8tJTjZ7+Tnbddl+0dqpp
L5PvtvjW/rS46AadMjzk5m5wchY7nvQ5KcZafNKa18jebHNXPOEiMq8Zfn6T
T05xEdFN8hzC86n23aBrRgwtbmm9d9L7rV1lC+ctL9fq5adctepOzk56s5WT
VBdu9mmbXGRrFtmJTe4xPIyha6d06pT3SOf6G3b1qU+2tZvg9tQcdxtPtvzn
KX5ucZGtxS2cpxyePpN4NmMvauvUbZ4k7YvJ/a1ZNcUP6fdWn7Z65wYs3cCN
hk8zvOKk1k890tJx8hxj7pvwQ4vzN/l/M1etviM6m/aaHVv63RbnTDTO4LT3
yce2tPLUbygpBlJMnvp9gVyTM050wd7lbu4ZjPl3M+bN/bzhY9PYjFqcwtKm
j239TkEw2cp/mhPb59gektRl0kdER2zeuOF3ivT5pEYt3N4wKxHP2eL/iZ+x
sbTpY0m/Gzy5qbNG3Tc9JPEJLa00ON/QMtIL9v7K1kHbzxh9Z/fUJIZWf23u
OdMemfAe8Tz2NfE/Lf+c3p/mM8WwwQMGnxh7P4JJgnkyL7e0frPXWn23yTmk
92/YA7f01NALG/N2LxtcRJ7Tmn9v86UtLUhx2OI6wl1k7tvUmlYdJzxDztLK
ub0nP6Wn6d8NDiRzWauvn56f5t/g/00u3fSlLWy3PAmpdcuHTHCYcibhPcLD
hNNS/jF0nOBt04ec8j+GjzV4jHCLvU+w/afhsQ0PaeyUNncFxPOQGXzTuxoe
L43nVK+lZ5zgv+VD0ntavdzCtq07mx7S8M8G/xCt2fy7gYGWL0q50d75pBrR
ymfLL7U02uBPoy9Iv7f0qxXDpKYtzjS0u9XX9qz9xF2kB43cGrpPeCDNYaun
Uq+Y6lSLk41aE6xu7kKN69YZ7dq1+PCUrtm1a2nlUy9MejzlvdZe+hTeNmMj
Omj4gRR7rRmw5YFbeDPma/LdFk5S/Ni1s2vR0jVSo1N6lOah5fHIDtzA/2ZN
n2IzZufWXDnpZWPffkp/CX5IL6TYSO9v1cWenVu9TOaCFm5bPNDSXII9wuFp
f6X7hzRXpNaE5w3+tznwlK7ZumznkHDpJJ/v3mPM1K1+b72rlX/jnkm/E04j
GDNwQvC56V3JntPYd6U8YPBeS/sMLTZ0uRUP0REDS8STkzzbXsvQF0PTW7rQ
0rIJ5g2+nfD/RBMNr9V6DtEyw/ulfEX0yNBiu+/Ic4z91an4n3B7qkYktht8
0SSGzZkl3WsZ2mpwDtHKlg9pYYbwdor/lv7exv83eDn77IYntH2gEVvqJ21f
RGpt44o8Z4I3g3uJZm32DvH8qa6lmpLe05o1NjnwlJdr+QejZ2/QPiO3BAMt
X9TSLMIzmz7H8P8TrWnlzbhngpmJlqXPPMUbkxgMvN3g5YhekDo+3f8f/76O
Cw==
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3186088319"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.03749940171837807`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.9625005722045898`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzdnL/qbVmVhQsbxNcw7VBjq+i0Q/sBpASbRgoKqgPpQBCMGiNT0w4a9AV8
BvEF+gk68glEaAs6uAYLxuc3xtr7VrAv5x72WXutOcf8N+bcv+/++Msf/uu3
Pvnkk3//zl//+eHnP/unr776/D/+5dtf/+cnn3/x/e998Q9//fiL/7++/vz7
//7nz/70608+/eJXP/rsf//zp5/925d/+PSrn//sbz6f7qG/pZ/pOmb/i3XW
ZzT30zPevIfqJfl8E1etvX1Tz2j0S7Ft1jf4NH5g7aM+/P53v/3tp+3rtLc/
/9dvfvDHX/7qB//4P3/5m/s//D75nOiR7u10T7LOaZ+tM5r717peY4b+lt7f
wlVrb9/UMy6eu5CzkeFTfszI5+Svkuv021PMOp09iXF0P8Ynn9b/cG+JnFs5
D41TH57ltGejd3O1nkt1neiR2gi190We8LYzLn7bkrnxYxSfJsa1fFcrBpmz
UBlSXbRqOnpGeq5WznPy7VS/i71RvZi9mTWT/CQ5V6uWb3EFN8+4+LzgZ9Z1
RyufafGEVObJfox/pmencl7UsOaMRg4Jb0Nt3+Q/yT30+3V8SXSa6MjkqIkt
U5lTnqF1RoqTFs5bGEjw0NJpsp/kuYbbSXByihdUd0bvFHsfXjSWGZy3uKOT
vpIzUvkvMLyoDY2PNfcs6l9qR4v68aZ+DT/ZwkbyW5OPmTzZ6Nrs09gRxd5N
LNHYsdiPqSuTPG3hEyiGF7nNm7FE5UnlbHKbxL89Zb90b4v426olqV5O/tbY
cutq+SVjLwsstWrqBZaMP0zO3sphqI9q5TZJfrLGEuVFE7swvPrCxhMstXyF
6cct9tOyO7r+Ovc2e2vlydTeDZZMDDV23ZInlckih1nwuiaOGFto1R2nPS9q
rhaWFrVDS3fr/s5iDuRj4c3M3uj7CBTb1D8ndpdwI7TnReNdaz6B2o6x/TfU
9a29Uf9m+lY0tzf7obbZktUbchWTf1IcLvKomzxkK8+ksjU5G/XVN2VO8Wly
BlMXm7m+N9T1FDPJPTTu35zZMLNVxhYW+QDds9kDxVtrjq7l34x9JT7H5Jym
P/62esfkCYt6mcqTypza+4LbMT7K1OP0/iRurnn4m7aQyNzEo5buqA9v4fam
j0rOknDapq+35sRu1jumvqZ1N7WvFt6Sc7Xs8al4nez5qf4Xtdn1LATdP/WH
yX7oWZK8ZbHPdf2b5CGncyVyaOWorZyZfr/mW073tGaoDB9lbND8lsaym/E6
0ZHhCox/MJ9p3yfR1808jdoC7eOb90YN15RgspVXJOdd8FTrMyaxksZT6tNa
eHiqj/BULm1q50Vt0sJ2cpYFt9/CJ9VFcr/JRRPdtWbhzPXU+24Gk8Zn0jUX
tpzsp1WnUF0v5riorT3FfdE9U5m3OI0Ek4teYQuTN2cqFhxakgMYbmddd7R8
xbruNvJZY8PYcrLP1lwo3b/h7U0f4Q12vXgW5TpaNk7XMe9YLfzY6bPh/5P7
qRxo/FrwNi0fS6+bNfjiLIk8W3ODie206pqWT6A9u2QP1J8s7Nrw+adnJZ+N
D2/l2DRm0f2sc7AFt0z3Y+K1qXdMTrjg0xY999bsE5V5K583uUqypvEVpt/a
qrOoz2nFF3OZd4gWtXkic3Ou0z30c6vXbOpfmoMZfbU4n9NvDbdAbcTUj/RZ
tK9kuIuEY0nsmuZ+Rrb0vPRZiU7X73VS+1rUmNT/mHh9M65RLpfqPfH5yfd0
xoP6kITPb73jlqxP42YLz4YDNHkatc3WeY1PTvBD4wXVS7JPwwG2aoc3cLxr
jpTySzd5cmoX9FrnG628jtoyxRWt9ZK4k5zXxMHT+qYPSzFj+IfkngXvZHyC
eRb1M5SPpbq+GfcXOZXxGzSfN/MhLVmte3/rfpDhDJN7qC9K9NU6+4JvX/Dn
ixjd4p2M/BMMvDk3a/U4TusbToDW5sn6VNeUK6a5UyvfoLJ6GybXe2jFOJPT
rmfYjN9r5cBGj608ZyGHFmdrcrNWPpycdzG3sOjNLWw8sd/FO3eUN0v2b9ZZ
1AuLmQpjvxTDlCdp8Rgtv2dmrVu9VyMH+j2t9xf8jLlMr436ilaNbPZg+r+t
HJLadYsjvenbW/JsfaYzFScbN9g+5Vo0F1rk7YYbp9im+LyJExPHzbzZuhY2
65vZA4MlaoOtnM3I4abfewNOTC69zrFb+zc1mplHamH4lDO3+Irk/sSun7Kj
FpZO65h83sRf47dP56K9zqd8mpHzmtM2uVCLMzHYWOeiCQ6pTG5yNS3MtN61
pGdJ7jf+anGWlsyNHEyOurAvWvOaXCLpaVKZLPj2Fq6S3y7eaVrjpDUznOCH
yuEpPS5kleyHytxgo5W/LXKDVv6Q2KCRodH1zXcuWtfHzoEsOASKt/XskDlX
MhNuenlUPmu7oDPwyW9bmFngcGE7C/tNzrX2/2ZvrT5+q76gMl/o9yYHYmTy
Bg6B4nbhfwxnaHSanPemXdBrYTs386VW74bq4maua2rPp2qilt0t9vYxciC0
rlxzCOsaZy2rVj5zkuc6HtHL+El6RrNmgk+jd+NL173RxEfRPa9nGNZ5WmIv
LVtIMEPXN3GNnjfZs+EQTN6+nrGhsjK/be3T1NoLudHzJnkCXZ+e8fT9mtNr
4YHmaWZWpzUnfDPXXeQGRuYtDiTBOc1LKY9HMfBULWN8hblaPJXhTFrz/xRv
iZ+hNVSrP9Lqxd/EjOEi1lwl7aNRzmFRX9BnLWR+kwNp+RO65wV3YfzYItYv
YlkiQ+oPDU+15tlMLmfy2FYvvoUZalOUN2vJ8LSfVh1kYmsrvpu8ZWHXNO+i
8mz1cFvcRbJ/quun+OpFLpHIk8rByG1d37XwnGCv5Q8XfHUrHzbcFN3/zXO1
fAK1wZtnX3+m3Kyxl4XeTRw87Y3Oxq/nSKn8aV6ayPmmTte2Y2S1rnEWeaaJ
FxS3i3Od8E/jfsunPdW7XORXyT6prFo+eWGPyVkWvZuFvhY1eAvbrecmfvtm
TdHS6aKnkGAj8Y2Ld+goHm72Dm7yyTef9THWO8bn0Byv1ZNN9GtyJ+PbW3p5
Kj+htd66Z7eo3Vo2SGvk1rWQVYvrPsl/zScn/r/1rARj9J5kP4taz7ynYN6r
ojhc8GD0ntP9H0sdut5nIqtEXy2/3cJhqyYy+bnhV5/CmOmXLfrpiZwTLC04
53WtR2MxrWdbveybPAP93mDvqRkqGt9b79YZn7CWcyIHuuZTHDXdz00/08I5
xYB5LpXnen2ay5n3yKhODRdnznuzd7nA4WKG6rR+krfQWb5EVgmPbWzNyDyJ
RyaOGLtInkXt2swwmDzc8Ejr3xoOk+Kq5YdPZ1n4qETXJw6E1oZGX4mObnIm
LZ2a+41/oPZl+J9WXpFcC56f6q7l/w02aIz7JvW/aE7yVO22wK3BUuIfkjmH
RC90FoLuk553od+nuFljv0Zupr5o5QnJZ6M7Kh9Ta7T2s+Zpn/pssH2TL03u
obh9itOgZ6EYa80nJGc3PXGqu5atJXJo+c8kB6azslR3JmdY5xIJB7uQT3It
eNo3+HnqVykvevp+3dc74dnod4Gxhb5O95u4Ru3R6DrxSzdjFq2/1jptrbnI
A1v+1nBHa3+Y7Nno1JxlgfmFTzD9COrP6fqJ76K6oDlkS1+Uq6Q51c05Xtqj
p/g0tkBxaGolilWji0QvydkT/0bXecOcRssn07PQ+GV4M+MTTE1E9WiwStek
eDa804KTpzinNrvIf4y+WjwYXd/MESVxOXluy28bO6W5MfWH676VsRcTpxZ9
Z2oXLXs0c8tr7peeccF73MwVqW0+xVEk+2xxg09xreseh/HV5p6bttniQyjX
1JLVG2RO8zoT0w1X1qqPDL+xrrUpVk39uPYnLT4tsYVW/fgGrrXF4d/01bTe
p7aZnKu1zsJeTLxrydzUKWs5rPlP43MSjK15J4pz+r3xJwlHcVon4btMLdyS
D5UDzRNMXmHWob6a+vA1B7XwOYt5Hoof6h8MJmkd2tJXy7ckXCjF6iIOvgHz
CTaSWmMd69ezHze5lESelPNv1YMU/y27SPaz0K+JZYneKZ7p1cJnIofEDy/W
fCoHoL7aYGnN/Z7WSXRH/cbN/Ocm35XsuWVrC99l5LDwIVR3rT7aGj9UVkk/
i/6WcgWt+QHKpRt+YO3nF72JD591c7492Zvpwy5mycxl+C6jU4Ml832LC6LP
Nf7H7GGNN3P20/3UFxn+gdbyb8ixEzkkZ79Zb1JfQbFt+CtTYy5yG7MHuk+z
fzPHteCKTd5Cc63kWTd9yxpvdD+nc9H8bZEzJH00Wl+8jW8xfsPUm+s5H3p2
yhu07OX021Z8N5inZ0zirIkFC19kcGU4otP3Ld+S7MfgbYF/c5lZOBpbjS3c
7L+Y+rflK0w/LtH7onZOfrvo07VmOE+/beWT1OcktrnmotfYpmekcxdUVtR2
jE5bWDX7N7kBvcf0VRP5G8wv5moWtefi/pu8nOG9TW1CfQXFG7U7w62ZuRqD
eYON03NN/bKu5c06FG8JVls+0OioxT3Ssyx4D1r7JN8bjNHftmJ3K09uxVxq
U/Tsa55wjZkWTszcNZVzqw+77h0bOa+xRP12a2aj1ddrxWiTvy30bmrk5PMb
uCzz2djvml9drG8wufA/C391WjPhasyeF5hZ21TrjElfw9h7i0s07zfd1Oki
Frd4lUQOiQ3S/Zsa35zLzIKafjq1uwVP2PI/yf4pF2Gem8jc8D8tP9yyqdP9
5r0VKucFJo09tjiom/3f1pU8txWvTR9/fXZqU1SeyW8XtV5y3kVe/Qb8t+qj
mzx2sp/Tb9fvLyzWadUjLZknNkJ1ZPD5lF5aOmr1iVr3Jzzhen6V4pb67WTP
LZm3+lMG/y1+fpH7JXJozZm0eK2nuItW/KJ1SsveTd5icuM36OhjwdtNn0n9
WGtNs/66/jLx92adsuCxqT+hfqP1rLV9UW7B9HNPa7ZqLqMvmhu36ve36egp
P9/yyW+IX2suhcpnEXMph3NaM4npJrdfxE2qFxODFr2J5Lk38fyU7bRyb/Os
mzpa422R+9E131zvJPts2bt578nMa5nL9JdbHPvah1DbX+fJC+79dF6DeWM7
Jrek/rNVjxgdtWRIebZkfcotmLrG8IRPxbvkfpqHn/aZ8Ietd7iS/SQ2sujx
reM19TkLrFLbNDZF6ztz3bTZxfsvdB3TlzH2SH1vqw+Y7Nlgu5Vvt2ZCTN6e
2NopdrQ4z0W90LLlRW96YXetWEOxcXpWy6aoLSdrtuZhDGae4oepfa15SCp/
aoOt+ajT/fTs1N/e5Nxo/Z74nyQ2mX2aOj2Rcyv3M33DZH0TK1u9kjUfTn0X
3UNr1p3yq0a2LTy3uEfjAxfzMMaWE+xR/9m633BuJk8wM2OJ7bdqqNY69Fr4
UrOflv0aXScyvxlTWnzLyR6T8657YQsdUd1RnLc+L/p0LT22sNfaT6uXl8R0
Gqda/BjlIhZ+OPGlpi6g/XfK0Zmc0/hkg8MEYwsuxcg2ea75basHTe26pQuT
Ayz8+c24tqjdFu+cJrKivu7kMxfvxJnftvIf2jc3PfcFD9lax/SO13tu5aIm
dpse37oeSWRuejHUv7U4Q7P/m36+hT16LooNw4/R72/G07VNPWWDpl4wuE14
yIW901h/wkPyXBP3n8ohja2dZEV7BKbnu5hha8mnVd8t+DSaw7/hHuPfTK+Z
+g1zLWpnk0u0sGp0QXkqWhebGuTNeFjU1Cffsng/zsQy42daczvJb+msgnlu
Kye5ec9JVkaPxo5aNbiJR8be1zmkwXbLv5n3XFpc5U08tDBPORNjg4uz3+Rk
DJaoHSXyX/P/6yupWU7303VofXSKWev6vSVbM/9j/BiVbessxmfe5AGe4hAS
3a3jyGLNNe+d5AaGw2xhbC1nc7XymcR+WznbekYi2cM6fzBnMXWx0Xsrl6My
udk3pPhs9dNN32TBO7U4/3XN0jpjgnmKZ7OHdS1GZWj6TYt4t+AbjQzXdUcS
W9e9OWODLfm04pSR8yJmGVt4qhZuxeWnzmjk/zaOYsGRJmdPntWaaW99NrlW
S1aL2ue0fmsGINFLchYaT09r0pzT5N6tmLXg51s8jMmH13z4ItZQu2jlRWaf
i5mlVs1u8EOx1Iqbpm5t3Z9gpiUHmp+YvVG7XsvkdHaDvdP3LRtp1UetfMPM
fd2sAZP9L/ZGc+OWb6G8RPIs40OS9RP8tGYs1xh4Ww1Or5bvWth+K19Nzkj9
m/GBp3XWM2kUV3QOh2LV1ID0XGbms2WDC59gZjVN36qFZzNb1eLKaAx9m09r
rW+e2+IoqP0abCdzJtTukv20ampjF8bnGJtt6dQ8q8W1rv0PneszujPc47oX
bGpVev/aDyf7fGr9Rd/T2GCSk5h8ppUzUzkYXSf6Mrqj/mEhtyRWmnOtOdtW
fKGySvKNVu6acEEmp1rYmrl/MeNKa9K1j13PdbT8jLHr1lkWMknWT+zlZt1K
c7mnau3FrM7f67/Ta8FB0VhA16T33MyXDLafwgat9egMg9HF6bc3/VJi18ZG
WnnjTa6jheeWLT/VEzeX4WSM7VCMUZm0/MBNP5zs7SZOFth4SiY3/YN5LtVR
q64xeaPZJ+0RtPzSU3Gc6q5ld4YPXPtAKp9Trnj6LfVva67gKb7I2BfFhpEn
9SfGDxj/kOztKZ9GMU91nfB+1F7W7xlRubXiOM2jbvrbm7kolU/LZmnv4A29
s7fF6NZ5KXdtnrvG3hvqR2PL654j1cVCvzfjOH3uzfcLbuaiJqa0/EMSC1qy
vWn7VJ4tbCyedfq84FcNz7Co65+y5Zv5dqsvQ+cBDDYWtpzoyOzTxNbFjMea
BzZnSeaFTvtMfEVrNoPadWILyUVndVp5y8LuKOeQxCCDjUT+LVtOMLOoMRMf
3uJV6LWO44v9JHtrvU+0rv1bPSDDLyXPovWCmc1o5Sctnsq8E2pm0c17i4u6
yfAGyT6NjowcaJ5jcEh1Tddp9blMjte6P9Evfe6iJlr0Slr5mMGtuQzO1/kt
tWtTa5h6J+HrTD/U8H5rjN20R7PnNQ6fsgXjo5LcL+HWKGaeOrvxA8YWbvKo
VObJb2ksbp3lY/GB5jK+jtaGT/mrm3yIkaHJpde2sMDbCT+tOmsR9+ll6peF
Hk1ebfafXGZWs9Vbp1i66QOTfSb2ZTh2I8+bvV2K25admne4kv5a6122lnwS
TBobX/DzLdtf4JbKk8ZK8+4/zYGJL2letG9Cz9KqZSh3QXn+FlZp/rl4j7hV
X7ds1uBw8TdzTmsu+i+L2qEVZ02eY3LpVn23jo8tfLbyAXMZXi6Rgzl7K29J
nktzP1P/rrnTZM+LOYTk+5sc3c08qsWTtOZP1vnMCSetHjfF4XpGZc153qx9
1vX7Os9p8QNm/8Y/tLhTyg/c5KtbHKmR7ZqvuynPVhyh6xt8Ul2/wce2sLTu
I5/WfOpviVAsLWoi+s618Sen+xe8B7WRVp9lwavQ31LZmhmYpAZcY3sRR9Y5
JI2tFHtrH0vlZt5bbNkFldWa5zF4W+AzeXfA6L3FFyU6al0GA+v8ltpIKzat
87SFH1jU79SuF+9ut9Y5yda8H9TiQIzejT22OPl1rKFxp1Xn0j201kxka87Y
ykUXfqbV26XcwsI/G37jDe/pJLZGdZ2cnV6JbNd8dessNEdtcVDrPHwxm9Gy
dypnikP6/vJNG38Dt0B940kvi7rA6DSx02TN9Xs6iRwSzi2RW4s/N31hel56
LoM9mkvTuinxOcmzFmen9k7vofuhdtea+01kss7xFt+v9WtygKQGae2nVc/S
fbZsIbELwxdRHik5Y6seT66btmlqn5vvLNB8YC1bqmuTL9F3JVo1CK3LWnJe
206CyQW/beS54IoNhlu22YpNp2dRP5bIpxXf19wv5Q0SW6Cxm+Yhib5oLGu9
30p1d8pVFrZmfKl5t2U9w2++T3C1rmEX8je5xLpPt+CHqS5MbEpyrZs9SsNH
mThlciGK/1Z+YrjB5CxGhuaelvwNfkzvmO7hZo1Gz2VqWCMr44tufja6NphM
7Gsdm0yPkua9a3+7+Gz2T3XXmqddX0/xUev9UP9mdG3q9EXdZ/BsdHGT/0z8
CeUW1rFs4ScNBtb22Kr7WjJv2fWCI23ZNcXJTT7KfG/2sKhbW3xFgoH1bNXp
WYbnpBysqZuoTlv3t+zC1IBmbzft8SYOKSaTPRtsJHijekzi7MmPtXz4uvdK
5ytu5j/0vAk21nxvaw8m9tH54TfMFdN90tkhUzuY3hnFDPWl1L6MLVC9mF5D
ctH9t/L/E8ZanGSyN+pzKIdg3qVK9LW4Z8EFUX6e7sFwmMaPGZ2uOaXEtyTY
MLZgZn5ac7ZmxmbB+VC7MLgy+1zYEa1lWnUTzdlO/sfUYtT3tvDW4kUT20/O
vsZP4itadeXiHoMfMyORrJnkZova1siKrtPifOg+qd9LsLHWhanZDWeVYN7c
v8jt13hbcAgJrlq9S4qfxW8X8jRyNva43udiTYq9BXdhfNSaM6F9ipYuTN/H
cHEtzBg7au2nhbeWHzutT99TaMn25mX8sLGvFrfW6oEaTptyqsmeDS/R4gAp
Tm7mCevZvBbOWzl2gr0Wv2FiselN0PtNHKf8gKn3WzmbuVrPMn1DgxljO5Qr
O9lU4ldbMqFnbNUX9LnG9ltx53S/6ae0eK1Wbr+oSRNdr3O8dZ/9qXfHklov
yeVuchGLemT9LLNO8lsaO556dyw5702+1OQwC45oseZJF60ZSFo70BxvMRt2
2tvN2rBlyws/bHrELS7C8BLGZhe8dOuzwT/lppJ1ku9Nbrl4H+ENc79P+ZlW
n9T4IlqfJvhf1D7rHGP97hj1Jwke6Cx6UjvQ3vTCZlv1zmKuldo1nVdvcb/0
WeZzsodkP4l/eIM/b/EYNHYn37d40ZbeaR1B4wXNMRY8ufFptGan87Sn2qFV
wya1yZovWusxsRFT7xhbMP7HXObsLexRG7zJG5je2YLTNs+imDeyOmFsgUm6
Z+MDKW4NV5ysb+wokT/F5yIum2ctekCtvbVkvrhu+t6bfZO3xSC655vPSr43
eWAL2zQuL3LXVh1E873WfFGL9275T/osqiOKw5bfMBhbrLngommNb2oKk8+c
7ln3yhe+d5HvtWqllnxa5zU1nVnHzEEZbirhrCg2aD5A69OFnKk/Mblrq99N
97/wFUaeNJ+hfpL28Rc17ML3tu438z+GIzKzKOai/Zq3faYypPJpYdL4KBrL
WvOxyf6THIaea9GzXvhts05L/qfnPtXvW+STiz4O1QXlpaku1nMR5oyt+mLB
gRhZmTmlBf+z6LOc9rDgdRMdtWL0gldJZpborEiSH5rcz8iN+gFaC7TySYpz
Y/stGdL7jf83Ok2uVu+1lc8nOk3208qTE8zfnBUxvdTWbE+Lv2rh2eSWJh9o
zVe3+LE32O8iBt3kFgwH25qLXvjkBJ8Uq1TvJmdoYe+UJ5ue1xqri9j6hj2v
60d63pYtvEHO1J8s6vG3yeGk0ySHpH1D0/c0OKTxi/oxekb6XgxdM8Fbizt9
g+0ne6N2fTPvWse4Vq1EZzaS9RdyTnS9ns1o9fQX2Fi860f7BdQeW/ZyillU
15RDoDURradaXB/Vi7lMTdGaW6A+cI3PRYxr5YTm+wRXC+73qRmP1nugyRlN
r/xmvU/33OoZne5fYNvglq7T+mx6xGbPJ3yaebOWLSS/TZ67yOdp/fiUn0xk
uNY7zTlbZ1zYwkIvRndrH05rGXrPwse2fOm6TqRnN+8IJNgweDM4X/AYpo5e
8HItXCXfmxja0vvCj1EZttY8Xf8Hki8hSA==
         "], {{0, 128}, {128, 0}}, {0., 
         1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "271280936"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.0009019562276080251`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.9990980625152588`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzdmr3qd1l5hicKIWdgNUVOwdgF5kWwnWY8gglECAiBsVA7C0GszHGMlU2q
nIKk0OPwCEQygoRpFtwX132vvcfiHfb82P+913o+7o9n7X/+t//87Eff+uij
j37yT1/957PPf/r9L774/Oc//Me//s+/f/7jf/nuj7/91eUv/vbvr9e//85/
ffLnT3/zyX/86g+f/O7D/3zy6//9hw8/+Nefffj69eke+rfm/uT6qeec9mJi
Rf+2FfOn3vtNrLH1Xt6Qr0V/mR40a1j0CL1u1VtrDd/79OMPv/zLxx/++09/
fN31b7/88v//nX6n/8xzzPrNc5KYPJWLb/p1UhtvWM/b8vWGHmnhQOtdX8fY
5F10bad3na6TZ655PLk+rY3yL42P0e3JmpPrUy5Mby5ysX7vG2osydHb4rzO
V6u2zXNob55wwPQyze8J26nXOP1twvV0vzevae219EzCHQvdTjVnaz5Ac3Hz
vU/V2FPPfGrOQGcRT3kK2pvrda6xiGJOwneG09dzPPquhPuMHqPPSXQ71ZzG
89L73/DemzW2wEx6vZhpLHSL6buFB0ziY/RtC6ModyTPT/Dc5CKJ1RofTE2a
+Cxq8hTbFl6tfc3ivQs9SbWfiUkrVjTva36k84oEb1se0PQ73cvCAyaavBWT
p855zRyJ1meyF8qbaz1jPOBTa1i/y/gj6qHM2uhz6Ltuei6Ke4tZUIJXtN9b
OU28/GK+upjLJXmhuVjPfBYeIeEIo8eMxruJResZfmtOYri7pYFb+t/U+cJz
UY2aeKVkpvGU7j3dv9BjBldNHJJnJj43mU9Sfjdxbs1MWvxy2ldLA596hGLR
Wn8m+13XmMnder/09xbHLWrbxIr6R6N7k3Uu4tbCHMO5xpMmmLaYS59iaPJr
/A6NYUsHtnqf8qbRGOYbA7p+08uLc16a92S/Cx1Ia5v29VO+/tTLtK5aZy5m
na1zMfp8U+eGZxP8pDE/1WcLoyhfJPFZ6NsFni+0tNHbtHeo9m7tPbkn4QKT
o7VvMnrMYCzl0EU/Uoyl2tL4o6d6MMFYswbz+xpLab5az6d5oe+luJRoRVPP
VHvQ80TDO8nvLbw6Pd/UT+LHaR4Xs25an6YfW1xjcmH4ms4BzAyHrqd1Prjw
dGvONf5igYen9RgtfZNnW958oXUTTKD1mWDRG66Tmkl6lu6X1nDSmwnXJPfT
PqVnu616WOiH07vMDMr0bAu7knpe+EFz/8Lb3vQCC/2/0BtrTqcaeHGd9DXt
x1Z+TU5bGs9wGfUXJ0xbnGvQ+kzuN7y88K1Jba/9oMHAZL9JTS60fYtn13o4
0RiJbklyRDGk5UcW+jCpNzO/MvrfxLDlU4zGW3MKxRPjW2mdrHuc3p/s1+So
NWuluERjvtCTrXN8MwtdaOYWVrRmqq1ZxEIzGDxpxc30LK3bNS8nz2nhyaI2
TrE18xYahySnxrcmGoZ6DVrba5+y9ggL3bvAtEQnULxNcL4Vq5ZXbenqdc0k
mJOsmXITvcdwn8ETOkuh2LuosYU2M3hifNNTONyqT+MRaP2f1r+IA/VWhiNa
fm1xDpLwS9IXa3/Xmpm3NFJLe1Dua+l/44spl9EaS7ie4jDt8YXnSrSKmaWY
mlzU88JLUr+29vKmv5Jnmt5J9B7174YvFthoOHShk2nNGBxIeoTObBd+3MwJ
b56tJPpz7V8S7qNad4HPLc5aYKDRqGYW3fLFtEeobmxxmcFMio00/i1MaHHK
wmssfjfrp/qZeh+aFzMfaK2f6n9T8y0caNUwzenpbw3nLjz4oq5amjnphZY3
Wfg4468N/hjNZnCbehCjn1v1dlMHUuxqzaNafU37aKF1W/7O1KGph9Yc4LQX
c2bRmo1Q3F5rzlbNtzzs4gwr4fqkzpO6MrVB+6JVb2/QgQt/lOSxxRdGY5j5
ktH2VDeavLcwIdGca14266Sak9Z8EpNFzdP6pDE399P1tDj6lItT77e40tTb
Wgea70AWc8IkttR7triv1ZstHUixxXyHYzCwxctv4I7F2RPVSEl8KP5TXWT2
YjBh4akpby40MM17q/6T+kmeQ3vN5NTsa/G9Ad1jwsVJPy74yHgZWreJLmrF
alFvSY8kOs3EgeJVknfKKUbftupt8W1AkqM3zANbMad7Sfrd9LWpYcMRrXnO
mr8WuTbYSDXATd9k9k6xpYXJZr8UoxI8WeiZdb1RHZhgPuX90+90Hkj7/W0x
p3iY1HOrPhca2/jcVg8azEm0q9EMrbPFBZc9hcmmblv8QuNg4kbxkNZPgsOn
e1q+g2I4xcPEf1EsXfT4Wv+bXBvcbtUnrZOW5jF7pxrJYEsLZ0xsW5hM95Xc
v+DEU52bmjR+2fRygo3J+VqCMy0d25oTtjCz1dcmbsan028DburJBE/W35DQ
Xmjdb64pVrfmnzTXRiMt8JxikblOcIPyKe1rmrsEf1q40cJS6kFob9K+buGe
icnC4yd1ZTRJizdPuVifNSf3n2renNFT7d2K82L+1sLzlvZu+dCFjkrwk+Lb
6W/NOo3+OeXRnBe08mu8G52Nn+5fzExaerI1u6PrMb1Jz0ZPzzecTmeY1C8n
ezF83ZqLJms22N6qH+Pj6Ky15Y8oX5jeXGh+o6sNPtA5TKL3qE8x/r1VkyaP
LQ25mGm0fFBrPmB0i5ldLPTMTT1G40y5lXo62i8tH2c0pHlXgmnmbC7BT6Oj
WtrgqV5oYYvROYaLF3OGZO+0DikXJP1CZ4xrzUMx08xFW36N4kNrPQZ/TM23
fEGrTmjfLTRACxtbXm/RC4kHof1idCDVNi39T+c2RsfSHqfzH9MLrdlRCycT
37SYadA4L+Y2rVitn09zkfRO6yy7hRvJehIcSPRP6zuN1nnHwkdTzb/A2Na8
qOUrKU8ZbWBmFC1/lOCh0YeteNIep5xyik/Lt5p6Nve3OOimtl/7GtrvyfNN
7VGdb+5v4UkS29bs4qm+o/phwX1G3y5638x+n+K1BZ5Tv7OYUdM4UKxb95S5
Nv6X6n+qM2+ezyb3JJ7RzP/NvMKcKbT6jtbz286baKyS966/RTHXCy1KsWWh
meks5ZSvBae3eqrlO064l9Th4r3mmS0cbp0LtGq75S9auTO6ZYEnZl6d6BDq
y6h3bvkmo1fpnNngucFn6olaXNbidIMPRiNRTEveS88ZqQ6kNdnKe8uvUV2R
7J3OdakvM/1r/Cad2yf7anErzfWC++gzKS4tONrg84I3W3PRZG0LrbKok0T/
G/4yPsXofIpLLeyi2s/07Dr+9Mx6rcEMT532ZTRqkseFTzHzNIqldD5sMIr2
y/qaclnyexLPBPdMPBM9T+83fGR40PipBcbS3LX8XSv+Bh8MDqxnO4vZlNEz
xqcs7m/psaR+Wvp/ofFoDbf8TkvPvwEDjaY1PHjCtITf6ezR1G3LXy/OTxcc
ZzzperZD9fOCT081b9ZGZ6pUj1GdkOTU4Kfhu4SjDUdQ3dvyetTjmPMXc/ZN
PSDtqcSnG6+d9DLt61MN09o2GLLguJZWpLOdm5q/pYvWnnStIQ0+r32i4ceF
L77pPc3siOLSovZueiijKxZ+LcE3E3NaA+bfgvfXHsrohNZ5381+oc8xeEu1
ROIpWmtI1nbqu0SrtOZUi7qiPbjgU+ODKEebnm31+3q+vfD1Rm+sa7KlXVv3
UE3VqoH1OUvCC8a3mvcusIiemT7l1yhvtrivpTdaMWn16frfN8XXU2w3uEQx
n9Zw68yopUNMX9A6N+csNOaJfqCejtZbyzsn/Wvmpa2+o3yU7CV5Ju1xEx96
Pz1HW+A89RFP+foWXt3kpqQ2aG8uPIXBjfWMZY3bSY0le6f4v54PnNacxG3h
v4x2or2w1pam5pNapZonwflWrNa+voUVZn5lOGIx401ySudsJuan2jD9RWNC
cdvMpROubF2vZxELjbTg6FaPt7Rly/+e4kO9AMUTyt0tT2q+c1h72Ldxx0L/
tLDCfLtiZmI3/d16vwt/YXQIrXOjGYyvMTV8wiLjQUydtDhloUOoR1vwL9XA
tHdadWW4w3jqxRwsiUlSe0k8171msHex34UGMLra1P9NH5TUPN2j0Q/JfhOM
SnJtuNg8P4lVywss5oG0VpO6anHHG/rllIuWLjJ19YZYmf3S5y/OHA1utK5N
bOlZ5808nviF8vXb6t/UVeI313OSBNNaMxzDxQssMhhiNK3RgYkeWMeq5cdb
WsXweEvTGpxfayGqFU0eT89vcfRT9W8wpOUFzJxkwSPrXm5hUSvORge2NCTV
S+tY0RqgOEDzvqixRLu2uOn0LrOXBJdOmsTMWChHmJy26n/hKWj9n+5fexPj
f1u9vOgvU5NUw5t/izO75Dm011rnLwnmPFXnJs7JbNDkJakZ2o+mxlp11eI1
us5W7SXzW8rFtKcSb9LiEZP303qS39eameoHOnc1Gp5icoJFC/413tD42YUm
X/RUguH0+cYPmhls612tMzXqu80zKVZT/l3XdqtPqeZJckHr/ybHmfgv+HR9
fcpday5ncp3U2IkrjYZMeoq+N8FSykemL1pYl2gV09eL3jf8e4rVzVlxoj8X
cUh60+DezTPiBSeur836Ez/b4sH1Hls1RrF6wd1J77T8I8X8xMuYPjLcsdbS
SQ1Q/jLahmqVBY/f9PiUZ1s4RnO6wPm1LqLzMaNLEwxZcM0CB8w8xOzLcP0b
fCW9ZzHvaulqo2FaGGi0kDlXWvgI4zsoPhsepLEymGD0XqL9buIk7eW1xjb9
u5ghJHVF67+FVy0vRmfCJua074wOMXXYqh96tmL8Mt2vwStatwlXGt3b6oUW
lrbOVoy+ekpbPjXjSnrKaL+kJs1ZTEubtfRkov8XGobiW2vWenP+mfS40WxG
M9B9nerkKe6mWsvMK4z2W/BXkouWtmx5Xsr1STxbWNeKueFHU0sUY2/iWzLb
oZi2zt3C09FafUrLndbZmqW06rmFma1cm/xSTbXQe6ZmjD40eU8wp9Vrrdk1
nUEt+NroKMMj5vdkbSZ3CR7SPkr+1nD0el5h9t7CdlOThvta3EF9uln/wpsn
2NXijoVGpRzR8sUt3bLQdYlmWOgEinXr+LR40MyXkrXRXNC/pVou4ZGbs7UE
t+m3AVQntDRnEkP6LpMjurbEpyx8xwJPqH+ncW6dBVP/1fJNNBct7L05Tzhh
qfGDN7lm0SPU+xgOov6upW1O60/ymPTXaf1Gc1K8MnlZ5NS8y6wh0TMtv7au
w9Z7FzqN1mdLwy/8eAsfWlyTcJDR/wn2rmc1NL8tjZTUbcu3Js+nMz2zX6r/
W1oi2S/1GgYzjc5PntnS/wtMNn454dOkVm9yCtV19HfDNaeaaeFksh7KX2ZW
Y3wl7Xd6f2uustDt5h6KM0lO6d6Tekuec8qL0UJmtmByncSH8v4CM2nvGLwy
nJJwGY2PwVKax8V54gLrkj22tCL1Ry2vseARU7cnnUC/AaDaldan6d9THRq8
bfV4q/dbuGS8Z8ub3JwDrHVRgremlqi+Su5J4k81T7IGg3UmVmY9rbkQ7Xda
k7QGWn209tcUr8wejZ5ZaGCjH5JebuEnjf9iDmD4cYGHhh9P8VycfbfqdnEe
0eKOtfZY+Nab34fQ9yaax5wH0X5sfYNBMS1ZD72HYstCPxtvZTwpxQRz3mF8
wdue36pPyk0tDZbURqKTW32d1PyaR4yOankBmkezzgSrW3ukeUw05FN4sp4d
0b5eYJTRPGu/dvP5C++82Ptizkx1JtWiixgmPEKfSfvC6OfEc50wJNEPxisZ
z0656XRPq2ZMTxl+T/K7PjtraR7jcRZ+beFh6bvW62/xvplbLvSViYM5L1jz
kfELCQYu9EZLi7a0Smt2Z7iJ6o21djW+I6klwzVrTln0Xctn3dxLMqtM7k/W
3PJHZva4jq3hoxY3tc4RjDdvnRG09L/Bavr8JCZJzFucuNAnVCMlv9MaXqw5
6Ttaw3QmQH19sheao+SepK4SXWG0TZKXRZ20+KjF4ws8NLxp1tbCOuOdDYeu
cbXl3RbxXNc2xaXWmqmPW8eB9vI6Xwuv1Kr/1qyMrtlwd7JHildUdyWxpd8A
JPGnWGq888J3U1wy+p9qUcrLpuYN9lI/2Foz7bvFecoCxxZ6aeGVKEa1eqql
x96gA1vcSvPS0gktjdq6TrTWQluuNX/L+6xrO4l5C9OMlqZzj8V500KHLzzL
U76J5sVw9E0dmODzOs4Jfpq9n+p2gfMUk42vPOXI1OrC2yZrXuuxNea0uClZ
T+J/ExxLONqcWbR0yGImn7yrVRunOk8wNllDUpOn2mh5SeP1WvqE5v30t9Sn
rz2dqe2krgyGU1/T8jhJTy0wp5VfqveM10jWudDea5+1mFMZ7WfmUa290DUk
z1l4AbOeJA4nfDN5aXkoMz+h2s883/gCk2vaUwZ/DHcndbXoo2TNZm1Ue7d8
DeV9ow8X3nDx/CSnrbgla6Cz7sVMcu0BjfdZ1Emrzhca72Z8Fj7rtEf6rpaP
Tnwo1TCLGks0Z5IXM+81WnHtwWn8qQ8yuo6uJ5l1G841/WtqpuUZjc40MzQz
m6UaL+H3VnwM7lF8XvztzfNZ6rOo5m+daba4KcGcBItaMxn6t5QfF77G5OUp
PDSzUNqPb/B9rfo3NUBrtbWvVs0bzr2JXVQLteZILc220EsJ5px6lmqGVg0b
HG5pVMrjZjbbitWCxxd5WWsbyrmL86AkJqdea3m3lndY5MJgV3IWkOTL5HHh
hW9qm0UeqQ432pXqHDPDMZy+iLPBtKQXzGyEat2W70609zqnFGdaHEGf3+px
yjU0hjf1ZCue9LuClgYzupT2YOJtExww3Gd0I41JEvO1Nktqct079DkL/Uzf
a3Sm0X50FtTC8NNzaO3RvFB8o3ojyYvx4zQvpoaT2qA8suD9Vt9RnWbuaV2v
35VgddJHi955Sjsl9U99AeUyg3vm+Ymuppqtxe8Gt9cY1dKTRlsaHFvoK8rp
Zg6znhP+vV4bPUb5wuAtnbsm+oTucd3LpzUnOLbAwBYOGA2wyIvxHTTOScyN
9zEcQT3pQl8l+aJ1mGDLWre/7XqttxdnTwu8XeiuVi8/5ZFpLlr+ceHfDV61
cGbhiWjc1vVj9BX11C1Nu+CXN1+3/FTrvDvBhBbetvhozbnrNdDzjsSb0Off
/M7HrL/13qQXTN5v1vYJV1vfDiWYkNSt8f5rTbK+bs3Bbuq0JI9UP9O+W3hP
wwtmDW/QMEn/Gixdz/npeymPLHKUaK2bNZNgVPK70SoGZ958pmDyRXVRolff
EJMWp5/qgWp4w9fU29K/XfsaOvM370p6gWLRAreNN0x0eKJ7aW3TGN7UnDex
NNEzN+cGBh/oHMDwyM2z/puznVMc1lix8FA3edZgNdUnyf2091vc1/rWYlEb
i5oxXqy13zVmtniNcmtLL1HcNvjW8qSJd1v4X+pPab2t/ZTxvy2PfFpDy++f
npPMH1q99gZ9e7NmDFYvZi+n5y/4aPHtRCtHaww3MUzmAyZ3rdmOiW1LO5n5
0kIXnXCbxn/NdwscNr2/0LcLf72YUdD4U71q8CHhI6NP6N/Sekv2fvp94TcX
tZTEdq0hW1yc8J3RmQkmL+aBC45e+P2WbqQzljecLZ7qxNQPPVM41TzVfi3s
pfFZeKubfo3OSZ6qpYV3W2D4wtMlvGbmzMbr0bwnezGakM5z1nWV1MDpngUP
0tlXS/+Y63VfG76gs6/FeWWrxw1ft2qJYmbLdywwnHq6U2wX+pDGimqwBOcp
vtHYtngkiRXtl6fOFinvGEwzeaHPN2u76bkSfqc5pVqIaoMED00t0blTcn/i
O5I4U021PkOk+vCp7xZuetsk/tTfGW/Y8hEt3mnx0QLrFu96imsoViS+OKln
o5dMzZvvKAw+GI6gmr/FNab2Eo5eawODvS1vm/C44XR6bWqsdbZIPZTptQR/
TK2auQrN18I30XguvLzB2JZuXOi39TwkwRAz06OcS/2L0STmb6luoXun61zM
sROdtq69m1o38TJGZ9J7FviccM3aW1HcaOmoRGcaDGzpt6QmE4/Zmtuse5B6
k5szzIWeTPJFMcHwONX2LW1Me/Om1m3NGUxtGKxOuIbynekFyrlrbdDSbC39
trimWs7wS8tDUQ2T5NHo58XfLmrVrKHVd638LnA74RSji9a+OMFwM08z9bme
w5j5WMJHxjNSHl9oVMr7a9ww+TX3rzXDev5wqs8WrtJapf1I64eeWSfxTDQt
rZmWDlzomZv1uZjDLDiIxmrhGZM6pDqTzjBvaiqjn422NLO+hecyM/8kdzSG
iR64qU/MOmkcqGamM67WTCbhJuoNTX1Sf/EUB1GPc9qL8YyJnqH6raVJkv1S
TdXiFKM31nOMlsajc93kfoqH5h6jT4xuMbxm9IbR7QnOUIxK+tH4GhNDiqUL
bKH5SuJANcbCpxjffcoLnbeYvFNvleB2K3et+aHhzZY2TjTJgu9Mby5ySmNo
uGatgU1t0N5/m+9L1k8xp9VTNLZG27zhuqXBkjhQr7fg6LX3XJw/rmdx9Jlm
zTSetB+pxjC+pqWxqVY0PGtqZrH+lkY65dRgiNE/Jj6L68X3JGu/1tIPiUZt
7aWlq29eG1/25rjdnBEtYm40jMFb2hcLDro5P0yeSbXHIu/r3NF6ozVmziYW
fG28Z+KhKOcu9GSytlZvtryn0SqtOfyCX+jaFnhO83UznlSntXT+wpu0vvkx
66T9a9Z84pTk/hbunfbe6vFTH73BX7xBM1DvSeNGdQvVNqc6uTljp1iXfLNE
+33RL605pIk/fX5r5m80P8WfVu+0MKqF5y1eXs/l1v5iHU/jC1r8YvJFz19a
/dKKFa3JFr8kvydrMzrc6Cgz6zZYmmB1EhPDcaZHWl6+NYc0MaFrSHh5zZUJ
d5h+T3DP9F1Sh0mdUB211gMtPDdrMD1i+nSxxwQPW5qf9nWC59TPtnTR2u/T
vRsdcsK3m3GgWt302qLfkzVTLW3mkGtsbOlnqgdMTy3mqwtfTHW16ZfF+qn2
OPWFwe0EP1t62NTJYp5GvUbCv63zUKMZTK4TDU/nSIZn33b/mrMWuJFo6cVM
xvBay3e3uLLVI3SGQ+cnlMeTWCU9vtBRFMda+t/UhsE6ukdah60zZaO7Wni1
vn9xRmCwcTETNnpm0Qs0JgYn6T1r/U/r09SbwVLznASvqOY3mEb1qulTqu2N
rl5wJe3TpDdP9dDS0gvt3eKvU14SHE7meKfnU15OcrTgKYNdBv+T+xczseT5
Sd9RbdM6ozz9LeVoil0U25N/ZoZmONFgNe3HBcY+pYvM9UJ7J7kwfWHwqpW7
ZD30vCnBjVZtU9xexIfim8GZhW+lz2zNx041ttCi5lx1MQ9MdKP5fYGfNzU8
nX0Z7W16IekRWreUO6jmTHCeYulpLwucND6iFZ91bOnzF56X1qfpnUXNtLT6
GzjU1DDFz6f0Rksnt2YCSe8vvmGg+sf0fuuZVHfR2NK+aMVnrVUM9hotmsx5
kn9JnRsNmdQM5Vxany2cMRrPYO/b9EYLZxY9u8jFYv5Ge994kMXcaa3NKDet
Z0SJHmvxciuei7pdr42+i64hiQPlzbXOb/EUxZzW37Z6weyd6gS6ZqpPEs5q
YalZM9WHrblxi9NbuqiFk2uvanCj5fWMbj/ljtaqOeMz3LTW+QlPLTC2pQeM
Rk34xcSf4jDFqNPvlLupz23NDFv6OYkDrZkTblBeo3qmNXOgvNbSuouc3tQw
Zv0J/ic8YuZRLQ9L/UhrxvI2/b8440vqmeqimzOZJFZG/yTxbPHUU9omqROK
w1QLUf1MNWSyF6PzTe2tZ60tTqTcl+SF5rql1Rf829L/dM20/k08T/1CNUlr
LnfKNdU/dD0t3l/MLY3OadWY6Z2Wbm+tc7E20yMtjk7qwfCs8YN0/WZOS7Gx
dU6X8KaZASa9kKw/wdunNL/Jo+lrqnXfcLZL9b85ozc635wtrr1tovMptlNO
pHr7KQ9O+bc1OzJxW/Rmst+FJmnlejG7M5qW9mySi9b5o+GUEy4t+vF0/X9Y
2+zW
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "1898315512"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.009816368110477924`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.9901836514472961`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
fDB2veyK8Sqx6JnnR06E9eUU+XTJv/KtGcUO3MFnYGMXyv3Y6RyTyw/czSak
fTDEVitrf+S9SDw/sf9/53FfJT87k7AD7HrhDnMEmzdhx2vVfoNT5vo7+KvI
eLF+WiLedSJXWvsoMWfEzijrgiv1rat/2HfNXBcoMaVVcu56fgd2OEd5op4q
8nDKvetKe9n8ketc8InrSuVctmu8EvOsMh+xc9MqOV8tO8+ps+v3zPqs7j8V
5Yz5zrD5IyW2efr9P2mb6aqbq/6Jc9yn5I53QFmnJ/yoO/jDSB8qz+zWLiW3
xc4Fo7rtPJ+yOsjeWzizzqP6s3/Lnh1Ot+VuuPRU6fMr+cMJ/3MHn9blfyp+
IJv3PGU+HbXxFJlX2nW6vp8IIv+JM3GKbp6iv4n41W4xMaUObG4xYc93m09X
xV1ntkuJM5zS9p1J2CLlb11n01x1c/Wt6/lEmQn5YWNByh2VM9syU05Y/2cH
mUfqkM5H7ND2ndnBl3CdTWPbtbrv360n2xalzHT9Wd9sB/98t/lUkZNZ8vuc
+if08RR93wFEZxO+hLKOc90b72rLzHFh7efqdqBtUc6irloLrO5XVB52ID2f
7jxfn0I6z+KyV3cYu1Uxt93aMiLxnZFT2GGdvko2aity8pPOq7Ky2rErrjsD
V7dDZdU6fbf2up6/GzvESEdcSW7L82DtNut7rLoHIMGd90OePnY79NuqdeId
5LPo8pC2/+wdNav6Z9U6vVyDVWsodp1e+bw2iI1S7mdg88tIzGRUzsy+ctWh
8dWSHndl71/jP9dD8ckVe4X8rXJ39Mx+c/lF9bXKKk7fq1x0XN/xSf8tW39X
/yTW6c2flt2o73FtlBwuEp9J/EZkclWOVdlTp5RZiovG/K8NaxtHc4SSI3B9
F1J5b1qeXXmQ1fJSrs/d9irfAZd9Zn1U5V4g5S5o1/mCxJ6KmX9bisKd9yqf
ziqbqZSfyOEqdV49hqXMoHuVr03CBip7b1w53PQ3aivP5ap0r/L1mGkDFTvp
ej79u3HOclW6V/kaIPmaVXaSlRPkbxPfi3fVrZSd6V7l+6DYusS+lESMhd2r
oNw7WrktVyW9Zl/dvruAjFHCNrrqwJbD5gIS99+uHvNSnCh6Xb1YO16KHWP3
2yt1Tu8fS+ztbGyz3IFE/rfkxigRP3lkZEvZO39ceWTW50/fTVr5L6Wkcfmr
o+fZe5WRMtnztq67PZX6J/IUpZSSILHXRYn5IP6265nR80g903mQUkpJkM7t
jmD96pHPj6wL2P2rSj1X5UFKKUXBte9lVc7XlQtO3+ej5EFKKUUBscmK/WRz
BGxMKXGXSKJPlDx178UqpbhQcrJKvlKxpa48qWtfK2KrkXgaW05zx6UUBJft
GvnSo3cl7udU7J4S53eVw95rx+YURn+7WgZLKfNQfE4278l+2+VEf9W1P9b1
7YMT+7CUshaX/5z41tWJdsxlh13x/BP7sJSSw2UTXPnf021U+kzElfqqlHIW
Lht1JfuGxNNc3yBuPL+UMhM2X+Cye0gddkP5Nv3p82Ap5Z6we1GudNY1cT4L
WTetbncp5b64bBR7lmoHG+g6n6XEx1aPfynlvigxf+V82aqzruw9EmwbH9+l
3EFaSikJEJvDflfLZT9dfrKS43adZSullCvhukdiVI6SO2Zz3In5aLcYVyml
sLD+rWI/09/YYst33XHd+9xKKafgsl3K99mVcweu8l33/yfOUJdSikLCdrGx
ceWswahdypks1/3/yhzauaCUkmAH2+XKHSR+I3VG2pKYd0opxUXads38ZorL
5ifmJmVPbNcCpRSFhC1K2MPHOiuxJiSuNeqf0b+n94sqa5BSSnmEjdXMjMmM
6smeq1KeYc/wJuajxLislrtSyjwSfuZMf5u1aWz+N9Eudq5h944i46I8U0o5
l5l2QPmWOjtHuL6ThTyf2FPE9nm/s1BKUXDZASVXq+zVVOrj2sMzekaJ57vK
RNrbuaCU+zDThiRsmpKDRtriqmeib0fP3/k7C6WU7weJh7u+SzV6b2J+Qex8
AnZeUOyw0s9X/c5CKeV5JL5L9Vg+krtU5hc2VqP4sS7bmIgLKXEbZY22Wn5L
Kf+ftI6n4ycue8ueQXadX07kINhyRvU55TsLpRSchI4ncoUuf94Vb0mvR9h+
cO3RSn+nprnjUuaj+NLKb6Q+Sp1d/aPcTZG+Y8c1X7DtdeVWkPhe54JSvCA5
XGWfDOJLs3FpVxuR52eeQR69Kx0zR+J4iXuTXO8qpXhB9NHleyPvStgEV1zd
9Zvtn4RNVvb2uHI9jQWVMoe0DrK+tHK3P1KfxHdklLUP+y42pjTqH2Uc2X5G
xmvUlsaCSvGS0EElpu2yRWxs2ZWHTTyj5NCV3Epi7TZ6HokFrdaVUu4IEvNR
9j0idVBsFGsnE3VL+N6uOJISn3fld9iYUn3+UrwoOujaH6LkF9Jx+5n5aMXG
rpaj58Ded+3q/1LuDKtfV9qb4dpv7zpHlmjjbmPkyjHV5pfihY1jnLI3w3WP
8W77P08ZIyXH1JxvKXNA9HTnvRkuG3jK/s/RMzuPEdufbNtLKTqJO8ESuPYv
jdqu2FtX3J7NrZwSo0vkrFe3qZSTSORSV7fpXZDcImLD2XuSkX4b/bvrW2M7
xH/YerrKXy13pexIQtdOsS1KPdm8pJLTVJ7ZLf6j9PNqXSmlvGU3XU7YQNZu
p7+Nxa5THss5Jf6zui6llOezsy6zuQzXN8jS37hB2tiYeSnlDrC5DNe+UMWW
suUkYlydC0opJzLTZibsrSvWxK4XavNLKVcCsWnsmSMlho/g+i4Yu3erlFLu
hus7j6wddr3X1d7V41BKKSlW+cOu71262juzDqWUsgrlm+Psu5T9mYl751bV
oZRSZpKwvTO/k+Iq07XGSbSrlFJcJGwU+/2pxHlnNo+g5BqUOqwe/1LKfXHt
t2Rzsko9lWfYd6XPeXUuKKXMJGG7EJvpqsPMOWVmOaWUsjOrbKbrjFiiLaWU
UnSUs7psOaWUUtbC2mp2v33nglJK2YeZdwQlYkellFJw2HuEEr9X90EppZS3
IHssXfe5Id8sWN0fpZRyNRA7PJoL2LNa7Lt6h08ppXhhz4Uh90iwdxCx94s2
R1BKKTgJW+q6g0gpf9W33UspZWeQ/fmILVXexT4zovGfUkrxgthV1t667nZ+
/Hc2RrS6X0spZRcQm6ns1WFjSmyuAWkX8u+llHIHXLbRdW6LPQv2+O/fAP/W
OsY=
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3684955635"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "\[Rule]", "0.19049641489982605`"}], ",", 
      RowBox[{"4", "\[Rule]", "0.8095036149024963`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztnUGqNUkRhVsF0WU4c6wTbdCnW2gXIC3YIDQI7UDEgc6cO3ALgjpyCw5c
RG/DBdgNDt7AhPj6Oycz73t3UD/1X+pmZUacOHEisl7d7/zi1x998vUPPvjg
N9/64p+PPv7tTz/77OPf/eybX/7nlx9/+v3vffqNL07/+L/jy/M/f+cPLx9+
/vuXf3zy0cu3//S1l8//9fOXv/zqPz+mn5vvNj5fna/mPDk3azf3Mus1frzN
d8YmZl0GVwYPt+HNjNOwZwP/jfmYuG5g+/X53//2t/97/PWHH7788wc/efnR
v7/7srqGHqsxzeevz1+vd3XN63FMvKzW2BhztUZ6PrHD5PO2716fv/6uWeME
z9TObYydwhu918SGqzEn9pxgZoITOv4EtxTPdBw6Nxq/O4/U2o0vJjywshvl
WzrmJI5oXjaYmWiPFIZXc1vNx4y5un61LpqbKMZO4W1iz8k8V+NM1mL4gfp3
El8pTZXiQ3pfE6c7Ob+REw1maBzRuEjpJcPzlJcmcZryNY1To9PMWqgWpdps
gsMUJif3SukNyv+Gh02up2ukMZvi4Z0cTo9UTKU0v+GNCYYnmtDE1wRjjfqx
URfTOdD1TjR8Cj9GY5iYNX2P1ZgrTJoxG7w9sUODY1N8eErr7jwaMdVYr9Gi
q9iZxBTlBMr/qbijfqT9E5NfTJw24trUOKvDaJjU/khKC9FaqRHXOzmTxnsq
Hk/lgp25MtVPSPEe5QcaX4YfUn3XyX0n86S22llTNHBLfW3w1p6/qaNTvUQ6
f1MPGhumOCeVy26oC6jvUutt5BGqfybjUFw1nntp8ADtj5lcvFP/NLSl4bHU
/FP4aeBwZz3Y8F1b/99QCzRwPllvys6rOaf2em7QdalYmxymV9CoK9u43Vm/
NHLrDeftXiK1yU58NmKwEQup+1LNaXoOE4xNxqT17GTMtq4ze6CpuoDa6gYN
04i7lGab+I7i/4ZzE/uncs2pemFnLKTwb7Q3ze+mJ9PuzaaeKWprm0aNbGL2
EfHf7tVQv9zA8/T5h0aOm8Rjw4YpXN0cC7fFMu0vTfjK6IfVPOnz4am5pfbL
KM835nDqoP3JRq+GjnNDLUBta/iH8oPJNY+C29RxQ11zal+MavgJxlLrpTVF
u4c8maepd9o4n+R08zezqTx+A7c3NLnBp8GeOW7AbeM4Vdec0loUMzQnmjWm
tGKqvk7V+Dv3i1dzm2DVzIHaysz/hlwwsVWqxqTYm+DZcNp7qAUax8r+Da1F
4zGFDfr+LsrVtB81mbO5ZnX9zu9SzTC5r+Hwdi15qv/TvldqfIrhdh/vvR3t
WizVS6QaODUHGsspO1D70Ot36kyTI+hajE8pDk/19B7xvN2XnsTme9sjWGHS
+G4yvukLGa6brJdqNspjpr80mc8Nmq0R1zvtkNKHtO44VQvcZrfJ0ebklFa5
7WjEER1/8j7hxh7Bap7tPsMEP5P3hD8Kb9yA23YuS9nhPdQCj6irT+G8ES+G
3xr96tfH5F33RltSDmnHpvHLbbzRiGtqnxvs0NBIt+X0tk1u4NXbNA+NF6M9
KBeZnjn9ratJXUCv37lnR/014dubeWMS1xS3jd/u2ZkTaTymeOmG83Zv3xzU
j6fm39gfNN+l2iy1z0vtY57JMbFJbW6wdIo32s8ypXL9DfrWxPUNOX2nHm5z
aaoGadQydJ+08UwOndtE21OepLgyHJXqHe2MqVO8QXHSxqHBQ1vzT3z36H2t
2/T85KA4b/DVZPx2n2QSX3TMxv5Cg5faPa7U81SnaoEUp6X2OBq15CkNbLD3
KLXAhN92HinMm+snHEtzgcEe7dtQLW2412Ce+n1yr1OcYzi/wRuT8elvLje0
0w36f+IvyhUNjKXWflst0M5lt+VHmmteX0P/1jXFsSbeDSZpzye1b9vW2yne
SMVyI6Zu40DK2w1+21kLNDiqYRMTg0YDmzEbNlnZZ/JMRarX2sbnam5mLSku
pfqZrotec4MWMrFm4vEGzd+I951rPKXnacymdBT1aaNnYuxDdSz9m6yduKW6
fTJOav4NLpr41OSaCSZT3NvA9mTMU5rf9JNN7OzUWjfkgnYcTcac9EkMb9B6
33y3Hcsp3E7GT3FI6vqUnqT3aqyl8V1a1+zc+7jBR41aLFW/GzsYuxmuoLE5
wWTqu23/Tt7JmeKBnesynGNycWrtO+Oo3YcxetjEabsW2MlvZu0719W2zw1r
T+F/NeZqvad6C9QO1I+petnUqrR2o5g0/JOKHdr3a8TvDTah+Dmlext2uGFd
Zs47/T6ZwyReUu86M5gxe1VGt0/Gb8TFZD6mtjUatV1f035IgxNS/Zk2Rxk/
mjhtY9vcq7Gu244Gb6zeXfb6u5NnLBuYnKyF2s3EpumfTOaQ6tOmegVtvkrV
YoYTTL5L6YGdnNDmYYrtlCa5uRZo+Jc+GzM56F5Aqm9g5p/iDTM+xfApnBhf
pOafql/a653EBY2FG3yd4mGD7YZ/H6UvZOxD44teY563oX5s1OlmPsaek3vt
xInRxqn62jxXQHVOar3tuG7UCykt3YhfOn6Kw1N56uaj/axCCg+pfJ3SJ4b/
b9gHNHFknhdK2c3oiokddsaFWbvZa2icG2yknutI5e6dMdg+UrVnQ5PfkF9M
DlrNM9UHa9SkND/SZ7fMnv6Ex8w7dmiM7KwNV9fTdyFSjKXimuajRs4yuftU
rk8djZ5hQ5Mbjt05TqpWTfX/U99tcNQkx6UwPOF8ap/23mLKL/SdVCktd2qP
w8whVTc1fG2OnWukcWQwdvN5Y6+8faRqtFO4peNM1r7Tno162eAwpZd24sT4
xbxDPuX3lB1StWFDz9ymydsxaLDaPlK17U7cpt4fQm2SsmejVl3Z0zy3kOK0
Bk5S66LXpPqxqX0ug2H6TsuUBn5Ebje+a9Rc5mhoswZuJ1pl8rckZi2G33bq
jYmmNX9TaXrjht+oHqDrMrFgcrGJx1R/eBJrNEYma2/sF99wTu3c/m2y2w7K
MwbbJl4mPGZ6qg0dRe05yZspPWw4dhU7k5ii+wsTHpvYwfhuMn6qP5/CLb3v
5POba4RUP2SCbcNpp44JVtu1TztezHxW95rc1+Dz9ZgrvLVrw1ROoe8QaMQs
3Vtp14kUhxP9b7TTbfXyDfX4ztydil+KpQnnpGxldEJq7Q1fNPCWwl5j/nQO
NBekngFo+HRnb41iia7rhnp5p/43z1cYzqG+bmjXndeb+D3Vi6a+MNhLrcUc
bR2VWktKIzV6+5N57tTSZi3tenlnjpj4/RTfNjBMc1zq+gn2UjUptdWkXn59
THp6jbp+J35Mzj2lnWi9ZtbS9p2JQVODNPjErL2h7U09RevQdj+B6thUrJlr
GrzUwHPKDqmej+mnUdtO5rMTG6ZeS+3BNXQpXW+bTyZ2oBppEncrvO20uemP
0efYaT/BaGOa9xt641R/NcU/E3ua/pWxOY1famcTFw3uovUajfdUT8/oT3q9
6U+aOJ3wnnmuu6H5TV4wNSB9hi0VI2a9Kb4y8WXiuoF5wy2rOZhrJt9N8VhK
0674YXW96YcYH9G4oPZp9IVMDprMmfL5ZJxTtYDROXSNBmM0pnbGr4mp9mEw
3+5lpeopOk4qvlK9fbqfMrGh0RWTuDgVX+YaM89JzTV59tjUtg2eN/X1yuaT
NaZqkwmG6RwM9k4dqV5H417mehrvp3jPYLLdr6brNbm40fNJ8RVdi7Gh4b2U
5knl6NTnjbzcOGjPZGdeMD1kY2cT+yncpni1oZHaNmxjwPRjaQ4y8WL4yuht
8/lkLSkbpnJ6o74z8dvIBbR3mnrnMJ3bZD60h2D2LFK14WRuhlepjxp1tOGu
1fmp3xCntjX61nAa5dud+jlVBxlsG35O1WKr9Zq5UXsaXjK2NXxleD7ld4P5
Rq5J+ffUOdXVqXfGtrVcQ4c39KoZ09S51LaU9xrjGx6YcGC7L9rO1ybuUjnF
XG9wvrMnafw74ZY259O4m/iXvhcoxVepmGrnoAZn3tATbhyUo2j/cKVpU8/x
0jUa/Kf4P1VH0H4yvRe9xuixnXqpre0bvDR5R/SpepDmoFTebMca/W6DuxoH
1fD0mNSwq7xAdYvJBQ3tndJd5vPUfuJOjd3GeYqX2jVCQ4NNPr+Zt1MadafG
mHDIqTqikStX16xqVfMuTcr/Jh5pzzaVj4yPTP1F7blzXW17ts/bfeOUXtpp
hzZO2lqX+mLFjau5pfJCys5mXatrzH5rQ5NPxqf5a3KN0Xur8SfPkLRx1dZp
j6LtjW1XmKTrNfFyQ9409VTDR5PYpH3vBu+leIY+n0A/X92L1rNUk1M7UB5u
16QGt6nnCds6LRXvpzhqp38NHm6wZ6q2SvWvDN9SX6TmQ8ecHOZ9bjRfNHSU
yQvG15S7bojryfWpWDNa5dRzSmaNKf8aPDxiLTDRpZM1tvn/Nj/Sg8YjnTO1
eeqZlhROdmK7HdeUzw2WTA+cYmCnT9u9fYMHM/8bYsHU41SbUSzd5seV3Wic
TvzeWGMKt6t5pv6Wto3tCQc2MNDAfyN2Uvubxqdm/qlxdurS22qB1dwafmw/
t9N+joX6t23DBketjht4vo1tGu9036R93pjnZJxGjm4cbf7ZyRWp2or2/agf
qX8nnEZrLvpdik+KeXOvVMwa+6zGv6G2beN5gu3GM0Kr8SkmJ+PQ51obOdrY
x/Tc2prK5Edj20btecrXbb1kYsrgjdp/ErMUzyYnntL2jZ42jdmJXxrPCNG1
UPxQ+9C95lQtbGKZfrfdEzb6J6UhU1q6Xfc1fj8x5aOdeEvtA+70exvbRsul
agF6pPBmcEL3gyYYS3FmW+M17mXsnNJFq3nSv2ekNbXZW6FYnfzWmNGxbW1j
7GywbbBE/d7W/I04TXGv4QfaKzB4aHBmI2c13oW1mlvq777b2FjNh/6Wrqkr
TS6gYxp8mphKrcv0IigHNjCZwobB9ipOjc3b3JuqE1OanObNRp01uSb1LqzJ
WszeTaP2MXhL/Q5CCmOpHqbBrcGkqaMbWsvUMvS+O7UxXa8Z09iBxmmqf0i1
yoTfJvzQ1niTaxqavFGLmV4iPTea38Sa6bE0YnNSDxremMyZ8rPJWZQTqM1T
PUwzh4ZfdvaLqBYyfDIZM7XnO+GBRl0wiXeKbTMHmjsoZgyvpvgwxUUmp1C8
7dTe5l6pWonavMG3NK5TnEx7uZPPTb+I+pryialDaUwZrmjHXUrXmdrNxGPq
fIJbE1MGtw1/UY09iV9qw1TeN7nexHs7Zqnv6PPzFIevr2n/TrHJ6caeps9J
exQm9lM1L50/nXOq35viebNHZmxFMZDqD6TqdBM7jT5Mw+/GhiZmJ/ddrb39
N1PUJjtr/4b2aNSM9F403hs1dWO9NKba9jccZY6Uhqf3SvV2aLynYirFw8ZH
lM8b9qF/u2HwluoTpvoDk3lOPm/rinb9bmpbE4+mfp/gufG+lJtr+fbxev6N
3wJIYTilGUwsT+KrEbMT39G8Q21FNbPBjOHPydxMjm70Hxq990auafg3lSuN
DSmfNGr59pGqwY3f27g1n5va4Qafpmq31G/fpPinUcsb2zYwnNIbtC42c2is
q3FO+aq9P7Jz728yz8mzGe24o7ht1NST+xq/p3y6uhet3Whc0L/9aWjm1LMB
KZxTDDf4uaG7qK4w8dvARmrvqdHnafTYqR6j9knFJsVtao2UB1I+MtiYxKnZ
zzW+oPxv5pOqF8y9GvtKpqZo1KSpHniK06hPJ36h8UWxYexJ52C+u1OTTO5r
ONBo2gmvpt7/SWNncq9GHqdzpjxj+DaFPWq31L4S5b0U/s29Jus1+4YNTWXu
lcqzjVzTPm/EclsLmRqE3iv1nuGUPSnnt3sjZi+ggb0JjxncUp8ajm3EMrUD
fe9BSiNRPFAspfI4nb/hrlO5gHKRqSsn/m2sva1vDbcbjjp1fRt7jZzS7smb
fhqdW4o/ad8gZfN2793ENR0/ld8b3ELX28i5p+I0lZt25nSzp9a43tQLqbW3
NdsEhynNn4q1VH5sHNR3k1zT1k4GP6m9y515IcWZqT2jdr/I4LntI2OHlD3N
OI28TP1C8ZmySUM/p+xs7tXAWAr/Rjulajo6/508b/Yf6bro+8Emc0j1ixqx
ltK3KT2ZysWGMydrTOl5Gqd0zpMxaR/A8OfOWoni0OxxmPmYeTbuOzkatcBk
7anaefJd+ptiO3tr1EfmXg3fTexM31Fv3h2X6vVNPp/gIcUbNGbN5zt5yWjd
CZZozjW5wNT4jbrM+CKlGw13NbA04aJUPWX61RNbNfrhE2xP7Nnu80z8RWPK
YDLVY2xreLr/cgMvrXyU+t2rnb3QVH5p2DNVC1A7N+rEFc7p36vS+E3l/Z37
BQZjKX1ueoOpWNvJA3SeRtvTeKc5qJ0XTO6j/NPohZr1mh4XxZvR/6k50zpi
5a/G++WMFkrlF8Mtps9Gx5xoM/o+kAbfpvp17R5UY41mDiaPUBsafm5oSJNf
JjifxIj5LbBUHmznfRp39DdPJzZprCvll8YexKne72Q+Rn/S2pPiP9WDatiz
Ub9P5mN6nuZv4VPzpPelc6B9j4leavRSaC5L5W5qW9PbMXopFbMpnNxc2xpd
bWxorjdrSa2RzmGCmZS+bfg99d1HPCZ5LfU+LjO3Sb+lsT9INWGq33Ub9lLa
rFHbUjvTWGjj3Kwl1TsyPVJaTzXqyp3np2PxqxzG5u29QpqDdvb6TI1Gbdio
p3byD+WNG/ZVKU5O2TzVO5rc1+zFTOK38VtXjfPb4nFy0FosdS96fUNvmDWm
MD9ZS2NvOnU06ved86T8b/bWG32qlK9Te/0mHqm/TvF8Q+e0j4YmafTbKZ+Y
GKd+MbHf0JaNHETXZeZvxjf2N9q4EVO34crowBv49tT5DTqH8gbN+5MYaffY
J9hr6M92DlqNecPfDzZ4rI2ByedmnjSmdva3J/On+srE4A383Nb2KaxSTE54
ePL55F4TjjJrSe29GmwbLUT1wAQP1LZtDJv6LqVJzNrpukx80fMJNsz+GvWL
6V/dwM8NbX+bpprMx+Dt9XnqN25StZXh7Qm2T/XbU/u/pvYxHEiP1DPVRhub
fZZJnBqeN5iZ+DTF/43Yv/k8FfuNfmlqzo1caXRaW8fSuDbzodye2qdLYYnm
lJ3jmJrL1I+TcYy/DC8Zuz31f7aHbLjilJ0bebwx5sTm1F+peJyMT3vIE6ye
2r9L+dfEDs131OY0finHGo5q9Igofh5R/xtcpQ5q80e0805uMXHa4P+d109w
9ShY2hl3qXyaqnEmPjV7Yal9mRtwkuKQG/BG4/d5/tViZ+KjR7E5xd5t62rH
Jt3joO85ofZM9RloTqG/a0DHv1lL0FzcxtsKezRmH9HmOzkk5d8bbG72dm9e
Vyo26Xrpu6Mnf2/eyF8pu1Eb3oCBRuyk9EZjn4hef4Ntbz5P8f/NNqfzvw1L
jX23SRw16oJULqC2avDbDdjeGRcTrkj1zUxOMfrwrZ5T/DficecaJ2tp97FP
xSaNI3pf87cYKS41/NB4BuBmbrmhfziJo0lsvtX9l0fhkMm9blg75YpJrmys
cWdspuJ6shYTj43ndsw8b+b2VFykcmsKY8/9l3s4xMTsDfrfcMUpfjCxac5N
rBksUa5ocxHF/83njf4h9YWxLY3Z53kvTid+2amf6dxM7jO2asTmal0T7ZTq
1VMN1h6HctFbrQXaOfGG2HmeZ/N7Kt7p5yamjOZv9BJ3Pkc9GXPnM420BjR1
ismPdC0381XjWZ1UzdiInee555B2fmnrQxr7Zr+7MbedOo0+n2PsnFoLXePO
41H4aoK31eep3zS/wQ6Pft7W8xNtZuIipesmc07FsplnoxZbcaDhw9Wz+kZ7
pObW1qKNXHADPzTyeOpvr27OlY94TnE4uX4Sj5NrKL+Z50ZM/KZ6R40eabsn
Nsn1lDdSfDXhH/Ou1Abn7+S31JwnOKR2TunS57nXpTTWJlyXii+zB9fIX2Zu
Df45xRuT6xscleKiBh6M7krFPl2jwQbV9ik8P2uEuS8oj9Exaa9jwp8UAynO
adShht/MvmQjjlIckrJVKv+mxqfabCc/GA3ZsFUDP2/1vNF/aOzPGl/vxEk7
xlN5J2WTnbFG9QD10c6cQrWHOVI2p/FObdJ+XuKp7bPc9VbfiWd4ZhLvO3tN
O7XcTi1qNEADDxP8myOVuxtrMdim40xweAOH3HxOuWvye6nGjzefUwxTndPg
f8oDVMvR3l2be1M5K4UN43eaWymvmrWYfGRix3z3Bg65+Xxlt9VvpK6+a37L
+IbcnepXU+y18yPlmdQ8JzbZWSMYLqWaOYWfyW+FN2ptk48atU8j1m7g3hv4
7VTufp5ncxPV7XRf3vBeGw+TtZs50zmYvfLJs6aT3zgwdl5991Geg32ee+3R
9tF7zsUN303i1/RtJmO2c1yKx1J8noqRFf+3MdDQ7XTOO/c13tu5eW4khQET
g+/5fGdfepIjbt7HMT0KYzfD85Sfqc0NP1PNYObT3td4ns993eB/qqme53vy
+8QXjT55A8NGQzb2ZGmfrcG3KduaeJ/4K4W3J594vk1xfmqcp0+z8Us1sPm8
neMma6TYm3yXvtd60s8xz4aZGDGckMJn6ppTufK28xs43Nz3eZ7lRtPvbesN
g+2Jrm48u/J6PvS35iefm+eUGnY2ODTP3Dbw85b05KnefoPzV5+/JX/tzPsU
D6a308j1NK+9/pz+1kDqfdSmnkrVYmbOhqtTebmd197D+QQzNxwTTBoOeavn
qTiluaDha4pnmoNW+jz1Pkk6/5QNU3NIPQ82ud68t/+pA+c80MZhA8OGQ94D
NlbxZXoXdMz2c3qNXvTq+tTvTlLspWInZTfah0ntWT81nueBndx76jCa5xHP
TR9gwmOT2Kfv9zCft/1ObWJyTSOWjR1M3KWeWTK15HvTeKmc/pYOo0ne0jnl
KKqxJ8+rpPjQ8BvtfTWwR+PU1AiNMVc4oZgxn6dqyfd2Tnng0Y//Aj40/Ho=

         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3752298976"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.054187193512916565`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.9458128213882446`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztnD3Obkt1hK9ARo49AybgADICjkiNSHCGo2vpEl1kCQshJ4iIUThyiD0E
z8KRU8+BwIElXySCS9ByPTxVvfeHHOyjfT69b+/u9VNVa+3u99t//w8//uk3
Pvvss3/8y6/++fHnv/zBz3/++T/97bd+/58vPv/yu9/58ptf3f76D9fv73/z
ky8+/fV//c2n//7nv/v0i7/4j+//6He/+vSf//JXx/vT57/+99N9Mg591s05
L+5bz0rWQu+T8RdrNLHxtjihMdzKo7VPW3G+WFcrd1qfN35pzfP093/97W+/
/39d//PNn336t3//2afv/fDLP/q88WPyXDM3M+fTPL8+5hvuk3Ul41DMoX5J
5p98JvEvHbMVJ9Q+a81Dxzd+pL4+2SGxT2vOxkct7DJ+TGxI13LCjdPfT981
Y9L707ooZlLMpxxqrsSGp3uK/wk2Go44fZdiwikGaF7QODk912iqBbcm+UJx
MlljEksJViQxk+BSgocmlw0P0rxr+SLxS0s3Lrh4gXstnjK8Rudg7JDwZjK+
yRcTk8nfT7nQwkMzZ9OLS3Kc6kljE4MPNMZM7pj7hK8T37XqqSTHKSZQjmvZ
LcH2BENa2JvoCspfRku04tboKIPJLS260CrJfIz2Mz5K8jSxbcILpzwyvReD
PyZ+jC4yNYjRYC3coGs0vkiw2tQphl/Wvc0WpyfjtLDd1EpGJyc+avVa15rq
9FyDRTSeFzUm7aMuNIDh6EQTLnoUJk+N3UyeUv/S3G/FZ6K3qd+Tzyd6ybyj
obnWwpNWjyjBOhqriS9a4yRXqzZJYtJorQSjKF4ZnDR6fs3dlAeN3jb2pPFp
9hq1cJvmV7IWU/e1ODd5L2w06gkfWvjfqn8Nt65ztpWDJh5addxCzy9sRTV2
wn2LK4nJhS9afaFES7T2OSRXopMpX9AYe0obLGKG5qzB88V3aT+BxirlkTUn
LuKtpSUWeNXS/Eku38ypRb9xEW8Jb9KawmiVlnai+mSxFzfJuzfUOydfv+Ge
aqpkTKqx15xo4meho0y/a635W9zUyikaq3T+Js6N/Z+ql9cakvJdK97WfXvK
15TTW3pp8SzDHQl+LuoX2le5qaNaed2qcRJb0VymushoJ1O3LmrtBKMSvdTK
0zWvJbzfirfWPpYEiwx3UG2TYCzVpa1aYKGj1nrD9BYWPYEW1yx0pqkREixN
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
77SuMTiw0JBU2y841HDfIneS+dM9VEl/yWi8Fh62MOepe2MTGvNGO7Xy6Ga+
G2xc8Mv6amm5JB4oZlLuSNa4OHdJY6ZVI9Dcaenh07NOubDGdqpLW5hzM0/N
elu5bHoRyXxauGrqd5pHNJ7fph+M/qcYTu1z8unp70l/o6Wxk9ij2sPk7GL/
lTlHYLSr4QiqSeg78ZOv35CzLR1u5mA+Y2IgyXeaX0l/w8TnTf2wwO1WrWpi
I9GfBs8pPhsbJj1M+rsECY/T3nvL7+t7ql3pZ0zNu8hfWrsZHZjkkeE4U+PQ
3pTZh0Nj4221APXFwqf0WSd/GTxs6eQFb5raxOSR4dOb9W+rR3SzBmnF24nH
F/ttTLzRWrhV77TWa+b8Zv1vMDAZZ4H/ST1ucJ6O38pr6i+qYQwWrff/tGL1
DXVHK9/X7+bWMfA2rWs45an3hut70/9MMH/9dzqHxL9mvXTfVJLvLZ1JMYdi
HX1/R/HtzTnY0v+mJ9O6WntxF3NbXEY/3NQ8LZ8m66X2MTXmws6t9ZpcPmFg
q0eR9DlPf1/73djzxClvqDsSDKE2obi00NitGPgoupfalvJdS/PcXNfN+Zi5
ney5qEnp+9ObZ1TXdjac28LwN9QdJjZu9hKNJly8L3hK6xrubuUd/cx6H7jR
bzdta3o+iZ2TeRosMvFgdEhLwyS2au2Fo/ZJ/GViI3mvusDGpPahnJLYZ6Hh
/1///2l4srDhon/ylG2TuVE9s8a3hU0W9y3/UmyhvSxzHjnxKc3fm/hjeO1k
k0VN8RGvBS4lPP4G+y/2kxvbGk2Y4M8C3xa9moWOatXsRhuc5pDEjMkLwxdJ
vLXwx2ieVpy0fP1R7ls9UoNLi1xL/JvkYPJ5Wsvc7HVTzjK1w1qfL7ClFf+L
sxXr+8R3xibGVnQfDtVpi/l/xIv6t4VL5p761/QwW5y47nXT+bdygWpaM2cT
GwnmtOxsNNLiauVCst6TzVvaLKlTWnjyEff5v0H/U1+frptnQFqcuMb8N3Cr
GbPVD2xhl4ntxD43MaS13kV+JbFhODTxUat3R3HszVcrfhIMP/29VWtTTmmd
cbuJ22/oY5/yrqXHTuMntX9LxxqMMus1+buIk9ZF36+1OLSFJ3+u7wIWvT76
bqvV06B4Qj+z0N4mxxd+TN7jG15LuGNRCxhd2toPkPQ01nx0s19B157s+Xwb
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
3F/XI2aeCRbRORjbLriD8iz9zEI/L/SG0X5rTUixa7HGhVahPVWzH2+BS+sa
x3D64oxzS0u04qSl61r3RvOvf88qGYfu+0ribaGfWzic1Ikt29I5LGKS8vUC
D5PxT3lkaoSFvlpo74U9E4yiPLXQEvS5dG6t9zgmJumzWvWOiQ3K9QnmtOKk
xZUJr7W0DX3PS2OS+q6Fja3Ya41j8N9oidZvDS20NOWjZM6LHDG18KJmX+NV
i6eSuVEMadXXizg3MW/wkGKvGb+lARK8avmipZlpDpraaqFRT3Y2OtzYmZ7h
pbiR6D0655t6eH3f0iE3eZbml6lrWnrM3Lf6pcmY9J7WBWY/G8UoEz8mZii+
Gb5rcdYir+k4Cc63uLil502du8aNFia/gadateS65k00wwIbTTyY3+Sh9kly
geLt4ky0qdeM70wtvOCvBVYYjjZ+T/Qhzd+17qU+bc1tXTuva0laJ7ZqXjo3
io0GB9YcYbBlUR+t92O0asOndNFJezyl/RZ1Ma1PTzZJctPk7GLP7aImWmiP
Vpwkc1vnY8ueLZ8m3NfC7dO6DA6fcsHUFC1sfEpfLfRYEhutZ1E8Mb0Xoz1o
rtG5mRxs/d5LSx8uuMlw6KIGWefgG3xEz1fS2F5wJY2Nm3Hbir1W3yCp6Yxe
XdRTizqxlVOUy9Y4RmOAclbrMjlOtdyiZ5vEJLWJmUPL/pSDbvK1yTuTLyZu
1/i/2D+2rvta77tPPmrpwJt+Nzhm5pxgUUvzm9qqpeXMGqnf6XnYxI8LH7X2
h5t6vLWvKYmTBDdaZ5kNjyQ1lMGQ1l76ZG4JzqzxJ+GjtfY2emzB0Tf1rZm/
8XULx9Z9noVNkhhLciHJTbOWxW/LmD5Mst6T3UyOU+6ga6Hvyk1flK63xa2L
3+eh2rs1B8PdxndG39LPmz6z2YtuuLLFg60rqcEpRyR1x6IP3NrDk8yB6oFF
bXKaQ7IWei4jOYNg1tvSKqc501hKcCbBnFavLKlBKHcnuNTS/EkMm7g6jb+o
iw0Pvq0WoLyWcGurrmztozO5v66h6ByMPRM70D0zZv5UI5l+NdXqJk4MXiUx
bPyY6ECq5Vq8T/PU6DfDxYvYXl83zzpRW9FcXugNY9uEv+i+grV+NvG5wH+j
tdYx3KojKOYvOMj48WZ8mn2qJ9yj73EMLr1B/9N+woJ31nG15prEnqecMvx7
87cdjJ0XZxzonBONd1MjJdjS0rctDmqdeVzHJ52/6f8kXPlR9P9CU1FOoXp7
gVdrrjE6lr5zacXYQscuciTJU7M3mMYzrSWpljDv3JN5JvxlbNiKT/MuwOD/
ot65qf/NPfVLKx4W59kXXJPozzfUO0YvUSxq5QjV2HTMFj63NBWtT1s6gcaJ
6Y208KGFsa2c/Sj6/3RRzbD2KfWL2f+QcA0dJ9EbLQ6i+Gmem+w1MjWyqS+M
HjBrX+zVXOAhtQPFz1ZvxGDp1//+v+Kjli8=
         "], {{0, 128}, {128, 0}}, {0., 
         1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2566352175"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "\[Rule]", "0.03799576312303543`"}], ",", 
      RowBox[{"4", "\[Rule]", "0.9620035886764526`"}]}], "}"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.775513215897603*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"56a11134-fb04-46ca-b6b0-1f87f5c8f553"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["5-colour totalistic, range 1", "Subsubsection",
 CellChangeTimes->{{3.775514127263281*^9, 
  3.775514132077057*^9}},ExpressionUUID->"d07f9140-ab16-4b76-a59e-\
d3d7cd89c571"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"test4Data5kr1C16", " ", "=", " ", 
   RowBox[{"data5T2C", "[", 
    RowBox[{"8", ",", "128", ",", "128"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"test4Data5kr1C16", "\[Rule]", 
   RowBox[{"netECA16", "[", 
    RowBox[{
     RowBox[{"Keys", "@", "test4Data5kr1C16"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<TopProbabilities\>\"", ",", "2"}], "}"}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.772719248559807*^9, 3.77271927548206*^9}, {
  3.772719324257593*^9, 3.772719331356277*^9}, {3.773124904129174*^9, 
  3.773124928357933*^9}, {3.7731251153026133`*^9, 3.7731251512280912`*^9}, {
  3.773125217467578*^9, 3.773125219418065*^9}, {3.773125271868342*^9, 
  3.773125271954652*^9}, {3.773212712732003*^9, 3.773212729006225*^9}, {
  3.773212818178605*^9, 3.773212830613299*^9}, {3.773212941366901*^9, 
  3.773212951689026*^9}, {3.773213005636443*^9, 3.773213014527096*^9}, {
  3.7732132566474*^9, 3.773213256876457*^9}, {3.773294401307526*^9, 
  3.773294423203759*^9}, {3.773348269707011*^9, 3.773348280477676*^9}, {
  3.77334908518248*^9, 3.773349098431772*^9}, {3.775496430974524*^9, 
  3.7754964434954777`*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"eb3c9edd-e9ba-479a-8e8d-88b19243c096"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzFnbGqbltShS8KYiQamQkdmWvc92AqmLSRiXBFjRob2kAMBM2M2tAHMPAd
jDUw1sBX8Cn0NhjsBid8H9+ofYLT/L1Ze625alaNGmPU3P/9wZ/85Ed//kvf
fPPNX/7q9//zo+/+6vd++tPv/voPf+Xn/+fPvvvx7/7Oj3/5+49/+3//fv75
B7/2G9/+8W/95Id/89///O1f/OyPvnz3n7/55e/+599/4fPHa8hncp/XNeRz
WQNZzyom5PqLWK3is3rfVRxKnFd5crHmVU6WOFzkxqrG7bNW9bXK88/EOnvN
3//HH3z51x/88Ms//Mt/fftvv/6nX377n/7x2599+/u/8PnjNd+3jC//3z9y
n9dnEgeyntcaXvd53ZOsmayBfF7FahWfcs/X/UscSpxtrpJ3X63Z5hjJB1uz
F7lh72Nr86KmynPLfl3UXYnVxV6TOJQ+RdZZ+i951sU9SaxW8Sn3JOsvMSxx
tjX7+t3Si69ziaz5tdf2+sIbC09exXyVnwXbV1i3+kz0hd3rVa9/xYrULLnP
SvettKTtv6/cIPGx+UwwwdbshUfx8ZrCsUk+fy1PrOAGyYEV1hXP4SI37Lus
/OQV1l14Si89aPd61ettfdnYFr2/8jFInb7qxfa7V00RfCP3fL0L2a+VR0Ew
pOhcu/4LT+y1ToIbhP+vsM6uk9yz5MYFZyiad8WFVp7SCwdWs7YLD7P0FMKL
SmyL3rH4WfTX9Uyw5GTxtUjcSK5e73vxMG2/I/3FciS7huLDrDzPC85A8oHo
AsKFbG8tXp/lvUU7FBxe5Y/1jr4WfhadaPPtwoe0uqZ4F7ZmV5yneGIkJy1P
szVi667odNsHra9l+ybhDCT+K+9x5XtYDly4UPFsCQ5b7Vlmf2Rt1/hZPFIb
B5uTq9wgHIx4F0XvWxwuXoTV9SQOF/N6u06i020ftL5WmcVc+Cd2L4qmIGso
PmqpI3J/i0XW3y73sTlZ8NPm7avuSu0Xrlh0tO3vJbctz7T7/vpdoustZ7Mc
0voJ5Hrrw6xmfB9/bmcxJIctjpX3JXVU6pdgY+kdtj/aflF8BqtrCp5YbCy4
ZJ9rf7e8O8GW8rul35F9X2lwiwk2n4uXYuNv8b9wmMIHrP9m8634gbZPFT/N
nje4qDWr623+kHtaXWNncIX/FF1ceP5qfwsvsjyk4Iyt36LBybOsv1H8zJXH
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
5wJllmc5JOHDReuVz7anrLSS1arFr7PngorfS3DP4iThM1ZPWb1sOZit69KL
VxzD4hXhn0WzECwtmtdy6ZU2sVht5+N23y90mdUjKx/AYrX1Xlb5cMHxin68
6GvknhY3LC6tuE05c2L7RZnHlf6+0mKW41lNavHExq3M0ewZD8uXSG6TXLrQ
ZaWnl9y7wLHSH0vdlb2wmvEz/XCbnyXPbU8v+UnWaeNTet+qLlZa2/qQpadb
DVvOUZR3LLG1vdt6jBYTVj3d3t9qKIJjL81V1rbqR2QN5LzBZ/rhBaNIz7VY
YfvChTdlPTGCdeTnq7oo+s6epyLYW/RX4SR2zSWv7H4VnWgxvPT0woft/OJC
I5T6svv4WgPRm+V664cTP3ml00k+lPMtK2/K9sFXj/7MOWbRCyXHLMezvjep
Ndujyf4W3lX6xUo7kB5h6+janyExXGFywfzCRW09Fuwie2oxyup08izby6wP
sMorwmE+c45pc5vEyvYOEh/CJ60PX9ZZvBHrW5YcsPhG3svW+LU/Y/20gskF
Bwq/LRhYdFM5w3D9ufioZfZaMNPqLJuH1pcg6yw61MahcJ4VT7Prsd5IwWS7
d7a/2BxYxdD25aKPbC2suITltwRvy/1JfL6WJ3atiy22rHLmdZbPYoLVL9aP
Kr2YrM3Op4rHVWZqpN6Llrf3JOssf4d4oXGK52+fW/b3oi5WWLfyeC/4wHWs
VrrY8s9VzlzH1uLVRX6SuU/xjogutjlj9VfxClZrLvqi6CarcUoMy3PLHJNw
mGvMJ7xx5fGu9J3lWiueb68n/LPUjvVdS2xXflTJz+IXrc4kWI18Ucvl3W2+
FU16wbcv4mmfa7WtPaNS5nGFR5U+VfKh6NDCOcu+27XZc4aE15W5ntXRtl+U
Wl7l/2d6pxdzVctdybtfa1KrswgmXPgA9rmk79jatPlzwaNKnyq5UTRa2d+y
7xaXVthF6rHgcNFuq/N+ZR5NuM21jrb9q+gywq/Iu680Kbn+eq5RZr6kLmye
r84jrXS3jW3R1DYfCp4X/kbiSc6AWU5V9LXtEYVLr2agpaev5kfXnmrRXCu9
VuraXkNwuJwnsfrX3sdivtXC1s+3vG6F8ytNvToPX/yZUrMkngRL7TkToqHK
PtqZi11P0Q523+19ygxr5SFcfP5MLUPiSWrf9o7i/xTuYXtK8Q0sNpa+T97R
amqLA/YdCd8ummiVV6TfWX20ytWyR+SaVZxJzAneWn5l+cMqzgXzr7WMje0r
ZwgXsjOCwhnIPe3fkpBeaXn1yre0Z+Esv7LrJBhi8d9yCautLCYTLbnyhWwM
V5/LbKLkSZlplrMWpe+UXlD6zkrX2NiS/Cd7XXQoyUmbS9Z3WumU4ruS9Zfz
bMUPLF4Q6ZsWh1c64vW+VsdZrVf6S8kr2yOsFrb7Yr+7vnBym/+FV5BaWHmh
5NyyrUeCA7bfrc532ZiU+9tcsvckPdRi++u51g8k54tW+GD7S9ERr7q45uEk
r4rvveJOK11A9mU1H7F8zPJDsh7Sf4suIDVFdJPl7QWjLmrHasaLHC7XlPOZ
tg/a9RR/aYWHpB+ter31l67zh/RZW9ef2dcKf7M63c4fV/rRchhyH9srbe0U
XVM426qOrL4uHMPqmqI9LQ+xOt3WTjkDVvDQ9m7rW1qMXb1j8RitT3XRg645
kp2PFA+nzKEsDtu+s8Jhi5nXmFyeS3KjcG/ryxXMv9iXwh+ILi7a3GoT6yMV
L32FITYO1g8kPhXhk8VzuOBIdj5Cen3xNIo/Vvr4ai/srHDFHwo3IzVSYkjy
yurNVa8v+7LKJasjygydYNSKb5TatxxmxQcudF/hDIXnX/SXi7McJCbl3V99
/IJjFIyy97GatPgVH9ew+s5S6xXbfLAcu3hERfNeYHLh9isNWPax4IbtfRfv
dcGdVjqi9JeyNlsLRfuXOd2KY6y0uf25fReLXWVtBUtLr7fnamxuEK5OeEjB
5FLjFj+Lt7PiWkW3lvvbNRTuZPWmxe3CV1easfz3r1f6uszaVvFf1ciKN656
B/Ggikdk5wgkH1bzDssHCt+42K/XNeT8KunFlmuVs4Kf6VMVXV+0jL3+gv+T
urN7avmh1VlFg9i+ab2Ri7Nkqz5ic49wfluztqe87nPx9y8lD4vGLPu1etbK
Pym+kM03+74X11vuTbDF4s/FGkoeEv1OvpOTYLv9b5xdaNVrT6nUeOGNxW8v
NW79/DL3KblRNH7Zr6IXCvdY6dwLvnfha608sWs+QPLc+jMXPZ3o+gs+cKFV
bT5Y/knea9WvCf8nMV9pOqs9L7zT13MJbynxt2u+4AzWY7FrLvMj+11b1tey
Xnc5C1f4wAqTV9rQerMr3W1nRqWvFf+H8M8Ln6H0ncJ1i6Yj6ycYstL7RNte
9OIVJpDfJXVavBTSu602vMAxyz8venSp2ZWWKTyBfH/OSnta/8e+b8FkW3cr
n8FydcL37BmY19psr7S6ctXjCF9a6Wur5S0vIj3UvnvRv6v57ArHbMyL91h6
gc2H1bkdyxMK9pI8sZznlc8XWG25K9mjcv7Q+t42B2xPKZql+LcWf+wMwurr
8u6FB664osXwwpmt/1N4UYlt8RaK12F1K/FXL/LNniEsMbF5W7Da5h7hxsVL
L1zUPsviTOFjREcU7LX5sMrPon9XfgLhIcR/sx6d7d12TkSeVTTXytMjayM8
0ObzqleSWih+nZ0HkbwtWE1y3vajV+7Zv4O2XPRawxZf0fpLFodt71jlZ+Ee
xV+yXNHySTujX8WfcBLSL4rfUjiS3aOSz8X3KLqpeEFkzdbTsFhNYv56LvlO
qhX3K9phhSGr/lI07wuHbe2v8rNwD4LPdm1WT9n1l3UWfUTuQ9Z/XTuFe5O+
bL0dq3OJbiqzHsu3rb9E+DbRFOT+ti/burOaseSz9UKLF1E4jO0dK1wi19tz
RKvfXcVkxZ1K/qz6C8Euu86iUywPtDViuVnhGOXnBGM/M/5WE9mZy8p/tnEu
Pr/1auyaLYcpZ5YKLtlryPpXv0swzXoLROeW8/OkN9k+aLHuYh5quXc5n1D0
y6pflL0oval4INYntNes9GCJv8VAi2mFZ5bPtmcRD6S8b8nhi89lpkBwhnhf
Zb/KTMFym5UHaOfg5D4FT0gtXPO3C2y0PNDu7wqX7B5dPMvmmPWaypnVVa+3
HoLNN8t1r3sfiU/RBaUvWA+2xGqFGxcetdWJ1gu1mEw+X/O3go0X87UVl7P9
/UKXWcy/4E4r7Unqy/Kcgp82Dwlnvq4p4iGTda5whuTwyiuw+2Xf0eK29fZJ
zq/wltTvyp+xeUVwfuUNWi5nY2t1xwpL7btcaK6CA/acYYm/jUPZxxXPt/3L
8tVVDK+9Aosbq5jbsyjk3EjhEtYHvtZZhZ9Y3mL1XeGcJLal51pdRjiP5ScX
movU7Gr9pS9YbWj79aoGi493oS8+0yuw/GcVc9srie6+4IQXGs3qGhu34mHa
erGYabWS9ZSKr2Jn2a/3Jd/pZDVXqVm7/tIXiMYpZ1qsB27xynLplb645tg2
VraO7LuXeQfhmYUTFswvnI3k3spXL+eibY8oWrL8HehnzrIJXlnNZXGmYAup
R+vJFC/IYoitQeKVrfiknY2uarDodHs+weLA6/7W6yY8tvS10qNLvyicoXgm
Ky1stQPZ64InJT4rTm7zx/aLwj/LWfoLPkkwpMxlyDtezEoI9hZdY/fCeuar
mrVeNNkXktukr600zoV3t+L/F1q4rM3yovKZxKecS1yth8TzQlOsfIZSdxZb
VufGS19baY3C80sO2Djbml2dz1lpnKIfS++2NbXi/xa7iBZerY3sF8GT8neU
JX8s7hFOazl50RQr/ClnMCyvuD7XdNFrVvyk5INdv50VFo1feOy1h1m4k815
22et50C4N+ndBYus7iA4ZvtXuY+thXKfEivrvRT+XHLP5qfF5BVXt73mdX/L
T8g9bZ1aHFhhbPHeC2baHCj9qPDwon1W72vXWXwGUmuF49kzY7bHkV554XER
3CAzcVtrK2/f1gjhqBaXCK+2Z2jt+q0PQ3TQ6/6vHCDXk+91JHEg+uICP63f
YtdT5jKrXlNmgkWfEqy2tWZ1K8GHEiv7jgQfrMdlvcfC7Ulul5la8QxJTyz9
yPLq0uOuOUaJucVJ61NZbmbXUPwWG5/VXticsTzZYg65f+HqK2+KrI34P9Zz
WNWa5UWFQ5a9sP2XxPPCRy3vZTm/zYFrjlE4ecFJ66vbPr7iOeVz0cKlF9ic
sfhA7mNnl6V+rd4pXKLoL4sthNdZTktweNUjSPwtPqywvbyXXX/xvS84hvX6
bM7YvmP3yPKNFc9Z1TU5i2J1sc0Z25ush2Dxucwg7JpJj7B8tXgUq9p/3dN+
l2bpEfbdi0awuFF8iZVXXPz/wjFWuLo6F1fWU7ix3euS/4X/Fx1htd6rNxUN
aPPfvgvBQOKT2PM/BXMKv7K1T96XrHl1xqxotILDxW8p/aicJbD9fcUx7LvY
c3Er77fwxpXfYrGa8H+71/as+Ot6Gx/bE+2ZxoIDNsdIrhJcLf3Lvnvps6V+
ixdHvCyCP6Tuit9C6qvwopXfuOIYxYexe2fraMWBrfd1rTusR1F4YKnH4hvY
+ZT1LS3W2b5j+SHpvyuOV/qsfS7pBaV+S67avla0W/EJLT+5iM+rr1kPxM4Q
rcdI8p9wWqvfbRxWmuX1XrbXXHCDax5evAW7BtJ3Cie55nV2jyyfJ+9b9PLK
myX1VXzmooNIPpPrV1qDrMF6sxbPLQdbzX1I77CayOIDWdvKNyBrsFzInoe0
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
fwHtYPxC
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "407892722"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.44578754901885986`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.5541765689849854`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzt3LGqbllWxfFSQYwFMRMEk6ahETUTuzAzE9on6AY1aRBaQczEdzA3NfE1
TExE8VGM7QaR6mDZ/59jrVv32BWc4qvDd/Zee645xxxjzLXvb/7gL773Z7/4
xRdf/OWv/Pg/3/v+X//hj370/b/5k1/+yf/86fd/+Lu/88Nf+vHHv/3vn598
/sG/f//Lv//t3/qDf/zBd77842/91Ze/8Qt//t1/+I/f+/Krv3/9nfL51hr0
vi/Wtqzzxb30b5fYfso8eZEbGrclni9idSs3buXk61jdislSpy+eXeP/Ym23
Pv/6v3zry//80R99+Wv/9Ps/9fnrum/5/DnE7XP+/CJWn3IvPvpef/T1f8Sc
+WZP++cvfvU7X/7zv/3rd7/97b/7bvn8+r6v//bn4fOLffyUefIp8/CjxP8j
fv66sOWbPf0Zz/LFF//zc/p9+c6t++raluv/f/2scbu1F7fy5MX6P3r8P+Ln
rwtbvtnT//3zSX9pj1Ydt3g75b4/zx6Rxm2J54s8ebH+jx7/zyGvPgq2fLOn
P6N/HeL81RnETz3LoUd/9Ttf/dsX+u7W7O+ja7RlT0/7u8zdXufJsv5Pudcf
ff0fHVu+2dOf8SwHDbL05dKvX+g77aH/Xz2isqev57wv8mRZf/nbW3v9Iv6f
cv0fHVu+2dP/231LrZ1wu/Tr0kNVH6mOWHyhz0GjLXv6es675Mzi+ZzWnzDk
cX9Z4v8p1//RseVTcobPYU9vnYGZfN3T3oRnOfW4ou+0Vy5xKzH82vgVcqGf
iuegucp+pZwpvw9egfK3k5d1q78s8f+U6/+UefgCW27NpD7inpaaLXi4vGOi
PDn19Uv+gPIE1X1fl+4ue6qcR2tKMfyUS8UX1ZnaKSbK8W5xRV3D6/XfytWv
C1vK35Z8++h7esS9T+ijph6KuuDUT0s8Fxy75Qu90N2Kw0lvhvhrPpd5FvP2
wP+V7y088NZ3XnwuNfjaD3mBLUv+qH/yUfb0Vj/V+yaOgZpdPbHTesp5lde4
/cJXT97XkBvJwy9aTPtv0LMlHwrfO+nN13qN9S/+lPxRjNU8fI0ttzB80QKf
256W759ipXFQT15z5hTPgucF9271fdXCt77Dngzmkvowp8/675yUnCnn5RTf
Fj65aLfkb5efoPFV2+qz6P4u17x1ffUPP+c9VQ6m/O0Wtid/APnYrTnRgu0v
/CL1dnjvDphQ8v8UB927RS+89voWvVZ66zEOAR9K3i6a8Zb2X/Sj4rlev/CZ
Y55/DnsasEg5263PR35+wLGC1eU6JX/0PYsFk29xxVsauVx/wUn1A1UvnPbx
ltdX/CLlCQmjsC7K7/XZF85ftFXBouX90ITngSuWGv+69pSf9/CMr/3MpfZT
Dz3grfpRCQOVOw1xVl5UcJLnTQG7CvZqvbzoleVeRTOW3C59U30S/X3BjVuc
f9GVJeYFx8r1X5yPXbzN5ffaC177nLpHyhtPWKqYprXDOnGIs+q41GdPcTvs
kfZf1eDpPKdybNz3W/6D9gjlG7yPyIWWGlfOptfUvX7h0y5+5q09XTwf9kJ1
vlk0C2r8dE4D+ZvyojKPOGGmxrn0u4JX/OwPfMsSQ9VNS+2UfGP/IXDUwhV1
T9P3B33HvRV53fN1lvUUDMFnvBW3oq3Uo57OXSDf0Pd01N9eOH+px+O+aJ4f
4qb9rmDyEudbvqX2LOUet3p6wY3yvMv7mKoxF61duErxWE45zDn5YJ1ap4ot
6hFp3AoOq+4uvTI916kWlKdh7euznPJHtdstv71gDvsJxQsdMHY5s1c4MGu9
Wz194F2L31U+39JHrAFDfyz1ohz71jpvae2CFcs+3vLPUw9FXX+rZjVuL645
eb+hrpNGCLmdaiHkecmlRYvdwreiX0pOak9X34C9x4CfiasMc4plDrVwHsWZ
pdfrnKXcd5nd6D4y5yzYgrz0dc0WrC4Yq9csdbpoUs1PnZEdz8kc8kpxu+Sb
crblXprDpdYWDrCsX30/xfByhqp4U/q8ZQ0Lhij/1PjfqgX1BvXMm/IHxRPV
cYuvnjBk0CzpmlibyzzlFgco11StrT208GH20AJXL9q51MjiA6vvoX7yp+QS
C2fQ/sicNsRE+eeLWlBPdckx9vSUY4S1ac0qhqhvptfU82aFbxfOtnCA0sue
5GHov8oP1XfV3F7e3dB8WzTR4qctXEIxQXFVY3tag9bpws20FlSzaF/WGtT3
aJQjLfzkFpcuPUW9gpK36s2WPqL5prPUW5i8eBfKV8scOXlfofexxxvqrjyX
4uEy92H/HGtT71uwt+Sqei8L5jNXwVlJybGFvymeLBhY7qVceunphfPfOnda
elPRzksvO61BMbnEZMH5Uu/KgdVjeTHv0LpYtKdyiRIH7a2LD6NcTnmy3kux
7tb5isXf4JgHPFEMXDRFqTvu6UGnLLW/8LSy10tuaK9UbNR6WbBCOQDPg079
EXNGPRbVKep7LN7UNe49aP+jXl7md+i/LbWw8AHtifqMi/Yse62+q+qg0usL
FpX+or34heZdcKPgm15/wdsFK3T9iz+c4nD4vb6Dc4uzqebV/lVqYdEvmg+l
vhafRGcrybdXnnDJc0g5gDmp/rDy2ILn2rOm2UTIn6XXJ//nUr8rWHfaI8Vb
xb10XnHYr1N81J8v52fS/oa8VWzXZy+zjIWnqX4p8zLVJuqJaX9XX7qc3VXt
VniCxk1nPcXTKPxNa5812qH21XObMCrwK8X209puvTNbelPBwOPvQ87zbOKQ
Y6X2Uz8duFPxhydsL/U14Mkt/XJag/JV1RelXrR+FX+WORqfJwmYs/RQnd+V
fTzVvvasyaMLMSkYtczcy/oXn1b1ss7CynpKzS568NbnxSvQGr+F7UVHFDwp
Gm3BDeUPqV+U+g0aZ3lv+la/02fUs6Bajxr/wv2KP6/5tmjwW2eEytxk0bPq
rd3y+m59XjyHksMJPw8/mj/lvi/ONqgXt8zc2ZtCjVw4wOJn8hwhzCNe9LuS
e8wPD+sv62R+gvxNe01Zf7kXPy/yCvVbSq4qP9Qa1/mdfi7xSbWwaISQt6ln
BfxRflhyNeVVWVvoTUWnl30pvLT0R60vjWF6N0T9tICNi5eoXGXBE8a6EJ9b
+KxYt3BC9XwWv0X5oWqrF76f3qv0mhfnLoo3tcR54eoLD+ceMcwIbvmWt7jB
MjsrukNxYDonecurfNCzlnOSiy9XeMvp9wlDhhpfMHbZXz5rFzBw8a6Tbj3s
l/a+03d0XqzaP537RR5S6it5XIO3qe9svvAGlRssfHvhXRqH5CEMvJSxJeS2
8pDE5w/3vcWLkn8YrsM1HvZIOe0U50EL6Hyq9JelBylulL5TelD5jq6neCBL
TBbtrJru9fU1t1/w7cWTXM6HaH9fsEXzWec+3GeRFy096JbeVKzT+6ZeprWD
Oaba+YVHpDh8q8b12dWv03zgM+SouZa5w3L90kN135Vvl9x7cT7klv9f9ot9
sICZUz2GXC35kJ439JfXPW7xDItfXTRUybHlHP4tj0j7oPKf0l/0nZEST82N
ooVv5eqtHrTo0+SNHPb9xbswpSdqP0p6GWcxhSfrWe6l/xa/kXVQ0KELRi09
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
Fh8r11+84uL1lfjf8mMXbq88UD1P1a0pfxAzr/Ei7O+q+7gesaZunYvTmCz+
UuFLOqNftMASzwW3lVcsemSJm+Kt4p56jy+8NeVppZaVs93iPAUnlQ8nDRVq
6uTBJg6jvndYz1JrOt88/a3W1C3dXeaApZfpuRf18HUGrXmu8Tzl3lJrmm+F
V2jcyqxkyT3lY6o91VtLmBN42sJnFj6g3unCz0su3dJcGucFq2/V2tLfE29B
TnKLm5VaW3BPedrCRZUzcK0N3DJpRtVxeH31T8r1F86g/pjWndZmOfOgGFj2
a+mhixfE3FhrIfhdRRuyT3tJoxUuvWguzfnFn1k8DcU91ZKsv5DDcD4f6v3E
mdlTOtyXZ+jh+uyfDPuiHEx70+LTFk/s2jkBrF/toWX95dnL/hYMLD1OsU5r
6pZG43dqAoaUnlLWX7Sk6tBFezKfDBhVdO6i9ZZa0H6U+DDy25IDJd9O91Vd
oH6RrlP7/uL1LfxTa/BT9uuSn8qTF48l+ephzbc0WuHqiiF6jkjrTte2aDfF
irRfxfu6pH1UBxWsS/2rxCpcR3sH+/+FuxaOdwmLFBvLHpU8VI+OvaCTFv6E
/bpglPavUmvK2W6dj5pyb9B0+ll1BNfsqfYPdc3vFIS9WDitap9FQ6mvmPJw
+E7BPfYkD/u4vC+j+lHXyf0d81P1O/ff0Ov1+qX2lc8XXsd6p8QTveWllvU6
6h2ph6ncT9ejtaD1q3MTPTN2+mH/uVwXvYWl72vts54auKX2hYKlt/hA8RbK
9fWa6tMuc8DFx9Z1ljld2aNbsxU+E46xVR+pxDZxNtQjOtNJnuel/qsce5k1
vMDD0stO+bB40Uv+FPxMeLjw20NMdB6kfGCJzzJ3WDiA5u212gnzL8WB017f
mq0oT1h6aMKBsmb0z4s/mTB5iOFyPjmteYnbpXopXiLP2gY/f+EDp8/lXQzt
EerT6jMqprEXOni2y3NpT5lq/JL/PHmGoS6K5tL3klT3Lbzu2DuCh1Bq84Sl
yUM73GvyPQLXKvivcdN8eIGHiuElDqoxdV/0s3Lagi0vuE3pWeUsrp6F0+di
zMF4aj7wGZvTD3qGtzjDksPKc5QzsB+Oe7TwFtX4Zd819174VwvW6WflUalX
qtc06KDFAyy4rXM9vY7uy+KnFQwv8T99ZzpvoHWqmIC+bsl5raPyLItnrjqF
31VEDNR1Km8pumbCxtAT+R0o/Lx4s6fPt96RLPmw+OHKqVQvJO6BvChxm0Ou
6vlD5XWFb7NWGnhUiaf2UO2b2sdL3hbfVX1Izu3DniZuj3l+652ywlsWHTFx
J+y/i7ZdfHX9rNyp7JfyyUUHKffWPp540fD7W3OEgi3KJ9VzWHgCa4EDJui5
/cVb0DpadNyiWbSvLRqneG5prqTfL3546ImLn8O96bRHGOfF3y73Te9E4N7d
0q2aS/8Ff5WKYA==
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "638248908"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.02280936948955059`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.9771904945373535`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztnbGq79XxxS8RRNAXSGmZUi3Fe7BOETCdhXAFBYMgaBG0SpMuKVMEUqTJ
M+QB8gSWNjY2gg8gWHkFi9P8yN531mettb/nFPvPyWV/Z8+sWXtmzb7H+3/9
w8/e+/g3T548+eKV5//nvWd/fvfzz599+ceXf/kfHz379K03P33p+Y9/+XX9
8vOf/vn107//9pO7v77x49u7P3/12vt3r/70xt1/v//g6a2fd/ff+vaWnYn9
lbMmmBB2dvHZ9WcXW8LnSVwTDtCcSd0LmsOTvDTnTpXryd2h696/v3r97rt/
/PD0D//53/bP93249ee3ft61ubJ/8u0EB/pnJya7eVzhAIHDhGPOXKhy1MxV
lXY6JXdEbaT5c+vbb3/3+3f+9q/X7l7+5senz8eBu/+37u9f+fb+uSt2Vuyv
nLvy7W4szuXEZGXPLS6peEL4o8qpijO7+DdzdTcvKz83525yFsGN3T23fFvJ
haon3jp31zfan5X6RqyJnzQ+uz7v3vddHFb4P8mpijMq/Bu4OsnLbg1syN3k
LGddVdU9J2d2v6X9WckRjc/ET8Ifuubs4r/izwq3J39O52K3Pzrvy25eVHxz
5m6Cf/Ny1joVh4keTeCWskn4M9G3hM+T2WfljYLgiYoPKj1J8HNllp/0Dmfu
iFw0rMmsrZq5UvV8ci6hAYhzVfma6HzVnLvr225cu3WpgWOqpfJn5X17pYav
5ILOHZGLhl7grLepeaGhZ6nqHh3Xyt10asuVtastV2rOLfsTnhAcc9YB1c8r
f8c62a/K3S4+KpyJO7ISI8GfU+4F3bNSa5IL+u+/VHFNfrdk8l60GxfBsYZc
TM5S/d4L8fsqxF1L5cVZM1O47X7bpmPpXK98O5mjae7tasLUXVDNfYT/DTMF
/TtRu/xc8X9y11QxEv433GXnvaB7Vmqp9OeuTiP4cOvPd9+HCX+cHKDvFxGX
s74RODhriArbCc7OvkPU3lR/bOMDwdvd37WY8GGl70x+h2TiT5uuUM1iKm6n
7qMKwwafd/1sqD+7eDboMXp+dPKBsDPR26pcq36Hp0FzTu4OoeVUtS51H1UY
Nvis4o/q29RZtB6jOe/kA3FH7u+Z/D6GKte7f5en+n1UZ47aNJtqD3EfCQxT
Pqv4o/qW5vmunVM4T5xL7F+xo/rvMSezAPFvR6i+JXjSwP+UptrlrWrGbNCr
E39SXCXwcfrZNjsQ/JnYJH7nZ2U1vNVMOEzUnwbtQdtv0KgNPqt6BMHViZ8q
DaaqvU6ep+oVEYvq3/a89a3q720JTFJvCyntQdun80t8S/isqr10nWzQYJNc
tN3lFG6qWCb/dvdKzVf9d1g0ryZ7Gvx07ldxb2Jz91vCZ6JXqnjSVqMm+Kfu
EX13UudO6vN9O23/Hguhz1Ma21mLJjWWwIH+NrWIPtigYXZjV3171RmcOHe3
5t+yo/r/o9GgqZx8briDBN+cOu2UWjfx2TmLNfCHxoTmJM1DlS4i/tv8hn87
rrn/NtxBmm8r3zpnnAacnbqd6BdO/rTNns4ZfOKb6t4RuDk54+TJxE7KPp3T
hnrbgLNTt9P5StWrCSYNHJj44Kyfk1wQNmntR/N5gnnDbD7xmeAkEWNbHlOz
qiqWUzRk213b9ZPmXmo2pzGf8GRiJ7V/wsM2nUbkt2G/sx/RvKL7nXP2pO+a
E2cCH2Kd2H+JnjjZT+Pc5o/KT+d+Gh96Ft71rUFD0vqZtjmJsWH2dGLeFqMT
QwJnp05r6yNEjgh8nNqybb6b+Oasw7v7VbE49YAKQxW32/iZ4jlts+GuteV3
4r+KD/S3Khwa7BP1c9dmiqtObIn5euJzM/4qP2ndSPjj7CNEXM73ira8032Z
1jyue5DkqhPblJ9EfzklF206hK4DqfzS8+kp+pOuD8S7CpFTggNOH1TYNnDs
lLNUuWjDmZ7XiJlo4kNbbVHFpcIhtX/XZptmoH1wagbVfW/ApCEXbTjTenUS
r7Nup2qLinu7ex7CcmoGgjOpXkbcdyIvTgxT7wZE7A39MdW/UjykuXf6LOPk
XgofWvNMbBL2ibw4e3Ebl+iZmua2yibhc+puOjl/1bmgedajNY8KE6f9Xayc
nGnjUpvO3I2d4IDz7jTPtqm8N6zmWY84i56pnTP7LlZOvdfApVN0ZnN+J9wm
7BO5Ts22qUXrCtW9cOaRxoHIkbPXNMwpbXGl9DmNg3Nmpzkz8cfZu+lF9Gua
P6qzaF2kOoueEXZ9bphTUjPgJEc0DwkcVD6n5hqiVqtm29RcQPTHU2ovrYsa
8EnpqFReUr2D5szkXkz8V/GZ2E/7RmBO3B1V3lX90cl5+h7RmBCxOOtnQ15S
vcPJGadGelzrHDvl3Aado/I5pUVVmLTlhdZXRF527TtjV3HGqZEmeF5pOefH
CbebdSChXSf4O2ftU/LSfI/oOZGOfYKVKq4r4ZPCn7ibu+cSfk5s0vM7kceJ
HSd/6LzQ2s/ZZ1fy1ax7CX2l2tOATwP+u3Z2MU/F6LyDxB76XDqPDdygY3F+
m/JB5XNzHW7wwYk/jUlKgxE+qDQqPQc1zC8N+lx1Fxq+Ve1JzSYpOzQ32hat
J1O6N8WxEzngjJ1+13LaId6vJt86ez2ti5x2aG6ofCBiIfSkk7cNHLuSHmjI
F8Fh4i7sxkJ/S+Rdhbmqfjb3qeY6kPIhNac7OdaAwyl+TvpFQ35V/qu+pfPS
gI9qT8P8nurjzn5En6vSUfRda9YDbfma+Ennty1fKt9UsTfjs8slmv/OPk7z
J+Vn6u3FOec246/KVxs+KV4RfqpibLh3Kc6r+O/0LfVORZzboD+Ju3DKXEbn
qwEfZ01w+tlQkxt6Ad0rnfud2E7woXPnzHsDbxvsqPJF6A2Vn0RNIPCc9N82
jUH7oOJtajlnrob5bsJhokc01M/U24sqX0Te6Z6uwt+JZ+qtxomPihsNvbKB
Pw3zL/2u0hYvka9U3uk+5bSp0h7OmaKhhtNvHSkOp3QvzR/6rFN6a2rep/sa
nffJ3STu+ynz74m9ksB5wrGGmtPWc+lc0Fxt5hVhn4iRzruzT9E2VXlR5f2U
Xknc2bYZcGKTsNPW15warIFXEy2d6ncpzIl8EXE551+6n+7uJzRzQ89tsOns
ualeSdQKIpaUDyru0auhN9G1pU3r0rmj+UD0soa+Rs+zRM+d3K8GrU70Vhpn
512b2G+Ldzf21IzsvJtE7hryS3CjzSYdL6HnVZg4NQCt5WjdcssOsX8SOxEv
EYsqv7TWbYuLzq8qRufdaY5399u2eaFBxza8Y5zSa2j8aV1H59fpT0NcV+1r
zX1899vdPbR9Z29qyG9KO6V0HT2r0veIzgU9U58SiyrXqZWK14l5c7+j/aTf
MZp7jRN/YiZKcYbwpyGuh9avaT8Jbqf0vBNzmjPE/EXPHSpuEHP0hHuq3NGc
ITBsiIvmQ0NfI84ltLSqnjTMaM6+k+qbNLaqXpOa74hcOPGnfaBz0RBLQ7/e
9Y3u43QunDOL6twJh51909nfac7TdlS5OEXrplabNmi22TBftL0PNGjjttqo
8ofOqSquU3Kk4rzTh1POdfZWp82GekJ8S+hepzZuq40qO8QMRWOr0gYEtirO
t/XThnOd2sZp01mLCDwb9NXEN1pLN+gB4t6pOE/0fWeOiLs5sdlQT1T7nXMf
URPoPU5utN0Lp30CH1oP0HpJVYdPzJEKZ5VNer/Tz4nNFMcaFsGNtnvh5LAq
9t2zCK07wbBhBlHdBdV9adC6KQyb/Wzz7cTYm2sCrY1TOBB8UGFI4Ez74MzR
VfnTPN+d2E+bY2+uCar9bTgQ9p11hrCTwpaeGU/hT4OdXcyb+2lz7M01gcaQ
9j+lOZ34EDjT307sODWnkz9ODE/hecNq8NNZE2j/VTVHFWPDXVPpCkKDEXNc
CiuaD879V+X5rk1iNfjZVgcm/jfgMMkvcdcaOE9o7An+Ti6p+ODcr9rTzPMG
jZry85TYV+w4NZgTn8lda9YVk1ho31Lzy0NbKZ43aNSUn6fEvmJHtb/hzl7p
3OZZj/j2lPmrYZ2CAz0DOv1M6WHVuUTfbLizp/diZyyqPKq+nfDtlBrYzLdm
PxvuQmrWUJ17OgdW7BP7nec2zG4qLjW8j9FnOVeK5yk/2+6CE6sT3xBSuTux
Fzt1xWQ/wVua2236xxnXKfMvvacNHyL25nuRqksqn53nti26NxHcJvY34N9s
/xQ8G+JyYn7Ke8jEPv3uR5/bthri2uX2KXpvwkOa5/T8e8qi9QmNecN7CJ0X
lQ+n9Dt6NdxlekZoziPNW9X+tprQjH8Kcyc+zrm+ud+dqH8a7rLzzactjzRv
VftVe9ruhfM9k8bciQ9tp4EnV9U/DW8mE5upWfVxTuR4+BDOPSUWVX1W3eW2
fnei/ml4M1HNVhN/HufE7DplzmpezW8stLZve39oPpfmPD0L7+LWoBkm+T2x
FhFxpeasZvyJWFKaMDXv0zYbzj3lDWSCT4PPV50TnXkkcGh422zGMKUJnd9O
9kz2p86lOd/Ws1a+pTXDJN5Tzm3zUzVntcXVlmtnnSTmfdX7Q7MOaeCJijOq
eZDm3pXmxFP8VM1ZbXG15dpZJ1OzCYHVyp8785XCgehZE16puDfhg4pX9Llt
fp6Cp3OWpPtOA08afF4516lDdmNvzqmqRzj1w+lzIs1/Yp5txpPWvXSuU/Na
s8+7d99pZ1LrGnJK318iF87ecVXeOuNq9rMh1w1zkLNuELlz1rGGuYmIl3gX
on0jeN7Wowk7BG9Tc7eKk85cN8xBqpnIOTNO9qfq0sS+aj/B55RvDXPWKbyd
xEvbd/pJc6ZtxmnOy8pZqto42UPglsK2jc+pmYvW2w28fcjzi3M2b5vFGvI7
OSuNwYv45tQYE6428JmeN1XcbuOkkxvEfue59GxOY968rqSNJ76l6vaub/S9
IHxT+dNw9xvWVecXoqcQe5q5RM+Vbdp44tuEDwRP2jQ5gQnBW9W5BCcJbqd9
ccQ4qV3Ez805ouf6Nm2sspPqF6n3EKd+duqB1H2n1yl+qmJM+/IifjZoXafN
lDZW2Un1i+b3ENUe2h+a/077p+BAx9jc11LcduJG6yUVn1N6ODVP0e8hDXmf
9NDUHDGxfwoOdIzEfqefBLcJ3AjdOIl3UsecGtuZO2cdo+9LwxuL8345/Wyz
r+LGZL/TT2d9IOrnZH8zx1Q4qGJvm5uIfDXbIeoMcd+vNL8QOT2Fe7v2m/Pi
nGtScalqsvPOqnpNQ+1KzcUpHrbNI6nZv8F+ys/mvKTePZxx0Xlsw2cSLxFX
ai524jbRe6fML07Ot3Fvsv8UPqtwpnsr8S09R7Tlmq5dxB6aJw32U4uY/VP7
VXuIuZvmW9tcQ8RC1OqG+vxYu17M51PeH9pWG/8fwnL22d1zJ34SsUw4nMrd
xOZj7Vr3uWGup7lBY+v89iGvVJ91zjXEjDDpEc31s60WNdxrAs+294oGbIk5
Oh1f43rss+uxEO9CbVqxrRY13GuiLqX5PuVS6lznfbnqauizDfeCmB0IPT/B
PzXTpfKYsjm5Rw24pd4n6Tn6qpyfYD7J0eQsZ/1U4TCxf3pPdJ6rwpl401PV
pYZalNLMdF4e3zH8fF45i/CTxoHgD4F5iicNfKbzksKNnmWcb26qdwYCw1M4
7+QP0WdT+sG5X/Ve5NSKqTwSnFThSdSlVC1KzdH0PaLtNHCeviOqGOma1rw/
nfMX8SelA+m4aB/oHqTCJDVHT/YQPkzwPGUuaOuzzlgaMD9RDzfwUBVXcyyq
cxs0LYEJoVGdtauBJ219VsWrtl5Az1A035w68Eq1yJlTWkc1zH3EGw6haZt5
QnOMyBHBT3rRfFP5oMojwcPTa9FkfyovbbOS875MsErpmYmfzrzQcTmxddp3
1liiZ6n2E/kiOD/ZT+doEi+Bc0Nfdtp08oTmlRNPYn5p6LMqm8Tdb1sn1qJJ
XM5zm2sy0ZdV+EzsEDxx3n2i16jwd/ZNgsOTvDg5mfKzuRap8G/QXRM7qvvr
1MYqm6qznHp18m2DhtmN0amxU3MWzX9nTlVxEbWIiIvAh777J2pj1b2mz3Xe
ERVv2/rXiYueYZ09aOLnJC6aV8QMq8JH5b+Kt83auG0RfYrod0R+VTw8cTm1
QQr/VH/Z9UF1LwjfdvlD7FHZTGnjtnWK/6o80trplNUwj9P4O3PaMEcQvqn4
Q2Ob8qHBNyKWtI9ujk1wS/tF5Z3QmRP7bbMezQFnH5lwJjWvpfBv4AbtT3Of
bfCnASs6j6p5PPWuSMx6qXrr5ECq7tFvNSofUtygY0n539abVuz/DFy90oc=

         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "710896859"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[Rule]", "0.006825145334005356`"}], ",", 
      RowBox[{"2", "\[Rule]", "0.98748379945755`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzl3b3KNVkRxfFRQdTAWxBTwURDGR8/QAxlvILxKxIEDcRMQS9EMPJCDAyN
BSMjb8IRDF7BA3tT61dVPROMtA99du9du2qtf3X3Oe+Xf/SLD3726ffee+9X
n/vofz748Nff/uUvP/zNDz/7n//z0w9//vWv/fwzHx3+9r///ef4bz/42/s/
+vxX3r7wpZ+8fedTv3j78T/ef/vdH7/7zXeP3z3n5PjVOCfjn1y3Mubtum6v
dTJO5ZzU8e1apuZ/m0tiniInK3FIxee2BnX+p9au61HvhYjVq+N//f4bb996
+/7bP//6vbeP7OD//vfuOX/+y6ff/v6nD96++Iev/s/xq3FeXffkWq+OX43/
aszbdd1e62ScyvGrmN8e3+711Pxvc+lkX27nefvZSp6cxOFk72614iQHUnV0
mxu3a9f1eBufitdXtDcV58o4Jzn26rMndfHu+CfnvPK7k+NX17ods6KBqf2a
8pqTOdzm0rvnv6q7isamcvJVntzG6uTvr+Jzcs5tLaTysJI/qflUcruyFyc5
nIrV7We1Plc85fY4td7bMSsaKM5PzbOTMW7180QfUnt3m3tC83W/Jva9kyVS
MdQxP2HOSqzEcaoWxLG4bqquO/W/wt6d/HCbt4I/Kxz1Kk+0F2imTbGlZqFU
/ohrVXT7pMcRHppab+o+zK1vivs/lbrWdZTSSZ3ngv1E/G/Hr/SkU4yqvUbk
21TftEFLU3qSYrNbzazMU3Bj5ZzbNXaySirOqTzXtd/JtJVjzQ8p3hZ62FnL
utdIjdnZjwi9PZnD1PM4UcupZw2CKwQbpzhQ79eUDpwcp55VCf7X3rGB2VKa
Kdhe7IvgukqtndyHEZqZivlJnU7d49U9heCTznlOsdPt+al3FVIerXVvilGn
fEprl5h/Koad70Loz264x5vaI81CU6wudEDUV+odCc0Vgic7dWnKp7R2aX+v
XLfzvbhOrqh87yDl6SmtEywxpRt6vZ38X3nfQ/dlok8UXtaZJ1p/tFanOPP2
Pon4joDgisr3Dir3eIW2C28VvCTi0KljKf7XvY/IAaHJ2/JE9zXbPP3kfKGN
nTHUeph6xtfJtGIO4lpibp01lWKDlHd0MrbQOpEnnV4m2F73LBUNr/S/mjcq
ebjtPdgpNtjcg3SyQYr/O/VEMLbQOpEnqfl3xk3r/EkOn2j41PtvQt9u+yPN
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
c2XM1PucnfeFhFcKHhM12MkJnb52q7Eb9P+E/4V3675AM0CKhzvrqLPeU5p/
u1+p79SL+0IpT6zouWChlMd15ozO86fzv+BtwUiCtTrXqOsoxZOpOafy4Zbb
KzGp3BfSDJ/KH83enZ8VvUYlJ5/C/5Xc0/ovzunkZ81FYi3aQ1P1mNL/274g
pZOpHJvqR0Q+CB4T66ow/2b915yT8t8NXKrzXPDPhnqpjJ+qqUovkLp3KvoF
3Y9ordYMI/qRCrds0P/UdwF0/miW0Pmg1yi8rLNeUgyW8jX9XHhKM3Wuih6k
Mo7gtNsxt/G/ZgOhaSkOF76me6hUnm+ol1QPIt7hvOV/0SsJzRRaqnsQrQ+p
tVTydgP/d7KlyOcU7wk2m8p54YO6XlKanHpumxo/xbed8Resrut3Kp6VvJrS
/1T+aP3ckEudtaPnqdeV4oFbTb49R4+f6n+f4iOp48781/FM5cxT9D+lnxty
SfdEnfMUeyF44NVx5f2K1PeCU98R2KClKd1LaaPInw16svn9H73vFQ/VDPOU
9QoP2qZLWlv0ceo9Oq2ler9u59DJYFpPUjnzFP0XOjzFCdvWO5X/nbq0zY9E
P6K5YsN+VdhYM5hYS2VdT+d/4emp3Otkb7HelE4Kje30mk4/Sunh1HWn2CBV
Fzq2gg8r/rJBw1PPqjr5pJNjO9eb0kmhsZ083+lHmh/0dTVTTcVf+E5FQ/R8
Nut/Kvc08wtmewrnpPJZe66oHc3nwse1X+u60LXWeY6o31vt3ab/qbroZCqR
e5s5J5XPwrs79U3nUmeeTMWz06OF16R4JlUjJ3/fpv+d3/9KxVBz6TbOEXmr
PUL3OCKXOvd9Kp7C1zq9Rmh1pydu0/+Urn6c6qJTH0RshfcJHRbjaH3r9HfB
BiJvO/1C1I7Ow0/C+/+aJXRddHJghauFR6T8euoczX6d/i72XXCvjuFUfFJ5
eKK3H1f9n+qzOvuR1DgVnxKaKWpTr3FDDgs/Etwy5cvbPCJVmydr+STwv+b5
Tg7U52imEj4oGLhTE0QO673WOdbJHiL/Ra6mPPH296OeqP+Cb6d0oFO7BFOl
/q7XuIFpO70gxSQ6/uK6Iv81S6Ri+JR//6uyj1MM1pmTUyyU4rrU3k3pmGAz
3RekNE3HX+fk5s9qZjh5x/4p+l+JyRTbd/KP1qhOTdb+Lj6r91rzg/DBqZqa
yoHOtZ/o+dP5v5OFUhqr60vrdqfnivinWHpbT5Fim5QvC4bRjDH1WR3byhy2
6b/QfFFfYl86mSSlV1qXxLW21azOz1R8RD0KTtY5IPY35S8n193G/ykv0L3Y
Zg4U9ahrXPQvnXy7gUW3MXOnN02Nr2tc+GAnw1f0v/LvmW7j3k6v0fnWqeG6
ZrWmaRZ9iqYJb5oaP5VvnfV+Ms4G/b/tCzZzbydf6XxL1eCU/3ZqmtDeKQbQ
69rG85pVhA5U4rz5/k/nfaFULk3pnsi3TsbWHpTyzVScp/ZXa5rwnal+IVWz
Ka3+pPH/bS8wxb1TujeVe4LBOllOeJxe+5QudfrLhhyYynlRvyfzeSL/V+4L
adbSuieum6rxim9qlkuN3xkT7VPbuHcqB6ZyXqyxsi8b9P82ZyqfFb7wFH3T
+dmp+ZoVKzFP7YuO/xT3TnG4zsNOT6/EYTP/v/rsSS+geUBzwhTL6Z5C+KDm
qFQcOscXHqf9XXN4J49pT095wWb+13HYxmZTLKfra4pLBXOmdEyMn2Jvvada
kyvr0hy+oQZPWPop+p9i3Sk226DnoqeY4lKx9pSOTbFHJz8I/xJ51embQmdE
7j1F/zv3sdN3tmlap86k4jml5xs0QexFp8am/C6lG535LGJ7m4eb9V/zlfDW
DYwk+GrKR3SNd3r3Br8WvtOp/3rfO7lIe8qr4833fzbopLiWrpGUjk3xmNDM
Tq7e7Ned2tWZ20IfNBd1+v7JOBv0//Z9Tp1LgnNEjQit3hAfUVNT9TXl1yIm
KUYS4+tYbfA1sXfb9P/V+5w6lzr3Tut2igk74yNqKtWDbNCrztzQ3q3zVvDP
lK+lcvLd859y/+eJtSx4Vei55r0pfhO5MaVX+rjTu3Xe6ph0+lqqF3gi/4sa
1LWc0tuUDqfG36BFeh87uXEbk2he1Xkr6qUzzzu55d3jp/D/lC936m2KqVLj
d/YFnX4xxY2pv29gWuF9uqYq+9XpiWJPpzT89rPitz03aIvOnyl+0zopaqST
G4XmTzGtYPXKvqfqpTPPdd1V9mWb/ld+27OTRafG1yyh67GT/cQeCc7UDN+5
v50cLnqBDb7T6Ucb9P/k7xtYVNej4NLOXN3AfpqdhD5Xrpti2ilG7fT0Tn+c
8vQKe0/pf+pdUMGiU4ydYhjNvZ1jTrG60GeRP0KfNzBqqpa1P6ZYIpUDT9H/
bXw71S9UuFSPP9ULTLF6p79PsavoHTrzpJOFUjks4vN0/T/5DX/NtxtYRWu1
5mTdv3SuaxvjaX3W+5gaX/h7595pnjz5+zb936BRG/Rnil01a01pkfZTHR/N
9nofU/Wl1673rpMnT8Z8ov4LjRKevm2vda+kGSalFVoTtN5OedkG3RNrF0wi
+Ce1rsr7llP6LzRK8Gdn75DKecHegvd0nHVMRB528q3g+U4NF3UnvFXz5O37
llP6v0039Nw2MF4nS2tt2RCTDf6lmeEpHqd1dfNnb9+xnNJ//fw3VY9T3CsY
b0orUj4o6kswYad/TXn0No8T+iD6CP3ZE8beoP/a9/W+65pKMV7FO4QWpbgx
NedOnREa3unRnZyjfaRzfP3ZJ/L/1N5pBhC+v7l2Un9PeaLOmdR8OvNqijeE
x6W8PjVPwTyV+Dyd/8XeVfJT9ykiJ3XtCM3XOqP3PaWBGzy6M090LXTuu87/
FPNv0/9UHU15umbyDbUzxYei9vV6U5rc6dFT9SJqYYrhRf4LXd2g/yfPf7Wu
dvYdmgFE7ehxRI1oD0r5glhLyjt0vWh/1HHQfnr79xNd3cz/Yl+Ep6fmnGKA
bb2DqP0pThbzEXrVqVGVfNYeKpi8k+Uq13oi/6fyR+yjyPlO3tO8ob1YeJ/Q
/848Eewh9r2T7VM1O8Vylfnf/n7yNv6/vf+j9zGVb5pdhZZqzU/Vkaj3Ti1N
9Swpf9GMJHRPs0Gntt/O//bfT3wK/2vN0XtXydWpOIj5pHxBaEvKO6b8RTCA
9rLOuW3wFM2xlffnt/F/ikM2MHyqjnQchDdNcabYa60JnR6tfbmzB9ngv9pP
b7m98u9kbdD/ihcIbtH5r71mSrs6ObOzj5jiRh1bzSqahzv9V2j47d4Jzdym
/5V//1ezk6hlzS1au3RdVOLZ2e+IOAse6Jyz0NKU73R6a8p3TrS30jtM6f/J
3DRvC5YW10rVtc5h4RcpL+hkRaHVgh/0vk/lg/b9VD6cHFf+zfTN3/9N8b9g
Cc1auo/Q+Zwac4rr9Jgih1P6rxlD10uK1YWPpOr35JyP0/s/lecanV6Qyh+h
LbqvSY2pWVfwdifHihhuYGDtZVP7m1rvrW6/e/xvPEURTg==
         "], {{0, 128}, {128,
          0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "966655073"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "\[Rule]", "0.16156433522701263`"}], ",", 
      RowBox[{"4", "\[Rule]", "0.8374935984611511`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzVnb/qLVtWhS8KYiImQoOZqaHm96K5SRua9BW6o9aGNhAzwZfQXOiHEGOf
wEBDMRMxNBNvg8I2WDhGf+NbVSfYhzo/atdea645x5+5atf+rT/+yfd/9Etf
ffXVn/3qd/98/9s//72f/vTbv/jDX/n5f3747Y9/93d+/MvfHf7l/7x+fvyT
3/7Nb/7tN/7663/45z/65gff+97Xv/8Hv/7NP/7Hz74+HX+ef3pvcs7pfHsM
xnvJcRKHt8U8Ob+N52qtjTwhYyPxtPOTrKOx1na+tdchx6v5Gut7Ouc///0H
X//dn/zaN//1V397PCYxSa5vjGGVh3bdreJsxHy1Xm3utXM0arYdmx3Dlc55
21rbsXpDLdhr3ebtdxbgm/99/fBf/vTrf/37n339N//0o//zWZ9//zw/mUty
/eSYjIHkg8HFp/icXm3+rGJOjk+f+znO0/nJWhtxI2MzYp7EgfgdY5ztWhv5
Zq+LXS/tWifre7r+6ZzT8Yk7Pj/38++f56/wPxkDyYfT3wkXJ+uSrNfps4yY
G7lN8s2I22m9yJgNXE3WNPE4bUyMtX5Djr0B88lat3o+qa/T8SpuJPeS9xo1
e8LVttd3Wpck5gmXGTG3c7ud+ypup/Vq1+hmvSQ50HpYIzdaHLuZY2/G/2St
W72axCTxvyvcJtiVvHdVs4m+sntHhKdIzO3cPmmYFYbY2u9mvRC/k8zXyI0E
x27m2Nu00Gqt2159UnenWltpzha7Wo5L5kt6vO14TrFd6ahkDEnM7dxu85xg
iKE/W21J6mXld8i6t7lB1tfIsS9FC616MqSnetpTI7id6JBWy7Uab1U7Ld6e
4tPu6a+0waqPRDRYsi5k/Lb+bN/b1gvxLG08VzjZ4tiKC9oce5sWasfWeuRW
n6ywjsS/ralVr2/Fua3+J3s35P5GoxYIpq34us3DVgMTrmzH2eawrRPaelxp
EpJj9p6aofNXsTrxRdLnWdWasf/S5mdb4y3nEixt/VGiDUiPq60FovNXfN3y
CJnviittj2PohJV2IpxOatCoX5uL7Z7PykMZmEzw/xf1tb/IehFvu4pzcg8S
Gf9NP5vkhl0jrW5vdeNNj0N0wko7EU1C+l12r8zgYoNzW71NOJ1g8ko7rTDW
wJaVTjvlZ/L9L4KHN/1s6ztu9vSIbmzHv9IhrU4g2oloEqI9Ws5aadqb+ifh
3JV/STid9DRWdb3CWIN/289K4kz6ePZ9BSs+TfKzxVjSE1v5vmT8hg5JdAKJ
yWmOiSZpNSTREiQ/DVxace5KUyVrROZIfDTRnzf5l3BlEue2j3eay+q+AqOf
/1QP1u4pJXEgWojs69kxOfmC09xXXLzyGiTfbK1F7vFY5a3BEUSTrLiy5cfW
87b7IEl8SAwNjluNZ6UN3tx3bX0Eub4dE6LJCc7b/ep2/Ha/faXD27w1tIrN
NUYMP+PQ9uFX+E/4mui3tt7JeFY92Lf1XUm+EZ41YkLmuKrldo1abCTjIf2E
lSZZjbnVZna+3dQMhi+zj1udfMJz8p1B4tHIuhON146T4PNqf4T02cjLrs2V
3ye1bOwBET+V8F2i5VoMX/HFKt8IvpEYGv2um5ifjI3cv3FTRyWYQMZGsJrk
bYvbZK1XXnhVmwZu23tY7XuJl281SeslkzoiOmSFmSQmJIZGv+umzic925XP
Inl7EyvI9du6WN2nuuqXkvW6ieGJrjP2sG7W+GqNCK4SHWJzsb1H0Hol0js1
dD7RGAS7VjrqJlYYfdebxwZ23eTZBMOTWjD2sBLvaWu81RrZtbla01VM7L3g
9mXr/BX+r3SvsS4rrGjnYt9Pa+glgl0GnrcYTvpvZA+rrZEVF7QYksTNrs12
D7rl4jYmK29i8GDLcQYOr7CL+CaSJzc94IovVsdJLq34ruVBkrc3tQr5XJL/
raZNMKfFk1VtvmF9V17mqe+Nnl4rrGtzo9XVtmds+1SGnlnxC9GE7f0hJD9X
eN7mra1VyOcaeiypfeJBkmvavT5jfe3aN3SmrVVIbpzyhOhwwpUr/Cd6hvR8
TjFvuSDx7zdzj/Aj6eUSrbLqM68wYYW9hg5/8/reXDtjP9rWKnZu3PREBP9X
Oo2c32J78vdW29/MQ9KbavsSiVZpfVPrwQ2tstKZpP+fcOvN9SWvdu2eel7Q
27SK4dFWfvkp79aen2D+5/Hpd4JOmNbms5GHZB2T/nZ7/udnGc++u+lVicZL
rr/CT3t9Da9KsKiNG/H7N7VKso6rXF3xxRt8U/JZJ5xP1pQ865vsOxj82ObY
Taww9tRar9rq5GQ8bc68YX1XftbWhO36Jv70plYhudeen/gs4lNu+qZWJxj+
Jfl7kntJHq501Nuwgmj4lVdtdTLReLYeW61vghvkuUk3Y3W6fvLMf0OrkNxr
z2+1xwqrDd9ENMDKv6zWLukvrXLS1o0tVhj9lpV+JnzX1uNKj63WN6lNsr9D
xtPGqsWB9nzDC6/8uK2lyTWJHzT0EskrgvknbCT7zqu5GFjR9lRJPtv3Xaww
jayF/Zvjp5h8nr/a33lKH34p926tMP+p49U9Lavn9Bo5k2B+i+Hte438J1ix
8rB2Pba6nWCarZ2I3yGa2cbbm/pwlScJX698txGrVZzbOJzG3/pNu694+qzT
dZL1+jyn3Quw+8krzCccsarH5BwDt1dYdHN97fG8QR+SXCKeJdFXRIe0sXrq
HsXTmInfTNbL6P8k/Zx27glO3vwdExvzSb8l6Se0vmalUQkW3VxfgierOdr6
kORS61XbmjL8Y7vP2Pa0V97KOF5xE8FGQxu0sV1x31OY347npu5NMK3Fopvr
29ZmO57k7zf1IcltQzO0Odkef46ZcEHbl2jr1OhB3eQmo4fQehyCh6sasfuZ
JK9WunelK1ZxJpjQXtMYz019SPo/ba7e7JWt9ijbcwhGJbrF3gsm3GT7F6OW
jVyydT7Jq6cw53RNI85kXq2mNcZj68N27isfYffK2v3llcZuef//67+m/b22
19fyTnuO4V9u5vPqXn1D57fzNXpHhpYj+bbKVdub2DVINOFN/270ylb9QHLc
7m+S+J/mm3B0wjvty/AvT+Vzm0stRhmYfNPvr7Rckj9tnNv32h7QqLUkbxNN
2OL2Ta5cXSe5Jun/r7Cl7Xu391TcXMc2P9tjI5+NdV9pp5UmJ/5oxZWE45Kx
Je8lmrBda7seT59LntNl+PdVr8zA/8/4rLggGWerY0/rm6y1vY6nz038S4v5
q3wmudTiSTvOVuuSvCI4fFPLkXGucK/lTQNXVznf1rj9vOgkhu11CD6Tfd5V
HibeucXVN3yXIYlzu7ey0r0Gvq3GmWjyp3iwXaNV/InfX2lUwnc3v9dPsHe1
/0h4k9RvEhNjn5doAOJ/E94nPRZSU6fz298dSHLAyCVSj6v8MfjFwOGkro0x
tBhoaMu2V9liqTH31r+3+49GDElMkr5Ku89LvFW7Lm0+t+tIdOOJp8jvDrQ8
aORSixttfhr9VZsHVz7R9mVJ/qy0ZTvf1ff627m3nqXdf7RjSGJC+KvNGVIX
BG8Tnd96nIRfjPVtsc7AogQ3Wmw5/f2pZ0cTHiRazvBlSf4kNb7ibhIT+zjx
Hcn+o+GjV3siLYa0vHaq99azt72gZDynfovxrB4yX1vrrnqnBne342z5xeBB
gjMGH7UYm+gHwt2k72Eft5o/wTeiH1r9s8LSlgtWupf0glqd2Y6H1Hg735ta
l/QNVn2/U2yJdlrhTIuTbQ3e/F0G22+2n9Xm21PfnVnxfnKdlf5psXTV52x1
r+3j2jpd6bcWT8j+V5ufLXcQ3l/hw+rY9jUtdrW5kWCL4T1XPpfEs70XMen3
PoUnRMOscjXBEEPn215vxR1k/3r1vYYkziQf2nVMeH+lB96G/wa/G/p8xU32
ONt4fo6h5YL2vg5bo9q5Tfws8SlkfYnXIzVL7udZ5U97vtH7NbQQ0SRvwP/W
U7f8nuyH2rpolbereid6Pvm7gatGv530YQxN2F6n7UG1Xo/0wcj32W/iMMkf
uw9gX9PgAuJrVlq35SC7v03y1vYRSe2f9lNO56xw1f7+bzu2pJ/T5uTqOu1a
n7zeyce1fbmWO4gOX/VIk/wh9fXUM2lv+oKVr1ndT9Jib6uHCcaecumm/z3N
i3x3JolnogGMPTvCR0kOr/SM0f9J1v0Uc6NnYtSO0SdZ8UvLjwYm2L5gpVtI
L6jNn5MWOtVIshaJ7jJqiuxlkzpNsKXF1RO/kOsQPiLxMfZVSY2cYts+522V
q8a9EE/ta9v8aPDsigvIGpFxtvnT9h/amLc4b/chb3qxJGdWuNpqcoP7Vnsx
do2crt9qoRU+2Pl8c197tSd1k2dX+wUrTbvSSy3OG+O3/ddNnm05kXCBrZlX
3JfkQ5tXbaxWWJRwYjKX5L3Ja5XPpH/Y8sjbnknbzsXu4bf1sur/JDFcjb/F
+XbMN3nWwNI2/ivNvJrXSksYGobcG3Czb7/ia9LjIjhwGgPZk1rphAQrjP0C
e8wrXW2M3+hPruZOPLjBETfXZdVjaXWyMcckx8ga2X37FV8T/7jKMXKvlDH+
tr+64mXj/pz2s1bjJP0losmNPjDx4AZHGMdP8bjRv3oKt9vrtHFbefw2Dw3s
Oun8ZH/EwN72+ja/G/fDr7SE/VvPhvZY5TzRBoQjbj5H6CaPk7xdzZHgNuFB
49XWQqKxV9h1+tw3PJPWwH+ii1ac1Z7faom2d7fCGUPPr/ChzYG2F0FykuzT
GT0ZwsVkL3LlX1YYaxy3fQM7JslnkTWyPVH7uYSv7T5eMuZkPKe6a7WfodmI
R1jlXoIDp889ndNyQdtTNby/se9/0pBkjqROW9wjMby5f2TEZDWeFscIX7dc
s9JFdh8v6WO0fLqKA8Fk4hFI7rV9IaKTEy5uP5dg+Or+vYQTjf39p45Jr4/0
PW7yiDEektutNiZcY8Q84ayVVllxih0Hwo8k9xK8Ilr3hHunfZl2T41ojzaG
iT8iWvSpextWmJZwN+njPcUjq/GsNBXBFoKHxj0qSW+NaBLCKa13MDB5xRGr
GCZYeho/eY4QyQcyR7vvbfDsG36755T/bc+B7JUQ3E44mng6outu7hve5Bqi
c5LYGhhic27bq1/5l6dimKz7qkYI/hvakvBsq8Pb/Zc2b4mPO83R+N4W0WbG
85Fa/iIYm9SyzTUGLhl945ucu5pj618Sr2HEcNU7tZ8LbWjLFc+e3rvac0/y
9oSNBCdXvX3bVyYcl9RXEp+2F0diuNLzhNfauCXxJN7Z4Fwyx5XPItdc9R/a
3mmb80kMSW22PYo2Vwk/kj33U8wT7kj4KFlf4mfJ30leEVwlPUniYY3rEJ4i
2r6tHeITb3KuUSN2DFd9hjY3khi23Nr2BOx9hASTyZ5764mSeBp6g9RO4itX
epj05Qj+t5pn1Ysg/c9Wo5LeI/GJNucaNWLwV6L32j4D6bkRrdVyLuHTVa8s
yeHTK/ntntZDkR7XTR1F6suo8RX+J+u+eiXrS+q0rf3PfCb6lvjuFZ+23LrS
z6vcbr+LbeSD8bmr/SzSK1v5KYJRbZ4bvLnC2La+jBo3dKDtN406XWEd2Wds
42DwKdFOJIdJbhs4Y9TmSmsZ9xYm2E781OrepORFOHSltVbeJMk3UuO2Dlz5
TbtOV/mz2sM1uKPlEZuX7Rpf6UzD75C4EY3xObbTdVa4sbo3aaUtydhWGGto
qnbdjVpYec+bXo/g1Wn8N/dwb3oQm5cN//iG2mzHsIp5EudkD4uMf6VdV3p+
lTMtxhqaiuShjaun9z51DxvxLMk5bdzI+q68ko2rJH9WcVj5vlVsSdxaXGr3
bdvnEtt91JWet7k7OX+lqdrxtL7AwNXTZ9n3sNn5eZqLsYe78ko2rhqarY1D
mxtP+Z02boTLTlrr8/wVFq1y4Ck9317H1lSJBr7pu21taeCG4fGNvlzim1qv
tOKXm5qNxMHQnzf9jlG/p/G3PZ8Wf9ocWD17jWC4ce8H0cxJ3+k0RyP3DG1J
dODN/lu7FqR+2z0awn0EVw3NRtbC0BK237H7JIkXMHr+pI+a6JxVPqw04UpT
vTnnV70Lcg8b4XfCcbb3aT83OU56Au28SJ6vfBzRhG3f2PA79rOFE/xM8N/A
29N42p5wq+dXnt3QVF9Kzif9qITfE64nuoLkIcF/Y992hfmGxmgxh/i4Vnus
+jMrDb+KFfne1iqvVvz+VC0T/FxpKoIDN3OecOVJb5z2ocgY7HtF2t6L/azI
mz2ulT4nGiPRqKv+zNt8PdFRq7w6xbPl93a+Ri0b+EnqtB2PnfOr957yM8nn
lptWdUrWheg9ontJrIxcXflxg1++FF9/inmio4iuSHT+KubJOcZ9Xyv8JLlE
9I+R82SOyVyS70wRfCZ1Svb+SK0l+bnydIbmaa/Z5s+KX74UX0901ErrEg1p
7GsbtbzCUlKnq3Gu+sxE7yVjS+orwfOntOJK4yVja3n/5n0shB/beRG9urqv
4CmvlOioxEev1mKlz1d4ZdQv4bKbOJOshaEnV/XbzmtVp0TD2Hu4tqd7w/Fq
TVv+amuf6KW2dlY9z8QLEG1JtAfhaLuWWyw1OMX2U0RP2ri0uv9npRXJfaqt
3rupkYw8XOVq258xfHFSL4ZXIj3PFicNbWBom2SOpJZXPdXV/QM3vwd30x8R
7bS6VyfRiuT+ijY/jT6GzXdGriZrmvw9wSX7eRF2rSVjW/kLw/MSvGox5FTL
xr0uq7GtMOcN/mjVazI0Q1I77f7aSsO08Tm9d8V37XGSq0/hpHGdN/h6kv+t
RjW0TTu2Uy6dziG/C9/OpR1bwlPJOrb6883fw13VS+t/T/E/rVGrD4lHNnpx
SR62mP+GdSdetY3/U77e3ots+/mttmnzxNAJBEvJ+E91tPr936f80QqXSL0Q
LjhphvY76SuPbONbgufknJvrvtrLI70p29fbe5EkV8n5trdKOOumZlthV4u9
hj8ycIlw00oXkZ5MUsurHinBh8TvtMckV9t1P60L8aq2nyJeycb2NlfJsaEN
VvrZ0GxJjhHtsdLkSS0buus0x4Sbnjpu45zUV3sOGX/id9pjwpvJuq907wpL
E6ywn4FAsL3tzxj4T7RBohNW+mo1lzfg1cofrXRUEsPk7/bxCmeSumvXoh1/
okWT43bd2/U1sLrVMK2farVlq4EJtrf9GYMLCLYk92Yk3nDlg1a1aePVysvc
7AW1/can7mNsfZNx3GpO24OsenEktwkvr3oItiYkeJXMceULSM4kvUrCKa0P
aj/LxqjVPVornG9xqY1hMmaiT8je3E0NQDii7QOs/J0xZqNXdrq+4TtW6956
gWSOxBes4v/5ap8bZtQL4foVRrV4dVPXkXUnvc2TT2xj2NYF4cGb3wFM6pes
l+1bVzxFcLvVz6t8MPQSWfen4t/mhu0rSdwIF7R4RWK1Ojb0TPL35H4MwvWn
65xiS7ipxaLTGIwaMXzrCq+IlyT5mcQ8yc+VXlr13G7Gf9VLXPnKVv8kn9vu
cRN+Jzlg7EEQrm/x/+Qf2x5+2/85jTOp/YTfDU5vOWXFa4YHIfNqY0Xymdzz
lmBXm9sE90j8V9p75SuTcbZ9+BXGGl6P6LoVn658QbLWq3tNW62S5M9K9656
LwavrcZpPJNk1edf5ZK9l93iM8GBFntX/YRWJxOd0MatPV71MZJzSI+C1GCr
o9pcautu5R2ItrRxcuUXyP1ITz2ThOhhwsWrnCFzb3vFyVxaPkp8rqGRCOaT
HGjr4jTmFova/DmtdZJjdh9y5X1aTEv6PyutSLyn4R1WvGZ4nNV7DUww+ht2
rz4ZfzKvFYYTj0A87yqvEr+cHJ+uY/jrVvfafUiilwimJe9t43zz+GbPnGDg
KobGvQcrHU5yzO7VE8xParDFcBLnlUayY5hwQZKfK3/9+WqfjWbjP8HSFtOS
Oba5R+p0tQd38zneN2P4Ni3R8ksbnzaG5JlRqxpP4mN4vZUfXMUwqd8TJie4
vcr50/XbGiexanPD8HorbGzr1LivkmizFQYmedViBdHbKy3RvjeJSfsia2Tg
v+2FVxqp5aM2hp+fm+ztGhrb5tC2Blf4TLijjY8RZ9IPvHmPygoD7XESvjb6
MCSXVuuy8lBtj9ruWbU6isS8HdtKk6809lMcusrzlbZfYeAKez/H3N5/lWg/
I7dv9qKJniR1R/owNzVti9srL996mVXPKsn5ViOt+qhtvhHvvPJfNzmUYM4p
JobmTI5X2q/tExoekOwRGL1oo7dPtATpXxma1uYmstYtn674/fOa7Xd8VnEz
+o2tLyD5YHCosbdia6eEBwkfJZhvfAeEjJngYeuXWywiGHL63JXOabmVxI1w
E1l3gqVGT4PoMSNutgZudYvNocY96rZ2anlwpbfba7bvfdsewYqzSM/5Kd/6
VNxuHrf1TvYs7P3lm7GynwFoc6hRU0RXPOUlWx2V9PNP1zm9d6VhSN0RHCPr
deKCdi4r3/pU3G4e23x3WtM33Gt9M1Zfyn7cKucTvUe0xFM6sMWrFvfsHFv9
DsXKGyZrnWCIfT+tHbe2h3nz+eSk9o343zw2vEySMyTnCSYYz4lqsdHWS8bz
2wnu2TxFPA7BfIIhK+9p+2ISt8T/tpyS7E8ZfNfWO1mvVUzsWJH8SXKD7Mcl
sW3jQGr5pl5K5mj0WwhHGPvstk9p15FoGNKPWnEu0UKn9xLcO/UYSf4k+G94
2FVMbsZqpTdIX7HN1eR5ES0XkFo29FLbtyf9lta/rHLM6PGSOCQ6J8ETw5sY
nJvkQPL3U96Sc1b5Y3vYtpYJ5q9iZWhFgv8399ZXtfyUXiK10OLSqse14h2j
H0Kwrv0swuM3NQDBfHKcxJasRXLNm8/hWb13Na/V/mnbJyH8teJu4kdWeilZ
6xafW1xqdW+SY4R37H0uoutWGsbWZq0GaHXpah8zwYQ36IfTeNqYtHt/q3sF
E12R1H6CFaT/dsKBm8/iWOVGmydtr8nApdU6tlxDfBzhixb/iYYhmGZ4E9KL
IH2Aky8mOWnoh3afMdGESf63sbqphZJxtjWSnJPk502tldQm8W6t5jdwabWO
T3Ex8SArDbP6rDYfiC845QnxEe34VzjT6gfyHJ5Vb4pw600tZM/9xH3tPulK
a7W/d0D2c1vNf1Pbr3jz5j0wrR8h3Nd65xWOkXU85TnpSSbzJf3YlX5o8fBm
LbQ4bGuhdgyruRv7R4nWanPSxu2ntD1ZO/u7IYb2IFrFwA07N1rMIdhuYDiJ
581e3+r5eyvf164j8UTt3D9fq/0jopFI7dh5bmh7snZtjay4mPCX4VlWmGzk
BsmlFttXHL1ao5WHauuurYVWtxs5k4xhlfPtvsnb6tGIz01tf1NDGp665a+3
PaNgxV8r/D/V3Qrzb/rKlYdq647UAtn7MLgy0QCGz0q4+6l6XF3H/k1GQxMa
+E/inOiudmztfSA3f++AfNYKG1fnG74ywaX2eOURCBeQ2Bpcmfh3olEJLxj1
aNR1iz8rbfwG/CcxTHTXyTMmMU/0RpufySvhL9JDILVmn0/yauUlV3Mk+L/q
IT/FlYS/bvL4zVebe8l7W238BvwnMSS65YSfCS+s6qsd8+fc22ehtJrtKV4w
7ochPSXClUmtrfCf5L/BlXYO2NexjxNd2mJRoo0Jlq7wf4XhRIMlPbdT/El8
bubnCjdsXlj5dOIlW61IdOYK/9/Q337qvj7jOk/dK5LE08CilX5uOc7QnK2/
I+Nf8Z39HdWVfjP0P8FeonNsv2P7gjaXWh5suTKZ++m9K/4l10mw17hXJMlt
A4tW+tnQ7ba/s/Uw4TuSnyuNtLq+7SnsPsnNumixd8WbhCvtntUqrwiPE4+2
+twVFtn5aWinlb97Sg8TniU6s9VIZE95FU87t431NeqCeNWb/W2jZ2VrvyRW
nzFvuWC1V/vfw+3CGw==
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "411613899"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.08185692876577377`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.918143093585968`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztnb+q71cRxQ8K4huIVYhvoLZyDraWsUl7BW0MRG6KYKGkSuGjiD6A2FjY
CrYWlj6ClsEEFM4tdpjFzNrz2b89xQ2Tw7m/3/7OnzVrrz37e9//2ccf/OIb
T09Pn3z7y/988ObTH799++bXP/3WV//z8zcf/fAHH33zS/Oz//35yv7Hx796
+c5ff//8vff//Pz0xe9+9O+//ef5wz/8/Vn9+cqO/H7ku1a2+vvqZzrW43h2
Rywca3bHqOpZuj4nU2tVuerwrWM97hqvwkNHHKs+v+oZP/vLL1/++ZufvPzx
+5+8VK2BjI2OPMzE+rX/M7FwrLnKjjy7I0929qOIHYl1VbwyvnX0RDcXdXDg
qjhmYqdiQlX/Xa3BkVdubHTkbaqOnp5e/v/n89/+6/nDL96+/Om9775jR2Lh
6HER/6u5sXr2d7539fOiPuLoRxFfvf79VaxfP7ulpwd8W4UhGW7p+P0M3mbi
mNmPRDDBvV9YPZf6vDL2FmFjVS1beEvgGSO2ihuhdQZivfqzilHEDzJnC/SR
qs+J4Ko7jhYe4uBRAb+tcLXq99X1R7AuYmcwP4P/GT4W8WdVP6rC/0gdRfpU
iCMtajPDW2j4n+Ehy3wQuUFqnx6Ikfo5Kq464uiIaWZ/V9WDMnsZ954uE8eq
PVoIbwNYl+lN8nqK9tFV2BiJSyQWmZxf8RYC/kdipK5BxajMfl/1f2RfL/cg
Qxxl3FD9Ke7vMvv9DCfM+EHd07njWMUlqn6/KrdV33bhv8qvHLpohD/b8V+M
UVVvVes90jcjn+/WMKtyNcWBRczJrFnt6V3nVple4Ob/Drx16IrqelI5uRH/
q3iLig87+1oVbtjXkOibXRpmZq+0s4c6tA5Hz81oXBlNo8onKs5kNAEVQzK8
N+KTDM7vxP8q3pKZdal6lqr+XsUP3Wtwc4lInVZpZV091MH/Mz23Cv8zZ0Y7
93ERHliVS1V724y+lIrpRvyP8BY1do68qurvDn7oWEME/y1nWCIH24n/BP4f
ibXqQ8sZh/j7jn1c5PMdmJ/Z21bVQmovYMZ/lbeEtAjzvjLT3+W4JPh/FV4t
+67hfLaK85D7eFV9RfLcgv+B783MiDrwv4sTqnvbTE/M6HXuWGR4yypGar9z
x7pqz5XBtMwayvaMRRzG8fttfdys/+/UfzJ21TlR1T7OzQkzHLVK/1dxxu0f
Fbcz/W5nrDO1ULX/2lmbXfv6Lp5W1ccd/N+t/1TNYKj7TTf+d/H/jK3mbeqM
ZqP+k8lbAv9XdQM1RmWYUKRdOzgMwbb0cbP+79B/MrMZqh924n9XTqp+Tp2d
Jc5o3JgZ2qeIz0vg/+r+KxKjDP6//ruO95s5OAzBdvfxqvpy6D+rnFl9zmr9
qT1Fk463M69Wfs7Mo6rcrGvPXpUDNP4fea7IudjqudQ1LOsxUJtVHNi9lzyx
jzv4fxVvzPw8w3UddUrghKrfMn9Xrtmm/qhqC6fw/yrNpGrNkfqt4rSRHncK
/rv7eFVPrNJ/VD5fxXXdnJPACbt4i7wP3YiZVVoxmf9ndJWde2EV6yLrXK35
FP3H0ccd8SVrbpF9qJtzqvtcQu45ajyzx3dgplo7Drzd6X8VH9x74Yzf1Hid
WF9Vfdwd3yr9h+xPN/4T/LOTt0Q4CYH/R+JyIv/PYMhOLqRqQRH+f4qd6eOZ
XuBYJyEWXXWq6iGE3HNzPBWXdvL/2+Z/du7fQ1wooe3fUEepOR9DTpL1H0Kd
7tSaCLba79R8duTDbfM/hFk4eT0Lbk/jmTv7eNm/u3qB/tNVpwROSPDzzvnz
qricyP9VrNi5/8rkxmo9q88k1IKljwd630599RT9p6tOCZwQkbcb588d+UDj
FSH/B9ZGeBdi1ZzPFfgf6QUb+/sp+k9XnUY0T4J/3Hmr4pLbP+oaaLyiqh53
6pOqfzLrJ9SCvY4Se2rH+S9Z/yHo/7fN/6h+3pk/oTUEvpfG/yP1iN4LJ843
HxX/q/bUjv5+iv5D4/83nP/KXG7mf7Y8V4Zj27mQeB5E45ldcayKu6OnE/CN
wP/d+2uCrfIWNz+JrPOG+Z+quLi50LJeDtEZdsZR/bmjb54Sl646JXBCgp8J
8+dyfR3I/zN7rq75nwguhTANgDNdfFWtKQf+k+OC1jwB/nHjKmH+PJMPNF6R
4WOZGNlroQjfCLWws1dm/JnJyVP0H5r+T/OPG/8J8+eZfKDxCvW5CPcvZD6/
Uceg2SquZvZ6N+g/BP3/tvmfCMYS3v+fwRMa/4/Ue9f9CxX/d+oYNDuEq4n9
dVVOnqL/0Pj/bee/Ks64/RPiyYEcoPF/td537t9DXCijGQJwxp2f6r97qPYC
d73TcGnmf/bzFgJmVu2Lyfw/paUYcFXltKpm+Ej4r549qbldVV+n6D9ddUrg
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
fDvv/xnb0bsJ+Ebj/496/qvy+S7MDOnkD6T/h/w88z9jF/VuWr8m8P+d+gbB
z+T58yreS8OuKj/P/M/YKr6R9Z+uOr0tnzOcc+Z/fHlOu39BqM2x98SOEK+u
Or0tn1W9q2v+vIr30rAr49vR/8d24BshXjT9n+Yft59p8+dqPpyCXas10O5f
EGpz7NrYkfUfgv5/w/xPBPMJ8+chPepw/T+ytnn//9ju3k3ANxr/v/n8V43F
Tv5/+vyPfP4S8MPo/2NX5RttnTP/w/HzvP+nFkvJ9y8ItTn2nnwj9OuuOr0t
nzPcfuZ/fP6n3b8g1ObYe2JHiFdXnd6Wzyq3V+PSlQ+nYFfVnmv4/9hV+EaI
F03/p/nH7Wfa/LmaD6dgV2bPNfM/Y1fhG03/Iej/M//DmT8P4eEF+n/X/QtC
bY69p3cT8I3G/284/yXPn4f2KQ+q/xPuXxBqc2xf76b1awL/36lvE/wcqWvC
+/8faf4n8lyE+xeE2hy7tneT9Z+uOr0tn2X9uak/Rr7rRP6vPheBv9F66Ni1
sSPEq6tOb8tnVe/qwkx1DadgV8a38/6fsR34RogXTf+n+cftZ9r8uZoPp2BX
htvP/M/YVfhG038I+v/N8z8q5yTw/9P1/4yfZ/5n7KreTcA3Gv+/4fxX5Zwz
/7PpuQD3Lwi1Ofb+eqetc+Z/fLVMnj+v0r1p2JXx7ej/YzvqndCvu+r0tnxW
+WfX/HmV7k3DrtUaaPcvCLU59p7YEeLVVae35XME8wnz51W6Nw27Ij58bc/7
/8d24xshXjT9n+YfN/6ruOT2j7qGU7BLPn8B6JO0Hjp2Ht9o+g9B/79t/kf1
87z/Z089ntKzbuBLp9un6D80/n/D+a/MRWf+Z8tzZfYIhJwh4MnYX5//tH5N
4P9d+2uanwnz51X7Dhp2Ve25hv+PreIbWf/pqtPb8jnEqwHz51X7Dhp2ZfZc
M/8ztiN2hHh11elt+Rzi1YD586p9Bw27VL2x6/4FoTbH3s83yH1qp/5P848b
/2nz52o+nIJd6v6r6/4FoTbH3sM3CPEi6P+3zf9E6prw/v/M+S8NuyKYT7h/
QajNsff0bgK+0fi/A9/+CxF68wE=
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "554163154"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[Rule]", "0.005032170098274946`"}], ",", 
      RowBox[{"2", "\[Rule]", "0.9946095943450928`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzNmr3KrttVhjcqIQpim9ZSsBAFy7XMKcQj2EJsDAixkKCI4hEIHo+lrY2F
pY2V2NjauAMWq5l4XVz3+NYuVnj3y/M975xjjnH/zfz2n/z5T/70V7755pu/
+OF3//OTb//yxz//+be/+OMf/PI/fvrtz/7g93/2q999/Nv/+/fLz//00x9+
/s1/+LdPP/rXX3z+8vPv/s2fffqN//m7T//51//46fVM+dsvn3l9tr97vZ6L
95T322fIb12ce9n79+37VR1W53UxF6szuuiNVQ1X5746l+vffT3/z//9O5//
8D9+8PnX//33Pn1HB5//v39fPm//9st/X66HfP/63ev1XDxz8bfkneTz6tzt
+8nzX+v7VR3s96Qmq7mw9V/1uX3Pap2l/8k6Vxh1/bx9z4tfyN7J3375/a/9
6L8+/f2//Pjzb/3RX2k+Leu5+FzWYGf8VQfyj5wLeYa8367T/m75/iOfsWe0
mouyhtd7Sk++3rNaZ+mx1z+LkwSjyu/a58l7CF6R8yJ9+/pdi3t2Pfa3yOcv
309mmfytrRvZ45fPFGx5vYe8k9Th9Z7V9x/5+bUvi592LsoaSF8RDCG/a79f
zSlZm8VJ8v01zpd/34daWd1I1nOBCeU9ZN7t39rzuvAdVh9aHCtz97U+v9bz
4v3iqe1ZE958PfOaR1v/ogfsnBJtTPb4eg8504LJ5XmSTRHOuqgV6VvbA7YO
15/tfu08Et24ym2KziH/CJeRuSP7uvi8WsNrjxeZVVlP0WDWExX+JVhhfX3p
B4LJK16we7f1t7WyGFi0xPfB+5PalpqUWhFOIb1aOPdVB4I51qNd63yyTuut
LniteD3rNV5rthhi+c7mrqu+Iv1stVbhBbse8lu2VmTvRO/ZWbvO/wumWR4h
9SmcS2ZkpTNJ7xUsLTlbWf9KExLsKrxP6k/whPztSp9b/1vwucx48YME8+0z
ZD02oyC1Inu351Lm7vpO0PJp0YSE71a4XWpuMy6rMSyOrfSwfY89I+sHyXus
Ti41XOnz8lvknSvdYrNuctYv3CD/iAYo+vD6rG0/f61sv+j2FdcXvVE+23yJ
7J3oMVJzuzZST5sn2DMi51XugEpv2PO1c209qf1di/lFM6w0J8FzwterNbz+
rc6azMu1r7c1KV7J1pnoilVmYjOElYa0+GNzeLsX28NFA6wyLoL55LfIM5bv
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
fotXFjeslyzzaLVT4eVyX2brsKobObtX71lNW3xB0WPFj6+0ZcmC7BrsrNks
9wJnbB5i9ZjFB9szq/yf+LWi92x+aGtbPOAqN7C/daHfyN6L/il1K56uzIXl
LzvvJWsteWnRadZ3kx6zXsn2rfWVpScJjtnfIlqXnKP1WeQcL3yi1cCrsyO9
ZO9l7GfrYS9yvNVMWQ9ucYngSflcONTqkNVsEr4mPWN1+0qbkf2Sfii1sj25
0gwr/LQ1KbrF5nLFDxKOsGdH6kbwufCRvV+7yPFI3cq52N6zPWm5rHAc2Yut
Q5lN0ieEK0sNSS/ZWSg5iZ0Ryy8r/3udJ5B3Wt1ie7L4QXK+r1mz+b/FhMJH
VgvZzO0iHyOcZXNUUh+rQ0r/l/zK+ppXz5PZJD1v+d1ieJlTy62rnNBiHTnT
wsu2fwp3kHeSWSA9aX2cxajCs+S87HwRPHl9f+GPLjz7ijssF1jPUvrf5m9F
I638vq2PnbtVHxYsIjxl/S/pn9cayHqsxy+9XXDY4sNq7xajVjxL+qdwLjlH
O7+kz21OXta5ynuJ3ljl3kWHrHKblce3GrjU2eZyKyyy7y/nZT316s7I9i3p
K7vmknGVvdu7PHsuNn94PWP5qPCsxSVSt6LnS55mvQzp85W/Ll7S9ueKc+16
Sp2txn49s8JPsobixQpuW06xfUtqYvmdnFfxjDYHuPa/xdPZfRG8tfhpccPW
1uYbVjutam5532ZWJTdY4dUKB8qaia4ouZbVBpbjyFmQXir6h8xX8chkL4QX
VpxC5ov87cr/Wp1v12l9k+XKok9WOH+ROdiaF51QeubCI1hvtfL1hcdtz9uM
2mLO63eJDlnVoWjjj+w9O/uWU6wfJ79lz4v0T3k/8cV2Fgo+r3KPFRYV3lzp
w7J+og+LRyj9bDNt24cFWyw+kLMmmsH6mtKHdu6Kblz13gV3WM61M1h40+qK
ch9nz4WswfbhSnuU7JTgm62zPUdypqXmdu6sx1/lS7ZvC9fYHnit0+LY6z32
7Mh5rbSr7cnSe8QDrnwN0Rh2v+R8L9Zj5876xBU2rnIMqxNITYhntP1gvcAF
75f62PlandfK31l9WPBqpRlsTS60q+1J8p4Lj2Z9Denzcg9Y8ny7HusBS4Zj
Oa7M4wvrSJ8XX0nOgvSD9QL2rMksk3oW/V94weo66+8s5pS/LTxLtL3V89b/
Fn6xGW/hVoI5hX+tPreelHDEBbZbf2fvQVacsrojsL5ylTlc6E9bt6IhLfdZ
/U9qu/KDNr+yf/v6THh2hcO29y6wyK7fYnjRxtZfE01Ivie9sZpB0nulr1YZ
e8mQLQ+SOtt9WUwo+nOlASw+k/4vHLf621X9SQ+QOlzgodUhRUuXObI6wXqH
on8sPlvusFhR6kmwnezd9pU9i9c6yfuLPrccV3jB1s1iVJmdwvtFrxatWPyg
rf9qBq1fK16m6NIVF1t8I/9I3WxvX+Qk17r0IvstZ2rPwvbeSpu9eslmRBYz
L+a6zI7li7Jmi4GFly/8e5lBgr32TO3dR9E8RYdczIjV0ra3VzmJ7Y2LDHyV
CZScymKI5XfSD2SWi06w/VPm+rWe4nFIfeyayW/ZebQ5c/HvljfLfYHFbbJ+
4oMsb5IzvZgRq6XLfUfJScjfWl164YUL31nvQ3DPaj/bnzbrs5hTtAGZa6vZ
VthFeq/k59fnfuHjikcmZ7TK4mxNLN4W/VB0gu3ngoe230oPv+pTOKvg1epe
0nLlKrcv3sf2pN1vmXGrV1c9WepMsG517mR2Su+tOKXkKjYrKD59pR+stl9l
FxYPLQ+uvKrVOcULkxkvPrfcnVn9YDG2nFfxNSWTLD1T3n/tZwlmknO353Kh
8Yq2XM2C7Y3i++z7rY4q2cVFjmFz7xWGW/wpZ7TyxQUPLY/YGtrzIr1K9JLN
JMt+V3W48LPWa7/WWbClzF3JBklN7Cxc5/m29yz/2v632FVyjOKnCoYTvXTR
AxcatdzH2f4hNSkZAjnrMtfkHMl8Ff127WdXWotgu8W6lcYrOsrOO+HHkgOX
nLP87bUOLJ7UYimpScGQ8p4LjXqtneza7BpIPYuXKdrjta+SRVz7WYvJNhci
536N/ysfceG1rcYrmQM5L7LO4sdfZ2r1bTlfO4+kJoWPive3evJCO9ncr8xU
wdui/8neyywTvWd7o2D7qrdtn6zw3+bnhLNsVra6r7E+qzxvdRTRpStOITxi
70pWvLPSDFaf2OdXmoTU2c4IwYdrDWC9GMEKgiFldiwvW/yxvWcxmcw+wW2C
4faMyF4svhUfUfQA2YvVt693knkpmGA5yOph+69oBuv97VxYnWk9xUtj2Bmx
3L3SACu/VuaL1JC8s+Qkdo8Xnnelk4svLlrU6sOCCVbnkH4rOaHVvau8ws6d
3YvNNy541mIm0TMWE4r2tj1DzrrsceXXSP1XGaZ9fnU3R7DxI3Pywt0W34o/
Xe3F+r6Se9jftXlv4RqiE0hPFo4jmfBrzRd6oOh20huWX6w+IdlL0fA2b7F9
W3Q+qaGdcbJHmweSO5evlUHZ3K9g8nW2TGpYNC3Zi80i7N+ueNxirNUYK79z
oQGKbi+zU/rf5hjX+7IzUrQleaflHaJzXj1fuK9gY5kFggPlHsr2ku0fgj8X
s2D5yOZsH8njpa+Id7AzWHRp0fkWq8vsXOioUofVHYddj9XGRTOs1rzCc8IR
pP6FN8va7B2fzRPsjJCc0J6v5ffSn6usj/QM0VEW/4v2I2sr2GVrYjMHMjsr
jbGqg73/fZ11WY/V5DbDWfGg1eEkO7K9YbGU4JVd28rbWu1X8ofitUsuYX+3
+KyC4Ss8t96krMdmCDZnIN8XHWI1BvmtkqXYcy/rWfkdi+dFk6zuaCxWWA9i
z7Gcb5n9wgvX+naVzVo/a7Gi9ACpT9EAFsNtrrvq81Ln6/WQtZUsZZXtkPXY
jL14io/MSIvmsTNIfpeco9076ZnitW32u5q1gttWe9u5sFrlIt+ws2Ax3J6L
1V0XmtDqhIJp9qxXWQd5Z+EXq4ssDli/Vrjeap5yvmT95fnVXBQfYe8+CscR
f3fd/0UL2f4s77caprx/xSlFC1nusDqKZA62Nyx3F71HZsTWvOCVnVmbkZY6
kzldeYGSXRQtUXyExdXCmyutVfp/da9h8YHovVJPwqfWU1hOKdqpYObKt5IZ
IfVfzaw908Iv1k8V/UnO4uJuboWfFqsLhtg6F+9M1mN5s2h+qxlsr9ocz3LH
ShNavWrvWUqfvM7O6p+VJ7LnuPKwNuN6rc32P8Eiq6tXXtjiucVJ0v/2/XbW
yIwTf22fsdxksfEilyB1s3u0XGw1v53xVc5jz936yoLPRTNbfimax3Ki1agF
Sy2GEOwq3EdqZX/L9q19T+GXskfbzyVTIjq55GmrGSRn93qnzdOK3rbzZTVz
yXnI2ghnvZ4v+Hxx11DOguzdYibpSetnLY7ZHit+0PJ+yRgtDpA1WH4peyQY
VeaaYGnBMZu92xmxnqJw07VXtf1Qetv6KYLz9vviiS50uz0X0jM2dyrrucaZ
4gcvsi/S86THysySOxq7R6up7HlZLlvdWRSNajWe1fYWHy68arn7IL1tNYDV
/CVnsFpi5RmLd7DazOZgK1xa5be2N1a61PZt0YpWz9ucbVVzi0tWJ6+43mqY
spfij0jNS6ZEnre4ZHnB5lq2V63WLZlM6Q07F+R5iwPkHO39AtEkJXe1Gq9o
e8uPZY4s1tk7l6JbiH6wXEzqVrje1tzqE+ud7Qzas7AYRfZlP5f8hHgNW3/b
Y4Q7bA1L35bsxXLxCm9LpmprYn/L9jzBopKblZ63etjqEKIBrDZY9Rt5v8W0
V/0t75d7HItjNru252szrnIXQPqfrKFw2eu3yNnZc7G9ZPtkNUfWI1vMtzqz
6J8yp4RTSm5mPXXhKfL8Su+VnKRwh50Rq5fsmZIZJzW0WmvFv3YNpJ+L5rGY
U87LYlT5/wZYjrOcUvSqxS6731XdCFbb97zqXHQOwV6rw0n9yRpsL73qU7yt
5Q6Cq/b7Uk/7uxdnWvi3aDmbRdtZsLkQOSNydra3i2cp94YWN4pWsbm6xQpb
t5V3WGEpwYFVdmFnn/Se5WjyTuuVVhrbzlfJc8jeSe/ZMy38WzSYzaIvsizy
HttjJSsgWEcwxHqEoqkuZp9gIHneaoZrD1J0Y9E/Kz9u58viSeHoorGtfy+f
7fmSPl/h+QX/Ws1m10bqU/RS6VXrQUgPl/uLcndTcjCrJQovWH4k/EX4pZz7
yieSdVq+e9Ww1I2szWJyySuK9rZYQdZG+tyubXVXuPJBlpeL5i8zZfuwrKHU
sOyl8JHVWoSXS59bvLXek3BTwdWVXyDcR/Cc9OfKaxBNW+7OLO7Z/LDMl+UC
iwOk5gVLr3MSy62W08lcFw4lPXzNQQRzyuwUPWYxza7NzojVKgUnbU1W+tnm
3rZnVr6DzGnpSTIvr9khz5T6lzpcZAXlrrlwB5kRsp7CEdbzWm1mcy17J1ue
ITW0PVbwxGIj2bu9+yMa+yITsHu5wPCSCZPeIzNiNY/ldJsx2jUX71beucoK
yrzbvyW1Xd01lPsUsq+V5lx5Z5t5lryr+CDbGwVvyX4vPLvtW4ufKwy3fsTO
l9VvREdZrrd4YjWJXUPRKqusoGR6pJdW3xcsLfrH9vzqHK13JjUhOsRigtV4
BEvJ2gjeWs1c6k/WULSWnZHr+ybLs+U915+tLirYtdIMJQcoa7Z+isz+6/uC
pVYXFV5YnaPl7os5IrOw6h+yX4uBJZMv2snqsVWu9ZH3TcQTlex0lUFdcBap
1cr/Wmy0WnS15pXXs/5x5W2Ld1ido52Fizkie7Q9abU0OXd7p0NqcpGxk72X
XMvy0QVGXeB/wRarbcq9gM3frCddrbNkJjY3vvB6dj2kr1aYU87Rnh2ZCztH
pMdsTSwWWY9jNUPJe+2M2/4suZbFujLvpX/sXkgPFJyxPW97o2gzO2sEJ4uu
JudSztfihs0HiA63mGP1QOG4ghXkvMiMWy9s87FVtlb6ufi7sl+iqazWsvrZ
emTSP6s9rriP6DFbH5uxW123whNS/+LfS9Z60Q8FJ0n/kLtUey9j+9n24Wtm
bR3sv4/EXtvPK69nZ5/UimCv7Q1SnzKnBP8vskSbz9sZJ1xW7oBsT5IzLbWy
GEW41XKo7QerN0hWUPjX+q+SyZM+JPUk6yd99ZqpC+wl/VZy2sJxlpdLX63m
scyO9R2230hvk95b4ZLtAXIu5e7Acvrrn82XSg5W+sHmVMVLFm4l+yVnUWaf
nC/hGvu3hIMs9lr+shhrcZvgOTmvogdWfnnlv+xnu/dXP5D6W79D+pnMHVlb
wdLX+1cagPRz2UvhYtJjFsOLxrZ7X+FY8bzF96140Hq0MhcXv2Uz0pKxk7zC
Pm+1h8VMq0Utz5JzLz1ptVbh8ZUXKHtcaZLShyvdTjSA9cIWSwtmWv1g/Zr1
fZZfVlmB5eiVJik5c8lb7NqKLrK8QNZv8zeLq2XGLW4QPiJzscLVC09E9k40
ifV3pa+K/rzgvpLLFX4ss1C858X9lM1g7b7sXZLVeKvM+UIjkVyr9K09I5tX
F/698Pu2bhe4SnjHPlPuccjslL6yfnw1a+SM7LmU7Iu8v+zd7qvcT1lfQOZr
xX22D0vmTDC5YJ2d5YL5xFdaDrJ4bnHDnoX10YWvCW7YGbRnbets8w2bo9q+
Kudrc4PieYtXJeuxdb7QHnaWC6ZZ7ivetuCMfQ/pH6JbbKZUdIjl0NfZlXks
ft9iXen58luvMyLnsqpb8dp2fle6yHLfSt/a3OxCPxBOLNqj8J3FNFJnokOs
H7S+g7zTcrfNDG3N7d6LFyt5MulDcr4lTyj6v2AO2W/Jb8k9ka1DyUuLLrIY
a9dp80bC3cVTFJ9lsWI11xcajGiPkpmQObI62Z4RwTTbnwXbrZYreWyZcYsn
Fj/J81aDFd9RMuHyfPHO9uxsvl3Waee6zLvNWi23lvcQT0H4rmgwe+9ZPPuK
I1Y6094d2z5c4Zj1UCt9UnyW7aVXbQu3Wn1O/rZowqIhV/me1TA2l7D3j+XO
qOTShGtIb5B+Xmlp0ocEo2wPW162mmHlrYqOtedScrCiTwr/2rkouqvoVatt
bK2ue6DorvLZesZV5lDmrnCl1VfWoxV9WLL34stWvmalQwiHWo64wN7iQUod
LC6ttMSrZ+y9QOF0Mqc2kyQ9YL0V6QGbOa/6yu7LzmP5Z/dFcNjymuWU1zst
/q9+t+jDonNWetLO5sr7W72x8hpWt5D5JdxXNNvq3Aun23O0eUKZnYLJF321
yhsJJqy85MqHEi6w/muVdZAZJ79L+qdgKXnG7rfgueXNgr2lt0l9LI+X3MD2
BtE29txX3G0xgZxF8YmrTGbVV+V8iw6x6yma0Posu0eL7aWGK49PMquV1rV6
oPztamYJPpRZs3xtZ5BgoD0Lkhna/a7y9qIbybmv9Pz1PXuZ35IJF14mfWs1
4eq8Vt6ZcFnJtSznkjkiPUPmzma/JRMuut1mm6Q/LQ4TzWB7ya5n1YcWk60P
JXUjvV1m/CP1vP1sa1Jm3L7fZvJlXsrdn12z1Q8Xuqj4F4vnZQbLTNm8wmbF
NgMsfLrCN9uHVkfZupVZKBxUPIvFpWs9v9KuZY+Ei4lms/nAdV5XfJn1jNbP
Wl1U/EvZo53B19nZTLvU0ObtK7y9yIuI9itZpf2+6AqrGVZaruSoq3WuPq+w
d5UxWj4iPWOxd9Vj1v/aOhe+tjhsua/oOoL5lssuZtn6JputlXtqy3HkjD7y
jtX6MtsbRctZvVTuNC8+Wx96rWHsfNm6rfI6qwOtfi6ZqtXk5KzJ9zZXtM9b
/C9e23ofgpOr+lv9vNI25fmibSzfrfjxwiNYH3qt+S3PWr9mudX2ScHPco9A
akXWaTFqdb5kDWRfH6lbbMZoa/iR2tXuq/As4SaSA9jnrVa38245mtSneOTC
oR85X5ZnLedaLis9tvJuVi+VXLTof9IPZO5sXmT98rVWKfkD6f8L7Wq5YDXj
5LdWfo30T8n6VlmE1QnFF5C92H4os/PqDVv/ohVJ71l9tcIT0jNWQ9reKBkO
6SWrK0qPrXBslTOQs7b9TzCH7PGCH21WVnyZ1bok67Ozb+fXegTLp+V3y3yR
3ib9U/SY7R+raYs2Lt+v/KDFt5UOJL9r7zhWHF080ep+rfBd0QYrfiS8f8E7
hRcsVths1uI8OcfSV5YXbA1XWE32e+33V/hvs4KV17B+h/S55WWrAUj97foJ
j6wyKOsXCt+VWbNnvdIYdl5sP1hesL1dvrc4XO6jV3cTpOY2fyOfCT+WXiLz
VfC/9FXhfZvzWFy1s0zeY99/kROu+nblE1c60/ZeuUu1/WM1p+3/wo8EA8n3
RasXz17uJoqnLp7RZggWSy0PEsyx3GR51s57qTnhCzuD17qx6GGrvS3mrHJC
qzNt79lzJHxn/9bOOKlJwa6VB7S6wq6ZvN9ilNUzBLvs2dl7DdLbpMcsFxBu
LfmhPaOvxd0X2ZTt7cKPtodtDmC5uGiPFT7bXip7LHNU/KDVFeWz1TPWq9o+
LN7Qnp3Ni4pHIL1hMY3wjvUjlnOLvr3g7otsyvb2a/2Ea1Y8TtZQeLNoTovP
dqZKtmk51ObDpP6lVoXLigYoOrNozqJ/7H3Eha8neLXKXV/1LNqj+N8Vd19r
7wuPY8+0cHTR8LbHPrJPiq4meyRzWvx+6Z8Vl5H++V/uaAjT
         "], {{0, 128}, {128,
          0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "676388552"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.3009716272354126`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.6986570358276367`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzVnbHKdkcVhX8UxHsQFO9A1DZ/ECysE7CPEAsJCFGQdOINeBE2VqKVlZ2t
hWBvKxZiFywEExD5LA7MYj3P3vMVkfHnfc+Z2bP32mutec/5vv6DH7/3wy+8
efPmJ1/+7H/e++Bn3/n44w8+ef9Ln/+fDz/46Fvf/OiLnw1//t//Ph//5Xu/
f/vnf/7h7S+/+rV3X44//esf3374j7+9/fXff/vOy/HJZ06+ezI++W56r3Se
zVrS+aTfba5jxI2KrRE3Kiep+BjX3BpT8W+ub+yFMU8Df5pr/uKT37x9/1c/
fee7n/7p/8bf//eP3v3KN/719tu/e3M0PrnOy39/mufTddJ5pvNp1tvM/2Ru
6b2aNTZza3KpuRe13hQ30jmn+dPE3B6n+0iNqTpqrtnksx2r9L4v+8JncuB/
/6X3ffndp/9efv6ppl5+5qkvn8wznY8xPuF41DypNZ7M5+V/zR6lcziJW7Nf
J731KVfTuFFxmBxP1s5JTNI6SvP5hvXaMXzK/6Z2mvFJLzuZZ3ovavyEIc2c
m/gb+5hep5nDbfeicp6am+3tULEy6ouKiZEbN4+N+DQeCIV1J/MxekFaL0Y9
2vtIzYfqO5P3onLe2FPKe2x8sNvwKtVxt613MoZ2fJ60ZIOlN+wvxa+oejTi
QK3L/u7kvdKcp3hLyp1Sb+dEw9o8yuizJ9enevdt45MYNjlwEnMblyb3l+Jd
DW7YeW7zRuq7k/dK9/Hk36nceBqfrLc5fzR4MtVnT6759Pmmd9+M+WmupvF5
Gp+cNRg4Y+yvoXfSvUh700kcmrHdp5q+0NyLwhkKHwytavDJhqel+2Jr2CY/
b8D8JoZGbje4RGFFw80ovTOZwxSXTnmjkW+UXmt6LhVbistReUXNYRKHGw45
eUazxfOpXmbUYLqPTe9r6pHSO5M5bPszN2PFZN80zg6M+1JztvOT4nKUhjVi
a/N8KicNrz7FlvTZgUmMsn252/yZdC2TWDGJRamnZOCb7bmlnthkrqYa/CQ/
qfvanomRG8a5GIUtlCdgrKXJASqH09xO40ytZet5JQqLGi/d+I0NtXcNFzV4
5qRPMunDUJ4JlRvNnFOvvsnPSa1haEODA9zsz9hYYY/teTbYctvcKO1zmzdO
+TCvJW8bfmv7TrbWOFlLk+fUGZPNSey1GDG84UzEjk/j/RpzS/Oz4YQGJhta
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
k5+2rm9i1eSk7e81sfoPtnjucw==
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "134083721"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.12942560017108917`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.8705580234527588`"}]}], "}"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.775496454996585*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"a98f721a-c47e-450f-881d-98285054010a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["6-colour totalistic, range 1", "Subsubsection",
 CellChangeTimes->{{3.77551398833566*^9, 
  3.775513993504568*^9}},ExpressionUUID->"d60e30b9-98ab-4a01-b755-\
63db75d5fba6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"test4Data6kr1C16", " ", "=", " ", 
   RowBox[{"data6TC", "[", 
    RowBox[{"8", ",", "128", ",", "128"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"test4Data6kr1C16", "\[Rule]", 
   RowBox[{"netECA16", "[", 
    RowBox[{
     RowBox[{"Keys", "@", "test4Data6kr1C16"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<TopProbabilities\>\"", ",", "2"}], "}"}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.772719248559807*^9, 3.77271927548206*^9}, {
  3.772719324257593*^9, 3.772719331356277*^9}, {3.773124904129174*^9, 
  3.773124928357933*^9}, {3.7731251153026133`*^9, 3.7731251512280912`*^9}, {
  3.773125217467578*^9, 3.773125219418065*^9}, {3.773125271868342*^9, 
  3.773125271954652*^9}, {3.773212712732003*^9, 3.773212729006225*^9}, {
  3.773212818178605*^9, 3.773212830613299*^9}, {3.773212941366901*^9, 
  3.773212951689026*^9}, {3.773213005636443*^9, 3.773213014527096*^9}, {
  3.7732132566474*^9, 3.773213256876457*^9}, {3.773294401307526*^9, 
  3.773294423203759*^9}, {3.773348269707011*^9, 3.773348280477676*^9}, {
  3.7733514738060293`*^9, 3.773351485326448*^9}, {3.7754962971079893`*^9, 
  3.775496318359008*^9}, {3.77549657863671*^9, 3.7754965890719633`*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"8a38bfed-584b-4a6d-9c10-fd44285657f1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzdnbGqbt2WVS8lSj2BUkYq4gMohnUPimCk6PUJrqiJBVJlIBqZmmgmKhj5
DMYmIkbGmvsOgpFVoLANJrZG6+Pbxwr+y7of315rrjHH6KP3Pube50//7X/w
q7/3G7/4xS/+4W/+/v/86tf/6C/93u/9+h//rT/2B//n7/76d/7Cn/+dP/L7
l//0f//3B9d/8T/+jR9/+c/91R//7K///d/+9f/8Kz/+81/7oz9+89//iR+v
z+311/u8ru33yX3s2i4+/xniVmJb4lZitXqXskcXuVfitlrbz5w/n6zTFYZc
P/e6jv74n/nVj3/5b//sj9/6jf/w2//8v/7ix3/5d//pl//kf/yLX379/Os1
eZfXPb8+9+vnr2sS89eaydrIu9vPbawu4lZiS97rtU5yfXFPEh+yRyT+NvfK
O5KfJWsjOfxd+VPiZj8nOVOwbvVc++4lx8i7fP0OeZev3/83//q3fvyf//7k
f/vdX/6r3/3vv/w7f/NP/V/XX7//9XPS777e/7XO8r42P0msLuJGrl+xfcXT
xsTWS7nnKyav+Nj7f40DiVV5d4stZG0lT67zp+RMyZ9XnhAMITX7WgN5rsWZ
VR293oVoh1c+fP2c4DDB7a/vRXLePncVn6Il7fpJPb7uSbii7a2Wi9p7Wky7
0Jirn7XYYmP19XOSJ9f5U+JW9vqVM+T7BOss5yR8r/TKVa7a/H/tdbl+xWfl
jaxqtmhJ+1xbUyTPX5zk9R2LLaSvve5p67T0TcJzys8STmjzgezRK09KTpL8
IblK+FKpd7Ie8rOr9az6st2j0vdtjpVeZnPbeiMWr4r+XfFbW1MEey1PJvt1
wf9LTZG++erXFkOI70q8JstdbR1ZXmfzh8T5NX+0Gp/Ui8Uou36LP6UvE45h
7/+KOcHwVzxt31n1DsKvLF5ZP5Dsi+XDKz1CcvvCP7Hvu9K8pIcW78ji8EXf
tzqxaAfSp15rfn3H5hjhV3Y95GcJr3jhT9GwF/rCzqmJr1j09YVmKXzVYvuK
617M41ZaeLW/NibFo7O8aIXtZT0W20m/eO215XWkb5I1EN+bcDYyw7Xrtzqr
6M1P6gvyXgVPygy3aCLSRwierHzIVY2XeVzxSIuuf+1v8f9tr7f3txz4okcQ
LCJclORh+dnCD23/tfplVV82f1Z950JfFJ1o95f4hESLFa/S7js5W/VJT8P2
X9svCJ7YuR7hctf8n/BbuxcX/H/1vqW/FKwo+WlxY6VVV7O/VTytfrH6wuZ2
wf/CVV7PfX1OMIr4URYrbK8p3q/F81U9kvWTGiz9seCM5caFP1zw/zIvW/WF
Mr8o+GmfazlG0csXfcfqF8K1yDu+nnvhjdseQd63XL/WY7Vw8QoKLr3mX1//
W81EXmsm2u0CJwsPIftu/dVP8v+XJ1liXvpg6cvluUSrFh5u52WldmyPI+9I
5uDk+8Ubt7Ns0hPt/NfmEsnP0l9sbdoYXs8mrJ9Z4nDBhwuvKPP9Ff8vv8tv
n2txteCn9Rttjl34q7aOLCaT/LR5Tj4nuWe9cdvfST8iNUu8NRs3+y72He1z
yfWKH65mhSv+T/aaaOQSt9WM2Pbc1Xy5cJuCn8V3XXmJpKbKuYLy7oVvEE5L
enHhctavLrzCalUSq8JVrn2Vcg7K7iPpRxdc9IIPr7Droq9drHM1lyT5QOp9
5RlexHx1roD42693J7VWZgcrjVByleg4q/ft+QGyfjsjtnME27vLvMD+LOmD
Kz/c/qzlwxezywv/f7XO8txSRwX/L+bC5N0vzhWs5ggEr2y9kNop+0X4g/Vk
iN4nOEA0UZkRlzNF1gO0a7NYStb2SS5auMGKV3/S//8k/7c9boX/lruuYm7X
b++/0pJWFxSNY3s9wUBSL/bcEZk1FBywfNjODa2WtHys9B3rc15z0U+ejbme
/f1s/J9wWvus6/Nmq7N2Fv9JPliPwp4bKZrXejKFf1r98sIusjayhpUHUuqR
6Dvy/VI7ZE+tFrjgooW321mAxbprX+ua/1vtv8LA0itt/luMKlyCzONWcVid
97Bz+TKrJT6SzZ+VDnrlxmudK45ke81KS9oat7qsvHvheJYXFeyy2upn4/8r
PCcYaHN1xQ3s9WvNq7/7WuJwcd6j6H3rXVv/ajU3sZzBrn/Fx0pPtFpy1XOL
Rr6Y8ZW9uJj9/Wz83/Z66xWQ3Cgaqpy1s37IimcS3mjr1PayV34WDWW5ENGe
K/5gccmuv9TUhe5b9d8VZ1t50YXjXXPjFZ7/bPyf4LmN1UpDrfzt1fk365eS
z+15G3veY+WZkL5WsMvyh+K/WS5X8NNqqwu/t3g45GcL1hWOd82NV+/4s/H/
gufFf7Z1Z/ntSo+v+i/pd9YHILzudc9XT7ExIfe5mB+ROiL+m/VMLP5b3Cj+
j+XSRSsR38D6NpbjlfMnJFZE16z86u86/2PxvPjPZYa7ei97XrF4FMTrKBq5
1Jr9vJzzXPmNK1/d8iWbbxY3Sn8h6yexLfOjFwcgPIrUl51xrLgxOUf0esfV
ecUV/y/zxK/Xq38fiqyZ1EXRgBczJtuLyzklEh/7XBJn4n0RbCH4bL1le96p
nENbnT+84DNkX8jfbiL3tz3i1S+InrWcv9Qj6Wuv7xSue8H/LT5YzFxxP7LO
Ms+yerzwvVXtW7winkzREVYnlt/Vsv929orPl/5YMKHwGcKlL97dYqn9WZuT
pR5L3K4xZ+U/kP5L4kB6MeF+NmesBrR63NYj4U4FB0huFH/plRsET8qarcZZ
nbVY8djiX1n+Zuud6KMLDv/6WeIXrfDQ1qN9Vjl7YDGh9JrCeWy/fq2NzOCI
V1bONREOSbxHghukFi78bbsesr9l/mIx1uYD6SOrcxfkZ4l/Zedltt4JPlvP
kGBCwXa7p3aPio4rPKRgjv2+zaVVv7beneXzJAdIDO3e2fXb+6z8bdvrCZdb
7V3BVTtrsDx5tX6yBvs50RRE89oeR7DdzmEtZyic0/KKl4675iF2neT7dnZT
sLFwYxJz63MWPvm6J8HAwq9W/raNw2udNiYrL51cr3ySlX4h+0t6NMlt2+Ms
VpN8JnzP5iRZg12PnbEW/ml5yKouyBosv7Vn/Ap/sL69rZGyvxd8g8TK7t3K
j7V5aONc8rmcc7vg/+Uc19e4XZw9ePk/JJ6l5xb+U85uffJcR/HYy5nP4v+T
vmxxsuBY4fxldk/iZjHhgicUnCH1RbQM6dfX+Vz4POkXn/QirBdn+bb1l8ga
LmJouTepWTJDWcXWzmtWeoTsVzkPUPax1AXh/HZPS56XmXLhCStsKWcJCB8g
Grzk84rrvjh2madbL6LUUZnpWP+HvPsnZygW61b3KRhI4lPWXPg/0YOW/1/U
RTmr88LPlf9j+UDhJKs9sud1re+3yucLrmvnqoSrEz1i35f4M0UnEg1u9/eC
/69mo8WvsOu05/fK3Nz2suKlE3xe1UU5q/PqOzYnVzPllfd47XcVHL6oweIt
rHzgol9W+tHqEfJ90svsHpW8KvcnmtTOJclswmLdi++RXl/4f6mLC4935S+t
zizZ9yK6xnqkhUsUv+sah20Nlnlu8WZLHhasK176K1fJHMdyJ6sNi7dTPFjL
N8g7rrgf+d328iyCaT/DzKJ4F+TdX5hjtfDKqyR7TdZZcuaT86OVB34xW1xh
+Co/7f5+12zFxoHk4cqDtXyDnE0iub3y6Egt25oqveN6ZnGRk3YfLce2dVHw
s3h0lm9f8P8Sw4u9WGH4xbyY3H9Va9dxIJ52wSKC+eUd7XynYFSJD+GQtndc
zywuarPM68sZwtU9SW7bn11pFovDxcewePhJ/3/lz9i6Jj7VJ3sZ8RCIp225
E/G4LHat9HLpKeRZ1pcm+svytzKzsDVY9qvonVIXF3Vta+2TM7jXmr/Gv/hF
1xhV/H/7XkXvfPJvwhRvjXjaF7596U1FL5PrFRYR3r7SFK88tzMLgnvkuuC/
1YOrWW2pa+IP2L/Bfs3/X5hve8eFFltdF25p8cH6mVaHlt5qff4Sk9X+rv5N
NzvvKFhkdU3RFKuZBeGuNvcs/hfuatdmfSdSLzafyV4TnLH8n8SKXBN8+5n9
f+vPvDCB1A7Jq1Uvs73Dnk0iPa7gMIl50fUWH2y9XOs1sk7Sjyx3tfhwffZy
xYuIHiEe5sVMpHAqgktW3xEMKblR8s1iZvl3u6yGtfzn2v8v/besoWApwdiL
8yGWP1zrtaK/ymzR+rGF51j+b/ssqdMSnzITIdzJfv7iTnYeYXWErZFr/99y
V8JFS++w97nmkyvN+MLkMhcjfHLlSVofeIVLJZesv0dqxM6nVj3OetcvfCP4
XzhSwSvC1Uv9Ws5j6/r1nfLvzF5fl7MN1zVIOMBFrZEzKqW/k3chOWN5bNEs
K65FcMnu16vfWdyznnPxFlZnL+0+kv5ueX7hfqt8Lr639X8KNlocWPn/ZRZA
9MWqBi13vfb/iWYkWG3xjZypsPm20uaWV1jssvu1ygfiaRNvpPS47+JsxSt4
/Vc41aqPrLyUFzezM9OV/3Cx7zb+K0y29bXy3q3mWuXnhRddPH/b61frLPl2
cbbZ8v9yRsievbzgbKueTno94VQlny/OCb+8tdcarD6y/gPZ69W+2/5lMXnl
PVqPzuoykmNk71bamWDUhXdauOIq3+xZkRUvKn7mBQdbcebCPVaclvQFW3c2
f2zvJvVLPA3LDy94KcETi1EWk23u2ZlpefcyI7C5YecdFjMt91jV+HW+Eey1
vKjwmaJZbJ+1nPliT21erfjPhXdh95es39b1NS8t+UZ0kMXkFUcts/Uyv7PY
S97d7sVqBream1/nG3n314ym9JHiKZU8sT3UYuP1PJFoK4KTJM+L9074m52D
EA5ge6XlpQVXiX6xmLziEq+9KDX19T6k3gv2WhwofIP06zKHXXkRJd9Ifyx9
5MVnrG+wyocX1hVesfLNCNa9Yl5m8eQ7ttbsWRTbOy54KVmDxVLrJ5CeaLlE
8fytb0xqmeBM0eCEYxDuZzUvycni713nW+lBREfYvxO1mqFbfXThqVoeS7D0
wi+60NSWlxKvxvYLW3e29guvK7MSm5PEX7LPfb1LmctYDV54Eckrss4V/7cz
2ZJvdm5LatZizurciMXSVd6+9LvVpDbnLa+2nMGu38a5zDdJv7C8lODJ6hwg
0UckzoULXc/obQ6vZoU2twknJOss/J/s0SrfCMdbaUaL5yvPkNS4rZfi+ROe
bDGB4Pmq1xSeX/hPqVnS34n2tHFb5U/JE6utbK2RHmQ16WpWaPPHzrsv+L/l
MDbfLGewZxJIr7Qa1uJeiWGZ1RZddjE7Xp2zWs1DV7qV1KytQZJXF5xzdebT
9ovCVV7xt/hp8Z/oOHL/lf694P+WH5L127nG6/v272kU/la4uq0Fi2PFX704
G2B15arXWE/GzkfsnMvOawift75o4ZCEX5UZYvEx7Myl8KtyboTMxwsnvOD/
1q8g/If0PlvLr/vY/lX4A1kb4WYr/r+6vtaVJN+KxrS+gf2bySvtYPsCwagy
83rFxHrCNg4rznCtDe3fcyOaxeZA8akILllPkuyLxd5SI8XrKJ9bTVdqs/Dn
lSew4pMXngOpwXKWoGiHMge0GqFoFuux2L1b9VarBez+rjhGmWvYWVKZhxIu
bfPT9guLtyUOq2urZ8sZp1I7Kw/HxvPFnYhPRdZmMaGcJbDawWKL9V0LPyS5
QWq/3Kd4UFYL2P0l/dRy+4szGDb+K/5seewF7y1nmQpnfuF2wc8Lvv1J///1
3Bfmk+eucuN1f4IzNmeshrW4Ufih7bm2Zsl9SKzs32FeeV/X3J7Unc2x4ptZ
/kx6n+2VRdev+L/lSBe+6Hfpl2v+T3DsxXPKGQOS5+Vvzqw8xuINrs6IWh/7
1WfL+S7by2w8i/dVuH2Z39l52QpzCP5/0rcvun7FnwmXtvj5Xfrlwv8v/rb1
aS23JH4mWTPpU6XGiTdoY07WvOrpRUfbPrLCRoI5ltsXD9ziwwqjrFdw7dtf
6JdV/yUc6bUe+/0L/fJd/P9V72VWUnpoOetlZ1ikl9nPV7219JeLPFw913K5
Fbd/9QjSO17PeulWmw+vNZS/FWBrh9TsSr/YHCMcyepT2+/+MPn/BbdLr7k4
02v3iGjYwqMIly41Yt/rIg/tc184RmrN6g6LD8QnJ2sm/d1idfHEVr79J/UL
6b+2NknvsJ7b/4/+//WshPTuso+2p5C5A8mZsl8Wk197uppxl2v7XIJX9iwW
wTHrJa5030o7W25jZ0yWM5N/N7noF6JrLrT2S8e96rF4v9/l/1/MPkrvLvy2
xJzwLvKdgoGv71ycWb3Ow9IHSV3bHCtrsDlGPre1U2b09t2tLlj5S7ZOLVcs
WvvV7/4w+f+r2ceqd1tdQK4t7yL/fZJLF+1znYdlzZ/sO1aPrLS8jW3hM5Zj
kHwmcbD4XPKwzAqt/2n312L1d/n/5WzG6ztkLkb8H1uDxF+y+E/4Fcn5laYr
OuK78nCFkxdaxvJh+1zr6dm4lTivuE3x6y7Oc65qhNzn4myevb6Yya76L8lV
66sU3lviU/pL6cvXM/GLPCRzltKjVxz7lXsWA+06yd8mesWtxPn1XpbbEC5n
tcNFj7M1Yr2vosV+Bv/fchU7iyTYVXKjaLSSV6S/FN5yofGv89DyYdujC4cs
+G+xjsT8NdNZ4QY5+0SeZWfHZAZqOZXtcRda285AP8mxC3e68LGvMaRoNBKf
aw/wdf3ai4uZ+Ce1no3tSsPav/m52q/r3F7VuO19hP+s5tGlx6209mvvyAyU
8OHv8v9f71J87Au+XXxvgqWk19v+UvQ4qbVVn7rWekU3rfx/Elub/6/vF391
xWFIjZfet+prpGaJfiG6u2htO9ewc/zVte2DFz7qSo8U3/s1w131I6JzLVcp
GuqTMy9y/8KlS/2utJLNE+J1lFmhzeFXrMj9rW+zij/hEiSvvj734t9PJ33n
osYL3yb+p+WEF3pkpZFX3kLhAzY+Noa2Lq5z74UzpD++Ymh/J2jlFVuOfX02
jGDUqzbJc21Orrz60kNfNUh6WfG1Su/7Lr5d/k7m1+tSjysNcsHlyH7Z76zW
TPTRK7dXHt1qxmc1uH2X1TzU8pYLj9qujfwu0sVMyvbWF26X8yEEzy0Xsnxp
Ne9Y8W3ruX1Sj9gZ3AWXs5qo9Be7ZrIvK1+rxGd1psvqKbsX5cyDxdLiUduc
JOu3sxs7E1zt3Wp2YDXXiput1lz49sX1tf9fNLLlcq/YFqwuXkHxSC1fvTgz
U3rZa6/LGS3Li174ZnvixXkG4vUR3lvqtODhd+l9so+rHvR6VtEdP8P1d/n/
X+Np88dyIeJdXHgFlkuQPClrsNyP8F5bmyVniCYieoSs7fp3tYiGsjFc+RIX
ep+s0+oUwgdKDyqcf+XBXlxbzrziA+X7ZaZjZ6nFK7DzL+thrvbXYvvr/nb+
a3PAPnfFu65/V+vCAyn3Kb3G5uGF1iYcz/bKFecncbvm+StNdMEHVphmc9vi
c8lJ641fzDVeOf+Ks53dkD5CvIvXe71+1uqCMudd9ejVrHaFRRfva/e9aG2r
fS768mrusOL5Ns4rTWf5W8E0m9sWnwv+X/uK9qxX8Xxsf7Te3dfnknkE8RDs
3tl8sz2acDM7kyrYZXNvxc9XePjJfm3vY/vOShesfOmVt/Diby/MKbNai1Gr
WUnplYVjEM1LapxgrPXKyJrJfez9i+4uPt4KH2w92jwsnJ/0boL/xCf8Gfr1
atZD9nfVBy1+XvP/ck/iG5PPX3lb+p3NmRXnt9rK+vAX+sXGZBUrq6EI7pHz
ORYfbD0Wv7d4kgX/yXutaq30a5IPK598pbNIHl7jocUrGx/CA4nX8fp+mVms
cmaVA6+fLXx7xSHJHtkedOGTvOJJ8NCuzdYj0RQrT3LFSUhOrmqt9OvrWWeJ
v91re05j9V6vvLXa5LVf5XzCxZkTEk/rA6xygOCY5Xt2L4juKGcXSd5ez2QJ
ZlqctJyZfE7qxeoa68+TXm/XU/r19ayT5A/xWslek7qz71L0+4pjWIx9/SzR
Iy9ebTWUxTqSqzYH7OeWt5e9WJ21uDhTV/jJqz+WOSnxRl55Tu5D8Ln0XJv/
pbeuOMPFOZmiYVf6nbwL8RJfOUMwx/o2hB/aHCa/41P60WpPV98nWH3hYRY8
JLxlhVH2HQl/K/hf4m97sfUK7PzU1gvRpHa2UvTLNf8nvcz2SsK1rFdjdYf1
c6yfUHL45SW+7lnWbPeU9FDy/YvrMlO2tVNmCqszHlab2PclOtHyCjvXWOVG
wQ2SP4TzkPn7z8D/7ToLN1v5RVa3rmYihfsV3k50hPW3L/Tg9WzUxpasrfgh
xVckM0Trn9tasPNZe8/i5a76i8WBwvdee0fy+bv4P1mn9XPsnJ3cn+DY6z6r
uV7hpZa3W3+S9JeVv1ris5p7lhm9fW7RRGQvbI+zs4Dy7gRP7Lyj8LfSU6w/
Q/ierXf7Xhf8n+T2aw2Eu5I8fH3HaiuiK60XtOKlRXdYXUD20e5p8TbLbLTM
lEl+lhnTin+WOZ3t3fbdLYaQ3rHS77an2Pwk67H6YpWHhf8TnCw+cOHVtsaL
3rR8puiylT9vcW+lDQu2X+gs0hNfMX/FgXjFK8620umWt5D52urvi75+lrxv
8W2KlnnF0OI/8etsHl7wf9vfCx+2nNnyaru2omdXvuWqX9h6Lx5Oqd9VLlm/
6+vnhdO+ri1nK3th9UWZr9lafvWjr+shup7gqu3vZMZduJbFq6L7Cv+3Wv4i
h8t16a3l/hf/prP1moqGstrQzm6s/7yqC+uvvmJlfSrLmVdnjYrWLn6R5ZAW
e4uv+Oo1ti/b/mvnd0X3Fa5S/PDyLmV2b3HP6vHisVusK7lRuMGqHglu2Pl+
qQvLaVf8jeCz5cOEG5D6tWuwmFC8tZUnb33d1b+1t+JspcZtfCw2Wh5i8cSu
wfZf2/cJ1pHYFu1s+XnhJ7YerTa3nsxqbdabtfyNYLLVX+Rzy7ct31hxJ8u9
rSf/+s7KTyY1bvtdiS3Z9zILsHNzwlus51k8eYI/5d+QtXVkebjNDZvPxIOy
zyK90noyZW1Em7zWYLk0ybfi0xLfYzUbsrVZZhnEH7vofZaTWE5l8bDE1nK/
4l0Xfms9T7tfRM9a3W3f3Xo+Vq/ZPmjxsDyr9DjLu0iNFA+E7Ds5Y7PCn+LD
lH0hWHFd10RfXMwISPytRng9186JSk2R/C+xJbVjNXLh4YUzFIxd6e6XZikY
S/arzLLtc1fazeKMnc3Z3mFxm7z7hUdavJEy51qdJVjNCGyd2v0qsS04b/u7
jfOLP5eeRfyBgj+Fq5SYl/29nokX3VR4r+VdhKvbOaz1eVbnOl5rfj1r5ZGu
rsu5r3KWgPREO8soNUje63ovSn+3fLjMKSyHt3qN5CrBE+vhX2hwG3+yNjt/
tLVPeC+JecEcyxMID7R95HV/i9UXuPFdPlLhgYXPl35x0TtWe7HyXe382s4p
bG0Sjre6J+kLNodXvGI1C7DavPQ+e27zQk8RTUG4WdE4ZO75SW14zSvsPhYv
3eJ56Rc2n6853mpfiL6283ri75Gashhl72l9V9K7i+6zufRJDCHxIf2azIOK
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
l7yyub3yIoqnbeuicDOSe/8L+5iRvQ==
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "930044739883"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.06711535900831223`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.932881772518158`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzN3LHKdsuW1fGDQmPSmQYdmphpoKnujbfQRqIgR9Co4dBt0HTTgXgPZmZm
3oGhoaGBeAGGgoFX4GlQ+JKC/48x1z4dfJtnP6x3PVWz5hxzjFG11t/+l7/5
w3/91371q1/9m7/x2//84a//9B//yZ/8+s/+ye/95f/8q1//0T/4+3/013/7
8d/+v39/+fk//f6/+4d/8O//1k//9C9+8/N//ud//tMf/7O/+/Nv/ut//Em/
f11z9fn1W/r5avxfjEd/V8e2zEXH8EUMlzF88VuaV1fr/vV4lvzRa77Aja/z
/yoPf0mc0bX+bWv4+f//e33/+vfj9f/9z//DT//nv/y9f/S/f+/v/KyfX7/7
P//gf/30+3/xL37+b3/zf/xUPpcxl/F/MZ4SK13fMq8yF73PF2u6jOGL39K6
uFp3zVsdj95/+XyVSxqrJf91jlq/X+BMmcuP1yj+vK758XuN4Y/Xv+6jvV7n
qPPS8ZQ5lvV6zUtrquSY5uqypq+10/q6+i393VKDZd01P3U8S10o/iwYrlhx
lf+v+5caKWux5K3y/NdcXrVwhduvzyU3CgYqF3rNUbFLx/Nadx3DkldlPK8c
Kzi88AGN8xWnusLY1/WveL7WvfSIkgM6/lIXGn+Nw+IVlPmWuSxzVHzT3Hvh
TPleMfw1/jKvgi2FgxWOVOZ4pXFec3yNZ/ExFi1c+qn2mjL3gmMl56/yTWN4
1WcLtyzXL5yq4JvW+2s8mvPltxR7S96W/L+KbfHzy3he8XxhpvoMyjMVwxct
VnpTqZESn5JXyz5Oqf2iEbQu1M9UjC39WvuF7vcV3lvq64pzqpe78Bz1BEo+
L59f67LwtMVTKthy5bcohy9rpBxANe9V3L6ohUW7lT6o3HLpa69xqlesdVFy
qeDDope1fjVXSy6V6xcsVWxRDV54UYlDybcv9hYXjqGe0tLfVStd+Q8L7i04
v4y5cDmtBcUx7b/K2/X+yt9KPn+BUeq3LL7KwhWXvrPsIys/ufLrFP81Jlf5
X/YLio9UdNziN5baKTEv8VH/oeC21q/20xLz1xoVPrnkvPp7Vz6hei/KH5a+
9oWGWny8wkvVh1F9feXhKz/RmOh4VA8WHFjyv+Sb1suydounrfsgJW6vflHG
oLy6+IHLPotii2JawfmS819orivdVHKy5JXmZLn+65honiiHKfmp2HjlRy2/
ddUrlWcqn1Fsv1o71XEFl1Tva/6XXlPWSPXgF/1UOa1qHNVlJebLGTzVDuU+
JcfK+FVDFV9liYmu+2s8RW++fuvq+W71o5bfKv1Fr1GMVS6heqH8VjlfoTlc
YqicTfXR4psVbF94SMGipcaV+yn+6zoqf1i8rILtqh0W3njlieln1U2qW9Uf
LvHUGtG1K/m57MMu/sDrPqVnaS+42uMomL94d1faX7X5Va4uz/WUdVHespzT
UEwrY1hwssxl4d6lF1/5DwtWLx5+uX7xgkpu65lSxSLlDIu+KPdc6voLTrLE
bfEfllootVlwTPcClmemytg0Jq/7FB5S9hy1jyy4vfQmPUdRcnXJKz3jsfAf
1TsF59XrKHxM+0LRJsoxFs5QcmbZE1nycMFYjduyvlf7+Ff+0sIltN8Vb3k5
p6RnFEvuva7R9/wsmFm0ks5l8Z1UOxceu2iBxc8p+fnF3rrm2BKH1/f6rsgy
dx2/4ucXml3Pni37Ylf9cekpBUsLHyhjW/jn1R7xcn5AMVY1xYKZyn+Wffzl
XEfB54Iz2iO0fpfcW3qoag3Fh8UHK5q65FgZ/6KzlH9qDS5roVy34Lb2FL2n
6mXFky+0zwuvCkbp2BYvaOG6r/V6fb+8/6r47QsWKT9XTChYtGBC4WCvnCxa
T8esvenrvqB8THWW6qlFd+haqE9SxqP+id5T8W3piYvnX9Z90ZI6HvWCljMb
5f1LC95evetV8Vn5ufoPeo5l0XqKD0v/VU7+S+6bv2KleKgey5WPpH7OoosL
9ionV4226OWS89rLSn9Rvlfmu3CGV84vPLzksMZn8eK07jTmS12rH748U/+6
Znl/0fLurytsv9o3L98vHprqZeUkhVd8UctLbJfaV72z6O4yX8UQPUenexzK
2Uq+qXeqPOSql5V+rXH7Yn+n8B/N/+Lb6B7B4s2W3F764xWea56U2n/FtnB1
1YwL/9Fa1nxe3qG0YP6Cw+onl376Go+unWqfK320cKrCXZdeVnrE4k/qOYqC
yaqFNZcKXilfXfxezSXlCYrnBWMX/1/j/Mof5X6LR6pc/etzjIr5yx7Hkm/a
L5S7ah/U3l1ye9lPLJiv3EDjrJ6w1rLmW4lJ4W+Kz+o5lPgvcVt0gc5F12vB
6qvrNT+VZ2o96v01H8r6Km4sa73o2dJbC8ZqLi2eT+mP+r7TMgblBiXOpY5K
7y55rnEoWFp4rPIZfV5j8coUl7TXLM+eaJ9duKter9iov7v4Lep9lfGoBl/2
I5RTaU6qZ6gYoj13eY61YMviCSg/LLxX+6NyqlfeKlarNizj0V5Z8lCfvdIc
XtZdOYCeb9d30F1p5zK2ZZzqqZbc0x6nXp/iuepT7a3K5Za1Vk9MdZ/mg3Lm
Kx5YsO51jXJm7TVlzMt+dOmbBW+1dyv2Lj1ac0Y19Rf+v3qVX7+XZvHolnUv
+nHhgVf4qXNccHXB8IK9S+0sz+x//T7wxQcrfWq5/kqzF3wo61tyu/Rr7ena
60vfXHiI4nYZ26ITS28t2LJ4ueVvl1zVOCuuLr2y9CDdp1DOUHCm4JjmsOZM
uc+iARW3tabKWpezXstZHe2PC54vXPTq86If1XNQ3r74aYs+Wupu4c+ll+n5
iuWzzlE13YJFuk+kefv6rfJ5wdurPUT1b7VvLteoJlJOfjUezQf1CpR7f8H/
X3lYuGKJf8G0RVcqlyucQeuuYH4Zm+LkF3my1HvJt8WPKvWovbjg59X520Vv
lnXXcxTKh6+4xKL3F7+rjOe1Flf5sPCWK75XsHepU+UnqqOVy13lieKJYlep
04IPV890X12v16h20z776u/lnTavtdN8UN19tQ+o+veKSxTtc+XTXvnPX3gO
io0Llur6XnFp9S6u3m2ufs7yeckZXfcvOO3ifX0Rz4U7lXNT2oMWXqH1vvDn
RdOpZ37FORXzFxwrfXDhw8o3Cjaq1tOzhXrOc8l5jfNrjuqLfpHD2qcK/ynv
M9Sc13c16Ln9L3TowgNL7WuPW96xqRy49NlF3y2+3FXf0b5f1uWqHpUPL/cs
ul75f/EZSi3ofK90x+IVaxw0h7UXl/Va9OnVuZcSwy/w4UoLXOkLff/S0gdL
baq//RqzxlM5qvIlzTetHa1HxVjFvcIbS+1o/pT6XXjmkgNXezcLbizPYWku
lb/Velx6pfJhzaWrd5cpD1QOXDCz8PDSBxcf+FWbinVl3dUvKr2yxER9NsXw
K0169fnHOeo7T1QrKf6/6ktzvoxZ+fCicZSPqRYo83p9X9ZR+UaphbKmqgUK
DigmqBZ7xWfxS1UHLRy7xHDhDK/eUc4ovv524cNF3ykmLx7d4nWop1H6V8FD
1d1LDSr+a2wLli5ex7IXpvMqcX5ds/AK9SevtFWZr+5ZaM+68mSWWL3+Vjm2
1oXiT7lPeV+T5u3SyxQ3ll5/tc+lPaLw8AUr1KtRfVfWdHn34NV8tUYWD0fr
Quu6jLP0oMI5F/9H43OFmeU+BRtL/mvOl5goFypzV5/55V2oh6Y9qOiOshaa
57rW6vstvE6xQj0N1UHlPld+gvZW1Thf8Gcdz9IvXrFasEV1aOnjJf6L91Xw
SvHnhQPLfoTquBJ/9RkKBhZsVD6p6/j6vJwt1/VaeI7ms3IM5fkFQ5b3ai6c
XPv1onE0Vwsn/GKvWXuT9jjVBdqj1fNRjqTaZ9HvZS/gao9jwQTl+crftK+V
a0oPWvjbohMLd1owUPFE+fniIehaL16EavYrjaPe5hWHLOul+256hl+5cZnj
omuU8yjvWmq/5LD2u4InyjFUGy5zX7yIpTYLf1Os07EtfoXi27KnVuq01K9q
zMUH016mGuf1t8qZlUMWfNa9gMVfKvhQYlXyp+Bn4TxXvEtrf7lGfZvFw7mK
lWLvVY1rXRcdoT2x7EeotlJ807O+OvfCvZWbLdygYIJqlsJpX9cvZ9cX7qSY
/MqZBR8UZ1SjXXHsksMLz18+LxpTvQKNlWqo0t8LVigWLWNTv7Rcr/msmq7k
p+4ZlTgr91t6pX4uuKRapvRfreuF/2vPWvRj4VplPKX2NYcXr7jMS++/fNZ9
yWXfoayR1ojyB639V87o3y69W/WgemhLXSyaveBbwZlSX3qfZV00l8p4lmeF
yvqWWi7X6Fk43T8qMVSOUepCz4pc1ZpeUz4XzCz1q7mhXEjXt3gCys81T8p4
rnp3qZdyvdbFF5xf3yGjNVLmsniGOl+9Z+lrBRuvOIny/KIfdf9o0X2lZnVv
a/EbtXa0NpdnBjUmZV4Fn6/e01JqR3maesiL57zoAtVZBf81zloj6hUsdVHG
XHK14OriJ6gnvPQU/aw+Z8GBr2u56JHlPTZFx72+X/K2zFFzZuFFy7mXMnf1
xlWjLdzjKoZf12bB/8InFy5RanZ5Hv9KS5ZY6fiLTn/NS/vgwmEWTVG+X7x9
9VvKOwRUay99fPG4Xnmy7LMvvEj/dtFHV7la7l84RqnZEsMrPX415uX9pYUP
FFxVX7rU/hd9c8Fb3Qf8en0Xn+oKqxWjynjK94vOUh7+wm2tHcVSjXn52zKe
kv/6nIjmavGiVaco7yq/u3xWPlNyeMEE1cu6P6tzVBxQzC94W/Ch1ObV+mqc
FWeWWC1+7BVeKTbq2eAln1UvF562aLqi9TT+yp/L9WUttO5KTSln0H2BK7/o
tUaqecvfvuq95LPioXJXvWfRquqlFDxZeGnRSnr9F96g+rFFWy11pP3xir/p
nlrpg6VfL99r/AtP0+eetHbUT1Mu/ZrLchZl8YvKmIt3rTVYcENrRDmD5m2Z
79e6SXm4Pp++4E+pteU9iqrTNd+UE2rdLX1B+dii70qcC1aUWi6Yrxqq/K7m
3qKvlx7xBYdZxq+ehuaY9m7FQNWAr/xUX2XREcuZhNf4tdfoNdrjrt5Ro73j
63MdS194jVMxajnjpBheuGKpo6v9mlKPeh5s2fcp+FauueIk2msUJ7UX6N5K
6Ttf6P0lN7S3Fmwv2FjWXffmSr0sXlDBzOUZT+U/ii0LB9N+sezLlDiUGr/a
w9V8fs1X11Q9ovJ+s8XHKD33ak95iU/hIfq7r3gue4WL3i+8qPgtBYt0T0r7
uOoR3RdT/bJ4xQU3XvmjZ7EKzizcaXkGSse/9JFln3Tx2bSHquZVr1t/Szlk
uc8X2KI4WcavmKY1qFp+uUbXXb2OogsUiwrfW/r1wm2U86gvoWu36LglDgXH
Fn976bmKjVqn+p4i1TiFI6ke1/EsfaHkyYItioFLbi9eh8bk6t+iPdXvLfNd
ML/gofIE5TbKea54aeE5BTM1bqoFNLcXP19xSc92FkzT3rHk52vMr3iqf64x
1/Uq4y9YoddrLStXWbS2rsXik2ttluuXe6q2feVP4WNfa4HXmJe9ude/5Syr
crZF75QafF2j+fMFB1NsVH23nBl4xWThwPo8SMHeMv6r/l54+6Jny56jehRX
67h4zrqm5d/iB5Y4LPh2pQUWrviao3rLyqOUz6je0XopZ4SUJywcrHgLes+S
J4v+Up2l3vtrLootWkeKe8ueTunRCw/XPYuyjktvLRiu3LLkla5dyT3Ft+V5
Ga1f3b945d7yjGEZj/Ys1cuaPyXOyv91HRec0TlefS46dDkjp9hydTbgC36y
6FyNv/Jb/VvFokW3lvEv7xZY/LSCt4X3LjmweFDqd2l/13rUuitrVHJY63Hx
ThdcLX2n6Dv1qFWHLjHR+6iOWPj/ovevuNAy/qUfqX9SarOske4FqCemftrC
rxb8WXjm0tdUsywa7SqGysFUF+gZkpK3Vzz/in8unPPqeZPl3SaF5+i8Sj9d
zgst2KL8VvnA0rt1vvoOk9KDFNMKh1ePVOOwcKpX/pS5K2cr2F6eCVr6uMZq
4dvqH5Y9i4Xn677VFecvnLDUoPKiwicLblz1x3Kf8ruKLeoPaD8quKoe1NKX
F71cavML7/T1uzpHPausWlhzWDXFgmll/MofFpxfMLas6aKFC8Ze6X3dEyxj
Vk6yrJdysC98P62X0itLPb6uKZr9x3mprim4oViteKV7HF/kxrIHUdZXua7m
s46h8BblSLrvU3Js6e+KsQUnl3ObJQ6aD3ofHeeCXcvaLV6uYrviQ5njEgf1
37S/l/5SNPISW+XbSzz1+c2FtyvmL/m87I/oOSJd64LzJbaLHlfuVGpn8Rtf
3xfvaLlGffirPVn1UQsfKHlV6rSs9dLrVYcqVpQYLv6w9nrlpQvX1XovvWPx
qMtvXemLq3pRT2zx6NSTvPL9FDO/2Lf9+v6LV1b6+LKOunZasyWeip/KGb7g
cl/0hQVnVK+VGGp8lM8XbNF+p/N6XaP6oqxXqZdS73r/qzNU6uMte9NX/oCO
4er+uq93xXOWHqTeo95H1/QL3P4CY5e+sOBM4YE/Xl+0Z6mLgrda47pfphiu
a7147+o7qf69woRF8y4cu8Rctecrz8sYyrqU+y9+y8JztDe97ln81YLhy/uU
Sp4vtVw0tWKs9oXSm3Tdy5jLfMtaX3kFuo+j63XlKy5rVHK1xLncv8RWe8Ti
F2leKcdTT0P97XKf1/U6Bq3fV3yW5wgU90pdl76pGqrgQFmvsu7qASpf0pxU
jaO4V7B0mdfV/pfWnfqKS/9VLr2skXLdZU9HsXrh/KVXLtxs8Zpe8b/ySJd9
nCu+V/i2zv0LDlDmWNZx8coUD/VvNR8KlpbaKX6p+l0aw4Kry5lw7TVXfLX0
sqJxFl159RzuVX19sTekPFN1U5n7omdVky5cQnNv4ZALB1A/X3G18EDFQ9WG
qvuW/C98oKxF+awe7ItvKG/RZ0DUy1K+oZql5NuiK0vNvq4v66i8oszxa/2i
GK5rXeKvvr1yAI3/a5ylRgr30PfNlrmUues7bRQ3lOeXfFg4TNHpBXOW/Xcd
s+oLzQHtcaptS80qX1q8Dp2v1n6Zb+k7S+8oOfyau/I39YhUXy85ufh+BVd1
bL+rvq/4s/AizR/195TDFAxceIJymKseVPCq9AL10xbc1r2eEget/dLTS58q
+VPGo1xRe8crr67O85Q+tWirZa9BfT/tF1+s11Xff/Wm0pcVZ8rYFk9y8XA0
5svnhRsvPWjpfYun/fpe61R1yrIPpR676hHlMOrLLXs6BVuUxy7PEGmPuPKa
SkyWvdclN754j4f2mjI25fOLZlf+rH1z+VzW/YvPS+/TWKl2KDxk4ZaLJ6bY
q1x08f2UUy0+Q6mpBW+VJ6t2K+vyhd4s91F9Uepl6d1fP2Neflc1u/JS1aGq
dzQ+i1a94ooFe7V+9Z6/5P2V5y9+r67R4ocrH7jyE17Xq1f2BWaWvFr4zMKv
lP8rR9K8Uh6ruadaW+el6/hLfl44sPYa5Qz6jLPWb6nlBR+uemjpiV/7gTr3
gmMlfxY/YcFVjfOVn1bmVa5XfnX1XM9rPF/odOUVS89a/PxF13/xufA9rUf1
3Jb6+tojKvlc8kf3g4pGK1r4yg9Uz3DhtJqTGs+Cq6U2l2chFceW8WsvW9Z9
uY/2rCXmr/uX8agu1ufff1da4MpnVozVd+1qz1WPqOB/4RI63y88tILPi3ZQ
3rhgV5m7ajfdd1C++gVuaBw0VguX1vtc+YHKn1VDKW/Xa3Qdv+D/i8Yv+H/l
MxQOoPW7+PxXGuTKQ3vNq+DJgjllDJrzhWeqb1m0XvEflnxQ3Fj6pupoXccy
5oXblNpcenGZy9U7eLU3fa0FNB8UuxbcUN5e+H/BzOLzK169rlG+d3XOoeia
gjnLWix97UpfF45X4qNxXnjX1V7kUlPlnHYZv/JqPR+uHPLqnl/M8UoLKO8t
OaDPWGnOvOJQvr/yV3VeZe3K+HXuqrNUsygfK3EofW3Rra9xLp7VFc9XnqB7
HyVPlrwqPfdKVy6eudb44uldzbGs49Xn4rEvuq/kauGHSw4vPUvx/wtOqLit
nF/rd3kflPZE7QuLBlRtomuqe1iaY8pplYOVcZbcW2JbsLfE7Yt9jSV/rt7B
u3C2ggNlHRf+tvCZxWe+wmHFZ+2PWoPKjZXD6z5yqfFS7wXntR6LNllw9YqT
XPmf2pcXzva6T4ntVfz188ItF89twSXlBiWeWoOqW0uNlLgt79pdcHjRntqn
tHerDl04kp4bV19O+6Y+W6T5qX1N95LUDyncoNz/VVMLH3jd8+o9Tlf4qfmp
fUfreuH8mg9L/ms+L96v4tXVGZiSGwvXUj9Zx1PWfblPwZbX3NWHX/aXC3Yt
/K18r3qh9JeCe6oTtS8rxqpGWHwe1a0lH1RHLzpdef6y/6LP+C+eTMEHxaty
n/JP56L58Mqxks+aJ4UzqEen+VCuL9yjxL+8X0t5bFlH5V0l97RfFJwp+Lz0
5WUPUZ/tWupC38l2VbNap0svLpim9avreOWDqf4t9bh4wjoG7S9XfpdqasWu
Kz+29KmFx5Z6KZhT8kTrUeui1MuCLUv8XxirvUM149U79H68fvG0yxpd9Wut
r5IzZY56jfpgWhdLnqgWK/WouLGcrVXPdvFklj6u/lsZf+nFmrflt0puK99Q
zrBwTv2s+lc15tVnxdsFo0q9KOYvnpWOrWjtst+tZ5mUlxbMX3Je91YWf0b7
o+Zw0VxLvSsXVU677OOXOr16n4zmgHpQ2iPKWuh+4uLhvHJPx7CM86q+tN8t
fot6VupLXOGV1qD6uoUvKT/RutbzSIrJheOpF605pv6Y9qPidSiHKeMveaV8
oHDO5XyLvgtrwbovPJwvdIeOc/FJFt1d4va1likcYHnfmtagYo7uwWldK78t
16jPrHq5/NbrGsW3ZX+h8Hnt3WWO2vcXDqY8v8RB+YPi89WYC/bqWiyfS76p
l7twJ+WcV1pG673kmOZV+dtSj8t5/qU3vXKp4E/JPfXtFfML/pccftWXenpl
T6Hwq1Kn6jMvHFW53+KRLn1T9ZSOrWDm1zxf+3vxRRc8+SW1jPYs7fta1yWe
qotLrSl30rNJBXuLdlBvbelBpU4LPij3UJ+kxKH0CPUzVRMpJuv6Llihvb78
bsltxZYrnq+cVmtB8eRK77xqfNGtylW0rq/8ZK013csov6V8eOGWZWwFz5e/
XXz70uOWPaPS7xb/6gv+pns0C35e9dbFZ1B9t3BgzYcS8yXffkktU2p26VNa
X9rvijd4FUPtcepHlbVY/B/1wHV9tRZKTWnMVY+Xnqv9+sqvLjVYxqD4ufRW
1d0lH1T/6r6DzuXqWYxS119omcLJSy3o3K8wWX2PqxgqL9K5lPHrPpHq9JIn
r/ot8Sl9vORM4VQFQ5Sj6vO/X3sviz9WenrJ2zKeKy384jYLf1v0acmlkp9L
/hQts/gJi77TdS96f+kLGsOSz6q19fqSw+qnLRx4qZ2rd2BqL9BYaQ6U66+8
lxLPL3Cs+DN69q/UoPYL5SSlPyqGL32t5M/rd7V2vua3Vz1O+W2pdx3b4gXp
fa56n+bM0tNLPNUHfuVeGYPWaekdZb2uOP+yh7K8I2XxKhdt8oXP9kUOl/Fo
Xys1rrihvO4Lfls4xsKTl97xxTm0wq90zEvvu+pZirGFRy38c9E1qqe0Hy37
XCU+V322cNFSR6W+Sl2X2tQ+UuZ4tW9b4qa87gp/Ssy1ly3jUU9mOXehnnmJ
26K59D7Kja9yZvET1NMrNa54qJyhjEe596KvS+5pn1301+ItvOJTcLWMp+Rk
mWPpC1dYt2iWghslN3T8WneLJ6O4p+9cVf+29KMSt9c91QdWD2HZRy7zLXvH
V5xh8RYWHNOzPdpHtKfoGT/tEaVetMYX/rl47F/viWg9KgYqH1b818+qB6+4
d6n9wlu+GE/B/zL+K/2yvO+l5HM5t/PKwyvOsOytK6/T/rWcGV5q6uodLOqP
lfGovlOv4FVrBQ8XTar5U87XFXwoYyjzVc2ufmzBzIKNyzO2ygfKeBZuWeqx
8BnN7QVnlvVd9k+/2KPX/l44rfr86hkuuf3C5AUbC14t+KneV7m/Xv+a75Iz
Jeava5YaXDh/OWuq/egKi0q/K7HV8Sin0r6mHGnB0oItur7L736R20u+Lc9V
KT8pa11ye3nXVvmtxb9ddO7ybivd41B+Xnh+0WVl7iXPVRcvHqbiifJM1TiF
p+mzIUt/1DiUevmCkyz3LPmweJKa21d6UDFBY665sWiE4s8UjqEafMGZkgPa
p1S/a69Z+FLJt9cYih/4hY4u/1SLKa/QZ7SV32rtlxovuFFye+Ekqq81P3Wf
RXu3vg+zjHPRIMvzp6qXSz6rh1lqsOSSvhe0zL3E4XW95n+JieLV4jHqui8a
c+Fg5XeVaym3ef3W4p3qmNUrLtpQz7GXtX71UMVn9eJef1v2yBSf1ffQZ/RK
r9ScUW145RmW6xU3vvj8muPV+bqSt6odlHt/sQ9bMHbxT0qsNJ6vtVDdWnr3
8qyQYkLhOeW8zeJjFDx/5arqes0NxVuN59Ue4rJP98Vn7R3l+4KHJf7L58Vz
vorblXf6yrHib5R1WbhHwfaF66qXqD5k6RdX61KwUfNNtbnOsayRrnvhMOpv
XHmnOsfFx1ueg7jiw8oNFNMKnnzxWet9wcYSK/VOF//kitt/gUVaj0Vrq05X
rqhYrTy/9O4y3xf/X3wM3SvR/ljyatGhi3eqc7zyfL7mw4rzC6dSLnE1x4Xn
XGGj7jctHHvpX+pxKfaWOlrySvlhiXn5W90rLxxAvbXCORcfQ+tarylrUbBI
zyQs7wdTTqta8gtdoM9WlDn+ks99fx2HK2xUn1/3SkquLv1LNcXCN5a8Un64
4NXSp17j0d7xhddR8vYLjrrwk7LWy/Xao7VfX70jQuNcclJ7d8ntV5yvcmmJ
w6LllSdovi1+gvYv1RQLdmntl3guXnThmfqMxtKDyj/dL7jyEheOqr7Wou+0
J75qUHXE8sx+0ZiL3lzivODkXwW9s9S4YmOJW+FCVz7215x/wSvFSeVLi2Zf
eKmub+n7JR9K/NVLXHiy1oViwlXOK69YdISudeFLJT+1x11p0oJpX+gd5QCa
/0XfKbaU3y24pJyhYPjVOWfVp1fe9Rf+VcGx8u8Vn+VsTNHgJZ4Fl17jXN6H
oHWtv6X7C6Uel564+NKLF6FjLhxD9ekrl1TvaJ8t41l8+9f1+rvKyQvOX91f
v3/FZOnXX/To5ZnEknvqUy2aV3vW13tJpS60by41tfSIol+Wvqz1WDB58Uy0
pvQ5wYKlmj/Kc4pvsOxnKc98zf3qXKLev9TdVS0vc1ny6nV9wYqS28rTvvAP
F65b4vOay/K3mnvL/oiu9RUPL7qm8HN97nvhYOr5/K7uqfG/wrEXLi3vmli8
U73/4htoLS/Yqz1a8UT9LuWWBQeW/lXqXfcNF499uU+Jg3LjMvfiP5ff0v6i
PuTCM5c1Wsb8xT0XP+3KPyk4c1Wny35o8QNLzix/u+SM9v0Sf+3XmpNLX9N+
p31We6j2uEVbLfV7tUeg72IqWKG+yi/5/rTls56bWu659NArf6ZwEtWMi4Yq
WH2lIxZ80Jwp2L5oEPUECj4o3yv8oWD+lTd41eOUx+o+uPL2pb9c7RcsHPWL
zyWGJbaaw8s9C44t+4CLf6Jzv+LDS11r77jCB+WuV77E4vEuuFHOM1xpSe3p
r/tojytz/xrTCifX/rLol6UPfvG5rF2J7cK7lO8tfrXy9tf3WjsF0woH1nNQ
ZWwFT77Ah8V/LnNZdL3OXXHjyj9c/LQXD1kwQftj4YELFy24pF69cubXHP8q
vCeh5FKZy6Kvtb5eY1h4o3JRjUOJbflbxfkSB8WrBR+UixZ+dcXPv9hj0p6i
91w84TIXzVvlxj/+7pU/XPTssi+5+JmLH/I1/y9r8eKfui+melbzRH1Oxf/S
j5Qnl3suPKfsPV3hcMk97V8F98qY1aNYsKLUiGqEpee+8qSMf3nuQDm25r9q
kOX5o4XbaJy/5vwlzupxlTjr2hU9Uua1/K5ixWsM5T7ls/r2i4YqOLzkrfI0
5ZZXekT3yktdlN6nz9doj1avo3CbKwxczgOoXitrUTBTudbSB/Xz0ndURxRM
Vk20/FbJmcIhS27rXr9yy2X86gkod9Uaed2naCX10LQuCvf4Qgtc8f/CH9QH
Uz6mGFj4jPI3raMy36WOyvVX/GrhPNpbF1xST2DpHVqzhX/qHJWfqJZXzqMc
r/zt8sy48uqFt+tvKTdYvIUXDvxf1dioDQ==
         "], {{0, 128}, {128, 0}}, {0., 
         1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "1609022451969"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "\[Rule]", "0.3280329406261444`"}], ",", 
      RowBox[{"4", "\[Rule]", "0.6716435551643372`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztXb/rZ1cRDQoitlZrZf4FBUHF78bOToitzfqrcSGQgKJV/o3dUrCyttBa
tLILVtrYpRC72JoFCV8hE87ZmTNz5r1brEw+vr1v7tw58/u+ffNH77z9s8+9
8cYb733x4/95+9kvv/vuu89+9YMvvPqPnz57/vWvPf/8x+T7//vziv7rl//1
8Navf/L0nT/85tuP6Q8//NLTv//4Tw+//95fHqLfIxpZh12TXT+zpmL9qj2y
/CO0ep2MzBW8ZdZk/24njjI8sLJS6G3VHjO4zrxLbXMy/GT4f/niydNP+/PB
P/758MdffPDw0fvPP/X/f/WHXf/xmuz6CJ/RmlVyyNDR+ojM1f6oSmcQnjO6
1LmmG45YHtjzyvxR77HzfDPYV58pK+eIz+gZhB92nb/9/CsPv/3+vx/e+uF7
T7/x528+ffN333r6nf989f9ohOdo/WjNx+/N8B+tidDIHiM5I/x30pkzyuhk
5nm13NQ4UshZsXfFHjvPF7FXCMarMIvYAYWcWX3O2EzENj5+Xv0uxA4/zrOi
d0XPIHhB+I/ko6AR/UHOKIMFlh92zSqZVOEI4ZNdU6EPij12nu/j5yMbwtaO
MphF+GF9QUZ/MjQiw2gv0d4jG555F8J/BkeInkd7ZPXNgY7OSG2XpugqHLEy
QeScyVvZOESxRzUdYQqRLSJzFrMI3tlcIxMPV8Vpan3IvAuxw516yOLLDUfI
uXTKdsrfsXk3IhNEzpE+Z2IGti+55dxZ+1BlAxF+It6Q2Jj1QQqb3BmfVL1r
Kt5GeiKZ+qSbbayyS27+LlPDdJYJ0pfM1ASmdBLpG6rfhcTzj2lWbqxPycih
Mz5RvCtTn6+SFVszdKsLITy41QEyNIuj6Bk3mbB2KZNrT+kk+3vVu9j1o/mf
Kj+ewfJ22qEulKkZOteF7kBXYcQBa6zubanzRHhBfq96V8b2svE5K3/n83Kg
FXUhtubPntc500NX2StEx9zqPBGfbF6WeVfkK5Hn1fXqjbMlbrjIxAxIzb9q
Ju2c6aFZexU9s6W+15mXsbireoadR1LbtCvRVX4c0SU2Pqmayz30PWk2ZlD3
SbfTivn5qt5Kxl/f7ayr/Dgi84xsMzNpdzvTQ7+evWJnDxz21Ukj8WEVnZlj
ZGO/O9cQpu7BqWV75zM9NG6vtvRwp+hOHGXmhDN9w7vVEBR+HDnHTtne7UwP
jdurLT1cB7oTR+ycMFL/Ye8UX7WG0OnH2W8cKe7E3eFMD43bK/b7MA57maI7
cZT5tlhGB5D+/pVqCGo/zn7jqEq2nf2LQ3vSyLzH8fX3xBEyI5SZM3HYo4Mf
R9aPnsnIVt2/OLQnXRUzOOzFgd6OI8R2IffWt8+WbPHjSA2WvSdS1b9wO9ND
4/bKgbct9HYcZe5/ZfyIc+7j7Mer4jSFzJ3P9NA4No/vntXzThyx97+qeN6S
+2zx41V+zXn9Q+vsyfHdPnquXj8Tn2d4dvhm2lX9eMavZWR+5oX8abccdiO9
HUesr0d0QHE3xCH32eLHq2To9vyhe+zVxhy2k3bDRQZHVd+LQPjJ3A2Zyn22
+PEqv+NGO+B9O63ws3f23Q64yOAoEwOw8sncDVHXhdz8sgJTnd8VqaLvHFtO
2SuHNZ3p7ThC7EyVfDq/79eZ+zjQd4jNtvPvQCvyTYcc9uihLh7IyCfze2ds
s92P3+GbS9v532KvFPM/V7KZV9JD9XxvJBOFrNg4BNFPhzPK4Hp7bLadfwfa
IT/dbjOvpIfq+d7OfwetKq7YqJNIL37jN5fuHFt22isH2tlmXlUPFf5aMQNf
tRcWI846yf47axu/uXS32HLKXjnQzjxfSQ/V872ddjKTi6lzn06MRM9v/ObS
He5TO9grBz6deb6SHqrne5F/N3xqLxGfyDcw3XSS5YGt0XXqz5XWd6A31qXd
eL6qHirs2JT+sPaZrXu4+XFFbYrVQ7Uf3L7+FL2xLu3M85X0UOFbp/Qnk4sh
dQ/2PppDnKC+16C+W3eH+9RusZCDH3Tj+Up6qPatbLzdGSewMkTmZJzjBMW9
BvYc1frm9rwDvbEu7cazm16pZxczNBsHVuEoM3cU0UgtCPm7U3GC4k63+ptL
22kHm++QbzqsWbW+g15V6aHCt2biwAyOWBuL9HBZ+4zkBW5+n/Wn6m8ubafV
8bA6FnJY343nLfcgqmYXWXlGtpSNA1kcVdV5kHoUsn60ZtX8/FRtc2pGdyPt
UBdyyDfZ9d14Rs7UQd8QntnZxSpbwcaBiMxZ+4n4IMSHsjkOYj/d4k8k10B+
vzM9VRdyqzMr5hDcauMO+sba5Ey+w2K/qobP1g1YX8PKk9UBJF+YsgOI/JHf
70w7zAs51Jk30uyZqs+xCvsRn875jlvNoWpeKHpeIecqnVd/c2k77dCv2ViX
dqBZPGZyFoeYpKrH7WB7HeScwT5Si+uMPxUzFQ76r6an+jVb7I8znamNO899
ZezMVL4Tzf9EWHPQH1YfkFocG1dX+aA7x/AKP6vu1zjbny309nv9mX1lZmnU
8YZzzUFxjxjZV9X8fFVP5260wyy6Q39hO83WxtmZ56m8DNkXYlcd5gyr9u6A
fdbPsr6G9UHHzr8ePTWLrr4/cmc6kici/yk9UdtShzlDNzozX8rOrKr7wofO
40g9i56pHzrYH2eazacey805L3PIO65kr6ruEVfNrB789tuHzln0iB+kfril
Lu1ARzJke6ZuedmU379SvFFV52FzRlZX74xfNe02f141e3zVOI3FNYu7yOY7
5GVTeYdDvuPgyxTxHjvvegf8qump+fkMRlh7fqU4rdNHZOb6FDowdd/E4Z7L
FPaj39W98i1zsBtpB/3M8IDoGHsXfkucpqbZmi0yV9Ppx9W2qPO9brhDcsOM
rz93b3toB/1keWD7lacupKMzNX+FH1fkng73XBxwh5ydw/c0DmZxzEb6rNZP
lgdEf5BvUp26UC2+MjX/qm9LVu2lqnadea/admXqPNHvbBx+8DWL2am6ZdWa
bLyR0W21H9xII3FyFPci9jzjx1l6qm5TdUd1ytewPdyN3w+8Eu1Qt8ysOTUD
dupCny0HBO9V89uKbxdH6yvqNmzsXaVvU7ktMmN88KWjHeqWim/xdc6AnboQ
LgfFd73c/HjnvZiMvk3VeNm7PAdfnnqeWT+j84gNiexSp99UYMeNZuMHxXe9
3Px4510YVt8carysXmX2e2idnnfqf2ZusCqe3IIdt/hB8V0vNz/ucC+GnXlw
m01F5i7YGpEDXhzoqe/zKPS8ysZmespu2HGLH5DvRbB/d2quZmr+J3MuijnY
ztibndm4Er6m4rSN8a3axjr0RxxoVg4sxju/69VZn+k8l7vNPCC13y34mrKN
G/Vfncs49Ecc9MeBzyr71lmfmbI/d5h5qOrFO+BryjY6f6unyhZlbJdDf8RB
l9wwnvm90w50xg9n5uH1dNgBX1v0zYEfdW7i0B9xwI4bn6x9c8hPO9+r/u7N
xprw3e6RucWTVfyoa++I3nZiYUu8quaT/a5XtE5nftrpN6vsuUPc1anDDr5J
7eOm4rQqfqbOyKFX4hyvqvnsrOtW6Vin33SIn91qwgoddrDtDvrWyQ87n+ys
51v6KRsxjuC9ylZs8ZtTtsVh/Sod7tRbBx/nMEfHzidXndHGHHAqXnWTbaau
63zPy8H+ONiKKR1ztglu+pbh5/FZT81kOsdgap63YJw990zuqXhmi/3ZOPOg
0DE3m+AWp2X4Qe7vqGcy3XolndjZiHH23B1oN785hX3F8wodc7YJDvpWpf/R
LAcyk1P1XVCHXkknNquemXr+Dn2ZKfvj4CvZ+jD7vV91zqiwCQ5xWpX+Z+YZ
MmcU+ReHGO9K2FTQ6m/+OPtrtf3Z4k8R3VB/y67TJmzRH4T/zH2TKruB6IZb
b24LNjtjaaRm6EA72B+3OWqWjs46iv+jGG9L3uemPwrbhcT5VXYP0Y1IrxQ+
emrNK9FT3zTb4q+RGMwhn2Xlyfr9KX3I4NdNfzrncKpyfHZOIPIXVT5a4fcd
sDmFqczvbnhX8zM1R62QJ5LXO5wFi18Hnqv4yew94+vZOYEoFqrqP7I4cp43
cKMjfZjyj27+Gqn/OPsyRIYIXjrPgsUv23901ufM3hGbjOT4SD0f4bmq/7h9
3sCNZr/5s+V7Jp3yUcRvanmyfiqyIYqzqKp1ZOzVlD4jckCeR3Q4U5PJ1JSq
fPeWfo0brZhD6MR753xF9HumTq62RVV1hqqeHct/ptaRsVdT+szKIeN32Lou
opNVcyOI797Srzl0Ld6n/DUS67rdf8nUGRTzhBl7hcSKyO9snKnWZ1YOrG2P
cjdWt9m6Pas/iO9m45Aq+s51ITXt9n0VRJ+Rvzt1/yVTZ1DHh26zsopalvrO
LFuXQ2ZvkN8jfa7KLyJZOcwf3q0utN2fZtav4qEqh3Wwn5n4kLVXanyxMlHk
buxMDtt7jZ7PzPhl+tTsOXbiVOHHHWysM63G+5S/VuSwU/aTnQdAbNfGWVlF
TTJzZ5ad23n54sknf5D6fPTex+uw+u8QwyvixlMX8vGnbv66KofttJ+Z2Ji1
ewo8dupqhmbvzGbkman5RL+z81dV+rbR1zvs66r+1NlfO8zpqfcbxYfsvekM
Hqd0tcqnIPtl5cliIaOTDv7azdd3xpnOtMO87hZ/reijqfdb5adYPCrwpZAV
2weJ+EFqhhk9z/S+p/o4zr5+ox909qdXne+tmtPrtJ9V8WQGL1X4UssKiecz
dy1ZrGViD0TObviaiou2+MEt/vSq/FfZhCn7ycaTGbxU5XFqWbHfPcjoWObs
OucKHOzD3fqPV/KnV+Ifmf1gcdF514CNS6ti16o8Tj3Pg5xd1Cup0ttM7IGc
BWvHHObxHPqJDn5wiz+9Ev9srMjaBPVdA3V/XF13Rfym2u9EMXZVnIk80zlX
4GAfHPqJW/qPDv70Dvyzd+pZn8L2DRU2KoNNtzUzelX1DQRED1ldUswVRDXM
KXwpfP2V+o8O/nQ7/yyukXlvdl9Vdw3UM9uZ2LVzzYxeIT63anarCl+ZuQIE
F2xPYWN/oTMu7aS3z8eq+Wd7ghEWqvJxRWyp1m1FXqbe19TsaxW+EP4z9TTk
jtv2/kJnXHolf3Sl9dm8gLUbihigM0dzqKlW7YutmbB+uUpXq2pBbH6KvIvN
MZ37C+q4dIp/B5uwZX121hrBi+KsM7Piilm47bXWSJcytZcqXa1aZ+oeunN/
oTMu7eR/+3zs1PoK+avjQEVc6oY1hUw6Z19Z3at6RpHjID4u2rtDf6GKdshh
OzF+t+cz8lf0hTP646arnRhk7VsV7ljdU/dBMjkO4uPY/tdUf0EdVzvksIfW
zf+w8WSmL5yJLZ11VY1B5HfnOLDKL2dyHLZuj+Aok6MpckB1jqle37k2u4XO
6Cc7I8Tigo0tWT7dsOD23i24U+wxiu0zs0lsjpbpL2zsPyrkc2jctmTOl535
ydQ5nWueV3rvnXEX1WGqZkoRX8P2F7b3H6vk46A/W+hMbMPOs3XOhCvsgAIL
bu919kFTPg7xC1WzSREe2TqtWz+xqs6TsVeHxuXD1jyjGInFVwanU3WeKn7c
evpuPqgzForsbZQvs72tqnpOZh03mt0X269x0DG32Aap/7DzbIi/mJoFqlpf
Uaeaeq+zD5qKhdj+QubOI1vPyfzuRmf2FT1z1fxUbdMy82zIv6mtmAl3vueF
rO82p+Tggxxiocw62/OgjXQUZ2awsJ3O2JaqemMGg841yYx9yMhNYd/cfJBD
LMSuw97nPXStH6/C43Za0WdBZM7iyKHe6FxHUr9XcUe707cqYiHkecU9l0PP
+n0H3tR7zOw3U5dT38lS1yQ760id742emZrrdoiFMvESe8/FwVbcga76logz
nYltFDrZeSfL2W5smf+p+jaa27xQ51wKW1s79Cx+3fLTThuF3Hl32OMUfYf5
H9aObem5KO6YIPNvSHx18LULvw57qdrjiUN67MbG+Z9I55HfHXounbEc+00h
RW3t0D1+381mVtWWTxzSYzec539YOxa9y6Hnoo7lMnW80xfehV+3upAbP1ei
HeZwOt/L3mnq1DfFzGrGp2TozHdUHHCxhVbgyK0u5MbPdtr5HpnivZkaYKe+
KWZWHWKnc0fMH79usYQbP9vpLffI1POK0d+twotCz6u+CTkVO507Yp74dZtb
cOPnSvSWe2RT/VP2O1qdPg7hObKxUz2+c0fsevh1rhWfutBnY/Dx7273yKbm
FqJaRCaurtJzhOdoTaTHoe4bIr7g9AL88et2Z9MhtnGm3XKizvmfTP8U+Uar
2sexehvVUth5V0XsxNr2u+F0C34VPLvVka5Eu+VEnblb5g4IEv8js8QZH5fB
EYIFdU+N7fOeO2L++FVjfKqO5CC3KtqtV945/5Ppn0a2C+lXqvW/SofZe+6Z
2ImV27kj5olfNcan6khuMszQV825FHMLCB3p5GNbhKzvUGtF+ETqXYjfQWpo
iE7erS/sht9OjE/JxEGGVfRVcy6HvbB22MFusP1uxX6RGAypp92hL+yG306M
d8qEpZ3jjavmXHf4bokCgw6z9EhMFdV5kPr/lc7RDb+dGO+USUaGbnnBVXMu
hcyvlN9FGHGbpUdmpdj6v4Nfuyp+nW2Cw4yiW7/4DjlX5/yPg01gdRLxBZ01
E7YPjtgBZF8bcwEH/G60CVNn5FBPuEPO1Tn/M3WOan3onKVn47SXL5588ieq
/yP7ysy+up2XW93VzSZ04pTtl6nzlLvlXBk5XHXvCM9Ts/RInIbwicwRucWH
G/E7NUfXKUPF+lN5yt1yLjc5OOw9ksPULL3iDjK75pY8zgG/23HhUCvrzFPu
lnO5ycFh7xEPU7P0mTgzE4M5xIdb9PZKuHColbFzzhk9dNPhKX4c5ODGA6u3
iln6qR69Q3y4RWe279Gh9pXhP6OHDjrswI+DHBx4iGw1Uv+vmqWPfIe6R488
49bfd9OZjXt0rmv9FxMtYsk=
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2498882479071"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "\[Rule]", "0.00867873802781105`"}], ",", 
      RowBox[{"4", "\[Rule]", "0.9913151264190674`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzN3DHrvW1W3fHBQMYIIbWNEBsFIYXR0udBAmkDWltMQsYpBgJjEQKD+DbM
Cwm2NsOUNr6BNHkFElIImQGFn8WGz5d1nXGK/3CeH+fc93Xva++111r7uuff
/uf/9kff/5XvfOc7f/arP/ufP/ref//DH/3oe//jj//lz//jv37vh//+d3/4
L3728S/+4d/PP//V337/2//z07//5sc/+dVvv37+7nf/7zc//fHvf/vn/+5f
ffP18/X9V5+ve9U1XOt/df16r+XzL3Oc6zXrM9a9exXbV/f9Re7dJ/L20zXy
Kv6/yLjVa/6yYdfX7//Nb/2Hb//kp3/9zf/+jz/5J5//05/+5A/+zQ9+45tf
+39/908+y3fqZ1lD/c7Xv3993mUN9V7L50/E/FWcl+/LMy7Pu8T21X1/kXtX
r//LUCOv4r/k87Ivcs1630/vy/Wdqy/8zn/5zW9/73/94Nt//du/9a18rn3z
629fYebXa8r+yhrk2b/e63/+5a9/+4//6vq//vbrNZeYv4rztQb5vuStXOd6
xq/XvOJ/xfbVfa/n+sTeSc1e1/nnqpElf17lc41b3YuF239iXyQOV65+rZe6
d8KRruetz3LFSvbuWsOF59f3JW6y73IvifmrOF9xuLD0ikldj1znWtuFw9f6
l/te37/qa9m7q5/W2ry43ydq5Pr86fwRLFr6UcXqyvmXfVn8BOFs195dNViv
v+C/1IisU/ib3Fdw49ojueaFaa/iXGMlObPkRr2mrLle51qn9Me6d3Vtcl/B
7aVGJFYVP2U9krdXrUk/ur4jOksw/BV2Vc0rvU8079W/qh9b/ZPrvtX7Ev5W
r7P0EfFSJD9rnK971Tz/xJxr+Sz9pa5TMFD6gnxHnvG6r2jMim+yBqnTev2K
RZ/w9i+MFV1//avrkThIXtUZxLUGwZzKLS88vGIuWFq9YukvEuc6D7rqVHqc
7LV4DvX7i/b8xPxU8rDui2Ca9IW6/oUDXPl85ZjU2hXDGvPK8QQPX80ir+9I
3GqPkPWIhhLOI/dd5tdVX8tcRnrr4i0IDot2vq4p3FLiKc9Vvy9aVXJPsEi0
/zI/rd7IdU2ZMUlO1nN6si/CAaQW6hy8zhdEkwpmLn5p7a3V5xf+KThW1/M1
B6qmqFhaNbvMNcSPknM1cpap5nb1gasfKN6s+CHCVaTXCCes+CMcWJ5FYlI1
cp251xml7K/0d9Ed1XMWr6Z6U4LboiPEM5H4y/PWHBBPWHSZxEf0ReVI117L
voumq2urXKV6LDW3r+8LRl1rk55Y/RPhycIxpC9X/KlzmYqNghuf0EfVcxaO
IZq36tnFo6ia/cr56jVJH1n2tPqKy7xValY+C/ZezyJYXWdV8p3Fr5Med62n
cq26p3Iv0Sx1Xiz5L/OI2iOkR1fOKXtUvVDRF6/00St9UTX+4o1X7120fz2X
KOccrryVupM6Er4k3L7O/iSGy1y7erCv6rrGWWavNR+qVyx+lFz/lb8qWq/6
upUviZ6qHrXoKVlP5cMVl+Tvi+csmuXa92svxGMRTBDMlzUs2vzC28VX/Hrf
RbNXL+LCnCsOFWfkWZbZmTyveGLCveV5BX+W3i01Ihys+qtXPlSNIDPQyrcF
q+s+1lySNVQ/rca8zvXqzOL6rfSCyhlqj64cTPpI5UuigyrXkr0QPSjPUj06
eUbp44KH4s3KGqS/Vw0r3FJ4VPUqZR+XOWDVL9dv6yxbcF76i+RJ3VPhgbXv
1LOXSy+rGnzRBVcOCD9fZivCySsGVjwXjl1xo+pNqXepC8El6WV17lNno9Lv
ao3U2YTUl2DUwp8rt5dnqZ5/9dUFG+ua5Tt13lR5Zp2TXj6A7O8rrSc1VTHn
yhPhCTJbkVoTbV79Xun1NVcl3+o1X3nXy3siwmdqH6m6SXKsziauZ1x8Qllz
fZaqB5dakFyq2rZq2DprEB9D+pRwM+mh1dcSzlw16XI+RM5lSe3LmoXXVb5a
NVd9X/sVh5H4i88s+VxnFqKvq0aTGYGsoXqq9e+Ck5KHy7MIdtVcrbqpvu9z
7cXyrr1w6ZoPNd+uay7caeGNUkfSB4UTVg1SPajqRQsXlR4k8akavH4WbBfP
4Vqz1EXV17UHiUddfUWpccmx6tPWGWLFFsEN0b+itV99Fs7zipfK7PLaF+kd
gg/Vg5XP8ryiTyWfhRPK91/p1sXzWd4xlLUJZ6u8pfKH6jkI5svf5V5y5uTK
sWU+Urmx5PPCUa/ri89TZxbLXPgTmL/4osJLF2ysvlblPxKT2vdr3C4tv7x/
KlrpWsOnMaTWSz0XJ7W8aMBrv6oHeP1duHH1Y2V2Lz1Fcr72X9nrV75NrQvZ
r+rvVU16xX/B/FezLeEkosWqh1A9TPmt8BzRdJXHVg1b/y58vnKbiiFX/OWa
ld9W7BINWNf5ygMUviTcSXi4YLtgYNVrdc5YtZ5gpvD8Ja/q3FBwafGfFw9n
wYfKFaVGhGtVf6PqPonn8r5J9UJFQwkvkjNUVy1Ujlo1pnjmwuHFP6/8SuIm
M3qJieTq9f2r7sR/Fv+navbqe1efs+pHwT3JVcHtyqWlvuTZF14keV65omB7
5Ql1VihcRTBQekf1XZecr3pQal/qWnpK1W7CPeo7TRL/yq8kZ4RLy/WFwwj/
lJ4ivU98+Dr/reccqhYTfJPck15f3y+uZ9oXrvVKF1QvS7jBooWvfJNnl9+K
r3LlmGC7eDuVsy2z1+qD1T5VdVz1wMXPrDOLql8WT69qfMlJ8b5qn5L8rGch
xJORGpHckF5ZsU54ePUMa/+qOLCcNxZOWz1q0cJfv/PqzLPgpFxHnrF6GjX3
ZK9f4cwyq6qcXPCt8pw62xW+Vz09Wf9VF3VGWXFYeJH4G3JOrHI5yfll7vOq
NkVDVa5Y87xyHuFC4slUvlp575V7VbdePe7CzOX8+XJu7cq3OpOttSb5WXVr
5c/VhxQfY6mjukcSK8G0ijOiNT7RQ2XvFh9Y6rHOEKWOZN/Ff7uuUzWUYIvE
/8o96VmSV3XOeH1HYig6QvKwfq7vita+Jnq2ar1P+HvST4U/Sy++8lbyWXxv
WUOtqeu39Xy7cDnZF4mb9NCFRy0as3r1Mqu94rbgVfU8ZV4g+XA9V/Uqr2es
WljqYtHpix6vnyu2SG0Kl6h8STje4u+J7q5ek2iQqq8XDSK9Wzjq4psJr66e
8JXb0kMlVtWbEt1UZwfyLFX31boTTlV9SPFUr3XWObvshfDwqlmWmaDEfNG8
FdtfvSciObDsi/h71QcWHV31sjxjPVcgMzjJjaqLX+F2xbTq+YuPKnPDqmEr
XxVfpeqX6rFIvdQ+XmNSz35L/kjOyF4LH6gzwepviw8gnO3CB+G0wr0XH1X2
pc43pf/WOZfkwLWP0tdqr5EcEy0p+VM9nKrF6hnaiqXCMyv3rlq+eubCf6pm
l/hUTrKcNxDdKvplwQHpv1VnyRpqPtfvS90Jd714gjzvcra5vje9zBQkhqLZ
BYdFT8l66qxE+ssr3iW5VD3DWmt1LlB7sexj5b1Vuy34IL5x9UJrvSxzecHk
GmdZ2yuNWb2sa/3ST6/41Nl3ja3oC6mpyicrTgoHEDyXWFXuUWe4MgOqeyG8
S3JPckz0y6v9lbXJfLDWtcS8zozkOjUHFv4g9bL0oyvnZc2LlyL9SOpOetDF
wSQ3qidTdU3t+9ILJA71bINwdcHM6m+/mn+JZl80mvSaOtOvem3R9XV/lzhU
LS99uerE6uHUWAnmSP1eeucT/qFoZ8nD6iWKTpccXt5bF50lXFS4vfR34XLV
r656rfpskg+CV+LdVR+g1tGrfXz1Lnz1/epeC1esnFx4TuVjdS6z/FZmeVIX
0jtq75Z+If5h5aXyXILPgnsVk8Xfk7hVXVDnNQv/qXpH6r3WqXi2sobqEcl5
DLnO9VuZn8o+CvcTTSdrFr/0Vd7WupZ9r3rzyr0677t+K9pN8GTRL6JJpU+J
Xq4+aq1r8clFcwkOSN+X94IF06pPK+sXTvLq/QXRwpIbtd8tvkT1kCv+SD2K
tlrmifXMwKK56nyh+mziVcozVk/7WoO8E1e184JFkv+LtyZ9qp5Xrz6AxEF8
KrlX1QjC8eo8SPpFPQNQ+X/1WiX3KldZPPy6/iu2wpEE06pfJPtYvZSFK4qH
L1xafDZZg2C+cJLqxckaqn4RP7nWUe3d1/7Wdxkuniz9t9ayrEf6kWjSxZOp
PfqKg+h9yZ86M621LFhRvazl+9KXl/qVXl89c9GAco5CZge1H1UfSfJKakE0
RdWwC66+4maCV1JHy/y3zlirphOfc/n/TLiuU/WUPItovTo7ru9p1n5Uc1Xw
R+qo4pX0l/r+S+WKi56S/RItU3m19DLB4Vd+lMzgXvGuysOXWYn0pgX/Kw6L
L13nL4Jd12+FBy49RfpInTvUmhLfoM7dqn9VfXjREeIhV7+icr9Fj0tNVf1Y
82fpEVXrLVpJNEX1MyVnpBdLnlc9Ilhx/b1y5ldcovredW5b/QqJ8+JnVo9C
cq/qlIrz1UcVzln7/uI5V29Z/IrK/YQT1n2RNVfPrXoUkv+Ve1fut1xzmQnW
fifrWfqs1KNwOcFnueaVJ5W31N5UvZFlllRrpM5zpa6rn1DPRMmzC+eUOMic
pfqZ1aupumDJAfEBJGfqfEo8vTrXuLjr0ouXsxDiUy1eZfVA5L5ViwmWLnpK
tG2tF8F26dFyFlH8XvF5rjjUGlk0Xc35irEVz195aEuvFx23+J+StzUHqi6Q
Z6wzFOGZ8p3Ki2RtdSZS59T1uZa5sOSq5IDEfDm7UufU8vfq7VSPTjzh6h3J
vWodLfNEwSvxQ+p5iTofX2YBtdfXPb3+CQ9fZm21fqt+qbkkOr3GTXhRfcdK
vILqPQo/rLzoE72yztpEi9V7VY/64uHVX118knqvVzpO8HDJGcGi6jVV/01w
T/JcsKLO9KXehQdWf7vOYhZtssye6ixjycnK2aTXV2115a3cV9Zfz7IuM8fr
+tIrlzPtdTZRuVzl/4vWq/Od+ozy/WttV85IvgmXEByo51FlT2X9gnuCw0vM
Zf11LlBrWf5J75NYiX4XPiN7WueMtR7rfKdivuSD7JFgl8y5xMMR/rDwk9of
q09S67TGub4fXbmZ5JLw1cqf61yp6lzxDC8NKJhf9/rCK4l59ceqVq2zDJn9
XXhY1yl6WXhgxfxFp9d5qDxX1W7Vx646+uojwm+ld1duLLlXfTzZx1o74jFe
cRAvVPKkagHxQis/rx5I9R+qZhSOsZxJqNess6GqVatWEq4i+Saf63srS9wk
/nXeWnuZcNGrrutMtvqW0puqvlg0bNWVdf31+pWXVk9eeuWFXbL+ykW//rb6
PLWOqnddcUw4fPUtq/aU/ZL6rbM80fJ1HirxrOfoBDck/6snL72vcmmZ6Vz3
qnpTanDpHVWziPdSPwsfEN9peU/2E55h5Us1ngu/Feyt3rvg/5X/1xoEu+os
T2ZS4jNcMZc117mw+LRS+4IV1QOs2kSwejkDUGtfuLTks8S88qVPzB8rJ5Hn
qrqp9l/hvZJXEtvFMxQ9KPW7zJTr9yvfk1xdemjtxXVPr/qt/aX6KuID1zyv
GlbyYXlHZvFm5beVz9R5gezXMueVOlr2TmIonET2Tr4j769J36lnOZYZkGi9
6hGJB1K9tfquSsW3hf9XHVrnCzX3pDarrhfdKnsqz175YT0v8UrvLHgleVV5
l/Dt6t1VTiv3euW31BmZ9NNX8XnVU6o+qlqpzpWudYrnL71S3nGQOhVeVP26
Oves3qbkUs03mUHUOC8eiPAfqdmK4fJ9ia3wxiWv6r4LB1g8Q+G0kv+CaTXm
ovHrnOWVt//p3lG56KJ9KqbVPitzhOp1VKx4hdWCb4ueWmam4gstfFV4SP3O
4vvV93FkPRe21H256kJ8+Hq27RNYXXmdzGIEzyUHZL5WPU/RMte+v+odcs6q
zp7qPi4euGjnV/OyV9qz+hs1DlVP1Zmp3Et0d8U30RqiQUS7VX0qeSJ69spb
+Y7kj/Tfa6az+NXCw8XXveIm+k7+Lv5YXafouDrLk2eRmnrFXa/nuuIjuV17
tMS59rjrmrVPVT5T/W3pI6IHL4yqs6E6a1j8mdrLKvcQrKjnzSTPa07WdwFk
XvMJz/9VPxW+Xbnl0tekFiRXqwcrXkf1QOqMTHSorEF6rvQaiYn0EZkDitaW
/JRnFP0uWFFxterBxQOsWFH3RfKzziYEo6oHVTFEvBTpQbXGX8286rxAsEJ4
e+07Ui81xxYPvHKDpXdLzCsXlXPFVcsLJtczGJU7yXWW2YRo6sU3Xs5uLdpH
sKLWoHCAOhdb9L7kTOVRgquL1/2J8wl11iD4UPdX9kvOnEsfqV7QcvZMOPAy
j5b1y2eZO1ftsGCIxF88wKs2a19ezktU7lF5bPUipF9XbSs+sPR9+XvVRIuX
UmdbNT/rWVDhb5KTdbZee6WsTfj84tfJfRdvQepoOf9Quas8S+UMS85UL6jW
zqu41ecVjS+c7dW7D6/2/cLwep2qZaquqfggvFdyRvZC+nuds4iOqPOv+v06
U5P8rJxH1iMcsnKVxUuUOEv9Cj7IHP/KpcrNRMOKF1TzreKecP6qs6RfXN+v
un7h57Lvta8JFlWfs86pFx+scqfFZ6jn2SQOV/6I1yr3kpm+YJHgQPUkBYs+
PScV30D25fqOcAmpkYoVS50K1okGlxyrvsQyH6nap3ItWZvwFsml2rur9qln
dQSXagyvnBQ+tpwDkTM/greVb4vGeYUVyxzqWqesX55F9NSrOekycxFclWtK
/V5xXnyJ6nddeCWYX/V41adSj688VclV4Yrit1dvqmrARSNLP6r1Lty19kep
qeonVE4oe/FKx4lfV/NW5pIyz1184HqWqc7Uqh6pM9zqXUhfEI994UXCnxd/
o9Zmrd9lRiOYWblfPZciWvLTM5Tq/0hfk5iLt7Po7sr3Kj8RHit7+ol9v/rC
0pdFC8jaFnwQHlJ5jsTq1SzyWlvlCcuzy9lRqd+KY0s8l34hmqjylurv1b5f
z9XUGYrwgeX9neUcjngjotmF79WcX94HWbx62XfRBZJvUguV31aeKXOx67No
n4qf9dkrRgnuVc0ltVaxV/p19dNqDGsOSJ+qurtyRXn2Jf61z15rED5f60W8
9xrbOseUa1YuUT2Z6qPKvteeWPlw1Tt1dlw9dvGyrhy49E7FgarjFo+lcpVX
OFDnd9VPW+KznJmv+PyKK4q/JLy3ek1yTfG3xb+SmF/3Wt61FC9CsEgwoZ7H
EJ5Z1yb6XWbrghXVd6p8VTTvUrPi7VSvuGq3+u6S+NuCjRUHKj4Ix655LjOm
5XxO1R015y98uOIms60rtsKNBYsWrli1T+VR9QywfBZ+K/Gv/E1wtfbTqlkq
tiycsHqA4kdVr6D2XOEtyzmrRcvUfBZ9LTxHuF/1soQPyB5d11l8SJnzVm0l
368xr/7b4qtUnVW91oWbLXpBauHKw4rhUu+vNL70slovdXa86OiqUwTzX+WS
xHOZL8h9Jd/EMxHfr/aOyjOr7y19Weq35nzlXcvsVfZdNN2io6t3WnVZnTlW
fV39tyvOC0eVfZRYyZ6KfhQcE0yrXqXUvpzHqz6bYPIyz61zpeqByOypcjPh
6nKutc4Cqi8q/Uv6yDLbqmcbqg6quVe1SfVVan+pfq/gj6yh8gThbOITVo4q
3oLksMSnepVyfZkjyD4u5yoXnKk8dvEqJWeqB1Lzv3o7ghXSQy/+UDmV3Eu+
86pO5XkFh+s5RvHNJOelZqt/JTxK1iPco+Zk5Ww1J+VZlnOzUuP17KXEp2rb
+tuaq9KnxHOo72fVOW+tKXnGeu6xejvCsYWriH5f+uPij4l3XbGx5nz1oJa+
vJw3Fo9FepDkbcVD6e/iTUnuXX+vc0/hwHWv5bkEr2Q2UWcitRe/ypNXnHbx
TKqWrF5f9f3qHLzWmvTlZQZavdxrneJdX/lT9WD1dSVvpY4q95DPghvSE6+Y
VF9L9I7gT41PPQtX+YCsWfpU1fj1XrVfS3wEq4W3yzXlOoLtUguCybUfCQ5L
nOUZq29TfbA695e+U8901T0VjKpaRjBW6rfqLNGJgnuCY9KXL2yUGpGzcJIb
4tVI/S6ej/CQ6sFWzr9oCuFLoptEq1YeW71WyfOaS+InCFepWrLmg+BJnQUv
nFM88+tZ6tzn2nepr+r1XX12mTXU2darnJE1yB4Jr6ucR3h45SEXpgn3EEwT
Dib7WDVI5cDyLHLmSvK28tjrOtXfls+y77U/fr2maL0aq1d8e5lbXb9d1iwe
kfA04V1VK0lvvWpN9kLiIByy5m3VtjL/FcwX3Kua6IpDPQMme1p5xeKzSV2L
1qs5c+HVMn+RXil1V2tHPtc5XT1P+KpHS85X3SR5VXt97d2iNarfuHhfdZ4l
dSp5VTmqXEdqvPqWkg91xlq5sczshKtXb7POhqrPJvlf8V9yQ+r6wuSqiao3
XrVPrc3KTxb9WHu05LzwJeH/dYYlOFAx6hXHkGescajcsnpu1QuqOVxnrHWu
V3N1mV3KMy4zwcW/qj5V7b9yVlCevfok1/WlD177Jd6L6Pfr+1esxOOVWhP9
WHNStLPkf+1lwg8FH4Q7LXy1chLhb0sc6jyr1ng9UyE8UPjwwklqrspvKz+s
2CjXERyrfVO4nOzFtR7pR8Jnal1XbVh944qrVy4tHpfsY9XCFZeuHJZetuCP
7F2duVStfdVs3YvqOUut1bnD0ncqL1rwRH4reCt4vjyX9Brh57K/lc9UjVb1
/qWzljlO1Qg1t+tZcdFBgreCJ9WjvuIsMaketWDp0l+qD3/FQTSC4KTwmepR
1JmO7KPUwuIvXTyncgbhABUbqz8vfEaeq+qL5V2nKx/Eh7ziJtdcet/iN0pO
1phXT0xqUHJS1iy9SfqIeDjVx65cSGpw0Tui35ceV/eizoYWDlPvVXuucEjh
bJU3CseozyucWfh2fcbqvy3zBanNyqsXbVt9quV8S/WuBVvE75VnrD1u2fer
p0sMFz5ZdcErD1z4jOjfmld1diCzIeEwErfruaS3CmbKzHHhhPXsUOW6CwdY
ZtwVKyqHvPKhar0rDqJtlz2VvBLvsfrzoq2ue706D7xoruu5rr8L5xd+JX1E
PJaq+4RHibaVfie+qNS47IVcU3zC6pm/4jyyhuoDSPzFI5K9q+dGan0ttSPx
kTlI7acVV4XDS26LTpG6lvlO9Qoq/5f+InhYdfGif+vMsZ5bE75U/c/6DovE
Tfrg4glUn0E0yPLOWuU89Zyb+ABVey4+bfX2a5+9MGfhJ8uzVM4vHLvO4gXf
ZJ3yW+FO19+rd1RnYVJT9Zqyj9IrK6a98jzFT1i8l/q8db4snoDsl2jJuo+i
VasHUq9T3y+ufVw0S8WW6lfXMznVb6keTtVZVYfK7EDyp3rCVSMLF1q8lGXO
Us/CiZZc8rn69vL9hT8v3otcs3oj9fPFo6oPecW5zqalZuuspNad9HrBrotX
17mY9CmJj+xX5TBVF1TfvnLsiquLXlj0da0RyeFl7lbf/xLf+8p/0deyp1JT
soY6E1n6yMIrZC5Q5ynVE36lwSsfEJ1Y80Qwp/p70lOEy9W8qjy5enqSM7WO
Kn+uPe5ag/QUwXyJrXAeqa/qpy1e3Nf7fl2/4EzVaMtcrNaXcKGqB6WPiMcu
8w7xogV7Zd+vtcneSZ+tz1u1Q9XUdR5RvaA6P6p+i6xH8nbRYtUHq3xenkV4
uGgr8SWqtyy+jfAcOS9XeX7V18ussO6RYEjlCfL9ZX5dzwBUL1T26LqmeP7V
p5X8rHMQyU+pwfp+zfJ+d501V91U9ZFwGNHI1UsXHitzCtnH5ZzwJ3i1zCMk
l+T61a9b6u7qWVKndY/qTLl6CNVLl5jI36UXCz5f1xeNL76NcIkF04Rf1Rl6
ve+lbaVHL+dAhGMLZ1h8Y/GdKm+seVvxUHwSmfvI81ZeXbVMnde/mi/Uuls8
WOGulXvUOWPdI/FAqn6pfW3xaavmldhWj0J6jcRqmeWJJyY+YdUy1fMRb0E8
WOHbV27Xc0GSn9I3BQ+rvlj885qTEp+qVes8t/qi4j0KX6q+d/Vw6rma+rzV
pxKcrJq9emJ11iZzuhqT+rzCfxa+Xd9brN7m4i/V/BF8q9xJ8ET6oOSn4I/o
tdo7ZD3SayqeLzN08d+qn1Y9mcqLpF9UTBB9IX6O8NWq6apvvGj2WqcLt68x
qZhQ55Jfn0v4dsWZWlOC/9IH6xmG6jEuXu4VH9FBiz6VeC7co/aX2kdEV9Yz
CUtdV9+p9oUrNyr+C4YIx6u8UXCpznqEP9RzUwsnl+uI9q8zazkneeX2FZ+r
vurstfowdR4nNbvokQUHJCcFuyq+SW5XfVRxQ3pB9T8lz4VLVJ4gcah7Kvx8
yYelD0puX71JekSNZ9Xp9V4LJ7+wSLBXeOCVn6JVq/8s5yVEvy/nmq6Y13mo
6LsrbpKHy4ymcmDRSsIrhANceSLxqVqv9gtZj2C+1KDMr8WPWnivxFCuLzGp
54KEC72qC+He0n9rTS08qvJDiXn1PEXjSx+pXoHsY+0Xi2as+SYeVOVIVUcs
8ZHrV85QvYhFx9XcE313rUc4v+TDFbfK5yWfBesqhkjvqzO46rtWzS55cv19
eYdLYrJoXun7Ev/q+Uufqhx+ycM6G63e+DKvrP160RFVLwjvXbzr6mOIjqu5
t8wyqkaQ3rqcAa7PLpp90Y9VK9U5jvSLK2ck/hX3Fl+oap/lnYLKM8XLWs77
yfxF9q7q+lc+Xp1Riq+yzAcFe+v164xv4ZOVvy3PW/ua9LLqNUm9C79aauTq
BRVz5O/13JfMoCsflv2V2q/9vXqhl1cvtfmKS7/STfX8lTyXcNeKOaIXxB+o
MZT9/YR2qHMKqZfKJ2uflTXIWdDFB65+kWgWed76/lr12GV+V/u71LLUY+WE
dX+r9yu8RTBKcOaqo6XeK34uukl0vVyzzuMkbpV3iXZeeF2dXyxar3odlbNV
P0o4TOWQkueCjde+V61X/cPKhysfWPhV1RSLL1TjI/tbffhlfio9VH4rebVo
hNpPa0+sM476d+kFNVaC4XXWVrX80neuPKlzjbrXNa+W8+HLWYvl7NniU1WN
ILpp8VVqzki91Bl69fwX/6F66dLXqqdd/dXaB4UDvJqxSu0vcx/BjVrvi+cv
a77wue5L9VWkz9Z8kL2W/K++wdfnlfOi4v2+iptwQsE6wVuZcVSfs+rEym9F
R8vzSp3Wnlh7mcwQq26qPPzKpaoRKg5XrlvnwoKNtR4rd6penOSe7NHC26VX
Lj6G9NDKP6sXWnFP8K3y89pz6/xCriOcZOmzwp3qnEWeSzDt6unS3xf/rfag
qutlH0XvLP5G9U7FL60aWXrNte+1T1XfVXCvPld9d+mqnfqO8OJjSF1X7Sk+
p+Bq1aTCz+X6lT/U90ClTqtGuGpEYlX7ZvVSlnlBxa7qRYuulHr8RByuHH7l
/8hz1XMykpMVn2tMBFdrH7meq85wZV8kt6s3+ApLJR+u/H/lb1QPVjTIJ/xY
4RiSq+JvCycXfivav3ogkg/iMwjfuNZWvVzJGfE2axwWXVO5jVxf6rr6GJLz
C2cQXbzMDqS/S6wkl8QfkFyVGq/+p+hTwb3Fe5e6q3158WPrXiy6rOqs6hvX
3JZ4LjUi9SJ9U2qqakCZqS0aZ9ER9f0m6QXXd6SPL3MBmbuJFhP9WzV75VTV
c5PeceHbJ7TA0kPrfK2+B1qxUb4j+SDzhdrXqhch+y78rXqMdTa0cJLqgVev
uOZSvaZoHPEfap9dzm5JnUoOCF7J3yuGV6wT7lp9bNFB1cO5+p3w88VXuXhI
xXOpL/HZrvjXfK4eZuVXwpGW91Kr17H4XdWrqX1c6mjxtKv2kbyt17ywUfih
xK16GhUPhZ8IXi0cWz4L3laeUH1gWZvEQWqh9qaq05deLD1Icl682eu+y3m2
Gv+aG4IJ1edf+o7sXe1HwgMl/tUzl9yu16/emqxN6mKZXS61IL6c3Lfq0JrD
1X+oswPxgatPIjx24eeLzyx8WHjy4jlI37m+U/XgwiHr3KT6chd2yV5L37m0
lcRH+JXsi9SFxE18V4lt9UOq/3OdKap1LRyj1oJot+qXyjpfcaeaD5IDgntX
jxAtUM+3iP9cZ81VB1UtI9cUjlq1legj4Q9LTxTfVfiY6KDFVxEvbtECFZfk
vpfPINyy4uGCk3UGIXUt/FNqQXC16q8lHyp3qrrvWmfl4Yu/eq1TPLrq1VT9
tei16qlWbKkzaIl/5ZnVC6ozzeqJvfIV671EC0gO1DjU2ceFmaJ9qh8iZ4cW
LVw1b+VOdYZbdcriV4ueqhysarHreYW7Xr+97ivPeO1L1V9LX6s6rnrdlS/J
M1btX3NVuEfV9cJ1q69YMUf4ecU3iUN9b0L4tuSDeFPSX+pMrZ43kJyv71nI
s4h2qP2i1lHlLQtfqrgh+C+6vupi4UtL3VU9LvxE9Ev1LetZC8HDinuCOaLr
q+8n+XPFUNZZPQ3pa+Iz1M/SHxedWM/ASHyq1hP+UHm+5Fv106RfCMZW3nLV
VD1PKLghffyVzyZxFu0g9608pJ6PqvOIBR/qjF76VMUi6U1yHelNsgapzepT
1X2UNSznmuoZnsrhRYdKfQkHFg9ZNLXwEMmZr98XP1CwqGpb6ZuivySGtV/X
+9bZRNVcgmPC+YVTCc5Lf5G9Fkyo8+4rt6XvL1gneCV5W71f0bPSO6RmhSPJ
ei48eeV51tqUZ/zEeblFa1ctKX1EfBv5bZ0vCC+S2q8af7mv8I2Fb/9zzQKE
u1afUPZi0S/SCyQnBQ+rFl68ROlT1UOr2uT6LDq9zv3lt8ssT/RFXbPkYeVd
MiupHn71smqvkZmmXEdwRvhh1eOVMwiHqT5bzSupiyWGFYdl1iC9tZ7nqV5H
nWeJhyBaW/K/zuJrDVYNvvDJhcdW/SI4IGuTfZe+U2cBot9lVvVKy1/frxyv
8kPxcySHRY9f+ys9ovIZmem/8kglNxadW/ln7S+y11U3CQ5LPix9XDi2cJJa
d1Lv172ueqzzgnpuc/E9ljwUXJI+u8yjqw8pNSjPIjxc+NISt8Xjqnkrnxfu
Wj8vHqnMAj7hR9VZhvClyocXHBacqRq/+hKCq6JBFk9evN8643s1W1/wX/Kw
+ttSU4KHwtnqeebKtUT7yLPI30XLVB9p8SvqmcnqLQgmLB6pPGP9e8VPqVnR
aFfdCVbLni5xk74pfbz2btn3qvWu/KwcoM4FKqcVrKucf7lm5VqVQ17vN8kz
Cif5hCYVflI14/KuWcW3yo3Fk5HnXWb9CwdeZmqSS6Kjaz3WWYzEatEOss7q
AyxaQGqh4kbFisqvFu0ge1rnU9c1rzhXbBEOKbGts57r+4smrfOCen5M8vbC
25oby0xBckPOoIpHuvRQwQTpNRXrpJdJjVTfZpnn1nmN8I0rVxducz1vxYqa
S3LfyltEO8ie1hqUnnjtXT1bLnPeurY6Y33Vv2ReIGv7+v2qoaQ3SW7UmcLi
fYmfINpwOYMt2F7js/BMqaPq28jcpM6nZFa1zBxrnlduULFr0TWSn8LfZE9r
bS7e3aJbK4+qvP2KyZWrtX/VWUn1l+o5lqpNFj1YZz3iGyx+l/AlOQ8gnPZV
/ktOVj4jHLU+y1VrgmPSQ+s8QrTqq7lzzdvqG9fclpqtNV57nOBS1ThVL0iP
q73glTdbfVTRAnW2InUt2Fj9cPG4qudcNanUo+S/5GTN/2VeeeWDPKPgcPWX
qvYUfr5gQp2lvpoNLV5EXZv0vqqXX+GSxKfmauVItY4WvSPfX/SF6Ii6v9X3
XjRIndktMyM5D3/h1f8Hl6iqVA==
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "250248309401"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.036564819514751434`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.963435173034668`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzt3bHrHEUYxvEQQazFxjKNIliZzuJOqzRWsVKw+AmxCAElFmLnH2AtaGkl
WFrkj7C0tlQsbNVGRAMWKzjwDjNzt/u+n+IrX2VvM7s3N/vs3nPxzvsf3v/g
9q1btz5+7p9/3L/55M3Hj28+ffvZp//y4ObR3dcePfOPfvYvT/2Hh3+dfnn9
i9Pdz985t/zVX58/f/TH16ffbv48tby1fWQ/I2NYMc7ebUZ8xXnoPSez9jlr
+5Hxz5oPI+/7rPm2ep6PvBcrxj8y5hXHsofXrn5/v/ryxf/lhds/n34/v3F+
5ft3//Pft/vsfW3v9r37GRlnr/eOp/fP7T0Pkf1E1o3efc7avnfuRd7f3vkw
Mp9738dZ82rk8zhrzLM+FyNzY/X5v+RrV6yfrW3eOj84P3nv5dM3d+6dz9/e
O/305OHpu5d+PG19u01rn63XtvbT2iayz+1+ImNr7bN3/K3tW+NpHW9kPCNj
23prPNt1o/d89o5h9bltHW9kPkTer5HzPzIPZ83zkXH27rP3vRtZE2Ydy8gx
znpt77o38v5ut4/cg2yvF5F7h5H9t4hsv91mO4be7DHy2tVExtY6V5F1rPec
7+3ctuZYa072zqXI+Hu3HznGWfN89Zh7j+vox7J6Pveuw7PGM3Lt7t3nrPwQ
ySQjr13ts44rMjdWHO8lz+32WCL5JzLm3utp5PNYeT6smFdHP5bIfI6sn71z
I3IvvN2m976glVUi+xy5Vs7Keysy8CWPK7IWHXH8vXNs5PwcJf8fZT6s5ujH
sn0fI882R+ZG73yOfI8QeW3v89hZz9hXvPaSOWfWdxCXvMdZfW4juWJ1Nr5W
/j/ifNjbPfLePPKsfuS7ichnJPIMP3JdiFx39pCxK7Dne5xZRJ759O6z97VH
ef6caT5kOpYtrbV6Vucqss5HcnvkniXTNfqIvud7nBXHFVkfZuXJS+Z/86Hm
sUTuEWb9Wa1+4Mh9dNZrNPZDK4f0ZvLIXJ31vTAQYcU6ufr72Ugv6IjXaL5P
7/1tTiTPR/Z5xPzPa3orz8z6flbmwbUYyf+9v4uPfHfms4C9EXm+tKJXtodr
H8/ts/J/771A5DdZPgt8D5l/pMMs/2PPzHr+H6F13TH/sTdaGT6ybsv//Ci+
Iv/3rvO9XSPOr+Ur1m35B9fikvnf838cndXrtvzDM+X/1ufF839+RF/9ubj2
9Q21uGT+713/gb0h//NMvjr/R/6OFL9t50fxFeu2/INrsTr/9/7//vy2HXtG
/ueZfHX+n/VZ43wPvmLdlv9xLVbk/8jfbRi5HrkXwN6Q/3kmX5H/R37bFfmt
PefyPzDOJZ//R/7uOJkfe0b+55lc/4dz+R810f8B4sj/PJPr/3Au/6Mm+j9A
HPmfZ3L9H87lf9RE/weII//zTK7/w7n8j5ro/wBx5H+eyfV/OJf/URP9HyCO
/M8zuf4P5/I/aqL/A8SR/3km1//hXP5HTfR/gDjyP8/k+j+cy/+oif4PEEf+
55lc/4dz+R810f8B4sj/PJPr/3Au/6Mm+j9AHPmfZ3L9H87lf9RE/weII//z
TK7/w7n8j5ro/wBx5H+eyfV/OJf/URP9HyCO/M8zuf4P5/I/aqL/A8SR/3km
1//hXP5HTfR/gDjyP8/k+j+cy/+oif4PEEf+55lc/4dz+R810f8B4sj/PJPr
/3Au/6Mm+j9AHPmfZ3L9H87lf9RE/weII//zTK7/w7n8j5ro/wBx5H+eyfV/
OJf/URP9HyCO/M8zuf4P5/I/aqL/A8SR/3km1//hXP5HTfR/gDjyP8/k+j+c
y/+oif4PEEf+55lc/4dz+R810f8B4sj/PJPr/3Au/6Mm+j9AHPmfZ3L9H87l
f9RE/weII//zTK7/w7n8j5ro/wBx5H+eyfV/OJf/URP9HyCO/M8zuf4P5/I/
aqL/A8SR/3km1//hXP5HTfR/gDjyP8/k+j+cy/+oif4PEEf+55lc/4dz+R81
0f8B4sj/PJPr/3Au/6Mm+j9AHPmfZ3L9H87lf9RE/weII//zTK7/w7n8j5ro
/wBx5H+eyfV/OJf/URP9HyCO/M8zuf4P5/I/aqL/A8SR/3km1//hXP5HTfR/
gDjyP8/k+j+cy/+oif4PEEf+55lc/4dz+R810f8B4sj/PJPr/3Au/6Mm+j9A
HPmfZ3L9H87lf9RE/weII//zTK7/w7n8j5ro/wBx5H+eyfV/OJf/URP9HyCO
/M8zuf4P5/I/aqL/A8SR/3km1//hXP5HTfR/gDjyP8/k+j+cy/+oif4PEEf+
55lc/4dz+R810f8B4sj/PJPr/3Au/6Mm+j9AHPmfZ3L9H87lf9RE/weII//z
TK7/w7n8j5ro/wBx/gZCLTu3
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2382182512148"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[Rule]", "0.00009108317317441106`"}], ",", 
      RowBox[{"2", "\[Rule]", "0.9999067187309265`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzVnTHPtdsQhr+QiEKEQqH0CwRROm8UCo3i+AFyBInkhITEoaPWS2g0KoVW
p9RL/AqJQvwBJCK7Gbku18z+XsVzss+bvdez1qyZe+65Zz3P95lvfv/d73zo
zZs3P/zoP//z7nsffPkHP3jvJ1//yL/+59vvvf+Fz7//4X9+/Om/r399/utv
P/nyx3c/+/LBz379pcfPf/j4m5ePfe137/zi5197sX8nn8mY5LMdv9yrrJfc
t9iqrPHaPtd23tqjMv8tm2/51dbfr/erfOci9rdiodj5wpem337xN997+emP
33v5/Xe/Ov72E3/58zvf+Publ0/99kfj3x8/P475+Hn6/nTfaRwyB/KZ3Ivc
l/yWrNfOuayRjFPsY/fU2tna88In7XqL/5T5279f71f5bO1g97fEgsVP+3kr
Rqb5/+qXn/7PVfImsc/028c52HG+8q0vvfztT597+eDl0+9Mn8mcJ3uSfbG/
JWshHICscdpfu6fTGqe9m/5ebFVip/jkdE3rJTFlcYzMv9SM1/tF4vTxs91H
G/tb+Eb22uZW60slj0x22OIJWxj7+PlxniQeSe0z/Z3sBfntZIdpbvbzNI6t
+4h9Sq6xtrKf7TiEZ5JcMN138lWCk1v1yJRTSL7Y2i+L52T8yZ5T7F9oEcRu
BAfI2i1WEGx8nAPBOrIWElMEY0sMkjGJL9n5W98g+zJ9ntZo86O1lc1BRTsq
dX3RXmwtUPJC4YTT+LbGKbi3pXFd13pbWsQUpwRP7F6QfbexUGLc1pWWD2zF
2nRdawgT37C+8fjbR044jTnNYctWNgfZGLFaH6nTt7S7Z/on4YRkv8gai9ZR
7Gz9odR6k223NNstHdXyQ8tdSR261X+x+3jBtaY5FDuX2pb4Bpk/8Z+pxre2
evy7zWskNxHcsLpWwcmiB275p/2OxeELTk7sbHn4hEuWv1lNm8Rd8R9b35F5
kn23MW45MNEVXxvXsr5qa1uSR0gclR7BFAvFPiSvEb8inGEap2AsiXey9mf6
p8UEgmOFkxOfnL6zpekRXkpseNE3L7FPuBOp9y1vKdhS/PaZXMv6s61trd/a
eu3xsvWaHd9yGJsTHy8yn6JxWR5beO8zfZXUQROOTb3mcibK+pLV9AheWb5k
z1pbDd/qk9PekflbjWKas9XKLGcgcfq2uFapy4q2Q+LX1qSlX2y5FuFy033J
ZxKPxPcsv9rSnbYumwetHS7ORFkf2NKgHq+t87TEtpafWL+61vGsTmv3xe71
M+OrxBHx+ek7tpa3+qflkFYDnLjcNP9yJqf4icX5rX56uUoetDG4Ve9b7m3P
T5bvWxwjdrA9uC091uoA1gfseQ8SU9MekXHeVgzafbE6TMkpBFct17V6jtUi
bD1bcIDEJqk7npkLCAcjed9izlafbqt3VnTmyWe2ahliH9IntXUc8ZOy3hJf
1t/+3y/iA1MOtX0cUrdaXXS6r9VztmxIONtWzJY6+sK3idZn8ybBnMKTp30k
9i/PYRH/2aoZt9Y+fX/rzF7R/7f8tuS4/8fL4nPps5B9t/s1rcVq7Fs2tL5N
4oLgz3U/3e7FVp4qtSfBtNJDt+dqSt/Nclq7loIJhWOQOutCV7d1x9uqoy8u
i8+E/5d4sT2X4v8XNiS+amsQq/GS98+UfjrZCxLXJU+VOZA+adEVt85bbmGd
rZ1tv9h+tvqw1amITYpW/Mw6+vqyGizJleXZeXuuw+qNW9opwWcby8TH7Bqn
OZRzRKSHS7Da5qnJDmQO05xtfTHdd9qLct6y8ByLgaWnXN7xQtZusYusd/rO
a6ijry+Ct1bPtHWT5Z8l/xbuTWy4lUMLz7F6QtFPyNqJFmS5OolZq7eXXrC1
oY3BC25p86DFavKOl8kOpV4ofGbCqGfW0a/hKjqbxQrC08q9SLxPYxJbWa2M
cKeyLxZzJv8kXHcah3yHrHFLz7c52ur2ZM7EZwoeEtvausPWp8RnCOexsUDW
S/IC0S4mW5W8c4nl/8s17bvV62zvhuASuVepWSxGEZ5WcIbsi/XVaV3EhlYX
2uoj2xqhYKyty4i+VPhJ4Zb2HJ2tTwmGEL/d4mPl3I71h1JHv7becdHGC5cg
49i6z56x3Kr9icZF/MrOzeq3ZM4Eb7fGJPFr3zNpucoUC/adTtYmJWeRXozF
TFKnl5xC5mP5WDm3Y/2BYKOtW19D79hq44VLFN1muqz2azUu2+OwvNHyz7L2
8n6V0usvfZBSJ5L8ZWucacxS/9reLsFtaytSF9u52XPXFgcsnti1W2zcWu91
LrC8iGAR4WOTrWxP1mq/9lxKwXAy53JuxOJb+VzyoM2PRcsifKPkd1vH2dxt
cZXgCbEViXESj/bs0HRf+64tgicEDy90DLteu+9bl+1nWU2GrJ34trU5WdcW
PtsYsbYlXJFgl33Hnc2D9iwo4cP2vsQ+tjdktR3ib6S+sDUImb/VzezfyV7b
/jjhJNb3LnSM0gvbGodcW35CsM5iuJ1/OfdS8Jn4qu0JFq2MYJ39t8Vt7Fg8
t5r/RS1DfMzqXdP4NhdfP1NP8g75O8npxYdJzFrf29IxyG9LL6yMQ/Zoy0/s
fIqWYtdI7LyljV+s0WLCNAfr80WTt/oeGX+rltmKEVIPTj425eLpM9kLq+EQ
rZ6cpSn1Nclrhf9Pn4uOUc4UkX5TGYfgrcUxwtOKXn3xTBbh2IWfEOwqa5x8
2/5bJxa37d8J1m3pG6WWsXWi7QVYv7XnQ0rtYzVDcl/L/Yp/ElwivkH8v+Ce
5Q+kF2B9wOqE5DskBkn9Re5LMMfmFJsjLJ+0/JmskdQmVj8huEr2xeaRaV/K
OU+LCdYOFifJvSxPs/5pn5+y+h7xT1Ij2N434VRW57H+M+HeFv6TtU82JHtd
6sTinyXXEMy3eXzyH1Jbkd+SeCn7TnzJau+2ri/6w+M4lpsVbkzmU3zMYos9
IzGtxb5vYUs7sjWC5auE50xzs/nI4hjBK4v/xW8Lryb7Zf3T4gaxG4m7KdYK
97P53drc+gaJ8fJMdOFvJI6K5kPixdqHYJHlIZa3lxqN2JnghtV5tuLU2pbk
buLbxB9snG5py9ZvLS5Zjr2lAxAcKPO0fQfiP/asGsEue9bFYjXBgWmPrvkS
+b7V6i12ld4f8avy/Bep0QoPJNgy2WGrZrcXqadIvJAYt/na+r89t2DPIpK9
KPFldQDb5yo9+oJd5TO57wVPIGskPIrYs/ClcmaS5FaCXZbn27MZZJ6TDe3z
F6WvQWKT+KTNL/ayfmL1E8vtt/j8pN3ZWsZipuXGtt60NbjVTKY521p+6ww2
wYoLnmD5ksUQy0m2+L+tTUj9Ne0R2Ttrf8LZJj+0fIDs9dYeETwsNTuxp7U/
wQ2LV+S3Vt+z3Jj4OcFAkiNsvUk0ii3/sVrB5Ev2DPaEV+SsY4k1m09tXWB7
o3Yt9szkVt9q+o49f24xc/qt5VdWOyrYXp4rsfFI4pp8p2DIVm048XkSR3aN
9izcxDemtRCsLrWP7ReXWtLmRzuf0hew+EO0I2sTiyFlLXZd5PvWHwqPJbWS
Hd/GGonlgu1lnnYvti4Sm5YPE2y09yo6jOUbW/yE+JitfQgXLZetoYq/kfsS
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
a+VMYNF5rJ8UHCjn6+ycLbbbnsi0j5b7Wc3NYtEzudO0L+R5T6uJ2TM2Rc8n
51KsfnJ9FZsQjCrPlhI82Zoz8Umr/RIfsP1H24skv7X5ZSte7L4TfZvMeavO
JXG0FafW523OIntXuJO1p+Xn5LyB5bREz7e13rWfFL8iNiEYReKr9GEJ37C1
idXxrF+RdV3kFPJ9so/Enhf9L5tHCC6VcYqf2Ni0Pn+RU6bfEp4w/d3WC0VL
L+OQ/EU0cBuP15i/pUVYnYFg9cV6rX5I8lTReKd7kecxi25AfKDoGBfvbSN5
pNh8axyLh1tXyaf2XI3VfGzOIv5vnxmx+GzPWpA1br0b5MJnrBYxjbl1Pm0r
F9i+WNEtp/taDCd+uLXvE66WZzRIL8yOSeZvbV7OE25xnrKPF+PbXmqJU9Kb
sLVb6U2QWCD+aef5zL4A4flb3M+eT9vysdLbsjzW7hfhKjY32X0nnMee057W
tfXetmmez3zfms2bW889kfmU8UnPjnAnYkOCvdP4ZE9tb4Lo0qV3Wfpir6F/
ZHkaecbfasvE/rbGvNAb7V7bGnPLN8ga7TNEpJYnuZjYbfqO5VSWK5K8ufXc
E9k7izNTvNg+JtnHcj7N6q5kjcWHt+ZW+silFrA6la2Ft3oB1oYWo6z9pzVu
5VDCcyxfIv5AapDiz6UnuGXPUsPac+OW99r4tdhFuEHJxWSN1m+L7kpqgXL+
09b7JDZLbt3yn8fLnqmzY9r3tm1xRbvvJKdvPT9F+OdWLbBlH8LzrU0KJyE5
3eo/W3O7iFOy78VnbO0//bY8e771Xkf7fL3lpYW3kPnYnFJ8yeqxZMypF0Dw
jdih6FQEuyZ8ID5sfaZwJMs3rH2mcWwMEryd9oX4mK0RrCZJ5jatcQP7/5v/
F85gcx/xGdvPImsh73XcqiMuak+CMwU3ii9t9aemmCJYamPW6lQEf2zMEk5r
7Wn9x/qJ9RmLIYSr23eiEtsSDLExSzCNzLPkApKzLt5TdKHjkfvani/hdZaH
b9WepU4kulbxpWLbaT4lb1o+X84FbZ1nIHaw2LulkRI7k3XZ+dieEbGbzSO2
p1k0yWldW35l44XoKtaXio5n12LP6hBMIPg85Y5pDvZ8IMGNC03GxrXFXsJR
SY4g41t+Vc6CEp+0e2fzoNVIyV4T/yw8jVz2fRoEb8n74ohNLvQ061dkH+1e
k320/K3UOJYjkbWQHGQ1TFt7kv0itro4M0ywyNaDlqPavozVme05c8t5CO5d
nKmzHMnW8nY+he8RfyP+b7VBy1eLnlbqphJfZV0WV8n71gj+bPm8zTW2DzLV
EfbMwFbdZPG/9I/ImFv15oSl5bxK4YQkFki9U/Zx61knixUEi7b8sHCqx8vy
uml8i2OWb1tb2efoyboKLyp7Z2Pf+ttW3V1iyvqnjSNrB9s/sthF8ojldUVL
t/YvHGP6vvUlsndbvQZ72R4NWUvhSMS37f5abk/8ZAt7SQ/rYl22l1c0EzJO
8dWi9dmYmuZv66aty+ZuG+8E9wr3Llhq+79bOElymZ3/hX3Inpa61V429q32
OO2X7etZrltqN1KTTnO267J6CPHVCevIOFZfIpyB4I/FQIIzZPyLXEBy7pau
aPV8y83svS407Wmetq4hvmR14JJrtjC5jG850oQztja38W51VMtzbC1c+rkk
3u2cbexsaTJ2f22NSfKvxYTit8W2U+wUe07rtdy7cF3ik29L0ya8a7qX7bOU
eLmuWwl3vajZbb/Y1hcFA7fO89t6wWKI1XVJ7FiuTuxMdMJSj5f6wo5jOZiN
l8luxJ4ExybfI7zO+vyFxmXtYHMQ8TF7ftLGS8Fk2/+yuEdiqtTsJL62nvGx
eELyfsFwYuetXqHl+Rcxa/er1I827xRNzNrQ6pnWPvYdd/Y7xc+txmUv+44C
4rdbGsIWJpO6tfRer2t2UpMWnZBwobLvFpfs+3YIvpXflvxl92KLD1i/mtZi
+3qW+5FcPNmnnNOwuuhWnUv8/OJ9d8TOBUNsnV7eK1v2xcYC4ZZTPr2o2a1O
bjHEnk2yOirxKxuz5SxWWaP9js0dlg+QNU6+VPiPrbMsz7T14ORLBIdtbWvP
uU02J/8GzUUusDm67Ivt2W3lUPvuO2Iry8GIfxI7E98m97IavtW+Sq1a3ndx
re8VnYr4FfFVa/+i/ZJYK/zQntshfRyrS1udZ3qWn+Qa4qvXZ24t9lq/LTnd
znnKoVM+tXtUdD/CpcuZJcsb7ZwL3ys+OfmY1Q229D3LMaz/kzxlY41giNXW
bG+05Eer81vuTcYhY5LzJ9bPi45KLhJTti6w+2JrQJtD7Tmlac4XnNDmC2KT
whsL/7c6ufXP0lcl8Wh7x9f/hprlw8WG0/etDmk5rcVeohtYbClnSKY5T75E
dEVbkxauaNdLfmv3xdanBGeu33lSOGE5E1v6uUUrs3uxpYGXvjnZI4uZBHtL
7ivnJK19rJ8TfLZ1mbU5wbHSD7L9lJJbL3RF6z9kT60P27xW6kfbu7eaMJkP
4YTT5+IPZP7ET7bmRvy8+JK9CB+zHMDyT4v59l4TdpV7EUwueu+0R2TtxMds
7JdcZs8Tkr0rumLh0jb/kj3dymtbejWxldUK7DxJ/i37bveIrGua25Y+c3HZ
enayp9UfbI6256NsbUjuZedQuK7NTWRPCf4QPyG+bWtSq58UXdG+e4TkYsvf
is5gY5Z8Jn0xwhWJrSz+k/qF7GPpHRP/LL3y4kv2svcluanUpNM4tqdG7lty
R9FwSn1EeJfl1TZHkPyy9Qwj+b6dc6lJt7hZ0RlIXEz3Ij5T+j4FB4gPkDxY
+KTVr6ydiQ+8tsvmLMJFLa7a3DHd1z4fZOdA5mP9zeoPhGuRfGF7kYSnkT2y
e1pq5y0/3Iq1oldbnlxqB/J8OsEBgucEq20+sn1YYisSaxdnki8uq9UQzcTq
D5arFA5JcIZw2qIhE32JzH9LHyb1kT0LsdVbt3oj2V/rh8/Uaa02Vc6oEF8i
+0LmaXUYsl7iPyQuiE+WczKvOReU/Gj5avltqQusj5W9KxqI5eTF5sSHJzuT
sxAk9q1tt85zEl+y+FYua5OJg5F9IX5y8Z6NaUy7XuJv9hlG0sMi/LDkzWde
FucJLhF8s3MjY1o9cLqs9nUR71Zz2+I85Ptkj2w/keBAyR1F57nWbEl/h/R0
yL5YHCA1vh3fnh8oZzyITxJsKbW8PXN44WMkLggm2Fqy6LRknK1aoOSRa+46
/XYap7y3YbJ5qQen+ZPxiY5BdAAbp9eaj9XnyVq24ovwruLzpNaw9ddWTrfa
L8Eoe07jOhdMcyi1TMnjdp7EByyG25iye0fOURPMtBhF+KHtq9o+I9mvMv6W
r148nz7tI+FUJC4shm/5wLQuu17rMwSryxla4ocEo4ivEvs8MxdMnwkHexzT
5vFylVqgcFrCRW0v2+r8Nu5srJVe2Nb5E3umzvoqicfin5a3lHPpFretDxDf
IHtE/NnymXKG1mpNBEvt+c+ia23hp8Wo0scvayE833KbwjkJnyy9J1IvWH8j
sUbigmDOlmZo9fDSt9rC/KJFW85J/l70UusPxObl/JjFZ+snZb+sD9h6dgs/
yXym/SKxaeOFfN/aalq75e3WtoU/2LxWcjGxCeHGW/WI7W9aHcDui/Vhe1/C
q7fiyJ6pntZFMLloBWRf7DsfbJ1o96u8N2Dy7eveccEQkte2znIQXy3PyE+8
vfSAiH9afyO5gORiUvcVfmXrkaKVTf5mz0AWzC+6FrFhiSOiURffI/5c+DDx
H/Id4ktFe7T8jfiV1d8K97O1tq3L7FmOyTcsJliORzgw8Ter52/1EYjdyHcs
vyp9itITJL5K8rWNTct1tzRGq5lsxanlV2SvyZxLji49EYKHNoda+1jstdyP
zM1qUFv8jWBpwWEb49Z/LP+Z/Ir0ESy22M/EH2x+JzmL9OyKfmWxy8ZF4ZbW
JtbfSJzadxAROxe7Wf5v86DNO1b7IthrdSdbg1heanHP6rdFf7M4bLVru0dW
RyV+u8XZirZpOWrhhyRfWP3B+gDhOTY/Em5p95rsHTmPR/bFno3Z0o6KXnfR
F7M4U/x2q/9IsHrrLAHJfZa/WS3d5j5bK5XPRaeynG1L29zyQ9JHLjmF6CQE
Qyznt3tqNcCCpdaXip5A9sJ+32Ip6cXbvpjVma2f2Hpq2lM7PskFxX8sDydz
s3FE8NzWrfZ5E7J3BEttbUVsVfRG4odkjUV3Kv5MtALiP3ZdhW/YXglZr7Wt
jZ2t+nFLx9jK0ZNt7bMnNnfbPSW/JZhQ/KfsNeGTJQ8SnJnGIf82XDmjZec2
2cHmDmJni88We4tmMn1/mj/pUdo8Rca0fInklMI3LuqOgmkktxadquRoYn8S
d5YvbV3Fn4n/bOVBEr82D27liOIPZb+stlYwbcLJaW6Wo04xQsaxOZHEptUM
S81iPxOstn5FYsfu6QWm2bqPxLvN0fYsk9VCyz6Wvba9b+snNg8W/YHg51aO
IPFIzvzYHnTBGYJpxE8KpyrczGKC/e00h1LbWs2QxJHVbAtWkD29xjS7FwS3
rT/YHF3WuI39/w3DiW0LRtlcuaWf2P0qHJ5g46StkWcfyGf7vMA0T4szllOR
NVpdiKzF2pP0gKwvTZoheQcdmc9WLiCxbLl3iV+ydoLthJfaWNta43UtYHV7
6yeWW1o7WN/e0hPIOWpi8+leNqcUfy75mtTI055OcyPnFYmeT3h+0bfJ3tn9
tbFg99TGS8GBomWR+LV1FtkXe17a1pVbGLWF+dN37H2LPkByR3n3xZaeYH3S
6nvEJ22slWeLJtuWvuQ0Z+JjtjdBMJDYzdYC1zxqC4cJDlibExwr2GL9xI5p
95fEiN0jshbrA1tn+ch3ynMWto9m72X1BOs/FxzJauzT3MrzXwXfbE1N7FBs
Qji2xV6ScwuPsvhmv7/V67H6ocXArZxrcZXkoGfWOBbzbS/SXtO9rA5J+CS5
r+XbFiu29ojgM/ntdF+rXW/1JQk2XmCI1UMsvyW9CaK3XPAE+317DqHko613
XBC/srqujZ2LXoCdj+ValqdZzLf2sf0s+3eLLWQvLN7aOVjNhMSpxUnSi7R9
yXIWmmBI4TNWoyM8p9SDBA/L87PFtqV+3HoPCcEf61dEEyBzK3qy5RWlBiFc
2vYf7fPjdm6W52zplhZ7S76wPmx1bIJ1JZ8WLctiiOVCBXsJN7Bxau9FfKZo
FOUshD1jZutQspYtnZNwVFLDlvPtpNYm/mbP+5H7ltjfyqFWmy1njQj2Epvb
/kvREi+0Assz7TuCCoYUPmMvGzu2v0buW/q2VhOzMXKhp9l12T0qeYFoU4T/
TGuc3iEwxc7Wvk//7gnBva334VzokIVHESydvm/7a2R/ybqKVkDyBeEwZBz7
PCmxbelDkfXaWLOYX+qpknfKsxVbelqpH0se3HqXyIXmYMexv7U8c/IZohuX
OmvrnSRb/ehSj2ydQdrSCqymYe1sx986l2V5po1NYn+L/1bDLzUOyaHEr+x9
S51L5rN1ToxoAtY3yvjW54sNrc+QuRH92fayLYcksWOxjsQ+yWt2/IJv09yI
nmO5eqkZC94S/lDOjFnNnMQy+Y6tkYnPE45UzpBP+7V1VrY8Y078hGBC8RPL
4Yn+aXkaqSttHrH6dtHoSK4h67XapuX/ZXzbi7fn6CYNkOCAzU2kTiT7YvlG
wWTL8QpPJhg+7WPJEY/XhZ5GcMzuka09SfyW2rn4m609t/JFOQtUzuuWvDD5
quVLJVdaPkx6haVHTPyBcCfSLyB9BIIbWzh5oc9YXnfRF7A9RxJHNma36k2C
q3YcgqVWeyH7ZeuOLR+zZ6UsrhIdwNabW70Yi+c2Z5FcOe0F4R4FB8ozWURb
IzVI6RfY2tDaZ0uf2crFJe/Y8w+WX1k/Ibme5JRSR1sdoGgI075YTkjmUHRI
4v/WH0iusThM9GQSR+VczRaPslhEMIH4/KTVlHVN85nsafsFZD5WB7ZYTbDI
3rc8f0p8u5yds7zX7kvRqy1/KPe1GoLlaaVfaX2bcAPLxwgO2Hxd+LatBy1G
FR5luUHpAU0xUvrF5Rn56e9Tv8Dmu1KDk4v4s80dpO4jvkHmSfSWohNucU6S
l6/7/mRPL85NFZ5v50A0W4IVxMdsjTPZqsQC8aWCvSSnWLwl35/+Tmolq1+V
Opd8xz6rWOZGLlIbWu66VV+QWLPclXCYi2dzbB6f+IPlRQRjCRaVc1NTzFqe
X/zZcpvpOxM/tJyQ2M3Wg5arFKy2+7ilpZM5F76xdX5v2l+Sy8h8tuZGsIvE
2la9THQVwi1JLJNzVuXZnK2zc2V/yW+nORefJDma5NOtXED2xerYBUutFmRr
QMv5yTwJ/tu8Y+spsheE4xF83qp/yXdKL2wL87f0QMvhCbexmGY5wPRbkneK
hmxz1gU22vkXDcfqdVu+TfainBeyPNb2VsoeEf5DaqUJK2wfjayR5DISO2TO
BLctnlteRPJ4yTUk7xQ9kORfMj7hLWSNtldV4qtgrM1ZW9hotc2t8wwT3j6T
d9m8Y/uA9kyatRvZI4urljNPaymcgdjTxhrxGVJzETy3ecrGgtWspriwuZXE
gs0pVg8hOchq8nZMe87B6swkbxbMt/llmqc9z0D2gszBjmm5VtEBJn+2z3CV
fGd7ECRnWW3HcgZrn38AnQr4IQ==
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "1552150347166"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "\[Rule]", "0.11963783949613571`"}], ",", 
      RowBox[{"4", "\[Rule]", "0.8800471425056458`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzVnT3KrVuxhQ8eECMjQRQMbIKKmWdvbwMEOTczO4pGgqCBmomBiWJgIooN
sAOCLbiCYCaYix0wM7r+gMJKJoyHZ4y5lsG7WXsx13znrBo1alS9P9+nv/qt
97/xoXfeeec7H/nnP+9/8N3/+fa3P/j+/374X//5+gff/Nxnv/nuPz/+4N/H
vz6/++tPvfnVn7/09osf+9l77/79h2/+9tv333zmL399E31+/O1pnmSMmdOs
OTkv/dza+3ovZv6F3cw6DZbMPGt7tr43cdTCwALPxj43/b7YS4mLfvmLT7z9
z/HJL//+Cz9+7//e/PSPH337+D0dkxyP89A56W/peGrn1t6TdZq9JH40a2tx
vsFbC8PJHhf2TOZpxaNZ29o+Zi8trjD7WmPYcNEpR1CbPx4//8P/v/nN399/
+4uPf+X4ORl/GkN/S8d/+Lt/eu9r3/v829/96CdvHu1/svPjmMff0n2d5k/s
mezl8fPJ16c5k7U9zpnYLbFngsnE763jcT0LeyZ+p3tv4ZBiwNhnHe8UM3Rf
hjOT8SeOSrioxQknv1PfmfmT8clvT742fmxhj+I8+Z7aM8FhdN5Aq1AfUV8b
H53mN/akdkhw3vJv4q9E89AYNPxAuSgZn/j9pu+Sfk5yLspjSQwucm6y/mRf
FIeJTRL8UOyZXjeNuwTDrRya1OAJfk55h+KB+prGQpITcQ6F+6L+TbQl5dVJ
bhI81srdBieGAxP8n8ac9H8rBg2ftNa/4N71GMpRBj8366mW9qbfU04wNewJ
kzTPnnxnakDji1NfbqHxkjilc5r6kdotGU99l2CpVeeaGMT9z3G/iPL8gnsp
Fy040+jkVj215mdTB7V6R63cas5Fc73JES2N1+JYOk+iLRfahuadxLatOnfN
2+t+0YmXqO5a51OjpVt+PM3TqqcoJ1B+NnhojTdjFr1N4y/TA1/ka8NFrfrR
6C7qu6SXQjXeWm8YnZDYx/ia1uOtvNPiirV2bWld89tWjCzy5uJI+pa0t2n8
1Zrz5Eeas1r62eQjiiXKdS1+TjDcyvWU0yjeqE2oZlj0DRY1i/EF9QuN09Zv
kxo8wYOJo9Y1kWd9Nv3thf4/5awkX7e4yGC1ZasFF5m8RmsTWvs/HuYeMNOf
b9UgFEvJeqjvjE5L/JJozmQe+ttWjBh9aPxOf7s4KCeYWF7Ug8bXFP+0tjK2
WvRDKAZo/mr53dQdSaxRHULHJHtJcGJyeuIL4/dX06gLDj+NWfeL1p+TvRic
Ux1Oucj42sTRTb8kHLvgIpo7kvOaOVtc2uKQhX9NvLRiOTmepV1bPSKDeRNr
tD5d2HBdHyX+SjhtfV8ZjSOT06lfks/J2lpcZHIrxRWNr2T9Cc7XnLbQKi2d
bGpkg5+WRm1x+M0YSdbT0icmTk1dT3t3Boeta9mtnL6oieiaF/OY63GtPkMr
LhL8tOIu0UiUu+j1plZ/b61dW9xLNcA6RpJ7xqivW3FKdfjNa5QL/WO4sVWH
GjsY25q4MPFrdJqxOeWW5HvjX4rDhENa15sonyzi9NXqERMjtO9x0s/0HQ7J
kbyny3BL4muDQ6p/DMcmazb3ObTwTON0UQfdvB5B+/wG28m+1tdwW5xm9G1L
u7b4c1GPtGxl8E95aRHjib9Mj8twwkL/GP8uPlMMnPQDzb+tPL7INQbDCc9Q
nJy+N1x089pTa/2JdjXP/1IuohrV7Nf0M81n+o6sJL6ozkk+L+qvNccaHWiO
m/hJYseMaWlag2HjLzqn0aim5lrgn9YsCU7oeigXGUy2asAkrls5ms6/6Dm3
8mmLEwzH0t5yKx5PeF7j56YmSdZguLflL4pbih+T31vXQVr9GfNeSnouwyGL
ayI3uW6hZ1pro9g2cWf49oTbBNunPVJdlPjCcNoiFxtctTTqYg2mh5DghPZA
Wjyc2MT0Z0w9QnFltLqJl0WtRONxoWcMPyc2bN23b3Ii5dgFfyYxbvJX69rQ
zTrd8LmpW5P1JD2Elt1MTkkwnMTagvdaeKN2SDDW6tvQHG24LlkPzX10v0an
UZ6k2ozOY+xs8Pw4xvxNE/qZ5uJFnb7QUS0MJ1g12sPEr9HYdC8tbBguNTqt
1U9r1Ur03e8U8y0MU51D473l69bfgWrV9QmeTY/I1M4UG+v3FFFcLTDf4lWK
E7rmBEsGP2Zf5vk4aitT1yRjFjlowbEt7dTaVxLvi/4b5QfDmev69PTbRQ1u
MNbSlsn6zbt6KG+bz1Q30t9SLJl7RBccsv6exvU6l1FuMZ9pD8rUicYmNBbo
eVucY7h0zZ+JTxc4XM9jxlPMt/oVp2N97aaVf2k9RTnExBfNO2Z8K5cZmxiM
PX7fuq9gwXvGj63rDuZ6zbP4M9GErb/DRbHd6u20MGB6sAuuWNRWC81jahCa
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
t5RzWtrD9HOobZO9GA5s5aaWH+kzlRS3hotoLJi4o/WXOZfhPWofmmsSXl08
85Kc1+DBxNfpt61cQ7lrcbR6Zcm5TK5p1Yk0Fm7u0WgP07swGn7Ra6W5PolT
894Ac67FPSQtXZ3YtmUTinmjJegYkyNOsWDW1oqX5LyL523X9eyiFqMx1dqj
0R7rd+8n9l/cR93iokWv42acmtzXsm3iU1N3GK429mzV1Oscavzbyput+wxN
rqRra+lYmlNavjNYTexg+remdjDXAhL7G18k9UILMxQDxu+tXG9wtb5eQOO0
1a9r5dAFNlprpvtqvQM8wZupxU461vToTM1rNCqdk/Zvk7ho1ebrmoja7TR+
cf9zq2fY4oEWrigH0nydxGnCSxQ/lGcMt5seFF3zooYytRKtN+n8NKe06keq
Zxb3MVJ83nyWnOaIBZYSu1EsUVwtfLronSZ4oLiic7b4ja5/oasp5yR+ND4y
tRi1j+nNLmrk1ns4Da8mfNjydStvUm4xmpbi1sRaa52tdwUY+yd+XNc4rfEL
+5hcbHIKffbZXH9J+KT1PpbEPvRZHpP3W/qqdX3WcCP9bQvPRqskfjT8ae7P
aV0Pepx/Ub+0OJb2/Be6kY6/acMkRxjMm14Hvf5iztvCHp2n1XdqaeaFPqF5
eaGZzXqMfWjNZTBm9mV4z9jQfKZ5isaj0Y30vX9USy/4sKX/qf6h8WKORb5e
nMtweItbDD+31kNjPDkXHXPau+FVw58Ue0ZfJXZO9kvnSX5Laxxq51aNY7TT
os+WHK0YN8+t0PUk6zS1c+tZOVOzG65e6Ft6LpNfknWue910baZ3ZOLR1COU
96jmvFnjtDDcytF0Lwts0/PS+DU1l8k7rThq6dKFL1rxldhtsa/F54R7E8y0
8mMrj7d4nsaF6Y0Y29Jj3as01w4ory56BdSGrV4BxQy9JtLiRmorgyvji1Z8
3cwj6yPh3sX7SUxcU8284DdTSz4eLdsavC30fytHUz+2egV0v4tnZ5K6oPVu
W8qNxo/r2mrBXbS/bfLIWucbfyW4NdpmnSsNv5lck5yL2tZcc2nViQu7mfqx
pcFadV+CydY7kUysmb0v/EtjYRFfyZyLHLqu8Vuamb43Y1230nxBcUJtbjiW
PmdKNfNiLy27mevjNI5uapVWzqUxnmDG7J1eQ289o72Ir1YNQr9f7JfGFOWZ
0xhzX595lvlkq1YvyPAG5dgWlhKbtHC+rkESP5r7QBZapVXD0hin9wuZ3NHi
qMSeLfzTMYteB722Ytb/rBp/UbeeME9jrZU7TK/m1X678KPJia0+Kl1DS6uY
/Gv0wGLvrZqlZSsTmxTzrV5HgnMaUyanUJ6nsUnHUE6m+DeYNIfphzzrtwtf
t2olqhMW1wsW+ZHGiMm/rRow8W/LVq14TI6E91rPOBhsmBhZ1Pj0aOkNiluD
/1aN/2q/Xee+llZPvl+8r9vovaSGTfZo1k/30uKQxA4JZiiGF3Wr0dt0/OL9
2IYTWtzY0hsJno3faXwZfnvWb+n6W/0KqtXXOYK+Myr5vsVvSe5oXVc1R0u3
L7RW4ovWPC2uM7nP1ICUY1t1ilmneRdrsk5zPZHacP3bRY/C4Nxco1zXgK3P
Jn7ps+QJzteaje691Wta1+YmX7cwTH1NcxatVU2dYu51pPZv3WtN12N0Zuu3
FJ+t3GfimmK4VQMm511wyOL6BY3HZ9ncYCnRKosaOflM70kztqUxtegDULy1
9JLJoVQrLvp+i8/JeVvvk6d8aDCf5CbDqwZ7Zs5kzQaTLZ3Zsnkrz57WRnN9
q46guabVP6RxRLlxXUu2ajfKLQuevKkz6d5pnqLYa+WLE8Yol1J+oHO2ePiE
N8rDJne08leyzgWHUB42fzuGcixdG9XtC66gsbPgNMonN593M7qihf9XiLVF
76LVWzBxlPi39XeCqG2Nrrj53gnjI2q31tpaWpSubR0XCQZO15uSfbXsfLNH
t/jtQmcmXPGsWDvhJ+G0RHvQXGPiyPQMk/W3YnmBZ4oT6sdFX2KBMeo7szZq
WxoXhitacZTYluLHcOnit3SMwVVLJ5hYMzmrdS+lub5mMEljzeTfNZ5NH6P1
d9yozU3Plt6v0qr3qd+p3SifUN1C42jxt36SNVMONL81+spoyJv8ZvII1cOt
z4/nXdwnT/8+S6vObeE52aPhE1OzrJ+nMLF/Gr/+ez0tLFH80HyU2PlmT8lw
ToI3is9kfIJP4xcTa3SPCz3c4gGDScMbdAzFjOEKwyfUX5SrzfhWPqJrMBig
mF/3tVq+oHaje1zrJYrn1joNR9HftnJrSw+3sGe0ouEN804502dOuMLEmuml
0D6JweQ6fhO/tP4OUYIxs05a+yxik+KNxoKJa1NbtfrArfXfzFlUC7WwZ/p4
hjeMJk/mb/XqW9ye4OR0rlbeN3qj1ec0PR9jZ8NXCQYWOdroMVrDLnJEEkc0
Zp+VLxZrOGEp0S0t7NH7M1vxTjV5suY1H7ZinNqB5kEa74nfafya3y76/9T+
5j2lNzFD8/WzekTUDgmu1vmCxsuCW25yjrn2RGO8xWmLeEn20tI/Jm8an9L7
Z1p7pHxrcgpdG+Uik8cXmjkZf7NHRPGcrIHeP2/4h/aiT+dqYXjBOTSnUA1A
vzc6wcRLovda+sfoEOPTxfWmRT/H7LfFS629rzVzi5+NrShWaV+R7vcU1y37
J3rVXHu6yTk38/jimuaiv2SwkeCE6hC6/tbaTD9hXctQfjC2Nb0Ug+dFf2PR
I6K+aN1TvfAFzU0Gq9RHi7g28XKTExJsrPtLph9IdQj9nvqLapUklunzhoYn
TT2V2Nb8zQvDycmaKfZOvqb7MtrP+DGxj/HFTd2VrMf8vYYkrlvPNbSebzX8
TGPc1AjJHlu5zMQUtUMLz1STJBhOxhud3NIG1KfUX0kMmr6B4WRTR1BfJOtP
fEHnp3Ma3FL+eVZcLziB1lY07owfTd29rt1MTWTq6BafU5uY92zTOKJrXvhi
3aukeEuOxd9kWXNRy4a0rlzw3iKuF5xgtFbLd0aPtWKN1m6mJqIxa/Bv+LCl
pRM/mjUncdo6TN5J5mldu1zw8EKftHRXq9Yw8bWI6xZXm7rJaHXaczbXgBbX
GigHLvLsoq5JfJf41HCIWfOiXqA+TexG+5O01ljzcIvHTvOY9w8sYnPBG2s/
mjUnPGzqrNY9z5SLKD8YTdKq+1q4anGIeT9qy4/Jvky90MJYYodkfGuPhocT
TCb7WvOqicc1b6z9SLma2n/Rbzc5+oRbGneJTmtdu2/dF9HCyQJ7NK9R+9D1
J2toYaylqVrvh2/1PdZc0dJjraPFG629mB6L0UJUA5s4pfxG/dKq11qf6foN
blu4MlxK+7fJ9zQGWxrG8Bs97+OYm39ngWLY1MtGj9EYp3mnxRt0L/Qw85zW
bJ65NrxkfNHC7UJjtHJES2+bg8bvCautGnPx2yTeEywlY+i5Wjq81ZNs1cuG
V01ctLSx6Yfc/Gx6Lyb2WxhucW/y3ITx3aIXZ2K81dtZfN+qMdfcbniP9nYW
Opzi3HDFAsPJPEYPGN6gsUx5zBym90JjimKJxkILk4m/Eh4z66eYbNUptLfT
0gZJXCQ1Ao01w+1r3ms9j7m4htvijRaGW781ucbwWws/NL+03idgtFYyxlxD
WejeBCfGzgk2Er/QGG/FSMJXtP/fwrzhdooBynvUtq1609iT8gblltM6W79t
xUJLDyx6zi2/U93V4mSKAWofoxlOa1jUv4taxticxuDN5+YWuYNihvYEknlo
jjO9oySuFxo12Vfi64S3Df9QbUM10uL+t4UObMUs5SsT73QNiU3MdRCTK1sa
ozX+WfmO9s0o17XyTkv/0HrZaLa1RqV8vsjpZn6jfxKOTXipVW+2cp+JC6M3
aFzT2Dz51OSR1n1f1C+nMXS8Wefi8816KomdRR4xnNDSbOv7IhZ8bjiQzrnY
u9E5tD5q6Q1aq9IxRsNQnBvNvNDPNDaT8Yv7h83azHGznlpoksS2rdqhxcOm
dk5i0/B5wjPrmsj0iMx+KXfRPEKxtHjXB+UoE1+mFjb6uRWzrc+t6xGLnLi4
NmRqkFada3LWgodpXNB7rQ2fn9ZMn11KDvN3HMyzEoZ/jFY3+FxorUUeTGxL
7z0wMdXKQeZo6efWelq5JvHvon6hOpDyAK3fWzxs7ougdU3r/p9X0FSt2KG6
iOKkpYGN1lqvofVu8FbtlnCU4cCWrqb9OlN3rPswN+uUdS+uVf8mNjS63fiU
5qxk79T+i6PFGxQDJ3ue8PkPtZj5yA==
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "72403648176"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.00554789649322629`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.9944521188735962`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztnb2qb0kRxS8KfiSTihioKIhgpGAi3oMYaOrME4yg0YgwIqKRoIEvYOAE
+goTGvsKhoKPYCIGEwjOoEHLof5UnfroX++9grrsu9n/Pt2rq1fVXt27+4s/
/OmbP/7Yq1evfvapD/958+1ffOfdd9/+5Vuf+Og/P3r7nW98/Z2Pf3j56//Z
R9c/ef/d1z/43GeePv/Bz5/++sH3n/74m9++/vIXPv203reesa49z1vlR39b
dd9Th+gzGTwz9YnWrapPM+VU+cPk81V+WDXuCP04Ob52jRFPmdHrDP4Zfn7v
D58N2Vff/+bTe//+5NPX/v6P13/71vee3vjVG0/f/efvvr3e91yvZa51s/6W
p5zofU8dMvhEn4/+Nlp/62+t/RjtU+u3nnKibYmW0/F8FOeMP3vGXQb/qn6s
wq3D56vGiKdd0eto/2b8JMMtVe390lf+9Pr3b73z9Oe//Ov/6rDWc72/Pm+V
Y5Vp3bf+rnVd5auWedpSVX8LT8vPPX26Pr+Wb5Xj8QFP/T1YdTwf9ROrTA8m
1rizMPfgX9WPmTGeGV9Rn68aI1a71lza87es3Ds6HjP8nME82t4qLo2WGfWN
tX+7+T9af88zmfpbfhLt00yOkfGZDt+o8qvMbz1184zxqn7MjPEO/rd83rqO
jpFo/64WzT+r+tTiZ+t+FH9Pezu4tMrfPJhXYTJp0fp7chKrf9ffVuF2Ov9n
8s9MmZYOHOVAqx+tfCDDpVWc4HkH6ciBq3yjqk+tMjM6fwaTjviSwTOaJ0zq
Px2YZOofzRO63+u7fSPztzL5p+faU0+LK9Znovmkxwcy+UaVn2S0l26OyuTA
nj6N+sOuWNBRfpW+0f3O0m0d/jbZL1Xl7NIiovlntG6e33rmcz35ZAbnXfm/
ZdF5tA6Lxse1XzJrQqz5gvX+ZFyosqr3qdNz/g5/y/jD3fg/6lfWbz3lW/c9
scbT15k+Iug/nvInx3W0DlG9Llofz7ueVZ9urKqwzZR5Ys5f5W/RPKG7X07h
/0lfzcSU9b6VT2bG+y79x1P+rnFdVYcob3twpulFHWMhWs7uNk37W1TLtXLd
7n4R/z8uJ/qO4FnTlYn1BMw9/jxpVfExMxY8nFCVB3bblbSaSX/zcMUk93aU
Q+OiDkyic82Z+ntivfSf2jp0vL9UfR8XzRMmsZ2sA80y+WGVv4n/Z8r3zDVn
/lb03V/6T18dqtapZjjBU+fJWCD+f5m/Wdcd66LF/32YdKxd9Kw5qVo7If3n
ZT7Trf9EnyesLxX/P/a36N4CHWsCJ/uXxkVkX63ic+k/tXWY1H8yeeCu+QLy
mNpl0fywQ8cT//N9NfN9t9UuGibSfx7j7ME/mgdOzhfQxtQp1q3jif+Zvup5
T49idQom0n+exyDP/nXd9STwjOx5X+j7r2vwv+f7jquu35D+87hMz/3oGuDJ
+QLxf970/deML036aiafv9L6Dek//rpZ/tOxBozGM3ezzF5eHq4Q/8+X38Hb
V1q/cWf9J2pRfs7Uk8Azd7Dubzk7+kX87+/TqnV3k2v5pP/M6z+efl/vR2NW
dM0AgWeuatGxXOVv4v++8jv0uo4yJzHxlC/953G/ezg5Onfg6WsCz1zJomO5
w9/E/7Xld+h13RrgpJ94TPrPc1/y/N3o2ROeMmnfmZ5uVWdz0N7L7sz/HXpd
9B2wo84EzO+m/1TN50bPrbDaYtVN+b/fOviB9l52N/7v1us8Z4hEy8xwi/Sf
Pv0nowN43u8IfHs3/u/gh8z7Qne/3I3/O/Q6z9l2nt9afzczXyD952U+k8ml
CThU2R34v0PP9+z9Lv1nhv8z3GuVmeHb6Pllnjp73jel/zz+bcf7+OmceaW2
rNah50f3e5H+08dFnj6K6nWTeHrKrHq+CvO76T80HLqxPb0tk+vzo/vC7eqX
K/F/BlsCnp5yovuNT3IRQfcgrP8h4FBlp/P/5Pr8aHwh9MtV+f9EPK1yLF3R
cx59NxcRdA/pP/xxMWmT6/NPP5dB/M/B0yrHU75nnkL6z2OT/tPnz902uT5/
17ecHf0i/ufgGS3Ts8/wpBF0D+k/tUYes5Pr8zP9bsUOQr+I/zl4esr0fB90
ivZCqIP0n3l/ztjk+nyrnKp+J3zXL/7n4Fnle7twk/4j/afDJtfnZzA58VwG
8T8Hz0z5BDwJuof0n1rb5WOT6/MzvLfrHGcCX4n/59tIyzMJ8Uj6zzy2HX9r
cn1+FSZW/T31IZzLIP7n4Bk1Qp5JiEfSf2aw7WjLrv3zaXh2c29HOeL/+TYS
8h/LCPFI+k+tdfgYYf98Ap7a/0H8v8t/unGT/sP08ypso+XQ9s8nmPb/5PQX
Ac9J/+nATfoPJy53YBttC3n/fBqeyv+Z/bKrnG7/6TBCPJL+U2tRTE7ZP5+A
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
fwDs+fJ9
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "621012387361"}], ")"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"2", "\[Rule]", "0.2840377390384674`"}], ",", 
      RowBox[{"4", "\[Rule]", "0.7136330604553223`"}]}], "}"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7754965908973217`*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"cdc53e3c-7142-4761-bf66-edca39026b56"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["6-colour totalistic, range 2", "Subsubsection",
 CellChangeTimes->{{3.775513969547564*^9, 
  3.7755139745554113`*^9}},ExpressionUUID->"b642e5ce-f5af-4fb7-9196-\
737c3e289345"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"test4Data6kr2C16", " ", "=", " ", 
   RowBox[{"data6T2C", "[", 
    RowBox[{"8", ",", "128", ",", "128"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"test4Data6kr2C16", "\[Rule]", 
   RowBox[{"netECA16", "[", 
    RowBox[{
     RowBox[{"Keys", "@", "test4Data6kr2C16"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<TopProbabilities\>\"", ",", "2"}], "}"}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.772719248559807*^9, 3.77271927548206*^9}, {
  3.772719324257593*^9, 3.772719331356277*^9}, {3.773124904129174*^9, 
  3.773124928357933*^9}, {3.7731251153026133`*^9, 3.7731251512280912`*^9}, {
  3.773125217467578*^9, 3.773125219418065*^9}, {3.773125271868342*^9, 
  3.773125271954652*^9}, {3.773212712732003*^9, 3.773212729006225*^9}, {
  3.773212818178605*^9, 3.773212830613299*^9}, {3.773212941366901*^9, 
  3.773212951689026*^9}, {3.773213005636443*^9, 3.773213014527096*^9}, {
  3.7732132566474*^9, 3.773213256876457*^9}, {3.773294401307526*^9, 
  3.773294423203759*^9}, {3.773348269707011*^9, 3.773348280477676*^9}, {
  3.7733514738060293`*^9, 3.773351485326448*^9}, {3.7754962971079893`*^9, 
  3.775496318359008*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"f7e0fecf-2712-4d7d-98ad-5181bcb9c992"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzdnT/rNVtWhEcFEQQFM8FEUcw11XkRFcOB0cTAYPwXCcIYyI30Kxhq5Fcw
NDOZ1A8gIjKxYKSxM2BwDBY8D1XV51yD36Xvod8+u9deq1ZV7d19fv4P//zb
f/qj3/jGN/7iJ37wn29/5y9/47vf/c5Xv/vjP/yfP/nOn/3qr/zZj/3g8K//
9++Hx//2n199+fuf/pEv3/vNX/xij3/ut/7oy/f/6ve+fPVf3/9m8m+T69jr
r783ic91vv18MZ5FDBf3a8dJPn/y335d4tYaz3rMT85vMuZ1PSb30jr+u7/9
2S/mL7n+t/7p1778wn/8wZd//Jlf/vJT3/rjL//9+199+dfv/c7/OX49J/ne
ZJwkPtc4yXWSeVnHMLnf6/zr+Brzu45beb6OGxn/k9cn80uOk7El17EYaOvR
1uaTOf/P//KT3/z3v/mHX//tX/r2OebXc2w8X/va6zWveL6e8/pvWzlsY3L1
fXtOazyvx+sYXvdCjhMcIHmS/F24fX2vna9W3Ah/IHnSuj7JzytuSZ5cc2SP
bdxev/fCSXJf17+9avP1/ISrk/wnffOKIYlDC/+v67fic93v9b32HMs3SC8m
dWSx6BonuUdyvzaer+NvxfA6n4yN1I69ZhKfC6+uurDzmGCv1ap2bCQmSf8l
59ux2XNIjZP8JzmQHF84T7CFcIYLB2x8SJyv8SSfkxywMbS5SnKeaDpbLxZv
k1ognu2iv7fuN+GTSTzX2Jt4NeT6hMu1jltzel2H4CHBYTuGRZ9t1Qg533Iw
OxekHsn3Jv7AxUUvXkq0cFIL635EuGLiuRHPZ4HnCa+2mivxwBf3cuUe+dzy
k+TY4h7h3mScrZ6Y3Ivts4txJmO2XmXCwez6V/JdRBMtMJng86K/WN/jyk8y
nnXtr+v0GsO78NP25RbPvO7Lcph1HV33S3LVevgtLpSsuSR+OBmP5cOELyW8
JclJq5uStZuEZ7ZqYV1T9vNEg7e4isXqd+Gn7U2E7xFMs332qh3i8yR1lPBD
24NIfJ70uJIaJOcQjnFdh+iyZF5amotg1BpXW3xg4XVYH4N8bntrixe9fm+y
1pzwvSQ3kvwkMb/OsfX7+rnd10f820RHkP3GCW4vNGZSm+SvhV0Jxi7wquWl
W25D8mftDyQ82WJOorMWuuDa+3fNneV7iQYneZVgu+WrVgfZHGj5UbbuLmxf
9+tEY1r8sf+W7NO44rzuI7aHWt5o178SnZVwgMTLavXNd/UgO7+Ec9q1qiQm
dt6veiTXsVyCxLBV11eOWZ5gY0i4n/WQCTYm3u+Tax9XPti9kS1ub3V0kj+J
j9TyQkl+JnrK4qrtletj+72tGknGlngRLd1k+0KC7a18XmtAq/VsryGfJzFM
+Ftr3d9qyYWOszmQxLPFeVqcn3A52zc/jecnsV301mTu7F6FT4it5S0EnxMd
TfI8qdmEV9g1i0Uetvibxckn/R9S14nvmniPrT1gpEauOCec+RPWlxM/ivRE
0lsTn21dv+vjFv9/En+SdQqL87ZOiZdie+un8QfS42z8SRzId5E5TXCD5HlS
F6QeL58zed7tE45bnu0a91rY+OS6f8Jz7Nhaebjem0RwOMml13PIM/LW61vz
h0/IQxIHm6vJ+oKd39fxWJ24jv/X5Tjx1Re4vegjLT1idei7armlFwgmkM9b
dUc4//X5hQkE3xb8IemJiTdC7jfRcS0+ds0p4SpExyV96klu+aQWSJ4N/AT+
f+XDIlYEfyzeturaYq/F5+teknd/2TGQvcckVoleIPzB6qkEo16vee23THRc
oiPW51w1ZZ9DsVyuxS2fPE78gasGP43/J/zK+sDJM1bk3q+6Tni7xUkyd7Zv
tjwBgmMk/62PRMaz8A3sXKyxnWiKJ3tE8k4hi1FP6vo1f7a/C/OueyQ4tugd
Cx1xxe1JL26RwwuNnODkNQbS+xKMTWKywJ8E28nYWn2nhTOtPUIWK1r7l5Jj
MndWVyba4V3ryITTPjlHyXUSL87+JXvtyDkXxiY4afGnxR+ueyHxXHCVpCd+
wjEZm62j5F3TNs6EPyeeQ4tvJzlw+WwEr1o918aQ1OPX8fkC8sxU4j8nPY70
Gqv17Dkt/rDANxu3pHcQrCD1teCo9n5JHCyvsz4eyX+r5e2ezGTdn/xZTdHS
9a1aTtYZF9jY8sMJ/pN8Izxngast///TMI3k8KKO7F6XZL5a/9bOI+n7ZC4S
vZlogSf9gWT9+vq3iee20LytOv267AFr1WDCmcn8Js/gJL3jyXiS67TwvIUz
yR6Y5Hgxd4QbJNhiz2ndy5MYsuhBC6/gyVq2/Jlw5iQmrbpL7t1ymNZzrImG
XazHJfqaXN/+xpPVp4n/YOOf/G7OYq2WaIeF5/Aur4Bw1Ce56+L4E9ZtW1wx
Wb+78HP97MZ6HaSFgcl63IKvJnmy0L8kB0gtLPAkqV9yL2R+Scy/juuGpCc+
2bOsx0X8vVb8LT9J9sNcYyDPwpP1LKuRbe9baECSn6TeSf8i90jyIdF6rX7x
pF4mPHPBY9/lvbTq6MljgjNXPD/B42r9phWJD9l78KRGu8ZgvaDk2bQ1tyFY
bXH7wh8yj2QuFpy25c8nOWN16JN4cn3vQvu38vnJdcNWbC3+tPpU0mdJ3ZFc
srn3pEYj/obNt0XOW9675jZ2Tm1M1jqUrB3Y48Q/WeMJOZ/09Ce1P+mVpE6T
Okr24STzu+aBC8xJePj118KxxKMgPJZwJ4vPBLuS9esF/iT8YcH/SWwTHGj1
zcV82euv6458TrC0pYOsRmv9DntSy63+RWJO+rXlPJfXRPz21rxfeW4xjdRL
8uweuU7SN5N+Qepx7dMmPsAVq2SfOamj1v0mvKKlZ1s6d8FPLGZe32ufrUhw
spUnVz4/6ZtdcSPxIfhPNOC78rD1/ON1zWStM8GKRBes883mwNojbeFnMl/J
3Nn5bfUjq2eT/mt7H+E5C4xN+qzNMduDkvGQ61y4t8a6xFexeGXn66pB+1zS
Vb/kc8KXCHey+UYwh+Rzqx5J/hD8tNdZ+IpkHpNe3Fofb2FRS1NYrWHnvXWc
eB3JXNv8t2NIsM7mofUKkjiT86+xJXu6bJ+yNdt6tpTUoPVmbf4s+OR1PvEA
E2+HYEii60nOJJyWzJHlFfbzhR9I8HPRH6/rt/LfcvgFZyP4TPbKXjrF8vmF
tiIxTPY22HpMeh/5nNTmYm3XnmNxL6kjghXk+T6SDwsfw/KTxXFrXTXxk21f
JvW46L82hq31jgS7iMdIzie/k9jCc4t1STwX2jDhqzbP7W+g27G16j3pXxZP
CM4nvbuVnwn2JnjS+r3XhN9afpjwf4KB9jprnGn1dJsDC92R6IXWs/NXzVrt
TMZgPYEWV7E10uKZlmMQfn6dc90veebd8rdWLq35SWu9wHKPZI0g4V22J9rn
XBbrjK3caOWPxYcFDyTXsT7/lQ8J1yW10KrTawwt3t6qKdujW7hN5tr2x9az
b8lxwjesBiH9jmC+rTWCmQk+2Nwgnjap2U/w8WyPXmgT8r3re19fZ1FrVpNa
jmo1QvJuKHv99ZoL6TuJd0c0LNGVBDNb/PDaP/9kv2sd2/wh/CfpI2sfj/CE
63P7HFDC/a44JGMgfJXEmZyfeGitc5J38ie1c63B2WdYSN+/MPkTuM0nezIL
TpVo+Sc9DaIXknskfcT2hVYvI+P5hL58xcdySKv1El3c0oDEu0jGQ+Js91Ve
4yTPPiTPBtpzFtym5dMuPBnLVRbe0bqPrI9tbFv4bLXVAs/XPfoa57v4Seu3
vG0M7bssWuvaFievcywnT3wtq4vftY/CYkurpt5V75ZL2D7y5HqorUcbW8s5
r2u2fg9roYPWejbhJ+S7kncxkdq0z0rY9ZEWr2vp0ysP178l9KTP0PIlWhh+
zWNS79exfc6djG2Re4vaX8xRMl8LHLbrFIuebnkU8caT3EjmnXjjVju0fAyL
/y19l7xj4claWBxftUM423p/l+0LV55/mm5a51UyRwm3aWmr5Le/LS5Zv8LO
4xpPrM4i2JisaSa+yifs+7Jrx4kefNJnuObO9qkEx1r4b3s3uZcndZPl4aQW
7Hhsr2/pCFvXLQ8huX4rV21/WeiypPclY7ae53rfF9E41z7/RS20+p3NW8sZ
CAcg/zYZG/EwLQ4sdFPCw8n55Ppkjj5BeyZ6P+mhiYYlfwl/sHnb4hULDzDR
Asn1yXuiiIfQGk+LkyzitsZP6420sKvlJS50KLl3wjkt5hNcWmjPBVbY8wlO
2nVwqyMILyL3m/CKRLMneWK5vX1W1+7/IfmfYIv1uGzvTjTUYg9qwqkS7me5
cZLzLc7Z6jsET5I+bmuhxf8Tbz/JZ6Lp1tp8UY8tb5P4Qkl/J99LOKqt2aSf
rvMw0VALbUU4VYK3JM4JF3qXnrXYsriXJGeuMbdyzGJgS/NafWr119rXTebR
conrHBKHNTa2+NKVhwnWrfsImZeE/xOf0MaBxNP2a6vvkmOyb9/+/qP1DVrj
JGO2sSXfm/SIpHYsv1p7INY3IDhg439dc/FbVAk2Et/DaopFL05wzI7hmqMr
/k/uT7M92noy1hdq6dYrzslzUmTerf/Z+m2UK+ZEpyc9rsW1LEe1udryQGzP
IvsiSL2T99Jf17S97PU4eb+3jb/1/UieEA5M8tZyabumkOTz+jipcRJzG0+C
XRYbk2PLJUhfsPlJai3xHxLMJHhF9Oz1rBbhGwmHJ+dcc9ryrwhvIc8ILHhv
4nElOfBkP0pwwK4FL7T5AusSPm/jT7R58l12/XcRW+sf2vEnvmLS4yy/Ss5Z
eNpJL27lg9VxpMe1uA3xuJ58H/671s6Idib9juBnMkd2Hm0cWrXc6k3kXt61
Ntrqle/iAAlPaGmcJ7UqwY2k1yReR7IXK8kH+5uJybxYbnP1o2TtjMSQ8DTy
eYKTicYhPSupO5IbtjeR8Sf7b5/kfiRWLa5rdQeJg90TYvNhrVXX9ZWs0Scc
OKn3677IM7nkPWBJ37HrfSTHktwg8bT7DQgO2H+b8Dp7HeudJvsZknpsvUsz
wdsn+wuZC3K+9ZpIntj1Eavp1vVl59dio405iQ8Zp30Pj+1ZJCftvBM+0OJj
JLft91pfqzUeUu9J3l4xtM+GL+prgatrDzap/WT81/fa/S0JVthj20fsPoRW
jbdy+8oH8rmdd9ITk+sn9WL3DiU4cF3HenoktvY3x0lfS3QB+S7rOSS+fbIP
JPFvyb20+ksLJ20OkJolOivRd8kxqUFSaxZnWu+9T9YOEt/gSX6V5ADh6hYn
Sb201nzJdZLY2n1r5LjF60j87XsJ7J4iUmsL/LE9q6UBF3677R22Tlta4KqL
q8aJr5jU45M6McHbFr8i3CnhVwTbF3yM5AbRlYs8tz4wOcd+r9VfJFbJ/jfL
61q41HqXju0Fto6sT0LmhdR1ks9J/lufOanH9X21+POCX5HfaG7xLnK/RE/Z
fkc46oJnJv1uvT5rcy/BwES7JTp9rZETbWu5JcHnJD6El9o6JX3N5nBrPbG1
xpdglI3P4rfwWtdJ8jDpfdabJfEktdzSU5eHk7y72/5ZvErWwZPjBM8XaxDW
w3/So3hXzElsW7hKatDyw9d/a39nrfXcX2u+EkywuP0JeZj4D8lx8pssCQ9J
1jtszFveCOmhrTi0fgNxoRdaHkVrvmzft/3x+i6r023PJfEh/TqpwUSbXLGy
17d9dsH/Ew/BeptJfpLaXO9dJ33Z4u3Cr2jpR6utWhie5MMitwl3TeYr8bRb
WGffsUZisu7RJD9bzwVYDL/GkOS2fY/oWjNa/rbgdQvOtsZVEhNyftLrLTd7
cj/GuvdZ/4HkmPXYWzzW1qmdX1KzlhsvcjVZmyM5YN+XnmBvgi0Jb09qsNWL
7XjI35N8koyBYEKSM0/2xIS7LjR4wk+SMdsca2nJZK3HzgV5HudJHfR6fbI2
R/gVeVd5wvGS3n1dv4V15PoWHxZrZCRPPg33iDZMan/dE9f7MVo6kXh9yXqo
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
sHz79fP/AXHaGJ8=
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "68918261516486585431"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "\[Rule]", "0.38980552554130554`"}], ",", 
      RowBox[{"4", "\[Rule]", "0.6073333621025085`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzN3DHLtm121fEhQkgTsAuCjdgkncbCQuZ9SGkX4kTShQlkGCSijEWwS5uP
EJFYWNjZ+wkC+QopU6VPY2cGLO5m6+/POq43U9wv53txXud1HPvYe+21197n
80/+4D/8zk9+6Qc/+MF/+pW/+8/v/PiPf+tnP/vxf/43v/zz//nDH//Rv/jN
P/oHf3f5J//37+fXP/3df/vD//bPfunb7/2vX/4m1//1R7/67X/893/+3W/8
67/4Yb3/uq73f+Ja9viJvSy/+4m1LT7wiee8uucT61zsWc9riZEa4584u1+E
tX3inl8Ef1588t/943//3bdf/+l3//T3//d31+dy/Td/8aff/ck//Mm3v/6f
//Hb1+trDdf91/V/+bN/9OSvrvNac92LPKde199a1i9nLfdfny/2X2wl65Q1
L371ffrAFe/X9Ss7fJ9rE1+t9/wi+PMSj9f1Zc8f/favfftXf/Xn3/3tX/7L
b1+vr/VITrmur+dcOevrei6c/3qP7FHs8+nPv15/3cv13eX5r/Bq4Sdfz+LK
0QsPvOLlWqfYVvYrz6m8pT7/69quWLji5Yov+S3xyVdrq3hYz67a/JU/X7z3
8uHr+ut3Zb9L/r3O7lpP5faCjVeOED+8fPjyPfmt6/PrHolBiQv5rcv+1f8r
P5Fa7LK/rK36xvJ82ct1XrJO+a7klytma44TviRnce2rcukLb8XnxSdr3pEc
JFhRY1O48bWG63yvM7rwXPBWbFLPUeJRPn+lG9dcVnOT1ES1zlpqbVlb5WOV
y11+KHEn11ILy36Xml20jhp3gs/it+KTV91d7b9go2jj196vXPOqv1axpeps
ctYL/6/4X+0mefYTvlRtK3y+crzKoxY9UPhArVsl78u1+GfNR5Kvqy50nfWi
rUkuWPKa+NKFe1JDyZoXm0sc1RqzxuBln1ovSz6qOtLCDaq2sMTdUh9VDK/5
d9E8q25fOaFwaeFLos1WzUE0SfGfqinJ+iWmLjy51iN5s2oRNXYEQ8TmUp9K
jr7scH13ycviJ7XHKvgv+Ck8Vrhi1Ugvv615ROpr4RLCB6QWEM2kYojcc53F
lcevWFs4YdU2BQdq3NU+RdXlrhhceK/4c9UJK38QTlV7lFJvLvr8Zf8aL9fz
ZWZDzlT41dIXEF+VmSjhHgtHlfpLaiXJ6aKPyblUbUHOSPJynY9dtPfqb4ut
qj8suFqxV7QC4ZDib8IPX82ELPmx5uJXtWrlotXHKo5VjajyosobF+wVHLuw
qM7hX5xTNFXx/9qrFXwWTU+0pnpd/UTWeeHM0n+s8f4qV1Z9YMlTS/1S9T2J
kWoT0XhlPXUm7fpdyRcyByJ19+JjC/eueVniS7hE7b+/mkmov3udXe0xib9V
zixc6PJbOffLfypXFz4mPlY1vYrP0jep+lLVBCTuZM2LllJ9YNHfqm9X/3ml
EV2/+2omp2pilc/I3us7BRKDMpv6Squp8bJwOal9XuW+hRtUvlHtLOuX9/6E
e9R8ceXTOjdVMURy6zJ/JbaSuUHJNReXq8+sPF9y8YXDNdfX+KrzXZWn1TVU
PbBii2BsnSuT/HLhZOVLMqda+6SLTl41N+FatXaWz1/x9npda5+a06/vLvxT
+M+S4yTuquZZee8rrWDhqIsvCc+5crRwg4WbveJX0v99xZNrzpJYkPOqeprg
hqynxtGrPkidXRFeJPNmlbdLjqv6rfhYzdGyR+HDddZiwUbh23LuEssSR1Vj
kb3XPl2d9665VXBSckQ998qv6mx51TEqRok9F+5Rz7fGeMWHCxOWOQqZL6p6
46KZSC4WXKrz1TVfL1yx8i5ZZ8UfyfWvcsryW3Vf9buSW2vPQvYoupnEhdTR
MluyzCcvuL38bq1na73winct66lYJDFe719qz5pPRZuq2nL1ecmJ19+r9xEk
Ryw9EdGg6vnK3HKdYX41P1Zz7pLvqna9zGaILiea0sWRqq5S55oWXKpaR+2F
if4gthLN/7LbxQEqLr3C22rzV5rqq5pxuV70hIUn13ctay64znrRG6/1LHYW
XiH6xlLjLDyn6g/C7eX5ss76ToHosQv3Wzhb5TliT/HnyjHEV6/fFcy5zrfi
rdSblRPK+3dyRuLn9fmVz9SarmJyxcDr+Rf3kLj++nzRG8XO9V2PihuCCUu/
UvTJqqlWLbfOhdYaR5659KGED8g7Dkuvtvq/5IuaE2W+q56j2P/CjXq+gg/i
P0tvt9bg13WNO6nvLp951der+Fb5htQF17nITN1SN0mul++K712/JblVNC7B
3srNKvermFl5tfhS1Rulb1LrqUX/rHj7ar6ozjNLnqqcs+KJXFcfu2xVMV84
YbVJvRZcWnBVepGVF8n8fPXPT8Sp+IPY+ZX/SD0oXEI0k7qXWhMtsyWXnwjP
lBwtuabqn6/yRdWTK4bLuwmLdl1r22sNlV9JbVJ5bK2X5ZkSv0uvSmJTuHrt
19Q5n7o24eFLnAqfrHaouCQ94uX5V6zVulKwul5XLiEcqfJGwQ3J3UsPsebc
WvPW+UnhpfWMKsaKPlbXWXUwyS/LrPjCsRddq3KGOuezaPhyT+0VymyGYGDV
0yrPX3h7/W7Fw8rZFp5ctZSKn8JDlrwp8V7xQerTC5dqLSCfCwaKFvrp2Tzh
UVVzuDCq8g3Z4/V5xS6Z96vzwzVG5FzkuuYR4c+Cn7U/cp2FzG9UvF16SZUr
1r86m1qfv9Tmol0sM65yzxWD4oeVA9c8VTmzYF21idwj/Eq0uCXXSF0sGLtw
OanLam1e7696Rd2LrKdqwvVchINd98gZLTZZfktiRJ55fV7rtbqGq26tPceq
e1T95PIZ0U8qv7r8RGz76vOqbwgfrnWNcCSJkfpMiWvRK2q9sGgOS1+p+rC8
B1HxsNYFlePJfgVXq81FN5b7pUZYdOxFR6p+XmPz6xpq77XWbjXnVk2p1lbC
H659LXVNjfdXPL/m5VoXLzpV1VGXWmOZZZV91fqlzjhVrr70OuvsjfCuyknq
XsRvRW+p9aPUC4KTMj9WZ4zFrwQ3qj+Lb1QbChYJjtV6qtYp8pza15D4Ekyr
eafynNprrlyl6idic8mVovlITAnfkP6C2FDqbuHYtW9YY0rWdu3rwsCqeVas
eFWX1d+tuWaZhas4I/ElfrK86yeaTM2DlW8sfLXmDqlBFq2v4nY9i1r7i59I
XpY1LDrDKwyp9df1/FezeUu9X3WVhfPXumapEeqaa/9C/mTvVZuqf4KfC55X
DlbXWa9faRrCx4SjXnu8fFs4htxf+0Gix144U/Xqel4LzsgaXvGNC9uX2RXh
RdcaRIsQ+1x+8mq+V/xZbC6xUGvh6gPL2cnn13lVniP6QOUY8swF3y7MWear
a75e6rJrj1XPkfsl98l+K9+WmBKeUHGmxtQrbiY4ueCGrKHW5lUHrvMD8l2Z
X5Ka8Yp9mbcR7nedy8JXJR8tsyuSd66aXeqsqqXUer/mFNFABMfk3IU7iYZQ
ezoLdknsLPrPwmMF0xZtofK6Wv9KDVX50hWzV5xK3qnnKH1PuV54de1D1Txb
z6jq/6LJ1zpX8FCuxbZX3pSzk7psqfHFtysOVy1LOHN9Zs2tldfVWqD6rWC+
YMIr/JS1VT+p+CB5qtZr0lOuOLCcuzxf8sLFz8UHqk0k7movSXKc+E+NEeFR
Un8t/i/8QfZe34Gq9bvMkS555//Hhf9fZ3rdL3OzchYSU0utLT4gupzMzwjf
eKXbLHpdjRex7Sfqi1c9o5qX6/WFb9cZLXO/l20/kS8EWyoWyf0LP6x1upxR
1ZBF03iFD6KtLb5dOaTEY9U3Xs0zL/X4Kw1HtGvRzK/Yv/QZ4aWVby+9mMvH
pPZfdHLRTmUvkrPkTCWfLvEoNqmYVrFOcl+dq6/7lbNY9GfhY5JrhFvWnoXY
cJmxrxqC+EDlbFJDCSes/a+FQ1ZfklpGeF3Fz5rjJG/K54uetuiocu5XXCzv
o8lMtZzRst+FR9VYqO8eyn7rO4+yX9GFPqFZSY0pOtL1VzWxZY8171wxVePl
E/VgxclaUwvuLXqyrLnyoqo511ir2myds1r0iuoPr/x2mQ0Q364cXviM9OUr
boh2JM9fsEL8ecExiXepEyV2KketOolovJJTaoxLrAmWVl5d+wg1J1bsfdV/
XPjtMle29OOk9q8zjVXfq7xXzqvykOv6iq+q69b+VO13VDwRXKr4I/dUzVDi
UfBKcnTNO/X9mlrryXV9r2fJ79f9r3yg5tzK5SRHXHupeqx8dznfBd9qnn3V
o6k11xKD9T0C4SdVy63nK/1cqSNkzVJrvKqzJE4XnUG4qPhhneurHE9wWOZb
rrgQnxE8WWb8Fv8RP5R3ZKptBSvqXH2dOxLbVt9+pTvJGuS9pOpvUmdd11JP
LXlTuGvtnwru1b6S8Nsa1/W79Tmyl1ccWO6Rd3mkvpB6ttpNcEDivWK1YP6i
Cdd1ig5Zz0tisGqwS51V5zklb9Z5FdE5P6GDXf5TNTTJI7KvRd+ufE9ynPCu
5SwWnxHuLZ+L5lmx7qqhKpZKvnhVm9eZnEXzXDRS4Xh13vjygctnpN6RWri+
dykabOXPVaOo/b6au2WPl61kX0veF8z5BKeVvCD2X+btq+4hOLzcX/FHsOt6
vnxesVHwbanH63fl89qTrfElXEj2IjWp5ALhgddz5B0K4Qav3stY5knEV+uf
cFSJQeHnMhsj12KTC7tqHVS59KJdiM9X3KjvKUhOEU2vvtdW+c9Sp9Sel+SL
T9RTVQe4zku062UmRGwoekjlvTVPVT1B8Fa0nYUbiP/LnKH8rnC8Gsu1Rru+
u2iVda6pzrovM3LV/8X3pJck3KDOHFYtTmL5Wk+tYYW3VJ1QOMl1XlJf1P6j
+LboWtWfX/VD61nXPFX5huTKhf/XPV5rkPOqs6CvcLVyDLF55R6VO4lmK7yr
cnvRVyVP1TiqtckrHUy030WLqOe7aEc1z0qMvHr3p87vLfVpfZfn1Zyq4FLV
NF7p0oumtOToWkPVf5tCNKvlWnBYePLVf6m1UuUzsp7K/yXv1Dmr+sza16u1
g2gmErNyXlfeqbhU+ecn3r9bcFJqXsGBWofK2pa6uGqzF3f6+vmredHKaSuX
uz6v/WvhJIvmUHnI8t06W7L4Xv289ssufF6eX/m/rG3RP0WfudZQtfc6Eygc
QLic7GvhGFJnid4l57Voy4t/ym/V3t/ynki9Z9FRhSeLzyx1t/CHxU/q36Jj
1N6r+POisdR6R2yyzJDUGcjaw5L4rbqfYH49d/Hhxc9r/MpfnWmsOonMry7/
FseiIdfzErxd9Gc564pvFXMWfi5nIRpX5cyS0yV3f0LrE91MsK7OO8lz5Bzl
fKWequ+5iOYgfiu6+nLWn/DheqYSm8vsTf2t61xq/0L8SnTja18yn1P1zGsN
i92WHmXVZBYNqp6LxK9gTuVFoncJfgpnlvUIT5A9SkxJLF+fC+eRPdbni89X
XiT+XGcjBcMlvhbd+FqDvHNU50irj13nUvsRi3Zd8Vb8pPrbZfNFa5V9yX4l
R9e8KZgj/Z36nPoeR+1jLnO2FfMF9+rMzyut9RWXkN9d/Ed4+5XrlzmKmuOE
p1WNTny4ztMueoLUZVIDXvgguujSr3w10yI1i9Sngo11fn7hWpWzVW4muFd/
t/r5ZU/hyXW2R3oo1Teq/WsPsdb7NWYrXl2+IXaQfCq4JNpa1XKvPdZZF8lT
1W/F35a5RDmjmmsETwR/6l/tBVRfvT6Xvlvti9UYfKWhXZhTZz/Etyv/qWck
8fL1nitmxZ+FJwv2Lhqv2Lby7Rq/FdurVnPVFDUWpHaQXLNoOJKP6pnK85c+
Xc0pNfZFE6hzxeKHNV4kvwgWSfxWja7WAtVWoiWKniM97qUfJ7mj9nNr7Nc+
qVxXXXfRTq+zq1y35i+plURbqD33quXWOFr8ufLA+lvCl5YewXLu1QckNmud
teBq9RnJO5fPS61aeaPMD1SeWdfwSisQPJS5FPGB2juu/ixnJD5TdaqaUxY9
rXLpqs/IWdTaUM5aatIFiyRGqv5z5QLB6uqfctZL/1f2XnG15taqn1ft6BXX
WjjwtZ6vn9cZs8qBa/4V7bfiduVFlw8sXEJ0hutcqv/UGd2qkdY11Dwo66z1
pmDRZbdaE1VNXuogyX2LRnGtR/TJOht/5UfhV5VDiq74iktXriKYUNdZY3PJ
O5ULVe239mgE26Weqpzq+rxyUeEnkvuqpl1rw8u2tQavWPTKVotOLnyjcnXh
rrV/XXWwhVtW3azqIcsZXWch/eJr/cIPJV98oi6rdl7mcyoeCvbW930qT5bc
J5hZ67iKk7WuWfBWfLL6Rj07wShZj8RIrekkBqv9RTeQWK6ap/xW5XtVo6j6
wFJ3y7tO8l3hWovuVLnQEqeC23Vf8nzhxmKfhVdUzlw5QD27Ra+Q78pvvdJS
hHdVe16fi0646DkV6+p51Xddaw6q7xTXWlg0h8pblliTmrTqnFU3k7y2zCRU
XKq10rKGJVcu1wvOCAervKXONVVNb6mFay6oOUJ0g6U3VG0iGCJ6+/IOVNVh
5N3Va19i8zrTWPOpXAuGC47Jb8l+ax+21svynMpvxeerPWt+kbx8Pb/qTtLH
qc+XzwUnJWY/XV8stXDV/MWHpa+38K7KzZZ+ruTHJWbFJpJDlzxVeUiNkaqd
Vl2ucrDacxR7Xvdf+UL6yHXmQXTdV1xC7FM1sdr/FZsv5/71t+q79sIZlvku
WfOS+6TmqrFQfXiZwV76LLVOudZWfanigJzjkqeEny/58bL54vOCM8s7JjK3
tvyunJ3w4UXTq/O3FdsrbixxV2eGF42lYmatQUT3Fv8Rn7nuX2bhxE+uMxJ+
InlzwSKpfeSepX934UC1T/WHOnchz6l60WWrOue51DVVW6g1TuUDV0zJTOxl
Q+G3VS9duLfwW7FDxYFFc5a6Ruwp8SK+J5xTeOZ1jvKcJbe+qourjl3x6sJk
OS/BGcHtilHCn2vsyHOWmSWZ7RQcEP1qmU+Tfcls5MK7quYp76QseFvzYNVY
ak+h5mLhe1LXiE5Ye0ZSc1WfqTllqZvquUsOXXiXYJrwATmjqpkLHxA/r3Ob
tde81AULnxfck9pZ8vunNeQLP1/5bdUW6jsptX6pNVTVQ669V9xbOEDlZhUH
as0rMbL0L+rnkhPr/EbVYGvdUfWT6x7BgRpTsgbxVeEwC3ZVDVO+e/mYnEWt
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
9wTf6mxAjeWag+T68ivh2JXbC7+SvF/PrsZdxZnLV4Wr13naV/EreC7Yu+hU
Eu9LvbDUTXW+UXKonLvwijoXLfuV50veEW15qb9kPYLP1W/rnE/VJWqvoXIk
4c8yy7fMEtf3aJZ7JB7lc8F5+W49r8rtK1Ysc4ZV0xCMfTVPLhhVz7f6fz07
4TB1vzIPUM9o0Y2F/9R+nGBO1QYrT7hsdfnMdV7S16g1tXDC6x7xManfq22X
GrDqgUv8LvxW4qLyHNGgJC5eaSbL86vWIbqNxGDlrjV3C+esetSSxy//qdq4
aE2Sj171UGR+THQMqe+qbiA54hWeSI1/+VLt69X6SOJF8tTSv66aSdVmK2eo
emnV7WvsVI1O8LDOz8vnwgeqTl7ryqr5i+/Vnl3VwGVtUgssPQvxGdHSRVep
uVjeM6qaleTQV7qB4Ezt9S9/i7Zc+w7VlxbMr5pJ1cdqjNQ9So54NZsqvYY6
NyW55hP9Qanx6xpq/bLkO/HPei1+UvsXNXYuX6qaUvX5iudS8y4xVesj8RnB
peozle/JrMXlA4IPi//LdeVdS6291JUVcyrHk7xW9eSFk4jWfT2nzidUbU04
0jKXKOsUrXKZ9xb/qTytYqbc/2p+rHKbygNrX6nm3Ko31vOqdXp95qd5kWie
8luyd8Ef6ZUsWoHETu0N1TkK4WxS1yzvZ9X6QnQ5sYPYv2Kp5M1XuCS61isO
LH9LX37B8EXTrjxwmY2vWCf4U9/3kXsEExZedHGw63wlfpe+f+3zSh9BfF5q
6soNpEcscbFoQbU3VPsalfNXPln7JuL/0iMQn1l4pvyW9PQldhZOu+xR8E3u
r/ErNZrkzep7FSeXvkbNrcLBag1YtZqq8ws+y+yZ5JHao5HaufIT8X+5R+og
yY/LLNMn1l85leR0wUzRb+v8ZNXMLz7wfdZ61YZ1pvHVDL/87it9vuoJC4ZX
Xlr5c9Wvau6TGJd7BMMrr3ulJyw9xMoBpA5ddIla47yKU8FVyZt1L5UTVm58
2aHmrOW8llpPbLXU72IHwZk6V1b9ttaPr7i6cB45rzrzWeuCqu9J7Av/r/qY
cLBrnTJfJ9cy4yE48wk9v/aU6yxo1eElXq711DpOcpxgwitsl5wo8zlVj608
Su5fdOY6qyY4IHaQNVdtrepL8t1Fb1lmnsUmUhdfeUre6ajvzgj3EDvL7Gud
dazYItz1lf+ILiH4VmfUq6ZRz7ridn3f5LJJ7bdWn69nV89dcFjOS65r30Hq
HXnn9JXOJhzp1cxJ1YIW/JQ1LFrQwhsr76o4IJxHtBfxW/FhyfWXPQWHa19D
/Lbyz8pDZE5D8uDy3s0ntMc6syr4VnvKVdeqe7w4oeQyscmih9ccdHEk0Wml
Pl3qMokj4b0SI3V+o+rGwq8E9xYuXTH21WxM5SeLjr3MI8l7T7XmqmurGCXn
VTmtcPtP5PTljGpeXjhn5XLCASrHW97Dqjl0yU1i56qp1nxdeWPVM5dzl/5C
nZWq+FntVrG9YoX4v/hJ7ZPKPeIPspeao+UcK0+rOHlhrOSdVzni1ZxbnaWR
OkXmH5b5rsrBlty0xKbkYuHAtb6o/dDKr0RXvzBE3nGQmkues+hgi1/J5/V8
60yj4IBw74oVdZap1nri5wvvWvhtxU/pC19nUXldxcy6x/rOuPib/AlfXTSK
ZY5uqa0qH1uwRWwoGHjlMunjVD1Bfld8tc5gVN1MfFLmhV7lL8HVy1ZVo5C4
k7iu84H1vRV5/6LO0oudZf3CS5f+Y80pldssvPe6v2qhFZ9r3Vp7T2JziQvx
h6VXLr+1zPxUf656adWBJTYrn1/4v/Ax0UAqn68+JnarsSn1hcTOwtkkxi9u
I3hSuf2iLdee8oIbtR6vcST5RXK93F+59HXu8j5U1Rhl5rZyZqkl6xyIaMXX
3mVGS/BtuafGvmBRxaUaj8usheCA4Pkrnlnrtct/qsay6EivaqXKpQW7ak9H
9KuqIS+8V+JR/Lmei8ynVR1e7LDUEXJewtWrz4i+Ibl16beKJvlqpkV8uM5O
XzEuepfkaOFg4v/C0z6RyxZ9TGoZwa7aZ691kMSs2Kf6leS7mgcrh5f8W+NR
dKpFx6tahOQI4QNVQxYNoXKM5Swq57xwtWLRhdXCQyQvLxyp6t6CCZJz635r
36HmsoX/1BpHfLu+D7Voy5/ggWKTyhMWHrtomHWGpGKy9EmFC11rrvgpuP0q
TituVH5VfWyZ56y5fuFglSPVfmX9LdHNqu/JbwknEQ1TfmvpUVafES23csXK
56tOK+ci3621ucxoXTavvYxlVqfi5Kv528vnr/XX+qjOpYivytxa7QGJPnb9
1V6k6G9LfpHP6xxX1XilrpQcXX14+ZO6oPJq8eErppY5CpmRrrxC1llrwFf6
icSyPF8+lzUIJ5dYkzrx8lu5X54jNqn3vKpDhVcIL7riQvK4+Fv1w1rnCraI
ncX3hFcvfbGaE2u+lr5MrdOrnQVvJc9WveIVb68a6eUPwh+kzqrxJWckNXud
OVn6iYtvCzcWrl59u+aRRU8Wvnr9btUeRUusMx51vkK0fdHoaq36ygdqT+ey
4ZJbpaaQM7rsvPQK5fmXf8r7AjUPLjqS4I/kRJnfW/Bc9rXoz4LhVccWX61r
rnyp8hapBeT5S39T6uI6X1d7ppUDvNL0xJeu2l9y96ueTs2/4s9S373Kj9fn
S092mSEUvvqJ97+E219nVLVisdWi1dT5zyUWBG8FM+sMqnxec1mdsxJtR7Bx
+V3xT+FpUiPUfnrFc6lhJS/Lb0m+kNqt+r9g9YI/lZ+8wnPR3CSv1RqzYkWt
5WstIPFe7S86ba3pqu4h2PJKq6/9CFmzxHjlVAsuCc7UWqb651IzXraqOrzk
l6q5LfWUnF31N/Fh4W9Vb1zecai8tNaAtYdYffiy/zKnJFhde521phbNVvZe
9yW+ITqMaKrCASSvLb9VbSg4XPmqcMiqFV9/9T0CmTOs/la/K+dSexC1dqu1
p9SMdUaixrjEznVGFTeqPlZjp+b9Wt8JV7ziaJnbF84sNVHVVaouVDm5cOyK
LQuXFr6xvINZ+bxoJrXOqn4i918YdWHCEo+1Nhc/rLxRcsdlEzkjqWXqDPxS
01Wfl31J3C0ar8TLUq9JDIr967x99ROpHa71L7pu5SR1bkRivPag5bvSi/k+
tQuJfcnjF7evMSKxLLatukH1q4rnNadfNqkccuH2ci5y7oLDVROTvFnrkYXb
S3306n0B8b2aj8Tmi98K/tf5KNEna19M6uVFx676dtXoFu3xOsc6c1h/94rl
umapsyTfvaptpe6W+qtyKtm77FdqOsETWZvUkouGIFy69voXPVbOrmp0n8hZ
FR+u59R6v+YssbnwsSsurpwinEd8Rnyp1mUSaxW7JHYW/VPsL/aseVD8f6np
as5aZoHqOuVzqUmrfwpHEtvWGkF4bNVbap1+4cllf9G0X/GuGuOSj8QHJF8s
M0vCJQQTrs+r9lKvJYe+4lqfjlnxz6p7LLXY1zUs+5XcUTlPrR2qTRZtU+qU
JV9XjlE1B7HD5RsVb5f529o7qP4puUn6NZetqq/WGlC40MKBpb+wxODSl1ny
yMU5694rN6s5TmJqOetaO1/xIvFYz1dyU51DkD0u9eaFIaLx1u8K9669hsqN
Kzeo8wayr/qOgMRjzUHi59caFv+s2mOtRy5srHP1VWMUXiH2r/1NwZ/Lf2QW
UfK1zPbX2fXK/eoc1DJ3Wnly1RIlBiV/VY26rnPZe+UVi89U/1m0SslNS09K
tB2xVdXnZb+V/yxa0OW3chZ1Nq/WHZWnSV1c+571vMQHRJcQfnKdnXD1yieX
vrNgkZxRzYky51DjS/hS5YGyR+G9tfck668+fH23ctSqxQlPq5i8xI5gr/D5
qglInhW+Wmv5ilfy3TrrK73FT+s5oiHIrHvVb5favGoyS76uWLfULIJvtR6s
+qfwzIXjXXupWCp8e5nXEjyp+1107Bovgu1iH8GupZ79+lexuvbEBWNr3hR9
tfrtcqbiV69m1cQ/qx5y+UPVHAQzK2eW81pmuiqXqzrnEmuV4y1+Vdf2qjas
z7/4legVSw9C+EbV36r9hQst+uq138uetQ9Vc1nFXsHz2ueS62U2Xs7r6/3/
Bx4qBBg=
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "81547637786331552954"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "\[Rule]", "0.3800455629825592`"}], ",", 
      RowBox[{"4", "\[Rule]", "0.6199528574943542`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzNnDHLdttRhg8KauEfCIgggqhlLKzO+dA2XbSLzQnEQoJCLERsbFNaKliI
hT/BTks7KxsRbLSSYJnaBCze5sbr4pp1YvEcnvOx373XnjVzzz0z93p+6dt/
9M3f/6nPPvvsj3/uR//55pd/8lvf+96Xf/o7P/Pj//nOl9/9ja9/96d/9PXP
//fz4+/f+M4vf/qb7//ip//64T9+8ZP6/u+//bOfvvW3P//ph7/2rU8fv5Nr
1vVXzyL3sX9b1mntcPWOdl++Sptc7V25/sU1Vz5Q/OHKT14/6wpDrnyj2OTF
9etv/+UHv/7pV//5dz9945/+7ouP3//zD/7i81/4jz/79O2//s3Pr75/vP/f
/8O/fv6H//Z7X3z/v3/l08fvH68n15DrX99nfSe2XTZZ6/m4dy/ea11P/p08
t9jk6h3XGuw163p7DXmXFe+v9/0qTkscvY5Tu+ayj/Zdrt7d+vzHZ330t7/6
y6/9n5+VX1Y++vi3JI6u3tfeh8TgetZ693XNwsP1neSFgl02Xsg9rU3WNev7
8quP3z9eQ/6W+Cp5FuFma21rndYHiF9d5UTit6/jlPDetV/rQ/zzdc4i+0V8
6eM61/va2CSYaW1FsNf6NokvghUrHtea19+S/Es4s8VMG8s2Rj6+S+Gc9t1t
rbrsbNe89n3V7NYPS/1FfNvmROvPtu4ja7P4s2KWxDXBBBJHJGeR2LScitSS
Fg+tjxXcXjWL9eESyyR2yve1j8u2yx9KPl1YStZAYqrUCyR2bO5e8U78cNW2
5P5rbcvmax9JLW85ueWT1ofJO5L8Ujjz4i12T4k/kBgkz7X5gqx/2Xbla2KH
q14W8aUX2Gt5I9kjm9/L3lnMsbYlsUPeceGVzfskxsn6ba1HYmFdY+tich/i
JwuL1vXLPiQ/Es5ZcIngrbUt4RXWzhZ/FhbZe5I8W/IF2S/rP7ZesDh8ZauP
70XWuXx1cTAb47Z2vvpbYn/CDUjvq/SybMyS/SK57+PfLjuQ2Ce50mL7wvn1
7mXWT/y5+J7Vyax3t3Vo6RvYPEhsvvxn9eIIThYbLv9f+Ene3dq/8FjSxy68
3a6zzH/Ld9vfJrhauLrlD9b+VzM+6wNkr0vtb3UOJJYJLtl5EOHhVkdBci7B
ecLTyIzJYgXBc7Lvtu62ucDidulLrOcS3yC5leCV1XIUbSephV/oyZedr7DI
+v/CEFuXEUwj+aXoImxuIniy3oXUBcRXSX5c715m66VXb7m9tYm17dWal8/b
mWDpIS/sJfFb+IDlsStGlh0IzpC9W1ht+6UW64jfrvxI/I34cJknEn8jOhOC
jaRXaWthi+ckNgnGlueS9RR8s/UCqdEKtyw8zfqqfdbyK7IvJMbX/QnvJX2z
kkNtrrTPtf5v/734HuF1ZJ5l5/Jkf4nmx/YNLJ4UnCFctGjsia+SvSb7QvSl
1vfI+sl7kRnQ8o2rGR/pjdi+kM3vpHazNRGpv8r8heCq9YfCQ+w9C1+9mi/Y
WsnuqZ2xEt8ofVqCjYSTl/4VyS/27KfVNdkYsfWm9T1bf9meT4lfexbJzijt
epYvlTOttidp95fkUxJrFmMLJhD7W2yx+kwbFwS3bSxc5UqyF3YN698JNtoZ
CulnWpxf6y99HltTF5x8fZ60aELW+5Kev33fEiMl7tZ7WdtezaHKvMnqlwg/
JPVR6flbPyl6ZpIXrvzqxTkOe05hrdPWFCReLKclmiKSm4ityizP2pD06sl8
39ZKRDdV5tRkL+y5uaLzt/pYuxekr2L7XfZdFqatdyk6z+U/ROdv/aTkC/su
9j4Wu9b7EpusvSP+b/NIyTWvOdhVH289q/QNiA2tz1guarVhpY9NbGvrCBt3
pM9fdP5W/2N7s0WbQTgS0QJZ/UnRfK58RzQbtidmcwTJLyUHEVyyPHPFmsXV
UncQzLEczL474dgk9i2223rB8m3bA1nvSNZ/NdcrnJDYs9RiJKcQ/7Q9TPKO
y272NyvWv6+8VrQK9hr777bf+HqeUrjKel979uQqL6zYtGdVbI67yo/kjIPV
dtp8VLixxaiyF4Trkr6Qfcdy5o7EL8HYtR7bC7I+bGtJi3XrQ3g+4fZkj6we
w8YX6XctW5G6g/ibzSNWt7b2xfZ7SXyVf/8qPzb/kv4Gsbl995KX7f0J5pD1
21kh+V0O2x8gswDbG7E5ndSGtldsffuqBie+bfM7ucbOdi0Pt3FhzyvZWsDa
32omic9bP7S5mPih1UVbLkT6BoQD27kz6YFYzvOivrPnFGzuIzyE5B0bU5br
EvsT37iaY9r12Brc4p7lolazan9rosyY7PWlt0N8hnAPsu9X/UPynfi5tfmy
Z9Gu29qQYNGyLbH/4jBkTmRrFlLD2hghOF9isOQCopUlfSqrqyx4QjTDJacU
+5M5wsKiFV9XZ8fsc22tROLdnuOw+tKSv4jPEwyx/OrK/20usP09O6O86n0R
3mhtQjBqXW/noSUeSZ1oOcnKcVc6cKstIbza5n17vnL9O9nrq3mu7ZPY3x4p
mEN81Wq9rvBhfUhcEL2rfda6xs417PUE50tNZOsd2/siPTTiA9a2pE9VuJD1
W1L7X2lH14f0lq84GJl32Pgl8wWSX0gdQfqN1v5WT2hrWGJbwknKOxY9QMkF
tu9n11a05SRmST1CeIWtawhWkGvsDIj4v9UPL38gNQLBRhJrNncUW5E4snmE
rMHOrG09S7ionSvZnpXVM1jsIn9r632SX4jGz65z4f9VzbKut73Wq/72umfR
aVzpsa2diT1tHFl9gj2/eWWTYquCb2X9hVPZHr7Fk9KPKnNAq8W1HOxFPrVY
euUP9vyv9cmi0bW1gF1/iX3CFS1nINqVoh8muHTV/197ajFzvYt9VulrERwj
ti2/WbTWY/2ccEtyvdWY2fnL2lOLsTbuFt4STCZ2I+9SfrPIznfIOslcpuDq
Vc/kCtvJu1tNhfXbcg6a6F5e4POys+2VWV0EwZ/Syy3vbn2MYDK5nvTJC/4X
rLuqZ9f7En245TnkY8/0kfci/NPySbue9bF5mfienXld6UXtfKqcGbSaFvt9
ra3wbet75LlrT0lsWqxbNi+82uaFr7KnV86GkHi3vVx7LsOurewR6e2UcwqW
49l4ueLkVqdh72l5bKnZSb4gfZurXHmVs4pfEW2ePTtg52jWVoXbEL2EzV+E
kxA/L9oeEoPEJmSPbB4pNW/he7ZXTPJ+mdFYrSzRFRDsshrjEoMWNz7+rZ17
2ncn70v8mdQLxbY2n9q4uDrrRN7dcjCrwbZYR3yG5K/CKwofu8pN5VMw354d
K79dUP693N/uo40Fci7PvqONcfsuKw+SswMrP77wkxc9kNcYa68n6y+a24+f
xT1ID7b8Xg3BJfLvyycJ5hNOe1Xnrn23+k/Lecrfkp7nur7wiqvcUXS8JEaI
rdazSL1J+FWZE9nfkrL98Kte9PpczQGtT9p1vs71JX/Z59pYILhHzgUU31j3
tD06G5vrvUre/El9X/to+Z6d/1ptDOEzBJOLhoHErN3rq1kkySNEy2Tffa3B
/vaCzXelXrNn/Qq3Kb0U4m8W6+yeLr5KOO2VX13Vkva59syIxUw7YyrfCWaS
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
tqdK7mnzZuEY5FkrFmztTOxAZoUWu8g7ElvZeoHEhdUWknxxhWOlx2U5pz1D
t+xjZ0+lllw4YHuVVrdGcKDck9TOxX/KTJDUICQeCVa8mPGRj+3FFY0BwRBb
55ZarPyttW3REpN+LLGhPXtl10nimuiUrnDGrpngT+ndldmcxfCyR7YOLXo/
kpcJPtsYKWd+yX6R+WbRJFjMtDhDMNzm2WUfUgMS37D4ZvHBrrn0Dci/275T
4epk/VZbYvvwpL9ntXBr/YTb2x4pwWFyT8L/7RyQ4LDVYKw9LX5b4oLUrTYv
LB8jvQXi/0RjRnoXBN/WNfZsCMFDcg3RDKz1kNll4eSWM5RafvlAmQtYXmf1
xqWeIjnXzpRtrrExQnDP9hUJv7qarxUdV6mRSw+/5JH1ncxkyayT9KksZlqb
F23D1XnS0p9ffmJ9deUC4mMEk8kelRn0lQ6B1L8kpq5q1YIb1pfscwseWo5h
NRWkLrNYZM9QkHghNrfzYnv92lOi8yf+X7Dx6n0tthPfK9xv2fyqvrOf13ym
8H/bryZ/a3Oi9QESv9ZutjYv2siSs5adbc9nxeD6d/KOhE9avCL7QuoUUovZ
Mx0rf5GesOVXtj9jMZbc/0pDTnyy9GqsHSwmEF8la7B8pujQbN+jcHhS4xSN
0+s5i8U6woGvtE8EH654i81Ttt9V4m75kl3bqneKdo70Nq/6FWW/Cicpc97l
21dxbXMK8Stbl5GzQoTXWTy86gVZH7B9LYuH632Jna3GkqzN9vCvzq9ZvYHN
3STGr84DkjkFOc9berykLibz66t+ZukVvDiHYuvx5fPE/jZ3F1xatUmpwW1/
z+6X7add9ZeuzstbzF/7XnSDdv225iW9BcIJLZ8ke0o0scSH7dy/+PPC/BLv
ZI5GNAlW81/00sSv7Dmsq7merT1JTiccz/qM1XUT/Y9dv61BbC9l9ZdWDip7
Z3uwxCdtL4usx2IssW2pqQk+k7kGsXnJfbYnQ3LxFc6Qvno5W2TnPnYuTOKa
1BpXs0Xrb7bGIThpta+FUxF8sz1qkrNKXWZ7NYQ72Wdd1ZVWy1T80M4rLZYS
/7fnAghXIXmf5CyS30ktU7Cd2K3gD9FAlhrc5gLS0yP5i9QLa51Eg0H2nexF
0ZSSWCAxZffRYmOp00sv6yqnWC5BtBlWE2hrJdJbI/5PeCzhIWX9pTZc+7tw
hmCg5WYEr8g6Sc1lc7qNBYKxVhtjcw3JvytfWKwofI/kL9KbLb/VsOKa7Lvl
7Va3TDDHxo7NldY/yczO6pGI3WwetPtLsNfW43b9ZA1Fy1o4+doXm09t349g
eNHWFjxcPmBjn9Tm61kv6ruyZsLBynx/7d16FvF52zsiuE1ik/ghyZtF72Fx
idjNxh15R7t+q6O2mt5S15P3IvMm62NX53qsTp7sV8EfYmerVyH1nbU/yZvk
3YkPk/qO2Nzy7RJH670I97C6L6ttWGuz55EtXyLrt/Yk9yE+SfQGxAcsryMY
azGE9F1tr5L4POEb1k8KR7W1DIk70g+xfR7bd7KYbLW1xLetdsX2r4iP2f6S
xRPy7vZsJumNWB2UzR2rviDntlY+tfhgtQfEngTrSE/Y1j62h0PmX6SOsPm6
9A1Ifln3LH2tYv/l81f8nGCIjR3iA2SddoZO9otgl50JljMO1jfI9csmtmdi
e6dk/VarUHS2JI/bWqD0ZtceFWxceEVwrMTglc+TOV3pJxBuQ/bC/p5A4QP2
GpKLbb+CrGH5Z+ml2JqUzCiv9APEPmQuSXzDfrczsuX/tuYts3LSX7W2Kueq
Cg6XczQvMOFK52zf60qjQvLy4vBXsxhyva3LSB60nGThoc1xxW/t3hWuRda2
cjfRb9i5HjmvV+ZQtrYt8Vv2bvmbfW7xAcLTbMxabCH6dsITiJ0J53mRC0ou
I3a4OntI1kz24gU2vsC9ktdsbiKYWTgYeXfCAch3wtWtDUm/zvbnLR+2ZxWJ
/xRsIT5sORupE0lusnpLiyfLbqRWtfFIegL2DC/JC4TX2b4u8fmiabcYZfNF
Wc/6d8sfrviGxRnS97D9t9f59+rfCX4uTCD91eKHCx/I+Xr7jlc8xM5eCc+3
e2fj68UZRpIH1/V2Bmf5D8GQcv6FPJf0pclzi951PZfkU+ufBD/XNaQ++vgh
2uwXmEn0k1fPtfu17r94TvEHq/0o3KNovRY3IHFB3p3oiEpvZ+Wd9e9XfZLC
wQg+EBy2M1OypxZniE2Iv9k5IKmXCUeymlubg0h9Z+1ptTqkd2d7AqRGJvmd
PNfOQSyHsfFr9cMWt4kO5Oo8b6lDyTuWHE1sbuspEvv2rArZo7UeUu9c6b7s
vpffA7G55uq3PgiXszNHy52KjotgbOnb2Px1pQEmPIrMxcpzbewsf7Z6G2tD
0nOzentSt5KeTKlT1jVWB2t7KWTWTObFVrNKcLL46vLD9b7kvdaa13zE6oVW
frQcoMz7CN4ue17V7Osae37K+pK9ntSbpZ9J8If4DPFbYjdyPdnTq70gGFJ6
v6VvRu5ZauriS9bmZL6zeKPNBeVdCL+1/klmeet6q1Mq82Jrq6u+KzlfYGcW
ZH9LHWRzU6mFLTcjdajlReQcaLGP9TGLA5Ynk9ghfSrCzax9bG+K9Gmvnms1
xqWeLT5mOQzxJdL3IHWf9RnSa7KxYN935fGVa0o+Xf9u53TrPgTTrP9YjYTt
kZKYIjyB9K+sNulK22D1DGVObTHfzsKu9tTis82nhctZ3kKeWziq1UoR/LHz
R9sbJ/MUq0Mgtipcy/qtzfUr71jdyIrfopEj9YXt71lstzFFfJXwSdtXsdcQ
nkkwnMwOShxdxQLRFaxnlZxO1mzPkhCeQzgzWRvZd6sxLrFpuVM5I2nrvrXv
hGsRX73ifiTWCMco9yfzmpVTCv8h56eIjxGssL0jO7tczyL5a8VvwXDiq2S/
yH0In1nPLefriTbjhVakcGkbF4SzEe5hMcTqwIsepvRgr8472LN75Ryf5brk
va7qo6LtLPqoF7O58rdWz2Zzjc3dRIteMIHgOXnH0t8j+2ix1+LJ6vfaPbLv
a/3fcvtSCxB+UupEwvFs74usmcTjVU/P1iM2Lsi7kGcVzknOpln9f9Gr2zVf
acvt9S9qSYJFhbcUbb/t65beFOnDkHe3cyX7LnaPLM6X3xghPI3MCwq3JFzd
1vhr/aQeJM+1ZzmLDxD8sdfY3w8p5yAsLpG5g+3NkrrbnhkkNif7+yL3EQ5A
aj2bm4oumtRTlkvb/bIcdWF10RERe9reHenXFX++6g9f9UxIfJEcd6UVJzmL
7K+dd1ucX753hY1XvkHsRnIH0USVHprN70QnQHzsSsNj97T04Qv+2Fgj+2jr
IKKLID12i4FET0LWTPbL9gAL37Drt/ck9dQVnyF1lq31bE6xfY+174s/27q7
4OTVGXnbn7Q+Znmj7X/ac16Ev70+s1ly6FVutT1JiyEEk0lMrWeRHmzRWJI+
j8Vqsi/2b1/Xy8v+xG9tr/uqj2T9kOC/xXNyVrfU19a3SS1M6i/yLmSP7NyN
+ImdQdhYs7r08qxSUxN8INhF/t36oeXVZH/J3xK98cK39SzLf6wPkL0mGFV8
Y8U7mVPYNaxnkevJexE8sXnNct0Sm8RWtp9va6Krsw8kj6yYtfzBzovJLGbZ
/KqfXHzG4pLFFnvef/3twt7Ch622rewL6a1ZrXLxh9KPtfxwrcFqnq0PE/uT
Gt/W6cT/i68S25bZH3kXWytZjkfwnLxLqQeLP5A+RolNO6Ox/RzSPykaQsuX
yt6VWuxqbkU40lX9RfJpwTTyIfpGmzcJRpV9sRz4Svtta4H1udLWFu5BOH/x
YRILdmZtedTKR0R3R7DI8hOiV7F52foGeUfrtzbe1/uW3vKVDa0m0/JqEkeE
Q9raqvAuy2lJniL7a/OR7fNY3LaYTPaicIkrXTfh/Fd2K3n8yiZWI2F1PkXb
VvyB2HlxWlsj2L0m9Q7hFZZL2H4Xsf/62yutrLWD5XuEa5EP0fwQHyD3L7We
xX+rf7DvdRXjxIevNLeWk5CeFXkumd8tm5B3IfexfK/4od0L0hsn2GL1eBb/
CSbYmU6pj0iMk9gneEje0Wr2rJ8QbkPe0cY7wZyiVSbcleRlW3fY3LRsYvM+
0ecQ3ltqpeKHpAZ8fR7KYqPlgWTWvHzySotocz2J69KvIFi97FP2neT3tRcL
B8heW95FfM/qFhZu2Lgg/c9yXqPgxsIre86LzBOtf9qa1+7F8uf1LHv+guDV
Fae1vILEC/HDopknPmz7Ufb+FrfLcy2eE32C7SuWHFTyKfkQzWHJcWQfCZ4Q
zae1v/Uxq1+1s3IyY7K2tb/dUWaFdi/KjNLWzoQPX2Hpeq7tIxEfXs+1+ahg
XelvLG6zeJGNO8LxruLuhX2s/o30f0qsWZ+3Z5mvzguQPGJzgc19JNeTGo34
M9H6lvy4bGjxcH0I77JrXu9u6xqrr1jvRbSONtbKmS/ib6S2tRhI9HvkbPIL
vRD5W4shxD7lTDSZR5N1FjuvdyGzg8LfSB1X8peNwVLvkFgjfSESO1+lTcqM
zPZJlj+X9ZS+sbXhFf+370WuIWsremBiB6LfWPiz4pHkaDIjszO4gm/Enle1
ybre9kns/pK4I71uMuO2NZrN6QTflv9c9ZFszWXtcKXXKv1Vsr9X57AsVtvv
FtuvZlgWe22PqODD+neicyv+vOxMNFdkPnt1lr/sNclry+a2D7zWY8/N2T0i
mEM0RWSvSbxYbR5Zg+W65EPuSXTptkdh8YH4le2NlFxPcvrCB4Jp1m4k7xS9
lt0ju87lb0RfSmrz0jdY7251VnZ/SW/f5kGC+QS3S/za2pDMO9Z9rnrm5G/t
zJ28o+UzBBtLTBFOTvCk8DT7ITyBzFzKfITYnHCV5f/2PiSXWX9b11jtFun1
ETuXftdVr4/MRomug/BhUucSjnrV47UxYrWdtpd79d3+7tALDCwcsuypxUB7
DoXc3/o8yb92Rk/yIMFey9sLT7B7SuoX4j8ET8jMy2JXwUDbC7V1MeHh5P5W
q7DsUDCc+HDBtxf5pazZ4gx5FuFFa20kRuy82Pa+CF8qGGhrYdKbXfFoezXk
XQgHJvFe8g7hnKVvST62lrR84+qstNU8r3exXLE8i9iE9CXIjNL2hK9mcMtP
yD6WesdyufW3BZMJz7c8xNY167mEQxJ/s3tU4ojUHWQNRFvyYia4rrcxSDT5
pf9cerBX31eMrOcSPd6yedEDWBsSe1p96bKV1cmTnF76bJYzkH23PNzOswhX
Kf1Vmx+tzUlfjuwXyRGkNiEYYuPL4slVX4jY6gUnL88t9XvxQ3sN6S+RfhHh
RVf67RVf5fcEXviMjTUS11fzmhWD9hqy16TeJPe0vk36EgRv7RosVqzrraaO
rMH2ygi3X/FFcI/ocNY9X+gBSF1wxdWJ3aw/23rf6oWKLsLmxHUNmR3Yfq/V
zJPcYbG66IgIdhFMID0fwuVs72K9yxXGXnFy+1w7x3yxBmufF7zCclryLGJD
25+0+cLuxdUZPfvvBKutjp28rz1vvvbO4o/Ng/YdbVyX3o6t90lcE45n6/pS
g5f4Ivo9+5sqhQcS7kQ4CbG5rXGu8ovtz1jcKLUe6fsRnCn+Sc5BkHvavS49
kPK7Q/YccenvEd5I+uqlt7DmGmQfSZ+NcBtbs1/hsNVgXHFLEtf27J6dz5Y6
t/R/ru5vc5zFc6tHKvxhrd/i0gsfJvFlMZbc3+pF194RrQtZ/1V+v8IQ69u2
x2XXcHXe8GqWQWorEl/FJmtt9v6Wn699J+dQrC7U1omlBnxR1xNdzbK/7Tda
XYrVupOcZf3N6qiLrpjUF8SXis6W3PP/Q74o+dTizMIuwtutHpv0OmyvoHBF
gj9X+3I1d3iR3y3GWr3Eiv3C2QhuL98u/QdSR5Man/Q0yMf2akiM23lc6e/Z
3EdscmVbwotKbBJcJXhF9KvLPqXfaDk26XtYe5Y9LTYk6yR4W3gO8UmC4bYe
sc+12gyyjySmbP+K5GJSU9i+EPENEqdkDfYamystDy+9/aua0fqYrXOtnmd9
rAaePHf5T8HGr7KvdaXfIHhFMPCq50P219YLxbdtvVNmE8u2hG8QHlXyC/lb
e4bF+qTdL/IbAmRWa/uoZV5jZyLWtwmGkPcita2tf63vEc2G9fkrnCm1ITnT
avuQVt9LcgFZA7mG2MHimM0F1m52f9e72LPDtjdetCtX9aDlnMRuRKtJ+Fvp
Oax9JPh8hXtFn09m9LaHTM5r27OHxIZXsW8/ZSZ1FS/2nEhZQ+H2L77bsx5X
ujJb7xf+Y+PXrqeczSl7TXKKracsppG5tj3fZ/Om7V2TfSfXE5659sueByTY
bs/+kFrGzmsstiyfsWsgcUTwx/ZFr2r8orEpe2TxxO4j6bcQnHmRcwvPt/Fl
tU8rrq2mjvBG+9tEhW+T+xA+TGrq0oMiaysYu64hPmBnKJanLX8jejbbD7T2
Ie+76jvCwWyOfoGfZW1rv2w+IrFs57AW89c+WhxeucnyAfusMmsgPGrthe03
kviy85HCl4hWkPSgVt4puverniqxG/l3oo25OgNibbhigfiP1eNZ2xY72L1b
73W1HjsvI5hWel/kuRZzyKyqzNzXfa72wtaV5F3KTI3UAqXWuKrRiH8Sbmkx
weK/7R2RfV94S95l+bCtQ0ufwdpq/W3BZNu7tn2nsra1LySWr2ZkZM1rL4oO
s9RKZQZx1U8me2H7LSvH2T5VmWus97K/sbCuKXtk8wixZ4kXskcl7pZPlh6C
xRwy23rRryB5wWpySq63MWUxyuIk0XVY3yZnssgs7ApXl68WfSbxc9Knsn0h
q4Oy9yl9KsufS41g10zOc1kOY9dAeikWTywnIfYp9yRYTfpyZd9f12uEQ654
t3NJiz/rWSTv2DkF4SqWL5EedamLi49ZvyLYaM+8WJ5sOXbBJas/t3mE2Lxo
AAp+LgxcGHU1R7a9yoKHJC6s/pnUPrZnRexT6jWCA5ZHkfxLeMvq9VktBOHn
1m9XbNpzdiSfWj5jz/WQ+LI83Nb+VzNlWwNajZPVJdpYLtoeu7/Eh1futhyS
9OKKHozYnMQFsaHNWeRDzoAsW12dzbS546rv+kI/QLCR5Ivy2ynrU3Sedk9t
f5LsneVLRJdCfM9eQ/qidjZK/I3EMuFC1odJP6dofqz/FGwkNReZC5NcY3+b
yOJtqd8tb7fxQvaI1NfL35Y9bf+BYCbRcth9KZpMew3Z3zKHJbxu7eNVLUmw
xWoSrN6JxAvBNKL9JlzUarfIu9v3JbFP3veKi5L5SznLcKVJI/nLxrKNcZu7
13fbkyFrID5TfMPiAOkPEPuTmsWe3SM+X3KTtTOxefFDa8+iuyOxeZUHFx7a
fuDKC6RvSTgYqVlKvW9zUJlxEF5KamHiq1fYRXRENu5KziL3Ib5NbGJ7HWX2
R9ZDNC12FnaFk+tdSN/AcpUyM132tD1t0q8g8WLfxfJtwo1tXVD6XcSf7ZmO
gnX2nlZDRXIWyaekpiB2JjhpdeMLT4jP29kfwQfby7Ufq7WwvTubU0jsL9uS
c8dF9/VCD1DyMsEEmzuIHQjOk/mvPXdD3nftb7nnWtv/AKhazdI=
         "], {{0, 128}, {
         128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "27230916895777366626"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.11181554943323135`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.8881351351737976`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzdnb3KdVlWhau7QVRQI4UGA/sORAMj66Mw1aTaTJMSNJAGpQwaM/EuFAMv
wcTQK2hvwNjcC9DEblA4yYTn4Zlzv+fr4Ct2Hfa7z9przTnmGGP9nB/82V99
/Rff/eKLL/7mF3/6n6+/+fFX3377zd/+8Bd+9j9//s2Pfvd3fvS9n17+3f/9
+9n1v//6n376n5/805f/8a//9uV0/dtf/dqnH//RH3763m/88NPrdflbcj09
x36vbY/9XvucrXfceq+tPintf4exvo6Trfuvx3Srr7bG66PGurT/Ime3/vb1
+h//4fuf/v/fr/7eX376pe/+5pc/+cF3Pv3yd/7r9//lr3/ly//+zz9O16/f
9fr813a+fv56/fq3r8+c2jl9PrWBfE7ey37XdD29y3Q9fe/UhnJN2kzaP8Wb
fd8y1uV6Kz7JO9qcuh5rGwP2notxuW4/if/rd7d48pqDr/e8fv79f/720x98
/Vuf/v6rPxnvef031ZTCCac2bMWYjZkLnj/d8/ru07XNi9fvmsZxqss23qZ4
sPhW4oHEHoln8sypPdN4kTGd2jY9n4wvGWvCkS70xYRRZFxKLhT+TOJ5ar99
9+kf4dVTm0lcTXWhaCjSZouBWzrd1m6Ck9M9pM0kF0guP3mPzZHXZ5Jxn2rB
1M7SV+RvCeZPeff6zOk5pPZN/WljntS+La0xPZPUCIKxW3FL6oXlM6XuFJwp
fPL1/qlvbb9NbbvoQ4sVhN/avCCxbbkKeRcy1lv3EF1psZG0gcRnuSb8pGjh
Kf7JdxXf1fLkqc0TVyHtt7WY8LriC9k2kHexXt+kC+z3Wrwi9xOsLnhV+PlF
7l/UaxszJZctx7M8kLzjhAmlz7c4g9VipMZZHWr9Mcv5t+ZPi9YjGtby7a15
jYv5FMu3p/sthyT3kD6x2tz2Z9HjlmducT+iKYhvQ953y/+3fT5hS9E4pWYV
H6N8l+U/JB8JVljts8WpihYgcz1b/JD4ZlveFPHhCQ+xWongm+WE03iVumk9
E+vnW75qc9B6MradVmMWTmu9oAm7ylytza/C1UuOk3Es6xAITk6Yf73mx+L8
hRbear/l1VavTXFCOKfVqhNXJPO2hfPbvyW1g3g1xefZ4l0EEwr+kJi3PL/4
JKVGFx5O2l+8zSnHLU+Y+ofo3y2dTuY4CEe1vlDxECYtbDUXmR8vvhaJbdsn
1qey3ov19IrHUuqI1UTWNya11WIgyYXipZMYJu0snNnW1q35pinG7NoVy/1K
/pK1N1s63Y5jieGim4qHTDyrwkstf5vGd2tuwmqrwpOLXrN9W2KA4EZZ20ba
s+VLFO/I8iLSV8R/KPMLFkNIrNo1PLavSPsJRk06d+LbZV1iyWvr1dt1tlu1
9YJjW55MNN1W3bRaj9SRCx+v5LLFXuI/EA2+5eFv1dOi6WzO2ppI/ENScy94
ml0/T3DDajr7txf78gqGkHyc3pGsVbDrS5+8tmNq/QSylpXMBVhdX8Z3y4fc
0gj2+VNNJHr8WrsRHLN7x6wGKfhJuC5ZR2H7efouO75bOGnbbPf52jpF6siW
b7PFz6/7fwt/CmaSNQB2vozEQxnHC45huXR5pt0XT7y7Lb02PX/CtIlv21pf
+o3oLMJzCiexuUY4m/VYbHtIDbW1oHCACx+vaAr7LheYv8Wx7Vhbfb3lM1gc
K3OFJZfJ8wnPt7lA4vbC5yy+nB1HUmsKFyLzmzb3SUwW36ZwVFJPbQ0t2Gsx
qmjPktdP+gxWs09/S9bk2PWZFk+2sGXCyS1++1H+EmmPfRfrk1xzG4KBxTe2
fUV4PvHhC56X+LTXZO0HWUe6VY/I2BGtR9r/ZA294P82v+za0eJ52udbHUra
QOY4tvbobY178ZYtFpX17Vu1266XLhh4UU/LWNs2E/5m18Db2Cv4Yz2K6X2L
biLjWGrok17QVs3aurYxvPVd1guaPCub44Wv2jqypf3tOg0be1u+x9b8xXWN
Lu9uz7+y3KDEXsGZ4l8V/LzgXTYXLrzirfZfc9QtPCwxQ/i/XXdd8KfwIjIX
SZ5j87fsu7cYbuOT9NX0r8wJWj1F+qGsOdzC5+K9bOGhxdst/bWlZa75xlZ9
v7jH1p0LLL0Y0ylPyz4Re038GTLXRuqC9Yi2uFnJ/Qv/58m82+Lqtm6Wmlva
Q+radE/RX1v81o7dxRqkwpPLPVttJthy4aeVnC17GWwNtfvuCeYX3k7efWu8
ijcy7VElvt+Fd7cVh7YuX/uuJJdJ7hSesDV2Bfes5t1qJ2mz1aTWW9iK89dn
krnardpnx9GeQUEwkPQ5wX+ri62fPI0R8VUK17L7Cqf1xuRvi8dr/ZNSC0r7
P8onKX14wee3+M9WHbnQlTaXybtveUQWe7f4ko2B63EhtWbCMYu9W1hhtYat
O1N8vj7HnkVp8/c6DkmfbOmpC5+h4GrJi8LnyTNt7ttc2/LGbU4VnUK42VYM
vEN8Fp+TxEz5raKyV4vMIW7xLuvDW7yy69XJ95JxefLanvt37S1bXLV9TtY7
XXDsLQ/ZrtciNcXqEct17bX1Zq9xxsYn2ddjMe2Ce9u6QHyhrXpHnrn1OwWk
bVseyztcF974pH9C4oTs6SBrt4jWe7LfSA5afNgaO5ILZI3cxLUmL2K63+by
lj+5Ne5lvAj3Lv4n8Y6sd7fF54k3VdYR2fr4bvhP6iapcdN7PXnuDTkHbMJz
0mYS59bHsP1Gcr/4PE/W+qLLiL9q62apBdf+Z9Fi5SxcqxeIX2R1Gclx0jbi
1Uz3F+1/rTELflrcKHPrW3MZJK8nnCcavHCha/1Vxvfieqtm2XF8/VtyFqit
v8U3K34FqX2ldm/lpuU8BE+Krixcxa5JI/svtvZ5XWD+9T0XHmPJI8vJCx++
8ApsbFtfy+5VnPyWrZpldRZZO1R+4+/ienp3giGkD+05hFsc0vKQgl3F+7Kc
kGgZ4jlcYMiTY0fG5d3mC2ycl7aVGlr4jNU1dh8Nqael/e+ga0gbbN0sWmCq
X1Nsk/MzrQ9jNVHZu2H7p+xZKP4tWdtfMP+iFtixK1rywkO46BOiJbf2hF7g
XsFhy58t/peaeK1rtmKsaE/iT1oeazXO1u/HlTkIqx/tvB6ZM9oad4uN5Z4t
z8e22a7/JP6Y9ZG28JNo8OIz2Lpma0Tx2C1u2PVyFs/J91pdUzBnq46XXLbe
1xRvBOvsHgqbs7au2dpKeDjh81tateTIk55PyVMyRuT8kCc9AZI71rMlfzth
l93Lv+VdFN5O3r3sGSSxR2rxludA6rjlJ1bTkWt7FoHVUKRtdu/J1rkxFzV6
y5+59kXt9xIeXuoF+W0yElfFEyA+z/Sci1pvcelC1xDOZvvE9u1Wnd36bTVS
ry/0WtFNW3XZ4nz53un5W+eZbHEAEv9bfP5CP5Y+Id4FwfPiL5H223M4bV9t
9X/hJxca7UJjFp5GvETiy1lf0Y4F8WG2vN8y91T4RhnHLezaiquC+aQ9lieU
ur/F/SwXsv1woZtsey6wvWhDOy9Grq81b8HMws0mbk88Xrvny15v1f2ize16
kqJzL7DoIq5K2y7GmuBSqcv2nq0aateJlTpV+K3lGFuYZrkr8VonPLTrii98
6S3/0MYhWXdn8fD1bydtUjCzxEnhKlt1cItXl7gia7cK7k39s5Uvdk7EeqrT
/eV30y78DTvvc8FpC6YVPTLNfROfgdx/wVWm9ltfruQpud9yLXJ2UMHMom0L
Jl/w4YIbls9M95C9z1u4Z2vo9PnWPojCRUt7bA0ie09se0qNLvynPMd+V/kd
pQudZbHL4p7dl0pq4taeVoInU79t/QaQPXer1JqihW3Mk3Xg9n6if4mPSvRF
yQuCk7aGEhwovKX4ZlNelLObLKcteW2fuXVetH3fJ3lIiSVb7+x12dNK+tPu
ny3+Q8m1LU5b9n1b74usDy9nsxPsJXsfrK4sXsQWbyH8oeCezSlbZ7fatoUD
9p7C7QtX3+IhW7Fkaw3hP4WfEN5FdMfW2o+Sm9OY2lzbivnid9l5LrtmlcT/
Fu4VL+5JfnjBq+0zi17e0rBlnsXq34JFtu7Y/i9/u5Uv1pO08VD03RaWljZP
/TDFGDnTrPjAJdeshi3e5hauXsT2xXxB0W5bcfvk8wneludf3F/mHUrNevK6
cIbCh7fisPhdNja2vLWJ/1vOUDTa1lhP7z69o9VBhXOW9yXtsRrzmntYbVXO
2iLvaNfG2D60e3DKPp2iowsmk/Wo5N/W/AJ5zhZuk/YU/5lw2q31b9M18din
WlDWnlmsIGNE/C57ZlTxLsj7kjW9W2dflHe09Zd4d1tzc1v1i9xTzpYkaxJs
PbL6jqx5sLm2xUksb7GeGPGyCuaXtaO2/6+5pT0PuXCPLY5N2kl8MII/WzrR
4qHNhdLOwrXIXAy5p7xL4ZPTWJT4Kb4N4UtEv1ucsd+1NS5b/Krw7SkGyF6z
gldb3p3dL7blb5AYs7rVfl5wxvJkm5uWSxTOX8aaPMfGbcn9wttJ7hMuN/2z
MV94YHn3i3vKMwu3Kd4CycfXe4ifvIUVdj9g8cC3fCTrx5Yzwws/L1zrIne2
+OQWZyAxXH4rzbbT6nqLM2RerPwWktXOZb9Sqac270qtv+Dz1zlL5hBtnNh8
se23c4hkLU3RWaSdJR6sF0rGwnqwBOcnPVLmK0nelXpBvAXik5T8LdckPi23
v9DRZCwszyTPsdcl17Z8hhLbpM1k3nDLKyZ9buNkuofwnOmeC0+GtNk+cyuW
LA6T8S28zp53MenBwjEIZtrvIlq4rDPZ4orXfNXiG3n+FDN2nnqrrl3UR7uO
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
/TzVgq3rgqul7lzMF29xVxtvpBZMMb81b2W56LTuonCSC0/A1oIn32XLG9ni
sXYN9pZ/uOXXbeFGOYfh3a4tfyNzOh+1DvD1nvLbW6VO2bpj+2eLz5caXcbl
Qg8WLCX9uXWe9rU/eVHTbR9e455t/4Rj09/afdkXvOWjMN/mxcQ5yfmrWzWX
8BOiYW0tsOtgpxi75mxbOqg8f6vOWp/c5ibBEHu+BKkjT3L7wlUu6tEWXpFz
Gl+fY3+T6HP3ha55lz234YI3TuNVxprEANEgW2vMbFxd/Abx1IdW05UcKVyF
YB3hCfY5pKZs+R4WSyd+8lGexta7T+No17EQ7vq5+EKFd02+rt33avfslLpw
4VWS59szZos+er2frBci+yILrhLP3PJ5W4NeryddVuaDSP/Y+jX5SzY+t/Ji
K0eerAuTTrfjaO8p2vOj+u1ar01YRNaxFM0y1aaSR4Q7XfQt8SenmC/6y/bb
Foe3v9k0vdfEva/nLwgHIP1A9rWVOLTabYurP1kLrA9W4vada+i1N0V4/oRL
0+fW05ti2/62VBnfrbywWGF9aXt+6ZZ3tOUlkrM0ybhsceDinZZ83Ioxi4fv
4GOUMSV+13S/1Z4fVUNLn9h2Wsy0vMhyv7L3kIyp/e3OLX7yJMe+4D9Em5O1
BGVNV+lz4jNvnVO0xdNInBO+9M6YT96XrM2w3h35DZEn5wIu+Ib927K+pczZ
lX4mPJNgkcX2C21rOTbBUqL1SK20+UV88mkuz57dZ/uQ5DhZR23Pw9nyRYtO
/Fzw3/JVe233xF3z/wlnylnfhMPbvt3SU4UjEV5K+pCc83PBZyzmWP/H5lHh
5GXPGuHYxEu0XhOJq+kdSf9Yb81q2+l9Sy5/FP7bvLioKYXPXPSDbSdZx176
zdapKU8JbyHc23LyC35SeF1p2/S+do+nrelbupic1WC9DjIfajGZ1Eqrbcvn
BZc+au7yIncu/MCteaULvbDVP6Ufpu8lmr2cN7jld5VYLX140YbCo2zbtjCK
+Dzk/gmHSe3bwityTepm+Q2gLfx/shZseQJl7fFFHdnCH4tvluPZZ9p7bBsK
ny/13fZ/8TQsT7BxeJHj11zI+l0k3orHsoVvH+Vd2D7f4rEllsgaQjvnPnna
ZL9/wfAnsYi08+L3SUkbCM8psbR1Fv0WZyi5VurLVo5v6QvbJ8WDLX+7xfOL
90j6sNTc6V2u94PYmLGYb+fmCl/dqokFi8q7bK1b28rHC3++aDES/2WNh/29
MJvLUzzY+Xfiv13wwHe7vmhzmXMpWEHmTaZYvfC0CXaRuf7yvVuYUHj7Nfcm
dXbCtDLWF/1c+s3WQZsLpM+tp721vsuupSne1IX2v/5X+pmcv7EVzxdzN2Uv
+YUHRbj9Fue3ObI1v0AwYSsH7edkTra8Y9Eg9ppguK2JVqcXT4bEwIQ5pL6Q
s5u2OI/lwDZHLFZf+NtbWHThzVp9uuXDkxiwXNHeM91v+YadXyD4UziVxeHp
3YsvTbwLgrGkppe1rFteBNHsxf8pvI60mcxzkdpt+2fLS5meM72LxeEL/2fr
OaVGFF088UOLIcXXKn4XeZct/Uvws9S4Ld675ats+V1bWH3hlRXP1vpLxG8v
7bEa/HptIekr+75Fs1i9tqVhL7wXEkvlvHTLFck14YQE8wlPILpmi1tu1Y7C
McjnRZPa97rmS6VPCr+aeH7RmNPzy1iTcS88mejlCy90y0fdwrTCYQhGER1n
+2SKN/K5zZELLkfGlHi8dq6htHOrdlxrUstFt7Co8K6LdyHYNXnvNgctz7mI
gYt8vObtT7aZ1GiSv1OcEO46xYmNf3L27Na8TOEzr9dkDmKL075bfG5xlcJn
rDc+fW737BMcLnrf7lMo/ud1XS76rniAZIyu52e32kzOWSq11fo5NpYs57H3
TPqlaHMbP6X/tzyQ6/i0+Pl6TbwI4mls1VDLb4u+uBg768Pb77X5TsadjF2p
EdP9JH+3+q1gPjkn1nrUpG/LOkN7dsT0viT3yXnpJJ5t/Nh6ZP38C2/5Scwn
cTt9F1n3Zc/+Kl76Bf980h8r4zvlpv2dAps7W+Niff6LM5NtnxMfr3h6hQuR
9bp2TKfvIu9YatZWfk2xTbjTln/1UZhv16hPXIXss7PeY3kX8l7FD9nySUo8
WA+WnGFSzlsm3InwAZJf5ZzMLcy3ZxISj93yf1uvp7GePi8cqWhY6xVv+bqE
I9n4Kfrumgdav30L98icONHydny31iVu+WMF84sPWdYkWE5lOdLEH7Z0tH0O
6UMyv7mlQQp/IHlR9O+Tfpr1jgqHnNZHbWF1eabN/S1smfp/4hL2N6SIviYx
Q9ZGFl1A/LGSL7a2kj6xPMRyyy0cJnpzaw6i5Cnh0rbmEgy81rD2ngvuOmGO
1VYkxkj8bNW74lMVrm5xxs4L2D3dtt8mnCHPt/hM6oitcRZXP+q3z67XxJJn
Fs+t9EOp+1tcceoHe/4S0bD2XMEtLWPHiOw1s7zXcqeLMd3KuwtsIed1THFS
9kdf56+tHYVPWn/SnpFS5juKrixjcRHbWx4a8a+mPi88n+SpXUdEeB35nHDs
rT63+Gzr2hZuFOwq3IxomYmrkD2A03PIMwnulXM/rjHhWtMRfVG8ZZKz1nP7
KByeYtuuW7A1l6xhsOcv2Ryf8NzOJdlxsedmWM5g1x2RmCHrBMp8X/EYL3xX
EkvkfS1/IGdoF6/V1tCCCReYb/kS8T0sz7c4Qz63tcnmAmnPlpdI8GF69+lv
LV8tHu+Wz7a1z9HqFzvuU20iY2RzsKx92vIHLHbZeLuoZTYfC0+2mGBr7paP
V96x6GvCW7Y8czvuZK6t9NsFThZeSvrto9qw5W+Q97J8tfD/0uatOC/c/sKb
tTWCeBS2TwiGE4y94LeFd23hwJY/s+W3bGk0ggnkjLsy7qTNU2268I3J2rmt
Nmx5DkVnbeUv8asnTXqd16T/7bxeyX2LLVte34V+tPeQd7F4tcWfLf/f4o3X
2s2OtdVTW3WNeFxbvjQZx629zCVOLC496RsUjUzmdCYdQXKfjNH0vtZHLfhG
PE/ihV5g/pZO2eK0pA8tzpRcJmvzCBfa0m6l/7fG5ZrD2Bpd6k5pP/GxSXtI
nFjOs+UblHiwc5rTM62OuI6Zkl9krmQLu675kq2bW7XpWh9N70vO1LUxU9o2
5cjFvo/CZyy2W6y271LOSds6M+3C69jSgBdasvgGBH+25nG2uErBpQusKzp9
0mikrhV/xubRRa2x41K8na0abc96LW0gdXCKDfu9ZB1L0YME88lztjTa1ncV
HLCfl9wstdXW95IL1qMufVg0SPEDi0YuNa54TSWGp3ssD9yqxQUrrP4ldX/C
yeInW85sY49oDbKnw+77IOckWM1I/JMyp1DWbG/VmsKBp3eZcvlCF9uaeH1N
/ECLP+Xs4sLJyXxNWQNvtczUnxa7iJ9W9gS927WtZdZ7sThJzm0ompesp9ri
ElNf2TmpLS5ndRap12S+gLSn1KYLvvdR+WV5ndXIW/1M9oFaHWprxNbfTu9r
eSbh7e+A+cU3sHuCtjiS9S1tDpL6QvqHzE+Vc8W3sG5q53TPhd814djFnPsF
PpT8uv7bKd4sJydci6xLt9qkjF3xosl66QtN+g74/1HtLBhOai7BwKLjCAfY
mnOx+bK1D51oh/K9F/MmxG+58EjfIX/tGbAWJy/mQcj9ZT0niQ17z1b+flTM
PMmFtmqlrQVl/t1qTxtXpP0Xe0K3aujFvJudN7k4i++d8Z9otC1N8c65b7nQ
VkyS3CEx/CTGlv68jocyjrZeW0woNb3ET+FsxYchNZR40ZY3kvvJvF4Z03fg
P6RPyv6md8D5LQ5Q+JWNn+naxnw5A/yC89v1J0/6okVDFZ5j47Dg0pamJtqh
1KDSz8Tzt/POW3zmIm6vedo7PPO6Dy3+b2FIiZnCJchaiC3Mn/Tj1OfFB9vq
t3ImA4kHy7umNhBM3pr/JRrBchj7/FKLydqVMl/5zny+4NU7PPOal1qORD4n
52VtrXOw+VuwZau2Ft641Q9TbSLa1mox259krys5E75g5paHuTXfbWOG4DOJ
/626+c4YuBW3n/scXzmjiXAwsj/I7rEqHhTxP+0Zv7a2Wi96C+cJftqaaK/t
njKLdRdrY4oWLvPjZe7Gaiu7pv2dOfCT7bz2Tksbppyy/IrgM5m3sjle8q58
F+G9BQe2OCrxmki9I58XTkh8D4Jj9rrkbJm3svrX6nHbt2RM7VlD5Uzpj+L8
W+20nuqTc3wkZqbYsD5JqaeWV1vvpeSvzS/iwRJ9ZHHb1kpSg0j/X3t3th+m
Olv0YOF45JlFaxcutMVFCe59FAfe0tEFh7faVjDKtpPMDU33lN+VsDhW8try
altbp7bZ/W5W79txL1564fNbGtn2D/Fk7HvZmkvO1LXz15YXbfWzzZ0LX/Ea
t9+tPYWzTfFg/ZmyrqDUNevzbPG0wrUIFl1rQzt2116Q1chbOmKKT7u/ntQO
+712Pqj421u1mMzLEO+r8L2f12urhQt/tvlFPEDCYQge2jMqS4wVzbJVv8q4
kHZOWEfm/ooXZL39rb6dYpLoMuKN2zm118//FwtbWp0=
         "], {{0, 128}, {128, 
         0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "88349935939278240116"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "\[Rule]", "0.019546782597899437`"}], ",", 
      RowBox[{"4", "\[Rule]", "0.9804521203041077`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzVnT/LddtbnX8YEAnEWhGLFJJeIYXgOdj4AUxlE/kFtAhiQAMhCYpWdoJY
mc7exsLvkC4fIBDih0gTGxVSPEVuuK5cY+73pHgP+2zWs/b8c9/jHmPMueb6
5//m3/36b//Ej370o9//qX/4z6//+D/86u/93o//47/6yX/8n9/68e/80i/+
zj/5h49/9H/+/ePnf/tr//T7//mv//t3/+tPf+37f/+7/+27//Q//vpXfuN3
/8X3X7+/riGfX9zH/pZtg/3b0sdyvW3Pqv0v5vFbtWE1Pi/m8ZN5VPq1yrsX
8fCiPS/irdz/RRv+/O/+9ru/+fm/+u5v/uwXv/8vf/Gz/9d/P/0z//L7v/zZ
P/7uT/73n3z39fN1vb0Puf/Xdn79TPplP5exsv0l97Fts+2/vrfzZefuRRte
x8zVNpsL5P4v4sr+1uscKe282mPH9kWc2/H5ek+C2y9y7Q9/4Q+++83/+svf
/7Of+8/fWcy8xufrNV/vf9Wvr9d8/Xzd0+bL1eZVHF79vT7bWL1i7Os1JBfI
Ndd8ff0tMnelFn+rmLHtv+L/ag/5/CKuyFhdWGTx5BrPr/ckfSHYeP3t6zgn
Y2Jjj/A6Ur9KrpXPZKzI75J8L9hix4SMLcGlq48Eq20NInzjwjHyvZ3Ha+7s
nH4yZkhfLtywMXB9tve8Pl/3IWN14bCNmas9V9+tZrf17kX8E25g9ND/S76X
HCn81mLgC0x4wTMLtpPvr9iwPt4qNsg1BE/IGJLvP1lHyj1t361vcI0/4Zl2
LlbjYLHx4vak7pTaZ+Pffib68eq77a/F2+v+JX/JXFhOUuqL1SOvtdI1v1fM
X58vbr8azyseLHZZDvOCn5d8JzWCcPVr7q77kOtJbBAfhuTCqs7a3Lxi23o4
Kw5J5ojkph0rohHK9aTWFK1h9V2JH5KPBRstpl2c5xqTa74IT7DjRrifXTd5
odHsPYt2tnr5ijfSZvK3JJevOSIcr/gGq7EifSye1Qpn7BocqVO2v2S+yvqs
5epkbEmc2/ixNe61n1Nwr3iqZN5LjS56qnwuHP5b1aPiG9j2lLW/wo1L3bec
v/TRxqflyXZtuuS79e6sL7fyRqyPVMbqqrmF89i2FX+71CDL562mtn5L0UoW
w+19VvNectBylVU9fYGTq9pd8MHiUtEyKx/MapnyW3asih4scUV0xwscION/
zddrL2uFS5bnkP7a/TAFB4pXX/jGClcv3mixguSF1by2vl+/S8bn8knsPa8+
ljki9dfi2KqOr/yHkgsrXby652r8id60Ws96Wa/5GMFSsmeeeJ6rz0Uv2DGx
nHzFb1eYU/hP0cWWF9l9pLYOrvxeO242NmyMEXwu/u0Lj2Kl6VbtIXF7YY59
jmzlm9m+rPQyyUH7TASJT7JOV3gpwSWyT4NwSPssZ+FsL3idnbtr3EjMrHhj
8XutX7TS/lc7iR5/4XuUz6txWLXHencv9tmW+mj9ycKLVr4r2SNkz68oz6DZ
eVytNdv9ugR7X/gGlm/bGk36QnRE0fgrn5/wrjKPF5ewOnHlQVmvrHi5BLus
/2O5k9WYBYuu8SQ1lPhOltNavX/lrL2P9ZSucbNxRXKkfCZ7wsk8rniI1Z7E
/7zi9sIH+zyjrTXk+6LNCSbbfUoveHWpX7Y+ktggMV+evy7zS7graWepfav2
Fx+s6E3LeS6sILFka1/BdvK35Nm9a2yL3rTYWzQOGZ9VvbB8YFX7rBaw3LJo
OquJSE0sOW7zsXD4lfdi9a/1+ki+F636Ih7sM/h2v6it42R8yPM1V2yvvBSr
12yNJnV5xf/t+BcNZbnHi2fZVmOy0o9lHq84JLyIeK2WR1k+UzDQjq2t76UO
kjG0eE7aSWoN4a6kbVY7vOBFhIuWvCNzsVrDtd6d3U9SOEOZC8stV8+yrfpr
ceyTetzWoHK+kPU3Skyu+G35TGK+7IF5oVXJ/S1Wv/ZDbH9tjtg4tPjwIrZX
nga5nnBIMheFD5e+k7m4YsDWlOJRFD1uec6Len2NJzlv6vpMPBOSv4XDr+qy
rQur+VrVO5v7Kz/EfrZn+6/WAuxne3Y3qdcFZ6yvaOvIigtZHCDj80J3rOo1
GSvLbV7Urxf6+gVuk/5avlT2z6y4+ipPbe0j+WL3apb8WuXmyr+1Z7cSz81q
nNL+4lEUf4y8K+eqp6/zrmhAm7Mkpy5sJ2NSalZ5Z8EK04q3c43DC+6x8qCs
b1D8sdccxsZk6bvlOcXvJfp9VX/LGWgW262nWua01LIXMfmt+CrhFURfE118
YR1ZYyK/VWrxa65oeT7R8nY9hbT/qi/WKyPxufLJC+aQcSDPUpEcIXyg1BSb
70XDrv62YFrhtC+eg7ZzYbnfC75a6kipLyWXiR60WGfrflmbI7hB3sllMdbm
y2suZHHgNVe3Nff63o4PiW0yv4WTFP5TNObKE7PxTPiSrWsXFpW8++S500W3
rrQM4YQlTlb48EmsI/df7Vu7xpmMv/1sfdEVV//6t+R9f5dWJfhvcc/u0yh+
wmod58VnopUsblg/7WqPPUuwnKVfcOmTeF7qY/FMVv5G0QLWf3iho23Ntc9N
23wsuERqE+Hq1z9yzqqNAfusENGJZN3WxvOK773mooXbrzgwuf81R0S7kXgo
mPMiH8vfkrkr2GjbUPwT679dv1XihPgGBMNJfhX9SDCK4Mw1Vtc9y7vwytrE
Kk5KPL/InaJVS3ts/Ni5IPrOcqpV7rzwmV/8Kxy16Br7u/a3yNiWfCHXkHm3
OVVwj/wuqSPFsyI+jPV+Lc+8uDqJH+szv+Zs17yvMKpwsGu+rnG2azQrf9hi
tR0r+x5hch/72eZv0ZildhT8t9yMzGmp+0R7vvBaiTa5sOLFWdar2CMchtR6
kmukfhVvxPI0i2+rWLI4YHGS8N6iJck/i9s2tl+cYWW539UX4tOucKB8tms9
L/SaxTqylrTSni88B5s7BccKJtv2r+Z6tYfkwkDLk4lmsfyK5B3hmSVW7brP
hZkXz7F784oGLPqL1AKC4USjkbiyv1Vy2ebmivsV7bCKH4u9L7i6PTuXcKcV
lyZ/W7CR4OFqjzrxyq6+kLXmUn+veLDjT/Dkaqet6ZY3Fq30QsvbmmjXzkg8
FP3yQm+SuCpxUvbzlL6v9kUUrl4w0GLLKq+tr1vihHgRFv9tPJA+Wjz/JL6R
mlV8MzJHRRO90N22DRZb7H5pgi1l3dbm7Gp/ztfvP/l86MqjeFF3VuNP7m/P
Ybvmy15vx8q2wfp4hbcUzCn1tPzW1a9L45A4t89eFVwqPkP5W4uxthbY/Zz2
d238kDEptc/mdTkryXK5FY4VzWLnzvbFcjyC1eU8DRsz9vmgsm9ttR5UdOIq
r1ee3opPFt/P1m5b3239tb5N8V5InK/WQazGJzr3yuWC/y+8BaLTi19EvBHL
V60vUWqT9R+u8Sc1xXKGlff7An9WePsir8m8rMbW4ljBE+uxlPy1MbPi86vc
XO1tIPN1XWPfGUqwmvT3xft0rvsQDWjfJWHnxdYLy4vIvhGL7eX9wkXjW/xZ
YWNpp+VapU6tPAcyp1Ybkj35VruRvLZxuNL1q71MBGcId7Wxan0Dwi0JFtk4
J3Nh9Yut9ZZzFp5g6wVpA8lTclYA2V9d1qxtXL2oQdbXsjW08B+rTa522rPr
r1wrfbSfbSyVvyUazfozL8bBrrGWWvkCu4ofYmsKySMybmWOVuNs+3VxgAsf
VrqgYIut49fc2fEhOE943crTK5hv21842NV3glErjWPHkPR35dGRuF212XoR
3wq77PiUNUfS/rLWY+PW1sHX+EA0vt2rTz4XbXjh26pukt+yzwi85rr22bGr
zeVvSd2xOFZ0HMn3F3WneB0ED6/rrzEsOuUFdpHYs+d7lHiwuE049oqXFl+F
tNM+u201Kakdpb7b+Ck+gMWrcr3NzdU+B/JvhSerfLE1otTfFU+zXoet9YVf
rdYo7ff2M4mZwu1JPSWxveqv1arFjy3tJ/sKyr7WspfGPuttz7gue5mKjiMY
QsZk9V4/W9esj/HJz7b+FpxZ1e7CbSyvXq2vWX16cTy7P+2FF1Q05ipWCxZd
sVQ4KtHgK55Q1luJ3rl+i4xnybuCP8Q3I/tVCCexWHSNsx3PwqNsXS71zuYC
qZvk+4Lzpb92DMn8ljN1r+tf85CCyUT7XG1e7VcpfmCJvZWWJ32xzxat3nNn
tSfJHXIGOKkLq1wu+oLsJyfxSTyWwtXtnqLiob32dsp+HnJNwTGr96/vyZ7V
wussbySeic1Nu1/F5kXB7Rdr7mXf14rH2pxd8Q2rly2e2z0tZf+AxcCC4QXP
C3944XHZuFrVJqsjyH3IGuXFXQnHWHkLn/RDbAxYLnqNZ6kLr2O7xJ6t+7YW
Fx5ldeIKZ17sp7X9XfGEqzYRLVCemSL8obTZ1tPVnK72kRZt9UKPv+acJUcK
byljReaojLmN7VV+2XhYvX/qNd8gvKLoNXt/ixslTwvGEn23qrMrz2qlL645
LV6WnSOrEYofVfTsC+5ktbw9k7PU61U8F9yz81I4udWkxVdZcY8XntKLPXUr
fWo5FYmx1bmIL/h2mSPLCS0nt3NEfutFPBf+QzhnaQMZ5+t3Cf8v/LOsGb2Y
i1Wcr/jzql8kF1Yan8Tw9bt2LenFHBU8JH0pe0tsbbJrT2SsCJaueKm9pmhS
65G+8IoLP7F+heX5L/yH175ZiTfbtpVeWPEQUsdX41POeyf7cErbCDYWbkn2
uZGzkiwOFNxexXnxB6znXLTJSjMSTlXmqPgY9ny80pcX/bIxY+9PYqzokVVM
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
EIhetlrgRb14zZF+aFzaxid5DrGcYVW8C+vJ2HOECPZa3Xfl8jWeL/DZ+iF2
/EldI9eTPYQlluzflmuKrrR5Ss5AILWYxG3RF4VXk/aQ9fEVRyL1i7x/p+AA
aY/te+FFJPdXv1vOGLdauOBMiZ/SNqtxSDvLPnl7nt6LdZAXn0sNJX0kOHaN
OeGEhD+Tub64a/FMLG4U76XkncVGe2b16gw9G3u272UM7RolyanrentPEjOE
o9o2l7YV/nnpO/L+wdVz1iWuCpcrvpP93Yv7Ebyy/mTZ20zWZa7v7Xu1inYg
fgjxN668W9UOO84FE1ZxTmrxJ/OaeFNEjxDuSuLNeiN2/ddie6n7L3ia5cCl
5haNX/LR8ij7DHip9QXrCgdbaSvSR1KPrK91xXbx+QuvtrH0Ah9sfJK+23gj
cW7PG7Q5S3Sc9fpIXhctbH9r5V2TWmzj4ZNYZHlU0aGlrhUv3Z5dY+O58HyL
LavvbTxf39u+r2qN7ZeNbeJVklwo6++XR2Gfv7M5a+vRVRdW/kPxoi22vLim
cOYVFl35Yj0Wu9fL7v2z/J/kr9U4JW5XayKreCa1oGhky59t/Kze/WHbZvd3
XW1b+YRkfOzzd9e/8l4wqzcLRyq13vrY5BpyPYlVG2MET1a+hF1zLJhfMMru
PVjhCYkTu5fYYuA1zqt8KfFzzdE1PgV7V/yzcJXCdYn3bnHeemsvfLZyf8tj
X9SFVezZ+xfMXPlIhDNYHvtJ/U5q4gs8Ifl7tXl1psdrDW7bVvKoxNLKi7Nx
aHUTwXm7LrzSrUW/WN5IasdqzEs7V3yg8JPrb4lOsfFAdHTJ5ZW38ILn27+9
eBfBeYs5BcMtNha/dBXbK85jY35Vf21NtP7PSrPY8bcc0uY+wbEVthOvchWH
lq8WnUU8k+uzffahPAdUcnDle6w0vsW9T/7tC85TOHb5Xet7EzxZfbb6xeaX
9fNfr5naXCZjsuIz1jcjc0T2wRJdv/JwiM9w/bPceHXe17fCYXt/UsdfYNQK
3+zngtWr9hOcIc8vFx29ikPiW5I+lvd9vM47qyls3bHaZOVH2T5edZnEZ8ll
i9XX35LzGSyfL2s3BYetdlv5cmQ/alkjJu9wLHld+AOJQ8IfrE78JG9/4flb
zCz7ykreFa+veBelnXbPTFlrsPFp479w2lV9fzF3Kz5Pxrbo5avuWA116cTr
Plb7r/ZL2DPqiedj9z6VmmV1WYlVMoYkbq3/UPaSlbrwwgdb1Y4SYytctf5/
qe9l7dt6UGUN8YWXssLklXdUnkcjdaqsCa54neU/5GwNop1LjSjnVJMxIXlt
Y/hq/3Ufssdg9dn6hBbfyD3tmuaFM4VzvuDY15wSH6D4ddfvvhg3wsPtNfa3
PqkNrZdCuM3KM1zpr1Ve2LElWoCMuT1vgdQ7Ut/t/e142tggvIuM5xUnlsOQ
MSTnMJd/JA4LxybjQ+bReheEu5Lnl1dxUrjEShO90Ib2/QiE89j7rPSXzQUy
hi90md1vSWpu6dcn92q+0LNEr1k/kHBdgnV2bMuaVPGmiE9l35li46HwWOu/
kTixtcD6QoVnljplx614L+W3Vhq21OviM1j+uTpbm8Rw2b9XdKWt3RYTVhhy
4T/BulX9smfurbjK9Vu2DcVPW+U7uQ/RemXt3o7Vi76Tdhass9iywmGCP6v6
QuKZYCa5J+Glq/pO2r/y0wgelrMmLD5bPCz7eK0/U/C/+EUlj1YY/mKd18Zb
qYPFX1p5aK//vdYgNqfKXgXCyVf7Rcu+ZTIvqzEvc1Tuab2dr9dYb6T4CeWz
9WdKXlifqsRb8S5Wep+sZZA6a892WJ1tVfDTchjb93JOVOEh1t8jny1Wk3c5
vfbQyrs7bT6u9IX1B8g1hIes1qkJ1yr8/7VXQDQU0U2vn5+1fS8+D+n7139l
HfOTe02tF0TW+u04FBxYYdGF86QvpBaU99qUml7wpNQp236r0a722DWRwsHs
WobtS9GqK+1s4/m1rn+tHa622bMyVnu/V16B5UikFqy8ryt3Vn4RuSepm6tn
oAh2FT+H6CyCP5aH23+llpHxKe8bteNjY7ucY1Z8frumYO9j9ULxYV7oBXJ/
wr2Jh1bG/4XeKWNI5pf0t+yDJbn8rbyIUo/IeSZF75MxJ+tiVvcR3LB5Snx+
Ej+W35KaYuOK8KgX80vav1rrLx5RwZYfApZaTvWivq9qJYmf63vrC9nzxIpW
tXi4qqErrlKw68Lzi5euvJTV2qKd03J94X52z4mNbTKnq/WvEsMlB8v1r7H0
tWYp42Pj3Go04qWQv7XfE35ueThpw6qG/hCuJ/0t591d40PW3exzx6WGvtbR
hBvbGnrNEcnBlaaza5fFhyGcecX9XtQaO6ckfopPRfwcEqul1ttxIPFMxpxg
YJn31brG6j6kXtvfXeHbC575Yo7+f2mzxZPXZybbnCLekd1zaOO51Brih9j2
vOAnK9woOv3qV6nFtp3Ej12dV1lqU+EG1tcqvGjVl8IZXtRcqx8/2eYXdeQF
/pQ9JIWTvOA2pJ6Wc0I+2XeCjeW3yP2t1/Ri7y7ZA/aiVlq+UWLPnstXdP31
tz+EWrniJ+T7F/X9Rb1Y4c/F1UlO2X3Un+wvqYmr56dK/So5VWKPXH/FAHmO
ycYVqRekPSQOScys3o9D7n/13XrFV99XNe7Fv5W2LThguZDVuaQu23ph8ceu
d69q36oOWr/L3tPi/0rfEQ5stWpZg155oRZjiya178W7rrlys/iZpC/kdy0H
IH1cvTOu7Ie32vNb4QyJn2t+X/PkwglLe8o1V8wT3Cu1j3jIlp+Q61+vYRXe
VTizbb/d51De10DWqkq+kPklGF7O8Ld1lvBPyyUuDCd5TbSn9RwKzhS8te8k
Kprd6pGCLaW2Fl1m89HWaxuTxSd/wZ8JBlov2npQJO8+ufZnc7bMhd1TQb63
NYvoHYKx9pn6cq6yjRnr4VtMuPprtXnxK2xtJTXxNbexvPdFfr1YH7f3IXWk
eGskblecrdQ1G+ersbJ5bdeyy1yUNYISGwQbiW9G1m6IriFtIJ6JzTXLx8q8
lD0Sts5arF7xT+urFG5fOKFtv613FnsLXpGYL+eC2nn5VnvFCTezeVfOFrD1
60WcvNBBL7S/5eqFm9nPBTOtviaep62tK11MxrNoH4vDZBxIGyzWFf1Y3vdK
+mLftXHViMJnVnze1tmCXQWTSd0n+EDisIx/GU8bkysceDEOq3gg3680fslH
Mr8EG1/Enp0L+85ly4tW+GDvY89eJu23Z48UzCyY/MlcsDztmqOSUzY2yDUX
x7i+LzhMYrLURIurhRtc7S/jUHj167woGvbiliT2Xuvf65qyR65o0lJTiI4r
+vrK0xf1muSmxdLiV5DviR5faViLgWT99xrPoj0tX3rB/1deVsllq31W3oLN
C6v17HwRvWD3b6+wxWLdC89npdHIuRlkvsp+7IJvq1wrcbtaryl6f8XzSc2y
XMLuCyJ8ydYRwr2tl1V0RNH7r+uO1VPEP7FawGrnopWs13G1/8LD1XO7pYaW
Z2Es5yH8kPDhVa0kf0tqH8EiG3u2Jtr+/j0jnLHD
         "], {{0, 128}, {128, 0}}, {
         0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "106204901720869169245"}],
      ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.039304424077272415`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.9606955647468567`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzN3E/r/f82xvETkTpzhRFhqlBmv1/KyPCYq6MI/YooUgYmZjKRhKFi4ga4
AWZuiNwLlPQ1WPV4dr32cQbf0/7t9ue9X3/WutZ1XWvt85O/8Xvf+a0f+Na3
vvWHP/Jf//Od7/7xL//BH3z3T37th//7P37zu9/8ws9/84P/9fLP/ufff7/+
zg/94lf/+BM/+/Xf/uh/fPXl69/5y7/66tvf/MzXv/pzP/719fr6W3m9PP/6
jDzze/m6rln28uo8lzute/nEMz99L6/O6tUe63o+sfdX5/Mq3j7xzFdx9Ykz
fIW9X77++3/9+uu/+aN//urf/uFP/88z/+Lff+rr3/31v/7qn/7897++Xl/P
+XKdy/Ov76rP+TTOL3v5xOdfna3EiXxeXi/3e931q7h6td/6XZ+461f3vpyh
nE89w/rMBUMWbFzuXfZbsevv/vbH/vff9b3ymWVfsjb59ys//VNf/9I3v/3V
N//y7e+pLpA6WO/i02u+zq3i/HUXXz7ny+df33Xd3XUmtb58+XyJH9nX9b6s
Qdb2/XDvdV+yR/lMPWf5zBVjX2LRtQZ5ptTE65yveLs+84rzX7H35V6+/LzU
CMkvOYfKJa6/vWr3wvMXfrtwtmXNFVfrc654u3Lkel+w6zpbyXF5/8Ir2df1
mSsXrs9c6/zEvdc7unJ8ie3rnOVe6j0KRgkHvj4v+FnPcPG1av4K1gn3lju9
cnnxu64zr7qg3qPwWMllORPRIxKT1/OF9wq3rLXvqkHXOuWuLxyQ+Kz5WGuH
fF5ieFmz5H7F8+seRScuXtOFz0vNFV0vPFAwX7RJvSM5ZzlPqZXVD1n81eqJ
CV8VTrJ4dxf+Vz9BzlzWcMWncAbRX9fnBUPkmRePrby04vMVG5/ge3KntR6J
Hq+aV85z4auipwQbZW3iL113KngrXPFav2DdwouuuBUsrX7mK29ZegfX8xee
dn3X9fzqf0q9lrom66mvr/ut3m/Va/Wcq6YT3BYOKfWoekqVCwkfllyo+Cx6
U/BN4nDxneR7X/XxpdZU/i/8QXJT7rT2Zxc+fz2n6izRIxVXl7uo3E/6YtUP
rBxv0dfVR5X7kr1XHK46SDBqwV75W+mD1Hir/q3kQq2VVXeIP1m9GtH+38s6
JXpE4qd6gKK7r78V7fBqznbhxsIzrxiumCk8c+F+ogHFM5G+sOy91uiLb9T7
qvpOcLjq02VOWHJ/WWf1OaXW1DXX3rrU7pprS70WHKh1SnJK7lTq/nUOlefL
jM11VjUXRDdVnL/WL2u+zrnyDdF61/sXTl4YK3n6ibi69iKzK3Lvgv/V6xNO
K2u+zrzm/qveU71TOQf5ruqTCObLa9ECcj6LP1N1h/QIFq0hfqnMuktdqF6Q
YILgf/XuBEuveFg8oqWPU9cp3GbxHmWWSe5UzqHusXpxr3K2zurIvQhPEw1S
+eonuG7lHuIpCVdfNEg9k6W+CM7U2rd4EbW+V64ivF3iR7BFPCtZz9LrXDBE
vKDqT4r3XrnitR455+p7115ArXHCAaQOir8qcSX4Kfj2Cb+69nEWPVV7fItu
/YR+FC5auZPEYfVkqkckmmXR1OIHVq1x1feF19WaK/myzGXVeYALryrnkdn+
iocVby8sXfhS9SGX3mLFn6p3RFNc5yYaUzSC7LfqetERkhdLHaw1Wrxr4b2L
X3StWTyKWvsEu+Suq/clvF3wX3BJ4kF6K8JnFq9Y4rDynOprVT4jenDJwdqL
qb0w4U7X+qWuVe0svmitWcLH5H3xpauWrPVx6fvXtVXtL3usPalaH6s/Jnph
0V+yBtFHgrHiVwifkfMXjicap8Zh1ebXOQt+1tond1rvQnJHvrfW3Nq/kHr6
yo+tzxFfqGpemXWvnnydEZI7XTRy5XWyF/GXhMtVH6DymRr/wiWEH9a6Uz1G
6UmJJhLtUGuu8AqpR5VbLjqlxk+9x4p7yx4Xzb74UVWn13oh5yB8QLCxet11
RmjxTAT3rjy67uKqifJ8ibdlvkXOufbfBZ+X3ywID1zqQuUV9f1a6yvmyzOl
zn6i11C5vXAk8Qw/gbfVW75yXHSKeKTin1d9Xd+Xfo3k76vzl3upXLdyjNpj
fRVvddZF+PwnPE/B/1pzqzfy6nXtdUo8VH5b9YKcleDV4sPUe6z+ZJ3fkN6T
zCpcZ1J9LXm+1JpaXy48EV4hXKLOUy3nX/tH1/fWu6vzAOKTVK0t/Pz6TNUR
C6+oXLr6lsLB5PUn+uxX3NYYrv1E8VWqvqt+iMSqcCrxFiovWmZcJTYW3rs8
v3LRRXPJbEaN8+rH1u8SHKu6pvrz4q0JJi/6sebOhTP17mRt4qtXTSrvC1YL
b6w9EVlD9W1qjRBvsGrw2o+rHEbysXKn+luJ6/zlLipXqbWv+uqVT1YdIdhb
tXblzJJTr9YguSDvi59fZ6IE6yqvq9pB3q+9levu6n4rh7wwts7VCKaJhyO6
SfZYsVrOXDT+0n+p8Sw8TTyfWq9F80pMSmwvnKTO1y2c8DqfmiM1tkXjiD8m
/dZX+VU9qMoTBN+qNyK8tHoRy/ksPSbRwku/svIT4a5ynjWPJJc/7QlUbSiv
r70I3l6aovqo4oNJfF7rufw34RuvfK2as1WPLHVB6qN4qlKLF/9K8HbJ06WO
SzxU7KqvZT3XZ4S/La9FI7yqEVKvKzdYcLV6AksP9Hr+xd8+sS+pC9WDujC8
/qZMtI/wXnlf6nv1WyrfFt9SfDDB56tOveJI8pz6XcsdicasXq54pFW7VX9A
crP+lrbiea0R1XuXz9ffXAvmVE2xaL36G+dlX1dcSQyL1hNNvcwYC49dfjN4
naFwuVe9j+rDSHzKvFPVVrUWyFlVDBRsr5xE9iL8s9YpqeO1vtQ69YnXktdL
P/d6fd179Z1e3WntU1z5Incn+St4vvSM6vxk9Vdf+RhyRxee1Lmj2vuo2Ch1
Qby1ymeEq8s9ijYRL+X6vPDk6n2Jrpccr/pO7q7mbNU4gkWXFpZ4q7VYYr72
K+udLj5bXU+NSTnPpfZV/JFcqH12yanrffn/Cqh1U75r6UMtHKb2zcWXW2q6
8BnBmdqDqzpU4rD2asUTWDBBdIFoQ3mm8CXx+SsPkfiX+RbBz+qriA8m+VI1
RdVl8vlFCwvm1NpdOVXFrsobpS7Uc1v6zsKZ5bXc48L9hE/W3pB4C4seFP5Z
55fqXJ9opTqrI2uo+HPVheq1Vk1d5w2kf1fjuc4CCR+uPeh6R5XzVJ114ZV4
R7VOLfqlYqOsR55/nXmNz+pj19+iVj9WMKrGcL2La/2VH9Y4ecXzRWtI/Avm
1GdeOF9z8Hqm+OFSv4RD1v6jxKT4xnU+cMm7WpsWrV0xWfC8clq5I9GntR5J
3gkOXJ+v3lH18KsHW3FPePvSX65YUWc5Xs2rSwzXWi/nWfsCVfMKV681/VUu
LL2eyk+EE1419DrDqvtecUvJtQu76ozrdVaLP1nr6VVbxduRuBKfbfGiX9VE
4SpSH+UMKzaKF121wKs5LqkX9XX1Daq3IGdb+c8V53UWvdZcyc0F2696JD7D
kkdyhlUT1Zi/9iXz/9c/mS+9zudVf1OeX/VIrV+Sj9f9Vk0h+7r2WHla7ctc
3yva9npfcEP0i7y/aGHhinKnlWvJegQPpde8nNVSuyUmr71UH6NqHHmO4LbE
iXAVObelltVaI7qvPlNi++oxSZ2qZ1uxuvY1JAYqj5U4F+yVWlOxZTnD2ssQ
zS4cSbyX66yWXqRgo/jAcp61d1Z1XI150Rp1Dlb8ZMkj0cvC2YSvVo4nnxfu
UdcmMVyfWbmHzH8KJledVXl+xfzlTKQuC4cU/JEcrDyzYpqcc83rqxaIbyN7
qTMJFRsr1132+EpfV31aa6jEwzKDIZ+vnFN81+X3X/U8LxxYfNTFh6m/lxHd
Wtd58aWlf1rnAKv/KXup/SzxyhZ/oHLFxZ98tXfJU8FSwZmKnwveVjyUO6r9
r9prk3sUXrRgqcR8nXtZ8l3uvcZe1chVL4hOr/P/n8Cx6+7k81VH1N7u9ZxX
cxe113ntsdbrmgsyb7DondoTqWde/7bOnCyaV8550bCCk7Uvv2D4MotV8Vnq
Vz1DqU3XM5ffOdbaUf0Q2ZfUvqXfUTlDxUy53yuX6x7l/KvOlXyU5y+8bpkx
kHyvPvbyevGvRPtXf6D2wq69LDxE4meZZ6tY/aomVs1Yue4rLfDKN6gcRnRW
rcvimVR8kHUKh6kxUOcVq8+88C7BhxpvyxrknKt3VHWEaIpaHy/cu+Kk6q+q
kaVWSg0V3bf0UK4a8QmvaeGWi6ddvQLhdVITq3exePiyhgvnFwyvmnrpNy1n
JXElOlH2XnXxFW8yMyaYKecv9VH4Ro0xwaKq6yX+KxeVXBNeXed/rvMRTlJj
rNZQwSKJmcpXX+Gk3OnyOyNZ53XO9Xd8kjvCjetZyfnX39NJPapxW89B+FKd
O618qfaAqqdX/THhAOKZVAyXGlH7gJ+YtZN5D+H/on1k/VVPXbVbasqVmzVO
RN8tfYqKFa9qnOTgwhkkT6/PCMbWWSPxACsm1B5lfb6c7TJvUP2rpUcjPnCN
yeqBV+4nz6leRK19ovVk3qP6PLWWye8gqmdb5wcu/ikxI/iw+GYVS6WWSY0T
rPtEv6zOjlbsqvkitVXiU7D3ursFM2W/wp8lrq7Piy5YZu1qz67eb/XKpPda
fWx5v85WSZ2SunC9L/gj8S+eksSG5J34JLV/KvG8zI9JLEneyd/WuK3YKHWh
4pX4JFdeXH8r9eLKI+nZiU5ZZofEs6p9pbpHiefKz8X/qd6m1Ka6ftGbEvMV
l4QzS74sGqHqaMFS0RHyvtRo+duqhQVXhbOJFpDX19kKpsnf1v6R5LXkl+B/
fS28qPq0tU5J7f4EV6n6vcbPtXfpC9deavW+6pyJ7EXOc5lh+MQ8xqtaJmcl
fprUX/Ec5PUrX6jOlVXfWGJS/Mz6r3qDlT9IrXzVF6j9fcH8629Ff9UaJLpG
8H/hMHWeZ9F6S5+rzh8KPxQtWT2Tui+J86rplvpY81Ty4sIc+dvqT1ZMuNZQ
n1Nj8oo3iTE5H8H8T+SR8MZaHxdOKJ5M7asKbi96U3KtzuBJXa7+UtVNco+C
gYJR1V8SfK6eSe3T1VitXmL1o+QcpE7Jv6ovau9VOE+ts9L3qfgm/RHxCWu9
q3lUuVnlOYK3dS6rem5y/oJpkr9LL6b6vdJrq/pXasFSTyvXkjol3kjtx4nP
WT2WZe6ragSJzwsbq7dc80juV3yM2gtbcqHigOSOeERVk9Y8XWbwpKdZfcXK
Aao/fD2zegI1noUrSo5f5yBYWrH3ul/hHhJ7V6xWn1b4jPS/hK9+P7+uvk2N
Dcl9ic/aM7q+V9a/7Ff6ETWnXnGJGg/y/Mrlar0TLlG9TalBC1eXmKwekcRz
rS9SL6r/UPVj5RJyL4tWqnqk1t+q6V69vtZQPYeFOy0+ofjzErdLj3g5/ytm
JN4qhsv5yNnWPovo6xo/V2zUGTPBkysXREeInhIuUfNI/LRaL+pdLDEg9yXc
TJ4pXEL453W2lR9KfNbXgv81N8Wvrjl+xWHVCBLD9bXk1xWTNe9qrRRO8qqX
J1668Ocab3Ueo+r9KxcqJlTPpM6ByBlWH77OFdTcrF70tZcan3JfkuOvdPcS
J7XXJtxSasd15hduCJ5UbSvnJv6DaEnBB9FNMj8sebHsXTRO5U5VD8q+qj9w
3YX4MPU8L10g2kfivNZriTHxXRcutDzn4ioy21P7+wsvqrVbXotuWri0fF74
2+KJXf/k3OTMlzmoOqMiOf7KO6o5VX3Xyj8rx3ils2RtgqvL3JrgzJXXUi8W
/JRnCjdYNMiruak6WyL3dfE9wcklTy/cFjyvfmP1lyr+176J1Fnh+ZIXtS8p
8VwxtvpL1cN5tf7rOXWWrOKexNj1/Oq5LbNbled8wvuqOr36DBWvFh+4+roy
UyHPr3pQ7qLe3eKHi58ma5N7qX12qctV19Q7XWZURC8s9VSev2gW+VvBh0Wn
y93JnVZuUM+8+mZSX4TzvPJbqsZfPGGpBVIHJU6W+cNlBkxmb6q3U30b0WXy
zIqfy2dqvki+13n76mMvGlb4p2C11KxF+y9aqXJyuWvp6VTNu/S+rzORuxAO
KTyq+mCVK9a4rRi+cIDrzKvmlfuqZyV9Z9FiwluqHhRMq77oUl9qT1CwWvCk
+iGCyZWziRar3ytxsng7gr2SU/K3tTa96ndc2Ct+XfUwq19U+bbk7KuZDdmX
8LH6mcozr3XK+Qje1t5K1eC1vl+fEc+q9rIlDqt3JLkv9Ui4ZdUjdS5L4k00
XeW99Y5Ez77ypmRtguEL/lcuscz8fC/1kfA9wX/Rs8u8q+Bt5RuCOddnJB6W
s5U1f6L3XeO/znVUn1b8jWXWTjyiysEEP6vurr6ExNJSC6qGkrUJDotOF/5Z
MVBq3Ku+QOXP8nzhpXI+og3FI6o9her3Ct5W/ll11nWGS/2tXLT6D7WOX9h7
xWr10y58rvVOcEn+VmLyuq+K89XPlPta+rwSY1XLL/551fJS66ufI+9XXJX5
n4qftZchvEueKXupeC53ffHDa81Lvsv5S2wvel/2Xv2lZYZN8F889uqVST2S
f1LvZAZm8Zeqj1E9nJpfC6+rvmj1W8Q3WGJb9GPVa1KvRRcsvQbBseo5Cz4s
XqXwAdFNNZbE61jyV3iCxHCdr679d9FE1ZOUM5e1Sd988VEXzLzqi/RWFs9c
+sjy+VqzhIdcd7fkheSL5Lvc7yteLR6mxKGcZ8UKuUfxzSSnBM+l5gpPljol
3rjco3DdV3Mdwqlkj6KLK4epc4BV6133W3VE5SriJ0jeSV6IrnlVL+pv9K41
vNIywmeWGl15cvVsL0wQvVnj+aoL0k+s3qnwSYnVRQssOVj91Vp/K/5Uv6ti
V/UHJNfE83nlKdUclzytcx0S57UmVn0tXEh8SOEn4kWIl/iq1yA9oOoDLP5V
rePVM5HaUXsuEldX7RD/QWpN5brVBxY8kc9c+VLncK5nVh+gcuBaT6VGCN8T
rKg+Z61B1cMUH6lqHInt6x4FMwXDBQPlXiRnq6f3SsNeuVnxv/Z9qk8oWvu6
xwsrhNtc57nkWp2fWdYmWqz2pIRjL7yr8jqpO8KF5ByEn1xrEG+59iDEb6mc
VvYr3q/gSf1djMSzaJ/aExHdJ3ym1hH528UXqr60xJ7U5YqrVQvI/dY4kbsW
HLviWbic3J1g+HVWFQOlLi8cssatxJXsSzRRXY/Em/RwBWcE/yV+arwt87eL
rpdav2D1wk8q/xR+svRe5bsqD6/+v9zRJ3hjxfPag6u4tPirovWEU1WtV9cj
PHbxhZYaKntferXLXpbYvnBeOFKtKRX/qwd73ZHsUTSaYKbUzapDxRu57uVa
f8VwqR3VE649KcHP+pmK5/VOJS9e1dk6DyM93DprKjF2xYPUqRqrS6+keh2C
XZW71vsVzJT6LpxKcExiXu5R4kdqvdQd6fFdulXybtF91ecUDBF/rM5C1Dis
PnydoZIzr/2R6uVWH0lqotSdylerR7S8L3G1nKfoo4r5om3FI7o+I2sQrli9
WcmX6lu+8lGlNi0+v9SUql8ErwS7ap93mVtb+uALJ6w1RfKuzmZUDK8zJLU2
1TgXv6LyeYm9qj2rP1b9yVoXqgaR9QgOXJhT+bB4d9JXeqVV5fyrBq/1Ynkt
XKh6aEu/41qD5GbF2Fr3rzi/Ym/xOipGLX2Za/1Vi9We/qKvhTcuMblwyOuZ
yx4XLSBxXn0AyYVXHKzyq8VTqvx/4fYVS4VXC9+QfrHggNT9mgvV3xO/sc6c
SC2uuV85njyz+nJL379iiORg1SNSuy+8qv5zrXHXXq68+ERfXrxu2a/U5TqX
Xu+x+j91jwtmLj1ribGKLXV2WuJKeuJ1ZqDWC5mREI4n9e7CzNovW7BLYnXp
ZVe/seaL5E7laXXWTmq0aMYaz6/2Jdh+PWeZN6i1oM6iX2uuWLrgqvhgEgO1
TtV4kHoq2q3qL/kuweTqyVw1pcZz5WmL1qu9QqmzrzzAhc9c51nnZOpsUvXJ
q4a9Yqxykuq/Sa2s+lFmjZb8lVoj/VbZ19L/lZmKmqdSH6U2SWwLTlYfTLyR
eqf1OaLLKq5WjK159Mqfv/Yo8S/8QfDnulPhabWe1hpdeWCtp5JTwlvqvOjl
k1SdLq9r3tW6cN3LMiOxcFTx2a47reu8clb8AYlDqY/XGsTDrNgl+6o86oo9
uVOJGcGK6ttUf17O+YpD0ZtL3Rd8uGJV4nPx38RbqHW89k+rpySeqtTBV3PC
Equyx+qfV4+05vIV/1Wni6+yxIx41BXbhfPU+lW11VIrq3YQzBcespx5xZaq
NST+q26q65feTcUZ4cm15sra5DkyO7H489VLrF6E+B61d1P9c8EBuS/RVnKn
1WO5+Kf8u+qRnLPEreBG1QiCb7Jm4ZBLHZG6WXNc9rXgtpxP5X6S14LJUhOF
29fYqHphqXeSO/Icqb+vZiRe8fPaHxFPXupg7ZtXT6/GhtQF8dVrL6x6TfKc
63xqr2fhlrJ+4QASA8v9SpxUHSFet/S/rvOpnoDwnBpjwuWuO6096NpfqF5u
9ceq9yWxUet11QjyO6Y6GyPeoPAlWc/ioQkeyhrEl6ue0sJnhCdLntaYFNyu
PGTRkpLXNU4qhtQ11x5u9Weu+639r5qP1fut/smFaVWTVi9uyZF6Pstvc6SP
VrlfxTHxcBbvq/Yxqy9X9VfVdK9yv2JpjdWav9VPq7FdOaTotar3JeaXNdf4
rF7f8vugeo8XDlRfuvKl6tsIzxc+9oonX7Wg9osrVtR7l5pV9y692upvCBe6
6rvowZqzgvl1Brhq/Kr35Uyuz4jWeMU36j3KZ5YesdSIZXa38mGpZcvvBQQP
xQeonv/1nGX98hk5W8F5ieH6+2LpQYjWqPdbc0S4mZxh5T+vPi85VfFHerWC
XdJrXriQaJbrfqXWiCcpdURqqOS1+BXX54WnXd8r65ScWv62aoGKRVK7RWeJ
91vzQnK56g7J9+szFavlrGqdrb6ocIzKi+ScF2+w8nzBZ8HJ6vXJ68ULrX18
OWfhP3IX1R+ovE5mzARPhG8I3xOcXP5Vz0qwV2JJ4l/uq+ZC7anJdy1xuMT/
gufieVZdILX4WmedZ6j9MumrvvLQai2WvQunqv68YLVwy1feSO3FXOu54rnq
msrVBf/ljup3Vf4g+kvWWWNG/KsaA1UvVByun69xKL3IOhd6xaHw0oqf1zOl
/tbfRMsars9fsS13Vz3bivNS7y4OIHxA8kL2Ilgh3ojUkdp7rX1S0TjSo5G4
qnxVvHqpNXL+Ut8XnrBoZ8E3+Xfljvxtva/qnwgO155U5RJXjFW+tOSvYOyi
E+VshYdLvVswuWpMyZca8xUf6kzR4i2/imGJt+uupacmXKhq9oXjyV3Uuayq
7yqPrecgHKli1NLPFWypPFzyceEbsh7hPDU2qua6tFLFoit+rjNf6v7iNUn+
SjwLRgmveOUVyH1dz7yeI1gtn6l/K+uvZ1uxUfBWclz2XrVP5WNXLasxJpqx
ztEJTxA8qbhRa9miceSuKy690lD1ORUrlt6KfK/UoDrDWWf5qhaoHqy8lr18
wltbXi99q8WXXuqC6Oha+2osVT+tctrqvy0eVJ3Tq/poieFaX2ovWzBf9ivn
/KovI3+7YKbk2hXby+8aqh6Uul91RH1d55pEv0g8LBgo/KT2hmrfXPhY9aau
3Ly+V/R79cBrb27xdqoXJ7H6qqbXOl55y8LDa++16o7rOcu9V09e+pg1zkU7
C7bUmXapBZWvitauvEu8XIn5hdvI3iumCVZc+xWduPQFhHdVfvLK4xX8eaWX
69z4db+1vte8lvoicxfXWVXtJp6hxMASG3X+ZLlH2Zf8rdQ70ciLXyGzJYvW
rlyicozqn19rrnpcfpMidbbWo+rni28pPtL/F7cU/BSddeGY6HGpO7W+VK2x
cJgr5iWeRc/WzyyvxZ+p2CL4XD2lehevtJ5wdenj19qxeEfVuxMvTp4vvWPh
/NVXkbsWP6H62zXepO684pav6otwgCvml95NzaNr78IZ6neJ9yuxXc9tmbW4
4uqV///KlxN9VHWxvL/UtesulvVXLnR9XrSn4PnCwYRX13iu/qHEfF2nrK1q
kKqbJK4W70JypPoSos0X7n1xj4VjiL9x7WuZi6u+xCtdIF5BxRbh4VKnFv6/
6HHxCqqvfsVV5a6i2etcmeh90dHLHVWOXb3QRVPU2Ujh24JRUn/rXQj/eeUz
C24v+5J1Xlh9PbPGfOXJdb+v6pHkmuzxip/aR5DaXT0Qwb06iyLxVnly1Y8V
S+u5Lee8zOrUfuLi+8m/Oj+zzAyLJ1DPX3ST1KDFp62eZ9WSojuEY0g/Ts7w
whlZg+iyWi+qVlr8H3m/1pTqSVYf7/p89XnE15L7klogGvza47XmioeLDy/8
p+6l6gLhPxc+VG9c7nrx6iWeKycUPiMYuPSt6h3VHLnOv+5LsGvBzOt9yeUa
V6IpPj0vuuRIrREXhlzfK9xS+kQSb1W7VZyRPBIfeOkr1Tq+8H+ZZao4VuP8
wuE6b7D0Yq57Eb4qXFfuV86heh3i+VRfRbC3YsUyj1ef80obyrnJXdczr/Ff
e1gXDkg+iqdU66/wSakpkjsVqwVbXq1Zcqd+1+I5yOvq51QcXnRlxW05N8Fq
uTvhhMJtrn+ixeoMcOUV1Ter3EP4fMUH8ZFqn1pwXvZSvSZ5jnDpmoO1rlU/
VjSj5LLUsoVn1vpS56+E51QvQjBfOGHlXcL/he9d91V9PzmrBd/keyvHXrxK
8QmlRi/9lIUD1/6RfOYT/nztiwmOSW9avmvRfVL7rr2IV79gfuUPEgM1v659
VV2w4ICcZ/3NgtQI8aWrr7XkSK2/lVdIzEiMLfde50/q+YsWrnVZ/MNFRwjv
feXP1/ounpjsvWoB4eqvPBOpoaIvZC+varH4abXvVv1PqZviT1YutNy11BfR
CIL54pvJ+Sx6ZKkvglfVvxUcEB4isyILZgo+X/ciZyX1+hO+TcUNwfzqrdWe
S33+dS8LDlfesninlcNIz+Jam9QsqcuCY1eOLP3c2hcQXBL9XvVpzfHaZxG/
tHoClb/V3F/wudY18TCldtfek+gjyV/BAcm7qu/kTGQNlbfLd104X/WgfO8V
V3Xmp3IGeX/5jNxR9RglBytuS22VvVQOKXpBcL7qowVD5Exq3bnO/1UdqbxC
7rHmuPBDiQfJo+s5i46rnF96WFJ/hQNUrVd9P5l/EJ9B7uvC8Mpdr/3WmaVF
z1Y9de299oLFm6q4LXi16BfJ2esuKper9UVyXH4PeH3XMksj3PKKq9pXrXxe
4lBqxydmXKt2q/EmeF4958WDuvih5JToqeteKh4Kr675VXFvwY2quYTnLDMV
r7z95fnC9y68qrEt/nb1TKr/U/Xdta/6ewGpQTKXJecmNaLGv+S4YOlS46TW
S72uWn7hn3KnNU+XGK6zLtUnqWcl9aKeieiaGs91xka4yhUny+t6tksuX39b
/ZYaz8v3LtpHzq3+tqLyh1pbr3+yNol/0Z5SxyUOF/9c7u5VP7T6NsKrlzhc
fNGL70kNFV1ZPTSJSYlz8aaWunzFnqyz9tpEC7+KsZo7r7zT2mtb+omVe9f+
/vVM4RKinS+dUnuLFYcrRxX+KbXmOsNFFwiGVA9N4uTC20XvV6+p5rXcaeUG
r/oglTvJXcg6LxxedHfNC8GfiicSh/X5gm8VS+vZVp+/+orXmVw5KL8ZlFp8
raGej/R5Zc2Sd/JaOKfkacUKwbGqf4UbX3giuVY9GfE5pXbLvsSrFFxdvGvh
eFITxeOV+615XTVvjR/JBflX+0T1d9/1fF7NzdYe2VL76meqTyJ7FE++evXC
mRc9u/SCq+8kGFhxtfYyZP5f6nWdAxEvomqr6tXXe6yepPCTRf/KM+VeLiyt
PaPq01ZOvnjg1/MFxxbfXrSk4NX1/KU3WnG+Yr5w6eo/Vz9EMKH29Ks2v9Yp
uFprSp1tkFog+SsejqxZ9LV43cLTqj9WZ64qNlYeUnWB4J7k7DI7t3BIwSLR
MtIjWH4TVL2pVxq8zhZWvJK4ve6u6twr9qrHIn9bez3CFRdtXvWL4OfiodXe
kNydxHPlYFe8iV9UObngp+CPaORXvEVyvPoSUqOrN1IxUHJ2wedX65d+scwP
V9+gxkPVCxVPxK+uOrpq7aXHtPSDFsxZ9lj99iseREfXnF10etVii1cp91Vr
ep3/rNxbcr/6XdLXE05edaXgQ+WNcraV91YPSvhMxaLFc67xULWwnGeN+Tqb
tGDj9Xz5jafEs2hYOUOJ5+rb1z7LwkuFYy+cSu5iiU/BJeHelQuJXpD1iGYR
bSiesPCfT+Ts4uXKvdQ8lXNbvGL5DYjEmOgjwbE6N3idW9V0MhNee/3yGfFA
ap2tPEQ8Q+Gx1zlXXlr9H6lN4vPImuvsUNULggmLDyBebvXrRDdJXaj3Xmu9
5Piij+rd1bOt/Er6nsJPBDPrvmpNqdxDeoJSc0WTVt9D7vqVZql+78IVJd4E
Z4SHCIeR/uyCe684tsRkjSXxfuW1YHLt4V5nVb+rrqf2uJc1iN6sXEj4s8Te
onkFN2Tv9UxqjAlXr7pPOEytX4K9kteVY4juqPqi8oTKo2rv9cqROrMn9yj9
C7kjweoaM7Jm8QZF51aNVnmLnJvEgHgsi7csZyg5+Mo7FQyvOv06t8rxql9R
+03L7JZoBMHb60wqLxI8FK+v8pDK58VXEU9GcqqeueB29Q/FH6g4UHmC1AI5
E1n/xankfqsGqb7idW6CUcJJXs0ACMeomFxrhOT7ogVqDNTcl++quV/3W3Vi
nWG+YuMVN6j7qj2OqhOrVy+YXGtl1VOVC0mcVx0kufwKB6ruvuK2evKC23Ke
suZXnn/NqcUbF70jWnX5nanwhMqf5flyR6IpBJ8F82XGps4/CE8QPlBj+zpn
0UTCyUW/L7MflZNf91XrSD3z6h9WL0VeXzV66f/K+Qtvl5770puo/F/urnoy
Fy7VeYMae3JWVQcJVxRtK/VC/vZav+S4+MzVM1n0keh94fa1h1j9NKlTUq9F
y1ePqM6lLL5c1Ym1xgmHqb9rkNgWzLzw+Xp+5Y2V+8ld1z1WjXDdnXh3EpPS
mxb8r/cofLjOatbXkqcX91j079KbqLMEr+bYq/8vNX3xaq47Ep1+xX/t3Vyx
IX7Rok2kdoteFo25eBHV/695ca1TdEGdCxWcr3PygtWi6YRjSK0RXlT1ab1T
4Z8y2yl8RvJa1iN7r/NIr7jK4q9WTS2xJ/0O4TZVj9QzqRy78gqZq6m/L6jY
IndU+yM1bkWbVM4s9161qjxT+JicrZy5+KXCT0T7y16kR3OtUzBZ8F+eKfy5
9jpf5cIrfVd9p8Xbr7pS+J7wyar95Rxq/110h9SL2geXHFlqdJ0FFc9TuKjg
8ytfunrd8l1S0xe/utaOqk8XL6jW2dqzrjykegiLHyu+0HIXn8Dw5fcOtQ5W
PiCxd51JxYqqWyvnXHoBNVZFX1znKf5qjQHhXZ/QvNUzkTouuVz72oteFm5Q
ex9VX0jML72k69+CV9V3FX71Cb4hexcMv+5r8ZmvXLueLzhf+yZSU0RXVt4u
MSaxXWd0a1/mFZ5/gjuJDyCaV2YaRd8Jd621RuaTKyZUr6Pig/jtktcVD6+c
rb2/pW8ieLL0QCvvrb9DES66cDbJ99qfktlXifmqHZZ5mxoDUpuuuBVeJz07
WafsvdYpeWa9R8m1C+eFxy7cSe5R6p3Mc177Eu/6lbdcOZvs/RUnr71jwed6
zqJrqodWuW6dwxHMEc55nUnlNqIv5Kyqd7f0fxd9Jz2C67v+Ezj648s=
         "], {{0, 
         128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "12255387586435585434"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.019685935229063034`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.9803140163421631`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzNnb+qft1VhYNCiKWFoJ3BO1DByvzQC7BILKyEKP4popJYiNgEUXvBxlyB
jZJS8BoE9XKsTEDhWEx4Hp6xDim+8Obwfvtde605xxxjzLn39/Xf+7Nv/uFP
feUrX/nzr/3of7757b/4je9979t/+a2v/vj//MG3v/Mrv/ydn/7Rx+//7z8/
/vyff/SLX/7rB3/65a//5off+Pj5hz/781/+/l+/9uWf/vZ3vnz8bL9Drr/6
Xbsecv0X91J+1957+V27D6/XWeLEnt3rWH1xLy/ic5Xjr/P6RSy92LfP3HPy
/R/84y98+b9/Xly//NYLzF+tmdzLi1y+rvNvf/e7v/7bf/Xv3/jj3/zvb3z8
vNqfj/d7/bNa5+rsXsfki5qyOgt7LtcZvTiXnwScfLHOK7bt54Lh5J/rt37t
61/98iff/daX3//V3/p/37HXL2dX4pbsj8XJcu7l7K79v87LrvNaw/Xvfvyt
6zP5d+13yNnZnFqdb8Hekkcv9tNiBTmXFTcoOPlinQSLLiz9+Pn6znV2BLft
fpI1X9ckMfZxrwg2rnKq7BtZs807krNkz0ndJH+3uEfw//r8cQ2ldnxcz/f/
4Ze+8S///DNf/uO7P3fmFOEJ5HxJnpa9Khhur7nK/VX9tXtoz7qsk+AViYeP
sXpd5+N3rti257LiPNd67BpIrK5yh3wm1yy1+8WaX3DRwsc+3he5PsFt8ney
HoIhlueQXC5rI3FI8IHgQOGHhbuSz3Zvy/pXdfz6fJ0X4SHXdSyeWJ58fb7q
lI3V1d5ePPPCRnLu5B5XuX+t+QUXXfHAKw4tF7q+c+2trTWkBlmeTGKD3Fep
fVcNIvdlP1teStawqhHkmrZWrjjGFauE95bzJXl0rafgNrnmij8XbkDWfO35
SqsSbkDWT+KkxL+9r3J9wiUsfyueOfn+tf8E0ywnJPH52rcp/Ln4UaReWF5n
ORvBHNuvLHlq97P0KYg2Idch9cjig+XwNkcKF7U4aes1qblWYxZebWt3qTu2
7q88RpJfpdaTf9dyyILVL/jzyqu39XTl8xQctrrbarrVrNcLDml7DSSnChZZ
jUPwnOQjyWX7W4Wnre6d3KPlGNZnIPFs77fk+0ofvajLlp8U/lx6c4QjfaZu
tbFRemqEk9i+nvVwyFlYT8/W3Ct/L8y5YtVio+3Xl5wtvhCJ7YIhNtdIjFk/
k+xP6d1bX6VocMvzyfotJyn+sMXSj2sg865E4xDMWdXHVV2zvN3qiDKjaPsU
ljMQ/mBrn+XM5NwLbyyfbR0pGEJwsvBbO/9TYszqZeKNkPi3upvk7GtOYnlp
4X62Hll/pvgMJM5t3NrnjFYayj67YfeEeDUr3fpar1nMtHqh4L/1PWxdszzW
6tYLY20dIZzB5qad47Lc47XGt5zkihnL1Qv/sfWa+IGrWVDbR7Y8yvohdv0l
Jq8aUdZMtHnZz+JnrryLVd1Z1Tt7j4SHEP1o+4Ol9pX6+KKuFe1v/bTCkwmW
WkwmZ7fyFV+fEbnmtbbyrBbRRwSHL/5v/ZAyM1zmXuweFm1Yvl90Srkvsrel
R2D90tLTtP0XoguKFivax/rYBN9We0u8IIKBZGbM4swLPLQ9FxL/Ni/svRdN
ZLUG8SrtXpF4XvknK17xoqdJ9oT8nWAaOaMXsx82NkhNJ7H6omd3rYE8H108
hKterHwYsgZbNwtfKny7cBirW8lni2N2n23tXnE8cl7lnWDFxyi8ouxJ6VtZ
7Wmf7ytYTTDWatiC4cUDXPG0cn3LOUvuvHh2z2JR6bmsNA6JE4JX1/XJ+wHK
56s22d7HSlMTD4doPatJCdbZ5+uL9l/xkNVvWZ1eeJfdz8IxyDkW377ozRVX
vOKccP6CyUU3Ff/EcgPrLVh+Vepg4S0W50ve2T25rl/ek1kwweYmmeG3uGqf
IybeFHkGgdQ4e53iY9vnJkhcWT7zme+KsR6C/T7B+TLbX/LI7q2NJVtPV+8v
JfFsPdiSj0VHl3e52HwseG5jyc4rlll3O0Ni+6rXdV7oxOJ3ER616tcTHHvB
P0vttjFfapCdV1z1sMh92XfGlhrxWnevZkRtjpectR5v6esVn8T2CKwHTmq6
zReC4eVdE6Vm2Zki8iyP9WNtPJT6VfxJiy32uW/LM0n+vuDPxZ8pvO7KNeJ9
ld4HydmigyxPtvyHYIs9xxf+oeU8hQ+U9du4Jc8NET/nRc0i11/VmqIjLNcq
czuXP2l9bNtLsthIfvfFLIq95orXkedJLf4Tj3flfVn8tF466V8UzCf7vNK5
9jpWFxCctM9Z2721MVNmuopHt/JkrNYgXKtwktXzYjauCA8hfNs+4//CP7ex
TfbQzvsRjbDSoSt/zHpEK6264hukNhV9VN7HVTzV65oXlyv7bPkG8Z1ef3/l
QxJuucrHokNtbhZdY3P/NT5YXm3vpcxt2hpKvk9qt63XBWPteux/v6l4PlaD
X9+3eWT9NOvP2Jwi9WJVp0p9X5074brFty86+gXuWY1T/C6bU/aa5Z1gNmfL
da59sP/96MKjrEf92lcn67SasXgj5V5KHSG4TbSkxR/7/Iud87QcrOjQogeL
xrc4Se6l8KLrt6ynep2pXb/1Oa2XRWq61fhWXxc+RnKh+EXF47KeM9mrVX/Z
aijLf6xmJNqEzDAX7Cp7az0B0s8l/71ge75X77LEycozt/rC6nR7vyRmSt0k
vILEuX1WwnIn681armj5GMEo24MjeLXSj0XP2hlLUisJ/7/W8CJ3VnVq5e3Y
+LfvzLGedtGGqxphfQzrVxAuUWYzVrFX/CKb18VTtfyw+FS2jlvfYOWXWu/I
1nr7zF3p+dqaWzQC0dS2tlqfjTwbUrydwmNJzhLcs/luuVbxDC8cs56DjUnL
pcnvEi/I1jhS961/ZbHXzoZZ/U70rH3mlNR362EWL5HwqOIPWO5XZkLs/q8+
r+axLX+wmrrUI+LnWP5J6o59FsB6kkQDWkywPMp6PvZZGOsjWS1Z8pHUl4It
pE7ZXLMzvQSLCL+y3lHBwMIhrT9pPfaif0t9IZhv5w2sTrQ1tMyblfUTrURy
tszgWR+gXLPwecujSM6WPqz13Fbas5zLC95o82VVE1f+jMWrwvPJ/pM4XHGn
Uh+t11euaWs64fylr1R4QuF+qzMiWtty45XGKZ+Ln1ny2q7N6kd7LgU/7b0U
HLZ5TTiq7XOR3L/w5PW7y8p3CFcsMVY83hfc/kVf7OprkJkce46Wy5XcL/qU
xLzVOHZtK11vfVfCwQhWkF6J9RtX+FwwvPSVyPotrpI8tZra9vvKWdhadu1h
iTHyfatTSoxZL7f03C2fXHHRgtuFe9vZA4uNdmasvG/W8tsyv0rmLcme2Nyx
Gtz2uAk+XGsjMxjkLOz7kWwvjNRlO1tLYq/MHdm9Jb3CglHW81npNRu3Kw/2
hQYvszcWA+3zfbZWlhi2fpSNZ1JfSh0s3kvhSNYHsPdC+MxKc1ldT37L/rt2
lrtwD8uxLU6WPX8RkwUTiidAcKzMLVg8tPOrxC9aeUf2uSHr2RZPgGjbgmPE
z7F+9bUPFhOsbrLa32LOCvesj1cwqmjP0q8vOEn4ScGoz9x/Eoclzq3eKZhj
ebvFCuurW++I6HoSq+Q7Nm4ttpf5YYJFtg4Svf9CO5Be83V98tzf9Z0XOEx6
cMVzKLyFxOpn6jvyXKH1Ucv+25lPwkWJTiH4dtWFMttvcf7qQ1lv0GLyyrNa
aRCr94vmsvWl5CypC/a3SE6tfqvoGovDRe+TNa9ixp6vnfsq+1De3VGeHym4
QTR1wd6V/0kw1vJzsk5S1+w+rDR4mXcq7zcrOtf6JIQHWg1YeLi9vj0X4kna
eCgzMIQTWg5Z+M/1dxLPZVaN1NCCaWSvXsx0rXwkiw/WK7AzaS+48aURSFyR
WRqLIbam2Hpk52FWs762FthcXmHjylv4zN+9agrZT9uvtz0Oy8FsX3XlEREO
Y3m19YHLzAzRIC+4UOl3vJgLKjhG5tyuv9uZOrtm+9nGjD13ghuln2sxjXDs
4pcWDLTnQn6X3MsLDU5q7kozklkRwj0sLy3ekd0fcu9k/bbXYPkS0TKr59eK
r1J8S/uZ1Fw7G2Pz3Z7XSjfZcyfnQjCtYBGZYSt4WL5D9qpwaavBCx5ablA0
xXW/q+dZSt/wWpvVCHZmpszn2zwiXKXMC9nnqV9oEKs9LX4W7W95UanFJDdL
/9fGZ8lBG8/WKyv+w4rP23gm925nhOy7YsjaiK6/4rb4rlY32VpsMX+1Tusb
X/luz7S8K4PEht0T8iyD9QRsPSLzgeQeCz7b+Cy11Wp5q1Wtn0auYzlhqREF
J0vtXnnRZf32mqXelT0nutLOEZE8sphje9BWs1jvl5yLnSsm2tbWLBvzNpcL
V7RavuAzqbP2nRX2GRySv8QrW80X2WdtyJmusM5e/7ovcr/2HMs1y+fCM21/
wXoyBVtW+FA0Efkt61dYnmOfoSieZNF91+er12mxxc4yWf5j31m3wl7yflSb
L9bTsPhp791iY3k/zwpzVrXM6nfLT66/v+i32nskdarklN3nUjtefy54uOLn
1/nad2KQ+FnVBXtepZd07Q955rH4qOQ7ZU7P1j6bX4XD2/kZ4nNeeVRqWanp
Nh6sP3Bd3+5t8X/IvdhnhwsmFK3xuo4TbLQ9IBt7tlbamLF1wXrOFt9W2EJw
fuWjkriyeqfwq9LLs1qVvMuF5PvKVyyecPFt7DOk1rcsfIl4L9e9kHlpwnNW
tcPGhuV1q/r1GrvI/b6ImSsGCt+2s2r2ufKV1ijPsRLMsT3TFzPexUe1eFVm
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
YoQblBy0/LloBBtjq5nqkgsWV63fVeKWaOHCz+37HldalazZ9mJIjBFuRnLT
PpNSYqOcNcG3j59tb6h8JjX3Wv81V/a6N1HwfzWfafXvpZXss4HXb9k582tt
BRsLZyb9F9tTe4H/5TkUghVkbVcMk36Q7ZHZHCm1yXoyVvMWvk3Owp61nVu2
tYzkBTkj29dY4e21z9YTKB6R1adX3L7wPUgMlB7TygewPZEyM7bKa5IX5e+r
vLZYtKp3JQasplhxyOuz9bHt3tq6QPaQcADLnUgckrwjMVn4wyoGik4hZ2fr
TvFXC0ctmFl6lPbsCo+67p389wLK/lhsJDO9hQ+80G7WR7La1mLF5aXYGLDa
ufgD130V3CA1wnJg6y2svO4XWL3C+aJzybms9px4TVe+2Bi22nPlna6w2vrY
VrtZrk74oa37xC9avSeneNSrGHtR78g+2BnvwoUItlgsWvEuEhsvev0rnCdc
rvi3xR8r/qrVnlfeWe1ZeJ31r4iWL/ykaFh7jmRvS2xYzWjPomgKokPt856k
3pEaetV3gm8rb5B4ES9ykHDOoq9Lr/+Fb0MwzXJR669afkv2vMxgWJ5D4pN8
fzWLQvLCYoKtC2T9tp6W+rLyuIofW/KI5D7Bc8uxbXxe+2D1XamDhWNf3yf4
v+LzFjOLb2OfEyE+jPVIbR25PE/CUS2eX79rc7nw7RexZHHPzuqQa5a6abHd
9oxsrpX9JzF8cUjrlZHaQTB51Rew+UK4nNUdpY9pc8pydatTrK58/cyv5V2E
+9lzsZrL3lf5b5qsvEGiKUhNtPhA8rFgu+XJZW+tP0PizT7vYDnYyv+3+U6e
77C918IfCGez8WDnHm3ttjFwna/9b0/YvgzZz5VvY3Ul0b8Wc6w2tPtTZhoJ
9lp/jOTFau6O1H3rwdqYLP5z0WtWd7zmPKS+k/slMWm5gdU1KwxZfbYYaP/d
F3q/aDQS27ZekHshHgXJC9sjtnt13Zd937utXzYvSMwQLWD5s8VqUiPIdewM
ocW0ci/F8yectvhpxQMsXNHip9UIpb5fny/eQv6xWuz1nNt1XyTOyf1aj2jl
CVx5RGpK0XHWuyt4vsr34ulZL8v+FtnDKx7KM3olbi0HK56/5fM2x4n3SLTw
9dn2YS0+kHu0Ooi814XU08JPijf4wrd8UfcJR131iy3HLj7ka0517c+qXpfP
ZM22X0Y8E3LWdp+JhrX7cMWz9TaLP7/K5VIrib5exaT10Eh8Xtcvs5o2Du0c
YImHUveL7iO4ap9pXXlohDOUvbXfsfy/9CKLhiLXLO9kIPdYeLh9pmmFq5Y7
Wd1N/JZy1oVvlN5NWQOpxbbHZ8/F1sTrHom+K3OzBR+ID1b0VMnlgj+E51zn
e12TaCLiSVp/svBesifW1y2a18YkiTeyJ1cfnKxhxeFJrSR7WOboVl695eoW
owivK++psGda/CiiNy3mW3yw+GmvSTSCrR0v5hJtDbL80GoiiwnkfomnZ/mY
1aFX/8vuw2pG1HJ+cl/Xntge5ep8iX+7wnzC8VaejH0WqXgCqzixtY/EP8kd
chbX38l92Zl24tWQmF/tv+XbhJPY9Xzm80GlB0HygvBk+yyA5QPXHlrOT/yZ
cnYkX1ZeH8GB4udY7LU8h9xXmTm5tL+NkxWvJhzV1gLL/23/3Xq8dg3ENyu1
z8aS/Y7lP9c+kOtYn9nyIhvnJK5srpHe1rUe65OT/bF5V/xPq21L7pO5GqvN
Lc+067cxufJ/7P1aXCXap/RbiyYtvJfMnZJaUPQ7wQH7W0Q7WA1lZwVXuL3y
B+zctcXtgp/k3K0uI+doe2elh0Kuae/R6seV7rM4VrRt8Y0Llto8uuoFiT2L
nyRW7fXJ/pA6SOpIwXzy2c6D2Xd2fWaPj+B8eRcK8Wmt7rZa1Z776/MqPo/1
6wi3sfliNaDNNeIFWb1cZldsrSf7bN+nYXHPasAX3IDsT5kxWOWd5aiWExL+
QGLmNc6XHr2tC+R8i39i8bbMQly/ZZ8TIZ/tDMlrzmy9FFuXy3mR3yV4+MJL
tD2vVX/NnhepLyRHit63vMs+S26fnbTxTLzxld5c8XnrmRQPpHy29dryPcI5
CQ5fcVi4JcFPizOW86zqmp3XJb0zkrPl+aYV57S4euX1yvO0/M16+LYWr975
YPkPOceCRVb72B6cxc8Vx7b1/TWfJ+dFOAbBAeuVkXiz+EO+s4oHG6tW1xAc
uM7RcrNr/fYsynsDVtyv6ES7BjuzR3DDYiPZQxsDFtMKltp7KedFcsf66rae
Wi/F3mPBRru3q/0vvuuF7WQG8qqbV44T7lfqFKkphYOVPtGqh0Wub3sQpfZZ
v9fyupVXWWp9yeWVtrL3vvISy0y4xXmi2YnX90Ib2vuyM102j6y/VD5bzUI+
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

         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "52226526820494761535"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.10614790767431259`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.8938520550727844`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzN3THLvV9z1fGgIEEbsbMMdpaKoEWeB0vb5BVEiFVAjYXEysI3ob22eQm2
koBderVVLGwUbExA4W4Gvh/Wvp5Y3H/O/3D9rrP37Jk1a9bMdc5v/MN//Fv/
6C/82q/92j/79T/9z2/9zj//+7//+7/zB7/9l/7sf373d37vb/+t3/uLf/ry
X/7fvz97/V//9+/+8o//5G/+4g//+1/+5R/8nf/1i//49/74N3/zP/2rX/x8
/7pGr7+uWT5reb+8Xval91z29fUev7bPK/95tc7Fb3+V5/jKB175qsbdFzb/
4nO/8KsvzveLNfybf/3Xf/n//vSan++Xv3L/8m+va4rP6P3VVoud1T66x+Xv
lc+Uff3/YNt/929//Zf/4Y/+xy/+29/9L5+s89VfOffrmmX96m9q88v+r3zp
i2sW/FFbleu/4CQ/z0Wv19eLTxb7l3Uu3OkLbqn7/bmXP/z3//kXf/RP/uQX
f/Wf/pXz9atzv/ay3OcL277yn/JZ197LuZR4+cKXCp4sZ/rz/j/3+/P9f/E3
/sEvf/s3/tov/+fv/qXfvPKF+u0XdYT6kubfay9qf83FS5yWc7ze/3mfyzeK
/a99/bzm5xr0vAqHKdxG/4qfFDsXu5XPuvJOya2F76mdF9sqZyt+8tOHy/1/
ntfP11ob6vpL7CguXWd6XXPF/hWn1/uv/OSLWkP9R/nexf20vrh4SFm/4q3a
VnO6nm/JBRqbP6+/MOE6r+K3l52vM70+S33y8pMrfi8bajxeOFlsq/laNdgF
9xYOqTXCEr8lZxU/vO6j+a58bvGTL3j4UmdpvXnt64qFK04LVqvmUHjFUrNr
blo0tGu/ujZ9v+Cb5rIr3gs3WOr6ha8WTnitp8T4tf6iaVx+deWgRYsu/lb8
s/hYwerLbuVMtQ69/q1qC9f6NYcWTFM7fNG/UMy/zrT4VeF7qhkWzFz0sXKm
ihuv9Gqtba+9aC4rvqSxf/1brS9e5UTVQwoO6GcV7NU1a+xcsVlsXjBWOZLG
S+HGSx+n7F0x4RW+qW5TOFXRmgpmlvcX/lxyesH5skddzxVT17kX/UG1fY2j
opksGFtqBH192bDg28ITNPctf6oPFz9XDX/pDyrPf6Xlqm11j1fsF06ldVzx
t1f6wKWb6X6XvKZ6jurSas/iGwtf1dqq5FPVu0q9VvKd4th1zXXWr3rcykVV
VywzP0Wn0nxRYrbEu+qcquErDi9zieX9JWdpX+CySak7CtZp7JfPLf5W7FCu
19qq+PnPawqHLDmr4MZVZy29xaXOKtdrzir2L/tVvbfUfYqfhZ9c69TZlWK3
kmsKxqp+XrRxxXDl0nofrUdUlyj+tmBa4e0//23htNo7uD5X+0qaO0qNr/dc
tK8ym7fUoYutVI+93i/9IOXbiw5cri94WOL0Fb9VTnWtQX1D7VxsqDMhxSav
OP9yRkte0Pr38quCOYoJr+x8+caipxVOq/tSbrDst2CFzg0umrzWTQXzL/uX
Weuf1y890GsNS/1+Ye9S+xfMVxx4VRPpa+VdBWM1ri9blXNfZmsLNi65YDnH
4s+af1/Fl9pNc2uxg8Zg4TyvXiuGlL0s9lx0A60pVL8q+a7ko1KvlTqu4Mm1
lyv3ldytdruuKdioWPGKt+ucZHmWRPGz+PmrvavGUjBfdUitWcrzNaVWXeyz
+GTJaws2LmtTnLz+NO5Kfaq21XyhcVR6o6p9XZ+rPQ6dtVM7K27o83TaHyzv
v9KE1eZfaAuv4voV1y08p/DboucU+2tNpDla7aB5TWNTdciF/yt3Kut/9WzU
4ufFtgWXljWXvFm0GsU65R5Fv1JMK1hacpnyt5K/rs+9+H+J/Ve6hF5fuI3a
R3P6kr/K/VU7XWqoxa/KHkuduPSelvpUn6PXmajLPsvzMq/OXblfwTSd61iw
RfWQkq+X/FL2UjD/WoPqPCVPLc/zvsLkgjOqDZb39Uy11vgilkseUUxQ7WvJ
KTq/Wp4zesUTSt2n5/tqPqfsveTWsoaLhy/nXuoFXadyBq1DX8W7avJazy75
61rPqxqw8IRXa9PvnLzuqRrUK45dzn3hEmqrgquvYuTnPV99x1rJoa/qLI3Z
hcMX+5e4K3z+ymXLM1mvdK3LVq80txKDSy4oPPOLZ+eLH6quVa4va9D6cbHJ
EteqNemcleZEfa28othkieUrFsrzXMU+2tNfdCfV8xf/LHymPE+xfJe4zvwU
f1h4tWoyr9am3PKLeFzwQXOHfr/ZMrepdtD7q75R8niJo7J+nTFb6ujCCRfs
unhauWeJ06Xe1NjUZzfUx5S/verNlddLvihYrfy/4K3WICWuv8jd+jyF5gv1
De3FF/1QnynQOFXt4gs+VvxTNfBST2l8Lbxdr9d689q75u6y/kWH+flX1vmq
9lRM0Ly5YILqt5cNS0+n5GXF/EUTVv5w5VCdiXqldy18RnmRcukv/q51ao1Z
zvfy87K2paZTHFP+ueRH7fOW2NR9LTWI4qeureBh8cMFx75+DnTpNS+zc3r/
ay/l/uW8CicpvK7gs65/OVN97ml5ZmSZxS17KXh+1UTLd/W/0i21d7/knWIf
reMW/X/hhMUPy/r1cy9eqnlQbfhKs1IffpVbX9WzS1xc6yl7L5h2xZf2O9RW
177K9YX/vMKc8h2Gy/eylthXbnnl+iVeFm1ZNUzFjbIGzWuKS4v2qJ9b7FDm
oIpuplxO43Q5l2WOZcnvZY8aR6W2LXyy7Fe/S7D4oeJY0eWWvKk1S7lGf7+y
nOPlP4qNpS549bskS85acKBg0cKTL3/QPmPZr/rhdR/l8wvvLXbQmcNyLsWe
irElh2rPZcHAUhMVPaf0I5SXXji/1FbFhmqTYtty/fKs7it8WGrA5T4Lr9Mz
Um5QMGrRGRZOpdiitdiCt8teLvuUudCieV42ufDq4lpf1wjLuS91ROEkys00
jq5/uzwzpZrSq9hX7NW9FJ/XXKmam3Laog3qGZW9q/8vurHm0EXPvDCzYNqF
bwVvixZUzktnxlQfWL7H+LrnVedqjbBwV7VP+ayCsZe/veJ4i36lOrPWKZqj
v+DzpeYqZ1R89bJJ4QMldkocLXlNa5PlPsXm5X3NR8t8UbmPzrpceynarz5D
d/m//mZQwTF9jlvnB4ofFq5V/LZcv/TjLjuUnKXf4XN9Vsn1S/1S9l72q/W4
amilvi7cRnXLklNUX1o01eW8tK4sPqa4qnyg4PMyI6p7vzBfa9sS4wVLVT/X
uUq95uefznEVWy0YWPKg6qj6bNGizy+8Qtej872qsShXKf7zqhdw2UH9sOBP
yae6zuJjX2g1qhUoDpS/8vyO1hrlOxaUY5fn9xc9XM9imfPUNZeZkKX/pZrP
170Jza0lBl/p3lqPlJm3V8+UKVcp61G9Qmur8lf6C4WXFpuo7qe9g+LPS49g
0YGvcyzzQlf9WGK2aOnLzE/B4Wu/xYeLBl7OscTdwuU01q73ta5Z9Ek907Jm
1Wn1HBUbVatU3Lh87Fqz9stU09B5EuV+15qVJyv2LrXqgtUap4XjFX/W2qSs
7dJ5dO6o4HDpQZQ9Fh5S6tDC+RcdVXOo5o5yFsuMh+Ya1XmW+dLCnxd7Kgd7
ZcNiW50nv9Zc5lKUs32tQanvlfyitfwSm1p3fKGzFTuX51+Kdl1mnIr/LHFU
+KfW1Kr9Xmu+8s5lT+VsJccVnFkwqsTRMg9ZNPly7srZllnlL2yie9e6o8Sp
zheVuHilwxS/vfZeuIfOciza1HJeRfMv53L9W72n5riiBy65UnWwYnP9LcXS
g9DfxSj1oO698LdF9y4xrrNtyuuuNV+fq3m2+K3OUeisiOa7YjftyxR80Fyg
56v2VJ8p12su0LmRMpNWbKL969KzWPog2pMqOa78loHOBS11ZfksrTeL/a/1
FJ2w2Lnk+uLDl29ozBb+VvSTy1bFVwtvLLVtifeS08s91ecLbrzSCcvrhXuX
P601SuwvOUXncIqdS276oveh97nqFJ2JVd1JaxmN/eJLJab0u3FezSKW2kTz
7xc1tc5dFP9c5iSVn1970bqm5LuyBq21F/1cz0trNNXeVVP6Ym2LrUr8ao9V
9V6tZUp8lZjS+NV8/arPpX1S7Y+UnFv2W+ZPNB8pnhROvpyFnovas+DA8rve
Cxe9zkg1/2JzrU0WrabE0cIN9HdASi671rnMbi28fekZFd8odijr0bnTwt+0
ztL4Wvr4Jc+qfqg8R3WzV3qUasvF/7UPVfy8XF/0f515U81Zfbhw5pKbVN8o
XHeZIde5FOVRWi8vPqz+WXoWr+rBwouUy32h5epZLFinmphibKmnynoUA5d8
oRqaxqbqAGpPncksvGXhlqrp6WxV4VR6jsVuRSvWWCvaRTm7Jb4WLlf+rc60
6HebL/MqOs+pv3Wu9lQ7a65Rfq6c7coRS6/kOi/Nd4tNlrxc5qCUP+ge9XkQ
5W8lZ6m+p3WBnlGxQ4n3svfF9zROi92Wfory7cuepW5Sjlp4adFFi/5Wnqde
OPwrLUL7EcVW2jfReNE6RTn2F36+nHXxbeUJOgtdegRFV1QdqZydaimLRqf1
gmr72uss9yy69Bfzcq/miK71qO5UYkfztfqG1qql/i2+tGCFxuOrZ17U365z
0T5Fub/yxkWXWHJKwf/iGwXzf95n+b05xeGytuKH+lfqowXPl+d6rms072i8
lFpM61mtTbR3UHKc9nYXTn59lnK/hXtce184bTl31ehU57x8deGHS51SYnDR
KC5NppxL0fy1d6w1oK6n/NvSp1PtUWveZT626BLlLHRfRRsvOHPFTpk9e1Wn
6HfU6yzcwg0WGy7+/4Umqb2bKxbKnJviXsm5xf7L+WqOKGsoGq8+g6M8R2sZ
5R7av9PYV/9UXavUQcXPtd688K34lT7DXniy9kN1Xk5jbXkeQbFR8+9y1sVn
tD9SsFT5j6655NnrfT2XBasVtxdfKjrA1R8pHEy17qJBFfsX37g4Q6k7lLdf
1ytmLu+rDqy9/mXmSn1b47fk36WW11pDfXXB/Fd2vs66YEWJC82tl29/oaUv
HH6pnRc+oD6sZ1FiQf1Q7VPOVzG22Kf4wNJT0OcXtMZfYlz5xsINXtW2Jf/q
Z5V4LD2FUtuqFlf2pfy2aIklri/cLnVZ8cOCpSV+F38rdvhV5hedAym4Ws5r
0XYKtmiOKNfouWudoj0ynVktZ1r6Ysvnap5a6sRXNYLGZqmzVGO58E05YdFp
dS/a87pwu5yjPkt7XaN1QYlf9b2F5y95vNRQZY/lfX1Wa9FCX2liOnd6xZf2
dhUztZe61P6vMFxz06t/W67RnFLus+hjRUtX/VPriJ/XqPZSaj3VrPQcF1xa
OEA5L51r0vpX9QfFkLLHJUdr3tTXl92UA1/rLNcsc4mlT/0Kb9WGy2ctr0sN
VfxZc0qxc3n2pGCy1o/XGl7xLs0jpSeiPf2CmYVv67Ny11mXPV6/i3f58xKz
r/QQPfdXOFwwufA35RLldx8Knhf80Vqg9Mte1ZWqs2mfYuFI2o9QX9U+S8EN
zbOFpxX/1Bqw5ErFq6UG0TyrMajfuVH8//pcfd6/4OcXWkrBzKW2uu5Z8qnW
a0v9onWi9ubKs5maixW3y+tr7+U3Tcq5a6zpvgqefOHDJa5L/i3cQPPUgtWl
ftH8u/TByzMXyiev9b+q4xTTdI/Fz4s/LHpXiaNSN2l+L+ss/c1X8zYFt69z
0dnRV8+glfNadODyua/y2nXPZU5V64gvarFFuy448wUmFJ8pv4e12LDEYDnT
kt+LD7zi9sWe5RxVh9Fz/8JX1Z+1J748u6qzPctvgL7qQRTf1usXvvGqb1Kw
VP/tgu2LdrporYpdiwaieojml8ueyjnLOsvzDvrb5UUL0t5x0VSLtqxaq/6e
XfFPjR3lGGpDjTXFZ+UtS+zoPTVfFxsWnV85aqmR9XWpvxYN6pVmq/td/Ep7
1iWHLj1QzRf6Wdd+tTdXcnrxE8VP/b5x1fRUe7/WucxrFaxY/L/8XqfWgCXH
Fd8uNl+48SusKzlx+c6NpbbS50G0ni1nvWgOyic1b6r+qZhW+kqK/9ovuHLE
ohUv679stXD7orkVvaVge6mXX/nhUo+/mhXR71jTOTSt0xUTyjnq68Kltbe4
rPny7eV3GTSutZ7V3qLqM1rXvOIP+rnKc8p+CzZqzn1V6/38t/q7EiXvF01p
edZJ+wiFa134UPynxOBlf+VOS53+Ku6WGq3kplJHFx8rOFnurzzh4niF85Q1
K/9f5rcXjU59Rv2q5O4SC+U+GteveKbivPZ5C1fR3xbUnsW1zvL9aao7KRd6
laMvTFBuo7WJYsWynpJbLz8pNtT8rvXRq77bMiew1ALL/Lbm30VHLWenOF/s
X7j6F3lQOZ6+/qI2V/+/9qU6T5ljLJ91XVPss+B88cnSE7niWs/6VdwpxpbP
LWendXqJ5Ve5Q+9fuIrmX+01qy6tcbTgT8FJ1eiWflnxk7KGEu9lX8rTvtAz
VTMs8f5K8yy8ceFIihva7yg+WZ4pLv6/YIjaRLWawovK5xZMWHoiRT8ssbz0
uUqcLth14dhih/JbKsqRVAPX2FEeXvLaKy6qZ6f95QVDyjMyr85UewHK89VW
6jMXZhZerTWv/p6R6p/qq1/HmnKA4s+6/iXv6L+9bK48pGBUqdl1/qpw2oKZ
OpNZ7F9i4dUMvNbXBfN1Ju06izL/VjR81cGKr2rPa+FIGuP6HGKZO9X+gp7L
UgdpTbTEWuGQxT9LnaW/76O11RfcVTlYwYFSxylGlfyl+eVVfVHWUzjwUlMv
WF30vctnFKNUp7p8+Lpn6bNcWHHZULnW9Vq5YrG/5qaSZ0uNpr0wjR3t1y/z
P9caFHsVzzU3Ldy11HrlPpqDNBaK/+j8c+HhGvuqyWhfT/sySx98eb5Mayu1
oT7HrT21Mke0PC+gtV55v6yn4H/JKZo7CuYvn3uddcF8jWXNF8ohVbsr80Kl
7tNnEDSW9RwXrXV5XZ4ZKXa+bFJy6OWf13mV18Vvl1xWZgPK5xa7Xf6g81qK
q4qfxa80n5b1l+dMF23hlS6x2Kf0o1VL1Hy61OnaFyvctfhqyb+veiuK80sd
UfyhcNHlfEve1DpR+calPRaMeqV1l77hK58p75f+qernX/hziU2t5bW+KP5W
/hZ/Lvh57feL/F7OpfRMC4fUXk/h28XHNC+UONXaqqy/cMLSZyx14uInJS4K
fpa4Vk1AsUtn2xTDtTeqWKp1UJlPUO6kuFdsWPZb7qPYpb6nOvYyk1zyxfW5
OvdS6rJrPcWXVFt4Nf+z1Lbat1KfL7hUfLJ8btHQVGstmF+4tK65zEsUX9Jc
/IobFB/W3KTvF99bYnPREPQcr70UrNOcpd/1VOJdMblwQs2zS1yUOuXaY6l9
yrkXTrLgWMm/xT5F51GNvcR1WafOyZT+wrK2L7j3kuMKB1jmza7PeqU9qu8V
rFvypuoPRVsr+rPig/qM8m19xuSV1rFgqfaGCpcu2Kt+Umy46HvFP4uOXWJ2
qeNUd714hfpzqTW+4Mml13ztvcwdfdFPUY3lVY1Qei5/XvhfdIzyWZc/F91D
/WHB5It3lXynNZf6pOo5xeaquZX1X35bcF6fcVh6JZpbX9U7Je6Kb5QaeVmb
rn/BB61bX+Fe4SHKZ/TsSnz9KvFfe9nl3ypWF3vqbxkUHy7+WfTzV5+rdbr2
shUntR+xvFbNX/Ffuc1l/y/mOlT3KzGoPYtFp9WaSDHtVc7VuNNnxMo1pU4v
9Zfif+GNSx+21H1Ljl50v6VeexWz11mUXP/qGY0l/5ZcWXSJ698W26q2rH5+
ndcXOlLBsRL7y1kva3gVX9f7izZ7/V1xV+amlt/6WTSZYrdyFpc/FwzXmbeS
6681l/6IPo+vvrrE7GWThUcVH9CepvYpCt4qZ1Df1vmuV9+zrble+UzZV/nT
mvSL11pHXOdbMLPgQHnO5cLzok+W8yo2WWoE5RulD1hwrMRImVsoeuAy61Lq
Ba1hl3yx/GmvRLlxwZMSXyUnak4pPll44/IMmuoJmqeua7T3WvxTe/GLPlP8
qvhbec6urLlw+8LPlxkMzXcLxys6dtHwF33v8oeiv5V9aW34qp9V7P9KW7t8
+MLM6z6Kmaqr67NmBQOLPyjfK3Wi4nzhNoX/L9xP46L0krQHUfaitfPlGzrH
qM9HXGe39LwKz1HessxQLThf8LCcXcnRBdMKL9XnXBbdUrmf9m1Vl9CZnMvn
X3H7ggmaO/T7V/W5reuztP5degqL/rz8PoLWAstMy5Vz1efLGZU66FdZAxYf
vtapebxgmuqohcvpvy39O8Xt4m9lL6o1lbNbMLbUy6+ecSs4o2eh/YvikyV2
NEerzy/PthRcWmK5fA9YyVPLMwg661tqJe35Xp+lmonOOSw6m/J5xfByvfIW
rTG19lnwv8RFscMXczLXNVpPqa5++Y9qEa/mJwsH036Qzg+UWvvVdzQVrCv2
0fP6Iu8obqhWU7iH1js6O624pPxh0QxVBy5+teDtK46ntUbhyUUrKLYtdXfJ
6Ze/aU/2wkyNceVRBSv0dclfRQu6bKJr0B5WsdWiqxefLNio2t0S7+q3Zb+v
cHWZ1SznW3haiaPSp1aM1fN69W8X3CgcQDlP8YeCnws/KZisdWvJd8UPi55Q
7HPZU/N+mQMvuePyjfKnPFZ5ctGRtD+4xFfxeV1zyaeKIcus8sITrjVozr3W
o3iu2uMXf9qn0HsWvFpq58LxrnuWORztX7/qEZRau8S7ft/4ZTfVlIoO9vN6
zX2aQzV/LXGq+ULjTnU8xVitwQvH0BrzOmutC0rcFfy/1nPZVmcPdM5NXy+6
06J9LRiueq/mPp3HW+bwL2wsdl7mygrmF9uW3w1R/9e8oHio+H/Fe+mtfNFn
+VW+Lriq8zMLBhYOoHppWbPqGCUGi0++6qWWaxQzFf+VCy12XrBCryn4rDMS
qgMU2yofWPSWay/aP124xKKZlHgssXz5z6IdLTlI56AKH1AfKL6hcxclXyz7
LblAMbBgqepIJYdqLi55pGDLwn8un78wSmfIVQu9zlrnlBRjiw2LfTT3lfso
R1LdWPXGYrcSd4suoRxS7bnUuYtPaj+r4NhlQ/XtgreqZV1nUf6tru36K999
pLr3hWmXrRZ+WDTV8lkllnXuveSaa53l+6mudS49Na0dSl2pvbNF+1UfUH1g
0QwLJyycajnTRf9c8K1gyGLPr7/PTTlGyd3ldeEbml8KV9Fz0drqWr/OcpQz
Kvy8cA/Vl7QPUrRuxbGyBp39K76kOVG5SuFgmqeue15+WJ4/1XjUnnuZHyg8
U+sR7Y1q/V54/qJnqt+W68u/LX2Nyw5/XmdXeGbBFuXYxZeWmQrVS7W+XvBt
qVOuNRTf0/3qX+HbBcPL7I2uTXXRKy9ovKhepD30onvo+1qXLZq5nrtyoS96
RiXfKZ8pdcdydjp/qLnsymvFhst3DiyYVj7rVX+w8CXVD7UXo/X79VlLr7Pg
hnKMpRegNUI5U/XDZV53+b6Lcr1qlWUmTX1gmS3U+6i2Vnyp5HrV3q+zu3B1
0aBU8yx8pmgyapOCnzpfVzhMuWbJ0aXeL76tmFbwYelX/vQl1f+1RlY9bell
KG8sOVfnIsoavtD0iq9qXniFh8Wfl1pA55m1D1IwWWN8ma+4zqtco3Ppqi1o
ba7a+MITiua85O6l31H8QfPsdc3yve5lbYte9EofW9ZTnsUuXFS5xMJ5Sn68
1qY4UNaptfDCaRf9ofCoV/NRqpkrxuqM2eUP+m8Vi17N36oWpPZfuIpeX2yu
OqT2+i+fLxiouWx5vdQgX/eAdI5XdfsLW641Fx2p5LVXGqzitvJA1anKfa71
KG8seq+eS5mz1fnPgr3XGpTPFx9eMFP9Qde/+HnxyQtnVBvUnKt1dDmL8lsV
BcfUP5e8XHig4pL6ufLDomOUvsaS14r99bVilJ77qxnaEkflXF7p88WG2g9V
HFPttOCV1tSqGy8x+0qLK9irPLzEhea167VqTeqrl22VW17vq26/xKDGV7GJ
PndQ8KTEgt5n6V9ob1FnwEoMlvMt9tE8qzijGFs4lfZPy7mXPFJ8ptT+S8+r
nPWiT17vl5le9Rn1YZ2XK/hTfFJzh+LJspfiq6p1q+5dnl/QenDR8Yr91Qcu
2xafLJhc8Er5WDnfklsX7euK95IHLz1ZdXX9bsmCkwWXShyV7xJ/pT8XfFh0
8gWvFIsKh9HeQclxyj81dpacomtQzadovz+vWb7/7Yp31Yu0L/N1z/eyVeFd
S71c5s2KPy+9GNUBSoyrjlrOqODSohcVP7z8pOBPqVkuO2sPSHF4waXrs7R2
LvdU7X3BiuXv1ZxzieXLJorD2tMpOUJnqEqcLhrRqx6ExkU532UOYfF/rVtf
cWCt3TSPKKaV+FVOuNR9V6yV+NLfKVa+UWKzYE7xQ/3dseuzFt8uOUjz6Ss9
cJn30zrlOheddSn+UNagmpXGvq5T/e1Vzlr2XnjychZl78Vvyz21d7DUCCU2
i75x3UfjWutl5dWvPnfB6stWis/XORab6yxlsWHx7ZKPVOdU7ld8uMwbl/y4
5C/VM/WzyvlqDah5arHD5Xs6g6rrLzFYOLPyqGVt+myIznrpjGXB8+XZikW3
LBpU6VmUfFf6O8XOqodrTOlZX2ehz+iVuNCa5bLPUhcXuym2K4arJrzoTgsH
fqUZ6vU6W16wVDnbteZlpkJ7HPq8RqmLi+6nebPc84v3lT8UvbpgY8lTOmNQ
YrmcacEl7YUtfZni5/pZrzR57YuVP+Xhr/Q61YGv9Sz5osRvWbNqj6pdXLG/
fG+z1hfFVovWesWa5qCyd+2h6Gv1jeu7hq44LbGwxJ1+7rVf5XUF617NPRY+
sPjnopdqz6hwuQXfFEs1f6kOWfLv5cOvZnGLBqj1qf5WbNE2X9U7xcfKetQH
iiZQ+jKKG5dvqw6jcXStszwjVnKici3tgxTfKLinNXWJU/2tljJvrJqn9imW
/kjJg+UanRu8/KfsRb8/vOBt0eiWOrrU1OWMCm4XO2v+UuwqGKK/l1Se6S45
tMwCFfxf/GHRRYsdSh5Rfe+LPmnZ+9JjKn5bsEu/w6Fgr2qMr3SeZc658K4L
P3WPZS+lj1P2pWvW/otquUtfSWNf9Wqt10osFD/8ghdpnn2lZ+oZlRjU9S91
1td2KDmoxIV+1pVnF58pNUg5d9VdtcZ5dV7X+8vsivqG9oMWfqJzcRevKDiw
9JWUmxWbF65+nZFiWvkdq6WPttTR5SxUVy/4U+pfnafSntQy+6ExtdRNhZ/o
WasPqE6i+y15ZJnFKrzr8pmFa+n6i85fYkHPSDFW11zOXa8vXKL0lPV5ycIf
dIZwwdviD+V9rTtUx1A+XOJUc+7yHJzGgvpz4QaFry5nqr2k4sPa3y99mVcx
pflRewFajxc7lM8t3FUx+fKf4jNlnUvNvvDwZUbiuv/C35Tzv8rjZe/KA4u2
sGg7ygGu9xduqfi59CMuH1PcLrlbuccrzl/6XIWbKUcqe1FeVPJFOXedeSh+
Xux/rbnYQf28rPP6Kz6z1LzF5qpvL70/9c9X8w+qAb6Kx59/2ptb5irL/TXe
CwcrZ10wQXXURc9RnFQOo/1N5Q+XDxQbFuzS3F3m0DRmNR9pfbGs/1qPclTV
60rNVeZ/Sl2gOsmruCszY8WGpZ66bKLzA+UsXs3EvqpByppLXrhsXnDpssMX
+F8wfOEGmnMvfrLgdtEhi52X5xCX2f5F91Ytrly/1IkFJ4vP6P21LtP3l1mL
gj9lj4r/1xpKnX69XmZoL98uGF6wdPGT0g9a+h3FN1TDX2b8Lvuozl945nUu
Ba+KHqvafvGNguFFry56TvHDsvdyvf4uSfGlwoVKLJQ8W64p/RrF8KLBaoyX
M1XdqVyjuf7yH/W9y88L/hQfVu2l6DZaHymeX35Szrf4iZ7Xq+8sLXFRzqV8
rvZH9IzUDpfNX8Wd1v7aU9N4WXSSJY8Ujr08Y6Ka3hIjBX8W/bDghs7YLL8t
orGmeuPlM0XzvNZTep2Lz6ifaBwVnaHU0Yt29OrstEdTctCiVxesLvVCiXH1
50Xz0bPTuFbNp8SFziFozfJq/T/f17nfy9/KeV2+V/JCuX/RUoo9i0+W+nTp
x6k9S/7VmCr30drh+lv6X9qTLXVNeX/RkNX+r3KxzvnoehasLjbUPKXxXs5L
+32lRiicXNdfsFe1Be3V6nkVf1hqQ5090P6X1o+Fg70691exqf5QOKHOYGjP
tHD7godLP0gxf8nFahOtazS3LvxE473U7IUzFH9TDqyxqWekNcXPa0qPVV+/
OlO1rWqzJV8vdXrZe8Gf8rlqc801BVtezQCX2bmyX/0eLc31S57VWF7wUPFK
646l71l8bKkXtMYp76s+rPbUeCn2Kfrh9f3My3yC9vTLWeh5LZrMq3MpvlF0
oSVetO9T1qyxUGrby55av6tGUfLRUqNp/Bbf0Lp1wZ8L50vtttRNS3wtOejV
OS7/tmBvsUnhpar/XHvR5+yWc9TcoTpV8fOljtbaRPmnnq/qosu5lDnMxeZL
3F11R9njMq+l53LFeMnvypO1PlU7a09nsZv6s9ZfX+hX5ZlBtb/2fTRvqvb+
RRypnqB/r+oU1Qquz1LNUH9bYYkLrUNffX9p4WaKFWU9JWbVz8uay7NFWpu/
qn10brBgY1mD5qyScxUrSiwvs7sFezWHag211LAFBzT3lVnc8lyPPiOmNldf
0mct9bmS4pMlL1zxXvJOedZP/fNa86tnKy476Axz2btyuev+r3i15pTiA4vv
vap/yz0Vt/VM9dlDxf+S9wvuLXqjfp/P1++XmCrfp/FK39Z6vPxb5b0LFun3
DJScXvBf/VN5VzlTxT3V0ErOXeYYr1xWbFu4hD4v/IoDl+cW9RmWhSdftiq5
QPH28hOdf9A9LrOmSy5TDFxyt/KEpV57hVeKFa/6UyXnLri9cL/Ch19xv8v3
yjyq+kbhDOUaPd+ij5X1F4wt/WjNuUtvrpxvsU/R5RbN/9pv8cPi54VL67M5
JXcUv32FgaW/oHOeiqsF60odUXha0egUQ0p+VKy44mu5j3K/y2eW57AWjavE
wrWG4nvFPosuqjXsFePX+8u5l3suz0qXuu8LnUe1iKJrXXhSsFSfa7juUziJ
/uad8rTiSxrjhfsVnlDWptcXrlvw84uzKDhT6vcrRpbfr1zq1le9oQW3y34L
h1nqX/2NgGudS1zrd0IWbqw4oH12tYPWGpd9iv+UXlvR0Ip/lnqt+LbyqOvc
C4aX2F94XcF/1fBLn+W6ppyFnlfRTotPXrFw2arE9Su9VP1h0b6KPbVGe8Vn
Ch8u+XGJu+v+S2/i1czDtd9XtV6p33We5IrxRV8ta1atoNhtObuF95b8uPA0
3Zf2Vgr26vkuvfjCJfQ5aNU9ypmWfWmMqNb9CpeW2qH4z8ID1f5Lfvw6Nhe/
0j74ckavcqL2RnXNr3C4+NsXz2Qt8btoFDrvt2DdK//R57lK7LzCRuU5xU/0
fBW7FJeWmY0vfF57BEsN+Irzv8odhXdp3fpKV/x5n/8DdGzBkw==
         "], {{0, 128}, {
         128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "62760542193998695205"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.3339146077632904`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.6660841703414917`"}]}], "}"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.775496323599188*^9, 3.775496365654653*^9}},
 CellLabel->"Out[91]=",ExpressionUUID->"6b9caf5b-8922-46cb-99d0-3aee73ec9b9c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["7-colour totalistic, range 1", "Subsubsection",
 CellChangeTimes->{{3.775513952072535*^9, 
  3.775513957613427*^9}},ExpressionUUID->"8b3cc67d-4a53-4e8d-845f-\
3a202e6c4ab4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"test4Data7kr1C16", " ", "=", " ", 
   RowBox[{"data7TC", "[", 
    RowBox[{"8", ",", "128", ",", "128"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"test4Data7kr1C16", "\[Rule]", 
   RowBox[{"netECA16", "[", 
    RowBox[{
     RowBox[{"Keys", "@", "test4Data7kr1C16"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<TopProbabilities\>\"", ",", "2"}], "}"}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.772719248559807*^9, 3.77271927548206*^9}, {
  3.772719324257593*^9, 3.772719331356277*^9}, {3.773124904129174*^9, 
  3.773124928357933*^9}, {3.7731251153026133`*^9, 3.7731251512280912`*^9}, {
  3.773125217467578*^9, 3.773125219418065*^9}, {3.773125271868342*^9, 
  3.773125271954652*^9}, {3.773212712732003*^9, 3.773212729006225*^9}, {
  3.773212818178605*^9, 3.773212830613299*^9}, {3.773212941366901*^9, 
  3.773212951689026*^9}, {3.773213005636443*^9, 3.773213014527096*^9}, {
  3.7732132566474*^9, 3.773213256876457*^9}, {3.773294401307526*^9, 
  3.773294423203759*^9}, {3.773348269707011*^9, 3.773348280477676*^9}, {
  3.7733514738060293`*^9, 3.773351485326448*^9}, {3.773356436954606*^9, 
  3.773356459506678*^9}, {3.775496533429831*^9, 3.7754965464457607`*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"b0bd9630-24da-4de4-9f3f-14b477f897cf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztnT3LdFtShg8OiKaCmcIMZkaiqXNeBiMZTMbESDgDGsiAMBOIgR+hBmLq
b/AjNPEnGCrmk2jgPzAQnAGDNii5Lq6q7n54J+jDPg+7916rVtV931WrVr/f
+O4ffuf3f+qLL774wc/86D/f+eqPvvX973/1x7/90z/+n9/76nu/9qvf+9qP
Lv/8fz8/vv65f/2NT3/17Z/99IO/+Pdvbl3/59d//tM//dt/ffk7//INdM/F
/eS703Ps38t77TOL/ct4ttZr611b/nDhzxfrtfX3i3F+9NjZ8ucLLNrysek5
f/e3v/zpFZ/f/PVvf/rnr3/t03//8K+/fLzeun/67u/+4p99+vs//YVPP/zW
X35JnmnfRd47jeGZdibjIddbc9+6fpU/X6zX1t9fZauPHjtkPBdY9Cp/e+b1
xH1b91+Px17/zW/9w5f/+Cv/8c1f+oM/+T/Xz7SzHc/kM9Y+5V3kc7Fe73A9
zYv8fdJ4H9FWr4qdz+H6mVxD1s6u9eM91+Oxz590y3R9YedpjlaTP+aP07vs
3Ivf2vF8lA9ZO+K39l2vnve7xM7n9nkV79j1va4hbD1/iikSp1va5vE5j3N5
1H5FU9l5EewqvvoO/nyhdW0sfERt/26x87ldv4prynpt1RBs3jE9h/CFrS9Z
bTPhAJk70VR2P26aY+FW+95Xayv6ucDwd9b27xY7n/Pn3fQ/8ZN30P+2dnRx
z8RZj9ePdRKLFc+s7UzrbutXj98lc38HrUvWdwtL3+H6HWLnJ9fvo/+neCf3
PFP/b9WsLq6t/0/ftbXlkpdZrTvVr6yeeZXWuqhtbu0FvNvcr69fbY93+bwD
BxEde83jpKb6blrC8hTpGyHfLbUdu29r90Dfre/F8hTh0I+yF1A4+lrrvlss
v4NN3kEPWHze4j4Sd9N43sFu1zx1Eb92LYjPEBte18ZtTdvGgl2LZ+4F2Llf
j+cn+wX//+cd9EDpw9zCuslvif9cawmio6a/F9++2GO1ecRWz9IzffviHrsW
z9wLKPF7sUdDcsxXxfK7XV/zi60zEy1EvrvFfRPmXNcYbfxu8dQUO9O8SPxO
zyw5wjvUdV+1pzPN95l7AWUuxAfseLb85x386pmfZ+qBKeclGo9812Id0U4W
h2082jFPzy88tTU2e01q9WR9i80vcrFrLU2uL/YCtvYybM+w9SXrPxex/FGu
r/WAfe/W/dN4bK8j2RcoNcayl3d9huJCF9ladJnLM3OxUhPbsnPB8K25l1zG
jtP2thF8+Nz2Cy70AOF9y+PkfouNF+fry3eLxiM+WTj6VbrI5mhbXHld07Z7
Olv57MXct3KZLf3/znN8t+uiVYqt7F6e/e5FPdb6mP2uPbd7cYai5ONbusjm
aFtceV3TtjhMnlPqYGXu5Zr4qtX/5LuvmuM7fwpXkryPxM7Wd5/Zq1+wiPiq
7Yu4PkOxVfst77W8ScZv4+KCN+14bI5DdIj14aIzyZgv8vdnzvGj5AWTv9la
wRZG2e+S9d3iZVsLJfa0uFrWqNSLyHy3dBF5DsHz4qulpk14p3BEwfnpmRe/
oWR7fS+uCUdvzfE6L774EF8leGtjecsHiC4qunTrbILFJRI7ZI3sOC9qnmSc
F301NsbL3CefL35S9r+m91qb2DzU9vpe6GRb+9qa40fcLyC+WuxPcGYLk7d6
9QsHlXqF9Vur87dsRWxoddEFhpcYt+tu8dnyoK3vkXWfbLLlh9d5oo3ZknPZ
e0rsPPNj14jYn+AMsdUWJpO1I/YhmsrWK2wub3ubyTiLfiDYW/i9YHiJ31Jb
Lj5vY8fmj5Y7rB+WdS9a2vIRybnK75xbDn1mXrC1LmVfmPyWY8HkafzlNyen
OC2+R7Qi4Vmiqy0eTp9SZyP8XsZ88e8UWI0xYWk550g0UtlLtThgx7CVJ5ac
kfCs1Zx2zK/aLyDjJ+tCcswLrrf8QjBtS6/a32OxfrjF++XcJal5Wp8ncyy/
QbSF4ZbXbB/vVs5i+atwva1zEj+3dd3yTLs/buf+zHtsjmP3c0k8kucU7num
rcp4LL9snQsgHEdyhIvar9Xqdi0euYlwqK3JWF4jNfaSp5T6A/ENsodL6pwl
Zku9t/QTvkPPUuFua5PCg+SesldetI21lc3RCr9YnTNhXdH/Np8qOpzcs+Wf
VhtfnBmxfQ4FB8gci/4p9xc+tRi+dRbpnXt4pngpdXhiz6JDCEcQrC4aleCq
zaHIp8S1HSfB1eK307wmbiLXBUu3eiOLT5K1vuCdi3Uk2ukCS+1aTO+yOekW
d1g/sZ/rOjxZu7LuliOKrrD9MIQri/azPmk1vLWn9VtbW5hyPcLpFkut3r7w
SVLfI3UYwjsFf+z+i107i6XT2Lbi1+7/ljid1r3EOKm/lTp8eSZZdxs717rC
4onV2OSZFzV8Yk97dszWfi96Tsjcy5pe+yTRZlt1LbuOhBfKtR0nwV671jZ2
Sj2TjNnisLWtvafkmzbWrFbf0hVWP9i1tpj8+MxSwyf2JDFocYbEy4VGnd5r
15SMbcsnCc6XupblC8ILpc5pdSNZ36L/SewQn5nqlkWbWX241Rtga2hTXNhc
smhXi11b+qH0P5Qck+CwrUXYGCF4W+ZlscjWA4su2vJJsl62rlV4c0t/2hgh
4y/744UjbM/zFiZMHETWyD5/C5MJ9pZeKbIu5O9FP9hrW/co++YXuTCpXVuO
2KpJkjrM1tiK5rFay2pUi70ljyhnFrbiaLIVyZUu6oFTLlB0frGP1VrWx6zd
il7d0lEFM22NzvKvtT9Z65ILl75EwhFFJ2/FaZlL2bsv+UWxCZk74XqCdWUP
i/Cs5R2LOSSWX4Ut09iKttna3yE639qn1KyIbbdwo/SLWt21pf8tPluNasdv
99e24tTW8wmfTrFg84uCFSWPsHW8rT0soj3KWTmrY0nsX2OLxY2t+tjkS+Tv
RD8ULra8v1UftvcXniKxQOxJcuGL/WvbbzmtHfn9SRunZDw2d7M8ZWOEzLHs
P5Z9apvjFO62OanVsRf9TgVbyrWtj5H1mmJzq1/F8prNZUr9ymqY8vzSM2kx
qvihjc2yFsUm5f6td13XfolfPdp8ay6lzkB4ymKdxTGrtcjnIvbtdcEuEmtk
v7vYp+T1BYevc3abn1oc3tI8xAdsjmPXouifskblu2WcNo+wWp3UUe277F48
wQHSV0Zif+vsXomprdgnvrGFXdOalv0vYh/LR1s4TGJt0gyE+y72CGxNkmge
y79lLtNaFA1D5k7WyK4veZfVvZMNyXdtTwXRukTzkzFM37U54xSnxIZbusLa
0MYLWetJhxfsIvhM7rf2KfrfxvhUv7rO2Se7FZ8sdYMpj7b7nuUsyfQhGmar
Znux7qU+SfT2RZ1kyz4Wk+13CS5tzd3ydYn9rdxkqxZN+Prxu2UvwPqbja8t
DUywi/Dgln0Irk6xYLnY+o+dr/2NoKLBLmo1JTbL3n2pk2zZh7y3cNNWHyOZ
u+XrLd/Y0oS2BlJ64QgXb8WjXV+Sn5KYusBw6z/WJmRva+v3oks9c0vDlNi/
0H5bOR3xDeJX1mfKGhU9UPp8pvGTuT/z321/HM91nYFoJOvDW5qcjMfW/y12
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
seFWzlJ4ytbZyFmk6TmPY7O1XDJfi3sFV7dwoOChzSMe/z7VK2z+SL5L3vsO
+r/gWOF36/9kfS/yhfJeG1Nbe3xFC1k+LbpiGoPNicgYSI3U+v8z49RqVOK3
Fm9LvmP9ZMu2ZL6lB3irV+eZ+t/61VatYMtWVh9ejMHWK+yYt/Q80ULl97Qv
dIXVAGXvzM6lnKmxn6IJ7dwL3hK+trql6P+tvp0ytov1fab+t70cU2xe/LaJ
9Teri+x7CZ/aMdtcexrntEa2j6vk7yU/2tLhZPxb3GqfU7je9i2Q9drSpfYe
W0MmPEtsO8XjdF0w+WK/xuKnfabVQlvxtWW3oosId5TfMSDvJT1Udl6kj6vY
sGhCwr9Fh5f92VJ/IPOy2EhilsRL0aLl+ronpMR44c2yvlZzbul/qz+tj5H5
btmN2HBaX6vtydwtDtgxEK1u9ZK1YdGE5ezDtBa2/lC41eqcLc1MYtaeMd/C
FjtmEo8lp7PYYnXOFu9YP7RzL/pzii97Tufx76W/gjynYODkn6T+b/cCJluR
3PNib4Xwux2njZfCOyR2LB6WXGZLM0/zutivsdhCPqV+XnK6V+07E9653sMq
uQbhAuKfxD6krmu5bwvrJu6zfHqRX9g4Ih/LZWSctt5I4qJo2i2cL703W/xr
Mbzw5tb1dU1jK2+1+87ku1s985Zzi38+k6e2nm/7Hu2+xsW+EvEZoivstT1L
vrVfZn+35wIHLM4Xm2/5ZDmrWzix6Iqiny2XkTle7ztvxeYWL1/sxV/kj+X5
pe/RalqrCcn4t+J6Kx4tHtrYJH/fyh3KvAgm29qU9UnyTMKJJNYu9gvs2ecL
/W9j/ELfktgs53Eslm7NsfCUrdtbDLR9L/ZMN+H6CdPI7+8RH7BxROY1zbGc
UyvXJXew8yq8STCH+KTtMSt9VmUdp2famqS9v2gMm7cWfUvWpZzHKTVkshd/
wVNb+RHBJVvfIDFb9pUsr5V9BxJf5Iy83b+70OT279PcyTXB5IKlW+fvyFzK
uRJr2y2dfK3/bS5g51vWdxpP0fPkbBeJ94t52fyo4IbVbMQHSO6/hYGkvmR5
bbq/xNSWJi85QrE/sfmkB0hNzMY7sc/WvMiYr/cLLA5s6X/b/1D4xdYYbQ1/
izcthpB5lfPa5XeuLI9Y7bSVS5Z6HakblDPIhVOIJi9cX+xPbD6tl12X0mdF
3nvtSyTvfmZeULSK1RIWN7b66Mg62pgqnLLVC22xgvyd2JacWSDXW7kkmYvt
HbIYPo2HrJ3lDmLP8nsX1zmmXV+iG23dxo7nwpe28r5n6n/ik/a3NUoP0sV5
vVKjtrVf4reTrex8CxcTHWXtVjRe4ZTHv2+dqSR66YI7CJ5fa2zrM5Y7tnIu
MgbSw1B8yWKyXccL/W993urJklOUPMXG+BZHkDFbvi5rOvnY49/L74EXnyx+
Yvn0uq67xR0FB4he3cox7W8lWV1BeJO8l/SSEUyzOVrRoiUvKJqQfHfrtzWK
5i8agOQdhSPs3krhR8svloNsDmJxteChreNd1HVtbrvF49N8bRyV9SV+RdbF
8ibhfbsWW1hN1ov41daYt8Z2MR6r+YsGsPqkcEQZW6m52T3lUke1c7TnBbZs
S55j/XnyE/Iuyx2T/rTjKZhW+GV6ZtlPn3j/mf0G0zra3PMCw21OR+6xNX8y
x4JXRAOQz8V+tNXGBN+s7rL4WWojBK8e/25/m67o0qL5rZ+UvMxiI9HDFk/K
cyzmbOUCxW8LVpPvln38Yk+rLcm1tcM0x4s6qsWoV/2uS1nTwoNkXkXDlz69
aZzWtraeZmvOxMdsXmZj1mJO4UQ7d6v/Sy5Q/Lb0G1hNQrjScpbdLyi588V+
tOUFMh67p2+vJ31i42urnkZ86QJnCIaXOC3+X/ZiLEds1cwn2xI/sfO1WsvG
7NZerf3ulja2NaJiQ4uNljdJbE73l1qZxYcL/5zea/vWtvJisu9G7Gzxk2D4
Fh9ZHJ7WpdRvL+LR4rzNTbZwoNRMyt/ttY01ktMVbWy5m2j18pxi5y2tOz1n
a5xlHa0em35L6vp3XS7sX2ovWzhD4tfiz/ScLdvaeCQ+UGoXJJ/aiq/St3Ch
A61Nit9u7WVsYVp5DtG0pAZin7M1TrKmpa/GxtcUa1t5sY2LsnbTXLb0BsFG
EuOl36Pkblv1Bzv+aQylLmHnfq0Pt2osdt236mwlZ3nmcx7HP+1dTn4yaV27
B2rHSXCy7LNMfHGxZ2FzAXIuhpxJsedrtvTGxR6ZxckpdkjuZrFimjuJC8sR
pNeo+CF5b9GHFzrQnuMjc7S5g53v9XMmTCM+STioYIXV6rbmb/XMZPOSq9pc
oNjW4qqdS9EtRL/ZGtHWOZeterXNayxHXOxNl7gr+tD2aZAxlD4r2wdVcuTr
5xQ8mXxgq0ZU9N7kz1s8NfWTW1wtPGtta2N5q85PcMzOffITa3/CKVv16oKZ
xFZ2bBc53Vb/VZnjFm7YeW3lqkVXlOfYnkab5xINUHI9ayvLU9aeWzFo+auc
dbI8VXQI8QEyd7JnOj3HzstiGnnOFs9avbGV31k9TPb+Sr5GzsmS8RNsL3qg
6LSt51h/2IrNosNLbcf2a1kdQsa5lX/ZXlyrwy+0YuEgYn/SK77VGzlhmrVD
6SUoucnWmlrMLDFOcKzk4Bd2I/hD7LP1nAvtYXUv0QOlP6fgZ6k3ljGTHKTE
1IQh9t9StPpwqx54waFWH5JxEt1LfMmOuWC1XVPLNWXfofRvkLGVPjHi8yW3
tXO0OVHRHiU2p3dNHLG1LiTWio4qY7b60O4LEAwpfSaP11s9Y9bnCb9caOCC
1Vu6ncy3zL3wTtGZxG5b62v7xIjPlxoIwduCM+X+C14rOqGs7/XvQhQdQnhq
C6NI3F3oTxv79rvP7HEqPmnvsb0iVi8V3ik6054PIs8hc9zqE7OctdX/aWsv
9v7CR8T+W7FD1pfMpeixgl3TGEosWJu/yidLvcjm3c/ce7U2sb5n95u2+Ihg
Pnl++Y1EYnPSs0d8xvptsWH5e8kpiGYgsV/qDzZ2iJ0fr0nNwfrwRa2bjG3L
34jdLnzS1gOn39awfkvsYzmU8EvRBmW/qehAwjt2L3Wr5mDzC4LtBatJzaHg
zJbdiha18XJRE7A1fPLeEgsk1yO8U2rXxd9InD7TJ4lWJLqR4F7hCOu35exG
4ZGtOLXna4if25rDFqeQXo7i51v9LZbTtz6lJkDW2uZW5Pm2P2er/r+FdVbH
TnMh/mbnfu2TJK4tn1rMtBxB8l8yd9uLRXhk6zcBig2JP1uNUcZgtRzxfzLH
6f6CGxYrtp5ve+fKu8gYLvTPM7HO6nOLXWXulvusD5S4Lnrb1mzJmCc8L78j
RPQtWd+iMaymLVhq8dme2SRzt88hY7Pjnz52n8vi0lavMhlPOVu9lTsUnV+w
jugu6z9b62VzN+uTNq7tNeFcwnGEr6fv2r0Jq/m38k0Sp1aT2Nq4HSfJB59p
Z9tjb/PZrd9Hmu6xdVSCvVY7EWzfyh0sPmxhnZ0LwfOyl0G04ha2lH0EOxfy
Oxh2D52s9db+4/RMm4MT3y5YVzDT6n9bj7LPtHbeipFp/PbvW/mUjetpPKSW
uKWZC/eVfb2tvXuSR082nGKZrJet+RfetNd2LtPfp/labUn8/CLHfKZvl7or
wcwyd4sDW/Vwq7VIjFzwbMFSG9fTeIiPlb1vsi5bPFh62i/4t3Cx1WM2Fsp7
bR5UsLfkmIRDt3LMLZ61MbgVX6WXwOKPzRlLrjTpE8sX1pe2cmQb40QrTjYs
v90xjWer98xqvy2sK/t3lovteTcbp0SPkXlNPjNd2zzdxuy0LiXebb5feHar
7l3iy/IL8Q2CA9O7CI5txfgWd2zlyJY7Sg5F9l9KrkTWpXB6iZeC21tcPNlh
2leyvRNEe5P3Tj4z2W1rr9DmPoQ3L3I9wilbPeQ2xgk+b+VrBZ/tPl2J8YKZ
xT7FJ0l9ieRQxG+3ciXbe2brkGTutveAxAjhPsKn5Sww8aULvVT0ZLneGpvl
nS19cm1bkvsQXC3711v4XPYarJ4hmDmNjdjH4t6Wn5AYt75a9MlFXFgcm9a0
+B6JTYvzW7a66Ge+sJvFaju2La4p+6QXtrV9L9OYS29G2de2GEW4xmKC1X5b
++mFg6bP1lkP69tE8xdMtnOc7rf4Y/WAteHEEaRWQ8ZjtcrWvylffPiiJkNi
cEu3XOt/oru29jGfmbuRNSL3EEwoOXvRwLbuQdaR1GPJu2xPo61JkvpSmaPF
RqtDrL4l9ToyhqJntrCR2PZiPKUmY3M0m6/ZdbE8SPSD5Yhn1h/s2hEMJz0G
hOOIP5R+mIuez6IrSr2djM3u75cxkJyr+K2tXRMdNfmk/X25rR7Xrdyt2M1q
sC1+KTj2zNzTYnuZ71b9oeh/q72va+YTFpXYt3FR6icFGwueb3HZFtbZvMD6
yTTfrdoF0TOFuy/0ecFVso5bdQmbR0zra31sS/8XG26t71buNsW+1ZzWthe/
0bGVR5B4seMh/FVwqXBZ2cOyeR/RQpOfkNqOreEXnt3S4UVbFlyd1tRio+Vu
opFe1b9B/NPa8EKHX+RZ5bulZm45esI34qslXizvWH8oNQTyfKKTL/aaiRYi
fFQw50I7XddvbV+TjceiwUjc2fM7BZOLFi0cZzWJ1WxbeccFNl7jFfHtx2vb
R2HjhfDONMeiZ6xGIrhB7n+8vqj32nOUFnNKf13BIoszRFtu6Qfbm0R0mv23
Zkq+Vnh8i+O2en4Iblj83LJD6asseEW4xr73gr/sOm7F7xb+WE1e6hvFJ7cw
x/bXWe1kOaXE5kU9pOzFkN/wL5hWxm/XlHAK8aWt3Gqrt3yyQ9F+Zb+S4APB
jes6yfSuLV1R9L8dv627FjyxfDdxU8EcYvOinS5q/gSXbCwQDUC+O9mwaH6r
Ccn4t/hxq8/N5lYW37bqpSV2tnSIzSPKXtJFT/JF/JLYLJhT9MOED+U8GhmP
1fykjkrmft3/Rrh78k+rXSe7FT1G1tT6NvnNEOvDW3FEuKngbfFbUr8iOpz4
z1ZOvYVRFscsHxVOJPFbuKZwK3nOtOdC/H+yIdF+No6s/1j9YH2baOlp/EQP
k5i9qBFN47Q6nPDRdA/xGdtnYvm6xO91rf6ihmDXjjyT3F8wwXIlwRDCiaVP
qZwJstxKsM5qMNsHQjCzcF/RGyX2t/59OvLv5BYNTOyz1edG/ORaCxG/tT5c
4resS6nxlrpBmaP1YVsnJJxr49HyQulTsly5NUcbU6UuR7CO1PztmVBikxL7
xLYEn4meJ2PYqhFNcyl7lGQMW1qIYIJ9fonfYpMLjC15QdGHxP8n39vCVYvz
JH5tDjVxfcnRbP5ucX7LD4kvEY7b0oeFF4qeLNqV1CptjcjqLpsjE74rmsfi
w0Vt/AIDbcxO47G5RhnnNc+WeZX9SrJfY3MH6yfk2vbGb+VEdvwX+61EHxYe
t5qB6AfCZUWr2PFv6a6iga2mKmMo+so+x2Jg2eshz7T22ap3WZ4leWLJv4h+
I9xacoeL660a4JafE76wOr/oRsLjpU+M+GfBHOvnW3FNYtP245W6dOk7LeOx
zyEYaHl8ev7/AFVZc3E=
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4083567256423497"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "\[Rule]", "0.3931776285171509`"}], ",", 
      RowBox[{"4", "\[Rule]", "0.4914382994174957`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzN3THL/dtW3fFrFIltXoBgKjFF0EAa8RxsYilokjbcGwxcEARDEDsbu/Qh
6QOigbwBSwkhGLC3s7xvQLDKFSQ8FhM+X8ba11v8D/ts9v7t9ZtrzjHHGHPt
/fzc937nN/7DP/rOd77zH//xD//zG9/9vV/93d/97u//5k//7f/81nd/+1/8
0m//5A8f/sHf/fvbx3/+i//5m7/4p7/+7f/6w3/57Z/+p5//lZ/4y9//5s/+
6//+5uvz1+Ovr7/e++p5WcPymk9ff1lDjf8n1iz7tezpq1z69H7VNXzi9UsM
P5FvP8q8evW5r3Dgx2Ffaty+Pv6ff/Sdb//V//0f3/z7v/r+t//kp/7Nt//s
v/3at7/+zT//e4//+gf/9pu/+e//+pvv/5df/nvPf33v9fh6vTwva1gef73m
J66/rEHW9jVuf/LHv/D//0k85bHsb82B5bOW17+Kg6zh2ovl9UsMP5Fvn97r
T8TnFQ78OOxLxYQrhl+f/8Ff/7tvv/d/fvnbn/3+z1Csrvden3u95uvzsoZX
j/+hPlfWcD3+Gv9rzct91T26HkteyeuvXKp59WpfrjXUa8rrlxh+/XflTM23
JeafqP1P73Wt0x/lvggmXJxf+k7l6sv6r8ef5nI/ys+VNVR+UvFZ9lRystbR
dc2a/19zuNaF7KnkxhWHqxdUznzhQ42h8MxFa396r5f4fGKva1/4xL4IJlyf
ddWOrKf29wUbrzp61d+vz/rE59brSG+9+njFJeEhkldXHUltfsJzWPCn5uHC
ja/nr5q97l304Ctv89N7LTG/4iM5UPe68lvB5Ff7csWk8rRrPbW+Fl9O9FG9
vtSL9NZP+5yvtOd1j8JLqxao3KPmc8XV6/WCP/K5Es9FC1dNfeXP4k1VrHi1
15cXvfjwldtccRNcFax4tS9yv4I/VVNIPVa9IGuWPBGf9hX+Vx20xKrylooV
gqXS36VGruev2FYsqv1U6kK4d8WKhXMuGFUxp+5v3aNa7wsXqmuQszHCUa9c
+oTuEI5Udah4DotPJVgqvbXiXsV/4djiM7ziWsJjr32XmMvnSjyXWr7wTThM
5R7yWYt3JzxQuMpVj9W/vTBH+MDiy13Xr37I4nNKjgmGCLbIPi49vWrMpWYr
fl7XFL9Oeqvktux7xZDFexF8EF1fa+2a+1TdKpqo8szK32RP63k5ycmqNa51
ynnsqgGv3FvOHMr1a329mtVWn7Pq2eoBVv9W6rTypcrDq6dU8XPR41ctSJ+S
OpLeIRy+9gjp+7V+hctVrVQ5RtW20uOqBrnwXHJvOQ8jOXDV9dLTF/9ZZqN1
jim8QtZf9aDg+bVHss4Fk2sNCibX+l04WJ2bVJxc7rd6mFXDitdXfZ6aG5LD
19rE65A+LvtVObDs0SsOVnvNkldSj9W/Eh9JuLRgb+0j1UOWnFy4euW3FVtq
bKXuFr0gfKnW9aLRRHeL77T0O+Ewwv9FX1Qu94r/C5Yuc6hXfrt4huLJVA52
xbb6BlWDLDpR8nDxdesZhjqrfbW2qikWnfgJri75LOsU7732bsGiqtGWeYRo
usrZ5JoXntT+UnviMmMSj6Li3oJdwtmqTlzwX+akUu9X3K77Xc7H1seSY5VL
Cx+76k7qsa5Nck90btWJC1ev/FbwX7ho1ebCwZa5atUdi19XefsyH6kemuBS
rQvJ+eqBL9hVNbL0xK/PC/5LjUuOiVYS/iCPl7MTwsnlu4E1D6uvWNe2fK7E
vHJU4eq1p0h9yb5Lz5U+Ljlf56pSd4K39TxA5e0V22UNch6mejKVl8peLJpR
tJXwAdHIV+7J2YCKt1WLVTyp66mem2h84RISZ1mb4ID4q5X3Lt549VprDgh2
SQ+trxf/QfZC8lP0l2iQV3hSvfGlny51VM9LiH8lulVyTF4vtSa8RTBf1rnM
BCVXBU+qd1H9Url3qUfJq0Wb1Dmg9LtrDdUbr/tee0StI9Ha8vqKJxUzK+ev
eLV4kvL6BRvFG6nzyppLdTa35EPl+XXmLtxDvnsoOkg4hvAE8XaqZyL7Ll6E
1J3w8KqDXnE5iZXce/VjZU8rRkk8xf+v65c4y3sl5tdrqg4Sbil4Umedgo3C
B+o9Vm6zvHfRpPJZEsOqJS/8X+Ymkj91/rWcE6i9qWLO0qOrR125dPW3l94k
PbfmsKy5nhOQmrrWL/dY/QeJv+i+6tdda16+L7mcx5B8rt6g9NA6X6gxl/Uv
fXbx2OssoGKF+EvLDKJ6GrVPXZhT80ry/8pbwZCK7bUGa2+qOqvq4qqtpB/V
/r7gWD1jU7nTKz1ee5DouzoneuWZVD5Tf5+q+hvLvVyfu/DD+jfs5PoycxTu
V72RCz/rWaPq38p+VZ+/5pVgrOTPFasrtgt+Vk+p9qnKn4UDCI4t3EmwcZnT
Caet3KD6ezWHq2ciPK3qL9Gz9Qzb4jXVvZCe9fU1FZMXnSv6qGpbWUP16Cqu
1vyXWnuVJ1L79e8jLBqq9vH6na8aQ1mP4EP1Qhded12n/p2yT/e1RT/KPtZ5
4qKhFv27+O0Lvr3SfdILrnqXnJf8rx71K35ez9tUPly/o1H99tq7F01dH1ff
cqkR4XLCsUUr1e9aCq+71iwe76s5jvQ1qYVrT6/r1NmNcLw6Y6r698IK6a3S
O0TPLn5mvY74MJJXgkt1/rvo0+pnVt1Xf8u05p70gtqLl1mY9I5P8CvZa+Ew
yyxDek2d6y1nvGucxausnpu895V3WjlP5bfSE2tOLjxzwbGql5d1Lhi71PtS
g4J10k+/1qz0Jsm95RzUtQbp14vfW70F4Vfy+itWwp8lD4V3VV/0yhk54125
hPCB2ms+8fvSdW5e8Ur0XdVur+YUy71U7JU413yoGCvrF75atWHt0dc6K2eT
fRHvSHRQ5fPCByqeVC9d9ldwW/pUxb1lTiF1fa1fuJDgZD3zVmtcNOn1+lpH
4rNJj67cu+KV7EWdy1QNW2cBy2+8L3GWfJYal74jvLfyh8ozRadc16y/R1Fj
Ivzwer56GtU3WPRyvb7wIvG3hYMtvujiBdW+WXOjauf6m111NiQxrN5I7fvC
hV6dWarnFmq/uz5ryW3Butp35N7r2Zh6vkW8+qq1Jcdq3IQPC+Z/vX6dg9RY
1VnA4iO90h1V10gtC4epfbM+f9XI9bzMHCVW1XO4errwT/lXOWf9W28VSyXP
a30tZ1klbhUrpAeJfyK9r565rV6TXEfOdVQskhy48vba08WHr+sRnStcXXRf
1R2Ln1l1R42hcOzq/yxnnKoeXzwH0a3yWGK76DXxhapmuTBQcqz6D7VeBCuW
swTiQVXOI55w9ZwvbK/XqXMEwcM655IeVGcEy6xccrL266q/Kg+/3it9tq7/
yr16drf6gYJXC95ecas8//pNHqkFqRHBasGxK25V29b9Wvie+HuSn/X6greS
85X/X/tbOadgS71m9dIlnsv5f7lmPecgfFv4+eK91F65eCZVe8r30SSHK+b8
KGd5tWfV7/7UM07iOQh/rn3wilX9LoPghjwve7qcJahxEG4gs37ps1Kn4n1V
ri79XfyN+p3W6/qy11Iv8nsp1YdZZoLSZ+ueVh0kGFJzsmKs1L7sUZ3lSV69
8oXqWcHKixZvufppdS5w9euK89L35SyB1NQrPVvrt/pRggPSZ8UnqXOr+luF
snfSy0Tnyn5JLQgfqPgvXsGrM7dV6wnHE4ytvr1wUckHqUfZ0+uf4EP1airv
qp6w4Mwn/Mzqo1aP+rqmzEAXPVv5mOgpObtS9ZTEapkh1l5Z5xrCDYTPV50r
91t1geCD9GKJs6xHcL6uWR4v1xHMXOIpcb56QfWEhSNJ/l/3W3+vpvaFukfV
i6jeoLz+1Xclrp5ePbrqM1dvp543XnRl/d5o5UjC/Sq2vNqXa/3V/xeNU88T
CqcVT1v0puT8q/PkdWZ3xVN4ftWkdd4k66ye2zILrv2rei9V19Sakh6x6JeK
Swt2iTasfle9x1qzVctLXgnGXs8Lt3nVU6SOqo6r3vIyW1k0lOgReU31CiQ3
Kp+pfb/mgPQL4Vd1/iI8Teriiv9yhqTykFe4LX2nYrX8E09G9nTRntfn1roT
fFt84EWTSv1K31l4r3BvqdPqG1f9WPV7zbc6x1y0p2BUPatccb7yMeEwohek
p9S5ZNULn/iOjMRHcFvmYoLhotOrN7Lw0uo5C4ZX3+mqtYVXy3WqvhM9VX1I
6V/iMcpcuGoEucc6P128XKnfpf9Kb63avOrKijmS88KXFm218Dqp5dpH5H7r
2bBFf11ru3xFwYeqcURT1JysswM53yU9qHKwhUMunLZys4XbCLbUWcDiaVQO
uXhKlcMs+ne598U/kXsRHKsel6xZ+sintbnks8xKhCfXHJB6rDMp6dc15jVP
ZBZZZ0BVCy/xEX5V/edXGqHyxlffCxBevXhxi/asXKhirDxf55XCSRacqd+p
EU4lfWTBlqrNK57UHne95orPcmZ4wSvpNZ/w06T265z3io/w9iU+gu11Rr/w
+Zpj0mvkNdK/JE8kN17NeiSvBOtqLi1YV3mm7Gk9z1O9/WWGK/3rFeYLbkts
65k66SnL99zrbOsTntsrbBHvS87J13p8dX5DOHDFlurJS67KY8GHyvnlsezj
4v9LfCqPFW1Y+WfFDfGp6rl92dOaA3VuvvQC4QASW8kl6YlXPtRzVgs3vmJb
ecsrbKl6uZ4tlHtfeHV9LLNR6YPX88v8QnSQ9GvBxgUPK1+9cKmu4cqZ6sNX
36CeaRdftM53XvV0mZvL9+NqDtQeLdqkzjJkzbWW6+8kyGct5zdqbiy/KSd5
W/uU9KZag+KlCFYIPxSOWjWI9IWqPauPWrlo9eQFr+q5O+FXFw+sa6u4V3F+
4d7VLxJdI/1Uak0wtuo4yX+JT+XD9TfKJE+WmC++4isfZulT1+/0CgeoekR8
ieVsuXD4xQdYZpc1brKG5fnKDcR7WfpsxRPBPVlzxYpFd8t6Fp4pdXq9fuFv
0mvkrKNwhuV75QvHqzz2el7wUPa06nfJMdFKdWa6cC3Z05oPV0yqlyWzS+G3
Vd9J35TcXrzQOgMVHiUegtzL4plX3iu6W+bd0kNfxUR0X639ZZ1SL4smrfsr
Oqj653UuI/1RZqZLzos/L3st/FM4nngCEv/KmQXTXuGqeCCVlwrnES+0xuGV
ZyLY9UqPCz9f/GG5/pXzojevmFTMkdoX/iPPS6zqfl15W19f8Wc5OyF9tp5/
W+L59XPlt+ilxmtMqjap3Luec6t7J7gqvLr6AEt/Fw+24mH1TIQf1jOEkhvC
meX6FcPlzIzsqcxGlzOKdbZ1xVA4z8K1Fixa5s6Vv1W9U/n8K51S+fnih0ud
Lv65aIFXc7HFv60+QO31VTvX/VpmSVIXV50uMV9qttav6B3x/aR31zOZskfS
X+r9vuLJoq3kXurfqqhaUmq2/n2WZd4h+1U1juB59U8WTiucsHLUms9yfZnp
1D16NbuRnnXhzKIfhRtXXF04g9R+/e3ZmtuiTQST63n16/oL56xe/auZhWhe
OXd08RzZ08U7qvxQ+F7VtnUOWPt79VRrX6g8sHIk4RvCIQVLZf2Va9Xck70T
/Sg8s+bAwk9e6VZ5vfjV9bMkbpJj9VxKnQPKNaXGqzd+cYz6tyRkFlNxVfjG
9d7au6UP1t/Dl/4r+SNxW7jrK55Tffhrf2VPq/apPKH6S8IBKjYK5givq/xE
ONLCkxc+L1qv9seKk4t+lDjXOUXlz9X/Wb7PtWDpwpeEA4gGlz61YGztC3Uv
qh6sPOeKyeLJf2LeUb3KiplV54ruqDz51T3W54VTLfv4ar6z4KTETfZRdGs9
byM9S7R8/T1q4a7yt/ME3xYNW/G5emKVz8jj2u+u9y4zGukLlVfX+cIrzl99
nup7VM5Q+fx1zeUsVvXwl78Ht/BY4SpSa4uHWfFKuGvlLXLvlZPUv20hWmzx
kaRvvpodXHGTnBccXryIipN17ypWy/NVEwlPXuYdtf8uPkPNmepXLHpw8Ukq
/1nyquqjWkfyfO31l9ch2Fs1mtT+df0L66R/1dqsnEG4VvX/KzZesa1noqQX
y71UfSr8sHKqK5fEy61apvLeBVsqH66zuYr/EquqB5fZtPS1RfdV70i4U/V+
q69V57YVS4VjV01XPYe6v4Iz9fvglTPL2oTziz6q/o/sl6y/1nv1EuWaiycj
+qvO0Sq2yB6JfhHdLZh5vbf29xrzei5FPF6J26LjFq0t16/9Wnq0YFfd08p5
KobI3lXcWHiU5Kfw0lqDtZYrN6izJMkNyaUrVnWuJPsleVJ9qsp5Fr4henaZ
w1bdWvvsxcEEYyVWCw5LPsveSf0u+7vkbfVhKu+tukB6U9XL9UyX4Jtw9Ve8
8apB0cJS1xW76vega25X/7DuXX1etFKdF9T5vvRlwczlPIxgY50T1dlK7UFS
pzVvJeaCFcv+ijcr+PNqDlI5gLy3YqbwSam1OhdefM6Fw9R5tOBn9ZeWM7e1
Nusc/9X3RAR/5B6lTqv3ctX49VmyR4t/Ijgp2FV9uSX36oy4+nh1Nid8+Ipt
nf0tXmXtp69yW/pLrdMrhrJ39ZxA7ReCIdXfW/jVtR7pU5Iz9b4EV2vPqhxD
1im6Sfa9nqupnnb1w0XX175QfWC594UfSr+o50ykz0oPqp5ePTN25XDFhAvb
JbdlH6+8qj7V9V2A+n1/6ZUVf2oPrXN84VfV6xMPQfhwPdNY87N6AsKRRHcs
/qf0aNnTi2vJa2o9Ll5o5QmLjpN8W/iq9ILqJ0vtL/PuT/Tryufr+Ye67/W7
YEuvlzjL3lXuXTl85SfVy6q/kSt5VWdzss46z63eVPXDBVsWj67WvsRKcHKZ
I0geSp+ttVb56oU5Fbuqb7n456/6ddXa0teqd1H1VO3XV26Irqw+j/S+BXNE
77+aV1bMF+0geVU9c4mJcAk591V5QsWBRQctNV5r9hNzijpPqV5u5X71Ny0l
5vWcXp1V1VlJ1bb1O33SywT3BM8lttJHlrq7MKRyTukplb8tGrl6reJHVb1Z
fbOKydVfEk5Y/YEa/6XGhc/UnlvXecWtfjd2mRcIVgh/q5ykrlmwonqtVWtU
v072ejlXUL2LV/gme33lycU5F++ieoDCbaQfLRhyvUZ4juS2zEMr5xRuXOdr
4tVfMZF+VPeuzqqqb7D0jpqfi/6Sc0R1HlF1U+Uqcp5B9FHlh/J85VHCtxde
WvHtwivxrK7ryH5J76g+fI1Vnd8ts8XqsUhNSb3IWQLpa1WzLJ6GcLPqR125
Kj1I9m7xwKvnKR5UzdVXHLJioPAKiZX0U8Exud9rH6Vm5b3VB6j6qOrZ6jXV
nLzWLFyx8kDh83JNwbQFr6rfUve6avbKUaunIa+XGhEPc/k9q8UfltdLDK/r
V824rK1yhuqB13mcnJcT/6TqF9mvypeEoy7csvoDVRNJTlbuJPOayv1kj5bZ
SsVzqbWFj72aIdb8rL6uYL5wg0sTvdKb4gPUeUHVQYJXFbfrPEg0jrym9tyr
NiunFQys9VL5qvgzCwe46qt+b2jxBCqfrF5E7RcyN/zEDEWwrnq5i5YRriWv
qVxIzq0J5l/5KbOqqjflvq49Wl5f5wKVp1W/95UvusRHakfi+cr7kjy8elbl
tHK/ovWuNUheCYbL+is3Fr4nPbFyktrLhHvXz63+be0p9bFcX7iKnHkTXrR4
vFXvSO4tOrfmcJ0j1BhKbOuZvcWXll5W66J6X9VPW37rZtERkkvSC+qcRbj9
wuskVjKjF65eMXDhihXrxCtY/Io6F6g+xvJ7SoKZFcOrF1T7SO0ddY5WfW/x
c6R2au5J/lc+cP2TnKm8qNaO6NCae+LhyJrr9yAEV2UuI/teudCFLbVfS5+6
arn6rnKPokeWGc0yK5Q8kdmK8CLBGcHbOjOSf5UnV5+8zp4qZ6g58Gq+L1hU
c0a+c/FKE9U8r3V91fir35GTHBAOL7xCPCjRd1UPVn+y1kWNQ9Wb9UxC9Spf
9awrV6+1VX9+iafs6YItlZ8smk4wue7v8ppr7658EDypXPpaQ+1fdca9aKVl
5l7zc+HbwvkXz7n+lsXij1Wu+MoXqvtecaZi/lWbFWNrngvHq/qo9j7Bf8EW
0cWiH+s5AeFFVSvVx8LJF19LfA95vsa58uelL4sOFf0u9Sg8p/Jbiafs9bW2
inWCn8IVFzwU3Ki4LbyxaqLa1ypPEK5SuWWdIcqMSepL1lw5vOSD8Oo6e1ow
v2Jy9bWqtykcqWo0qS/RxYJ7y1y7ziLFZ5P8rDksPUv2rnpBEs9XHH7prXV/
BROkB0l/lL1Y5hryuVVfVE+18uTaT+v86Prcmkuv7nfx4mTvqgcrvVV8AMFk
8UDE53w1b5IzAKJNrj2q67k+VzRpjUnV+LXXVPys+F89K8HV6lcLNxB/rM5e
Fy+u1uziN9ZcqjO+yknq+R/xZxYfQ2JbvQLBk7rmxUeVWhBeuvgwr3JpmSUt
s/U6FxD/R3JA8kEwofoVsv56pkV0gfSvRetJnYo2qV6c4KrwQ/FA6txk4bfC
SSoPr/VeNZ30ZbmXV7244oD0o1pr1RcSH0ZqVnKp+n6SP1dtyj0Kb6yarvIQ
2SM5i7LwrpqTdc7y6vcxqpdV97FyFeGfi5+83Ivs0auzW+Lz1NnH9fzily5n
CBe/cfHxJLbCMRb9fmGO+EuVU8lrlvlCnTO+0sjCT+QsouBn9RzE96j6pWJm
9ZOX74lXb0f8setfncNK71687ldnt657rJxW8F96inDOKyaLB1hfU/uLaHnR
BVLvgjm1v1SuK7h61dqi32sfl8+98ErWsKytxlNyXvq+1PgVt6pbRbNLTi59
v/qiwjcWbll5kdSm9NMlbtX3qx5IxXnJk4UD1FhdfUSwscah+ieLNyt+Qp2b
SD+qOSwapPpsS++uOVn7ctWhoh9rb5I+Iuc5ha8uvVX4ktSX8P/KjaXPSp5X
b0fiduX8K4yVnL9yQ3hRnY1WX1HwuWp88dslVoIb9Xfkrr2oa673Ljm86LVF
19SY1N8UvXDm+izBZ+E2wouEY0sOyFxAPGHhLbX3yb1fa6heTe3jC25IjlU9
tfwWk+Tz4r18vX49Bys4s8wI6uz4FT+pZ1Sqb1y9CHlN7X11vlA9jaVma/0K
Hso1xTOvswDRfeJZLR6X6NyaJzUHljP2Nf+v91b9W/WFaIHl9y7qXlxxEG4m
2vPV+ajayyrHqzOgqv2l51bfstbaFRPplTW3RbPXnKl9f+kFVVMs+Cn1W+dT
ggP1vuQsSvWW6zoXb/xVH7/yVmqh8vk6Z6lex8Llqk6X3Kj9q3K/WmvC+eVe
Kh6KnyB4Jdgu3EYwQXpQ1bZS46/0puxjnWEJP5d1Su+unK3ig+RP7a3VS6yc
s2JmnU8JXom+E1yqeyG5UblcvV/Zd+mn1RuXddZ+Ub9busw6JScFHyqflNwQ
fi49vZ7/qbqg5qT0ZZlhydokT666qLpM8kF6xyv+INxG8PziZoJLtW8u/bdy
j9r3qw6q+yi+StUgMsOSGlnmCFULVO5a/TThOfLexausfFt8vOrni5db11x5
+/Kd6+tx9fYrbxffafEPF24puVe/iyp5Jf2l+rfSf4UL1Z5YsbryosqXqq9e
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
LLxX3rvMTaR+F15UX/9q3vf/AG+wysQ=
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "10897379800108189"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "\[Rule]", "0.14513865113258362`"}], ",", 
      RowBox[{"4", "\[Rule]", "0.8513765335083008`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1: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
i7vaeLdnTe4n/buCRaResDXUdF3izmqAJHZsT2dLuyP4do1L077IuRetppzX
1v02Fgp+lt81lJnbLY2IxLKNkcJLrW5Qros+QGb57EwC4UJbWhZ5r9U9CK6W
WCv1psVwq92RvH8RvwRbioZJ7id7see1NbdzMf9jaxYbC7a3ZTk8sYOtkW2+
tthL7GPzctEHCt8j8VX4LflYPYes7XpG1NrNzhGVHjeZZ9uKXxIXFs+tL5Xe
BLmH3E9yR3mOxUPLxwgPJNyP+KetL0o+LdzM8mRS21pMJjmo/DbB8mp7jlaT
J7WSjQuCPzbuJpuTNdjYtHmw9GWIf9o6mmD49TMLNyM6JMF/Usdd9AuIrSyf
Kb5U+LPt4VrfIHnN5qzS87UYZXGvcNqLXHzB20nus3MCVmst+vxW/VXWZnUV
EguWb9i8QLCo9IWJDS0f2NItydws2fuWn5O1Tbmy6NJFw9/iD7beLxhF5uvI
+sn9W7nYfkhc2JrI4m3pEV/kVvJ8WwtYjC21xvT91t5tvNta1Z4pwYoL/kP2
Pq2h+Ln1K8tnim5A6u6LHEo0KIJRBBunM7XzS1u52F6TnEj8s+Bt0aAslyi6
ccH5wjktLyUctey99OuLhmw58zX/mbCF4Lytd4pflXkGmzcL9pYcOuGVnWOZ
zsLGjp1NKvVUmY8leba8q/SDCue3da6djSyxea1FW25J9l76zgWH7f1Fn7H8
h8yT2Lje8is7K2j9356FxTGSQ8n5khxNMMrma8sbSZwSHCucv9S5JHZsPi0z
GwV/CBaRM72YUbG+Z+Nxy27WZ+xzSLxsrYHgidVGCIYXvyKfLf5JzsLmVtKz
sNhO8MfOjWxxFcKfCYZbzm9zFuE8JGZtTF1osxYHSiyTWmNLi7bclcSsvSY+
U3oEVheya7jg2zbXk5pxS0snfk4w0HJ4UgtY/WErlxGMtbhn9YqCq6SWL7WV
jR2Sdwh3LfyW+Izl/FZ3tZhs+QzJs2VmjHAVi1Fb/WgbCyTuCt/e0gNL7JM8
O/l50YusDxT8sfWI7T+SmLI8jeDMFk8j9ixaPYmdoonZWNvirpZvlzxle1vW
P4tWRupxi1GWL9n5GRsXds6QrL/MHpTYt3Fq83LRDAtvtPzN5jKLUVajLvOT
lqdZrCvc2GLm9Lelf0ewwnLXaW1b9bWNHfJMiyEEx+w9ZA0W3yyG2FqJ8DGy
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
WF1wg6zNzt1taapW1yX2t5yTPN/yAdJPsXlqOtOnrDcnfCBayhY3LvUXOVOy
R+sbZMZsi/8T/C86J3m+rTFtrWdjgfDqEo82XxA8JGdEcndZs9X/S9+Q7IXw
c2tzYn9rK8JzpueU2LyoNy3mWE4yfW/14dJ7IvstcUTwyvZwCfaWGRtyFoTz
ED+0OZHcQ3j1ZE8Sj+WZBQcKN7iov0r/0T7fculiH/u9PbvpOTY2t3i+PceL
GaEtbbZgi722+b342OTnVjcucW17CkUPJ/nI6gy29re6pY19ggNWYyzzHsQf
LmLH5t8SayRmLUct+rPVFuyZbvWUrTZIcIysh9jB7uUihxLOT/KdzYNTHBF7
bvFbywEsFlkeSHCs+J7VSexs5xZnKDVm8X+LRTbPEhwo+EZwe0tPLhqF/c2O
zSPWDiWWLdaRPW71SsqMFpnJKbPoZV7Ccs6tfEE4beGBW3NZJF5K3ilxV3DP
5guLzwWLrJ+TPFvWttU/IrhE1kz80Or5JK9NdiBnYes+skeCq8SeF35L8p3V
M8ucw7QXEr8FBwhvIfFucyLZC1lPOWvityWmrHZq+zsWn0uP2GpWJL6sD1s9
ipx7iTV71laLtnsn15b7WW1zywcsByb7sn3YwiFt3Urwf4unkT2WWCA1lM0F
FhMuYoTcP63Ncv5Sd9t8VzBzaw5hK6Ys1yq6FtF1S64k2lGp74rP2NqnxGlZ
v+3D2nghcVGwuuTx8kzL7cn52vVYTLiY8yfPL3Vfmb+177I+UGpty6ksH9g6
IxKDttYgvMv2/oitigZecj3Zl+XAZf3kvKyfF9yw52t7RiUf2VrP1lAW9yx3
KjV14X6TFmRrVYt7Zb7F4sb0/FKbWDy01/aMis/YHF34HslxlmdazYfwvZJP
yZrt+m1OIXawsVb6fZM/F65LfI+c9Zb+RtazNc9QuN+Fxlj2QuZbLI6R59jv
S762eFh6vsRnJnsS/X/6lBqQ7LFoGoVLF/wvmozNI8UPSyzYnlHhuqV2I7Fg
80Wpix8/Vocp3M/OCRDOb/difZicnY2dMntPzsKeY+lfWJy3MwCTD1jdoNTF
Np8WLm01B5JfrK1IniK4SjSKMu9HYmorDxIcm56zpSVaXlQ4j42j6ZnEB4i/
2fuJHUofjcSU9QE7o1g0n+uer8UccnalBrR18Vb/q8Rp0TEKl7C+auOO4HyZ
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
T/eTeC/zHltalu3LF23N9jsKNpZeT+n5krgrsUN8lZyL1VjI/aV3b69LLrM9
PouTRPOx/LNgjrWP1VdtjrDPt/NLdr5xwgRiK4KrpWYn2Ehwj6zN5qDyfJKj
LTaSmLI8ivR8yZxV4VeEO23VDgS77Mxb8ZMprgk+Fywt9cv0fbGbjWuCM8RP
Sv61sW81T7JfyzMLV7G6sX0+8XmSQ4lPkvO1NY7du+UelseSZxab21iY3mX5
j60d7IdwAGLDi1goM3VltrP0i63PED2q6GOEA1zbk3C8olGU3GrXRvIj8SvL
SQqmFS5he17WH0iMWO2XrNPyQBKPNheUPLvVHySxU/K1jYXJ5oUT2r1YnmZ9
hvB80i8on8LHCg7YdRJ+Uvi8xQ1iT7JmG/t2npzU3SWPk9gnubXg6laOJvst
vx2w+ryNWdsftLFD7GlttVUXlDnD6exszFqNi/hM4XuWT5aaxeIAWT/Zr+1X
2vk38rFnNPlG6RdYPcrua6tHPOV0kjftbIY9C6uxWDy/6J+W2LnGLpubbF1g
8YropdYmdq6vvIvkI6sXkX1t/X7tQvcg9SbBHGLb0u+zzyR7t/yK8EbyPckR
hTPYNdhZGhKPVisj9dpWH9+u0/rPFnYV37N4aGcOtzgAwRlr2y0OsNXTsfhG
dJ6iexDfKJrwtBdbs9vfd5BcTPZLfLvMEthztJxhq360PG16JulDlT5gqRHs
OonfbmEXWTOJZcvDSW4tfRabs8oaSi7ewnPLHy56CmSdRRMgsVMwhGBL0aBK
D7Hk32kNFzzc4hjhQnbNttaYfIzk8emZhOds7deeEan9t7QvYluLA8RWhLNZ
n7E5q3Cn4p/WttbHtni1rd0sfhI/IXshPkDy2lYeKfnX8rTSmyj9U7KXyZ6T
zxD+aXmC5Tk2j2ydEdmjxbpSF9gZD6sFkfqd4Iz17a06wvaarW2LRndRy5Da
zdZ3F/naPtPGpp0TIPnXcgySQ0ssFC6xxaMIrtq8SXgIiQVSx5EzIr1Ce76l
LiA1e8HVyTdsTUryZtF5LF5ZX7WaG7mf5MoSg0THs9rRhV9t1a0kt5L4LTqn
rUfI3ot+VbiNnZewsWn581YdUeomUoMQO5NcT/QlgiEl15BeW+m/b/EZggnW
Vy3OkP0SDkPqUIJdNpcR+29xmIJdk8/b+23tY2twgl0kTxVtwfpDyb/kfrIG
+y6rmRQessVviZ5p+8hkDTbXFC3a4mTpC09YRPIyye9FoyM4Y7UysmbyHMIl
Sg90i5dO7yr6f9E9LJ5MsWPxZLID2ZfVAO17iY+VupXkkS2csfhD1ka0dJI3
LSck+Fzi3caa5RvEhlu92pKXST66wCiCh7a+3tJAiH0Kr97ay0X9UrQRco/N
TYQnlLkUm19I3VrscFHXFH5bfLLk3HL/lg8QTrJ1drZXW2xeYn8Lo6yuuBVT
F1hEePXjmv8Lukgu7Q==
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "9696870909078497"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "\[Rule]", "0.09401018172502518`"}], ",", 
      RowBox[{"4", "\[Rule]", "0.9059656262397766`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzVnb+qtftVhYOKJL0XkBQW0ULQUnI+tAlaJiCigkRRUgQORES0UazEG7C2
VbDwCrwJLUS9ABsFvQATsNgBJz4Pz5zvWqc44c3H2mv//sw55hhjzrX2137n
82/9/o996Utf+oMv/+B/vvWdP/ql73//O3/87Z/84f/5ve987xd+/ns//oPH
P/vf/374/PWf++43vvXTv/bpv3/z65/I8+/+1299+uaf/+qnb//LV37kubze
/ntZj33/J3922svFHu29lPXY97mOq61z24qNcv5b93URe1txuHW2WzFzHRsX
r5me//6v/+oX//0v/+Ebv/75H6Jn+z52DXZtW/t61fO0/r/9m5/5P/+7uDvy
XNZD3qe853UMPBlX5Py37uvJ2HuHuyPn8M6xcbH3j//+b1/5k89++T9+4tO/
fu+3f+TZvmZ6/aveZ3rNq56ntdn7LedAcLisp7wPeU+7x3JHZA2vioet+7qI
vXJHW3dH9rKFUe+AOXbvW3n6RXn+03/+6qff+It//OxrX/780eetPPqo7y7u
7uOaP/4usp5p7+R9yHtex8CTcVXigfge1z87xd7Ffdm7+7g2sq9rDHwSW8je
P/77x5+1efpFef67n/qnz777s1/99J+/8k2dC+V5WsNFHpW7+7i2kgsW6ywe
TvdYYsC+psRViYeJr5J/3/pZ8p4f91Xuq9xL0TJbGHiNOXbv5N6nfHwVZy7P
07lteS9WS378bzrnkkf27izf28JV8nyhO8pziasSD18UPkZigNyXvbuPr7dr
njhw4fDXmEMwvPhFW/rxVc+WM197ueQeP67f5pG9uy1tXrjKlDtFj1/4OU8+
T3t/Zz5G7t16jOXupnMjZ1g4/DtgDsmvrRy54Mxbz8QrsN7Lhf/28WcnTmj5
idW2RZtfcJXpTIh/suUbvOp5wi7LY9+NX013Me3Xen1TbNgeyhRvBCtehTnT
uZHYuPC7XvW81d+x+VWwkfg/Rd9NtYNgLOHn17hna1nBsXeYByB5bWPmVfzK
8mfid21xoa1nkhcXmDNheImNd9aYW5rF1jtyRxafi9dN9B3BeRsPBKu3cG86
q4vcv+gRlJ7ddM6E170Dv9rCqykernmIzV+rCwrmWJ1lY+OL4vlbXW9xYytO
bI+V6MHiGZL3mWKb8NKCe0S/b2Hd1ozTll960ad4Fb8qeGXjYYuH2B6HrV+v
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
p3Ow/Mr244ovMe2dxO2TOEC+Z5Ws2X6vYOn5llp/jb32Tq89qIv+/oV+sXyg
5NfEbS4wais2yuxQ4UVW5054e/E5SuLhl9gmcULukcxnPokD03naOLHciZzb
1n4nDHm3ngvhq/bZ+s/29VuYSbi0XRuJ4TIH9ap4sDlYeBHxbSw+TDhsPdWt
WkxyofgSxe99FQ7YPZLfVbRV8d6J10F4zvXzhZ9gP8NIXl/i3PJYEidWY5a/
J/KqeCD+hs2v6TUWKwr3I+9J8qLU1q2/XzPVO+tvEBy+wAG7RxKf5e+8WDzc
8hinfV08b+nK6Txt7Sb5e9Fjsl6Hza8tD3bCqIt4ILrGehfTf5bHlly7eE/C
M23NmnKTnHk5B+uTFBywMTCtzWKI1Vz2HCw3eFUfluCezXFb44iut7E9/a7S
myvPZFZqy2+/iAdyPqXObvm6Nte23tN+v2ipI6UukNpXevHX8Un0qeUwVpsU
v9T6e+/m8ZL5CuJp2DlDu5cyS2NnOUpeEL63xTG21k80/vV31Rb83MKfMm9j
fc6JI5G6QHRHmcO0OFDq1MQZyL9bfCC81M4h2O/rewePt3z2fHoNwXY7I/ck
x7A9L6J3bC/Yns9Fz47cY+mx2lpMzsrWpuIRWV5ne+gkxiyXKLz3wh/b4mNb
mGDf3+oU8rPXHu+UOyTXSj0t/KHERvlOlYv5BIIJVuNs9eyKH0V6rLYWk73Y
+Z/iEdnvXiiYQzS1vdMpH0td2/LHLB/b0h1kHoCc54Qttkf/pOc/7bf0W7fm
xGz/t3AMywOttiL3bvmM1WiFqxA8JO9T+BvhHlucsHBv4pttccVSj2w9vfDH
SF5MmG+9lFKvCb5ZTnjt6xb/hHg71hPewt5Sa0h9J3WwcLnre59yxHKVKZYs
R7rY13VOWe5tfQyCyRczLRPuXdRNgo1WZ1lf0eJwmVHfiodrz79giNV9RL8X
DV70nc2dLd/vws+3vQkSe1uabmu/lvNs9UQItkznTLwpy/8vvhf0op9r+x02
Vq/PrfghNh6Kr0swjcSwrZVkLwRLSw6SM7E6nXhlhUtf/J1uyzMvfNTiD5N9
WRwrPZHi0xLNYr1iy9MILhUvl/gqRGsQLCV8YOvciLYlfkLpKRctZn/X1lyK
9Vi2PPPSB5l8pwnnC5e2HGDLoyse7xbGXvCEaY/23AhPu/borPa8qOn2c8pb
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
5QaWYxSNY2sQwUDrVZYzJ3dhY4xwVHK/F32NC951weEnnU5igOSF9W0mTCjP
0++9/tyN7WddcAzijRdP5v/z6ii2b/lgJadsXbCzeTbetu6I1F/C1cuZWx+m
+JxEc5V4s75H4V0kHspsD4k9ElfFi77w3GycFJ5MOOqTn/GcsMjiBuGNtsZZ
D8TqfevD2D4y4TlEE1mNXDQmeR+CyfbMp2db+4hmKfWx9DUIPpNnwpcITtq/
dTKdla0R9qyuPbfpTCy3sXdnvYsL/mB9J+vnFP1Y+jI2XwhPs31tss7p3y0P
KRpzi59P/KF4JvbupnpHfDai0Uhc2ZmTrb4AOcMtr5Vws+LpEc5TcoH0+0g8
lBpUvIstb3+rbhLsLfWF8ITCUUvf0+q4KWYIP9yqiVZb2ZpY5lVIbbKfU564
B6nFpQZZ3+nCNyZnS87cYshWDJS6+eR9XfR9Lj5bYXk4iYFyv6Xelc+V2/0S
bUh8JIItpH7Zmmj9IqJD7XvaOyL1ZboLUuNsbd2KJeIDXPjG9nMTBUNInNiz
Ijh80VMr2PsqT8a+vmiELT5j6x3BqC2NOXGbae+l12bva6t/ZHO/cB7SNyFx
Re6r6HFSm0rubNWL6V7IHREeUjCH+C2Fq5D338K60su49mQu9E75zpyLemc5
W6lfxXshmLz1HT62JhbtXzgP2aPVEVO9uK5NF/q61ItynmUmx/L8CUsLb7H8
rdwX6R/Zvk+JmQu9Q3hC4TNbc19Fa2zNNkwYPp3b1l3YeymzfPYcyN4LPpP7
uqhNJN9t/JcY3tLa9jXlO0VJbSW8hdR6ov0tPhRfyGpb4mlc652i/S84Eomr
rRljEgOFy21xrWltZZaPxDzJqS2/lOg1cg5btclybJILFzN+W3MjpS5bnCQx
WfRRuS+iZS6w18bSFvaWHpnNKVL3SY+VzG5ZfVf2XvQaeQ2pEUWnW59ha06+
4AyJk4v7LfqO1NYn5/1sjE3nb2tK+Yz5k88TLk3ndsF7t+p40f6FA5O6T2YU
rWYhnHbLk7R6zWKm7TVc5A7p4V705UldI7XgQm9e8z3LCbdmA8rndwh/Lv2+
aw1lfZvi85BYKmdetD+pfQXTrNazn90r57DlIROcJHWQeBrT7yq5U+LNno+N
JXKedu9Ebxbtea0vLOaQWN3qsxf9dfE568I5L3jvhfYpn6UiOHM97zrVC3s+
dn6+eFBb/HYrxqyuvMa0rbmyCa/KGqyHRrTnFi+9jgfib5A72tLaZd6mPF/E
v/3bQ0X7TOdG9mI5JOHPW5zQzn7YcyifEbY11Nap4heReLvGtK2+ktVfW7MB
BWdKf7bEBokHy/ntZ94LVpAzL/rRnpuNfztvWbRP8ckLZ9jyJAkfmzC8fKbM
8vmLGmp98tI32eJOtve3NSdv89fOSxPvaIvvkT3aWkziofgApK9dsKLMbRaf
03KM6We39BrRPgRvCc5bzrDlSRZdVrxBcr8Ez0sNLTzW6hGylwsNa7HL8rTS
fyezAYWflByxsbHlOV+s4QIHyu+yWD1xvykGLO+1tZJgi71r+72O1z7kk94g
4TOEI5EaSrSw5cxb37O6hRUFN6bYK/5SWU85w/Js+fCFBtlaw3SGWzhAfhfR
NdZjmeqX7QkWXVn8Sdt3vvalL2aiCL+1sxA21+y9EM5sfeNrrCi1g9RfUuuJ
Z7uFYxfPWzOQ5cwv5jAtZyv9cXLOJJdJ/E+vIT4b8QSINzW93mpnUh+f9KXL
TJT1yohvYGuojbctLUzi7cKvuPgOW7vf0qPfms8pmoXkb5lPsGdo10C4qOVs
to5veRdlDZanFV93ih/iTU17tPm75Utfa3AbD6Tn++RsXuGTF2veqh1bPNn2
6Lfyd0uXkX7E1nwC+b1Wf5V4tvzH8uonvwPB4tXWmq1+IWu+9qWvn8scCOkp
lLzb8sQu6prVj6XelX1Z/NziJFu6rLzPlO/T3i+4mb2LrdkqUq/Ja7bWcOHh
kzVb/WL3QvqVW3pn67nMgRSdSPJuyxMrdZngpI2BwgfKvrbw84v4bGvN1CvZ
Wk+pL5b/lDsl+UXWMOV+8fDJmrf0y7QXqyMK99vS1GUOpGhV0kMpuEReT2pE
uSNybpYbkJi3ta/g1Rfl2e6RnHPhZoUPWH5FfA9yblM8kxqxhYc2x8kZXvSP
io6Yfu9FTZm4jdWGhJMXP3zr2Z6hvaMtLnr9/D9FiMEh
         "], {{0, 128}, {128, 
         0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "6997538642841063"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.10567425191402435`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.8943257331848145`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzF3b2qtVtSxfFGRUzMNRFMDTX2HMQ7aFNBWvwIVIQ2aMyMDLwAL0JjMwPB
CxAUvQMDMTBTEMEPENkdFPx/jLkwWId1Fms/z5w1q0aNMep59/7ZX//97/7W
j3znO9/5g5/47/9893s/+KXvf/97f/grP/4///Ob3/vdX/j53/3R/377R//7
+p/33/3Z//jmb//4L3/xn//ml7653v/1v/z7N7/8G7/y7T/8/V/80PvlO+Vn
yzWX98s6l7jpHj8Rk/+vey0xXOL8Kp91Pct3PnH9V3n4iTN6dRafqNNP5MYr
TFuu8zM/9Xvf/uA/f/Lbf/2rH/v26/s//7Of+7/X9R19X675b9//p2/+5Kd/
7Nu/+btf/aH3r9b29Wev65TP9WevfV17LPHRmJT1f+Je+p1rnWX9Gs9XMX/1
0rNbrql5uJzXcl8931d1+onceIW3y7l/ff+1F/zjD37t23//5d/+5k9/59e/
vd5rfynX/Lqe5TtlDSVu+v3rZ681l89Ljy4xKXu51rDcS99fa7uwYsnzhRdd
NVj6e9lLic9yzVe1Vs7rOqNy3yX/lzot+bPgs9ZFwbFy7orVV2xLHMo1X70v
e/wan6/fvz6/3l+1VuKj3Om619frK68oOfb1+3qvRYtduV3w+dqL8swS81d4
VfLkivn1s/r5J85L16z9tORqqfFyndJnCz5fnyu/Uj1+rXPRSsrNrtfid5Vr
XuspXtmVt5d3V9aj/ESxTrG95FXhCYseLDV75XOJYdFZ5TvlXgUfFNMWXFLs
Ws6r9O7CnUq/uL5/5cYV2yvHlK9e17xqrWCCcukSw4KN+ir4XHqQvlevqey9
1Ij6CSXnSz1e8V80i/LnxTNRX674A6XuSgxLbuu9PqFhP6Gjl75fvIhrzV+5
k3oaV54oR1LvqFznwvBP1P7CzxUrFMMVhxcs1fwstXbVQsHS6/OiHUo9Kme4
am3x3otnony45HnRsOoHljzUXFrq+tX3lx6t/sarmZT655oPJa+UN2p/WWp/
4TBf71vWpnlyxVZnWAVLF09y0eY6w9I6LeeufbPgSdHvpZYX3ltyuOy9nG/h
w6oZNbdfaSjl+UtfftUXrvMtmF9wWL3Ksp7CmRUDP+EtaB8v57jMwsoeFU8W
T3KZ+5fc1jpddI0+q6aatGh57Xelv5S5QHmv88fS68telE9+ws9fPO1P4MOr
Z1EW33vRQQW31Xt/5S2UGtdepjyt8J+yHp27qadR6lc9gQWXyt7Vzyw5f+m+
6716IJqfBWeKPn2FtyW3tfYLf3g1Fyu1s3Dvgg8F/195HeWMtIeqj73ggHoL
ym2uOBR/uOCe6hqtl4uLlrxVPCy5seBS0YNXji2+fanrBQ8LJ1SPq3xeXq/w
U3Wc+sz6fvHElHsXfCj1WPJEMfY6I8XS0r+WPq6z4+s7r/RgyYGy91f9UXVr
0TJF05U5SMHMghvKVUrMSx+5Ynjtd+GTOhste3nV7xQbr+ss2PhpP3/xxwoW
lVor2FtqSnlviWfJjSXPl+uUuKkHVfar9bjwJeXG5folh9Vvud5f/45A16z9
rnCkghUlJxcPc+H2iskFS5dZbeFUBdOWGdDi5yv3KzigGrys5/IiXvU+5aiL
ntKaVW2i/P/V91/1msKNl7n/ghulvygeau0sZ71w0cXfuPJ50SnLzEvrUeeV
Ol/Tvr/oL+Wf1311j4svtPDhom2Vj73SWapPSw9VzbjMDkovXnqNYtHCfzQm
uq+yzuJZaUxKbRbtX/ay1P4rjr1wrVfzPvVyC4YXPF9ipdfUPaovVDhDyfmS
b4un9wlsUS+3cMJy1os/sDzvoZxH532qBRZsV/9qyYeCP6WfLtpfz7TgpHLs
V1639s2Fu6qm0zpdcnjxBpe9l5pVr161Q4n5K5wpcdZerHp5mQEVjqqereZY
uZf2IMV25XiF82iPK3hSeHXhz+WMFA9LrNTz0bNbPIrS467Pr/2qN7XEYfEG
Fz6vPW7x3tVPU694wZbSp0qPKGsreqpwicJdF59B5w7Lsxzl7JbeVPRLmR2r
f6jxWfRjuaZ6/oXblPVcZ3edb8G0sv7rTBe/VHvx9X3Va+U7ZT2X9/5Kjy+x
WnybxX8rfKnUcrm+at7iSywekfYX1eNLziieF9xTHNazVt7+ShNd37meIy18
QPug1lrplXpfxWTFn1JHys2Krim8camRJfeWWClXLP1a+/gr7a86qJxjuX7p
Ixo39VVUU5c+WDD5us7F/cosoDyfsPB25Rv6vuRq4VGlllXDqt4v+FkwsODb
wl1VGxacUQ6s3tTiX6nWK9x1mR+98ieV8yje6gy9YEWpnSuvtGddZ7r0mqJ3
yu89KHjySu8rtpScVy5Rzqj4lnrN8rnqSo2P7qX0NeWupZYVJzWe2rPKS/0f
9QM1huqf63p0tltqX2P+aj6+YKxio3IY1Vav+LNq3oIPr3yzUhc6u1FfsVyz
4H/pNcU30xlo6SOqATUPC1cscS7evvotqlULh1l6veqFsneNf8Ex7YPqW5Ze
pnpZOcDC0xZ/+4rPotmvfS1x1t5UNFfB/9Lj1DMp2rZwhuK9KBYVLNXep/vV
/lJ+Vs9af29VydXFz9H7Ki9d9EKpZX3OqviZl1dcYrs8k7B4Wapx9DoFu1Rr
L150mRdor180l+LMwtMK/9E5/hK36zrKHz6BG6rvlnzQsysYW/TCoguWvqZe
XMExnZkWzCl+pno7yjGU5yhelTMt61dtVXiI5vl1RkuuKvaW3qfnq36dcnXl
7QvH0/UvMVxwo/S1V97yK56g9aXfL/2l1JFy2rLHgl36TEW5fsHJhfeWWC3z
cdU++vzA8v2S5zpzX3qlakD1Y8saFl6x6H2dU5Sfvda/xHDBjYIVWneaJ9rj
FjwpsdW4aUyWGiyYrM9ULM8r6vxI+87yXJbmifLDZV/F/y+88bpvedZdtbbO
TAuXKPMg9dMKn1Quqthb6mKJYemDpe/os2qf4D/lvBQHFp5carPg5Cuvaemz
r7SJzoVLnaq+1vtqv1jqUfdV1qkz9HIvnfkWHFZf6FpD+dvTqjE1N/RMS81q
P9I5wqIvrpgXvqHxLDlZ+teFAwtPLjipdaH1vuhKndeUfrH09+KzlVp75XMu
c5lyFiW3tX4LzyyYvHiq+ryWPn+inqrW5sLtS/0uWFR6XNGDCzcuOkhjuOiO
8vkrP6q8X2YZi0+rs5uCG6pNtL9r7qleUJ9z0T56vtofi/dY8q3gQOGEZc3X
81rac681lHUunE35xisvS7XAFXP1JAtuaF1cMVRMuHJJ/26R+lFam6XuyhpK
HJSHKI8t2mTxydXTU0wouV3mlQsGas/Vfrfk9sIBSm6oF1c4pNaRcrASZ/W+
XvnSJZ6qU7T2F3xTj0LrZTnTV/WrXLTUUckx5TkX1qkW09ossVJMKNdRXfxq
BrF4SmX9xUPQein6SH2YhTuVHCi1o3pq0VnFc1typtRv8dle5bb6ySVvNa/K
3pc5cjlT7R0lVsUTVp/qFY/V87pipZztuq/2UO1Zn+7FRUdfayjYWM691JHy
w8LndU6knuSFM9d1yqyzrLNwYPWQFaMKL9XcLj1CZwqlLxfPueDPgvnFby88
+dr719y7ns1TbHnV6xWL9Fz0TEteqRYu+fCqF2u9LPWrvEV98rKXhbdrHpaf
VW6v+lc9//K+5K1y9aWHqm5VjCr/9r/4w3qmykVfeVnqCWh/1F6vs8tyzYIJ
i5ZUvvGKPyjPV59Hc0N5i/rkmp+KOcppy36XudvVd5b+rnlS1lz6bKnxwsmL
bi29u9Sg6qbSUwrmLLyorLPkiWJX6S+lX5T+q/xQPb3CGUoc1H9ePOpXPrbm
hnr7X1+X3lR/Rteps7PCtQovKi/tg6W/K74t6yxrLs8OLc/JKDfWGlR/7Irb
Mou8zkX7ZqkjrX31A5WzLc+WLLW55Ibm9jI7UB+7xHzplaXulLOV96rrS00p
h9Qeob1JuUHJjWvNijOlxl/NyK5zUezVGtTc1p/VNb/CGeXJer7LHLbct+Tk
Upv6O0UXHLvyRHVN6ZXlHEuvVJwva9ZZg/a7gsNLryznVXBM83zhGCVvX3lE
Jc81D8u+Xs2sl7y97nt5R6WOFpwpPLnonZLP13cKn3/lwao/dq1fNZF+R3XN
4gkU7qT9Qn3XElvVpxrDwlXK3l/9bMkNxYSCh4q9quvV17ryUPu45qeuQb0y
3ZdiS+k7BfN1fqd9/xPPMJRcLddRXVzOQjFQ+Z76fspJltrXvWg+631LXyif
L1ixzMdL3BQPF4zSfZX9Fg2+1GbBgfLMpHryn/B1ixYr/ejCgcXbeeUHlj0W
nqy6VfXU4mOrTte5m/Z95TCF7117Uf/nOl/VjFo7V8w/8Xx1wYTSC5a5c3lf
sLrsRX3akmOFF6l+KXWkvpn6ulp3iz5d5neFnxeevKxZr1O4lvYp1U3KjZX7
qRd61Y7iXllbyWH1iJaZvvZi1blLDhTcKPNK9RK1rq91Xj20nK/mjHJXnc9e
uVH6UcF57SlFf11rK3mo31k820WnL5+/mu+r56mcR/Gn9JGCLSUO6hFpbb7S
mOVcFENUaywcTPXFJ3J48cC115ezuPZYuGuZzxaNoLxIc6DgfIlb6V/60vNa
PIHl81IX6kvr+gtnKFyi4E/xKkusihf6qgd9QmMu3nvJ8yu2CwfQZ5YKzi85
XHJPa3yZ9y1zpVJ3RS+/8jGu65d80z0Wfad6Vv3bgsPqp6lXoDqr5EZZm16n
8KJlBrE8C1Q84YIVet+iMfXctX8VTCieUsEB1Sylv6jOvXKm5NW1R533qXYu
e9F6LP29cDn1/UpP1PNavFn1q5fnBxaPt+y3YEuJ1aKX1QstfbbUXalT9dNK
DypYtGjGy38umLn0L+U8F46Vc1esUJ27eG6L7tbnJQqGqOdZNK/OBJf4aN0p
3yu+Xzm7Ujuffl/OsXAJXf/i1ZR4ap/SnqX+s/YU1XRap/p+0UqLP6bPG+h+
S49Qv7rkg3qYhf9ftbl4cWX9OitUjlrio56k1qbyKI2z5tvyfpnZaQ9VT2bJ
mXKvpc8Wb+ETZ7R4jMt+1XNWLfP1Z/W5lwtnSk3p+aoGL/1O8WSpa43b4qsX
3q5+8qf5nnrIqsWWmdErXVD4z9fvf63BktsXJihuXPm5zCDKddSbKhxvOaML
G7W+Sm1qzhfOWc63xE39UsUB5WNFd5TcWziD1nXZ+3J2ixZQ7fNpvqdeYsHS
hZspXimfL3WkffaKW3lpPAsf0+sUL0Ljr98pnLPgjO6x1Lj2Ha0jxYFPPH9V
zq74olfuqWZ5xQ9LXWgtL31q4TOv+J56icrfFo1W6rHMEV7pTfXHtO60t6pW
LTl/6aCSD8ssvtSvzj1Vp1/XKVhXno8qcSs5pti7/Jtc5RiKV6WuX3kyi99S
uPeS/yWvyn0Xvrd4NWVtpUdc61wwsPRrXVu5l9baK/9K++/Cw4sHuOi7qy7U
V1n2ssy7l3nN4reUOlrWsMz4XtVU6SOa29oHl/wvHLjgWMmT677L36zRHlrq
/dX8Wte/7Es1xcLBVHOV/rvoaPU6ru/o+lVv6l4Kx17OXWOiGqTgySvfUnnj
UlOaP8pDludYPs1DdP6+8HnVHYpRpXcvebL4cotHUfJWeeDiTZXcUH6ivpli
QvGulxlWyc9lrqrnrrWs+1L80XnQcp2Fjy0zpitupUdo/i88pJx14T+FD5ff
91s0stb+xSWWPHnlyxXNUnJbZ4Ul9xYPVr3B4iEU3qWz1/K7TNUnKXVacr7k
Z5kRlNgWLfCKw1zvr+dUFyzVnqX9RWflBXsV67RfL88SvPLbF35S9MLiMSrP
V9xQDCn1Xvi55o/qU/VmS36qHiy5veCe+qWKJyX+pcav5/xLry/67lUdlb5Z
MPbKYeUeS88qGK6atHAezXPVOJoPhcMrP9HaLHq25Ilq/5LP2hMX/lP2VfBB
+++Ce1cd6fMqZb8F98p77YPaE9UT0Dz8+iq9Q+eki6Yu1y+6Vfmb1u/yecEQ
nfWrf6vcvmDslaslxxb9da2h4E/JjZKH6jEu+FzyXDmD3qvct6xBn3cq3ym1
XP7GyjK/XnxC1aTLLGnR+MtZqEYueuSVXij8aolV0QULnlxxK397q2jwwvM1
PqUGr+9ceVj+/bviatF6OpNV7ab5sHB49d7Vay0apLwvvVX1V8GuBZNLbDXm
rzxt7aef5nIlzjpHLjxw8TyV82i/KHl43VefAbuwtOxx6V8lJuqBazzLehb/
X/1t5VT6s1primOF4ykXKr9vU3tcwd6Fw2ucl1lJ4VTqrV2fv+Jy6qsULVlw
SXFYuUfhMKUPau4VHCv854qt8v8S/9Kvr7nMKy+38Idljq96c8Gl5Wc/0QdL
zZYaLP655qH2u4KNJf4lnkUTfcJ/07mAcrnrmlo7ioELp9VzUQ6gufEJr6DU
SPGyCt6WnNTe94rj6XMyysO1H73KSfXttQ8uz8sVjb/k+dLvFv+n+BuKzwU/
1X8re1feVfai9aL9XbF3mYMoh9f80RiW73+CHxYurf65YrheU72F5Xx1/Z/g
5K/6smK+9ruFUy39bunXyo1LHPTz617l2T9dj2qrBQ9f4VjhtK+8/VfelPbf
hf8v9VLqV+f4rzhtuabiWNEO2tPLfZWTF86pPbSsoeSt5s8yJy33eoUnWoNL
Lyj+c6kR5eGFK15zRp1HLzi2PI+xePuLN1Wu+apvLvVScFU54Sd8Y11z8Ste
eaTlVTRRiVvB9lIjBQcKbyxnUeKvGvZaW5lvLtpk6WVl3lHi/AlfS+9beMgy
1yv8Wf2Bst/luY7Sa1STlriVecQr7XOdRcHzcv2y34Kx2psWXab4qRxP47Do
Zf3dIMqRiq4p/e6Vn6NexOJLFw2iM/QlDgsWlRzTud4ybyrcoGBX6bMFWz6B
OTrPLXPGolMWbqD+5HLWhc9f+bb8O6OLbxRuXDRR0QhX3NQrKDig86wyWyzn
Va6velmfHdL7aj0qx1OsKB5Uuebi7y1+5uJr6dxc71tiu+SJcpuCCTq3LTW4
zGGXmJf4FG2o+aC8opxF8TQWP0Hx5JUOUs+tYJTy5HLfJT+Lf6XnWPiD+gxf
71VyTLmH8pDiCShOln0tfpp6L5onpSeW6yxeynIvvU4560/Mvpd7qbf2ykNe
uKLOtRcdpHq8eLnXHnW2UnSB+jba30s+lDMquFH2Vfp10eOl1q58UL1c+E+p
U+31S18ocbhiUnCvzHPL2ZU1l3MvPEH9cNX4qste6T71HNTX1XP/tBYufarw
WOWcBTe0d5dnjHVGXHpK+fe/Gp/rdyuVfq2ebeE86hOqjii5VzCwcCrtC6Wm
llmG9s2FV5eepb342mM5i2UNqkHUWyjxL9y+cN3CFV9pYdWzyzpL7StX1Geo
CtYt+rHUSOmV6hssXKvEVnVo4d66tuvsCpfQvl9irtqw9F/1xl89p3SdtX6u
53LlxjI/1XnNVXfqm6neVH1XeJfOggt+Lt8p2qqctdapcrYFJwu2L5pI+3jp
72VuqD1L66jkgOZbiVXJK51Z6Pyo5J76NguOXXPV8rlir87OSvz1uYjCB0r8
F16tPvCCtzqrejU7Llh3fV74xlJTC06qB3KdXekp13eUV6gnVvJz0Xea/yWf
i39bPi9rK9iuHqPy/0VzlRop9yrnVXru0jevXqberGLmtc5XeaXYWHr6gi3X
e33e6cKQ62eL1714vOVeV6yKZ6uaSHWK1kvJyaJJVd+pn6w4puel+m7BtJKH
hdvofVWLFRwr8by+s3BvfS6i5Ib2l5IDJZ+17xR/oFxz8UAWT1I9wJJXV3yU
q+vMTv1A1V/LzKjwunK+is+Fq1z7LWetPpJ+v+j90gc1D3XWvPiEy4xY+Yly
JD2v8jenruurDlJ/XmOi2k050uIVL57k4ofrHgsXLb634lK55jLD0pmR5tvi
yZe8LTlZOO2Cb4qxhe9dZ6eYozWo9bJwvMUTeIVXJU8Uw1UvlNzQ/F94zuIr
FjzRGXE5l+IzaI8utVB0yuX/lH0pJ1QuoTiz4FvxJxfsUt2h/s9SX+pbll6w
YI767eovlTjo2b3CK/V5SjyvGlceUnyMJc6qH7XvKOd8xWe0L+h8WXPpOuuC
jcXf0LMo+azXL/i2cK2CXSVu2qdUF5Q4vHqm4vrZgjml5yr+lHMvOl37yIJX
l7dTeEjhVOoVlLMotameocbzFdcqebJwA+UJy/Nm5d8gLzhWzlo1ZtFfqpt0
Fr/wilKnilfKk8u5qLd2PVOhZ11mIso/X2HUK+xSHFO+oZijmm7Rsxrz6zvq
4S9cq6y58BnlaXqmC2cunL98X72gV2so11wwpOCS+sZ6vsUf05q9vl/qscS2
nF2pcX2WTPGqcA/Vm9rrX/WUwi0LjpUe9MonKTrrlc+jGKu1uTwXofqlcMLy
nQWjtM+W81XeovFXP6d47MpDFq+g5FXZV+mnqo/U+9W+r55bydUlBzSfFZNf
9RTdS8EN9Qq0NounXWKr9aWzHtVQituqx8ur3OuVh1n8ioKlZf0Lbig+Lz1R
eV3pX1eNFF604Pz1HeX2ekalL18x0dzT/luwRfm/crOStwWjSo6V61znsuij
xYvWnl50jWoojW2Z6SwzCI2zav/yPM+iX5YeVzjM4tdpX16+U/Zbclg5xnJG
r3rx0jeVn5TeV+ruOjvVU5qr5UyXl+op7VPlXhr/ZY6mv6dda7ngm84glAcq
lyu9SfNTOeFyr+u+OlNQX1HflxxWT+C6ZuE8i0+ovVh9MD3TgjNXHIoXqjmp
Omh5FuWVFl6edbm4yisvWu9belPJwwX3Fl9XtYzWUXlWZJlHlLx9dU2t8dJH
Fv62aLFXvujX75RnEZd6Ly+dOZa5p/bQq9Z0VqX9/RO66ZWXUvq41t0yF16e
E9NzKbxI8WrxspZrLv1de5muZ/nOsn7tpyXHSh0V/Cz1stRy6b+v8n/xrovf
WHRr6SnLPHd5ZkDxtvhjn+BgBQeW5xzKfUv8S2yLp1rWUHqx8rSCsYsWK/lW
NMKiDV/xk1dYcV3z+tmCY5oPr+pFc/LyHi9doBx10cilxkvPKphZPl9ml4rV
qqGWflTWXHBD5zUlzgWHX+GS4oPqRPU/9bwUB0p/+bQ2XPhJyX/tv6prXuX2
cs0lr5RvKGYuPl6JVfn7ceW5psL5NW6K1TovVs2i+yp7XOYg6uktfu+ytldx
LnWtNb70NdVNr7Thwk+WvFJtXnjmktuF9+p3Sl6pLi6+SsHGxbPSPlV+9uvn
pUerF/fKG3mlhQuGl7PTXC3vr5hcvVI5oa6tcCfVR9d69Dm9V/pxwUPdu/a1
xc8smKDrefVs2CtNpNiimqj4MK/weZlplvx8hcnqTZVauO57/ewyp1OvYMlV
5cZ6dqUfqRddzmvRzuoXlblA4cklzwseLr9HVDXmJzDhlb+qfKlo22WPS/8q
mmvxNnWPWvtfv/+Jv3NUni9SH2/h5OVvYC1caDnHZQ6rM6/SZ9X30Nov2lnx
QeOjuVTupRyy7KXUgvYj5fOLv7o8G3bF88KrJR+0ly3eY/HPl/ngVfulHgtu
FMxc8rnUvmq6xUdVbq8coMwui5d+fa54Vfy0kjPKyV9hTqmpJVe1Rxe8Up2o
+VAwQa9TOLNqHJ23Fs5T9qVegfYO5VrKDfRMP+FPKo/V3lEwfFm/9vGikdXP
WZ55KJipvvfCk9X7LXWk/P8VnitWlHov56XeRYnhq5fOZHX+UnrfFauC+aVf
K68rXPETml1r59JTJf5XDpS+sPDtoqF0/foqvnf5XLmQ1kXJpVKPykOuNZc8
Vx/g1WzuumbJ4fK3PIqvcp2v9o5y7st7xb2Sq+qjqmdVaqe8Lzigfadc87rO
orVLPZazKNilvLfwf9URqilKDEtsVeNovSzaTeOg3EYxUPNnmc3pzE59lVfa
tsRH52v6Xv2cEvMSk4IVBT+11xTc0H6hP6scuGjtZW6u8SmcvPDtgjOKY9oj
dHapulXrpejHhc/oe+U8+rP6Uo5Rek3J20Wb6LxAPTTlTspXdZ2vONgrb3nx
ml69V65V8nCZmy996tV1iselWqOcr3L+JWdU1y/aTXtc0RFLDyrnq/hQrvmK
z+vso9SaapAyhyoe18J7lQOUNZQ4L7i6aMMFM69+pHPJkvNad4tXv3h6xbtW
zqN6Sjn/kjOFR6knoP2u5EmJj+aPekfqFbx6xq/429p3dK637HfBMa3rxRe9
6qic0YKrpc/qmSruaU4u/f2VJ6Y6upxLOcdrv2X2qnpKvc2SM6UWLr2m/0ZD
vaOlL2vOF95YzqvMoUqNlN5arqOaSP2usl/VaGVtJU/UF9WY6L2uPS6edpk7
FNwre1Q/WXFVPbEST81bxa6S26r9tY+Ucyx4VXrBoo+KN6Jx0LnJoq2WexVs
Kb31Vb2UfNZ6Kdy7eAVa74otqms+wRV1/aXWCs9UjlH6mvrkes2iHQpXKS+N
Ycmlkv+vfINP9ItS4wXTFk7y6hmhRVvp+8WD/cTsfvFktHbUT1u80OU5isIP
X3HFq06Lrix1fa3tqsGi3xes07pY5vULJpQ+q89Ulz2q/3Ddq2j/T3CnEk+t
L/UhX2ln1QLqL72aCS6ze/VkFrwtvpD2d+1Bij+llylXLH221HvpHSWG6h0t
Ht3iv6l2XmYHC89UPa44XDiqatWFOyn+qL+q/sOinQvmFy6kPaKckc65CsaW
3Fv8edVxBc9f8dJPYEXJK31utsRh0TKaz6VGFpxUrFi8X/UVS01duaR7V79L
c7LkzHWOpRZK7l1rWPiJaudFd6unWuqi5F7BXsXwEtvSZ4t+KWsuMV/6iPbl
pa9pb1ItVrBRc6bUacH8gkvLdT6hlwtXLLxC8e3r9cu8T/f1ap5VcrXUnfJz
9YSLZlz05sXrFg/q2q/2lKILCp4XPlDwpOBMibP6eKoTS02Vvqb9qJxLwWet
9yU+Bc8VD5caX/Ty0qOvvC371Vq4MKqs85XHXvC5zLWvNagPv3hxy5mWMyp1
V/aomqvguerNoileecvK65TnF11c9rv4qyX/S29d6r3EXPv7gu26l1e9Vf0f
xfmrTpe/PaT6buGfy/VLvl2/36+c0Ss9WM508QTUD7nOYumJV06Wv6+q+VPW
X3rT4nUvOn2ZWVzXLM/eaM5oPepZl/6uvs0r/n/lWOl3qqmVy6l+LH1/8SrL
fpcZ3yveWM60cKFXHp36mSUO6pOU3Cg9sfj/Re8seF7q4tpLycPFy1pmFmVt
yt8Wz1+9Hc0Zxe1X/F/18vXvaPR3MyqnKvlZ+v7C6wp2XWeqM76CyYVrFV5d
eFfpXyUn1VfUeatifsFe7RcF6wonLLmn+qKsZ+Eky0xhmcEt91q0duFaGvNF
LysPL/msXP3CEK19XfPC+Zea0rorsb2+rxqt5EO5V4n5q+trDK86VZ9ceULJ
PZ0dqIewzC+UC6m2LR5L8Wy1N5V7veIhxUtZfEXtUwu+Lb5ryTHFgVLjmrfa
swr+XK9XHpRyCc2BV/xhyfmCh6VfKIcpPUK1nvbo5b4ac/WWVduWurjWoD1F
/d5Sm8tZaJ5rnS466Lpv0cXX98vfEVNPuGBLmfWoplt8g8I/X3FLrXHtv5qT
V02VnFc/Sv3hT3ihVz3qeooXpPqi9CD1HBR/PvH80hXbxe995SuWWOlZaw9V
HNB6WXzUZU5xnYXOVRW7Sn5eeViwV3nF0o9UU+iMTPelWqz0U50xfcJXLDMd
5TnaTxXbdT0lB5TDv/K0S+2X9V/r1L58XUdjorPgxTsqOVb6tfZi3fviO73q
s+U6hVOVz19dv3CVV7P45RwVk3VeU7jN8myAcsILPxe+XeqrrKdg9cKrdd69
zAi0lgsfW3ywcu4l/sucqPj/1zp13qH+lfYj1ReLTlHPueCYcmP1upVjv/Ka
rlr++h39e6bLsy6lh5b1vNLvy1lffuwr76v0F+VXJZ7LDE7nGlrL6u3ozHTB
hGVeWTBEZ9bKJRS3X61z0SCaG+UcC9Z9urcuXlOpZZ2hqB++8EDlV5on2tfU
uyt1px7g5XMuGlz9z2tfVw6/4n7qm119efm3maV3lJ6o2lD7aamjBZ8Xzbjg
5Ctfq3CtBYe1t5azK16TPlNx1Yhy0YJ1r3hgOZfSZy88LLMG1fv6ueqRhcsp
H1Yv+hPcr3CwkpOllsvel5mI1r72xGs9y+/4Up6pfG/xykofKbldcqz0a81z
1XSFhxccK/1R+5F6VjqX1Py54rDEv+Bh+VyxVzVdwYRX+aOemNas8mf1V8vv
q1QP7ZU3ovxq8Q9Lb1W9o3mr9yoYtay/nIXWrPLhwoHLuSuuXvG58meJp2rJ
xeNd4v+qF+scs+SD8iidO2gvUJxZtPPVc0scSv6X6yv/XzBBfbBSCzpTKDxB
z6Lc6xXnXM6r9BTF22Xe93Vt5Tlt1XrKXTWeOnO58rzgcMFk9RJLLy7+lXr7
+lI+XPCt9A7VLOoRlXPRer9iXmL4Sucq5yz4o3vRPNec1BopvWmZdZaYX/dd
fCr1WEpfK7yleJjlvMr3F12m2K65vfgSV5wL11UPWb2FZXavey+/n3PRy9oj
dI+634Ihn/ZG1Bcte7nWWfCkYLLi0jJDKTqoYM4VE+0jCw4vHkJ5fqb0oHLW
6sFq/yrXL72g3Eu9l1c4sORS4fDqt6t+X2Y0i99VcHLRwgVL9TqvYrt4qgVX
tafrmX5iVlLwU328giGv5lmab+VcSl2UOvrE/GK57/WzpScuMdF16rNAykuV
t5R1Fr5U+lfxCTXmy/y6cLDrXuqd6qvEtuBz+dnC1bX/6jVfPadUvMdX2rxg
2jLf0Z991dMLNyu9+LrOFSvV7AWXijYp3yn9XfFZ8VBxZsEl1f7LzOLa+xXz
ZX6t51g4ecEHrRfVg6rTVYeW+lX+r31c/a7FA1w8utI7Su4t3kKpBeV1mjPq
+ej3yxrK74wqea66dZmdFQ1VzrFgmvYpnflqzi98Rv8tefFFdf1lPrLMiRad
XvqFcpLSW7XPfnpW8koXq8Zc/K5SF+V9wXmNycL5y3VKrpacLL1DdVP520zl
vsozFxwuPL/0lPL8vHItrYvCvcv5Fuwq73UmuFy/9Hqdryn3Lvpde8cnZiXK
ncprqVn1uxYepX5U2buei+rWVzOFkmM6o9G61hm0xkpxWOvlE7O25RmhRcuU
2CrXup5DVq5Vrq9et+Lb173/F4P7VYo=
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "6333682656512326"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.2952636480331421`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.7044614553451538`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztnb3KNkkRhpcVxEAx8gA22UDwB01EcV88AmHNTGQFjRaEVRANxMDczMRM
MNFE1EMwNNxjMDNVDPwFg3Gxluvau2qm+3kmqI/5hnnn6a6urq6fu2pe++Z3
3vz2q6+88sp3P/Lvf9586/tfeeedt37wtQ//5z/feuvtz3/u7Q/9+/LH/6X/
XP/lN994+eG7X33580+//0Z1/cWf/f2NL33i9Zffv/2hl+p+8oz9LfK3Xdf2
/QnfJsZj+d+1dhP86frbrvlOXHet3cS+TtZlesxdzyfvmZD/iX1xvP/LP7z9
8osvfvTlt9945X+uv/DXr7+8/s/PvPzjR6++HK+79Gr1/uq37PMrXO8ytmrd
7dqdyR/7t13zrfZLct01F/tbZ+7rLv6Q99vnk9+dkOHpdx6vf/2rT/5f+tT3
/vjGz//0sZe/fevTbTZndQYdf5ecxdXzK+jVXa6rtT7et/bnCvOamG+1RxKd
Vr3TzoWM56p9XfHZ8qd6z/F+dU3eY393Qv9Mr0W1Lp997eMvv/vJu2+8+doP
v3y8rs6IM/fscV1W0CG7X1cyfFx3opd28b+S+R7pOMcJnUb2mh0PmcvEvia/
RXRvtV7V7x75UD1TrXvFw0o3XqUP7TXxBcgcrb2UXFfjITJwX/P9aOWnshtX
s/+T+RL9SYjotIqqc4HoeXuude1r8s7qmeqa6G0Sk6n4U9nACZ9XkP/quoqf
kDWy9uGE/Jx5Bu1+TfZa8h5iY+wy30qfJHqbxCISvW1toepvk31Nxkbst0rP
EP1v79uzifB5x7OArB3ZR4kvaWV7+gza/ZrwpIrvJTbwjvO1OsHKKrFj7Ryt
zrHnC9nXR7LyY20PYn8SXpFYd6X3kvNuhT1i7RwSB6ueJ/Y5kR/io3WdQbtf
V/ys4ntkb9q9fybPu+Zr9y/Rw5VM2jPLjrM648hZU8WXkhgOWQuLe6n0AJFV
a9tYfUXW6yq9ZHU7OQcTnzo5L8i8niFGVM090V1kXxA9MMHzrvlanVDpJfu7
lW60eEJ7LiT6sJKT6kw5/i2JMxMMUjUe8n6bF6ieITE9Ev888yyYkJPqzE18
auubWJuT/O4u12QfkRid3csTsnTmfO1+t/lW4oceieSFK5xe4lPYc4fEga38
WGxhssdJXqC6TrCg1dimY0SVbNt9be0cy2e715I8DtEDK+h2u6ZJfoTE1uze
tPpwer5H/Un2O9HPFX8s5pw8T/YF8SkqG5voAfI8sQ/tmW7z78T27pqv1WmJ
/kz8YuKnEJ4k4yFzJOds5UeTvUziWnaOV8V2yN6xGGki/zZ2kWBgkvkSuSVy
but9rPzY3CKZS1Vr0LX3j9SVV5qIPdp4QsJzO34iGzbHXT2T4BkI36zfkei3
JEZBZCZZr6vidRarYONp1f3qvLbnOJkXma+N/xBMeFcsPYlHVfeJXV35Psl+
IWT9MsJDsi+SPV4RseetD0vma/0Lcq5NnLPE3kv0G9EV9ky32IlqvaZjO102
oY2nkT1r6zKqcXbZJ1bPJHvB6vMq9pL4rdVaWPsw4Xklt8m52RWnTc7xLjmx
8Tq7H8kzic2Z8MFivSr+kHyT3bN2zBMxIjtfaxNW8yK6gpxNBK9rz+guP3ri
b0ksnch84sPa/I7N85IxJHu/0vOEnxYfmORnJ/x04qNZWe2KHXXVbSW6rnoP
OUOtviKxqYl6Z/K3Ng5GbBtrH1Z7s7I/q9+a4FtSj5D8bTJHso5kzFa3JHaj
JaKLyF62eTobx7NnX+KnJ/ioBC9B5m752eUzdtlsyd6sMMak3qR63sqMtYcn
cpdkDNa+7aoTt3MhPEzk1uYdEhkmcQCiMyfyUFZ+yD7qwgMk/CT71OIZSM7L
2hvJHG0slOA9uuQkwWaTvVnJJNGxJK5LciLEVk9iKV0xzy4ickViXEk8ucve
sDkUG3vpwkgksUq7Z5O9bPMdXTJQPVONweIZ7G+RvWPP94k9e+TDtD6xa22x
BNa+IjJmx0bm2xVnSOQweT+x/bp+K/HFyP0jkblYuU1iy104pa5cvOXDtAxU
1IVBtfZtEmPp8uutbHQ9n7zHPmPzbiTX3JVHS+I5iZ8+kftLctPJnrV5c2vD
J88k+bIEA0b2QpefRX53wkYlMpC8f8JGIjYeiW9M+PWJjdQVF+q6TmJlSY6+
C4+RvNOObcI267JRLdm9T/z3LtyF3YOV32TtTItTImOzcjgRXyLjtHOcsJFs
fIDUmye/lfDfYpXtO5N1J3wje9baXdbOsXzril0neK0uOZ/4W3u+WExysr6J
zuzSjSR+mGDnyO9a28xSgo9K9iYZT5fPRfzECb/+TJ2TxEMSv97KsLVziBxa
u2VabyTxzOm/nThrrC9A9q/FeJyJUyKYQKsPr7L9yNyJjddlI03z5ziGidpG
uzcn/CNyVto8Y7J2Ve6b1PFZu7TLbpmmRM678Hhdebfq+SS3uxpO6UjV9zpJ
fXeiJyfyAmTuXb0miJxM8Kcrr9S1ryfOlyRun5xZCa+qvdPld1i75Spsj93j
5G+tTBKZIc8TmznJEZyJUyI25NG2IeOcji0kWHHyjM2JEzmZ3nddNOFfJ+dL
Ercnck5y7okc2hwB4UmVs6veOZ1f6/LvbDzcxs3sbxH7iqyj1f/TOCVrQ1bv
nMAeJ7ZfQhXPrc3WhcdYjRLbowvXavls4yRkPBZbm1xXOiHJR0/vI0Jd9puV
B5vHTGJQZAyVnWl1KYlnJrYryRd02brW9kvkkOgHm28909eepmn8T5I/Jdc2
19aVi0/kk9jztvf+mRjLM8nGUmwek/xuso8S39DilGzs1NYRd52JybrbvyX7
gvhBZ/raq1GCyalwrUQOCc8tVqFLN07kraxdZ/3WXWwVaxtUMmZ7I3fh6IjN
Q/yRxD+t3kPyGsQXsOvYhSEhf0t0i+UDWeur983UHrQ2s7VPEh521f3ZuPTE
MxbLROYyjQ2eJos/SWJlE1gm8m1f+05rxxL71u6RLnxXMp7qb8m5P+1TXL1v
UpqIe1h+krGRuFD1nhV0I+m/amNZJHe8sqwSeajmS/Kq1r5N4sDWPrE6yvaf
tPkyW1fVpWMT/lj/osunsHNZmSzOgbzT8jPR7UneZ1o3JrUA1bX9xutqOayu
MRDsd4IDT/BFlQxbn9Hq3q7+w3bPVuOv7if2mMVK2fuVT1HxcEdfO9mDdo6k
xoTIoc0LJ3jCq3hLeEhkeLpnYCIzyX4hGIAkjzxRXzZBZC6JTU58DYtfnYgj
kXipvV+dv109wa6iq2TV4vGs/W994QleXWUPEEzpCjKZ+F8TWL4kVnYVb0nc
r7K1bDwkwVonsa+JOBKZe1c+cTVfewVK9hTJbVn8w8S6nBlfmsAfThDZC9Y+
78Ly2fGsxluS6+zqfU1iR2T/WrntqkVK5t61B3eJC3VRkker5NzWqtjcYtcc
7TMJJfjDCZns4ifxta2/02VbXsVbIsPV73b1u+sac1IHbW0tq4sSHdXlU+xI
Sf6R2Hi2T8t079mr3tOFP1whLkTi9tWYLTa+C2fVZUMSsjyxtit5Z1cePPle
g+VV11lQ8c2u7wp77Uyy9YYTa/pI/O/CH64WqyRxOYLhtPFqi7OyOPMu7BwZ
P5EZIifJOZLkF+y6VO+3f2v3lOXzanttmiyOkcQJk/qLxIZZgayP0BWvno5V
2rVL7ASLh0nqiK0NafmW4JrIuls5SfbmmTk4+wyZo431PWpeoGsdu2TJYod2
53+CVzwzVmntZPsdE4sTS/oSWFxBwlsbU636hNjeXBazR9Z9IlcyEdu3MQSb
l9k9L9C1jokdYn3kXWz+CbL5gq5YmdVdRM+QPkjWBkh8yTPxoiSmR7DrVW+u
Lht+uj7dypX1i0kukvChiiVO7LUzKcE62rOjkiWyFywO7ZEoiW1OxMpsDWki
kwQbbK8rW7orT2rnRXhbPUN0cjVOa9NO16cnMpzUHlbvSfyjlW3ULqyjzfvY
vUP26dW8nKIueZ54f4JdtDJwpK48uL1P5pjU7ZK8LbFdrd1V+RFd60LGlvhT
CaaoK29iY7bktyaoawxJHIbYHiRXOF3/tQtNYxLse7owJwQzkIzZxsmrOVbv
J3W7NidenRG2LozU19h92hUTI+uYYIq65GH3mH+yFjYOY+OHFrNh13p3mq5V
tDG9JDaSxPO7cpETOEMi86QvmbWFqv2SxOuSOH+ClU3iMAkR/LDlw45EbBWb
O6hsIZsLfgY9T2iiVpGsaVKnnMTwqzFYHZX4NWQtqvsJts2+pwvzX5HFrE7X
QSRUvdPmUx41FkG+aVjxhOiipKfos1GCea6esfllEje2ZOP2xPckzyf4k674
vMUjVe+xdn5yXlTvT87iiTOFzMXma57ZRp2om17B71uZkvwm2VN23YlNbt+Z
yM+Rkt4OVn+Sugbb1yLBOXRhWmzONzm7idxOfAupwtMSjNNNXGYSHJGVyUei
iXpP65cdyfp6E3lAGxeyfTVJb3y7FklvK9sPfwKPQc6Oq/IsXRjdxIZ5Zkp8
MRIHnvD7dqSk3pPcn8DxJhgtq2/Jvrb5iGQtKn2SYFOTvVndt7UDlibyLHbu
do2eDWeeUKIfyLm/4zdwJ3h7vE/qPS2vuuzG4zP2fkW2z0NXTIC8s8p9HOU2
wTZMYLYtby0l+LGuXKrF6BLZe7b4Q0XWz7KY4Qm/bxey80rwCRO128kZZJ/v
OteSmCSJ7SS5gOQs64r7WbL4MbIW5GzqOkeSPPijksX4JTUpXeO8mmedY05y
tcf71rfqqsfsyll3YUUSbCqJ7ZD7Nu6U4FKSWjZCFj9G8ixJTbE9RyZ8kEci
IieVL2z3wjPEds4kG3+uqAtDaH/LXk/EscnYSOzI/u2ZWPquHM3Eb1lfjJwj
Ez7IIxHZa+RMr9axy+a56f35fLyfxOonMIRkDMlZ0MXPCZzqxPp24X4ncgET
6275TP62q45yRyJrQWwbcn/C5nlmsjpwAvPTtXZdfd7OlJnp88jqwKvi/wkl
9WtEBhJf9dniEta2t/1Jbv7nZO2rCax4V0/45Nwhcngm/7vOowRXT96zwp6y
4ycYEpt/THJSV/Ftei2IvZFgeJLalkfl/wTZ7x5W9yd6widYMqLTztRvE72Y
CE+63nPmnprGdpIaQNI/hIx597iEjafZfMq0zOzO/wlK1nGiP4BdR+JfJLHf
M/mcPE/4M+FTTOypZPw2F0DuJ2NeOYZm50Vs+OSZCZnZnf8TZPeIrVG1+Emb
Xzs+f8SSkZihPVMS/WZ9mWlc+goxnInx29jakYhtY2Nrj9r/mdRB22u7Xs/M
/4TsHiFrVOULCK7SroXFalZnATlTknEmuog8b+Nm9pmryI6frLu1PZJvhHXN
cTUieACr860N9sz8nyAShyf1d9Z3ns7RVHu5+pYK6SWejDPpxZTg0i1dFRdN
4lFJzw0i28TXsGu6Gv+T8Vicv+X5M/N/gpIYeIK1I+9P1qIaZ3UeHXWCxbqT
cRJdRHAR5Bu7z1YLOVFjbmMUXVjoHYnoWKLnLV705v8Ho2kMvK1d7crRJDGQ
6b4ixEcg3zOt3pn0xtmRrAxbPZD06OiShx3J4kYIP219yjPzv6KuOH8XVXmB
rhxNUkve1VekC69S3SfjJ+O5WjanZDjpX5FgPm0cb8e1IDwkOrziZ+LPPhv/
Ldk4/wQWy+7ZxMazuD5bU1A9k+BVbBzJjmd3X7iSYetvEv53rfXu+KuKV0QO
kzkm/uyj8t9S1xwTv4nkgGwtSVLLQ8Zs+4okeBUiq8QWtbprF1+44ontYU78
O/I9xy6swu74k+QsJmtt7aUb//P+8+qqYbH4Z6IPyblg/U3rk1bjr56pvtVC
+GnHYMdDsEYr+8Jdclu9s7qf5FO6sCWrrQXZFxaPnehte14/Ev/tmBNZtX5T
Ers7E6+enC9kPAlmKbHbqxx6lVsha7qCDNtnjmRjnjaf8gz1pBN2cuWbJ/Gl
pC/BI1HST8bqPVs7k+jJimxedRpXkHx/pHrGYqVsvcYj+cJ2vxNfdeJ3V6aJ
s9jymcSXbH3Z7rLdJXu2nr36W1uLlMTkExkmOWIr54kPlaxp8r2kavxdGOCr
KPHdKnlI6p4eVc8k60L4TOJLVayJ1PjvKNsTMp/8lu2RmODEuiipQUvek8R2
Eoxukh/fJaaR9NaobJjEHtj9DJ1YF8LnZE9VvnDST35lSmTe5vssRjSJXXf5
4ERmKvmx2B4SyyI6IfG/knO2OtPPPJe7iOS7iU9ka7vO7N29I9m8cLKnkn7y
V/Ppg5DtJzOBAyc+F+nTkvjgR7LrTmpviV4l+awu+6fiP3me7DVyXlwt+++V
5+P9Y3zMYkSJXCWx1qt5tiJVe8TmiCvqysetQETmrbwl+Cvic9m5TJxN1XyT
a6sTrC5K6sJs7tjGTK7aL8R+SzDkCXbLytiZfNuREh8qyfetRl24lON9K/8E
q5/ky7rm2xVX7IrhkzGTGKat/7W542o8K+iriTx7YnvY8+LOC3BK9HaXblyB
kvg8sfeI/BP7mdi00zjPJNZRPUN0/kRdlV0jUndZvd9itFbTVwn+IXkm8S/u
vMD7r6N93u67XeofLVUyWcVCE3zmCv6srW/t+vaQxYrYZywOJ6nR2zFGkdgA
XfvLPn9/f+r919HqbYvzIef1jmtRyXyl50m+L9ED02eojWlYnDyZi60xsbnj
an1tTxWC4bE+ztXy/l6y+Idkf03gq3c5cyeI6GFSwzi91lfz6b1EsG0TdSsr
5/u6vodl66OrOEyCFyV7hFASR105RjGBfyBy3oWvnqir3YUSHTshkzuuRdX7
iMR2EjztmXPsqiu3fl9Sn0jk3Nr803lnwqsV/OIJ/AOhLnz1Cjy8iibqjJ6N
n135zSNd9S2ACZ4k8fOKyNxtTrkLW5jknUltZiKHXTSBf0h8ri7/YuXYwo70
qPy0ezz5VukuPLdYFxIDt/MiZ03SVyHBblXjJD1Vkjq+q/cKnW+SB0lkZhce
7kLPwE+yx8k3wbv64K3McxvbsfgxErexfQjJmAl2q2tNq7hiIp/T1BXvIvxJ
9sIjYU5WoEflp40bWxxLkpNajedW71V62357nYyh6xtnCU5p4lxeAS/aFe+y
fS26/ItEhp+Zumo3ViMbN7b4qK56uhV4bmPCJJ9bzcWOgeB/Js6F4/2Js9jy
6ioMsNXPJN7V5V9YnqzgU69A03Wjq1ESw0/ynkmOcmWeJ1hi6xMldRb2XCC/
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
JjbSM+QF/gWNT9sd
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4047667631402393"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "\[Rule]", "0.29213663935661316`"}], ",", 
      RowBox[{"4", "\[Rule]", "0.7078413367271423`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzVnb/Kd+12lTeKwUIiWAfEVjslqODeLyltUmxPwC0oBANCDAStcgQSBBsL
7WMhdh5CFGzFYGGfI7A0gSC/ZsB1cc37fZ9dPB/re1jvWvefOcccc8x5r+dv
/JN/8fN/9hd+8pOf/Mu//Kf/+fkvfu83fud3fvGv/tGv/Nn//NNf/Pbf+du/
/Rf/9PL3//znz67/4Ff+3c/+5L/+xrd//7u/9u3//up//9m/+Ut//9s//uu/
++3z9+Wedf+6hzzfjo28y77Xvqs8067z6z36CuN5Ybcv7r+yvXJPGcNre36x
p3a+xd5ePKesj123b//lP/703/613/z23/75b/7sP//PP/rpH//h3/r26//h
r6brz2eS67/yv//op7//i3/w7X/86797Nh7yrqv3kjlere16r52L3SP7zBfj
Wfe/WNtfFtt7MYavYM+v50vmbp9fnlNsvqzbC+5N1mQ95z/94d/8/z+Fb3yO
4fOeNR77XjLfz9+XtV3v/RwzWUO7R2Qur8ezfPbKbq+uv6ftvRgDuee1PZec
iMx38d7P+0m8IPMqcYfYfPEF4ncljpPc5HvyseVfn7+/mu+yt9dz/Pmv/8Nv
/+eP/9633/pff5D2aPmFnUsZD/GLX5Zc4LXtlTEUHeMr5LBkvoRXrPsXTi7b
/vz9eg7hwCQWlBxqjaHwkLLmL/gYwY01Tjvf9cxlk1dz/Hzm+iF7RNaH7F0Z
j7VPgmk/Khd4bXsvxmB5abHnkjOS+RK7IryFrM/CdhJHSPxaYy41js/nW562
ri03I+twxXmWPZB7vjLHW7b6+ft1z9Vek3ete2wORWz1K+QC39P2yhhIzP28
fu2/BYuu8HDFEYL5RNu0Nr9yLhKnbKyxMZ2sJ/n9FWcja0iuS472muMRbkB8
vNRWXtSb1roVW/qeucD3tL0yBoJjay9erLPNGde/fY2HRLMqMXE953Nea7+W
Lyy/WzqAjb8venWueOnV9VfjeFearbVVwmGsny57K/np676ar2B7V2NY60Ns
9WqdSc5IxkC4QeHeJF+wfrHGtvDZ7gvJ/UlPwlW9/vVzrvLBKzu54niE59ia
qY0dJY4QPm81DaInr3ddcf7vaXtXYyC8cdnS1ToT/LT8dsULElNKLL7yC1KP
tnoUWWfrm1f1+qvnWC2a5FnFTl5wvNLrtTjD5xxJ/yfR7W29idQTv4Ke/6Ns
z2LIVd3ndc8/0ckJrhJObnvsrX6y/MvGept3E/1k4fl6JrGZ5aeEA1zV/a0W
vZ5J9u5F/Z1wPGInxTfJepKxEZsh8Yv0y31PPf+qDmJtb+0v4fP2OWtepP+8
6PxXPSdEP7R5MeEqy3+J9vL5+6KxkGsyHhIfCYcsGGWfY+vptv+t6JaF45Fe
u6KbXWnFZPxX/PBKG3/B+a9sj5wZIetg9TqiCbzoGSN80taLCVcvzyG2TbR6
wsNJfZnsEdGO7JnEtXcWo9a/JXyJcCfLtQgnX2tYOB6xMaJH2f4NghulLma5
4lqrUnd+wflJXkZsgPhX4cOEGxefuuoPLHO0PGGtD8Fk4i9rPUs/ie0LXc8s
NkDywaJfWY5B6h2Exy78IZhDbHi9l/xbG3esLxe9+jUPJ9j4PXOBlfsQf1/+
Qmp/Nm5avZFobhbHSO5P/JHMkdikza2Iv9vepDV+Ultfz1x2SGr3tsZh87gr
/YrwQ2uHxJZsHLT7aPNKyzFsv4fdxxc83PZUW+2rcH5Sj7YaI7n/dS6w1tPG
Zcv5LVdZ8yJYZPmk1cHWmpB4UXQb4uO23kE4yZpjsX+rIRPOQLBr+QixzyvN
luA8WduVzxJ+UnLnK7xadktw4HWPEMnjrC5ktYWrXIDgsMUQ2y9EuArJfwnu
kWfaeGF90+IGGY89u7Fsg3AD8r0jMmaiMxMbtjFiYaPl6lc6LcF5srbLN4km
T3CJ2Grpzyn1BcvbC/8ntr34kv35UXGN5L9rzETvKnpUiV/rOeRc7bJVEjuu
tGLrI+t+wv/telq9pfDGogPY9Sd9OwSLSH2BxCZiVySm2/hS8KTgz1fo8yG+
SeK4nePCnxdxzeo8BE9s/vgifpXc08YgUo+w9mN1UVuftTVTwnNsPLI9yUTD
Kb3QNocqWEf8yOotJKe2fP7FOW6bg7zQ9gv/J3Zo88fP5xO95QozX7yX+LjN
6Wz8IjZDOCqZr/3msx3/2iMbl9fz7XzJWpHYR+4hGs5Vz56N0QsTiK0WbdDW
i602++Ic97pn5SAv6gsv8NPmYgQrCA9/rWXZ965nvsjpiM5mMZBo6aQeYTle
Gf9VPXHFQXsGf91jz2ITu7XnxRbOWI5X8JDsi+VX5DnEPguHL/yNrP9XOP9r
OX/x39c6mI3RRUsp/JzYW+lXIWNbe21rGSS2Wl2F+JHtD7EaDslBbF3D6oqE
q1jbXnth7dPyItKrQDDHxjW7XwV/7HO+Ql2ArK31EcsxXvB/20dEtBTSn1P2
sfSrEN5rsZeMh2By+f4YiVML09Z4Sg2LYNqVJmbrFGR/r2zV8nPCDQiWFl66
9mth4PesEVzh4QvOT/yUaF/2TOJXuF5ccdm8jS/Lf8mPHY/N1wgfIByM1EmJ
zy7csBoIwUkS7yymrX9re1eK75C1sn0+ti+OnN9f4ym81J5TLpoY0R+IPfwo
zk/8muRihINZO3x9TWyj1CiXL5DYanGsnJklOFY4GFlPokGV3JNgI+HzFtPs
+EuttuwXud/ma2U8Vuch3Kb0BX3OhfxbMuYXeHjF+Un92uL8Vc/ki+vSS2M5
DIm5VuO1vQpX/N9qg1YvstzGxvry7QLiOyQGvT6LavUKEptIvmbrQSve2Rhh
49prvk1s4CtwfnsWddkA6RGy8fS1Pkb0CpvHFS5k66RkjuVcFbE3Uqsl41nz
svtlczqin5PeY1uXIToYsedyzn31GtlaLeGKdo/Ielqbec23CW6Q8b/m/HbM
tjZqedGP4vwWhxcOlLyP5FaFD9h+XXvuhsTE0gtB9FWSi9nctviLjfuFr5Ix
rJyRaLwrzpJYQ7CO8I01l7VfRLe/4tvLd0h+VLDRcn7CH8hz7H6RPu3vyfnJ
XOx3Y8ia2PNWlhNaTcn2hhH7J+tANDSSFxQfsbyd+IvtY7TXdgyE21zpS+T3
JL8g+0K0fRJrbC5A8vq1ziReEGy0nN/q/1d+RGzjK+QChNOSMVs9za5n4Y1F
kyRxk8yF9JkQbmb/BlnRFkg/6lXdjfSxk5yO2Enhh6WmTLCX5NcEl670EPJe
0ndk+wcK57f6v63lEbyy9vCj+n8WFtn+HOJrRF8imGn3a42Z2AbJHSxOkroD
sWH7rTC7R1azsn5nfYrEAvJM25tB5kJ4cvnbE1dnLgrmEP5PfJDYGLGZ198i
s/ka6XlbePs9OT/RgYmWUnyW9IVaPkD0JYIb9hsF5JkE8696n4iGQO6x2GLH
bzWQxcmveHjBW1sjIGOwehTZi9eYucZgbcz20ti4ZuMUqa9ZnYFwiRecn+Qs
FgeIz1othfiLrcWXmp2tEVg+tt5l46ztGylrS+zZ2gnhUaQ2VHg4wVvC8Wys
XJhpax/LPl9gpr0uWnHR+Un8sryOcIyFpd+T/xM7tPXBhZ9WjyXrVtbK1jhI
7CNalvX3K85P1vBqPa1WRmpk1mdJDYXwihf6P+F+VmtaPks09hIHi3ZN9nfd
Q+I+iWsLB4hPFX+3vRAvOD/RtUhctvWRsm62dlZqHJaDET8i/k5qGcSeS9y0
61l6RImuSLQXW8t+obHYdbPxlPBbopcS3m5trMRBqxVbvlT+ZisZA/F3e8bz
qi/X2obVfMh8F1aU3O3q2/5X/l56jUjNwuYyhKdd6fYEN2weTWJEqWVfaSzF
H1ecInzs8/7SJ2afQ55J4uDyHcKvLIdccyQ6ANGjCB+2vaBXuYDFeRKLSb1j
rT+ZL/m368fWONbaEju56hUhNka0a7IXNjex+QjRGEmNifQAEB+3/dg2vi/b
K2ft13oSjmHzGrLXBIev9MM1HsKXrjiAxSKrT1quXnIB2z9G7rH8p9gG0XgL
X7J14SuOcWWr5ffEv+zv7RoSvCL+bmOB5bclL16c39pY0YKsrkLWysYOokUT
eyv9bIXXkdoo8Xfbn7DW+epcnsVhe+bI2gbRLQtOLluyWorFhLVW1laJnRCc
t/db27a4SrgKqcGtNVn+S+pEBH+uztoTPCTchuQmBGcW1pXYsfaa7CnpD7my
H3I/wYQ1/hc6v9U2id3afp5lJ9Y2yLkAgpM2fyG+YPkG4cCWp1ksJbWtz/uJ
blx+iO6xxm8x09aV1h7ZOtqV7mFzk/Kcoo1YzXDtr8WB0jdY6ndk/W2d63t+
28dqL4RPLu5hOQbBjbXOxJbWM0uN2OK2rX9ZDkNyH2vzZJ2tb77IcWxPbMHz
ZfNF9yAxlOyLjcul5mVzcMufyTjJOtgcee2vPZtAbODF9cLYF99Ms/1O1gZI
Lkb4FalFlhrxwu2rfgCyX7aOY32tjK3YMPFrgoHkfnIWwOLhGsPCB2LbJV4X
zm+1XxLrCX8uPI3kyAvTrrCF4MxVz3+xh6KNW3wj95B9L99at7XOotOWXMzm
lSSntn0X6znkG3q2Vrj2l3BFi2mlflTqesRnSf5Y6jjEj+w3cGw/jP2bU4Sn
kf0lPdg27lj9+cW1zX1szHrB9+zaEhyw53HKdcFA678kDyWch2AdmfvCos/x
vD7nQmIW4ecl5yrjX5zBjo3ESlsXJv/WxiPiv58/y5asXn1VvyNnJEn/zNU1
qSeutbW9MVd8r5xltnx14dWL76kSDCQYvp5vcy6SL5Br+x2tZfPFNsh7iRa6
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
Wpske32lM1jfX/toMafwbaIXFa5IclWbexbOv36WHZJ+J5LDkvUhvIXER5Lv
lDqIjWWlz5Dwq1IHsXzD2hWxExsjLOdZPnultRIeSzSHUv+1e/35+9JbaH2f
+ALh4facgo0p1o9IDfSFtk/s39oSsVXi4/b3pA5IdD87x2VXtiZSsJfs15ov
yRHIvyUxyGIU8QX7TaEr37f8imj7Vj8sXLfUYe27yBiIb5LfL75N+mrsd63J
D/EjW3Ms2v7Vd9LI+pP89GqdSf5r94XEtaLhr2dam7mqRZIx239Levst37B1
wJWnWN9/wflJLCD11vUce5ZnaRfr+4RXmj+x7aLPk3ES3fuq/khy8FIrtJzf
ajgkXhNbKut8tT4EH2wsu+qntXZyhUUF24mPX9WP7DlW0j9m4/UV7q17iDa1
OAk5e2vj/pX+b/Mdq88XDdDyrnIP8R1SKyy9/aSWYesdFmMLv7XrQ3CbfOPr
6pszBHstVyx9F0SHsXk94eeEe5CcrvSDrflecTCiexMMKX/LhtgPGb+Ng4Xb
F/+yGiDhruW69DBc6W+Ee1gOSZ7/uf6kd7H0Y7xYHxITyxlPm2sQ+y/7bnsY
SNy/4hU2F7DaoLVngns23yS9qWs8y8aKzZO8qWgOxH5sHceuOfEpEsfX+tge
BsKLXtTfbQ1r8QqLJ4QXEVu6Wp/SO2HPeBLuYesIdt+tDmPrDgQ37Lc317vK
GV5iz/baalMEJ63mQ2yD4CF5Jsk7SAxasWzVcWy8XhyGcLaiG6/1J7ZdtF+S
fxHfJPZA1tbGU6vfFs5P5kXmuOyN8BaCb4RrkTVfe/05hqsahMXzUmsjGgvZ
x6L/27Ui/JPEZdtrutZh/Z5wHrKe5Cwb8a8So22dsXBIm+OXmtd6ptVC1x7Z
2m7Jp0gvhPVZGwcJb7/Som1vA1mHZZ/Ljwift3b4QtshOGn7UVcPjMUTy5mt
Hm7PC6+9KLoZud+er7dYTfCZ9B4s3CM2TOIp4dXEB6/0PcvhCSaQMZB8inBa
El8KDpd4an2ExJfCbawGbjGz4CHJBcgZCqJfWR8h3+YiuEf4z1o3UjexuTDh
bwSjCtctPRLFX0rdjdgqib/2HJzNBcoZxtJnZeuGa8xEI7W5gMVh+z1kG98t
llo92fp7wU/LA4seQmLH+rE+Yut6hJde9V9Z7rGeb2tD1k7Itw4W7l31p5FY
SfJum6eQ2EF4IMltyVoRDlN80NpJ0fMJl7C9B+v5lj8QjkfWiszR8i7i4wQ/
CbbbPMv6rNVzbOxYvla0EcuZX/SLklhQ4uxaE+JT1rbJ+QKSixFfI73KxDYs
xy73r/Uk/If4IMlVSYwj62mfX/DW9j0SvZ1o+Au7yPpYHCBzsb3Npceb9HgQ
DrbW0/rLGoM901ds8iqulX0h47nSA4ltEz5ZeO9at7K/5Tu99n6reywbsD5L
dJIXNdOFvaUuaTmMtWGCvSTWl77xoiGT+LieaevIFt8sHyAcw9Ys1nXp2bBx
rewL0RwIPls9cMU48o0R4mu2b9NyVPsNKPIci+e2Z4/wbTLmZScvvutbch+i
lRWdwXJ4yw9tr0vR/+014Zm2rmR1DMIHbIyw1wtXy7zsvyX+u7hB6RW39mb7
/awvkxy/2KHtqbbxt/SXkn0nfwOinOlba77WyupvV3Fkjbn4qa3X2NquzYWJ
X5OevaIDlN5mi0uEr5KcsXx3ZWERmReJZcTHba++rWMWPmBrapaz2bhpc9J1
v8UN0g9DcKnUFKwPkjkSH7f9/yRntHy48KhSl7E5i42D1maIBmJ1WoIbL/TA
wt9eX5fYateNcCGbb9p52ZyU6POkpnB19p/kLLYutvTbwvGKTRJfIOdzSb5Q
6qcEr0ifLeHGVzmj1UsJj7J4cmUzRKe9ygWu8jirqZZcoORxhFcQ7W7l+ER/
IN/vsjGX+Cmxt7XvtufB5mhrL4jmb7lx0TpsPms1XhIHSX5KsN3WKNf6k58X
OeN6l/1bZiXWLP+yNkOeSXgC8burPI7wsaLVf8+4afMjMneyF4R7294em1cS
DFzzKvph0R8IPtucjmgdJZch9U2rI5GcjsyR8BzCl0jecZUzknNkllORWFNw
yd5D4nXRQ2weRzBk4QOJ6YXz27hpcwTLVZbNWLu1cdnamMU3q83aeETwvOCk
zaFIfLTf61u/v+JIa81tH9qyPRJb7foTzCH7Ys/0WV3F8vmSA5I+PauHkPpX
iXf2mxJXnL/gue0xs7hUfJPk19YObZ678mviyzbuLAwpNmltw/JeW7ddP2vu
V99btmfSr/qUSF5Z7JPwedLPZntFSt5nc1viU1afIfUye+6DjP+K8xc8Lzoe
4e2EB1rMt5r8OvdHcjTi44TfEtxefkr6J+33Y0sdjdT7CL5ZLchyfmI/Vn+z
fUpWj1pzIftIOCf55rbNiwnW2T49YocEbwl3Ir8vvX8vrhemEawm+265h+VF
ZDyEExL8Ifzw6m9FrfGTMZM1KbkAWUPrv+W9a46kzmLrv1e6nMU0Yg9WLyXr
Rni71ZRe6LEEz4mP2N+XNbnS7QvnLz0h68fmODZHWDZp/15VwR9iY6T/8IoP
EHsrvVVWEyh82579L9/AtPGl6HIvtNkrvYI8p9S2rE5O4nXBc2IbZH2u7P8r
XBPdjPCugquFJ1jNh+hpRbcnflf4AMEfMh6yVlZXIXOxmskaP8lPra0SzCd8
afnOVb8ruZ/w8IKHlmMTzlZ6pNc4l/+SGiXZa2v/X+G6+IL9O4/Fttf6k71e
+3v1rW/LXa+uCaZZfLiqTdjeD6uZEGwn/IFo0WttSb5Q/k4T6f22cdDWoO3f
W7yqBdgeaZun2BhndeNfxlzgqseA5ET2XIOtz1o+Y+MUwRkSB6++3VH+jg/h
PERfIvGI+BfhG4QHlh5ROwbSc0U0WNvjsfxo7RF5Dtl3Ww8l/kJs5qqutHzH
cns7l6/A+UtP45VvLpskv7d8+6o/mXCq0pNwFa/XmejVf3I1BpK/F91s2UCp
n5KYZc+DE85Dfm91D2LzBdOIDRDcJjkIWU+7PiX/Irb0oq73+pr0NJJ9tL5p
e8zW9Xom2ceiP6z1Iby68AEyTtK7ssZcvg1SMNnmXISnkThlcbJwY6Id2bqJ
zXEIjq19sdrmWmdSC16xya7PixoK0bi+Mv9f47k6h0XWhOwv6QVazyc5tdUf
LP+54jBENyP7Ve6xWgeZC4nXhK+WnqWFmS94ndUwydwtni8cs3HQ1tOtNltq
KCTW2xoKqW/+MvYCEc2Q2J7FcKLJ2NpcsVvia6W2e9UHsnDphW1Y3Z7E4iv+
X7j9FYch+0hwuNS+7TqU+j7xO1tvtX2qVrsmPGHhEskpiI7xlfn/siuiIRR+
WPJ667/kXaSOT2pty/dLH8iLmELwytr22jt7trScNyx7bfU0y/mt7xAtscRu
4iM2570617/etbi6/btOV3UisuZfORew33e94oc2r7c1CPIuG3cILtlvLFjc
fh1TbA+PtRPL66xvFm5v7XaNf8Uaq0uTPV32X/ya9DYQbk9yf9I7uvgV0SJs
P6EdW6mzf+Wef+Ijlh8Sf7F7sXyB5HrE70jOYvPlwgdexJQrPc2On/T9kn9L
4nvZa7uPxE6sbdt4sXyK+DXBB3IuwHIAwqkKtyExmsQ1Mi/CVb4C/7f1EeJT
Sx+zNVyyF2udLV+1/lhi5RqnxecXdkX4c+mpINyV5JWWZ1peUXQYshe2X/0q
Nyd1T1vftz5r14ecBVvXxGYsttgYSnLqH6X/rzUn/NzixhoDscO1nrYOS+oR
Np8ltlo4c9FqSk8piS+EM9iaIMFbgjnEbsm+W95i7YpgjtU5iQ5p66Fk34tO
vngayUcsFhF9bI2H4MDyndff8C8cj3ASq40UHcPqTiTWkPHYGmU5O/k9tRrC
tSzXJXyM/FvLr2xOZ3Vyy6UJTpK/f0FyPaI5lP4ZshfrXYQDk5q4/baMxSLC
zWw9i8S7ksu8OOdLfM3GEVI/IjzH8qv/B7JFiLU=
         "], {{0, 128}, {128, 0}}, {
         0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "10474570668116194"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.29151415824890137`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.7084331512451172`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzdnb/Kvet2ljeJBE/AKiEQSCWIxtR7rQh6AkmhQkC3olVASIqgRUibQhQL
0wo2oq21haRO4RmY0ngMkgQsZopbrotrPN/6bYvfYq6POd/5vOMZf+77HuN5
5y/9k3/x6//8Z370ox/9zl/98//8+k9+9+/89m//5F/+xs/9xf/8s5/81q/+
7d/62T9/+fv/999fvP7Hv/YPv/+jf/TL3//hv/1b33++/te/9Jvf/40/+NPv
/uff/YW/9Hq9v7xe32W/l7z/xTV/KLu9Xo+1p/2ucn1ynSu/KrYiayi2svax
Nvxp8ZOrWLDrfOGTX7mnn+/5zT/8m9/90X/42e9/8ff+x4//5L/+te/+13/7
Tz/+93//97/7fP35nnIv67vI39d1ymt7zR/KbsW2L+xp965cn9yLfU/ZF7tm
a8NiE/ua+Pm35idXsfDar6zNr/a62O3f/Z9/+t1f+eXf+P7f/MJ///Hn6+IP
67P/+x/8ve/+1R//3ve/8h9//rvP7/r8O6ll/+U//3X1j2AG8v7Xdiu2Jeux
9vzcF7J3n6/Jvqxrfq5t3Rd5vfyK7Muy21ozsQmxFbGJfb3WZnHmV/oJwa4k
FohNil/Z91/ttd3TT7uRPSX8grz/8/VnzVp/tzh82ecFf/l8fWU3W7/sNa09
yX7Z/V3rJ7Hw+Zpgoc/vIuu3fHnFGrnHz39r/csmxYdX7iX48yv9pMSsjf3i
V+v1ev/a97LXdk9XPin5gewv4TvrvmxsXvFZkruK3Ur9snpO0WwLTyF52PKv
9XrFwrJnwRsl51hOZH3PcvDP7135sGCkF9oOySGkRpA8s/JqyT9lr+2ervUv
v73KD6ROLZuQdZacZvkLyV2ll1dqkF2DjSPLWRY/Kr3CokuQuLN4o/DHF/5g
Ofj67NITynqutJ2Vk61vk1xn9ZPy2VITl31ITSw9HZJ/yL2QGlTwPOGzL9Z2
ZUPLp67i6MqH7exB8UPrb5YX23UWDeSqBhH/X/l5cQGLCa/0WMs3Sa+haB1X
n7XxsnzyCgMTParULxK/1k9Ib67oUUVXKTZc+1jwasmxV/oD4YZXGrjNXSsu
yDqLVkP84WqeZO3R53s+Y2fdo/WToiGsfVnvJ3o7iTWbfwq2tPmN9PiI/xdt
s9Qvi3lILBA9jehRZW2lt2LfQ/CqzW/WNwqvJ3j1Kq+u3EXqfpn1Jblrvb6a
HSLzaeuzS0+7wvYFuxIbrlpQuHaZKbW4hdzX2keCvb+y3l31cJf/X3GKF/PS
tqdJtDXiD6VmFT+xvP7T5qSOX+VVEhc2l5Y5qGWH9R6iZdk+1/KlK92m5Nh1
/bXmorORudbPzxI/sdyZYDOLu8garurdFf4n7yf51taIMi9dalDhCLbul7pm
X6/rr/xm/cfqAEQTIH1MUvdJHrOYn+CfKyxt95do8iTHWm226GwWf66cT3yG
+JLdU4vJif5v6x2Zr7A44eqcqa0jV/jkhT5WNP8XPkN83u478R+LD0nOt7md
8DJiB4L5Sx0vtir7S65Daof1SasRkZi60pEIhrnq61mfIbVg1YV1HYsT7Hm6
q/yzfMPikxf6GNFPrvQ3W9de9LbI/F7huV+JgUkMLn8rddzyx6v9Jde8ymnk
PaTWkBxu8ZjFMBZnEk5h8QO55mcOLPuy8M+yLdlHm3/WNUlNIXFa9DGbT6wG
RbDWFb8g9770eYslSo/gCgMXHXvVwTLLUXpMtu6QeHx9NpCsn9iW+F7Roz6v
Q86/2z7sVZ5ZPnm1RzbX2dcFq1tfWljO6mP2eVAvNCibW8hnSZ5f7ynrJJiw
YOCFu6yObfFq0YWu9Ktydvgq3m2+LRyZ4A1bO5bNCbYv+3jVc7/yyRf6/xWX
t1pu6T+Ssx4vNKgX/QWidZC+p82H5XxHwU5k1sjWzTKPavFeycmFO5Qzd1fa
YOHURXu0OsaKI8uXC1a54owLSxT9/4rL2323+1L0itK/JvdydV512WfVR9tr
u5o9szWR6LcEv9ncWJ49a2f5Xsz1kevYM3cW59hrEvxfYtniqFKjC1a5yqV2
nQQHXmlQ9vqEH1mtbH3W6tjk7NtVf8Geq1r+Q+xPcMKVH1r9luR2W7utfrhi
/OoZyCW3kziyfQSLcyxntP5DYrnUNctzC1YhsVB46JWW+EKDIjj5hR3I30mt
KWdd7ey69VWiJVptkzy/8YUv2WfzWn5knwOw1ka4/+JfxLYF/xcN4eo3IK70
q1JHrnTvcs7iKl6udKGvjGVb01/Y4UqPIt+1Znpf6OdFgyX4udTTUpdt/4LU
YntNUvfJOQuiCRTfI3qCxZ82916twepmNscW3ZvoOXaO0a6/zIqUz17VBetX
xQ527rdo10S/srMTdi6CfJeNo9LTtNdf+X/hZ3L9T5vYOUCSl2z/hdSvr5wl
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
6Nur/pKeUXlukj1rsOrmVdyR/HM1R0F0qm8hrksOJHMI1v+X3QimInH6urZa
/dZqdD8UTijrsT04uzaLwwlmKD5M1lN0V5tDiB5l9QqSB0qtKXMUNp+T5wxc
zYiSXPc6rl/MB1pNbOVka1v7fNe1zrKnpJdxxTEtv/hKnFBqpeVKVnsnervt
J5IcflUHbS22/PdFr9biQ6uPrbgjs4LknOaK5aIJWDtfxfXV2Ydy/s5qQTaf
2Hi80r2tfSzHfF3Hy/Vfcwe7fosbr3ixze12v4puSbCW9YGynitutWoHmYsm
tl29RctDSRy9OL9TcuNrze11PiGY6jX/Wq/tM+oJJrnip+W5vi+4g60LBBus
65S4s/58pfMU3Wy9357Xu4oRwq1InV3vX3G08rDldDaOXpzfIftC6r71w3I+
veSTEhcvdBVic+KfBAde1XGCEyzvK9zhKoeUOmLPPRF/tuu0MWJnDEj+J75X
YqTMfBZOQfyc5HwS49YfVh2x2mDhwus14VlXfWHLf6/8/+r8u/VPW1OIrlW+
64obvn6OusUeV5qYrYnLn+01S32317c+YDkmieWCE4gvkVpA1mNrU9HHCtay
eYPYjZzDJX3hUiPI30lOKL9DdNVHs7zArqHUR7svZA02li32KBojeR57ycNr
zSVGfijeZOspwXhWNyv1dMUayZlXOLa8Ls8isz5AbFU0k5Kvrvx57bvt19iz
NgWXFr3lBc+y90g+a3sT5dmACwOQ2TPiV2QG9Qr/v+BNV/FLMAbBElZ/tmtY
+3iV90p9sf7zlTx0rbPYrXDqEi92nnlhSHtW7qpXu/IPwaslTksOWWt+caaP
rGH5HvHhMi901d8vvOkFfy/4bd1jOV92VSNI3rP/Sn2xPnC114X7WJx55c/2
dwFIrrCcd62f6JbEn4kOU84y2DNEJDcSvbHgExtTRU8reM+uv/Cmkttt/Bb8
Zp8PQ/BwqVMkxgmnLvWFnH9c9cXyUJI/rRZB4m75+ZU/29i8iuuFZ1YtWPYp
WhOpTUXnKbZddfaF9mh14DL/dsWLV1yUszZXmJDMilhtk8zzL5xGfr/pxfMi
Cqcg+7hw/vJnu3cFL638TM7fkdi5muchsUl6uCSuicZYckvhX8uvyLO8rM0L
DrH2KX0loqcVXcjy4nWd5Q+vtR2yHovfiM1t7C8fXn7+eV92bv9K+7LYePk8
4SOFg5C1rflb29deebL8noW1g40Rgp+JPS2uIDjKalDW54sNbV4tGoLVRa3+
afEe2V9SN62f2BphayjBOYsvrPywYn/57VqP7f0RTePq/JTVJ4tvWKxF6tHK
1YXXE/3kKjavYqTkPYsVV521vw9u61rRYWz9teshWgSJnZWLCn6weZWsjeSH
0u+zuvrKaaTPTnzG1jvbUyM8hXAKcr9X2iDxDZuXrO5H+nqkv0POyZLz7K+x
q+2N2hxrsSLJCQRTLTu8fo6ErSmkH0q0x4Kfi++VWceCQ9Z1XpzLWLG8rnnV
byX4c93Les9aP/lNK8srS02/qq2kvpD8T2YvyXwI6QGV3GJjxM5/ktdkvpTo
fuXer+aur3o3toYS/FByywv8YPunL3r3V+cybJ+69LVtTrP9QcJx1r0TzaRw
5CvuRjThFWt2Zt5qWeUZ0SS3WK70otYQLEQwKqn1xG8JXrI58HVPreR8+/er
mWT7uy3kmfw2ZxKt1XIZogOQXFq4vNU3ig5TalPBioW7Fa1p+eSKtYKTLa4r
/fcrXYLk22VP8sxGmw+Lf171m6yGVub0bM63PLo8u5XEwvJz8p7C/YmvEpuX
8x1X77nqjV5xwFKzSLwQ/ED83GJyqxVYfYDkfKIJlD0lukTZ03Vfhfu/wE5k
/VabtT01oo9ZO5T+C/HDktNK7rL9BXL9VY/s362+XXQ54qslL13tHZnrsJrb
lU8SvmZ1DIIfVv636yd+fnVukewp8U/SNynPGy/8xdZ6YoeV59c9kv6d7VmU
+kLWQF4vm5PcRfyZfLbM3pS/F6xie8eF65VnttiaRbgwmbG/mhMjfyc651rn
sm3B88uHyfMhbU0vvGDlfDJXRp43XrCTxZm2hn5+F+kZWb1ife+quaS+lO8l
dii6cTnTZOta0dOK1vqidljca7kVwY1rH0mdsjncvsdiD8IHyb2vGmoxLcmx
y7YvNKiFM8l3WZ2f1J0SO2R2hcSXnQOx2j7hocT3bK6zOc2+Z9mfnGmyupDV
RsrZqKvZtmVDwvWI7md7BKTOvtAG7esrXFdiluR/Eo8WN5ZYtntaaiup16Tu
FPxsn910pZcSLdfyfdKHtfX0dT9x1dCi4636uPbXnkMsdihzfbbm2pgt54MI
PinaYKnpr+e6SX4j3MruY+FBRYO60goIBrM1yGrF1v+Jb1t7Emyw1rZyGvku
e16D7Fd5TXI+qZXEV229W/tre69lnSXGLXa1sUzwhtUGbY+J1PEy1110BqtN
Xc0SlJn8K25LdCQ7g3dVm2wvuHzvFXYiOPnFTMVVP5Hkiis+XnrHlr/Ys5ZX
3KrM1BWcbPfFrsfiN6J52mcllXshdaHsHVl/yXuF21puTrSLKy5J+r/27KHV
cyx2snnV4luCG+059zKnYXG4rWs2lgmfInjvxazm5/VtX3X1Ftd17L6UHvqL
vGRr95UW9/n6BTex53RsDSq+SnxvYX6LpYmtyKzO1WxewU5W71o2tLZa7yFa
k51zKHH0GleTPSX6MMnVlltdcVLCza80ohfzkCQvke+1uajYdu2j5SbF/p/f
S+ZdSa0kmMFyT4Klyb3bnPyi7pO8vf4V3aPk0mUTwlmIPYs/WxxicU7hUNb3
rI5n65HVDUiv86rWWN8meYn07ksfsNS7grVK/iF2W3G97EN0GMKX7TNhrjj+
VQ+lfNbmihe6R9EMr7R0u18WP9tzqS84nY19gksL3yF9t6KTkHxocRexG+HF
9nut1mfz89WeXvEU4s9WcyA1iOgqBOfY/HxV969yKVlz0T0KR7vy82Jn0w/5
f+HqhQ+vOF3RN9aaSZzaeU6S/4tmW2LT+lvhnrY/WPz5Bc+94inLB2zteIGd
LN4m9rz6TcmrXErsY/MAsc/COaU+WltZP7E9yiv+W+KO4AFyLvXzmuV570Tz
IdqUjWv72mKqUneIL5Xn2Fzx3Ct91a65zDa/nvGwHP+q719yKbEV2Rc7C034
ftHoCm4hGnvRAK2dX/Bui+3JfhXsRzB/OUNh/1lMVWZaiP2JplS0C8tzX+gV
pN69wHgFQ5Lca2tKORdJcml51s2KRzLjtJ4XQTQTotEV3GLj90oDvNIQCk4g
OszK1VdaMck/hePbHvrysauZFovPLY+72guLT4peYWPhhTZlMSSp0SV32dq0
/G3xDsutVs4nOgbJ7es6FiPZHEJ43PKrgv1KzNq4I/nwtRZKcpfNRfaaVxxt
Ya3lw+u7Vj21ObCc47AcsORzknOs5la0KYshSa4rfbfCowtfsDmH/Mb0i7xn
8Z7F1QQbr7UR7Fc022LDoktYLm85l81FlltZzEzWZrFKiVPCRwgHKXyf+Ayx
m32u2lWNs/dL8CpZZ6kLV/iw1HpS95ePXeW9qzpr7VPmcwrOvKod9vp2nQU3
lrps/afo9lcaS+nxkX20uMViyMVZynO9lp1tP9HGSMHkK3bIGZCvPJNo+YLV
Kq3f2rxX5pqsPYuWWOasyjyDvd9Sc6+00Bc4h/QN7e/lXdnB1p3Ca6xWVnCy
xUjENwh/LNy85AeyL0sPJ/dyhd9IXS554KrfV3Q/O0tvdZtyzuiqF0D8055B
LjV32crqh1d80OIZMgvx+fei9dm6Y3FUwWAWG9i8QfC/3WvSPyXXf9EvXnu9
ahPJUVf9cXKdK+x9Zc+1X6RHQ2xucxS5F8tPSw4k/S/Cxws3KfrPFZ4nvrRs
vr7LzjMsTEJqwQt9ye6pxWCFb5LPkrgrGuzVWYbPv1vMX3h3wdhl322/6ar/
/mlPMhNu69cVPicabPHhKxxYeIr1YVvjXjyrwdqH7BeZSV4+vPRh4p8WM1s9
yn7WvqfMtNt+Pfkui/EIJrH164oLE1y6crjF3mvNRDu1MWuf81/wgMXnLzj7
1ezKFU+xef5qnS+4ifU9kjdIvlr5n/xuu81F61/ppZbnXK3rlzgi9eVqLtH2
x63m80KfWd9FfMPqujbXkbq/8DzJLRbnWJ5ie3ZX+edqdoXwlGVzy2WueiJX
3KT0QQpeJbiC1FziP8vf1veuNay9KxiszBoRPENwXZlLtPFre5FXz+qxGoLt
pdpcZ2uczS0W6xJfvcKldk6JYDY7u2J55ZWuYufS7T9SF0ofpPC+MvdIcNEL
v131wvLiqx4QsdWyT5kDsa+v9vpFX9Xmq/JcMsLLrvoRFusW7F30VeKfaz2k
FthnJRWdxM7LrX4Q4XR2tnBh18Knyqwm0coIR/5KDlUwZNEr7PdaTbJgIcsl
7V6/6KsWW9me9Vrzek1qd/HJ4mMFixLt1K6T8GuLf0puJPti/36lJa71E12a
1J1SW4tuY/WN8q/0a15zExsXheuRGL/y4au+qs1jCzuR9RNObXsxpAZZmxcf
IzmBxALxz6KxXPV6bH+Q2KTkE3JNMjNG8ueVtvOC21r9ivit1YRfcw2LKwpv
IvtCcuwVBriqIxZXWC3F6loEGxOuRDhX0XaK/a9ixGospI9A4trqMIUbvuAd
pPZZjGp9Y9Wawm3Je4o+bPHSC65BOIh9vXgT0Rwsxylad8F4Bd/avFG0tXVf
hGsQnGZzaeG56/1kbspybZvrSo+S5J+i+RMeUX4zomCVwhnX/ZJ9JxzK5rry
GyIF95b1257CFcYrPlO0bqvnlzpisTrBNlZ/uMLhJS/Zmmix6BUmL7WY3IuN
2VIvCO4i975ix/r/Vf21MUKuX7RNm69K3L2YRbE8pWA8u9dE8ydaN8E8yx9W
L6/M0RWbWx1m2d/GoF2nzQ+LM67XV5obqR3LJ79SVyT14nNt5F7KOU2iS9gc
Yu/X1uLiA2Sdtr9Tat/Vdew9fiWvWbG2YtzWnVVTiDZOfN76qvUrEtdl361v
2N9rIL1y+0yJgp0sV73CZi966+T9pLYS3krys+2nWLxtc2B5TWxOzmrZWm/X
VrB3eb5E4TWWj5e+qs3VlmOWHEI+S7BB4Rd230kOL1rBFS8m9cjqJBabvZhR
KXiV6DO2Vhb90+bDq/sldiB7tPL/lQ2vNDSL317wGqtvWK5n49py8xK/1p/t
2q7iYu01qQX2XJuNC5J7bQ0lOomta0RXvMJUNo6sraweRXDv1ZyGvV9bX67y
mLWhxZwW/5f6aHkNyTNFXyK4xfIO4m+WN11pLy/ywLrH9QyHZQeCE4ruXTAV
saedJVixsP5OzqyVHo2NnRd6CPnsi3OXL3BUyWNX8zZX841F3yv6to3BK9+z
+rmdNSW95issUXiHrS9kPnBhlfLMn9d+a3Uk2/df6y9a2VU+v9KFbJ60upk9
d2l7Q697mi/2zs6lvM7hVtOz3K1oszamCN5b/bLSCyBYopxtsX616mbZ31LT
X/gtyUWfe0Fqmc29RCuz+N/mXsujCRYtPnClDV6dD3qBr+zeEbxxpcnbHEt8
w+Yiq+Gsmkg49cJsBOuS9RQbFh8gWM4+d5rEl8WcBZNfYQ9Sl62GtnIv4aev
57iuzuEW/eGqd0n6mPZ8UHl2feFu1v5rL6wm/6K+E0y11klihPyugc0bpG6u
OCVnZGzcXeFtO4tiZ43IXE3BHvb3fV7MZJbPLnuSWcGiFbzIUVb/tDNvtndp
e6bkjAmp3UUre63vXeGHMvNQYmrhrlWX19oIzidxuvad+CrBEnYvrA+QmZMy
n2P9zc5a2H1ctcPWwasYIb5tbf5ivrH4J9Ht7axRqbnrXsjvP5IYt1pZqXFW
I7qaAyf1nfiSxb1rv8g92r0rGp3FtAXXETxM+NHiL3Y+54XmQPBz2ce1LwXn
EHxCsMQVJrT9vqJL2LpfdGBSc0k+X3FUMKHVyl5oRC/OL5P3F7uR65Oz/xYD
vMhjBBvY+kKuSTDk4iMEC73WH644puUatm6SGLG4yPpzwS0lPxNuVXKOzSfl
DIXNS0Tzsfv1+hkOJNYIfrC53eKT9X6i4704R3mFT65qOsGNhYMQzv5Cf7DP
nLSxRmr0WhvRaqzOT3Dgi5neUneu+ukk51h/+3yP/d0fEiNX82ZX91swZPmd
heJ7Fktbm6waWq5JcteL3E7WY/N8qVMk15H6vj5LNLorm7/A0ldaCuFiV3yK
1B1yzSvtgmAScp1Vo8nf7b280O2/Ev+XPH/F9684EdFAyu9YFZ5YavrV2q5i
c9n5SkMga7A2f30+rsSLzQN27tfON37l815Kb93y4vWPcMPXvn3FxWyeKTr5
i3mDkrsWNia8r+QxYtsSF0WnLbiiaKfFb+2+rOuvHHh1Pu5Kryg4hMSCnXtf
1ylcmOgPBR8SXky4pNWTXzzr7AXPInip4KKim5F+XJmxWfdI/JDE75VuYOe1
CFYhuYKswfYCCg8qz7UmeqDF0gXPWH+4wsOEU3zm/6J1FC5s10zyTMHARCsg
v4NWcPIVz7K5otRiW2sslraagOWApZ5e9cUWhiE58OpsO/FJ2wso+L9gP+Ib
pG5aPFPyeeEXpAYt3WPZsJy5tn0c20O/ykvE/hYXlbxBzgDafGVnY656MdYH
in5L6k7BLVf65FWdJecWifZLtCaS/6/O/hfsVzjIV+aTghVLr3nV+lJzrd2K
jm31Aft6+XN5vp/93rJHJH+ue7Q2tPMDhIMszGnn0otedJVP7DP3iD+v96/c
a5/PSWJtxQWZmS/4weKEgudf5JOiEVm+WfAMqbmEcxVcZNdTOIs9C//59z8D
/Zqr5Q==
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "8413297417285155"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.2695189118385315`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.7304767370223999`"}]}], "}"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.775496549646303*^9},
 CellLabel->"Out[95]=",ExpressionUUID->"ff26086f-e5f6-4831-af25-7932d2c34570"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"test4Data7kr1C16", " ", "=", " ", 
   RowBox[{"data7TC", "[", 
    RowBox[{"8", ",", "128", ",", "128"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"test4Data7kr1C16", "\[Rule]", 
   RowBox[{"netECA16", "[", 
    RowBox[{
     RowBox[{"Keys", "@", "test4Data7kr1C16"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<TopProbabilities\>\"", ",", "2"}], "}"}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.772719248559807*^9, 3.77271927548206*^9}, {
  3.772719324257593*^9, 3.772719331356277*^9}, {3.773124904129174*^9, 
  3.773124928357933*^9}, {3.7731251153026133`*^9, 3.7731251512280912`*^9}, {
  3.773125217467578*^9, 3.773125219418065*^9}, {3.773125271868342*^9, 
  3.773125271954652*^9}, {3.773212712732003*^9, 3.773212729006225*^9}, {
  3.773212818178605*^9, 3.773212830613299*^9}, {3.773212941366901*^9, 
  3.773212951689026*^9}, {3.773213005636443*^9, 3.773213014527096*^9}, {
  3.7732132566474*^9, 3.773213256876457*^9}, {3.773294401307526*^9, 
  3.773294423203759*^9}, {3.773348269707011*^9, 3.773348280477676*^9}, {
  3.7733514738060293`*^9, 3.773351485326448*^9}, {3.773356436954606*^9, 
  3.773356459506678*^9}, {3.775496533429831*^9, 3.7754965464457607`*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"74be7554-6025-4914-8c3b-bee43eae7d15"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzVnb/KL1kRRQcVMTIQwcDISBA0UDRR78VAQUxEH0BG0GhwYETEQFBMfACf
QjNRn8G3MDQwVpBJHEHhSxqq2Gvtc24w0l7669/5U7X3qtOnuz/zw3e/9+MP
vfXWWz/92Af/8723f/6N9957+xff/+h//8+P3n7nS19858MfHP7qf//99/gT
7/371Z8//rVX3/zUe6+2x+9/4auvf/C7z7/+zj//MDrn6Zg6P2lb0nejL9Q5
9lwkMbA9x77+tr92/CfXTOLfiFuqj4leGfpgxIA9Ji//9g+//9zr///327/9
8vUnPv2nV++/+5WvPx2/PH/ynx1jT7+1bedkHJ5+y9bV7fGknVR8Tsac6gs1
F0Y+UvGf5NS2bUacUDm4jQdDu6j/JuOZxPlWu17+97Of/PrVdz/y7dffevXZ
UTufzn9qj83ML48T/Zn068v/+uOrv/z9k69/89d/RH5t8IzRnkkuT8Y/afPL
MX85R9u5oLgo6ftkzJ/iNvnd7TWpuN3m4CRmXs771gcnOW4w2KReSOL8aUwS
3U540qhbJ+15ir2kPS/H9mmcJ35N1V8J82w9dzuek3GetPkpbl+e8xTPyfjY
vpPwDOVx27zYxi3FNtt83HL4KQZ72Z6nGJvE+VajnnLqKZ63cbKtX5prXFvv
mIzhZPy3vm/kzqQ9SV229Z2n9jzlwlP8P50z0efJ3FG+M9GfLSdvPS5Zq5nE
7VMMb9lmEjNP13+alwmH2ww26cu2Zplo1PacyfkUL209ejJHW6+ZxPNEryZj
++T7E57Z5s7k+sn62+Sak3h4ivOnvH463urApI6b5OOkX9Q61SQmk/Of8jFZ
Z9jG2yRmnv5921+bwSbxMPG1yd9Sx9u43fJSUmts9fbp+hMuSnzzaUye8utJ
8xMmn2jdpI9UTfRyzLfjlvD/9pqT8Xya0+04U9xOHSdctM2LyflPbPM0VpP4
nDB5wmDb/HqK55fjP+F/SvO37X9q81NcTdgg0dvm8UTrJmzzdJys1Uy0jsrl
iUdMcvYp37f8P6mPJnsetmsd2zp9MoZU7bBdv000ITl/631bPd+ubyRcNJnH
CbNtGaOpe09M+/TfhNOSsW32fXs84fzJOdv4STyXWm980vmtV27XGbaMN8n9
bX+T+muie9T9bmNdtHl+MkfJPbXEEyfMNuEWyvu2nJMwQ3MdxuD8be5MOHZb
C0zqxMnaS5L72xib1OxP19yu/U645Smek1ogqWep9fyJdhn52DyfWnd6GocJ
eyc13eQex/YeE8Vs1DqAzfA3rIlN9i4mbJnUWUl9TeWXzbpbbrHru+QeVnK8
3Q9A5U6T/7frA0ldsI2fLf9sn01L9D8Zf8qjKYa3r5mcv13jSvZAUsxs5Bel
k0/nb9eRXh5Pzk/WRijmp9qQsAeVg83z7dxPatiJvzz9e7IXlBp/KoYTbpx4
GcWi2zFJ9nJs1/0m9UjSnoQr7DWT7fp/sr6RjNu2v9TcPa0fUl5/iv8pz93O
o51HE82n9r5SnrWNYYMhKX5I1r2f+j6Zl6SOoHLT0Gq7FtjuKTWYkNqfnMzL
ZD/AU92U5NS2vwb/Jzq/ncdtXidxNXmGZbv3lZq7RDNthryNH5L9ack+Z0O3
k1qP8pfkXgDFNts4sf004T1K/7fH9vp/wrSTaxrPaGxj2Gbapu/fcGyPc1Jj
Jj6S6Pa23qFqZOpeAFU3Ndcwm/cdjHxP/C45v9kXI78mXmCM+c3jYx+fiu3J
vFPt3LI0xZ9GLfb0u0/PnlN1U3MNk/LQxJsMjaX4v+lTSe7ba+DUmN82Pvbx
qdim6hGb/SZ+TfGG4SlPa6T2vFPjRumhUf8mHpr8bTIXSXuo36XiJ4klYy6o
8bmN86nYTvTB4DqjZpzotn1fgPJHKhcMH9z2ncoLW+uSY3vcKNZKYoCqzQ0m
NOblFOdTsW3nu60tBofY9wXsmG9yC6WBEw1J6gvbr21PsWslI6e2DGnULPb8
Ugxpx55dxxk6k3iZ/ezwqdqWigGKVZKazlijS7S9uec88Y5T9wqNd26cYkLb
a+z1/OR8qo4zdMauGZN4sGO1GQOG7zf1mbonS/myUQMmnJPEicEhxnq4MZ4J
z1BMbuRRwmB2fUSd39Rne9+jraWG7ydxZdxboeKB0lJDQ2ytM+og6tsE1HhS
emL4RXOd7YYxpHLWvoe71cxTMWB7uqFFBrdQnEnVBYmG2HlKeW4Sq/Z4bseB
2pOQzHWTc5pjaN8joO7h2vvAm/xveHpyzWYNRe1vbzKznafbmteYF4PzDR/f
jlVyX6bJOYZnTTS5eY+Aimebew3+Nzzd0LpTXmYwKsXMTa67eV7supLyUKMe
MTjH8CyjLjDabOtwotU2U9k6sNU6Y33G1rdTjHEq5k/NC5Vfxv4u47dsPzU8
i9Il6l1VVH1kxOcppkr6dcPeXcrL7HiwGeNUzDfnxda6U3zVrK1sT7fbSbV5
Wx8ZMWwzgzHmEx2w9+4m7bTZw/ZHo1479XzuDVpncxRVmzT3JCR7rig93B5T
z4duzzd4jzrnFBdtYzupC7bxmfxucp3m8+OU7tn33w3maeaOXZvcsCehWdck
PkhpchInFO/ZDG9wkVHbGuxHtcdoP+VNhjY2deaUbje9wOBn+7nCpL+37dWk
tG7i3cl7Eqj2GPnV9Mcb2mO03/aXJMZuWxNusrftL00vtpnB0CW7BqfyiOJ5
igeafmf7I5WnSXuodzY2/dEYq1Nrwk32bu6RtvfwU/m7PSfRpeYau+3Rp37L
9rtte7ZxTtW5SXtu4PzkXWGn9mxTTNvkfKpf1DgkXmxwEVVr2LFN5SbF9s3f
ohis6afNNjR1mNLnG+aL8ovEx0/lAhXbzWOKi+y93Lfl5infv6GO2MYANdeJ
vydxZejwKaa6YX2+yQN2LiRzYfhX04O2umqPs52bp3zf4LEJA2yvSflp4pvN
bxYbunTz83G2xzV5PsmFJHfsWjXREIpXt7HdHOcmeydjfkNfqGve7Jt2TCax
esPzcbbH2fNOcQWVL0atavhOMm5N1qJ8nGJvqv2n+mKv3d3gm03+N5izOV9U
vDV1ZjI+FG8be9QTH0x8h9pXY7PWm8IP2/YbtaGhh5SGN33TeM6OyhGKUQ1f
oxjD1pltv4xnRpr5klyf+o68sffyZn5o5ri9N8l4XqnJLdu5oL5H3KzdJr9l
+Bqlhwn3bsdwex2qvmvmS1I/GvpGMVjC/01+aOa40eatHlLvnznlm8Z82TVL
woHU8+N2HXqqPt22OVnPMb7lR41hom8UgyW53+SHZg3SXHunPNp+rorSKCoH
mzUL5YlGfZHkTsJ41HEz37f5YoyhkUdNvrpBB5o1yA11QVM/Dd+0nws4lbNJ
7ZAwZ8KQCSva79kw8v2GMdzmrKFviT7coAPNGoRicsoXKA6kNHbrX833Bdk5
29SBpkdsa8zm/Y5tvtssROnepA32+0Ps8bHvcdvcbjB5s+4wmCThgcTvKG00
WMvWAcMjkpih7uM3+9L83VPP4Rp1sZFrt9VQyTFVFxjtt7Wo6XeJNm5zlmKk
5r1IKt+pe0+GbhtjZcSSoRu2vt0wPs0ayqiDjGPjfr3xXQbD7yiPbjJkogPb
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
mDQ1ivLQG+auqcOn5tR+/oXSlqbm2zFpcBeVj837DgmnbWvMG75h1OSQRHOS
86m+nJq7G7zVnlPq2L6neYrzDT2xObxZp1PsanDC1tcSHjv1HsutX9v8TzFV
Mi/GPuSmtxr7/JuaSd3TbLbf1pNEV5t5bXC+UUdT/TLqVmMPZzJfid5u4/CG
uTA0vJmDb+K3j6mYoX6X4upT5zTzOtFtu7+UByXcRa0zJ95H6U+TE5pzQa05
2H5h6BU1j2+KZp7idvvYZqRkrpv9tdtJ1a1GTE448OWxoYdvylxQ+6ht5jf0
yrivdLNmNmvPU5qfxKe9j/RU/UW1k6pbmzE5+d3md7VumIsm51P5aMRG89vH
N/ChXXva10xyZ8tI1Jyeqr9uWMegfsvwR5sPm+OzPcfm/CQm7Xc0NWt5+/wb
+khxaTOvqfy9jWco9qM82l7/3/rjVpeovdzG+BhzlORa83lPitWNWp7ycUrD
jT5SXEpxr3E/keK3Js9Q9Y7RHmr938gvW2+TOKHYyfApKiZtDUx8J2lbc2+Y
3UfKX07psM1Op3gmaU/iv5R/bfmTyq+Xx3atmrTZ4ARbEyZj3rzvlvDDqf2r
Sd9PzREVq4YOG3l9imduqCUNhjc4dsLbVAxT+U7NaVO3J2049Z5Gg5MpJky8
m6pBkjk6xeGGz1K8bfDMDbUkdb/vVK1hx5Xxu9s5pWrDiSZQ/mJwvsHJFCPZ
LGHUblu/Mzi8WVNvx9/gGYMtk383vuXXrKeMuDK4wvA+e2yNtVCKJRJOpmol
2+PsNZzJsf0O8FOxYfCqzZPN9lA1uFFP3cCHVH1BtcHen5b4i8HJ1HhOrnnD
N0ea7/oz2MbguiRfDI6iYoAaB0N/qPrihm+LJPf+tte020DpVeLjRqwm3N5k
nqY2Js9g3uD1lM4YGt68P37D+c3nF4z9w/bfntofkuSywfnN937YTNK8PqWN
lFYnumd7CpVfxt6GZr/s86lYtbXIYADjb6n9Iad4jGq/vS/C9lPq+tT8bufL
3tPV1OEkPikNT8afquOo842a3dBwKneMZxAoTd5q4Ckes+ed+nfK06laIJnf
bfuNvZ2UFm11uBm3xvjfzP/2s7pJPhraaNQvibcm83jqu2zGvJ+qE437FFRd
ltQsyTnNvQHbHLTj1hj/pF/G+ck1Ka1OPMXQRoOTm+/JMXiM2vdr1wVGe5Lf
otYBDO6lvMngn2QcbnuHuTG/dtwaDE+139DGbd9vWG9psijFwLZWU/Fs7BEy
vmearPO/ic8I2LqaxAkVMwb/J21IeMyoX5r6ueXkxMuMPKV4LMk7Sj8NbrmB
taj2GN/6SWL4FJtRvkkxv/G31Dl2PWiPj6GTFHNS6y3J+lXCY1T+GnWH4SlN
1qLYyc6L2/YP2L5JMb/xt9SxXQ8abUv08xRzGr5mxIPBvUm/TjH5DTxmcKPx
PjfDd4w2UIx3iv/tHL/hvX9NfqDYzOYuO06S6xj5lfxWwuR23tnMRs2vEbfN
b8wZettcgzViMokBal6a+knpZMK3FHclmmZ4ym0MYMzXbV5AcdG27/YzAtvr
2Pcmtm04tZ/fyPEkluz3ndr7DykttT3X0L3EQ08xQJOFTnkBxUX2miHFYxRL
Jyy3vSY1blRsbHOcYntK5xOtbnqufY6x5mOsezQZ4DYWanL+lovsb4na8Wnk
TvK7N4ybXdtSNddtub9l3SbjJZ5r+6Mdh9u+GDXFDTFD1SPU3jbqd5Na215L
T2qQ5rjdXKvadYERY4l2NXkveUbGZpUkDg2Wa7KQMT631Zs2c57qCxXz9rgl
OWXXqts5teu47fmnnnUy5t1g1ITZqJhvcoXt6QbrGvxmx7N9P8KoQU6xX6JF
Rq261dJTz0QY94CMMTQ80eYom6+aXHFDLt/WTqN+ORVLp2Lb1hBDT6ixtfdE
GX9r5wvFe819HfY9iIQfqL4bOXjD+VQcJvULtWfbGBOjPac8N9GTG3h4O0fU
3xq63WRyY1/H9rcM7zbed3GKe5vnU/xG/bvx/VaKwajYPuW5BttvzznF2HZ+
JfFPeTF1bHDUtu/Jun3CAJP5vW0f0fb8JD5t/U/aT7H6qbrM1hZbV7dj2FwT
MPKL8lnDE2+Ya+qaTU8/pXu38UlTo6h2Jqxuc6zBus3rG+9SoObX/i1Db0+t
JdpznfTX/l3Du5tsdur5ZUOjqHFLakZKS+17SXZtsh0T6l1MiW4Y+WKsrU3O
t9cS7bnettl4nzzFD7buJfl7w3WouDI4/1QfKR1IrmPHv9Gvm/l/O87/ASwj
3N0=
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "11101279181647317"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.25015467405319214`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.7495269775390625`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzNnDHrfttWnW8UJEFs0qWwCJhCwcaLoIXnkDaEFAoWWh1FRZAI9xJC5BZ+
BLtUNpYJhnyGIIgWNtap0/kJDHgvWLyBDHgenrn+x+J/2OfHfve79lpzzTnG
mGO9//q3/vBXf/fHvvOd73z/n//wP7/6zX/+t9/73jf/5dd+4kf/8zvf/MF3
f+EPfvyHl3/8j/9+dP3Tv/+3X/32d3/965//i5/9ld/5k3//9Te/+S+++h8/
+JmvP/++rj/vJ9fkOfbvV5+14yzvbuf5as7t+76Yc/u+V2N7EedX8Xz1XS+u
SwxcvcuLmHyxLq9j73Wc/Pf/9nP/33/f/au//+p//dL//er7//Kf/T9///zs
5z2f1+T565nr7/Zd1j12nOR91zPtPF/NuZ0r8r12zu37kmsyNhJv5d1LPJP7
X8RkiVt7XfZXub/EwLf1XSv2rsZA7v+sF//uT//jV//1F3/w9f/+qd/4+vP6
J7/311/9h7/85a//zx/9p1/5vF7P/7zH1sGSJ+1n1zg/r9f7rjhfY1vzTMZG
5tzmz89nrrW2sbrmkLwvuV5jW2NYc0Xi3D6/4Do7nyQmbc6/qiN2f9l3JzF5
xZ1ffNeKvc/rMgbyWbLuay+sOCQ5iqz1yktrnJ/3rHn+vP/zu9Zz1jPJPiJ7
83MM/+bP/udXf/ev/vyrv/m9b+bY1vzYNV3PX3FisQEZ/+f7khyyYnvFKsG0
n2NYnyXPL7iO1Po1/xaHWJxfcj7ZXySHkBr6Yk7W38t3rdgj+Y2Mwc7Vej7Z
a2Rv2trx+cyVHz7/Tu4heWzlpfUcsl/We635tM+x+9rWtRUPa2xrrsj4Sa5Y
+YE8h9yz6i+5JliOYDxSK22uKLnd3k/ekWCeNbefOaRgszI/5R6y7p9zYuvR
whhkrhZfWDh87c3C8cseJDWr/N2+l8U/ZF1s7Vh4g2Bv8r3rmXZfk31BdDyb
e1/oIfZ7CRYquaJgXZIbbVy95h1Xz3zRByF7ysaqff76LqsFETxm88zVHlxj
IzWLcM/1Xhb/kHsILyZ4g8RJwduEK9kYJp9d+Wetxbq/5CUyBqLvkX1K4s3m
9lLjbL/jBe94jdvLtd3LBFNZjmzrCOH+RHsp2M/GKsGNi9d8/n3tX5sHSsyQ
/WXXyGpuBG9bXGF5se2xknW38UP2RdGd1t4kecBi75L3bP0ivdHCC67w+Qs+
YnGX3b9kzlfMr2fa2C66ROEjVtMmtc/2Ya3fg7w7+V7SN7f556pmFfxv33fV
cRIbBD+T/prVSEm/icSk1dlIziceGJvriAZyhbFfXxcOSHCX7fHZeF7zb/cX
ubYYvuQfi4VIH81qd8TLYT1IpN7ZvGcxieW2xKNSarflDhYzL63GcuerdS91
do3BaiBrTa1HgnD/fwp5vtRH21u0e7DwQVKDbH+H8IjC9+1cFSxE4taeZSDj
t/ot4RpWf7aa4apBhMeRfrTtaZa9Q3g0yb1X617qbOHmJFdbjwQZ55V+9SVx
/uc9BCcTPFZ6bWQObQxYrmrPoazxWK8RqdEkp634J1h06TDW30LWjtRuq9cR
LnOlLdt3J7zA7p0rvkN4t133VbvtexFuTjgmicOiPV6ty2ucT/LJ6p2V85WW
D9r4tPnf5gSrx65asOKN6Gk2Pq3+YK8LT7T40ObG4lsjOb+8+4pzsndInFhN
lXCusu5kf63xv9Al1pzYOkhi8spPXnA+ySdEDyG88gqHWL5A8p6t3Vc6Usk/
65rsZduDLt9L+A55JskDtnZYjcj2Scm7k/xzVbNIrNrnr7iyPQKrcREcRXJ1
6a28xrovcP4LnFZ8LLa22lpp9YoVS0QDIToSiVuLDazGSJ5p+9rrdwbWtdX3
1mfJ+hINf+VzovGuOVl1oeTw0tew+dZ6IVYMkPETLkP2l/UsFZ5SeiVlXQpO
s/Wa6MnFO3R1tsXmN8K7bS0u2J740kn/l/RMSy/SYm8yh2T+be+7/CYD+fsV
p7PYdT2f8O7izbOxV3DslU5Y8EPJzxbrWo3I4nyCUQlOs1zA5qJVx62mZNe0
xJXVAK0PttR960ddMWbPu9naVN7d4mqrU1kvWVn3hV2tD61gQrJGVjMka134
Prm/YCfbg3txfo3ozy/4RTkr9BnPNjasd5r0rEkeIGMgNXSdty01qJzvK5q5
9T6Ra6txlX4Wucfqt5bzFp5Y1oJgQpvfSP4ne82eU7DXZe2KzmzrjuXaZC0K
vyg9NbLXrH5uPf/k923WGpW+WFlforMVnEx6wXYMBYeQnFn6WaW3SHBOOS9j
vSK2X1+4gOX1lndf9UatNkjmx+YBy1Osx3LNsz0Xb+fW8mVbRywuKv6Ecu6g
aMtkfUmM2b1M8IDFqzbnWF5P8IDlKYUX2JpFzsuQvVz2r83hJeevOX+h9dn+
wloLqz+QPFB6ajbnWI5fYpvkvaXP274YyVE2t1/1L2xM2vpl+1AF71m8dHUu
gPjGyTxbrFW4AKlZ9vzdFacrOZ/ECdFyrVZv52fhTKt1kFpcvPekHhE8U/om
pcdX/Lpk7UgMkDpYPJC2n0Vqa/GtWe3X+nOuYq/oUVbnsWMu50nXeq05J9yc
jPO1PnNVXyxWX/NjscFVj6zgrivvtMUhtm9ydabVaiPFk0nm33qHbM60Z2aJ
5nnFUxbOIR4wMre2f2T1KKvz2DpoOftV/V33EA+S1bKuej22vlg8T/Z46XGT
sV1xc4vtbV9gxcbST8icX+X/ggeIJ9Pq82tOiu/F8kdSg4pXzfIUu0dIPrFn
2cjzrc5ja2Lhp+W7rAeG7IXi5S71gvQ6CZ63+8L+HoLNvcXrYrE90bdJPFhc
tO63+b/UXKIZFm1k/f1L9sg+35d8L+FBVoMqegVZlyvfjsUbpY9G8Eapv2Tt
FjawOqHtrVjMsz5btG6ylwmuK/FG9Bz7LjYGSB4oHJD00y3XLue4y9zaHLJy
VMlXpaZfcSiiQRE/oZ1Psmetb+eKXxOuTWrllU641nTlsXK2wub5Fzin6ADl
muRPwu/Kd5F4KHivnJe0fIToRXZfWL5g15R811W+sjWdcJmC5y2WW3NCeuik
Xlj9n+CWErfW2190QluDLMa78gJd1YKiK5Zz68ULTXIC+S7rKbJ1wXqnbT0q
591I/rnSYG1P38YVyVdXPlgSY0Uftmt0xU+tfmg5iOXXBNu/8NK/4Bckh5R+
VvGAWe297JcrDafgUrJPy3uV/o6tRy+0Zav/kP1V+AIZ/5WeaXu4JGaIPmzr
WuFc9kwf0Y4IvrI509amgo3tmAm/WHNVcuwVFirPJ3FS9lHhIPa3lUiNIO9C
vovkf/vuVq+w+afURLJGhDsXv7rlaNbjvd6R5Aqi81sPsMVOJMbIHJLfNCa1
m4zH6icWO9m9YPGPzbGFG1ruVvYIubYajuV3JOZtLK18ZX83gKwXOZtmayXZ
a8SzTWriel/yu51WI/qSekXpFZYcRbCu5ciW/xbeTfCG1VXWtfW0W85u/TkW
AxdNzMaM9c2S3LvecfmKC9+58qpZ7bR4Dtc8E5+/rVNFMyFnwayPq3DA9Y4k
9ggHt/zO9iJL3JbYJjFj8TbhdCu2Se0gv81Cztes/kjJOSQPX/nnCd98HUvk
HGLRcsvvYxDsVPTbqz1bzvVceVBtP4v0Yq782yTe7HpZ7kDOjJDcZfu/Ja6I
PmY5u50T4r0nvgKimVsvJdEWbH0sGkLBt+t7r3KUxWN2bJa3Wk5Xci/hd3bP
FhxYdGyC2dbYiqeRzEPRom3es30Tq+fYubI6j41nWx/tGW3yXURXtL259e5X
eZjURzLOq3MxJK9aXl9yIzmDb7FHqa1XuZfgVevNILzYaqElX5G9YDWlq7PS
9vl2f5G+Ccm9hI+v7yU6Btm/ttdT+qT2LDDRbYhWcPX3knMKf7RrVHD+1fOv
emHl77a2ltxbPCf2nMjSPK1udsX17HkB2/uwfSvy/LIH7RySdbH5kPQOCAZY
c15+F8V6FNdeW88hfifiqSB/t7mxaIyWs6wxW5xPNEby/OUtsV7H1+tFeAHJ
vcSjXvaLze3k97Vs39/2Ii2WtnmP1JHSw7r6nSiydkTDIfyX6GwkRxU8TGpi
6YWRvLr6pCsvEU+p7R+R61JfyN8tR1sxRvIJwYRrnm3fv6wXWReyN63+QHRO
UpcJ5rdneeyarrm1NYL0Piw3KbnFcl57z9I2iaaxYsPqHoU723x+1QsreZXM
z5XPgXy2+BMIBraalT1HXPCY5UoLYxefFcGKxPtX8E+Jq6Itk5hZa1rysNWr
rY5dcovlvPZ6xTnhzuSsxMIDV7+nYTUoG9uE/9o+I8FUto5YXcJ6BsgeXJjB
nimzvS3Sp7beKrKOFo9Zvf2qdpQ+keU+pM9rNRmLl0geJmtEYonkbVKX7TMt
V7XYuPRWCt+0WqXlp8T/SeKfxEPJqyRmiFfHakHks1c6Q/Gdft5Dzt2UeCZ7
xHo2bH/QxudVn2idgVr1feV8oifYmFl/J3twrZHl8iseSB23fjYyhuIdKnod
iaWCwwvOITW07NP1XaTPaHuvZJ8W/0DBui/qMqlBZC2K/ly0JlK7C+da+fmq
T0RigGDm9VmCKyxuX/pD2V8WV5CYJ9clbu1ZifW9JH5WDbL87sp3YesRGSdZ
oyvvrsVyNoYtL1jv+KIur1pGnmPxEtFmSewV/kLWpfSbbJwQv43NM1cesCtM
azVSG2+2jiw+a/smNvbInJd3IZ9dPSyrPZJzapazEGxP8pjFdWv8a9+RebP4
1uacUpfJHizar+XdNucTPGzPcV9pAuS9yLvYM1k25xRsU/KbzScFS1gNx+Yu
8l42n1v8edWDIJ4Hwq/XMy0+IWOwGjvBVKRGEB8IiU/CcQj2I/toYbn1Wav9
Ft1yjYfsfdsTJ3XQagJkX1htx56rtfnH6gNXfrNyD6nj5SyY7ZeRvUx6H6RG
kLha30XqcsEARRMj81Y0PbJ2hWeVMayaQuah9E2IZk72YNEtCY8j+7HsU+uB
IeMn+MGe57VrVPY16aNZv1m5LnzHYl2yjlf+cILhbVxd6VHFh2ZzezkzZTlU
yZl2zJbHWW8GyQlXderqHlIjinfR4u2r9yUaMtHWSm+leNRJLb6qO+Sa7DXr
aSd7h9R9m8Mtnrf5wWqhZE6IFmT7UAR/vuh9WKz7os6u77VnHq/qyFXesNqj
7fGRvEr2EfEMlJxJYp7UAnvmZcUbeUfiAbuKH/KcwiNenwe0sWdxCNGBLS4i
+ucVxrMaL6k7pfdh87PVsUvPkehv6zcr1vWV9/IqNxaetTR82+Mm8WDft+AB
qwWte6xGvfCb9S3b+LE6fOFoRe8l2ov97Z1Sg8jvP5BzwSROyn4n+o/NRbae
kjkvfXlbZ8s5XLJehTeVvEHiwerVBAMUrGj7U+t9iad97QurBdnzrQRfFU5N
+r8lPom2Y/OPxSHEL0FqBKndpNaTer1i0np+ypyTc6CWRxRuVXAFed8X53Cv
vP02Vi0vs+dbyV6w51bImlp8Ujztdg6tXkfijWgF5Tc3rK5la7rNS4XLWHxO
/Fcr9qymZzUKiwFs/SpnZq1WY3OUzVfr7+v5xA9A9gtZo4K71jNtj6D420mM
2fi3eXKtxRUfWX1ei/Ov5p9oxcWTaTkF2ctXecn2CK54kOXsNuZXXJF6SvBJ
weE2n5Oa+6KPWfQQiyctVif3ENxlc9fqEZQ5v9qndh8RbcTGycqZJbeXfEW+
a2HgUlPIPJc6dZWXLJcnGpHNdSsPvKj1dr8QD7n1bJB8fnWuocRe6V+U/Ws9
V/Z7V84nvxFBMDm5LpjZ1tOCowqusFix6FRX+YH0Kayn6KpOLXxr81LxMRLN
nOhFZE6sh9PmtCufvPVsFN2Y8LvSTyH8wmJ4cr3WeumQV30K+xs1xC9E8Mb6
Xlvjrs4K2X4o4Q7Wx0Xy+Vq7oneRvUnixOai4isj70s4Dsk51jtt9779rJ1b
y51tbSIaqeWGa2xFr1s4kGC8paet+8k9Vzot+V5b620vyc5tOet65UshOGHl
QNInXXiV6HJ2v5O1sOtCeJONJYsTSN+q+GltH9n6A0l+IDiH6HKkTlmuVLDl
Va6z95D3tRzN1nRSu8m+sP6TonNe9ZLsHiRnssiYrZ+QYF2bV622Tzz8pBaQ
5xQN3+5lew/hXMS3Yzkd0RULH7E9NYI9SF/J4uSVG8m+WPuu7BF7bbnVFa4m
1yS/2edYzkt0ztL3JPNJ8OQam8XqNr/Z/p1dR7LHrQeD4JyS2+09pedr9zLp
YZV4tv0mu+8K1iV4oHgqSk4ovJXo7SS2ie5a1sjOifWB2GvbO7DxbPGD9TOU
nGl/K8D2OGzeszFDOOznOpI5tD2LEntX1wV3LS5gayKJ4cVHyplN27O2MWBj
z3qcSO22vH7FvPXtk/NuZI3snNg5f9ELIGu04pnkw+JnuMIea/w2h1sdgKwL
wRiFwxL/M9Hrvq1a8LqXSuaNxPDV7zCQMRCMSjR8G3trzPbMy/qs1QRKz7f0
sEhclfP7hOOXXgDR8Ui/1X7WamsFe5DYILnxc57JmpJzeeSzthd8dV6S8PTX
tYD4vUsv1WoFV/WFYGM7Pyt/Wj5izzCW9bVnaoqvkmAY8neSV61vnODS4q8g
XIbwr6tentXTyL62Pr1vS5ezvuXSN7f4mYzhhZ+f5Fh7xsfiB4uxbX0htayc
aSLYuNSswrttjiUxQNbiRQx/PofUXML3bd/KjpngDcv97XXJY1f4ymK/K12u
9OxKfis5h/SOSWzY2mRra+nTWT2nzH/hNRYb2F6A1e2tRmT7X8sDs2oB+XuJ
YVJb7bkPy/UsH7e4opyhJrXe5rGiX9keTel3r7UguivBluVMN9HrXuBqUhPt
9xK/ItHKrrTK4gOxenUZZ9FqyDwTn6HNY2TPWh5hY9jWghdcz3IZyyPIPFjd
gPA4i81sL97uO8s3lz5AvDdWTyC4sexriyFJLSZ7x+JbG4eFr62cY+d5fZZg
4KI72XHa3FjWwvp/rrQp628ntYDsI8v1LJexGpT10pPxk7NgLzTtsu+uNCtS
gyzGu8J+lsete0h/kHBSe66q1EFy9sf6u4qOZzFSwTY2Z1ofUdEWSIxZX67l
6aU/uGoKiYfiFbe5neAxmweI/6TgsRLD5bMv+CMZp/XjkXpnz0Ku69JXIvnf
vsuV7kH2xdI0yDzbs5P2vOeLHvTKw3aeizZo/TwkF1l/Czn/Zfe13TskF5F9
as9m2n6oXfcX3uPSk7J47GqcRE8m/lLyHJvzCT6xGhTR/wsfLH7XlfOJJrBi
gGBX8swXHp7CTUgO/Pws0Qbtelk+uMZPvsv69gmPK1pK0dyu5pDUF8IZX3iP
SU/qSrOy4yT7jmihL3jBGn85b1Xw/5XWQXhNOcNu69RVbSq8ad1P1nGN/+o8
+9VZDIvJCz4smIfwlzW2qz7glYb8GreQMVjPVdGsbK4gOXzVxCs9ynpULKZa
Y7b+n9L3tOMvvOOqHpHaZDlOOTtA9B9yXfqt9iyG1dwKDic6jO15Ffxgc6nV
TIr/p+AWsndKT8ruC7t2BBeROF+fLV5QUrvLXBFO8aK/Y7GZrYnWr7vWemlu
ZS+T8ZPcWDSZ0m+1dY2c9yS6E8HhJJ4t57U6mI09ousuzcT2j65wi+U4pSdF
agrRvkg8FG2T7E3rH7acxc6VvS79HYJb7Hm0cl6s1CyiTVle9gIH2r1G9kvR
f4hnuNQpmxPs7ySQd7F54yonvNA2Sz6x4y+/S7DwkvXGWO2I9MrJ/FtOZDHS
1TWpZaRPtLwfFnfZnFBq1oorW98tprI40Pb6iS+dcKJ1j+URtk5ZnzyZE5Lz
SY2zeMPmhBfaZulZWI2X+GntPiLnvq2vmKwF4VC2jhOObDmRvb7yMJA4J7xs
6WDW50Bq1oqflXvJutt+PVkLkj+JnlYwGFlr8u7E61vGaT2ZhUeTnkjBdeWM
GNGBi/ZY9MMrfcPqXQS3k7MzBa+SHEJ6EMUzU3o0BGNf9ezIOpI9TsZMOKPN
4aS3bmNmzY/VOmyOtfyXxBLhO2SchRcXPdZyQ1J3rF5q84/1wKx1t5720gNa
MWO1/SudnOQiW7s/r0m/3u6FK12FPJ94D4jfpmDUgiHXPFhvp32+7UXa8/V2
rq78V5bvEO5gv6vgH3sWw/Zc7LsT3EVwwsoDpC7bWmCxkI15wkNLbrEeSIs9
bF/D8riiqxQ+SPSZwjFJ3rN9otLzJf1Zos9bXfpqfsh+fO0NJhjDng23+Kfs
TYujik9y1aN1Xc7dkH4f0Z0Ktin5x+6dF3zhKt5If9PWqeJXsTy6cMyC81ef
aI2t7Ec7/yS2i95udYkrjknesZx1tVzVPofsTbsfLQcne8Q+s6xF0f+vemQk
/9gxfEm+YONtPcf2d2yeIXnS5oc1/rV37F4m+Y1ge1KvCS8uHKTo7YUTWW3Q
6smW2xJNhmgC5Dm25hb91p7TXPti1SaiRRfMRq4J7yN42OIoMgaS86/4QvHc
Wp8twfmEJ5KcQDAD8f+Q/nvxLC0Oa+sX0UvJOhIvaIkxm39IvrX1yM5z2SPl
bF3puxXORfAAiclyhrToKgXPW/579XeSc74kX7BYaOnJJR+SvG3j2fI4GzNX
nnx7P/Flrb1p/So295LYvuql2vvJPBcfGtmb1rNRMLy9Ll4my3+v+BrhI5Yv
WH2Y/J3UR8JTrnKXjW1Sf8vZCjsP9kyNnZMrrkTwifUw2LpjtRS7jmSfWr2C
YDybNyxWtP3TNbbFy8pZiRfnKex+KeeqyFlOghXL2UwSS0sfJn8n5x9tXip8
wT6/4Fuie5dxkl6YzVflPAJZC6LzEw9D0V7sGWTrzyH6KuECZMxrr5E1XWOz
/dPCHV7geRuTtn9Revq211/mivi+ViyRPEDW2nqfLCYh+8562676CGuuCr5d
31XmrdxfajSJq5WTra9j1RSS88mevfIMF82NxEDxDtnvsjFzhedt74z0L8i6
E/2n5FLyjvYc6OtrEhtEvypnugkGu+odkJgnmO2qt1J60ESLKDWUxIztqdla
QGLp6mwv0S2tf57kNzJXREcq3MHmz+IrtvWa4LGiJxcd1cbYuv+qt15iyca2
1d+K1l1wy5XWTfpERfstWJ3M22u/LsnJZM5JT/ZFjrLX1vdbsPrCJ+X8xWs/
T6nXa56JXk32V9FRyZlNEp/Ww/wC9665tdoR0d+sNlJyKdGurR5FMNXiDsVL
ecX9LQ96gX/KOYIr/8nVPio9vhfvvj5LeihlPkv+L7444pG257xKD5SsVznv
f8VrbE64mh/yWeL3LuemLR6wZ7UI9yHPsfqD7dsWv67FP6vu2xxo8/mLXiTx
Rto+CMnhJK7I3K6c+cLPU/RAohVYbzkZD8GZhKvaa9tvLXmM5ASiEZXzboUj
F49iwXLku658iaXPSGro1bqsObF42OKNF7q05WUvfiekcD1yP+k/Fj+Pvd/6
fGz8kPEQnW1x/II5CfYr3hjyWfKO6znkN45IbrEc2dY1ottYTkrm1voSV12w
n7Uc7cX5srUHLc6xXKPoD6U/ZffjmkPSVyK1lbzLt9U3IXNVMCfhNaT2kX1E
+tQWx1rNwZ7bsn8vnhCLhWy+Lf2vwtMtnr/yElsuaX1BJFZtrVl7qsx58fvZ
Gk3WjmhEFvPY37EpfMrW0HJNatza+wtzFk6xfDgrVldsFLxq96OtrcWvQvKM
HY/1f649QvDP4jUktommZPnXlWZIYoZwVbLvbK35fA6Z87XX7PkLksesN8ny
vqLtW92JYNFvy/NJ3sv+NoLFHmTebM0i+cr6HEj9KuePyJmy8ptaVzXL1nGr
3xKcRjQli5eKHm5rk+W8hQ9a3L72INEe7XiKz9DyPhJjV3NIPMmr/n7J33Cz
uMjui6IRkRxVvB8WR11puVe5mmgjZF9bzGb9WkW/Lbl3eSrs2RZ7LuCFDmb5
YNFjyXjIPJTfiCj51r4j0faLz4Tgk3L2xPICq4PZfUHmeWlEL3SY4rG0XrsX
us2XxIG2Hq2YIT6WNc8v1s7qsWSuSB0sOtjKLQsrWg8A0S4INiaYvOR8km9J
jrW65ZrnFz4Tq8lYnL94JdnX1mthcZ3dX1ZLsTFjecHKe0W3IXXhCgfa3y5Y
e7lod6R227UjcUJ0ZqspWW2W9BOv+GnZm8RDZWPG7gWrjZA6UmKV8NzSEySc
2vonVy0rfNzuo3Ku9irOrzAz0WeIbmP5VMGBRW8s/mGrmdhzZOTaclVyTqfU
uJLb7bkA6wEuZ0gt/lx7oZwFsznN+ojWZ62OQdbR+iKu4rN4OElP0+o5Jc7J
M1/ofiT+Vw4nGMPWMvKcq1iyvSRbZ8t5KFLryZ4l82PzPHnH0nslOs/63iv8
aX0jpXd/5Q2z+NBqI+uZpD4WX5DV02wdfN0ftPreqq1EO7WevfVZEp/WH072
NZmfEktlLxMN3OZzy0ltHbFYl/ARgitsbr/iv6/xp/VPXn2v/Wzp21qvC+FN
V/FJ8oPtIS4Pf+kPWv2k1F+yF0rvwO5fO/+2dpO5sn5mm0MIviVcdWGbcr6J
7KmiV5fxFH5h+79X+PMFV7V16sqPRGq39Z+Xc4K2F2DzwIqZKy/r+i6igdt6
TWoNmUMbM3aPX+1fmyvIvlgcx57ptvnwc5wk9oi2Q3Cm5Tg23ko/kfALqz2W
M0ekT1q46lVdsHjD9qGsv9FioYJ77TkvyxEKbinvQu4hfgybw62/ce1xq18R
vGf5l+VBa5yLD656avld4Ud2b1psTOJtXZOxWT3c6parttoecclpK24L/id1
s+SxwikKbizc4YqTFtxiz0fbWly0L5I/Vz/F9pStvr3GcKUPW8xv+QjBqJaT
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
EW5u/SpXfolyv42TkodtzfoH2sFGqA==
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "11021473369162315"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.05244062840938568`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.9475593566894531`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJy93T/LdW9a3vExgslbkGAxVjGVaGE18yBMo5AiCgElzQhaSQIqJMFGsLUX
qzSpkipNwDfgi0iVMl2adDIkDqS4B3Lq58tx7Sl+w56btdde67rOP8efc63n
u7/3b3/rD/7Rd77znT/+J3/3P7/1w3/363/0Rz/8D7/9cz/+P7//wz/81V/5
w5/9u49/9v/++/HnH/3e//ren/7gb7//57/8m9+uz//sL3/121/99S99+59/
8/vnMfXz13Nen+Ua5Lv1+Fd//8Tnum71Ouu9yPW8Wp/ltz69d6/2osb5khef
iIdP5NGrvft0bL+6np9mnXl1/XVN/sc//lfffufn/823P/mnP3mer3//+vn6
rhy/fLf+/VX8LOv26b4j1yPX9urel/h51WdrHNYYq/my5Mgn6sar/Kp79+nY
rnH+an0+UWfq9dd8/Ovv/uDbv//RX3z/P/63X/yJz8s1X+f5pV/43W//59d+
5tu//t/f/YnP8t3rPHL+JX6Wdfv69+uaX2GY63rq8VLT6m/JfS17d13bq/h5
lQsSM/V3a7+Te1z+fu3d0hck3q7z1Fit6/OJOlOvv97jdW3XOiz5+/XzFZ/y
XalX1zmv+lCxk6ybxFLts4IBah+/jpEaK+eRdbv2UfZO8PYSP7WnXLkguFGu
c+l3srbXOeXv1/n/68/+xvf+4F/89+//2n/6lxP+v9bk6/m/fvfr32U9vx4v
6/OJOnNdj+CHiiuu42u9knj4esx/+c///P/7n+BPqWPX+SU+5fqlz16xVHGm
9Pcr/qUHXXFbOea1nku9vfZOtJfruws+v+5XuJ7UirrmUouuc0oOSr5feSd4
QO73iu1X2lqtJ5+oM1ePrvG/cL1XeEbiR2JA9uvqTRVzXrW04q5FA6+1VPqU
4BnBeFcPkn2v67/gcOlxV15UfUl+V/BPXXOpUdKn6pos3FbwiWg+r7Q16elX
H69ayqKvVixauV5dW8EztY8LvhVuIjz6E16enF/4rGCwV8fUWrr4FxWDLTi8
6ooXHhPc8goPyJpfubPoh7Iml24j3LbGm2ggVW+XWi25L7xe6kDFEpVPVS5c
tfdaN6S2S8xUr0E0ik94eXI9F56X9V8+LzVBapTUyWsNheMLRxZNQ/7+9fzS
IyoeEHwlnEjqcMUeVTO/YkP2rvrLX69TsOgyZyK6feUR1QuoGoXUkyt3Xnk9
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
X3V+wZxfP18+XX3/kvg4F4da8LPky5Xjsp6i/1ePW55TqLW0cg3BY6JlVU1G
+MV1zVftqu83qzizegcysyHrX2d7avxXf0p+V/RJeT9qPb/8rsRYxQOV14h2
JHkkukrlbvK8lei6EpMVb7/Cz6LjiadZ51tkjySWKs6pGK9ijKpTiR5VMdWi
C4mmt+jeEttXXF3xI9cvfXa5R+Gbr2aiFvwj+VLrZz2/fHfxOKo+U/vgoidU
DVN6t+Bn8b+qp1mvrc5OVD1Z5jdkfST2JMflc/UTBRNWXUjqtsTqgi1rzbzi
SnqiPHMh97jUnwVLVJ1nwYTC6YQX1Biu+LnmTtWNP6FFSC+TaxN+JPNvVYuu
61ZzQXTaBWvJ71a9eulrtY5JjFX/ovL3qmlXv6D6thK3ci8SPwtfqL2vzrQs
+ERismp3kne1Dwpmk5613FfVIiofr9dW163W5Nrvai4sPvvSm2SG4RU2qzqt
5LjE3jJnXnm9aIbiOwhelRir9adyh3qP0r/k7+LBLfjkE8/aVPwsa3vVEKlj
rzz66tFc11DXvM6pVl4gfETwZ9XeP4GxK35bfJkrJsUDkhxfZn6q5yL3u/i8
lbNXn7RyeTn/ohdJPanPy1S/Unp6xSpVqxHMJtdZdci670v+fj1GnpOqdf46
/9dr+BoDdeZEepDotKK9V24iGPtan4rzRSMSb0h0rauuXtdT38m/aFM1xyW/
pL4t1yz3fh0jtavGzyf6VMWBMmNZMXnVHOr6SO7UeSTZ96pLS/xctXHB//V+
6zt+a1xJr5fnhSvvW2pU1ZcEb8iMn3hqoqtUrFjjSnJcan71bhaNQuarJd4W
rUzyovYpeR6/ap6V+wuOumL72jvBisLLrr2ouSB7JPGzzP/I5+qtXOsget0y
VyBcVTzxxTOS+iMxVnUniTHBDMLX6r4Ix5e+UzUQ8XeuOJf6v8x71HsUbis1
RLQduTY5j9TkqrG8isPqxch56l5LnRdPZ9FapZ7IDPm1DpXz1h4h+fvKP1ry
t3oEwjWk1lVdVLjYK35XNdVX8xXLv6NafcYab5Ivy3spr72uWF3qyaucfRWH
9Xlb0dill9WYFz1T9NtX1yP6htQ9wb2CJST2Ft2menOiGUoeCba8zr/wBcl9
wZBLfVtwe/Vo6rtl5F7qdYqeUL3dqtPWWbLaE5ecXbiMzA8I9xFuLjqJ1GpZ
N8EDEntyPa80JTl/1Wnr/IasW8XPtXcItpEeXb1giTd5N530o1qj6uyH9HTJ
zYUfyV5f1ynvoqn3JTFfPaBXc4ALfltqsng6Es8V+124ovK1Whur9iv6odRh
yeuq54gOL/MbUqPEr5EeJGsimL/iE9GE5dque6wzAFKjZNZUYlX6Wu1ZsiZV
k3n1zH7NncV3uP5e/x2Kit/qswaCMV7NjC1absVCS2+tx8jzO1XDlN+t2m99
hkuwh/xW5e+i/9T8ld4h806CwWrcSm+S80iNWvhI5WUVYy+9u/bWpX9Vj6bq
h1V/kHWT9RSeUmcPZA1FP7zirWLvV58vrCt1pupXopNc61xnDKqeLP67YNdF
z6l794o7iE4ieF76WuXgog9IzVy8j6oV1N4tXKzixuo7LHxcsJPUgTrPc2HX
K09ltrPqqLV21ZpcObt8rv6XxMCCuwT/Vy1CMFvFY3VGQmqy5OmCgZd6VfmR
YB7BnNIjJB5kba97ufJF8H/tO7LOoqGJX1DfmyHXKR6r+COChwWfyG/Vf49D
nmWoPbHqaZWnVA4u/eXTPLHidqmHdSbhOo9461Wvq7pondetWEWuR7iYHFP1
h+rvyHpWLlC1jmXGTPzEGgPyXcFX9RourF77pnCB6rdKv7iOr3NKSw2seyoa
jmjUkrOCxxZ9YMFai6ezeDQSw8ucRs2Xqg9IL5D5ELnfBVvK56pziocrPpFg
ddHrljmQioVqbxWfWuJKYkawkOT7tc6XXyZ4pvpfi85fsZPoEpVTC46VGBMc
XrFWnYdfZhLEg5aYlP0S7ajW5+qHLvVHYqby0CWWRE/+uuZ1nue6l2sfa15L
75PaXnvrdf0S5zJXvOxvxRgVY1efovbBqrEvWkddT9G1qg4gs0aL9yq+3pWb
9V5e+TUyJyA4dsFmtX/VvrbggWu/JJYqnpF9F0wifuXilQiHrR7uMusi1yD6
mOyv+InSB681qT6FYMKKwSpHq9xH1lPOI77VUrelF1dvUXq9XL/wINFqpLZI
PZd9rLks55caW/FArT8SA+LXiP9Y3wMgNUp6qNQTmWVaNFL5u6ybeKy1hlds
U7G64Ebp6YvmX/myaEELZnjlmdZ6KNcjcxH1PTCLbibXcOnGgo2r3yT8q87b
1Lpar02wkGCz6qEIZqt1qfbTGv91BrLGhnDS2muqdi2cV+5dcOCibS6a5zKf
LBhJfOHai5daXZ9Trp5pfQ+MaMhyDZe2fP190QBlnYVnSQ2s/OtaH+k7Cxeu
Pb36HTLXV/tp7WvidVZPTTBMrbfSa+o5Batfx9d54KU2Vp4r76AT3Uby9zpG
dNGlVsu+iG8ley24YtEY6wzYdfy1d/WahaNJfZNrE4+s9pEFR124ompKr3ze
qrvWviafK7/7ev1LDi766nVOwRjL+yUEh1SNvdYlebaualn/0KzT39cvat+p
cVv9mqo5VJ28cnm5nto3q3Yn3mU9v2DjyoOueHv1WxKr8nfxbsQXkLyofa3m
vvA70eQlB4X7VJ1WNFJZc/E0BTMsGuwyH77kbMWTgmekPss8VeUpy9pW/Uri
Wa5N6nbV7mpPrL5nrTnCxaRW19+SmLz2XfqC6OqLTi45Wz1i8Zflc8Vm8szy
dZ6qkUqPXjzxmkd1DZfzyP1+AvdKDaz+1JXXwisXv6n+uxKCl+r8cPUKqx6y
aALiPYl3U/mU8GLhTXVOQOJQZnSr/rDkqdSBJa4Emwm+Ek1SNNWrX4jfsegz
NYaFVy7nkZj/BO6VPi6cS/qF3Eutpde1Ve39+t3qZUvOLnMUVROQ/nVdj9RG
iSvpBaJbCpcUDPYJrle1IJmXuOJQ8rRqjNJna0wKbhSPZpnRWmbhpG5UTUz6
SI3ninuva67/nkjtcbVHCA9a9KKa+xefrXlddaeqCUj/En/2WpMr9ups25XL
S3+vOHDhepXX19mPqj9XDbbqDNVjlb2rvay+e62uT9WIam7W+l/5rOjP9dmN
6uVVvCS5KThBcLXovRXnVH5atT7ZL+FWFUu/wl01zpe1leu51nCZW5Z4rj5+
nbkV/7R+V/Tt+lzYMrcscVg54KLtvNLr5LcEJ9fY+8TMp1xz5TvLegqmqhhJ
9BPZR/l7zV+pUQtmWDCA5GzdO+kRolFfxwtuWTiv1KuqidU5jaoVXJh8qaVS
NxadWTCPaDsSV/UdsLLOC46SPV1mPpf6XDG5XE/lgPJdqV2VswinrvlbuVXV
5xdOVPVJ0WeqpnRd5/Le5sp56zllBlJ6d9U9Fp93ySPBEtJzr9+SuZT6WxX7
Cfao9yWxITEvWGJZB/lcsW6dl6uYU/Kr+k1XbFy6hPR62Zfajy68J5yoYjnB
VPXea8+qfE3iU/waOb7W0gWrywxw1Q/lu3W/qs/+05zfuK7tmkOrc1DyW4Ih
BX9evV7WYdHTKleVHKnflR5XPWupCdKv5XOte4KfJe8kd2Q9xROR65HPNcfr
nEzVVyUfJccFq1fdT84jNaTuV8Vj0tdezW9Ubi7++Kv5BOnjUrte9egrr4Xj
y74v3xXeJxij1hDpC4J7xdOXGbZak6+/1+uRHJG9qFxMYrVqAtLjqgZeNZDq
l0mdrN6xcKtrv6ruJ7OOoosKr5GeWDVn0QSqZ7RgPKkV0qNrvnxCc1u84FpD
Xl1/rVdST2TvrtouHLZeT8Wx0qcEz9Q8qlxGvIxa56tPJ7lf63aNK8E5womq
fi51teZRfSdVrRWSR+INid4iuoRov8L1qi/2SnOrWrFg9dpr6vVfnyUHq39x
3ZfoLdeeyvUsmvClbwsXkxoosVo5SOWJkiN1hll6YvX+rriq+kntZYI9hJPW
mJG8ruv5aob/youqvci9y7sghEMJlqiaW9WjFjxfNfZPnKdyOsEJtSfK9VzX
8EpzqNhMeEGtz1IT5BiJ7YoBKsaoWK6+O0hyWfblVZ6K/157Wc2R2mtqD5Lz
Sx2WWaN6zjq3IzXkE3he8NUyF1S9y6oRCU6oMVP7lNT2xdsS363qh4JthG9W
nbbOab/CD3K/13XWvK75u+iiolcLp5O+I3shHlnFqFecVB+w5qasZ8WQoh9K
fXjlnV3XLOu55FeNYem5cs6qAb6aEV20O9GxX83/Vw1T/II6p33FT8UPS98X
379iZllbqQOCDSpfEz4i+VW106qXVg/3lS9WuargsaqrLHheuMZ1TpktrFyv
+oPLPkreLTPM1zkr1q0xIDV84SO1PtcZttr3K8esfb/ub90viefKASuHqjik
9vGKP0UvrXhAvIDq4VY8Vv1Q4aEylyUe6MJThH9V3FW5v+xjrSdyTqkt1Q+q
+mSt4ZXXV62+9qBX80JXTah4u/YOyR3Rk6tOtWhBlftIzItWL/crsVT93IXv
COZZ+Mu1hhfOFKxbPdCFp9Q4rPPz8nfh1xKrr7Q4wRLXeer8ksSkrMP1uc65
1dpe67zUhLqnkmu1ZlYOVX3YqgNIr6z4WXBF5VOyhlJbat0WviP9XfjLdc5a
t+ts1YIVF01SZpJFl5A+uNT/2q/lHpf5k6p5VqwlGKz6HVLbF89XZg4Fi1Y9
UNZE1kFyU/JFdIClrsrvSvwId6i5WXXvGgOCiyomFI4vsSH4cNGTl3oiuHqZ
FV9yuWqkdR5JOGmtvfUdQVUPl7Wqz5YuHKFqC69qSMXqlx8kPb3641Vjv655
WZNLlxCsVeecFx5adQPp6QsmXDj+os9IDC/YsuZp1edFr5N1ln0UbarqTsKD
ZK+vvKszGHIvgs2ueiL+jtQrwZDLZ4m9yiXlHXTXui3/hs7ig1Tfs84qVN9t
qc+LDiCejnhDov0Kx6/8YqmNgqMEXwnuFT2n/u61zlULrbqN+Ds1T6tWefHB
Gj+CPWTv5DnlV3igxmrVOkR/E5xf807WuepUFQNLrXs1S1lrkczjSf2R3BFs
I5hH1q16l6JpiL4qxwj2EA6y4AfREKo2IvdYuVj93UXPqTpY7a11L4Sn1Fon
67DgfIlP+fdABXPW/rL4yxJLwu+kZlZOcf3udfxV578eX7376g8KR5P5cHln
iHgHkiMV+y3xU3NW8IP0TeFcokkKX674X3Jt8SAEy9XeJ3pRnVERX7Leu3hn
lWMux0h9lv6yaB21vyy6zSeOl+up+olw8CVuFx5RucB1/XVOrOoq1SOoNUr8
EcmRZd+rLr34xdX7E5xwxa30PsEMEgOvdH55j1l9V3CtgfJ50ZoklsRfln5a
31tbtalXx0s9lDmZBY9VP/3V/i6zvqJ9Va3jih/Zu2U27+J0y4zctZ6Vp4sm
WWen5b0r9Tmmqr9VzVbufdEkJf4vHUB661Lzq9+38AvRQCrvFp+ucodXx1fu
KZyierVVM1w4psxUS4xVLLqsj+hs0i+k78h8V+UIS15c9adqtjV/BRdVTi2c
V3R1WU/pTTKjVXFOxcwVKwqnW37rlV4n8wC119T3otR3mIsGLphf6oAcI1io
amvXb4mOdF2zeFWSgzX+JQclbiVWBRMK91x+q/Z0uR5Zhzq3LxpdrdWyv+L3
VW64YPL6vqa6zrKni1666HXLvLF8rjMk0sdrjVqeb5U4l/iUPVr+/QjZ00Xf
Fgxca8iFLev+XvH2SverHER6el2fxfsTH2SZ2ROuXdfz0tYkvxYP99WzD1ev
qXsq+1L1unqM3Hv17yp2qjVK8qJ+rlys8pf670dcf79wr+CBV3Nl8luLXl35
fsVdwu/Eh1qe0RZ9SXQM0YVERxJtVnS86xjReSSPXn2u55d8qZrhEidXP5X/
XmGh6vXUdRae/vVz5SOCb8U3rPEgx1/3ft3jgkOEj1eOX79bvbyKExY8KeeR
uJJ6KPpqnasUnUFqr+x75ZivOOlSWyoWqp6R9E3Zu0/kacVCtbfKeRads2q5
y4zKEkuib1Q+VddqmSur6yDffeUjCEde8J7skXCx+m5PmU+47rfqolKHpeZI
H6+1Ufim1KL63MeiXUjflDhZtC/hL7Iv0u9qna/xJvxRarh8lu9KLF01tr7D
7eLmVS+t3n3FwMusUfURlnoidUZ668LBJQdl/StuqbhRzllxfq2Ny/5KzbnO
X+cbJSZFM1k4zsKRF19DanjFz7WXLbG96EWCSar3XdenXkPFk1WLq97NwsFr
T6zXLL1b9kswnvi5kkcVHy7Ysp5TPtfZ7MrrRRu/9ktqb+XIF+etvaZy5Orf
LXrdgueld1e+KZ/rDHbVzWQvFq4nvbiuSf1u7QXV068Yr2LLig0qbpG/1+di
hEcs2LKec9Go6zytxG31o+vvSn+vz6fI9deYrNxqWZ8a/5Vrf0K3lzgUXrz4
MpJ3Ut8W3bt+V/iF4Afxu+WY+l3JkeovS++T+aIrBq5+UeNtuXe536U/XvVQ
9nHh1PK78mxgreHXvQvGk9q1+BQVu1Y+Xt/JXNdB/i4xUzXtGvPXdV7HXFpi
fQ6uPiu08A7hmIKjpK6K3lL7Zo1/0RYktqXmCDevuFRwWvUpKjeszz688hCr
J3vtddUKpEdXr7By4cqz5Jq/XoNgs6UGSs5KLl96nWB+iefaf19pd/Vd7lWz
qrqB1LrL46get8weLFypzrgKj5aaI7Wo1slrzeu8UNUMa/0XrCI5vtRniRm5
NokT8d+rz1I1k0UnrF6hYL/6rLrEhqxVxY2v+m/V7i4OK+sm8VmfMazaQtWO
ljogNbPGntTPWv8rl5H1ET64/K5ouVL/q9dfPaYlx2sNFNxV8WrVZOR4eb5V
4ll6vezvEpMSA7Vnieaz9N+q3dVrqHGyrMOCn6sPInF+aRpXDZfYE2ws8SC1
q+qu0sdrLRUst2jIC4cSn6jWXqlpUp9rvkv9rz7Xq9nUWpNFl6jv/rriR+Zg
q5ZSvc7q6dR9Fy4sx9eas/hHlbvJ3i3adT1/zcG6PpWbS38UP1o41/W7i192
3furZ7g+4ZPKdwULLT7a1R+rB1dnU2sNEY1RPHfJU9n3+qzWJ/wRwb2Vvwje
u44RXCo8oq7PEqv1HSwLJpH8qvVK6rPw7sr1ag0UHakeU/2LxQeUnlh1OYkr
2d+qq4s/UrXi2q9FZ6h5ceG0C6vUdyNXja5ivMpbhVcKf6m4RbTWV3hVNIeK
zap/UfUoeQdp5XdVixB9cvE+JB+lR9fPkgv1u/VdItf6V12u8tCv360e/VUD
q5b7Sru4jq+6jfRKwcCVawtHE4wn/khd/0Vjr7ilPnNUzyPvxJb5qKobVz28
YvX6zIjgBKkty70IX5NrrnOki29V+2DlBXUuWjhL1WSkxkqcLBxn6ekVX9WY
Wb5b4//K8UuTrDH/SktfeKvgEOF313ku/PCJ+XzJxxr/osvVe5Q9EjzwyjMS
jia9VTBS1RwkBgSvykx+/XespNaJPlNxzqLPXBxH9qtqa5XTCcZYMFWdsZF1
Fsx/1RPhm5LjdZ5EOJrUc/EHq/915X7VhaSGC65e+pfET52RENxYcZToCYtW
cMVSrRWiT1bsd+WCvMurPrtXtYWlpl37IrxGsMRSoyQ+Jb8EC9X3rMoMm+xd
nclZepb04ooPqzddvd26ttXXkLpd80JiuP77pwsHl3VY8mjZ69p/Za/F46vY
oHKi+hxcnZVaalrF0hWf135aNefKfwWTL3pRnYFf/NY6Z7LMPy+am3hM1UdY
9Ks621CxXP1ca07l4IITRIteMIPs74V7K4+rGr7UEOm5y4yo7EvV+aunIH6x
YLCq3VVsWb2k6nktvPKVvrr4mKIDVL4msSRxJetcfQTRr15hYNEiZJ3lGuq6
CcaouXwdUzHDMjNw6aWvNPylp0ju19hYMLas+eK3CmaQeKs6rdzX4mPW777y
euS36h5VTr3oistzAVfMi6Yq/G6ZnRANVjSKKx6q51JxY+U1dU5Azi/zloKj
ZF6xag6Cq+teiGdafSXB2Ff9FN2gziktPVfWrebpdfzX9fy/f2uSew==
         "], {{0, 
         128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4867969352368900"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "\[Rule]", "0.2534955143928528`"}], ",", 
      RowBox[{"4", "\[Rule]", "0.7464708685874939`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzVnb+qrt9VhYOCCt5DQLASbLSU/A6ClYVgcgVRtDGoGFBEAgGrXEVaUbvg
LQiidTorOwtLGwVNwGJbTHkenrHOLxbf4Tubd7/fWnONOeaYf95v/8Lv/NHX
f/+nvvKVr3z75370z9e/+We//id/8s0//8bP/Pg/v/fNb/3qr3zrp3/09rv/
8/rx+9/66n988YO//MEX3//53/5E3v/pL37vi3/8/ne/9p2/+90n78lnlTWT
n6/uX2xo729tWK5frXmFvc951qszLViy93+Bn89ptxcYfoGxcp8vbV8//Wuf
vvGvf/zph9/95S/O8/pwzXe+9+1Pv/FXv/npX/7i77/4m7/+pU+L18d7kvd2
zdf6r2sQhq/fve4DbIj2C95f97E2L2eXbAvsRj73yXrCmRJslPO197H31z74
mE8shomt9N7DfVa+WfZl4+z1uf/ww5/99J+fvvrFv/3rdz6R92UNdp32ReLv
ZQdyz+vn1ubX565seJ0vOTtr2xeasJy1XZs9a8tp5HyLplrhp9iN8MmKuwge
7Jpf+ODrfZHf/YP/+Oev/eF//dMX//7Pf/u/zuW658frP75/zdvXZ5F4ZM/3
wiTB52WfYvOP11z3XOGE7Ivch2iVFxhA6wF6leCc2IRg5jpfi5MX+LH6c7Vm
whsWD9Yfr5hVfPAFzq/1XHy48qmLN1a8TXiJ+ONK6xZtXGxSzprEphLTCTcS
bikYIGdKtBzRBhaTZM3XOq+9XPa58GDxs6oD2zUTH7F4IH562cReb+skBecv
+Mf61Or9Zc9LVxBbkXMk67G8SjD/2m5Inx+5fLGb5VUbc622JPGFYP5as9WB
ZA3kc4kNba5abPgiltn8mqytxBQbC4i+sjgn+yo1QJuvrbTBigNtzm5rGnZt
11m8qOGQPV54IzgpuYONoST3LLi12La5g10/wcxrDVb8zu7F+og9F6uLbM3W
ciDRV+SehDeI39n4QuxgtcGKA4md7T1t7L7uY/Fc7EbwQ/wa1dJl7lDeXza0
tSPysnVgy9skVlrNb/dYXiv9Y3URydFInC0cbn3HxpTV2kqfwsa+og0KB5Jc
zNZwSkwh+SyJES/4k8QOMo/x8XqSO7yI7zb2EX1i70+47rK57SmQmonVYPa9
1Wxk/SWPsNxrfaT0TYhfl1hDPstybFmP9ZHL1wgH2jpeuSeJKTbPtX66mjGw
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
bA3T2sHWn609CV/Z+c/SNyexeBUvCo9ZnNvv5CnP9JXrCZ6tbiT3IXNlhNuL
ni9a3ebvBEvlGZwyg2ptu+LtEtds34HUckv+UnIQss7yDIs9C9t7WsVlwksW
/0RfrfJi+8yCzUPtHlc9ZYI3ck87g2Rj7sUPljdIPCL8v4ojhWeI1i3f02sx
c52F9QWyflu3JzZfzd68qHOW8yo15xKX7b5IHZvk8iVuWk5+wcPWBy//KvNI
hGOJzl/NBVkb2r8F+SL/snqgaJLCM8SeRYNZDbnKWWweSuJOqS3YvZfzunjV
zo9Z+5R9lT3aZwRKX9Lm76teidWlL/J3i8/VuRc7k+tf5F+lj0w0yYs8nXCj
nSsgfmTzQVJ7tJrT4rb0JVe9klXN2eJwtRfLpdfZkdrsFb9sX/LF9xza/a50
ctEAPwkab8VpxPcJL1mdbzUJ0XIv6ucrDFgbknuWefvSLyZ7tM/pE1tZ7VFw
UmL06ppSj7Xfr0hyFvtzi6USu0s/kayT8MlrjVd8pHw3AqmV2Xk8+7ddiK0u
/iFYtXmTre/ZeuN1T8KBRB/afjHZI4nd1uar2ERw8mX9ra7r7Agflu9UJLa1
97R+avl5lXNdvGR529phpRuLj6z6vwXDK1uRs7Z5me1fF5uXvMzm1wRX5ft/
iJ/aOuQqNl3rJ3FqNRtQMF96c3Z2zt7Trq3kF9Z3Cveu7GA1nuVk4iOrun3R
Y6vvVCxnXfSD7bURnKzyxBLrSb7wAg82vpT4S+Y37DpXczJFG5fZiXK97e0W
rVt82XKv7a9Z+9s9Ev5/kXevauxFwxNfIGddzqX0som2WeU7Rftd67Hf1VD0
uY255TuKV9xi7fBCG6/ilPU1ovHKsz8rzWZjje2PW2xYfWLnUkrebbmrfP82
icXl2QrrUwTPpBdgOWdVWyB+StZvc0OCB3J2ZC8frynPkqz42drBxiBiQxsX
yowH0fZEl5L7r/jc8qE9a8sndl9Wj1lc2fsXvX35OPnd67xWe7fnUp6rKvkO
yQdLj9jq8Av/xKdI3kp61raetuLnkuut4lHJWUjMtediudd+h8yq7rTihxLH
ie+UWn2pa5UaI/FxohlKnYfsvczerHrcRCOtdIXl/xd67IqhpQ9ifbDgh5yL
XU+Zj7V7IXhYacKVBrbrJzOEhHvJuds4fsWpyy+IHrO5+eq5OYLVi9NKL8+u
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
q5hr915myWwP6HUsvs7I5nQf3/83o0N9Pg==
         "], {{0, 128}, {128, 0}}, {0., 
         1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "1278729909433340"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "\[Rule]", "0.12298997491598129`"}], ",", 
      RowBox[{"4", "\[Rule]", "0.8769932389259338`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzF3T/rtelVxfGJAdFGwcLWCBZiZyLpfB4CQgqtJp1gMYLaBAIjEiwEsbAR
X4aNU9kINhLwXQgWKQM21jYmIHIsln6+7PtMit9w5nA/97mufe0/a62973N+
9Q+/9+kf/8wnn3zypz/34/98+tn3v/X555/9+Xd+9if/80efffcbX//uV3/8
8i//++8nr3/zd3/h4z98/i8f/vGvf/hhvf6Pr/3oww//6Ssf/+D3v/1RrpHr
6+vL/de/ra+/zL0/tebLHp+yyVN2+Gn5zLv99uJjlzP6Mv3ty8wt7/btd8f1
U3uRa774+9/4n79f/8HXP/7tF9/8+Iu/9K3/9b78/c7fffLb3/zPv/jw6a/9
24fX1+v+8vpy//Vv//lPvvjw/d/6s48/+L1/p9frs96x96fWfNnjel1tsv6q
Hep9nvKZp9Yvtq3xdfHbL9PfLn5Sz7HavPp2zV3VznXN73i97Pntr33lw8//
6y9//Jtf+asPr69f17+uqftd18j9l52l3q3zev23y88ve1/v1zU/5ZOvmGGd
0bLJssPrZ4kdlu+t+zzlM/Vzq9++2lbi6PX9itler39HjFxiZ51LzS0SjwuH
i29fcrXE9fq37+Ady/de3182XGe6Xr/+21ffqPXo9d8uH1j7krgW/1kx+HpN
3fuKwbX+tZ6ncI7YRHLayiGSZ1ZcrLz9+rkrX4nP1Doue1xrED5+ic3q/zVG
xK/WvxU/qZrSOq91TeW/ywcqXpL7rLU9hffEVlKbhPdJ7Ig+tmJq/dsay4JD
5LPqWcv9JbcIZpDauvxE8urCxv8fp/+/rl/5ofrw8pmaW9Z61hkJvxbuI7Ep
9qmvxd+k3tU8/A7dUvBh1alkbXKfyssq3nvd+4qFmrskJ7y+L30H4YzL/hec
sPxh+YzUJjn3WpsEf4pPCs6sGEz8sOKfql2sfyt5o+YZ0TSW/0jNEky1fFV8
T3xy7Vd8QPjayhVP6ZaVj1Qce8mr9XyrRiQ5c/GLi29IzpS8vdZ52aPUd6nj
a50Vj9VrJOcvn1xnJJjkEhcV/1RbCVYXvLHwjJxRnWOpmF96SbUnVfcimnzl
a1U/qVy76rTr9YXzyn1qrRRct7BBjc2KD9d96ufKGdU9St6Weir+/xQeE8wp
9au+llgWf64YTHTpiya5/Er88OLPlUesa1ZtEu3lEptS40QrqD1c0ZrWeYlt
RdNYOEo47zo7iZ2Kc6oNRSdZeebCuyV/yhnVnpRgV8kVqyZKHpazFiyx8ufC
//L6kotE66u6h9QRiV/JVxdNpva8Kia/zCRIramvBVNJjEgtFg28xo5wB8FX
wl/WfVacVpxT5y5ER117ucR1nYWosVmxh9TiZQfRoEQHW7FQcYXEYPWBWpsk
J0g+EbtdtNaKo9a+Lj0v0SHrXFCdKZI6vuws2uwFl8r8w1r/pf8rmGGdo+Al
Od/LDInUPtFUJV4uXHv5v/SYJL89pc2u/dY+gvCmWotFB7vo2JWXSX9n5ROx
W/XzOidWtb5qN9GNJWeu/YqP1T6jcJCqXcg6JV9JzrnwJsnnkn9kzVWvWzVL
MN7KFZIbpXcvdbNqJpLfxGckVwtHqLpinaWRuFv5Su6/7Ck8XXCIxHjlqpUT
yedWTUZipO5F1iYYQHQA6TPK/IDkKMlFCxuIb9TvPRDeJLml8jLhIKK3VH2s
YnXhRFLvBCdLbq+5qGJd8U+J6wtHqzxafE/qae2brL3L2dW+Uo1TsbnYRzQx
yXXCEWrdrLMQolFfuHzF26I5iD9feoVrPa95Y9lNbLU+q/Im0YUkN1asLnh1
2aT2ASXWLr0YwT/iG7Wftf5EK5Y6ddFRa4/por8tO9QZP4nTizZS+ZfUa9GF
pMYJ5pF9SR+t9i8k51w4wlN7XPZcsSCzE1LTxcfWvkQXqvVI8IlgjEs9qrl3
2VCwpex9+WTtQQiHWusXH5PnMqRW1h5T7S9U/XzVr7rfqo0IThPsJLFTdVQ5
x6dqXM0JlUtWjiC1UvYoOr/Ee+VulTusNchsg+AN4QKiXVzwUu1HVB4kOUHi
rvbdpAdUe3Cin7yuQXRjWf+yv/QXap905dLl52u/lV9LvhJ/Ey102VO4nnBz
4RGCr8SHlx/WZ0VrT3DtpeoegkkqlxTdY70WnC9ax6XXKTWl1ruFCessgdhH
zuX138qze+KTVWuSnPCUhr/OWrRcwWy1/7VsIt+DJ3xT1nPhnhXPSO2u380l
ZyH5bfmk4GfB7cueT/VTBEdVnCYzrmudcr3wUMES0heu+VB8TDRYwZkLO9W4
EJ8RvbHi/KqNrNwrflI1fLmnaGWCJyt2qv3x+rzJRZcQjLT8U3LR8oEVF4J1
q74q577svPxWcqNw7TqLUvOw+KE8CyC2krOuGkvVr5Z9LjhNuKTgxqpnSt6o
s44yt3DR2Srmkfiq+URwvviM5A35Pi7RB2TNF+1U6n7tr9VcXWd4JD88Vddq
v0/0h0uvuWqDa22i10msVQ1WsI3kWKlrl5xQcYvoPIInpS6ITapOsmLh4ue1
LtQ5q+UnVXOoWqJgmKo5rLpTdWDRBoX/yv0l9iU/196rnLvkwNrbuuhaNd4v
PSD53Gq3ik8q1r3gWKlNcl6id637ixYqs4XCQwWryAyS9C+qnwu3rTxdeLFc
s3K1aFC1f11nJCQvSQyKllj9R+L6KW1Q+qFy7qJp1FmCqmtJHZSYlR6QfFbN
V8tPRHeVWK69HvF/ifE6j1FjoerPEo8rZ8pe6iyK2HCdxfq3cha171b1ebl/
7V9InpF8WLn8er/mydoflBpRtcFlT6kLkk8k/0g+qdxT8G3ViCqnlpwgOEHs
IPutc5t1hlD6BTKfXHO1aPiSb1ccCccRnFP5RbXt2pfMmdT8vPyz4hzJpcIX
JMcKfxcfk3xYMVjtZVecX2ctLnMjwuslFursx8p1VQe+aKqCIav/1Lpf51Kk
Hyf1V3DFU/lf8Emdaal7F/4iuWX5RsW0tXZIj3jZv2qP8h1QF52k9i5X3qtr
kL6nxObypcuzNpJPav+rcsyqNUl+qLPc6/oVm5Lfatyt+4uuVXte1T9rLIuf
Sz6pvRiJ6xWzFQfWva+8IVqQ+JtoR4JPas2qMSi+J5yizgaI/vwU9hY/FJ1Z
8pLYp/Y4JMYlNmt9XPuSGF97l3vWOBVfEh4qnHStR+q+aGWSJ9fnCmaQewoG
lhipembVAFd+FmwpGEBmpar2XjmmzPPU/FPzpOhUoiHIbOfK+RV7C2evuajO
aUgPQmJTvgtXcpTEmuDV2usRzXD5ldxT/E3yldTTOnuw9i64VPJPzYcVW0o/
tGIeyaWVVy5Mvtb2VH9/vV95Zc3Vtc8uc7a1vkgdketFAxTsLc8/rnvWOeHL
a8lFgmMFu4pPSvzWXrng+YqxpabX/mPdu8wErtipvnHBq/K5wgFl1qv21KRf
ufx/nVHlp6J7y34rt5UYEa2m6upiK4lTiU3B/BVrif0vOpXoP1WLlropvKD6
gPSJhHvW3CtxJPlH9OrKKSQ2Jd7Xd8bWforkczmvC8YWLlPxv3C6Wotlxk/m
YAVrSf684O265or5F2655GSpuZVjLj98aq5Gzr1iJNFJKg6Xz5L6uGKnanqS
i2oOkThaa165pXKK5WOi4wm/qL1R6QfV/CxYbuUf0ZouGlfV9qv/i/1XPFYc
Jdim+vllzfJ9X5WDCNa6YEKZA1k2r8+d1TpSdRKpNZV3VxxYMfDCVysXLZs/
9d3CFetWf6v1XZ5vlXoknKjmIsGflV+vWKh9JfErOZcVj/WZRLm/4CjJUdXP
a++4YvUaI5VzLbvV3uKybf1uz9f3pUcgPlNz0Yqj5W+CdaueILirzgDIvmSP
cn+pa7WPKfPM9dxrPbroKlK/xAeWz9c5RuEd633RIsT+9Xc9hLPUPCDzTqLD
i3Zdubnk5IrhpTZJ3q7PMly060uulni5aNfSsxY9QexT+XXtzQm2Wfik8hfJ
q8sPpcdR54IuuuVaT51nWHleYrbixoq3RQe79Bwr/ln3WWdUY2rZ5/J7H1J3
hKdLXEseWz4juULOpWLgOmsk/KX29yUni63WNRILy08EI1Xdu+IuwbpPzbzV
c6zcTewvGrvk24oJa89L9OeKq9dnCQdfNr/gn2rDtQaZO13/VtYs91/2FB2v
YtRl8xr79bkzqS91Pk10s2Vz0fafwtVic+FWdW5BdO+qKV16E1UnF04h19e4
WH4utbU+xyF4o+pLVb+67KX25kSvrpi8xmzFTusa6dVWTL7sIDXlqRpUNUzR
e6UW1NmPuraqEYlvCAZY96+caOEEwZa19yqaoXDzy5lWbHPBZqLJ1FluyQmC
4SWPXfrCon9edGPRPCU/i04iXED2WLGEYIbK7y5zVrUGCZaW5zFr70nqQn3u
WH7XQ3CL9Nll/kHOXXK45JYVL5IDL/0awSpiQ/kuDtFF6xyd6M/r/ZVPpF6I
/WsdFJ679iJ15OKf4vPyuXXmsOoeNffW3F75Wp1/u8xIyFlIjKx9VS1ifZbM
Rch5CeeSvoY8AyK+Kvx07VEwf7Wh6ANiq6rbC6eTsxO+Kbixav5VD7nkedGa
xP5PPTsg+LzOM0jf7aIdLTvX32UQjFe1uJU/ay9e7C/+LFhacq/oisLBa60X
nlJn56TuS54UvCo5edmh8hfRNyr3FBwoz5hU/Vm4p+yl1sHLd7stP6yap2BO
iVnJJzIPsPLnilOp4zXe1/US1xWTXLQ48X/B1bVvXmdd1npeP6tqJoJbJDYl
Fi56eNVpZV+1lyf2XLEgvU6xYeWeVZ8RrUz0JdFeLr9lIFq38IjL2pbvif/I
PEaNfcHtT/WJaq2sfZmqnQo/rZyxzllV/CY4TWqEzABc8JKc11N9k3e8lnmn
Sx/8gkMWNpN71n5l1YcvOtKKF8mHdXZFdPg6/3bJ1ZUH1dwoNq95QPpEa7/1
e2VFX5W+T8V+0jOSeiG4UfSKS8xWXCTPglUuI2sT7CqzB/X1Wr+caeVWkjdk
DRd8W3Wb2h8RHUl0S5knqX0EwWa1vi87VN1ecGztFUouFX1ezktsK7WszsPU
fuWyrdQU0eFljkhyYOVWFywquUjqQtXSxbbrHAVLrNcya1H7XFVDkFwhOras
X3QMwRj1GtGZ63oqlqucfdVxyQ9SWy+5pWqhVXOQWXTBq4KRZN61ajvC6ysP
fSrviR4u/LH6qmiSos9X/X9dUzVbsf9F27ngTPkes1pTBLfUWQjxz6direbD
movE92R+RvQxqTVSW2uNFv1N/LzqxpLDJQYFX4kPCDesc9QXfanmPal30suW
WlMxj+TzZQfBEjWW5T5rPcufq7ZTexmi30pNETvXuWWxYcWfl2cWVv1aexSM
VHuIdZZMsLRo4BXLCZcXPafmYfENwcCCi1Y+XPcR+9cZCcmrwn9r3/ypuia1
stYI8Ycaa4LH5O+i11VtZH2uYPvLWVS/FR4huEXwp8SaxLjUTdnvWttlPkFw
mmCG2ptbPrbWvNbwVG0V/aTmIqmVcp+q51/mTCS+pH5VTCh69et9Lt9HJ/qb
zAALXlp7v8zJ1DUv36ha67JDjZ36bE7tedV8tXyj1o6abwU7CbetNV3q48I2
tZ8uXEN8T+xca2v12xVTC/9XHbLmT+ljypxJ3W+Nhdo3l3pR65rwONH3BKMu
u9XeSq1HoklK7ZAYFwxT11NjVvomT+1FbH7BZjIfuGJHuJ7oG/JaYvYy3yg1
vfZlqvYu+lKNQcl7ctZyvhJr1Wekbys5s/YFlp3lGaJ6RoKpJC4q95dcUXOX
9LBknYKRpKcsz02LD9e+qmAJ6Q8KFlpxtO6zcKPg26c0mbUvwZAyZyLxVWeW
av+rzrGsM6oxKDqb8Fk506f6kheOJvW01gvJD5JLBYPJGV101DoDJs9liJ5W
MYzUILFP7Y1KLas4uc47Sd+qYmnJb7KGaueLJiPvr/vUfqjEhdTEFcvih4IZ
BPc+pb/Vc7z0JSuHldwu19dcsfYlOHadb8V4l3OUWJa9CL8TfxbdW+qaxJHE
jtRNwXjVB4Q7CMZb9VSed5PaVznOwrHSj1h+IvV02b9+56rkWMHDsv6VJ4U7
V31A8Keco+D2S29OsE3F2+uadRbVnmKH2nerGqloCGttdSZZ+hcXXiN+Xvub
lTtIf6TiZPHDd+DtiqPqb90KdxBtTWqK1MHKs6qeIHn+gktXva5cSbBN9VuJ
lzobI7rluuaSM2uvQfDhiqNVT0UzrzVLcJTg/4UJ5dyr/4ufi14kNUJqSv0s
qcu1d3DB21J/a99QzlS0MpldkZnJi+4qr9c9ZQ5WeNaKZcHJ79BqBE9WXCca
bNUfLj2m2muoHFB0EsnJgmEuuVp46IrxukfBD/KdrnV2S8699qMrl7z4qtQR
8ZNlh6rPCKeQ/Fln26rvVe4v9UKukRwua77k86rVCCa5zIiuNYgPPPW9cLVv
IrhL6rjUl0svrOrtEoOCjUUXWrFQnx0WXxLcJZxIdPUas4LT6oxK1X6FW1Wt
eNWLimcqJq/fk/AU5pdaL34o3EFy79qvYC3BJzX3yly3+FiNC4nfZYfl25UH
CbZfuWjZR96vZyr9UMmxyz8vc8JSoysvrj0FwV1S3yVvSP6sz27IeVVeL7MK
go3lLNY9q14qGKmuX/zkUoNEG5G9VP+59LUrtpfvur/oTutzJWblmlq7xa8u
cz7ie6JfCadb5yj3r3hynd1TfV7hMvX7P2sOFHxY+V2drxBeX+cTZJ3reuGq
FWPUPCz1+imeLr0Ywa6y34rrpP8ivrFiVjCA+Kc8k1Xxz7qn5PCKMSr2qDMn
oreIDiA6tsx9rZwp/RSJtarBLt+QPFy1cekFX7hbzSHSzxUMueJx1dnK6cRP
1hldvsdVehC1FkvuEr7z1O++XWZ4xG4VJ0surTMJgufXdwEt3Cs17im9sWqY
q45LHqt4W2qQ8LWVP1e8VB667CkxUrmJzNtIv7Wup87hVH8TbF/nNyR2aj9U
sMrFbytPFz4o+E009hrjFU9K7FxmkC59tHVP0atFg6p18xJrl57UpY7XeBFM
vmxbfUnwQPUf4dF1xkbsKbFfX1fN4aItL9+WulN9STSrqtULzqw+XHWeipHk
+yqF71/64xcNpPqn5Dp5zlE4cs0ttYf47p6UaDgVJ4gNL3W/YjDRCkQzFE4t
WK7OYYpvLN8WTCKaqpxjxd7r+poDhcsIvpJYk/pbsWvNUcIH1/WyF9E5Lzjz
ovPXnFB1A/ncmlsE51Rd+oL/hSeKZiX7rT2FdRbSM6369vqsuh7RxuXc117q
My8rB9Y+muSBWh+ldotfiYa29nvBKk9xq6p9ST2qtbX2Gi569VpP1dbED6XG
iSZcz7rOS0s9rX2QFb9VI60Y79JTqHEq+LnqMKK3yPVi/zp7IL1yiVnhcZJv
xQ7SoxQuKTVi2XzFUe1f11luwefST5S9Sz6RelQ5ddWrq05+wfOCbSoHlDXL
dwlKXZBaIzitnvuKhYXxKqcW267rRb+tGsXyVdH31vUX/V9iTXKmYJLaO5Mc
Wz+39qPXGiTvCfcX/XzxqXWfS62pWlztqcn5Vv4i2ElqfcXDVSeX3Cu+ITlB
sNbyW+l7ytnJuQuekfolr5fdqj8LXq02l9pReYfwHfE3if1aryXWxA9Fs1r3
F3tWHi3fQSf4SuKo3lNy6QWfVx1J1l9nelc+rNqpcB+JO9HKROO9vL6cddVt
5NwFy8n3vazYl7niy0ym7L3apOqKEu/yPUWCgS98sPJNwbfrLAQ3rntWHUDq
hayn6lGSz6V3Jvuq+Lz2qWs9Eswm/EVqR8VpgmHWa8k/VRusPEtyjnAc+a0x
8c9aa2p9qTxC5gklD8seBatXjlDxfNXQ1toq91mxLPmkzkLX2ciqbYr/vKPf
d9HbL+tZ9qlzCKJLSNxVTUZ8W/qnKy/VPLDOV7RBybES+1XTlliTXts6L8HD
F81K/LPyAvFhmbdZfij+LPEueEwwqrwWnxF96VLTa7yL70keFj1H+n2Vm0tu
rNhS/Gfdvz4fUets5W4Sy5fZFckD0mNafih5QDR2ycnSa67YQGrEZb917/Kb
koLrZC+Cb5d/Vj8U7rb8sOqo6094wYqLaluZea7xLvnq0q+Ufr3MNUk/Ze19
YcuKb9d66jxPvU/11ct6BLtWP6mzXuuaOhcnNUj6HRWrrBgRjUh4veQ6WXPV
SaQfIX1M0Q+lXkuuEFz3VC2WWiM+LNiv4qtlQ8lvF6114Yr6PJ30uWSG8KLp
CW6RPo7USuFiT62nckzxE8Hh9XrhF3WOVHCs9K3kufuql9a8LZx05Vs5d8kV
a52CA6UPWPWBytFqLRb/EW2z8uv6bJF87jqXmpfkXMTHJGfWPFbtsNawYm1d
U3twF4xdcZfgxtpPkb2IzeszIxWb1b3U2rfyYdXSBSdXbi64WtZQZ5BqHInP
SBxdZjOq/1x6drXfUbX6ZSvRAC85s/LNmruW315+7/WC/wUbVAxT60KdGRPt
S85C5gDXn9iw6lRif9EVBcOLVlnjtM6qiW3X+7WPedGZL7xDdIPaG6p5ptZT
WeeyldSmioGrti8+Jv4g+rDE9YX715674BbBCYJ5lj1ldkt02qq/VQ2nci6Z
MxHt63JP0VUqHnsqRp7q19eeb+VBKwfWnCx6uMTIyhvityuW69zFspXwC+HC
l++rr785eOmn1N/Yks+q3P+CwWQNdY5IeKjULMFLUtckj130czl30ZCl1y/3
FJ2z4rEV7zVG1mv5XMH/y88vPQjRZpc95Vkt4WuVh9ZZDnm/9i4l/0v+qbOO
6yzWWUvPWnJvXb/EwtqLYJvKU0QnWdfUc7ngVXm/9oMEd11eS54RnFn7X1XD
Ed5a675gm4p5JBeteBH9f51F5UpVzxF9WDDPRRup9hSMsfayzqXmsapRXOpF
fS1rrpp25bYyO1dzoODwWiuFg9QcvvxQ1ikzb4JPhBfIeur3t0itkf5Rjam1
5orzhftXnfySM6tWI/VC+OmltyJ2k3y+zl24cM0bMj9Qe2GXelFjtuLSp/RM
qRfLbyt3qz3B5ZM1jgQDS8xWbVx0jIuPCV4VDHbR2FctvvQ3RUOQ/rjEo+Af
4Z4yM1Zn1KWeyr4qnl9rEDwg/iD5RPh7jdN6LrVerPVc5kMqJhQ9s55vvf6p
uRc5O+kXVNwr+U14hPSXBbPV/ohwE8F7dV/1+0AEk8t+LzOZor2sc6/+WbW4
2r+T+JXvphCOsPxh+ZLg5Jqvar0TXC26tGDsytPXuYtWIFpQrReVP1YuLJhB
OFGdCa/9X+Hdco51rqDOWghulNxY5xyWzVcdqc/kVk5dfUDisebeen19XXPd
ygk1x4ruJ3008SXxycpZKqcW28osh9ht7aviENF2JPbl9bJz1dzkN4ye8k+Z
v6oYXjhsrTuC66reInheeEHtK0lekhhc14s+U+Nx/UnuvcxX1Dq1YlBwhTxL
eJnZEBtesNbau/AayRviJ1UTkNeV40tNrM/DPjXjJLy49oyqf1YsJ7h03b/i
wMoHBZ/XvtKKC8Fs1Z8vXGzFlOTnS56pOrnkRukNVdwovZXKeWttqu+LvlHX
WbmA6Cpiw6ovXfoCFy4m+L9qGhc+WNcgnEX+rdSR2qeutX7lB8E88syd2Lni
wKrryrM5lUcLfqs4QfJDxZOShyvmWX5Sa4pgKjnHip8vWEtqt/RxBMMvO0gu
qvqSaOlyXuInNRaemqlYNpQzXXlb8vPrv61an5y1aEdSU6Q2XTRh8ef6uYJJ
ZH5Dcp3k6otOXvvysgbROSuPk1wk/Vmps8vm9Tm19VriompQta8qvF7WVvWB
6m/yfYaCsUUfq70D0d9q31Zqh/j/ZR5A6qz0NOUa8THRi+TcV9wtG1b9R+qO
8F/Rey9a8arpwv3Fb6tOu+wg+KTiCsFIgktFr6s9waqFVhxSrxGcKXhJamKt
HeIbwoOkDyifW33pgsPlsyQHSv/lqZkcqZuXPF/PXTCP9IIvurrkPcmxohss
m4huJjEovWnBKrWXtOxW9UDJIVJnxQcuWqhwgUvPfcW+rE2wh8xRS/yKfZZv
iA/UWZd1T6mngsNrP7Hi/zq3I/uVnHzR0IQvr/VfeIf4s+gkomvVz6r6wDrH
2h8X33gqv13WIDqqxIL0gKp+uOrIul5iR/ojdd5YzuXSo39K1xWuV59Brtiy
6g/rcy/f9Sc1q87JrLOQnovwFOFBtW7W+9ReZO2P17pZ71/zjOR/4T4SyzW/
XTCwaNSizyy7VWwm3HNxGcHMYvOaJ2Xv655Sd6qeILio+t7aY8WWa50Sd1K7
ZY5L6rjEqeRt0XurHlh946IdyT0rRhK+X+NX7i98s87HXvqSFReJ/wgGrrld
6prMjUvvUvoCorVW33jK3yp3rnFa9fyKVWofQXysaibVt2u/YMWXfIdq7YFK
Pll7l++QEZvUfP5U323FwrJz9b21/stvHy/7CKerfig+UGNBejSS2wX3Vuwk
vb8a74J7l2/U3L78TT634iXxAdFMak0XPFA1lqqZCO6tvdFq83VN7YEKxxFs
tq6p35lzwf+iSz+VM8VvpW4KNxR8KFxAYr9y3hoLVRdaa1jnKDVXeM3yPdGf
RceQWBOdudpK9lLnLkSfET1n+d6KI+Hmy68qv67Pp8hZXHrccr1gY8HbFYeL
n0isyedWri31QjDM8pM69y72WX4oGp3Efp1peX2/fofeBSNJX0A0KNlj1Z8v
66m6gTyDULnPRQOX5yIF+63PlTVI7ag8V3QDecah6h6iVUofofYcL9hb+Jes
udZT8dva31x7FP2t8vTLLEqdmZHcIvEovcLlz8tukldFu36HP9c8I+upuoHU
jvX+OhfJeyuOhNMJnll5QLDu+qu1WM7uEo9S++oMlfQsBJ+LP1R95qJhCu+W
3CuxLGck/ia8Uq6p+K32rUTzrDNCwsvq+uuZSg6v/vyOmbf6/SHVbqKTi275
jlmFFS8Sd4IVL/lcfONyLstn6u9j1hlROa/aZ6w1V/QQwbHi83X2Q/ZVMXN9
LdivzgnLXIHk/8vsYtVRhRvWnlH15zonJjNvFY8tG0quqM+9yrmsey67VV4p
WPSi/Qq+Ej+p51L1H+E4gpGqpnrJaYKLhOMs7CE62zoXqReCcyqmuuSZ5be1
Nyq5VLh57UnV+1S+s/6t2LzyrHVeMqckumvNA7Lmy3pqTq4+IHFadUKpRysv
VU2mcsnaq6qv6/Mmy55Vy5K8LbWy6gxyXhJfCy8J/6qYqua3p/hF1QcEb0jv
W+4jtVXmNy74v86JVT1Z8JJwnMp9RF+SPLbOveJAweqV+4uP1ViT+YqaS6sO
LK+ld19nby64S3y12kr8XPxNdK2q19V+lsx4yx7rXJzoz+Kf6/7LhhLjgjkr
l182qfcXf5D8X3uIUmeXHep3ZYt9BBNWDbb2O6oeWJ8rWf5f+W/luSsni+Ym
uHfVsoXZ5HrR80UDlFxaNVLRjoSbiHYksSO1Up7LuPDrixYhGLj28S8ab9XK
KoeS2i09U8HqK4cITq66/bJhxXi1Jkof5FIf6/oveUzyidREwVEVX11stc5F
6p3MDKyYEr1OYqf2B6u+JP4jfcDKayT3Sn2pHKrqVHX+sPbfJV+JtlN1b/mr
mnPFrpf5vdqDrnEkv3tbdW+pjxWjVk1VcnWNo5qrL/NyYquKl2T2o3LPihul
hy74fGEVyb0Vx8ocTsVmdbaq1gjRqVZNF8xT/UF8VWp6nbuoWlzts8j5Vl+9
6IcSR8IlL7qi5PD1/lqnzDnLd6jWvoysWXTmy1zW8hmpR3WeSuYipAYJX6gc
vPazKp4XXrn2Up/3qbhd6ppgoYqdREuRZ8TE91ac1tonGoXE7Ov7l++ZWTYR
PiU5p9ph2bnWPqlZVReq/EJ4iuA04U0Lj1W8J35e9eGKkQTvCZ+99AHFPisG
RRMQHPV6z6pJ1nMUXCF2vuClZUOxbfVPiTvhTaI1Vd2j9q0Eb6z1V24i/Gud
e50VXDZccSf5c+WcytcqN69YTrBi7Zv8tPrOgpHq/IPoFbKGikXr7FnFRYJP
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
         "], {{0, 128}, {
         128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3704845844743256"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.46639540791511536`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.5335034728050232`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztnb3KXlUThoOKKChYeADappIINoH3wULsBJMjSFCrgGKKaKe9XWxSWNgm
lWBloY214CF4BJ6AhQYkbIsNa7nm57pnTeHHfA87a98zc8+an732ft+8++mt
T567du3a/Zf++Z9bdx68+/nnd768/eLT//PxnXtv37j3/D/iV//+91R+/4M/
rr554bXL14/euJzJv3374PLgz1+vPnrli6Xfz66xWn/lvit4VvQauX5WjtRr
xUez953F7GE3K71W9F2RZ+8bycNIf63wfyX2aTb8/eFbVzcvP1z99eiz/8j3
f/r56uXX714u73x3dZRvf//LzYfvfXj58dUbl5HfR9Y5k73ve2bPETwrep1h
OLvXmY/O/DWyvpXdZn1nheHsmhFbzdptRN8RvVZibQTbCOYRO3vb05vnVrrP
yisciLThUR7htlXtcSY/eXz92X/e94qUj3qt6DjCAYK+Wb6e5a2V3Wb9O1sP
ZMlZ9qzE8ywdVWw1kk8JOD30UtdxZ19b+bdqzdNyy2fyWd9hdb2KXoo67uxr
K/9WyoMttzwiz3JeJUZWcKrouLOvrfx7/H2kNyfnwZZbHpG9OZwVIys1baV6
uKqvrfw7uw45D7bcMoHDWTGyUtOOnAcg6EjzRaQdrPx7vGbE11XrgZb3kb05
nBUj5FhT7H0I1xNsOJJ3svJgyy2v8NaKw1kzZHKsKfY+hOsJNvTOO4Rc1nJt
WZ1jZ/jJPXj3Puv4Cf71yDuEXNZybVmdYyPv6NF68O591u1GeObikXcIuazl
2rI6x1Rm45GYFXsfGp6Re3nk7krnaVtmyuocU5mNR2JW7H1ovh65Fy0n0vJm
y3vKtDPhWbPxyFm0Yu9Ds8PIvz0780musWl5vGXO/qxyZltlNh45i1bsfWi+
ttJlJder582W+fIIt2k1qspsnCwTeh+ar62wreR6Ql7uvqC2nPXcisxJq9k4
WSb0PjRfW/VihFyclTcJ3G45JvbJssr8X9EmNB3JfURWPNLmby1rxYiirDL/
V7QJrfch9xFZc1Ta/G2HPYcsk/cllbymeDa+z/nErL+Cxypn0eZvO+w5ZJm8
L6nkNasaODIW+pxPzPoreBRjjbBHtczhsApnVPJg5HvBVc/50Hx9dnZaJdYI
e1TLTA6TOaOSB1fuq/KMQ/36FZ8ef9/573nR8rK6nNULZ+Udgs0JNbPKMw51
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
0p7kszTez7P+BhqIGrw=
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4223308668057052"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.4885563254356384`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.5114433765411377`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztnT/LbVt5xS+RJEpIkTJdLL2CRQKRFJ5DsEqrRbARrnBDQi4KWoQUEZsU
tqZJFbCxiII2AQU/gt9BED+FlV5IYIvMMH7+xlh7vfec4lzW3ex3rbnmfP6M
MZ5nzv3Jr3ztC//wB++88843Pv6b/3zhvX/5269//b1//eIfffg/77/3wV/9
5Qcf+83lt/7334fXP/r777z61Vf/49WXfvrtz52u//lvPvH6H//r/dff/eyP
XyXXV96T3mcx/uRzek3HeeVzF+NZrLtZx8VaLGxs8Z31PVv+buznbnb4rNib
fP79/3739f/9+9PP//Xrf//5L1998ot/91vXj99Z35PeJ7mm4z+NoWUnp/d6
/PzK5ybzRsdzeq5Zd7OO5lmn55o5Sean9S95L3NP44NmTmhsv9IOW/64sPnT
s778mT98/cO/+MGrX37+q68er0/fb90zsbHHv/3P9//t9ae+97NXv/jzT78+
XdPxG9tL7OQ0htP4kzhjnnuaz9PnNO6ZeT7ND13Hkw8mzzq9u4knyRz+8f+8
++qb//S1z/3kz/7ktblOfMTcM/HHxN9P63Kak5ONJba0tsOWP5rYdcoLj397
WtOTv1CbSe6Z+N3pO6e5SmzycZxJnj3Z3mlu6ThPa/r43NPY6HNp3jytr8GE
p3c5rdHpXU7rSPNUch96zyS+neaNxvDEN5M1pf5CfZDiRoo5kxiysMPk3ZPv
0Nib2OrpO49jSLDH6TunsSX+dfqc4mQax5IYQq/p2B7XN8E2izlJ8tHJTpK8
k+DAZP6Td1lgQqOZ0LVL7DPJgzReJVju9LenGGXylPm+wdXGDs11Mv9J3H4c
5ym2JHOYfD+ZN5oLknhCsQfFxnSt6dgSPSHJs2ZOknyU2E8yJ0aXS94xsU+K
CWmsptoIzbkmp9O/TT5PeIrJNfTa4OqWHdJrGodbep3RcGguoNqdiVGn71Ac
frLzBXc76XU0FiXPTfw6ycsGZ9K4dHrHxKeoX9O4mvhCy57NfLb0ihZ2MjZA
70OxNLVDw31aObH1LJNfKM6n+NbkLGMzSY6gc5LMQzInpk6X4Jkk/htfprGI
Yvs1fk7yztqeW/jfzKHBTotrg2mpHVJfa3E9w4PMXJk8a3qQEr650D9P9SBT
B6Hxn2LXJE5SDLPgwoldUf3WxA0aV5OekETvatlzC/+buaLYaXFN4zbVCc19
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
r3UhE9PW11RLadWDjL5E63StzxOOv+aArdoQxbSGyxhfo+9o9BCDV5M6kdE3
TJw3c0vzJl3fxR7A09zSunnLZmi8vRLzm75TWg+imklibwn2Np8bParFARc8
MZnnFt5unXVDY0gLv1FtJKk3Jb6/2Ovd+ttEe0m0zYTbml4IOv4WTmtxnAXm
pxgv4YCJzdO4TTlp6/MWDzK6VgsPUxugtkdrMfSsG4qjFviN4ijD0ajdrvE/
nQda4060HdMLYWJLS6tfnH9ixmBsuxXHjD2bnpnFNT3XN4ldBrNRGzB86qR1
UPuhOWjRT77Acmtfexb+f7ym9k8xeeI7SQ5tYV1zH7OPo7WmyX0SXEfj2MKe
F1iO5q+kB4ZioRb+T8Zv1pf2sdB3N7r6SZdu4ajWfj3qa6e5uhL/J1zPaNoJ
9kt0G+pfFFck96E81/ytiQ+Jr9E4ljz3Su3LXJ/eke7fafVOUBswvkM5eNKn
RJ9L8aTBbxTLUS5Mfc1wjQX+T/Y4UE5nxmMwLa2BJmtEuZ75WxMfEl+j8XCB
r56F8w0vWPdOLDQKyqMpLjJ4nmqMSe4zvkbz42neTr6WzOGV+D+xyVP8p/dp
6WmJT9F9/QbHmvpvq0+A2irlTWYOW5jtWbyAziHtnaDxwfTiGq53slWK5xPb
MLmP+hqNS1RDWGAqg7eTnJvst6LjbL2L4bAtHEt9M/HTVp9AguWoj5szUtbr
srimGkviR4b7JxpFkrupjprgEDoeM4Yr+ysovkp8qqWFLsZ/ivOP85n0fS3e
JbGxJOe2NCuql9IaXMvejC5B805Lc7sD/jcaywkjnebTnIlB7TZ5X4pDWnNL
McOivyIZZ4K71ntAWuNPeh7oPojWu9D9RAlOM3qsqZdRbYHi/AQLJbpE61xN
6mt3qBG0uFuC1WmOMNjPrFeLu9G+GvrcVn9FKz48S9sxextPXPUUQ5J70ncx
vVgJLqJ6rMmhyZqafhvDQVp7Okx8MDp569poLJSv0T7Slk/RPEX9i/oIxWyG
7yQxKhlnEh8SXau1jmaeF/qD4TUUO9E4cxpn0qvTOh/A4DSKPU7vZTidyV/J
PLfON6bXNOZQ7pZwq4QzmnN1jC8neSHxkST+LPyI4pAWnjF6iNF5TJyn46Ga
PLVJardGs014HNVvW/m9paNSTrfgqhSj0vWl85aMjeY+qv9Q7E3jXvJeCa+n
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
JGbSWJHwnTWeNOvSqq+Z2kTC643vtGorLx3/J/EtuQ/lXEnuPt2H1ggM3qYY
yXCZVk8axdXUNkwcozZJ7SHB5Mn8mBhIv38lF6A2YOprlIdSXGr4fsvOXyL+
NzmR5l+au2n9IuH+BjPQPRGUyxh99aXYIb0/rdmddAYTe2kMpHH1yloVtYGT
bZsxt3RRow/f+fpK/E/z2un+Zk/Bidcb+0z0Hzo28ztBlPNSfXVh51fizMQe
WjjTxKIWl2xh18W6UI2X7jUzZyW1eg/ufH0H/E+1mlZ/vunLSvB/q+/6NA/J
nNMak+l/uJsdtjQBGsdONmP2PxoMn+DYK3M67XWhtmT0UqNLPItn3Q13te6Z
9PLRulhiY0lf3+P3afynNky5aqInGH31JeJ/6psUSydjS3rRjX0m2CnxnUVO
T/zX1DdpP5XBOXRdruy/ugPuWt/T1MUS+0nqvAk+T/w9weqn+TF1kORZHyX8
3+q1buXck+Zm+qYS22jV1+i6mHzXyjtUazLre+UenLvhrsU9k7Vb+yyt6yX+
fmV8S55l+hnubIdUBzPva/Ye0npEYod0LVrY1eCTK+2qxR9pbn2L////e155
bl5rrzHt91vHt2R/kMEqd7ZDg6Vp3445NzLpJT69V6tGTHVLk0eu1EnW+KrF
id7i/9+NY61aFV3TBacwsY7Gt5b/JvHkbnZo9iAk92xxveRcMjpvFFef5oru
Xzj5VJKn1jrJAl/R8+hofnnT8P+6zypZ04UOcGV8S3Rgs+elpZ1eaYct36fn
b9D7t3higm1onKE6BvXTZJ/Ls/B/0i9t8PzaL+7gO/Q+6z6rBG8s9k6u8yzt
Z6B7Xl4K/m89N7GN1ruYvtME21CMTfsQaI6jsX3dn5DEE9q/t/g90I8q/qf9
eK09XzTvPKtPxsRwimNbevgd7LCFPSimpTbfwrp0bzvdY0ttzOC305ws+hOS
WJH079HxvMn4n8Zw2mdF/TeZq9a5H2aNFmflJTinlQfvhv+ptk//Nlm7Fp9N
4kxrnMl9khie+JHhoYn9mD0Id+hfuhvuavFTs3828V+KqUxd1axR8l4U3ya4
q+W/d8P/9ByAZD8vjbGntaN8luJMOofGxii3SmIy9WXD91vY9Vl+cTf8T89S
oDXZBPM/qy+CrgvNd0azon7d6su6Ev+3YguNIcn3Kc5ZYGC61pQHmbUwXInO
FeWDd+hfuhvuMvzUxD2q+az7Isw6Gv89YVTze7LUF+5ghyfsQWNLgmHW+XSB
gU0MT2ws8RHT79fq3za/l0H7o95k/J/4Gq2z0/hs8Eain1z5222nOU80K6M/
LPZ1LuzQcL0kF6/z6ZrfGfyT2JjhvC1eTLUCGhOSz5/VN3IH/J/8rbEHGp8p
jqVrR+1wfZ3Ef6M/tPZ1tuywdfZvsr4n+zH5lGoI5ixNo7ckNraOV4vYnsQE
Gv8TzPCm4f8rcxn1d9N7luSC9Zom584Z/YH+9hnFUYbr0fEkcTuJ1SafUm5C
+V3CtY2O19q/YK4X+L+Fe+8cS5+F/6/UQAwmp3W3Vh+1WcckFplYerp/wpta
/XK07kPj9mlOWlqE0ZQS7G3mMFmv5DyHK880WK+LidV3jqUfJfxv7MF8n/L9
xTrS/fimnv4Yc2h+WZzpl7wvxb2tvVGJhpBwrkTnXGC/l9LTaPa/tGpVb/H/
c/E/tQf6jpRHr2sBNL+0eFASJ5OYRrVuutYm/ps5pzj8NDazF8z4r6lHXBnT
KNZK1sXUqt7i/+fi/2f9tqnRVVrrRXUqyoMSrpHg25bmvPgNrOQdk5xIx5/E
8GQv2Po3JU2v1AJztuyqVat6i/+vx/9rbJn4AuUCZn1pXG3hQ/N5sl6UuyVr
TXu2T89Kzn4x4z/FeZNDTd3B9EqtYxrlmInPrvnUnWPpS8f/i36GBLMZ/GBq
oIt9OnStKS46zRXFuhTDm3FSOzdnSiQxnObBxGZoHqEcsxXTaF8urQWse5jv
HEtfIv6n9rzI6aZ/j9rVep+OwSqLnLXQphZ2Tus+lD+a7yecgvILk3NpTKNx
2HBY2jOwyHdv8f/vZw/0fU1OTzgFPb/U1A4SfvH4HXN+UWu9kjxlctAaIxk8
fBon7S9K8mlSozdzSPM7nZMWH6FjXvQw3y2WvhT8f7IH+vtrBgObPaHJswzu
MnG7xY+oLnFalySHvkS+afJmy6/p53StzR7kJK8ZPpKMeY1t7hBLXyL+P+Xi
5PfXWhjY6Lpm/+kibicaaUtrohpIC0vfgW9eiQ+fxZUoPknmyqx18p2WjVE+
fodY+lLwP90jY+Yw0ZZb/TymR6gVt5P5b/Ej0+NK5/YOfHN99tEd/D2Je0lf
U2vfnxnzwn9b3PlNw/8J1qJ9Eadx0vVK7kl1wkVvqvndhNP7Un605oB345uL
Pswrc5zxd8rvFr0HdMwL/03y3Vv8//thrRbXTr7TOj88iY2t2ivlp1QjbWEq
wwGTeb6Sbxoet8CHV/q7ycWt3oNFvKL+a/jRW/yfY8sk3ppro8nTeq7BIdQ3
W5jTYCrDAek8r/lm4u+JX7T2X1zp70bXoufprblech/Ta5HoDG8y/qfrm+RW
Wns9rYXpw6HYj/pa8n0z5y0baNmP+d3nFt80df/Td571+9Etbk4xRuKndM4X
NtzicUaL+Kjif4MfEm7e4o8GT9I5oTkowSqP9zRzfuX14/wkv1lgcF0rVlON
65TXqAZypb/Tmj6tjSY2YHrkFnz2lKdorDM680vB/6YuZvZvGv5I91Su/cv0
LZg9jFden97rhMnpupg+zORc/WStaZ8MxYctf6cabLKmvwaD5WlA
         "], {{0, 128}, {
         128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "6902850650536429"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "\[Rule]", "0.21541310846805573`"}], ",", 
      RowBox[{"4", "\[Rule]", "0.7845861315727234`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztnTvLbktWhQ8KonFD52YimKgYefZW0NSgBUPhtHiDRqENRFrES97/Qc0U
RGkwUjAwF9HIRnNTf4HdoLBgMzfPc8aY67K/N6jN2h/11qqatxrzUrV+9Ou/
+7Xf+IHPPvvs9374e/987Yvf//lvfvOLP/jlH/r+f379i2/81E9+4we/9/jH
/9e+//yV//qV9z/203/4/l++8p3Pj8//9Dff+vxbX/2d93/7S//z7vg89Se/
bY1DfnvmmHdYS/Le1t83xkxkifx2Y/wWrTZkL6Ftor8JXzbkucWXhHcb8tx6
13e+/mfvfvHf373/u1/9x589Ph/7/Pdf/Nb7P/nnb7/7oz//hffkt61xpt9O
zxtjXvVeK2OWF/bvdg7273b+yTgb4yd2uyV7LZqQeW7zIpHnDR5Z3lmb0FrL
1P83f+Qv3/3rT3z73T/85+fvj8/beLj1/Nd/9ePv/78d53/8e2tM8rzx3mnM
ScYSPk6/ndZL5kDGTGRgW4aT8QmtJvtg5XCSkw06b/S/6tnyyPLO2oSWvJHf
Tn7Bcc4tPNx6nuhJ/m7HJDSc+iTvJX+3fcgcjq0VsyIyZuWNzDOR4WR8wqPJ
bls5JPLZojMZx/a/gw0hNCd7LtmvCd0SebO6to2HW8+EzuTvpBHd2fgtWYt9
TvaOyX9M/Fy7x53p0yXjJxh4mtvUh+i1HZPQ4Wf+9O/f/duvfffdb//cfyAM
MPW/yp4QOz/hFrt3T3M4M+dobVELD2/oTmI/j+0ok8dnIj8bv7XyY/F2gmem
Ndo9ZaKDtVEbPl3iuyWY2e41ZPyJttY+EHt+fD7ObepzVYzI7r8tu2pxxbaP
Y/cjoneJjiTxEGI/7X5xZlzOzo34gK19wdqrxO8gekF0yo5P4lqELxYzT/sp
4anVR7KXEbpNNtzWolid3Yjt2GbtquXFhk90HOfIC6Kndu9ozZ/oGpH5SdcI
LiI6ksTlWnsZkaWkXmiaG/GRyf5CbKC1dcTGHmky1UJM+WurCxYDJPGcJO5B
7PM0f1KLQvS3FSOa5kxsApmD5ReZZ5LTSfAbadPeQeJXNmdKdL+1XjLORswt
2cvsvml9TGtvj31IHZodfyPvZn9LsFMLAxAZILJEdJDYXhvrsH1aMRxrJ8+0
MzY3Z+siCP2t70nk0NLWykyCCcl6rZy04letfZBgicTm2FyGxZMtXETmv42R
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
THrCuyQelejpHXDdE/F/Us9PfMkWzd8y/p9iaCQXOfHIxqWTewDsfBIba22m
jfOTGKb9LfE7yLtISzADkYfEl3nh/66tsHO2d8ts3+HQoskd5KS1H1mManPu
lr8WY0/zsWs//t3WlbVqEpK60Kkl/hrZf6f+rXz3mbmku+G6J+L/SY9a/Grd
4fCW8f+xJbo5ySHhl50D+fuRnontTfB/qyaB+GIt/4jQZ9tHsLailUtKdOeF
/z98trxLaNLqs93utjdZmdnAYElcwmJvYnsT+zPRJInPb9zLuhFHnX5r892W
zhu5pLvhuqfg/yRGt7FntXj9KeF/qy8W87dqxa2+H/vYe9Us3Yj8kxzoZCft
d9DIvawtvbO4wsYSk/qBJJfUsiEtGibyeSb+t3rReu+2Td5oV+H/iRdJPJ/k
8lq1QLY2kuQCWnLS0jWy/x7/br9feWa+LIklWtkj+QJrf+6G6+6G/5Ma7+3a
rRZtPyX8T/TCYnuCRa0uT7X3yXfVk1xAwqNENqxfZmVgY12TzEzj2G9Skxy9
lecX/t9rrXMoL/yfx/aPY1r8PNVPklgHyV3aOnxCH7LeFg5pyVWSy5jWksTb
7bqSXPmxTbEsUsebvNfq3ZmycRX+b8UZiMwk9Nmg7RPx/wZWtHWViR2b5mAx
vF2vxSEtuSJznrCxrZNv3ctH4vyEzi2MSmrCyV6ZzOGF/z+UYRL/adVuvWX8
n/CC+AtH/SJ2uBWvJvY/kaureEp4ROhjz1DYeHuyrm2MSmKGLd/nDrjuzvjf
5uITTLjR7rDXbMcQbJ43qdVPfJBpr5noY2WsJQOJXFn/aKKh7dO6ly+hT4JR
J/tAvj23fSf5W8P/Fqu05PCF/79crJvYjeQ7mzaPYPPIE00IBiZyu83T5GxF
0pI4WKt+3o5v40uTbSdyktiZDX0n41yF/62MJfVX1l/boO1T8D+hv71ziWB7
UudD/HRitxP6EF/mKvxgY1/WH7dxsJYNIXqd4H9SY2D15Sm1YRu0PfNdRA6T
mo23gP83/OhEXya7TWp7WnHmq/ib2OeJViTPMulUEge7M/4n8jnt9eS9GzXq
nyr+t+8ia9yo2djQ36vw/6TjiR9NcP42lkhqO6/ir53DREObZ7G5FRsHuzP+
n8ZJzhGQmOQdasMsTe6M/1u+6pm0bbVWnMeesbLjb2OJpDaDzOEqnrbmsFFD
a7HxHfD/NA6Rf3Inho1PnqnvliZPxP+tmo0N2l6F/yc7ae/EtnZ40oUWlrC1
Sa26zTvgfztmq4bWYmPrV56J/4/jt743evz7FJ+0+rUhD1a/7oz/SfyT9D+T
tq22rSM2zjnpwkYdYFKbZOdwFU9b/l1SQ0v6kG9fbuDeFm60OkLeZWOhG3Gh
RMaeiP+JHF5F2zvEii1trazanKBdS1Kb9BbwfxLnsc8T/cn3Lq1fmch2S0es
fBKat84OvGX8T+QwqYV+Cv5P9lbCFyvDLT8rGdPe83YH/iY2kOjFRB9ru8id
Oa16gO34fzKOjT8Q+m/L5NPxP/GziHyeSdsn4n/iQ5Hz8uRd05xtDNny6A78
TeRtavbsJKm/Tc76JfUAiWy3dGTqP+mCPSN5h/ulN2i78S4izxOdt+PSZ7YN
/E/yfeRsUbKuVgy5lUe7A0/JM8GiSX7E5npa9QB3wP+kbXyXthW33KDJmfg/
iTmT/q097on43659svnJ+fdWbZLl0R3427IPx7/bO40tPRO9a9XjnYn/bfyB
0HY7H/R0/E9s/tSfxJDfMv63uGui26QL2+dDN+ol7sDfDXmb9s0E/1u92+Dj
Vfjfnpuw692WyTvjf+I/kviA7f8W8P+Z6yUy34oDJ3O+A3836E9yN/Z8hK0v
2ubRmfjf7gt3k8kNmrSardVMcltWbp+O/20s/cx4xUa9UDLnO/A3Wctkz1t5
Rpv/bcU9rsL/Fs8Tn+gOMnkH/E/kc5rPJHt2X0juLU/0dxsr2hqP7fVOfNyo
7bFzvgN/k7WQeE4So7bxWHIvRItHG/g/ieckcaG3gP9tHJ7UHE5y2LovurWP
bzQSa7U2YXu9G7U9bxn/b9Tb23oeezf4tF7bp4X/E5ls9TlTJs/E/9OY9s52
63smdQ4JHrgb/ifxzKQmKvH1Nmp7WjbnTP7aOVibs1EDZueZ7MVTnwSjWh+Z
xHnsc0senoL/E9mw+Dapc2hh1O022ViL3zbyd2fW9rwF/G9tC6m336AzkbFp
fDIHK2OJjzz1aT0n9N+QsYS2G7JBeGFtGolzbtyNeYdY8dQ28ndX1fZY+W/p
zgZPrWzb86cbcV2rvwmPWvjf5n/JfaHbeUYrkwlPW7kV25/sHdM4yZn0M+mz
zffpmdiQFh+3a3s+Jfw/yeck29aPO/PMi/VfyDhWxogNITXhG987sHGhp+B/
Owcr/y38n/in2/VRG3yfYm4k/7Ktm8m6Evlv6U7rOcnVEt5t4Bary626rxb+
T2KhG7VDG3jJ8rQlJ3YOtt5sGie589Py/c74f5Ixq7MbfEzW9Snhf2sH7L5g
+dKiZzLPaT7JWmw8h6ylVTtkz+Yk8nZn/E/yWaTP9Jzk1zb0aMOOtezDmf5R
Is+J/Ld0J+GjjUUQvlvdOZOetjbGjkPmQM6ZJnXmpHaodTbnU8X/093C0/Nx
nCMNp1iHrZlJYn0braV31ufd9o/eAv4n+p7EIoi+bON/gg2S2pgzMUaSw23p
18Z+fTf8P/WZvqe5Ubt4bKSm4m74n/CU4J9k73vh/4/7mJO+k3i+zZke9WWD
5nbM5PyClbGEj7aGqpX/tbUunxL+J3JiZSOxscQXu+pcwLb9vMo/usO+2aKt
zWFNf7ffMrPjb9PTyknynOgIyXmRGEKS/73qjsppbtv4n8jJRP9Wvqyl48m+
s23Hkrj09K6Wf7TBF0Kflu6QMa2skhoGqzsWW7bomZyTSmTM0i2pC0ryv8l7
n47/yR7a8hkt3exeubFfJ7S1zeYKN/yju+2bCT2tDzXF6hP5t3No0dPW29jv
9xEZS/ho5zY9Wz266o7KiXcb+H9ai72rPMljtlpSx3UH/E/8UJs7ILL0FvC/
tdtT3J7Yk4l3Cb9a9LTnClt1+JaPid1I9npLfxtzSNbSwv+TzSF7XyLbGzGZ
jTquhLYJf4nekXdZ/8jKzFPwv82PJPZtwhtTjUQiP9v7tc2xErkltivxicj8
bR+rv624h6W51Rci/+RdRLbJHBKaW7maxrmDHSP2IZHbVsy21Tbwv7XPNsdn
Y8KTjNn9N6GJxVG2zufMWkrClyRnnfiVG3dUtvD/NKaNcxIblcQWWnuildWr
aqtsDM3iomR/fAr+t7aa1C0T296qRd+I81jZs3Fdsm8m+0WSy7bfok38lI07
Kq2tS/SOxDmJzFhbumEzp2d7H2Nii+xvSRxy4z6ZRDdbbTtvbmXGfj8leZet
J0nkzWLXxH62/Cwit9Napuckn0ve29LN1m8TfTk2Kw8tm2Dj2MRnuRv+J3yx
87f2n+jmHfC/jV1Ma7G0tdiYYOZEH1s5kaMNJOc6SU4w8bPsGolflsSlE3mw
urmN/4m+TOMTH2eac8smWB1pjXOVHZvon8ghocPG/kjoY3/bqrexON/ef2L1
JeGjlStr3xJ7OPlZVh9bWJr4RGS95Js+d8D/BP+QWMTUNr43bfesjb3vTDs2
0TORw2meSV6A8Gs7bmYxJ/ntpAsJTib6ktRgWLmyOW47JokV2Dv8bR8rbxZP
2nMQCU8T/G/XuO17JjKc5G7s3mdpm9gxImPJeRzbNvbHlizZ2BcZ3+ZWpvnY
eompz0YNyVU5UBKHt7LX8o8snjwz5kBoYt91Jm234zw2HtLa+8jak99u2PCk
3iDZH1v7ZhJvJ7y2OayW/k7+RauGhMQSW3pE7Pz0W+IHtbB0IgNJXszuNUR+
iL5Yv6xFW6vjtg7ZYq1kH7wqjtHKoSSYYQOLJnpq4+02t2XtttVfu9dYO0Bi
iVYG7DzJb238v3X3gpUB8q4k5rCd70h8MUvblo0i2MPK/8Y+OK3d8iWR26RN
e+4GFrX0IbF3gjPJvRmk/7a/kODAVt6K2MbjWmwuidAkyUfYuJ+9y474QaSP
vUs8wf+Ej0QmLW1tI7mh5JwmiU9u3++UYEgy/pk+wnbePLHDUzxt+rv9hkXL
X7C0asXlyLsmXduO401614r7TXwksankTIS1dS35sXfyEHlr2aIJ49k7fCzN
W/6X1a9kDht7rtVfQpPE/ti6hem7csT+27UQ/SX7VEKrjbjc9C6ia1Y+7fyJ
TZ76Jzncae32TAQZ356x3Y7JJzJsx2/l7Oz35RP/y9IhiTlb/W09J3xMZI/o
8tQ/OZ9o4+rWNk7rsnRoxeU27APpn5whatW/Wd8h8TWsbNhz0y37YOWTYACC
tez9IWQOxN+3/leLF4S/hI+J/tq2gf+JP2h1x9oWIm+TrBI5THLHVuYtXyyP
rM5OMm91pHVvtrXz9u+W5gQTEl+jFZO3upDE3Kb3Wp+a6AiJCRD7QPwOwouJ
v9Z/SWzs3fB/kndoyZ7d0ye+E6yYxC2tn7KRa0himJPcTutN7s0mexaRQ1tP
0orPW7/V2geLb0kf4nsSetr3bsjnpO8JLyzfN/x3286M/1v7kMiejaUQf83e
NZHcO5HkmpOaZBu7tnmBiV82hj+Nn+iyHYfI8yQbZC1WlxPbuxFTJXk9i8MT
+bQytsF3u2c9Hf9b+5DMLZlnovtJXHrjngE7z+Mc/hfguCZk
         "], {{0, 128}, {128,
          0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "1926864005427175"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "\[Rule]", "0.09469582140445709`"}], ",", 
      RowBox[{"4", "\[Rule]", "0.9041356444358826`"}]}], "}"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7755137805424747`*^9, 3.7755137890192347`*^9}},
 CellLabel->
  "Out[124]=",ExpressionUUID->"c130e6c6-e436-4484-a955-3becb033c735"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"test4Data7kr1C16", " ", "=", " ", 
   RowBox[{"data7TC", "[", 
    RowBox[{"8", ",", "128", ",", "128"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"test4Data7kr1C16", "\[Rule]", 
   RowBox[{"netECA16", "[", 
    RowBox[{
     RowBox[{"Keys", "@", "test4Data7kr1C16"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<TopProbabilities\>\"", ",", "2"}], "}"}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.772719248559807*^9, 3.77271927548206*^9}, {
  3.772719324257593*^9, 3.772719331356277*^9}, {3.773124904129174*^9, 
  3.773124928357933*^9}, {3.7731251153026133`*^9, 3.7731251512280912`*^9}, {
  3.773125217467578*^9, 3.773125219418065*^9}, {3.773125271868342*^9, 
  3.773125271954652*^9}, {3.773212712732003*^9, 3.773212729006225*^9}, {
  3.773212818178605*^9, 3.773212830613299*^9}, {3.773212941366901*^9, 
  3.773212951689026*^9}, {3.773213005636443*^9, 3.773213014527096*^9}, {
  3.7732132566474*^9, 3.773213256876457*^9}, {3.773294401307526*^9, 
  3.773294423203759*^9}, {3.773348269707011*^9, 3.773348280477676*^9}, {
  3.7733514738060293`*^9, 3.773351485326448*^9}, {3.773356436954606*^9, 
  3.773356459506678*^9}, {3.775496533429831*^9, 3.7754965464457607`*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"5b2ea9bc-0222-4fc1-a1e2-bdc87b2dfe9f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzd3THr9M2S1vGDgmjoSxAjNXMxMDjPgyuGIqzCgomcFY0WVo+BmIlmBgua
C0YKGug7MBCMjDUwMTZYMTAwcxcMBuHCz5fqOWc1mJu5h9/0dFdXXVV1VXX/
/9hv/Nav/c0/8JOf/OTv/OHf/efXfvZ3/9zPf/6zv/eX/9Dv/edv/Ow3f+VP
/+Yf/N23f/9/v37v/T/8Mz/8+Bf+83/54b/909/56V/7E//2p//jv//zH/7D
7/z1Hz8/X8+s9/W7r8aX9zL+N373IudXn1f5X8Z/Jf/Lnn5j31/J89t29w0d
+/0s88taXsn5l4WBl7X/p3/yl37653/9H/zwP//2r/wo72Vul+9exn81/2/8
7qs5188va7yM/0r+397Tb7//hg5843f/f5L5Kzl843e/vca69n/1L//k//X1
j3/rV3/4N//6b/3wL377z9JvfT4v361r/Bzz1fy/8buXl8hwff4Kq+v4r3RA
ZP5Kr75tjxed+YbcRMf+X5T5Kzl8A6O+ITexWVm7+IXPcX79r/ypH//9f/zj
P/78V3/7h/X5yjU+n6n6vH53rUXmLzhWf/fy/nNMkec3/PXFN110QGQun/+y
cOmVzlS9rb+7dGz91u9nmV/kf8EH+d1XGFhtdv2W4OTnd0Vu6/mlnwu7xBY+
5VB9Ux2nPi+YLDJctrn0pOpzlZX4JvE7SwcWznyuccln8Zxr/t/GnIvOiN19
jilyq/p2qWH9ImV+kb+8ZF2CnxcMrH7t3/3Rv/rjP/sjv/Hjf/1Hf/GHpRti
O5/jfL5fspJnJG6R+Pbztyp/9fm8jCPPi6wq57b26yJ/sX3xHTLOwq4VF4nd
VUwQHfgG5oiufn6+xl/f/ZTt+u7CBMG6yhv/ImV+kf+SZ7XlWj9dOFzzvrVf
a3yJryrmCE8o8bDMp/ruJds6vuCSzF90RvLEpWMi/+ofq5yXrcl3V7x6was1
H8l/L5gjOZT4PtHDz3EWXi0bFL9Qay7flvk35L/GF1te+rZ0W95L3icxQLVf
4Y7kuwtzJB+RXGb5bpnn0tsVg629XjKvMe2lFrD2SOxdYo+aly35rPkIRyH6
ILr9Ki945UNrzCDrks+Fl142UnPAb+Rir+Rf6xqf6xI/W2M5wSXZC+EoLtxp
jW/X5/Je9Hn5GtFtwcaln5+yFb9T6wtrnhJvS22oxjm1ZrSekRiyxszV3y25
SZyw5lP9psR+67uyj2K/az4iE9HzV7mYxPmvYifRn4WTgkvLxwmerNeqi614
TPg6yR9lnhcusa5xPSPcwqXXZenkKx5GeJLK9Ql+yl7XPE7iLuEkFwaKr7nU
C6p/fMXzyPNV5jLmsqnqZ6uPqDgj+Yhwv5LDVrkt3Fi+fo1fa0Zip1Wvqn9f
869c06t6n+zFmnPFhLUuyd0u8q9rFx9da0wV62p9Sp4Xnys6XHmw6tfkdeG6
Rf5LJhK71lio4nD1ETUmEeyqtYAlQ8HGqv9i4zUOlD2terjGXzKpvR9iv+uZ
9Xyt18tvLeyt8XbFq6Vv9bu1x0/sRfCt2oVglHARwpVJ75/wPBUHLr5D9rRy
ztXX1P7qWhcQmxJubY0jeF5zum/EDyL/Ks/KDdZYrvYxXuRT+ZPql2tNX7gd
sRHRf+HQPp+v+1L7hy/7Ir5J+EPpp1rzXBheawG1RiC+Y9mXxD+Cz2KDgpmi
JxLbSE5Rf6s+L/OUOKHqgMi/1lZq7l91e+nYyuVrn6TIfMmtchRLxy51B7FB
4XAuuZXUNer5ysu+SJwv3Omy68qfX/ix+kz1F7U2tORQ64OVSxf5y5wlJ608
lcyt4pLUAi7+otYvKtaJD5LxpZ9HfG61R9Glyn2JXxC9rWdS6r7IS3qrJMdZ
tiP4tvLutcZLP/Or+oVgUX1fc8+qAytHqH1uKw6pHFrdOxmn6kbl2y8yF78g
/qL62RrbiC1IH7XUIgUfBJ8rvom/ED2p9VbpMVvj19hPOIS1RulnE91bPLzo
tuQpUterXGvFt4svqDFGrVMLr7jkdqkLyF58A6+W7q39lflf4hl5fq2r5t01
jxD9qX2kwkmuvRCZVAy86FWtyV7ujrjwKpV/Fn1b8aHkdFJrq+sS3Kt9s1Lv
W69LXlC5ozXm+lzq+xL/i++41EEEi+p7qWtLfUR8inDp0l9XefKL/Gt/i8Sf
sqcS84gfEZ2/6FutP9a9XvZ1iUMqxyXzkV4vOZch+CO+78It1Oelv7TGtDKf
2uMt+ixYsfZIauhLf6ovu7z/Rr/ZwqiLzst3L1yTcDXyXbH9uo8V9yonc/EX
YgvSNyI5/qXeIdh4eb/iopr7C4cgZzQqpkk8JntR+4IWJlf+bc2h6rPk1PJa
/lpq7uLLavxT90h+91WctnR7yXOtpXLjMr7IXGx/zVns99uYtr4r+yj1tbX2
JUPJC2q/xyt+71XfSOU8lwwFQ2oeLWupfGPVsW/kgOu7ErOJb1o6XLnuNYdL
nFb3SPa6jln3Tvjh6seXr5HerVoDEv5f7qi59E5f8Kr6yjVPyXml97Latcjh
VR79yheLzgh2Lf2XcxA1ZnvlRy4+pWKgxGxSH5cajdjIRbfXMzXvq3t3iX9E
r5Y+Sy6wvltjmIs9Xu4Yqf29FdPqXkjfiOB2zXlrvWn5R3leZFJ9jezX4spE
P+UO/AsHUtdb/cgFl+p86u9WDv9y/kvy/Ro/SAxc9+4S/6xxpB69xpeafq0N
LdupdXzZ64V1l3t4ak639mKNufZIYqqaS16wunIs4kPrvr+q79SYU/KmSx5R
c3Cx/QuGv/Jla731b6PI+a+Kq0s+gvOyF1IXlvi/rnfpW+1PvvBpMudXfRdi
j6J7Fx5VcO/iHy9x2oXDqf1I36i1iS7VeK/e2yl9s5Jb1TuvLr3WFcMlJhFf
Jn5z4W3tbau4WvHk0ndU7yK79BdVrq/2uoudrn4hkWGNJ6u9Vzy5cKTiO2Rd
EnN+m2+XeFiwq9baxAalviN6W5+XV8XzC7dTYwzZo4VXy5cJ1sk+rrnJ+a96
rmfZnfj39bvCqV76E2qcXPm3Gh+KLtWakdj4BXsvvRwSD0t9ufp66YWoGFV7
EqQH9fJbdQ4Li4SXk72u+1U5lnq3Ro1VLnHvpb4m/q72PKzvyhrrfU1iO6I/
glFSp5PxL/zb2kfB22/0l16w/VVO9O1a2xpHciKx00vf2oqFLjXf6lslHpMY
+9KjdcHJGtNK7CT+q+5vfb8wqv69rYq39WyLjCPP1NpKjW2kT1v0s+rhxY6W
3kp/6eI3xN8t/a/ylzrON2ptEpsJz1z58EsceLnTr6695vKv6kpiF7JG4Uxq
DaLGFTUWvdSdl6wud9pIzLmwosZOVecvPUW13iGvZV/SQ1L9u+S8S4drr2ON
2UT+Sz/l/JTgf7WpWltZsq3vBdMu86lrrz1vYjuX/hDJKxc2Sm4ucYWc8a8+
d82nYmDt05b8cX1XYhvBPdn3JYf6d4sqh/nqt6SHZOXU4oOkb0242Vd9PpVP
WHJYti+c4SuuQPyIxMM1L669hTKfekfBembtheS5tT+k5m61llprna/i9qqf
6yWxVq2h13ru0mepXa611P2V3FM4zPr34MRfX2KeVReoefSr+9le8Qlr7ZKD
yNov/KrwWvX8i9jIxfYl3hbfJ+8lZhA7Xftec7fatylxeMXMV3KWtcv48oyM
KTmOYF31v7K/0scoPcNSn5Uah8jwEvO8qoeKvbzqXaw1lzXPesbkEqcJPsjc
au4s8xS9quehqn8UTBMsFVld6iCX2pzUuapfqDHwN+I08QtyT0vF20sPmMQb
MjfRybUXlzMm63cl5hEdu6yx2nIdZ31esUX2t9qXzE3WUn2i9MxU+xXe8jL/
WveU36p3qoscJH+vfqGuS55ZsZyM+apGXPNHGV/OtIovkPxafMErrLvU4NZL
enXEdurZYakRL/yp/dUyh9onVvML0aUaB4q/E3yutZuFddJ3UTmryx1Tl3pr
jT1q/6HMra5LXsINCv5casQ1bpeYXHzfiqWFP7zw2xLXVb56YZG8F/lITFt5
ZuEYazxT8/2ay8t61/i1l/vyvtaVxE4rhtS9vvBRtedQ+F7h9y79h2IXcp6x
cvXCh4ueXPoSK39Yn6/1l4rJ1edeYnXBtOovKkdd57nwrfbgia1d4mGJYeTv
Rb6KhS41bsGfykGtMS9xaeVMqn7WOtrimRfOiExkvZdayQW71hxqfiryv/QX
Va643qVw4VvE58qcq4+uc7voT40l6nqrr69xpthF7Q+XfLPab/0bBNJD+zl+
PXO9ZCuxruzL+i2JGSR2FZlX7qv2h9dzgrXH+xt5qDxT5V/5DbFl6cNZe1Tj
f7GFyl1c+BPZX/FNUu+W8QUTJH+5+OsLV1bjooVLa5x6P7zY1KXXUeo1r+KN
ukc1JpS6Xq1PVV9ZfZD0aUjto/beiC1UmS/5y1rkVXsgqy5VTlXmduHzF86I
ndZc+9KLdcnrZQ7iKyuGVP5TYp713dp/K2chL7oqNnLxm3U+tWZRbVDmLHor
Z4uqT6k10OUjVu4pOcilR7r2scg5yprvC98iNlt1r8bAFywVGdYxK9/4qg4i
tRv5XenPEVtec6gci9hXvetV8Lni5EUPJWe82I7gUvU1F1kJnohsa79Z1YH1
fL1/SfBWdEbyoHonreBAtdlLb0zNecV21vtXdz3VfFY4jUvus/RBeg7rXRAS
zyzbkT7YVxgrMqwxW+X9Kv5/w3Zq7iy+vsa3FZ8vtaqqAxcupfqX6jdX3vr5
XakpX/oMxX5FJsJFVD7kwsMsDKznoFdcKjJ8FcPUvnp5psYzlX9bsc0rX3/h
Nyo2XnizOudLDC94K+fWL5i8nvk2P1yxusa0r2IMWe/ar9ofWPex3o+0Pr/s
Yz3XIHdNyFqkJ6TizAWL1v7W+xMu+XK1/RXzX/zvhSepPKTwe5VbqHO48EWX
mLP2Wly44iqTqrcX+VzGr3grulT9u9w/XGO86k+l1vD5kn7aeq6t9hNezj68
en/px6tnY6sOi67WM1+CveKXBYsuPLbkdOL3K5ZeeNdq4684IpmbyEowp8bh
F2yvdZaas1Tu7pV/r1xB9Vnrd+V80MJz0SuRg2DshV+t76t/l/l/I09f+yh7
KmuUvb7UrWouXPVB4tgLhlc8X+NUn/uqnlt175JfV4y6cJLVHmWcC6d0wbGK
5xffvZ658Fo1l7nY4CUuupwZXHzLNziE5Yvl82qzgr3r+Uset+R8uYtsPfOq
zrXwvOaYC/MldhLbkfff4PqqDggeiu1c+PCqV+LfL3HgZU+rf1zzv/Ba1S+I
DYqeCG6vz8X2BSdf5elyH9eqU1x0o579uXAyUn+pvWSSw9Y615KD1FkEtyUG
+0advfZEVX9x4WSk1078xStfudYl/Tyv/OylBrT2etm1xCQXTF77ItyC5G7i
c1dvp5zZrHgotlzvI73w8KLDa18unIzkYvXvRwt+yhxqDbrG9ksm4oMqVtQe
pIUVYo9i76LP9Q6uyzyrHa04cPVdVH71G/WgZadiR8umLjW+ipOV037Fca0x
Kx7WHgOx/Ys+iK4KhlS/JnzI0k+JH2SeC7drDfpS55J9lFzvVY1yzXPlOPVv
kVw4UsHPOs+1F6JL67dk/MvfXqn1oBqTXzBEYvKKz4LJFz5q7anERfVO+Jo/
Vv2pchOZXDgi4YLWmPV+iRqHX+49kDWKDdb9qn6/1kEqZq74oXJBEp9XvF3z
lFrSsrUlq5Wz15hW9vQb94VesLfa+6WeUjmita5XGFJtQfLH2l8kz4u/rrFT
vfey1qGqblz67qq9XHg2yU0k9hB7X3KT2FIwp97jJ3Oua7zEHhLnCLcj3EKN
edY4ojOvaseCIaLzgs8XnkR0TJ4XDJG4UeqMUk8X3ZOzz0sOF16l8r0S+11q
/RdslDmLPouNyO9KnHO5U2X5I6m5L52/yHZhguDzmqdgkfgsweTK5yyZ1L/j
cNHhGpNXbr/O7TLn+ruSN8k86xzW86vuvL4recqyzeWDvnHPVcXwtUeCD8te
Kv/wCjeWTNYaay3sVf1uyUrupq56fql/1Z6ENTep9YgclkzqfdoSv8l9jKLD
1b5qjiC9B7X3SXRP6pUyt7WWS21L7scQzJF+pAvfXnkD8csLByoPKbn5+lz8
qXx+uU9Pxq8xT+WNpaYsWPoNO621+GWD377XWnoAah4h9ih5aLWdWqOR5yuf
I/sr+FDlVuOrKjfhCQXHJP5ceitrlP0VLBVeqO6X7IVgguTgtbdfuJTa/yNY
euk/EVxa/Ge9f6Pmj9+oI1xsdunABbfFN0m+LLxcxcP13WrXtbfqsl/V79R+
s0sNfcmzvsQ2Lz1vNTepOiD+/bKPom81H688VY3Bql4JZlacucRCF9us3KPY
yCu+4mKnda9lLVIDWjpc51OxUfpUq8xlvyoOvOpllXm+moPIqvYDSH3hEg/I
HARPqgxrvvP5qr27y9bEv9RcYMnhEpPXmkjFLqk1yNpXLeNydqCu92Knr3R+
vaqvFC5ObG3NYcXz0otyiR8WDlz6LpY+CyaIz6q/JTlyXcvao5orXXrjl73I
PlZ+teq59HvUHETwp8Y/Mo706IpMxDddet7WngpPculPq3HXBU9E59fcpC+r
+rtLfr1ksuZTeTyJH5Z86n1Zl9iscgXykhy5rqVigmCj2GaNIWX8Ff+IfC5x
V81BLrohvmPt9SUfqf6lnl9YPqX6hW9wyPLdqhsXTBB+79IXWvsEBK8kX6jj
1L679ao8v+iA9CVKv9aF/7xg2sKc6q9lH2tNUMavWLTGkT0VXKo8UuU01jg1
F5N6nMRFFZ9r3lR5tgu2X/K19fk34k+R1SWPk1ysnlGVOqbY7CWnq2d2RP7V
LiR3E/5TxhR9+0bOsp6RGFLeSw+e7J3o8MJ8ORtY70+odXPZlwvW1d+VO0kk
b5J6+jfWWOOo2ud2iT/FdhaGiJ+SXF72/RWf9qpecNFV2TvRAek5lPusXvWc
X+IT6bWu5/HFF9QePNkL6dmud8Wsz2ts9o0+Kxmn1kmXzOvZecnjxEdc1ihx
VOXi6j0bl1rGhQu6fFfsSHLYiuHVh4quyt4JTsr4axzxHUv3au+ByHPJpNYE
pUYpPInIsOr2Wov0tr2KzWTtleOSuVXZXs5Br32R+0xWrUrOuYtuCLdWMWrJ
8MJdr7iinhG+fFdwW+7Dr5zb2juJqcRnfYN7r+eGVn1H7Kv2oly4lzW++M1v
nIUUnkd6pCs+yKveU1HHFz6/jlPrnmIjwhVIPFltcL0uv7XsTvohpW6y9kVs
X+zxEsPIHC7vBVvWPore1vziwr0Ltiw5VG5N3gvvKvXrKn+JPaqt1b4U0TGJ
P6X/8HIXgYwvaxF9vvQNVv8ra68+qObpF3+3/GztXaz5r8hf5vwqhhEerL5f
4y89qbFH9TuVfxN9k37LS34telj5h9onIK+Lrcm+XM52rXEEQyovLRyy2Jpg
da1Xykv8r9xzJWN+fl77TyrnLPgguCG5c83Zq+3LGiWGWTZ18S+XOqz4TeGI
5MyR2FTNl8U2a29Y9a11Hy9/a+BVDij6sOYg592Wfta75iSmfcV9XTCq7mPd
lyUrWVftQa32W2sul/yi1sHr+xqv1txZzkWKf1nzkTqs9APXe65qP2qNYS62
U+195U3rGckLpE4n8adgy6u+NXkJ33XBqFd+re57PdfwKgauMYPgs8jqct7t
VY2j8slLDyuXXvm6Kk/xWbLeWhNZ66q5pIwje1T50lc4L/p2ybkusaXYYI3b
C37/n7Yj8f9Fh6tfu9TdJMcUOxL9qTyG5IzCe8g5waqH1UYqrlZ8rnq75H/h
oqs8RX+EF609jbIv1V/Ieuu9Cq9iuV8kp1flLOuq+Lni9ip/uXtq2VrVYcGo
tfZv9OHUXKDqodiy5I/CLcva5fMam6351/qI5LALZyo/KftYOYpLHl37FlZP
Y+29/0auXc8s1LrbxcYvnF7FxpqHXvjhmi8Lzqw9lb9d+4279eoeXTifmlNU
fyE6LBzapaer5uaiS2tdNaa9nH1Yc1iY+Yojkh7vWtdYNnipccteVBwTmVe9
XXOr41w4PbGFqquiAzVWEX9dzybUM8KXOkXFYZGn+O4L73fRqzXPi9+s/YES
Fwkm1FqP5NRS41gxidzpfZHhsqkV/wtPvl6yxqrPF7wVfJNeQfmtCz9Qbafi
Vb3rRn5L4gqxWemvuPRgVDxcMrnIp+JYjRNqTiEyEb60cnc1HqtYsWLXyjmv
zyXWXbKS2Ltyd7Xv63I/g9ha7QuqfJ3kHVWfBTMrBtbYvmLCJc+91AdrLrnG
rOc4Lnj+ih+uNdyqJzXmrLzHxQbrXlT/9eq7Ej9f7iJe/GG1wSVnqWlKLUbW
W3MfmU+NnyufX3OEigmXO1sueXSNcyo3cukHFhsRe1zflTsxapxcuaa619UH
Xeaz1lt7aCtXIP7owg9fYrzqm6SHWc4pr88XVy96fuHwxfeJDUouVuUvXPrS
q9obdsltV31QuAjxcZWPWvte75S+1GRFVrV+KhguPqVyCJUTFh/3ql552bvK
04q+iZyr/Ks91thJek6+0QsndRD5uzYXv1xlXnlX4R/WuipPK2e7qk7WnLHW
iC933Il/r/dEXeL86kPr5+t3Je6qfn99XnPVS2+2xLGX3sha477wVGvO8syl
L1F6A9Z+Xe7jkhxwxf+1TiR7J3sqelixovbeyHclDqkyrPYoeC44UPP6y77X
87avsLrGutWnSB5a8+Iqf+GEX/Wz/bJkW/PoXyT/L+/lTsLaV1/PyF9sTXBb
9rHWFNaYl3hVdKDyG5cezuovLv0Aa/xL31rFpZrvVxusvXkyh8UjfaOWIXGC
3Aey9uKS90lt8ZVs63drf9GF/xefuOxUnlkv6YurfY+XWsbCihqTiL1XzqTa
1KV+UZ8RP7h8/eVvWVZusMZCcrZO5lbjtxo/XPo0pD+58uGiwxIHSrxRc6Xa
i3WRray3+vpX/L/EY7VeI3lB1WfxHZc9qn0I9W8TrDnXcxOy15WLrvGSYKPU
vsV31L7E6rNq/3Dt4ZcY4NI/U9dVOSjRH5nDwoR6FrjGdWJTUv+qsl17JH+P
uHIXlVuWWqHglXAgEgNcfJb0YlV8+MbZFukNFvwROVTfV2MnieXWnEX3Kg5c
OEyZf71/6VW8UX2K6OGlRn/hIWsO+6rusPZI9rT249Vag8RFlUMQ/FlrFN9U
72iq/V0VMyWHkj16xS+94pkvdlRrYZfYqXI1r2KGi6+ptRhZl5wZf1X7qDnF
Wlflul/1UdT45Nv9tGsfq65ecucaa0m/R82F5dxHtUGRoeRZFz6k4uSS82Wv
Recv9aZXc5DYSWKYypNULrH6GsE0eS89DLWmILWPypdearLVj4isah5a+2wv
mCxnHJZeiQwl5xW+XdZ+6dG91EcWnovuST/Pq/MUF3645qSX+uDl8zoHkaGc
M6r923LXqOBD9TXiI2qOJnlxrX0su6h1pcrzfLufpPJXNZ+q+Lbqep/Pi/6v
Pa2x+ooxZI2CS+IHL35H+iUqp/pqjUuGNRYSWQkeih3Vsyr1LID0SNRc6fI3
huTcWfU1VYcrr1h7F8UWakwoscEvq5+k1p4ufmQ9U/PK6qdqP0a9i0PsSPRn
PVP58/W5nKW9/J24usYLT7LmXLnTV3fhvuLGq0+pZ/de7dfCrnpGrOat0udZ
e5zWnOVc/IoJl15deope9ZNUvvEbdZmKXfVeKbGvymsJZl7qqhUrBJeWjcvn
9e6Fy9+aF55kPV/rQVU/15xf1WFFnyUulbrVN/ZL7hKsWCcxfz2bcIlR1zjC
A0isKHO+9JNUDu3CZ9a8Rrjleq5TPhfckxhenvn8vN63I/srtWy531I4ripD
iXlq773MofYyia6KjYs+C86IT1l4WOtEdb8khq9c37L3yrVeuFmZ/+VM3Df6
smr8UGu+F9sUHZDaveSS4rMWHkoOezljVXOoladUvu7CGdbz3eI7qh6u74pN
yTl0wXbJu4VnlvpUXXu1X8He9bsVVyunV3naqs+XfhjR1XpW4lIrF/0RrL7U
bat+vvLXUv9d8r/UHD9fldupPQMXbnzpgDzzCn+Wn5V7ll75qQtGVf2X2Phy
Nnn9VvWh8hI+fM35EouKboiu1jxxraXW2oR/q/dUVB642mz1y1U/K66KXsle
LL2q85QcRGxHega+kcfJ61LrWfpQdb7yIVV/ap2ryl/s97JH1RaEg635mujD
euYyh0t+IbYp8xSZVK7g0mvx6kyK6LP0G9S8qfrZWq+RPtJXMWeN62p8UvO4
S1+Z6MZ6fum2fF7jcIkJL+eMRP61pi/68KpXqsYGUicSuVXu8Ru146WTdV/E
ZsVPXc5NXM4LXGpMst7ao7jwp/abyT6uek3tW7jUNQRDPp+R/FrkU+3lMucL
BoouvcolReelf1tqIiK3yn29yscl/5L1yvmstcbLncB1r6XeJ/pccXj9bj03
ccnp1jgiK8HSS9xb61OCz5Xz+QZvXPumRP7yu5d88IIzUguWftHV+1HjHMGf
pT9Sg5PzArXWU7mpSz4uOfLK15ZeCW5UDu2y12sc8Rc19xEuV74r9xRJPF/9
u8jkcq+LcA4V69b4i1u49NKLHcnaL/3hFR+qD7rgzNqvy1kDkWHlskS2l1ym
njuuWCFrkTHXM/XcRI1Vag/h+u6FT156Vev1EifInV2XswOi5/UskvijNQfZ
91e4JLYsZ8wvvHHF29ofLnK+cDiXPFH4tMqTLNupfEh9psa9YvsV3+rdUKsn
4dJ3KvcF1Vil6nDFB+GTlwzl/pPKFVQdu/T2yLrWHOpvXXo2ZO8qLgkXIXhy
4RUlH5HzLFWvat4keyf7Jb7p0s+5+NILVyy8h8i89voKBgpHdOm9edWfsLCl
xv9LhwXDK59Z4zGJyevrcvaz5rnSt1B5WlnXxdZqTCu5gJwdE25N5H/pZxA5
yNov/TlrTy+9apWrFLytHPJ6v/yv3HV5iYclNqv9RaKHF66y1tHW3GpMeMHz
Go+t+by6B6ae/bzUuS611BWHSM13fVdiXdk78S/LHuW7Mh/h1l71y4kOiE6u
eV7uc6hyE1uW3602KDK55IMSD9d8R/BHfPSlNlTraLUmtTCn8pD1+bVHcsat
3gNTMXaNU+PPqreVC3rFLy1ffNHbZQuCq/UOE5nzq3456V2ROKr2nUrdR/jk
igOXuxrE50o/nuQaotv1nOD6rvj0ijOiP+KP6v0elTe71BHkeYldVwy8fKLk
jPJM7UsXvRU/uHxN1fllv7XHr/omwVg5Y36xlyUfsR3RW/F9lbMSu5CcqPIw
l7WLnCUHX/opPIzoTI0xRD6CD/VOEulPk7y7jll93CXfrFgt8r/cBSc6LK/F
C9XzXNIzc+FqBCelN6nGJ6/uYBHdltqZ/K70CEn+Lpgg90bKXlf/u/qIap1L
MPDSG7n06hUPL7HZK1ySnqXaxyIctcSltQ5bOd6l8+tzOVMgMbzk9eu95O+v
+jYFJyUmFFuo/q7GeIKZ8rvij171XC38XJgj+f7KYUX3Fj5LvCrcuPAeYi+1
T6n2SYqvrDy82KPgpOBSzeUvuU/NMaVnT/BHfLHoichH8u7at19xtfJ78rng
QK011OfF3pcuVX5GsKj+DaPac7XGF7ktnRROuMpqvdbaxddLPl7j50vMfDl3
KTKvti+6J3moYHjNqWv9UWo6EpNLbCw9bJIHCd9Y8/0af4q9y3dFB8TXCJ5c
/FfN6SrnIP5aYpua77zyZdWfit5W/k0wXLB6+cGFpbXucOEza/z2qm9c9EHO
KMl+re/K35cRXylnyiSXFH8qa3/1qrmw6Grt/fh81b9jUuvLl1478V/VX4gO
VP6t+sfK48mcxZdV+SzdE6xbcliyfdU3smx/6W3tqZDfFTlceBXpIa9ruZwx
FB0W3yf98+IX1rqWHERPXmHaJQ+tOLN0tcYnEkdd7KL2iohMZF+qXdfaR7WF
S++31CwkZnh1dkkweX239o2s8S/9z1IzEtyuul31QeJbqf1VvKpces3fxaZW
XHo5ryr9nBXT6ufC6VWcEf5K4qJ6VkVsqtpC/btCgqUik0tf8aU/eeGP1Emr
v5A9qvGh8KjC50ucJlgtOfLF10s/TI0N1rrknO9FJ8V/1Xj4gqsLo4RLXL5S
OEzpQxD9X5/Xc20XrmPNQfzsxb5qLCHPi86sl9QpLvyM1NRkH8Xniq0t7FrP
VHtculF1T/7+S+V86lou/aILH6r9Sg5eOXDRScHnmqfXurBwg9VnLf0UHKtY
V3v7xY9c+PbKwYpefYMbvOhY5eLE59ZeuMv+1j4EsZEaXwlXIH5T4vbFxQkP
LPtY11J9/fKh0vsqeisYXv3dBStecZgSW65XrXPVGuvlJXt9keelJ1N4Xanx
CY5VbvDCk4vuXXBb5HY5o1H551d10hqXCpaKz6r6UH2ZnLESfqbWuy/9QrWH
tp6HrXnNpS9a1lhjg+ojhCOqf2+o1kpqnVTyesGiajtS4xPOc82hyrDaQu3J
Edyu+nbpX60yrPcESr4gNiuYWXvnpC5f8bmeRxbuV2pDl/OPteZ+ibfXe8m5
Kocpa6zngyR+llqYYKDYu8hZuErhIqQvV+Yp/bqX3jb5XOov9fzgZY3CcdW4
TuzoVX2k9jHWut5lLdKDuuT26n6JyznE2nNYf1c+v5ylrXxCxc8LPiw8vOTs
kkdITFU5+cs+Sjws/lpqtTX+XPOUmFZ60kTmkteL3ET3Ki99kcOFI5I63ZJz
PWP4be5u7bXgecU64TfW2pc8ZfwaMy/du/jxFWtdzpuv8YU7kjsxBH9Et2tf
x7KLqv+CIRIvCf5ceh4kNrv0Eos9LhwQPannwmrP58KfWn8UmVwwQfa9+k3J
Tyt394ojFT2sfYk1HpAxZV9qfeFy1rjyGLJHNQ55xRmKv155XMXzi67W3FP4
wMsdfZV/lvhKuB35vHJ3lf+XcSqWSmy2flf48IUJtY78au2Vu6v1xMoHVt6g
nvWu/Mmy2cotVE5mzVl40RoTVpyUfRT5X/rnq11f+PyKmbXeWuMi8XeiS+KL
V1628K3erbrkI7X+epZK1ijnKWrfzqWfU/iTuvbqay7954LbosO1diY6v/iT
apuCLbU3ZumbYHvF+ZprVx5S8PaSa4u/qH0moocSA4vOyDPSv3Hhb2ufRv18
var8RW61/l7z61fzlP6cyr1LTn3RydoPVu+aEHnWcysLx2qNSeYsPrragmC7
9PZUf7HmIHXe9bti75Jri86LbkvstORQ6wKSO9QaVs31ltxkj+rn67cklqg1
wUu9cumDxISXPo3Kf4o+r5hB7Lqua40j9iW2/wqTP5+pNaPLWQCR27IFqZFV
blD8hYxTfY2ccZN6h+zdJSdaGCXnNao9XmpYNV6Sz5fNiu3UnvalG2vfa8y5
XhXHat5ac8OqGxXrZN/rWmpt68JPXjBZ8Ec43ip/4RxEV2WP1trr3QViy8t3
rHmuHEHmLzpQe+fk+RqH1xqx5CDL7iRvrTKseV/NuwXbpddO5iZcmeCDvBdf
eYl71xpr3if1KVmL6O2S56U3Y+2jYMiag9xBJDUysfG6p1IXEB9RcebVnVFr
PvWMs/ga0Vt5/oIDtR+49htI3iSvS29bvatTsL3W32vOXn9LdEB0suKbPF/z
vtorXusUl2fW87IW4bXkDGy9d/rVPkpeUM8wSg/AGkfigctZgMpFv+pNqr5j
6WHFfJnDytHEfqWmKT1Xwu1UX1Pvx6u9IpJTVD6t9p+s+azPa9x7qXcsfZZ6
1qszm9UGX8m85jIypsyz5l+y3m/E5wtzxI8I5ojti67Ws101L77w5MJjVNuU
Wv/6vNbpVg2lxsxLJ2u/q/SKSE6x9kvipUsNt9q17O+Sj/j3ZeMr5q8cl8zn
VcxcdbLiee3BqNypxGyC/5f4/BI/yHzq8xJjC3cn+1hjsPWM8BiCezWn+Fyj
1ILX+3oGX+qVr+4VucR7EhfV88gV32oNq8qk5sKXuL3WWWT+9b3g5zfOo132
XXozaq/UJT6XmoLwA2s+EufLmfqlMxUDL2f2X/k76Q14db615oPCvUt9UOy0
nlmu79ce1XuiBBNkLy5cZa1NX3JYqS1eekVe5U1rTPHvl/Nol7qh9CVWnlP2
VJ6/8JMXOdSYZMXbgmkSlwo//Dm+2ILUdCpHIT2lUt+pd9qsOV9qzQt/BJdq
vVLwfPmINf6r+wMr/i8MrDnsGkd6FZaNS/z2iiOqe3Gpl1W9FZ8lWCrxyXr/
7fih9lktnan+fT0vOLzmUPtwxO9Uvrf21EmNoNYN670EF1urvK7snWBv7d+Q
GP4i8wu/cTlLfqmt134Skdt6pvK0y0Ze+dD6u7VGWevUtXfl1doF/y/c5vJ9
/wuXZHpT
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "203595605949565"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.19029179215431213`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.8097067475318909`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzFnT3LdWt1hY8JJkIaowQSsDFlytgF8j5IUtikOfkDHsFjkQMBQxRJoUUq
/4KNEEgRf0ZKSZMqaJcyoLaWKkTYzYDr4prrtXgP+2zWs/b9MeeYY4x577W/
+LV//PDj3/vggw/+6TO//s+HH337y9/85kff+fs/+M3/fP2jT770l5/8/q9f
fu////3m9f/97F/efvr9v3n7nz//1tt6/cmnPn775y/+1bs/+dtfvluv7fXk
b8n7Zfz2/ldzJ/cvYyh7Ucb5xNo+seZPxO0T9ymvn1irMv6n4+oqBt7n5/6u
Yuz1/c/+54//+idf+MO3f/2jX7z70X/8xdtv/633v/X5r759+PGfvX330994
e31//Xu9nvwtGc+6htyHXG8/i8zdflaZL9k7si92PHbv7DjLmtvYKOtT7mNj
rOTI1dqWfS9xVWLmKu+uYvXpGLtazx/8+3+9+9z//sO7f/v+H6PX5D5PrKH9
XLI+V+tg47DstV2fglEl9uzeXcWhjcmn19zO146nrGHJ2ScwtuBMwVj7uSUm
S4yRuZOxveoFu25WpzyxhvZzyX3KOpS6Y+PtCouejvOrNbfrX2LjdzXfNa81
nrKGdj2f4Fd2v+yeEoy197d7dxVjZGyv9yGaa41hrdu6Pxmz1YAkDknur7Ul
+EbW4X1ihY2x94lRVzWFfC7BQxsbT6y5jZMSP2QN7Xq+Xn/FrxYmlHgmtZLE
zLr/wky71zbGyDj/+0ffffvh333t7Ss//1OkNcg+rpgheE7Wh3CDFYd2bNZj
J+uwrnkCK0itv8INi1FXGnNdT95fuUAwZ+VOWXNbQ21uWk5oaxmZu+VXdg2t
D3OVv6WGktgm67zimeQLWWdSc61+IbFnY3X1uMnartp35Sld+Vpr7isGFl7Z
ulMwilxPNKaNK8vfiG4l8U/WvMyX8GE7d8LbSf6S2CMxQHLTYgXhgfY+toZa
/Cla9X1eQ+Jt8SjC1UmNXutMMLNwYIuf5cwMqdFWkz7R+7P9wcIHbH1f62Br
t/UBSH4RXV/ikKzV6z0Xnr++Jlqe1FzyPsGWoguK5iW12PJJq1Xta6tnbd6R
+lvqsvWFiu9B5mK1Kol/uxeEe5d9sWMj2seOgfQWCfcuuWB7QDaWLGcmvgTh
z2ScBOdLXli9Y7WMfU3ix+oFgldXHkWprWSPCAewPtu6D+FvhFdbz2pds75P
YbWq5fZPcHLb+7viAMuvI9fYWC3jJ72zK2+HcObXf+R7PcQrs7WgaJyVF4XP
l+uLXra5afs7xa+w873yyoqWt96dzX3bPyVelp0j4Zy2l3S1L3YulgOUWCIx
TPjA1fgJP1zrWXr3K/ZsTVl+rPU2LW8nPok9U1Tix+ploq3WPcl6XnkXdu+u
6q/V8lf1mvCNNceFycTrW3lk+4lWu1lfjtRTu18k76xfTfKC6Fnih9jx29ck
3kj/lORs6RtavWl9g1W/rCdgcZ7UGsshrzwcEidXuoB4ONbvIuNcWp5wpCe8
LMuRLE4Sbf60tr3SlWT8C68WphE/meQF0TV2H8m8rF623rXdd8JJip4i3Mn2
jCzfttrZeghFI9tcI+O09fdKa5PPtbzIaq6rc3GFu9rauuby+j7R2lfa1u7X
yuXCS8taWZ+Z1BSrNawf+HS9Jp9rfUJ7JsHW3xKHpMY9wfNtvbC9Fet9kXyx
WtvGj/VhLOe09bf0ZxfHs/cveGI1u9XvBJcIB7N6pKxb0SyWbxfNSHT0Vb22
Z2/I+pBriC6zdZDsO9FxNv5tHSd7RHgR8fdIzhKvY32uxYGyd1azkFgidWr9
Ldkj4jkUPLR8wGpbkhdkf8vZvCuv6UpjFuwqddl6VhavrLYtfQrCP4kPfLXv
Vk/ZeCA8vGhei2OWT1ouXTitxRyr5Qvu2T574QAkrwkfsDzHYiMZM9FcFhvt
GGz/mtQdi11LMxKOd8WHybqRM5+2T/F6z7W2V5hcvKwrDFz/iAdC9qjwonLW
guRsOY9heT6Ze+FaZE+v/HCb42S+9syD7UsSDCwc2D53wmrSJ+ojqctXHM+O
n8zdfh/BrjnpVVlMtr08q80trys1i2C7xRzC1a2PQepg6bfavCZ6k3CtFecE
V0n8l7+1+pq8Lhye8DfLgck9i/dofR5SHwkOW35r65TleBb3CCavcRJuQOKZ
YC/BQ3J/6+0UvW/PjRCstjhp6x3pNZD4sd7Cus/r59rvdZL5rnva3Cz8bb1P
vutK5mJzzXrLiwPb76wVDm91eqlBBUuvuFPRNVdcgoxh/RahrXEkltb9S7yR
2kFwg+hE610XzWLjYXl9xYMt3m+Jf+srXr0m3MBiJqnvhbtarvVEr61wYLKG
BBNsL5jo0yvuRGLJ8oryDI3y3ca1Jit+7HfibFyR/bX+HsEri40kPhdu270m
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
15PglfXwy9mJgsMlHsjZG+vfklpj+c/yZ5ZWWmMm9XGtm30OJNHjxO9dY7D1
l/CQwhvJ/pY6SzQFib01TpuD1ssidYfc/0pDWS25sNGOmeBM6cGR9bR+juXk
pGaRcRaOWnTrqk22T0G0Oalf5JnnZO72e7W2tpLcvOqHrvcJhyfe1JXvTeqd
5QA2bu1+Efwp9XrlkX2OUOGBhIsSnWXX2dZNUl+WjliagqwDGWfxNsn4LUe1
+Gw1HelTkJwt5zFIDbU17sofeKLvYPex6OKi+668dLu21osoes3GksVn8v1i
4mmUczXlb60HZTmS5RjEL73yCe1ZGtLDJetJeDX5zinh+Wt9iKdkz12UnkXJ
fesPlJ4FiavyW6tEF5P5Fl1f8Id4tiRmbF/AYp3lG6WXRDghwaLigy38KXWc
fC6pKVYHkXlZH3vhvMVbUjdtbSr4aXvBV/tO6ovtV5JaZjW+7VlYb4TUTaIx
SYwRjmSxl+BP6Q1ZzFyxRzwx25O15wmtdiA8jdRo248oup6c+bH5S/DQeg6k
7hCv7MoPuapNBD8tzhB9Svbdeo+WD5O6U/xVkuNW5xJcWtyDXG95KeF+BH8s
9yN5ZP0uy4XI+0SnWJ581UcmuGGfQ17wkFxfevrrX9Gw1uOy2o1oZ1ubyL4T
PVJ8Y8sbSf4S/mz7+ARnrrQn+dsyfhtj9nsuhTcSjUnmTjjMihPisxG9QDgM
qcXLvyVrRfrIxfu1XkrBrsKXrI9nsch6y0QLrNgovNRqW7vmJOYLZpL8tWtL
eAXBNOLtEz5AeKwdv9UOVgeRcxeWG5c9tZhf6v56v2iiq3whXugTeqdoScuR
rnDP4nxZHxtXRC8UH+kJ7U9qH8HMwufXHO25poV1SyPbeCvfMS8+p9Wkq46Q
umm1Q4lbwmcsD1/7ZTmn9TxtvpAcJD2s0h8hvRuLXU/458XHIxhIeBrBAcu9
Lbe50v62X0PquOV+V/zh6jca7Lys/2k1nfVjydqSdSYeha1BJBdI7ix8tjyH
7Bd5rlTxCRduWA5peWkZM5k7qYkWD8leW1/R1tzSLyb63XIhq/1t3BYdSmq9
9RlKP4KMmYy/+J/2/sUXJX9r98jyc6tHyN4R3lJ6GTa/lgaxn1V8NqJJi4dg
PUnLPWy9trq44B7xJElOWawuOFl4r+0R22c6Ea5btAmZu/UErN9o9c4T/SYS
22SPyHzLa5JTxfcrta9wYIK9BHMsd7J/a8ds8YHsaTn7VHg4GTP5LOKhEcwh
nh6JE1tfypoTDLT1yNZlMhercwu3v+LSlktYblCw94laQHT9ypfX6+35RlKX
CYchMV++e0K4k/W9bZ4SbmzHYM8+XenrotEs7hXfZu07ea4aqe/WByj1vcTe
yhHym6dFc1mMInlB1tD2ncl3xsu8ntAFttYQz9b2XAi2Wx1hzwitfbT1xfav
ibdG1tN+7qrXtpZZfU3uX7h06WsTT8DGhuV+xVsgHIDoX+L9EpwktebqNwHX
upXzPGuPiLdJ+KHF3itdYGsN6bstDmA9H7tHVqtaDrB6xKQu22ep2X0ne2E1
gq3p5VzHWmfi29jzNuuahSHr+qvfzCrcmHAeMmabjyvGCl8lNYh4Anbfic9j
94vkNZnXqmVlnZ/wxxYXWnlt+aHV9UX7FH5FMMTyNBsD9vwz8a7J7ytZbmNr
95WHY7kuiT3rs5F8LM88IXyD5D75W8IPrf6y/aDi41l9Wvx/exbCrgnJtVI7
Sp4WDLRxa8dg993i0pUvZP3zNUeC50VTW45nfRLr4Vj+U/wo2xu1vhnhYGTN
LZ+0tbL4JxYHyPoQH57ErfX/LZ8s3MbySZsX5ZzGE2dObM260uNrPJbfEp5W
vCy7X8VLIZ65jRmSmzavCV+1Ob4+1/ZGbb+s+A+l5pb6S/bU8mdb1+zZLVJ3
bBw+0Z8qcyRrVTTC+tty5oSsJ6mbJPbs/Qm2POFrFZ5G/pbg0hX+WI+CxLzl
flf9I+LRWU+jeBQ2fwuvvuKBVl+stSVamMQV+b2k0o8g/SkyZsI9rnro1oOy
Z04sF7W62PoShAc+7WsRzWU9bYK3V94U4QzEiyAxv+5j64LlqyRnSb+M8BDb
L7C5TLii9SgID7x6bXPc9rZsj4nEhs3TdT3BW1uzCockuWB1veU5xZcrPPzK
1yp+ETnb84Q3ZT32J3wM69vbHC+9hlLryfrYvLY5Qrg94YFXmL/ya42/5D6J
gaJVSZ4SzLR9TOt1WD1I6iPpqVmOWnQNOfNj+ykkfgoeFk+gvF6fVX6nr/gY
6337PSZSs4gfSHwMq5VKH8FqVaLF7OfaNbG+k80v63Ws/SK9oYV7hfsVjlT8
AVI7yPfmyBqSNSHegvXxbP0in0s4TOlrEEy7yru1JiSWyD0t315+CznLQeJ2
7R3JU8slrNYu+s5yYxLz6/oShyQHCSZYv4vUejKGNXdyzZWnUeZL6qntNa+/
td4pqYPF0yAxbD0f6z9Yj670Oq80ZqmPpHbY9SSxan1aq/tI/pbnq5frre9E
8KfEodXppM6S8VvNS7CuvC4+hvW7CP9fuby0oe0nkn258lqtt0D8KFLjrK9l
8fAKB6zGXPcpngb5W6JVyRkPsuaET1q/1Hpi1uchuWY5TKlBVldafXHlixZ9
WvK0/PYEiUlbE0vvw/JbgiekVhYv0fJ2+11OW19InhYOQ3hLuY/1Eq3nY8+3
EMy5WtvSa77C+SsOc4WxxXMgc7FnpYrmJZhWOK3VHSSXSX0n15PeR1nzlb+k
z2jnZessqTX2u/8F94o3Yvuz5D5Wn1rfg2iigp9XZx7sc8vtmU8yLxJXdv3L
edSCpURDkfuXvirB8xI/lq9a/41wobW2C5PXNaRXQnwDsj4EB8oaLt+A5KCN
MZKDpNaTmlj6Pq/vk+/grDkWT4/ck3yWrYOEk6x4K8+as14l0fVl3UgsEd/P
1nrb/7Vau2DvFXci+tTWvvJ8b+sZWv/HchiCAyQmbX/T1vHiLRA+YL0+sg5W
M9p+ffH0bC+seIbW47Uaiqxz8Spt7Ss+D8FPu/4EwwkHKDFDsNdyeMKdCP4Q
nCE5e+UZWixa75P9tedzLK+2vY/igZDXZF8sblusK7yxeHokBxcmW8+QrGHp
ZxFOW/hwyd/36aUX7kfwhHzuFfez3IbEp/Uuruqs9QwttyE5dRX/BWPX+8sL
sh5I4QylL094zpVutdy1cB7rI63x2zW0HiYZ8+ItJX5Ir4HwpeKl231Ztd7y
AYtRJL8st7ny+cncbZ21Y7Pei9XgT8S/XXPChcr9rV9Baqh9XiXJ66JbLfZe
8b0VYytf1rrZ3w8tNbSsSdHjhDNbHUSwdO3LlX63PgOpWZbbkP6azfHSJ7L+
mPUMCQbacztX+Gm5ll1ncn/rV1iPYt1/9RxJHbG+CqnpxK+wfI/wfxLDhHOS
3CFrYvUjiR8Sk+W8TfE27TkNq9/JOpC4sjyQYG/ZO8Kr7R6R2rdi2HrRBAes
BiS4ZPknyR3iYxBssXlKPHmCXZY7WVwt3qnlfpYDWJy0Y7bap+imsuYWq0kO
rti2XkFZH+tDktpEehzk/iUmr2pN8aWLx1s0i9XXlieT+k56iDZPrTYk37Mo
vQ8yBlsTiT9jx0y0m+1PEY1g/5b4GwRnyN+SNSd5RHwYy5kJDhQvl+gXwj+L
PrU61762msuup+0nXnGeK2+z+MxlXgXHCKeyPZeio9fa2ppI1sfyhCvv2u6d
1Rc2H0sdL7W14AxZc/s82OI/F/24rr/y2K3mIj4GqVlkPUmdIv2v4icUf4zw
E5IX1icpOEDWivjAtl5bT+OJ81SkXhTPn2CCxRaiL8p3uq2OINrEajf7zBky
BsLHyPkB21cqmveKhxPv64oPED+k1Cai9ayfUPwxq4Ou+laEG9u+dqmb6zX5
DaYr/LTXFK1qx7DygvTEr86KEF5HatATz5EomsjuNcE9+wyKp31Oy8NtTbni
A0QDltp0pTGf4OeEKxKPhczd7rvtJZX4fB0/+f6UrUHFtyQ4XLiB5Qm2X2nP
itieGrnPWqur+mX1rN1rywGuuJ/lcvZMDokHUpctH7B5Yb3Zq/pFsMvyc+vP
FC1jzyKWGmfj84m+6lpD2x8hYyY5Zc+6EOwl8WnPxti6RtZhfQeBzIvUr7VH
BKOsn2+9o8L9bN0hmoKM2Z6bJT2+qzMzxe+y9cvGCYlJu0ck321MrvUsHpTF
avK9pIJppO6sdVg5uMZJfifO+kUk12wPgsQAqZukT0pqH8kXy3/IGTZyjf3u
4RX3s34I8VJKHbE8pHBvq4PIHIs+JXFCODNZf7KGRFvZmCQacP0jYyM8gXgC
BNOsl07Wiuxp8WGKn2N5lK1HZO6Eb1g8JM+ntRzAviY194r7Ed9pjc1+P4jU
EZIjT3g4ttZYzkD0afEfCF8lWtXWMqsxSb6QnC0erD2LVfQsme/63IJpRMtc
aR/bIyD1iHiJlnOSmCHYYvuDxOtbOWi1DOF+BMdIf5/EM+EDxNssnobNazK2
5SeQemf1L4kxsiZknESjFY1JdJD1h0ncEk1hcfVqrYo/SWoreWaF1T6Wn1ue
vGKG1Nm1JoQnk/UkfUnLCcl+Wf/T1iPrVVpNbbUAqV9XHjIZm9UdRf8Sn5Ps
qe1ZW45B1oTEquXPVmNavme9XLtWRG+SmLHcz762GG41i8Wu4rPZmkJ0LtE7
1isomED6hosDWI66ehaLc64z1dYzsRqT5Ag57205jNW/JQetn1/8BIvJ9ned
SGxYrCN8z3qhZP0JVltMszhJ7n+lWWzM2D5y4Ql2vsSXsM81faK/YLWPxQR7
n+KNrzW56j+uPSLPorH+jM274kUQP59wCfJ+iQ3S9yHYaz0oMveiB0nMr/vb
eCb6ruyL1SyW61rctvzH3pPE24o9ErcEW4qGItrHYkgZw5XnbP1G4lkRL8Vq
wJJ3paaTvSM80873SuMTDFx1jawPwYc1L6sHiRa2XgfhuldciNRQklOL6xL/
xHIh6xtb75fUWcJXrWaxWtLW9OLvEQ+teM425q/6aJbDlJprNTXJOxIb1sMs
67lyx64DqRFWO9jeU9HUa+/sb9WRPCpciNS1omcL17WYTNaBeDi2vtiesuXh
1hMo+GMxqnjOVq/ZfCx4S/y6oqNJfBY/s3iYlucT3mLrPsEEW+NK38HWd6JT
ypkEch8bPyRubXyWfgGp6XaPFmcgtdLGduG6JDdtHS+vV2xYTmLjucTYWgeC
t7Y/S+KN+DNF11gsJfrFrs8VVhCPrvhOVjuQ+l7eX3XZxvMVlyB4aDkhqS+E
zxAPbY2fcAProRXsItrQ7tGKgYL5BK/KOti+mM1Ty5fI3MsZHoKrRNeQeV35
ctYDsVixrn/9LJIX9qwR4VfFDyRxuOZo/ZzikVo9bnkv6dFbTLC/K73uaXWB
1bAWH+w1RZOSGCM4YPWa5Z/WiyPcgGAsiW1SH60PRvaucD/rOdt4Kz2IggnW
l7PaqmjYwm2s71fqNcnHK3+YjJ/oVlvTr+ZV7lleF01KeHLBaqLXyH4R7mr9
h6scJHqw6B3r+9l4IxpwXU+wlPz2MXnOlcUlm8urdltuTHgC2WsyF6vXSl+P
xB7BGTLm5X3ZfCR7VOZF8siOwfaRydwJL73qyV7F6hM9gpJ31kOz/oD10Kwf
tdZz9bjJcwjXXKxeWL5H4QnkNzvsvlteROZO4pacFyLrY/nhE/O1GsHmI/GB
rVe8xmlzZI2B4Imdi/VJiDa0fXwbqyTXrPYv/Nz6MOW80NX+XvVeCee3+oLk
F9l38j7xA4uesnzDenTFU7KeiX3fzrecISn1xfJqgm/2eexEx5F4LlqjrCep
QaS/Y2t9OaNS9pqM86rXY8dcuCXBDVt3Sl0mrwlmrmtWfK4aTfSU1aTWm1rv
274q2YurMxuW5xP+UOoL0bY2HogXROLn6rc8iNYovQProxbfcuncgsOFn5fe
jV2rcj7BYqDFjVV3LJco/LnE2JUnX85hEg/n6nflyPOcyZki+7kED8k9C/4U
LrfiwdZEouUJ5ludSDRa6UfYs3Yk5i22kBiw+7Kusb9rYDktWXOi+wqftB6m
5belp7PuQ2LsSje95lQ5h1k8K4JX6xnXZF5Wa9gcJPcseE5qDeGcljOQ+xM/
xHoadn1ITSH8sPQXrB9l8cTue/FqyBpaT8N6QYTXEZwknN/invWxyTWlXljd
VPjDlWdF8GrVpsJDCL6RfvriutY/JGtLMJxwA8v/7W+Ok7pAxkAwxPpyT2gr
wgeKv2r3nejrq7WynkbpR5S+9mv82N+vsVqArG3pq9oYs7Fa/PPiOViPzsbA
Gic5f2V7praurZpYdL3V7MSjKD1K64nZOF+12M7dakbia1l/laxh8V6Kt0Nq
MeGoBKMIP7dYajGknOex5yVKzFvsXflCPEzyt4S3rLGR39Eo9ye1mJxPILqY
fO7CVetLWB1hx0/qEYkHwiuIniXa1r5PxvMak8QfWBqWYKN9XuKVNie5VvxG
UuNWLpAcIXu9xmNxntTHxfEKtq+/JftFalDJx8JLra4h97cxRuomiXNyT3Ku
huASwQSrSQm+kT2ytZXwbVvTrbZaOGx1ysJwwsnJmtj+gtX4pM4SnU54I+H2
K0fIXpN9LzrL+lQW20ksWc1iPSuy15aX2vpSPNv3iRuWM5DeH8HDwqkInpR9
t7qPfGeTcNriP5S+G+Fpaw3teRV7ron0jCwPsXrBcnsS2wQ3CF8t2ELWcHnR
JGcJVlg+T/CE/LZp6R3YGCZ5Z7VAwY2iPW0/lOi+0r+wZzNKjV761OoUyxks
DyRrZfWvzUf7exBWm5PaSrSJ1Y923wkXIp42wR9bF+z50te5r76k9W0szyd4
ZX+brHh3ZI9sbJAcsbhh+0qWT5L9tfMl9Y48m6j8LueVZiR62cYzWbei+6xP
a2PMcnWy5iv+LdZdaWSC2yRfyBhIzpa6cxUzlleQ2Cj6y3p3ZS9KjizPlozB
8uqypwQPCyYsHmLXxOa+XU8yfhK3JU6K7iO1vujo4nnaPV0xY89RWNyza0v+
kc8inNPWnat5lb0msUQ455XWtutj50Xwk/BMwqstdyVjI7hkMcE+k9B6R7bv
Sfg2+Vxbx6/6Jna/bIwtzkligMSk7TsTbmYxn+AGif+SLyQOba258h/IWhFe
RHrN67OIBrRnAku9INp8YQjReuQcoD0PQLCC4MBa81IHCa6u9Sm9PBL/9tmk
1i+y+s7WERtja7/WHMtzA0jeWe+ucDaCJ+Q1yZfSEy/X2OdyEDwnc7E5vs7F
ld+wuPo+Y/HxiO4mmp2sOcllgpNWs5M6aHGAxG3RzsRTsv1HqwEJlyNjJni4
cqr0TUi/yXIwm4PF17UxudbB8mF73sz+s7Fna82aiz1jRril9bgsNyZnn4o/
b/s15TyArdeEhxDNbj/L8kDymmhngg9Wi631Ib6BxZmiYRcvsnFusYLUdHse
r/i6Nt5sr4TwH4szVhtaz8pyknXPdT3xDQjHsGd4CN8mOb7yyOpo4h1ZP22N
/1dhxhsy
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "10033010686584540"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.15696872770786285`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.8430306911468506`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzN3b/Kdt1VxeFgRFQQPIEIwc5KNHaSFwUFSxNNKUTwDxhQYmEUBHsrCwtb
Sy09ASuPQBDB0kLQE7DSBBQeiwW/i7HWG4v3Y383+9577bXmHHOMMde+ny//
5u9/7bd/4Atf+MIf/vB3//O1b/7RL3z729/846//0Pf+57e++a2f/ZlvffG7
h3/2P/++d/wPP/9LX/3nX/2dT3/1T//y1V/89y99+uuf/s6nf/vy7346HX88
X49P19HP9ZxbY9A5Kd/V679el1vzsFzn9Ty8iJllLV7H2Od8xuWcF8/7On4+
J6a9WOs//cf/+OqPffkHP/3B3//dVz8ef+U7X/r0xf/88U8/+hM/+X8+/9u/
+alP//uv3Ovj+R//na55+lz/3RqDzsnpOh+/W45PYzgdL+ui9yrj1Pl8PQ8v
YmZZixInS4wtc6LPuPzTa76IQ50rvc4yb7fwuVz/T37t9z79159/49Nf/so3
Pn08LvP88V6nc37uX7/+6Td+5Jc//cWvf+XTx2M9ZznW65c5OV3z4zkfa+7p
/I/nnO6l2FjWpWDyaR4+Hpfrfzz/NCcv5uFWzCj+6JwvMaY5uzzjkpunZymY
UGLyFoe5dR3FnNM5Cz6frl9y8OPnH+9b1vG0dnq8XKd8V+ekzPlpvQr+l7Ep
VpQ80mcv55z0Zvl8mYdb8XY6LvlY6mlZo4I/ZZzLMy45/iJ/NVYLh9G1Kzm+
xNiCz3qvUiOUN57yWp/9dLx894Qhpf6e5vw0tlKLS1ydYvs05+XzgtVlbCcO
9vEZT3rk4+dlTkqN0OPTsxcc1thW3lhwZslN5ZAlx1/kb4m3EwYWfqJxUubz
9Cxaxws+l7VeanHR8qf5LDV90aHlu7fitny3rGmJh6L1Sr6UZ1ENrvy85Gyp
v6f5KeuucVjGX65ZsF15V+GByn/KPJ/G/LGOKxapH3urzhberut1epYTz1Hs
KvGvOKwaRP3eov1VhyoWnZ6lxG3pq5ZnX9bidKw+/+l5y9i01qj3VdZLOWS5
18I3lrEV76vw8OW5tF4oFy1YpPGm61WeUfVReS71iDSWSu0oHoX2m4ovd8s7
0pgv/aBFQ53wtoxt0ezKSYq2Kut1q8+79BwVh8s8F9/plpd7uk7hhOr/6HOV
OCwcqei7gsOn6+hzKRYVDVtwvniqpRaX+FHcVpws2rOsl/KNxfNcarTqlPJ5
8QqWPqxyoaJr1OPSWr9g3a1+bomrhWOrX7fEtuZL8Y7Kc2ntW/bq6HMVLFIe
u3iJL3y/cn6JDeXAmuN6ncXXUi99we1lrRVbytqp36J+UeFO6u1rXC0ei/IE
5djqN97KnZIvpe9/yzfT2ldwvvRzS3yWvRwaMxpvi++nnE29qcIxynoVjrHw
K73v56zRymcK3i59aq2VSz9C/fziJ5R10WdU7F00acEZzZ2lp78cv6596i+9
5tXFB9bnKn7mwp103pQDa69n8djV19LnulWjFcfUq9c+dcHz4j+ox6I+p2q6
clz0kcZq6dsuNXHpgeq6Lx7ai9qnvc4yJwuvvlVDlf+oPlWc0T6CrnXpARW/
TvcEag+0xHyplbfWV/OljL9wwjJXBScXDlP8q5Nm1D0JGnuneVO81Zqo2rA8
11Kzip+zYLX6q4WHa0wuGrPw2IJvJd9LLhSsuLXW6h8udVP5qtbiguFaBwuO
LfN5Go/GqtZf1VkaYwUfyv6B4j+UOFHvRTnV4lUuPuQtDCxjK/hceIvu8bvl
fZU4KTm4aMlbvustT1XjrXx+4ldLfmkfU32zpUemvSfVcQumFe+u1McSw+qL
Kr/V/ZNlLdSr1BxRDFcf8gU2at+kjH/Bt8X7Uv9/wSVdU+XAy7qrHi/7fpee
e8kvrXGLT1swYdHdOuZlf6/uqdDe7pJ3WmcL11q4rmqlU16cjnXPQ1mLF+t1
a79EOb/k++JZ3Rp/Gafu61j4vPpIt3BJ9xoVzn9rr+Pi05a8Vh1X5krreOHw
BYsUD2/p2RNfKty7aEDN8YItpQYp1y3XPMVqOV7W6zQ21f76LMs49XOtQaoH
l77kohMVt3UP2+InL5x/WaPX+z9vcWx93nJ9jfmCXapni0dU1l29o1s+hsb2
osdVI5+eS797wmfFhLInXLGu5Jf68AXTFLeXft/C/4sPrP1K9esUB5a6r2u0
aJOSXxpLC84oDpSY19xc+qdLjVBevdR97Y9oLC1rqr5QWa+CY3r94lEUvale
aOk56jMqdy21Xq+zaEb1ChY/+QWv1nW81fPVNSr1RZ9X/c8Sw2XMipn6PtGC
kzqfZV30nQI9p8zhgu2nfNccXHwzrZWKaWWuCvbq3gD1jZUnqP9c6sLizS7e
keam5p2uo/Z8da1LfVl82oIJuudcf6tf4/Y0t7dqROGNysFucZjTmEusljXV
3Ck8sByXGNbj4oPd0lbaC1MeVb67+IdlfW/5D7e8o0W3Kq4WL2XZO6T6Uf0T
9QNLjGlvosRbidvCH7RGaMyUnoL6h4qTZTy6F0j9CvXcylqfnrHMj75zp7Vm
qdG3dG7hkIv/U7jZEs/K2wvHUEy45e0rPhTOXN4xL7xUcVvXQmvf4lfr31BY
asSLfQhlPC/0ddEdi5+zYHUZs2pVzc0yJ/q7PUvfv+CVaknl87d8G9Vr6oWW
+lVqsXr7+nnxdpbfwT5dR/uViid6vPjVC6cqNUL58C3Nqxq23Ktgl/py2rtU
DNF6UfhP8WCX82/xK/UktR+huaa9csXehW/c0pu31lc1RdHOZX6K31v8HJ1z
5XhF72huKt5qrVQ9qHFe8F/3S2i/STWj5mlZl5LLqrtVV5a4KvGv/GqJbX1G
xdviOS89COUA2qdWLqHrqxxSvUf1VVQjq4Za9vgpVmhtLT6w9kYVh1VPFe5d
uJnGQ+ESmi8L3hatrXshlpp1wgHNr4VvLBqz4FLx9vXvBajftdQy1ZuL11Ge
pewHVo5aclZ7W5o7ioGqFxYOrzzthde63Hc5R3mvxmTxeZbe6HL94sVpzVr2
t2hfSXNB17pguGrGxXct86a69TUfKNiinPB0nVPt0N+DVQ6w9ONO11FPu2g3
/a31EmO3fIOlD37Lq1QNuNxX1+iFfl/0l2rVwmHUN9Z9BepTLfsWlG+frn+L
UymfX/iAekGqB9VbU76kHKB4C6ccL3Fywv8yh8UzV92tnnNZC/VUVe+/9rH1
vhq3t/R78b4WrC4ctfTulSeXmFR9Xa5fYnipEZpryxiKFihaVWPyBfe7pSVv
eXHLHgDtKeh7E+V5yztoCw7oXgjl5MueK+VaBW+XmFf9rhpWx69cQmP1dFxi
Uudw2a+4+JnFA7nlk5R4Lvyk/BZ3maslH5U3ag1S/aLXWTTRwiHLPgHFVeU2
qtEK71106C0fu+Cnxrx6NadxFi+0cHXlJ+r3LjG54InOZ8GBF/2axSc5fffF
3+LUGlTy8RZ/Vu9a53zpcy3vVRWvXvsUSw7eekdMe1ilbt7ysZXnqJ+gvmvZ
m6rxqXmx+FHFZ9D5WfpNZWwF22/5mSV3FNtVl2mNflHXFtxWH0kxVsdfNIvG
lep39fNPMfCC22jvbJnzpXaf5uTkVxT9rnh4Okd9Y/UJlRuUGNbfobqFJzpO
jSv1M5WrlLhdnqvEpOKG8tvFR118pMVTKt7LKf6Lli+cuXgsWltfcBvFLuWx
BdOUexROqP5bwcMlzm9d58VaL/udFE8UB25pN+WoysG0j6C4pL8TtWjwW8fq
Iy2e0i0sVZ9N+U/hGyVfFm5zC4dLjV583WVfgWpV1R3q/ZY4X/i2rvWyt2Tx
9EqcL/sQioepMancu+Ce+gxFK2kf4RbHKPVL8Vm9iIV7qM+27Asqz64ekWJC
udeyF0XzotSdgtsl7xZtpd5vGdvpOoumKLXjpHNfeHoFb5d9CIununDU03jU
Nyg4eWvOi0+lNVfr0Sl/F+699JqXWrzki+6RU/1b+IDWx/K55kWJh6X3p3Wn
6I5b/kbhAAUDlx5NmQf19JS7ao6o5tK8uIUby3iUg6l3umCv1uKSv6XunMZc
PNuCLfp+qHrgS6ze0t2Lh1B4dRnbwj0KdyrnLFpJNVTJi1N86v551XFLr7nE
tvKoovUKXim2Fw+h4Eapy/rs6rsuHqZ6DuW4zKF6a8pDlvhceJrmcslr1YCa
44rbhTOoPio4qXhVMHnRcUWjqddX1kh5/q3zdZ9bWcfCDZRHLT2vktfaa172
3pT6u3hEhdsvv0WsuKRjO+WF6pSFp2k8vPA5F89WcVtrkD5XibHlnMWvLlhd
aoeOUzGkcLNFl6lWKlx04YolBpTnL1xLc1O5xxKH6peWvFj6bjq2hcOXvRDK
0xa+qvsEtD7quxVln8YtT1XX/dax+tW39pPofhuty0Vj3tKk5bvKqxcNW/YR
lZp+a69OiRPF2IIJyvGKp6o6qMRw4Qbld/KX511+h2fhogVzSo9DNXKJ+cLl
1IfUnunyW/RFwy48pMS8YqNqZ+2v3dKkyhtLjhRPo1xH9U5ZI92rc+JLt/Tj
8u5eqbnL8cLDF41QYvjWddSrLPpo0XrK8YqXpTxTc1a18+KZFw+h1O5F1y/+
pHop+izqaXw8Ln32BYtKLqjeKfNccu2W1njhNS31dznWHCzc7JaHv3y+6K/C
l5Z7KX9THaHcTD2Top1LnC9Ypzz5Vu04jaHU64XzlzGrHlF9t/hmi8+mPm2J
f9UaL94LU456i/OXMS+9ANULtz7Xfadlnpf3RJQP3No798IDLLm21GXlV+V5
l5pexqM6UfdjaF9YezcFi3QMpXYs/L/UqdNalHcASz/ultekdWTpTbzQ18Wr
P+mF07zp50Wzq4dTsHrxRrRuKqe95QEuvUK9zufkP/obv0XTKTYWn6HMecGr
Uw4WnrzEQNnDsPQ7NGZKrVxyTb2mgm9lHl5oZPXG1V9VvlqwSzmb6qOlR1zq
b4kB1f6Ld629wlt68DX/Kfu31ZvS8SsuLT3K4vOU2qcxcFpf/Tspt7yIW70Y
9UmUl96qU5pH2pvQeV56EAuOFW2o3L7wHNUgRUeUOCn4oBy1jHPRg6f73uI/
6m9rTKonVjCn5FThloohZY3Ut9T9isscLnVN94Gc1qX8fdulBi24qhy79Lb0
mqWOL3qwcHLlz0V7lnW51atdrnn6vNSg0iP4nBqwxK3y/1taZtkzUI6VK6pu
VY/uVj3SOVRep72Ykl/FD3xxrN5FOVa9s3CkhY9pv7LcSz0B5R6Ke7d6GYVv
L/slFh13SwMudUd92tLbKmPTfXTqK77oVakvqjmomKx8cvGHl/m5dayYuXDp
xRvRvszikxQfo8S/+kv6zuPi6WmsqnYr9eLWO6SfUwMumvpWn0vfDSk8XN8T
L1hacqHsEVI/tnz3FJ/L+7BljQqPXXo05Vg5mOKS9noKb1x8GPU0FD/Ls+h+
g/LsyhM091W7lfpY5kf10fdLA97af6Jen2pzxbHCr0peLP2j8oxa75SHL7ha
4rnEjOq1hXMuemTBjcWDveUDK8crz6LzWX6PQnu1qkPL+YW/vfAGS9/8tQZU
D7zEs3JLfQ9l8daWXtLSPyprpJzhhWe41JGii/U9sqW2Fk6iWkD9ioIPpQ7q
GFQzFh2nXlDBK+UYS70rWLfw3qKR1btY+m4LV9Fej87bwoVUI2u9K9hScK/M
f8HVpb+pfuOCe7pfV+e8POOJSxTcWLSn1voSe7d8VB1Pmf9FG576g2WcJUeW
2FbOU+ZB12UZs9bo8uzlu7fe0bilPXX8igm3ev3lvXh9Rj1n4a6L11fupbW1
8CjNZe2jae0u49G5LfxQ6+nyfkqJ58IB1P/UfFTOs/gGr/W7euzKyUveqV9U
nqvMQxn/4oWqj1TyUXW3+irLO33q1bzgqwUny5wv/uetHoTqqVscoNRWXcdb
GPXiXupX6BhO67Xgw6LfTzFTeOYtr0mfVzmY9nS0/6ueodaUEwYu86/xr3y4
8LRSs5SvKh8oca6eZImfUoMKXy1zpRygrPXy/q/ypRLzy73KOS/+FkPBw8VL
1PsuHpRqK/VOF29BcVX34Sy1Xr3KW/5k0S+Fqy/+T5kTjYFb3OAWPyy8sfw9
5Vt+rHKDxUddfJjCEzQ+l+MljxZfS/cXLft/CgdTDfXCRy1YvdT6sjdp6Xdr
v3jx0tUj0nuVelfmSud8ebf0dM6tdyhK76boXOWH6scWHNM9jbf82GXdXxxr
HqkmKjxEMa3U05ILWsfLeNQnKft+b41T+dvCzfQ6qp3VZ9DaumjSpQ+lHrvq
mhK3p3stOrT4DAv3UCzSmFzmXzWIYuOt8auHU3h+yUH13MreNsWQUnP1HPUV
lZuVMRSM0r03ZU6WvnPJkbIfo/j2p2uWeSt1RO9VckfnUM8p9y24VDhM0eMF
E073Kpijc6Kxqnioelx5vtblMj8Ltyk1peRXifmyRsqZl1pZ8Lb47aqhCsdQ
j6vEhtbEF++HFpxRnrnooFKztPe6HJfx6LyV3pDqdOXwi2erfuAtfFh0gfrA
ijmFmy3+v3Kz07Ofrq91Sv3PW56hxpLyscKLSmxobVW+utQp9ZML5y9+8un8
godF1+h8KkdSb6HkxVKbFl2pPEHPuaUrNd5ee1YL5ijnKRxY65RqotIvKzG2
7NPQ2rr4pbd8+Fsxs+h95VHKr/S7BbfLPJd4KGunNUhrh455ub72ehbPX3F1
0ZUvNOZSH1+806r7f0rtKH0WzbWSI6Xuqx9bYk85wNLfV320xIzOT6n1+t5W
8Wa1dmsOlh6rxoBil/aklD+XNT1polJ3Cibc8tKL56/XXDSmela3+piLJ1Di
c9kbU2LgdYwp/184QKnFyiWKziq5sGiQ4lkVrquaRT2oUoN0X8TiW2qdKnN7
i1ffwpayn2Hpnd2qpyWWynWURyl26bF6Akt/RHW65tGtGFMurfVa9zksvKXo
3DLPC88va6q9Ht3/UPbGlHlT36PUWcW3xafSGrTgjPo/qmeX+rVg5pKzheeU
Ol60RllH/RtYGj8lH0ucqx584b0se57Ve1ROUrBu4Ye6D0T7ZcV/uMVLy700
f1/gT5nnpUarrtf9e6rN1V9VL6jovtOxagr1w4t+XLzoW/uaSvyoblq0ifYU
bvm6Zc7Lbw/e0gIaA4uX9bo3p7mp86PYov7Jgj/L2uleCNX7i9Zb9Kz6CTqH
JRfU7zqtRdnfqHWhcJuln1LmsODGi56s9t2WY53zkhcFBwrPX/it8kN9H0ex
9xYvvbXHezlfc0fXrmBa4RUnva/eptbHBZO1niq3WWJG52rx0HT+yzVLvpc4
KXi4aJwy/gWjdJ+qHt+KH/X5tXegmLzo0IWXllgqe7xVU+h1yp6r4h2pxlQN
frqv5t0L/2rhWsrrSsxoXijGnuaw5ItqsYKfhX+e8nHpyep7JYtnq1pDdeiC
q5pfBcfK+32LF6TYWHipYlfR+Nq7L3y7YNHSNyk6dOmRaT9OeeyitZVraR+t
jEH7WQVjl9xRLVZiqXDFor8W706vo7F9S3+pX1pqt/pyGts6h8qN9Zr62zuL
t6bz+Tl7N8qRSs1SvaNz8nE8y/vFmlPlc33PV/djaN/zBQdWj1F1Ytlnoj5V
+bzUuBLPZf5Vf6lHrb+VcUtHL95FwZbFA1RvSsd/q5aV93EWbrn0TQpGle+q
11Sur9fUOFH/RzFziRPlJ7f886INF8+txHyplarRCv9f6k7JC10X1e+FlxYd
fYvTaj+reIA6byWvl/1p6uEo31bfuODS0ltceFSp0YpRJUdULyw4X7w45TzL
3Bb/fOHhWk917U7Pou8dqA4qObXMz2ldVLdqPi7PVTjtosFv4Yn6FaqPbnG/
Ul80X5Y+YPGlb3FU5TZao8ucFD2i2lb73aXeKc5oXGl8lrEVDqNxWNZ08brL
O27Ku7QnWGpWydNSd/S51HPWY9VcZcy3vA7NHfVwNAdVz2qdUk1x6/pLfule
KcXYW37j8lsWpfdX4mrpr93icqo91c9c/GrlBrqmqlsXPatca+Hbt3oH2pN6
4XWUGCjcr3g46vOXeSg5Ujz85beOy/VLvdA9XfregXpQ6jcqppXaoTqrcIPi
8S5cTvdCFH+jrKn61QXrdH4KtpT4L7mjvRg9LtdRz1w9nxLztzTmomFV92mN
KLWm5MjC4TXmb+HGEpPL/tiCpeqLKtYtvYkX/ryeU8ajx2WvtXJU9fQKZ1YM
VzzUudVYXa5Z8qvkyC1/Xj3SEtvlvQCtNWU8Za+d6uUlf1UXvPAHlINpPVLv
VP2ccqzaZPEblUvr+xqLriyYr+ul/cFbXEgxdsErrXGay0Vb3dqTs/CQUncW
3adrt+SsjqfMs855uZdiSKlB5fNTzf2c+wH0t2uUmxUeq36j7v045XLBZI3h
ktfLnjH11hbPXPlz4ZzqB2rd1Jw9xefyzkLxDRTrlJOrH6v+6qINtVbqnCtm
qle/cPvTmuqe4WUO1cfW5y26b9E4t3yApb9Qxr/4k/qbtCXOF++98KjCCRXb
iw4q3EDHU2qc8mqtR8rJF12mGHLLeylzu8Sw+g+qPQu31/714hmWOVz8nBJj
yo0XP189Ga1ft3wG9U+UX53uq38z8UWPZnkHZPEETmNefg+w6I5bvseLve6L
XtbcWTiD1uVbXn3xbMvaKYYXPaL+W8ENzf0yh0utXzz8pT9+wrSyRre45cLJ
S11QfFt6NItuXTz/ktf6Lt7iwarvccvXXXT9gsmaX4tnVc5f/CLlZvp7rfqb
KoVX6zsIt3rB6ncVzC+cRPlw4VdLrim3XPosxcdWbClcfcFD7d+VWF3m5BSf
GleLZ6LaXzm8rp160bqfueCDzoPyfMXDxV8q9U7jrax10TKn3F/6g8vfPNXY
0BxX7rp4mCXvtEeg9Vrr160ejcaV+mNFrxVvdtFZqkNVK6knUzi8cqSlHqmW
0Xm4tf9BeYj6OYozqn8LNpb8vaUZl1qmPPA0nlP/pcybek0LDylc67Quy29o
Fz9HfTPdP7NgQsFk9YG1r7f0booGKZ8XzqnzVtZd+4ya1+pvl5hc+qElNxec
edE/Uh9m0fvKnZRPaj0qXKXE6mn8S29u8WwXLFVed8s30/VSf3LpcZ/qlNbE
WxxJNZryfPX6tKemHLKsxeKvar1Wr0N5juLVgm+qnRe9X7iT5oXGmI657It4
gaXq4y2cZKk1S893ySntl6mnoVxO13GpEerhLD7q0lc9fb7sUS/rVa5f+KfW
u+V44bSKb8t+FcXhxetTnqnv0Sz8pPgYC5ZqvVbMVN6rz648VnNK+/tFY77o
oxW9oHWw+AMLb9F4Uy5R1l3fQVPPasmXWxymzL/OYfFwlvUqOLD4AMozSw9I
feMSexpvyjnVr7vVI1ZurxxbeYvWLB1n8c0UD0/Xv/X31xYtULhTiROtNWXe
FKNOuVZ+h3PhGEsvT7lr4RXL73QtXLH43rqfocxVyX3FWI234jfqOJWPqYdQ
YvgUe6fnvZW/BbfLOWWc5dm1LhecUY2ga1rWruCPxsnCPZZYLVpSa9MLf/sF
pi2e4cI/b+2H1xw/ze0pJrX2LfpL3/Mqe25vvcumMVy45cIxCj6Xv6FWvPfC
M3UPjNboEsMLN1v6hrqHf/HuSswssbrosmXvkObFgmmLf6Wxp5yt4E/haUUj
L55Gwdiiv5R/lpi/5bfc6ncs3s7pfOUJS2wUrCgcuPQLSjzoPurC/ZSLqoZS
L135sHIGxdjCmYuWV6zQeFOvb+H56rcXTNP+svoeS41WnXh6llKvlUctPobm
8mk8GpNaO0o9KnOrvvHiOZe4LRi1cJLiu5b6Xny8W3mkcVI4f9HL2icq91Lf
XvWgaqiF56sOKvh2q0+telP395Yxl3gruamYoLm2aI2ln6Xz9vG+y9+2vqU7
ilYt+FYwRNdFtUap77c8h5JHqtG0fp3OUQ9ZtbDy2JJrp7zQOFy8rBIz6h0t
fWrlYEsPQrVS4aslTnQMZV10LW71Aop+15qu/H/RHVrHy9xqjVhqnNYy5bcF
NxY9uORmwVJ9n0trd8H2Uyzp3pjFw1f/+ZamU89N/aVSExc9qB71Le9UdYSu
xdIL0ONF55bat+iOZe9BWaPChfS41AvF3tM86N89L3pQPZxyrH0l5Xiq0bRG
lzlU31vfmzgd3+q7aQ+oeJ6qkZce8YKBpfYVjlf4fFl3PUexetG5ZQ5LPBRs
XHy2kuOLLtN+XPFRF5wsa1Swrng4CzcoGK7Yqxpt+Vz7gGWNFq5Yztf9A4Vb
6lqoDlp6WxqHi7em+wZv8Uz1zBedq8fKE1RfL33Gshbag1uevdSspdYo51/0
ztLDLfVx2RN1yxMo81B81MI3lj5awdtb3lfh/Is2XPBZdY360ppHC8/U/ovi
0uIplRqtHoj6/4oJhQ+oBinPrv6zrqlidak7S00s61v4QPG+Fh9g6YOU3FSd
VXLzls/8Qpvc4uTa+1j2tn08Ln6aPrvqheLVFN5SrqmcdtnnUHhLyamCvcoN
FPcWPCxxsuyPKnFVOIzOeeFvJTd1X9Ytb2rpg5TftVjqy7IHcvn8Vv+ixGq5
TnkvdfFMFEOK7lv2JOveqlucR/OoxLzypVv4rD1l1baa74q3Zd9aGeeiI3TO
1RdSz199gEX7aE2/NebCB3TfiHL7F9e/VRPL+EseLRz+Vr9MfbZyvnKeEqvl
uOBJeU9ENULJqbIX8TS2F72PMj+lnpZ+ZVnrwsc017S//OK7hUu/xkwd2+JN
qc98q39x67hgUeHY6vOrj63rov7PCZeKD//Co1h8IcUWxfnyjGW9SjwsvQ/9
2wSLn1B0luJ5WUfdp7p48qpzC6+4hZnKUUstVi2jek37FItXUHJWeVeJ+dJL
Uk6i2F7WvcSMakz1KBbPueSyaqvCTwrelhxcvKaSL7f2nRbcu6UHS1+gXKd4
GsWLVi1c7lXmrcRn8XLLd9UfXvZdLB7mLa9A4/kW7in2Lnz1xV6vFx5Fefay
RiW/dD4X72LZi6IxVnB+4UUF9wpvPK37Uhe0Ti2+SomrW1pJ36crfp3u+1JO
XrSP+leL/3wLxxbcU+y9tX9VsVRr1uJRFAxXr76sUdFoWqfUCyq9gFuemGJX
iY1Sc5c+cqkLysPVv1381UUrLf6Jcu8SP0svQ31RxaLlWK+/YOOSXwXHFiwt
vt8Ln61gVMFb1Z5Lb/T0vPq+fMnBxSNarrPUXPVAlEdpnhbvRftKinuL96L1
dMkvxTrV77c8nBf939d5p5x28XNUI2vPbvHZtDex7BlYfLnTNTVf1LvQ91IL
bix96tdcTnsuC35q7CkWFf7woqdQcu0Wryu6bOmnLBxSeanWbs27BWMXvVA8
WK3vixe31L7il56eS3mXcpXyvEt+nfBE16hok1v4qZi8fFc9n4Jdy/6Qko+l
nhZeoX+npnCzZb0U93SPza3+bIntU74stalgbOnXFGw58Q2dw4Uzq/el/OQ0
htP+VeXVev6CkyX3F7968Sv+P3A59T8L5iw95YUbFHwr3116rIvWWHCvxPMt
36OM7VZOLdym4I/20RZ9pL5HiX/dk6ZzWOpm4dXKDco4Sx35nPpX/YrvF5e7
pa0WDrNg4FIjVPsXTrL0vheNoLVp8T3Kd9Ur0JhctIDGZPHfFr+01Cxd09Nc
KT8pnmTx6hecUa9p0VCL/tV4Ux1xi8u98KDKeLSHdTpWr6Bg5q29Nxq32qco
11HPWX0P5fa3fpe+1F+NT62hiy5QPrNwudN3F4/rRb4vXOhWXb6lf0vdLJ+/
4HKFV6gHVWK4eO/qQRW8XX7D/zSeW72VBQeKl6hzqL5HGU/ZA/bC41q0pL7j
X/CnzGe5/oJpp3guY9PrLDX61n5Fxb1F/+o5ZX70XqW3pf6D4t7S+y7csuyj
Vu9Fde7CARYcWDzVMm8Fwxd9VMa8eFy3/DTlugUDlzpbeHjhDwUzNV9K3GpN
UY5XsEKxdNlT9MIb17k6xaHqnVJrNPcXrrvw59M8LH5sWccy5+XZ9XzVVqd1
Lx5vmdsFx07zpr734n2VXkDhP6XOLthSfLbFZyg4oN6mchXNR+3/Llziljde
MKrEoeZOyWXFzFN8Fq5balPRIMWTVx61eLAl17T3p76i8q6iszTvVC+X5ypa
+5ZP9doTUA9cr6nemmKyxnnhKjq3qjuUS2g9LTFW5kHHo5hQ+P8tH7vwZ827
wmPLb4Yv9XrRg8X/0Xft1SM6zVtZi6X3Wvjkwj0Wn0qxRWNgyfFb3sKCySXe
yppqzKinofyt8KKiy1QnLt61Ysstzv/a/1dvVnWQ8pmiJRUPFz+zYLtqgdPY
tFe49KnLnOt+A+XDWvs05vWc5XzlKuptLn15Xd/F/1EMLDVL9xIoh9faehq/
+mNLD/3WOp7wocRe8TNLXi96c6kjiplLvdD6VXiLahDVStpfXnw8jaVFFy95
tHAV7eMUfarrUvBTNdriVS7YWPC5+PNlTQuX057gounU/1c8ubVHSLmN9tBV
l5V37W9pJeUDmi/a63zRX172Up7mSntVqhc0jxZs1HhQfVrmULXJsnf0lldZ
6uDCH8paL3tLFANLzGh9X/ZCLL2JkiPlc+1XFl1ZtJvWen1f7JY+Vd10q7+s
86NzVTBT319WvaA+TJln5TDL9dVzVo1c1ku9qVvcpnxXsVfjfME6jckynlua
9MSlS26Wz8t6LX7RC4xVT2nRp0WLFaxe/KjFUyoxr3/fZFmvwhsLN16wTjXX
rbGdxlB8v6Kp1WNfuM0tP1w96oLVqm3LdVTbLppU/a7C93S/zQuvYMHYgre6
f77o08K9S11Y/KjCeZbaelrHZc+z8vaFDxSsW3rH+vtvZTwl35XPLD5niWHt
C2vfSvfrqies3pruT761d6tgeBmP1vqFExatt/ytc/Wcy5yUOdd1VN6rHHXh
P2UMy/t6RXsuvUX1oJSvFgz8b0m/U5k=
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "7330900949575011"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.13269266486167908`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.866858184337616`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztXTGrrVcRfUQUwV5IE5FUCmm0EzkX0Uas8iQWweY9SUAICLEQC0EbsRDx
F7zKyvgfXsC/IQQ7sYuFWJqAwnmEHWayZs2stb9d3Me8y7n7zJ69ZmbNzD7f
+erTnz1++6VHjx79/Isf/fP4yS++8+67T375wy98/J+3nrzzzW+887mPxF//
7+dj+a0P/nb705d/c/v30zcffvT3f96e/+67D9//1dOH1e9Xr0Fe37mOwvqI
HHnfTjtkdWbLWXxW7aXz7JA1GetU2WHq7JAzZevP1uen33vj9vtvvX374xsv
vSD/4cOv3P7yn3/c/vWTr91WcvZv71/z/PnLD++/+srt9WevvSAz1kH2VbX+
ap2InLU/2w6rdVY6R+yJyKs9RuTIeWUxzzg7xB8Z6yA2ZO8FwWHkTCN+WnUW
SDyJ7D2SO+7/FslBWVwh6yD7Yqx/fxYR7rE6O0ZNEbEDco4rGeH5jLNTwCRy
LuzXVNkBWZPxvtlYnfVThv5ZfVY6rHLHs7/++OHz7z1++MGXfvvtlRzJQfev
z+5x9b7Zv43sC9Fttf57f/76w/9/shz4/vX362Ttnz3f1R6r/Oh+L1U10RSu
qjCJnAtbZtghuyaiZ1U+ivjFyt+r9M/qk319xGcjXG6lQxZX2dfc/z6bW7Pv
G7EtYrdI/M9y6c44mcVzVU3ExlUnJrO+WfWDYADJidl9sbnKirNFfDz7+6z+
K31WHHLV82FgL9KnYvCTbH84+14RXhrBahbbkddkdWPEyayM9Gaze0Fw1YnJ
qhiFzFAYto38bQTbEV5Uhc9VrybL8bK8LsLnO/u02b3c6xCp0xF+ku1VZvlG
hLcjNmfEhKxu7F5BFsOIXMUns1hFMFkVo1YYYNSDiO9EbBvZYxWfifztqvfI
2G+E53f2wRDuscoL2XWQmInw4dV5IfcWGLPyrG5InERq2M6+cZZPVuF/ygez
90MQno/EPcSeVXV95G8jfsrui2ZzX2cuyNYgq7Nj3MFg1EdIXRbhFVVcJbJf
ZE69wmGV3yH7zfJJxv20zho8e9+salbCiP/I/Z+qmWzVnQoGn5nqg1X5Y5Vf
IP1GxllkdYhgG+HSEe7ErtmzflfVh4/wySofYeRxRI7k8Ug9qBBDkHlcFpMr
GbmHzOAzU32wqjjMyC9IDdtpqwhnQO4EMvIsOy5V9eEjeZZxR6gqj6vJnb2F
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
vX329+eu9ojozJgXuPTzIxhjvC/iIwwd2L1WxBeuJivXg1VxYLVHpF96BYxF
ahDkOWnIvMCxn1+FZ0auZNeGp//sJbucV2e/lN27UJCreH4k3iIxx6WfX4Vn
5H3ZfDs7y2Db8Mg62NspNznedczak/G8HUafSrmfX8WNq/IjY+/Z3ju7vjhy
7TmqnddUbmL0LhRkhD8r6F91V6qqn59dn8HJV3VKlY8g/U9GfXHk2liKYI9x
Xmq5SfmuY9aeas/VZO9LmRszcFJ1/3+n2ceV5SnMMzhGZ26q6hUr9MoceX7V
viJnhOCk825M5Owi30GWXd9x9nFlmW3PqvVdclNWnpoXXJnnI+tPcWP2Ooxz
V559KGBVwUcY9qxan80xrjYvODwf31cnN2Zwp4hNqs5dbfbB8GUXmW1PBA9I
P2QqN7nMCw7P19E5e6ZV3Elh1qCgz9XmBY77zfZDOnNTFZdgzwsOz9ff1+pM
Ga+psrnjOlebFzjuN9sPYeDcJbdG6gVHPhyx8077UpZdZhYuNf7UeTnudxXf
FPxdbV4wtU6nnd15vovMnjWw14nIO80LdpqPRD6nM+XvO+VWZfnw/FmbM2YN
7HWm7DPly2x9FPaL3Ac4udVLPjx/1uYIthVe02mfqf45Wx+F/SrcT7hCblWQ
D8+ftfmVsZe1z1SNz9ZHYb8K9wqukFsV5MPzZ21+ZewhcaOzxmfrE5HZ+1W4
V3CF3KomH57fH9MO9njxp2p997osor/CvYIr5FY1OaLz4fk9dr4a9qriBmP9
7Bmp2T+y3yzeVjxk9b5XwLMjN8j2eY6siQ1H7EX0n6rxs7JaXda538gZZd/X
Bc+OPdvIPPfkAn1sOGIvq89Ujc9YZ+reEWO/jv4ylVsVuMHh+XtgwxF7Ef3V
cpPLft3t6YJnx55thOcrYMBdVuaxyrxUjde57Nfdni6x1DF3Z3n+qQV0zm4n
/V14Hduep+7ziqWOufvw/H4MM7Dhrr8Lr2Pbs2q/EVnZni6x1DF3H57f7+M7
8S42ttV4HduearlpSn+XWMrOrYz1739/eH6PjzCw4T6ryq6pUCMz7Hnqvlm8
ZddHcoGarPCc1Z1kdx6rxksVamSGPU/dp4m3iDz1ve1T+f3In81uLjxWmZdO
1cgMe07pw4gDynUfQ5763vbO2OWSfxVkl/6kC09Wk7N+4V6XqcUBZbyxv7e9
E9su+VdBdulPTq3vjpOsX2RtqFaXKccBNbyxv7e9E9uH7+F2u5oddrVP1i+Q
OKZQl7nHAUe8Tc0L3PuQCjEhYpNd7bCrfRC/QOI/Yx2F9c+9qU/KU/OCq/UJ
GRhz5EXHPtfErRoezr2pT8rseYFyn1DB/tl9RfaowIuOfWb94mryVJxxwdu9
zJ4XuPQJ1fzr1Ed722cn3qggT8UZF7wx5Ei9wMiPjPUV7K9cHyngzd0+O/FG
BZltz+yaanhjyFf4vG2n/V3qI7V+uIt9Dm/swcPUftXwduTPhqVO+0/xlqr1
p/rhLvZh8wpH3sjAg8J+FfDmfr5TWMrGf8T+arylym6Hx+L+fnhjrZ867vf4
S4+tOu2vzFsQux0eWxv/Ges48sYzHzn+opwfI/bP4lONt7j324/c7xfK+qjt
V80fd5KR/FgVr7KyAm9x77dfAdtTfuGoj9p+1fxRbb8K+ZERtxn7OrxoD/1d
/IKNt1NXHn9Xy49q+zq8aA/93f2iCm+dfqrMk4+/XzN/RfZ1eNEe+rv7RXZ9
dz+dsufx973zV1bPw4t0eKyarMYbs2ekZv8pex5/78+PChhT1nNKf/f13f2i
856Dgv2n7OmON4b+u/I99/pFjWeqrT9l/yq/yMZt9jrudWV2TRe8MfTfle+5
1y9qPFNt/Sn7q8UKl/2q2dMFbwx/UeZ7VbmMwSt25UUu60/Z34U3qu1X2Z7K
eGP4iwvfy9rHnbeo8SI1ecr+LnWK2n7d7enu79mcq8b3IvZx5y3KvEhBnrJ/
lV+onZd7Xele93WuH8m5LvK9/kj+UuAt7ryoM0Z12t+F17nro6a/u78jOV1N
ZuQsBd7izos6z73T/i68rsqeLnWle93XGU8cczqSH4/86XZzwYCa/mq8ju1H
anWle92nkB+Vc7qLbsry4XU98Z+xDqOOc59fuNd9CvkRmZOq6a9gZzX58Lq9
cZL1C/f5hVocUMZbhC9FfqZyHML3FOyvdu4RG16B17ljI+sXWRuqzS/c676p
mBnhS8+fv/zw/quv3F5/9toL8lSOq+J7O/k7YjcX3uW+vppfI3FMYX7hXvd1
4g3hSwo5jsH33P0dsZsL73Jff+p8q/y6cx2F9afqVgbeFOIbokOn/i7+jtjc
hXe5r6/sU0fut2cn3hT4DKMnz+B7Lv6O2LyKFyE59Arr78QbryBP1ZUMvCnw
GUQHxD5svjfl7wq85ciz9lfw653kqbqSgQckj1TFt87eI3tNBX9X4C1HnrV/
J29UsOfUeVXZM7smggfGTD8b3xRioAJ+pvpphwfOYsCdN14BD2r7RfCQzS+M
+Bb5YcdABfxM9dOyGDg8kJf3q+yfXbOqjriCz6rtN4sHds7Kxje1+/+O/p7t
px0eqJP3HXnjFerEnfZb1W9nxLeqHKdgZ7V4O9VPVuBFCrKyfapq/J3qRAWe
1hl/kBilwGcUdEB8hBFvs/g8PLAHk8c+mj6rwNM6+QbSb1fgMwo6RHSbirdV
ualqHTVexD73Yx99n92pLmb32xE8M+aVapwK0U0hbivEBAUeqKb/rvaZ8lm2
Pp37Zffb2XGJvUc2p3LxQTVZjQeq6b+rfaZ8lq0PEg+z+92VD3TusXPe8V8O
jMAj
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2943550672701792"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "\[Rule]", "0.11608342826366425`"}], ",", 
      RowBox[{"4", "\[Rule]", "0.8838850855827332`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzFnb/qde1VRUMEsVCwU0vLaGW0E/PqLURQLCNEUgSVKIqV3oA3oHdg7ARv
QPACLARLaxvxAtQEFE6KCWM41oPF+fh9h332fv6sNddcc61nvz//u3/wzd/7
6le+8pU/+okf/Oeb3/rT3/je9771Z7/54z/8n29/67u//PXv/tgP/vyL//n8
8O+///4/f+Pf//rXv/zsv/z0lz/+7Z/78p3v/tSX//zJf/y1z78/r1l/r+vJ
9+Tv8ls7trImV+v2eg3tHF/YQ7G3qz16Md/XfvTCbsv6XO3dlW9e+cILe/7/
wth1z1/8zm99+fp//M6XP/z297/xtX/982989a++9uVv//JPfuTvz2u+/ze/
8OV/P5/fr/uQ+//+3/3br/7Mf/3Sl3/4lX/6kb/X9eS35D5r/HZNyN9k3cp4
yNztPclvrT2sMRN7W8+yY34x3zKvF+Msvkyea+9fcINcb3HA3r/Yc1m3MjZi
w9aW1tquuEbuuWLT5zVrzCTerTl+Xv95fzL+9dvPD7HJ9VsyHrKGdo+W7X1e
T+ZFxkx8Z60JsdvX8yXjJ9+TdSPjtH5X4i+JHcQvCH9evvB5H4ID67nr/nY9
19923QrGrmusz5J1Xjj2+f0aW+EJn3+vZ63vV+5T/v68J/HTNfe1zmT85D5k
j8jeLZtZ39t8k/jj5/VrbZedl/kSrkK+J7hk7dzOxcbf5e9rHxfGWtxY8yWa
Bllziy0lRq91KxhLuCVZt4XDFkNWLCb5CLETEi8IbyQxmtzHcoa1Vmu+CzMJ
z1l/kzhC+NgaM4mJVmMhc7HrT+ZL9ojMnfgjWXMyL2KTJNe+8jti22TdbLxY
9mPnSOyKjIfc387Rjm3d3/5t9+tqL670E5vvkz1a+7ViB8GExSHJXhCdymKm
taW1tuS3JE6RWGN9iqy59SO713b9Saxc11tfsD679svqFWTfyXOL7Vl9jIzf
+rXlNlYTttzP7pfdC7vOVuexWhnBkOXXZD2t/mnXvNg2+W1ZNxKniO5kbY9o
qi/4GHnu1Z4SDYTM1+IA0Y5IjC581fK0NU4S0y1GWX2ejIFc/0IvtXqdxQS7
/svGrL5NdL/F3wpvLHtE+IO17aXDk7W1e0r4f+FaxBeuNBkby0q+Y3XO0jNp
daf1XMsxSv8n0Z1I7nyVC6znXuGD5WDWhglvsdze4hhZT9sLtMZDfM3mI1aH
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
0utFfNDy0qs8tOQ4NvcnPl543ZXOsHxwfW9zOsKXisZSnmu5KLErm49b/7Xa
eNHcrrgTiaH2WQQfCFZc/TvIRXctcyH5HYm/RSexejjhMC/WfN1zYQjxR2tj
hNsU3yQ5FMnRSH2BaD5kjmQuhBddnfO6eh+RXSvrL2QuxL+IbVjuZNfc5rxW
KyC1IWJXVqdd97e93xYbLWez8dfmlZbHXq259RHbA2Yxs2inloPZGEd4mrVt
opuReET2qNjPix4/4rMWH8gcrb5K4hEZv9VhLFZYGya1IVIvK3HHnjEpNRGS
L1z1G9i5kPz0as1tvkzsp2Am0WkJhyw9z6QHoPw7TTbHtL3H1gaK/ZSatcU0
4lNlDDburPGTfjarXZCaBcFV2+tl/90BG3dsvaC8c8by6qJHkd/af7f9KtZb
rrjWmaw/2Zdy7pjgLfF3a9s2Ry51tFLHIWOwuU957ppj6YOyvknGv+65bIzc
h+RiJM8qGGXHb/vkbdyxXLHYtq032fFY3ymcysZ6uw6En7+oQ1m+uu5fcrS1
j59/kxi3nmtruOWciMVMi3WWv1nbXvtL/K6Mk6wViVk2r7faJsEo0jdl+xVt
nr72keTXJNcj8dfiz+J41meJZmX5Q+lZsrhNepauuFmJL0XntDnX+r68B8bi
v9WcyRhI7CP4XGzbcq0SR+yYi45qx2PzPlJHI/NduLfGtvbIYhRZ86vvyZoQ
3Cb7S84BrXGSeFHqcYXvlZzI+qPl8C/ebXvVN7jWZI2B1NNtTYHYhu0FtTmX
tW2CnySOXNUFbL2ycDOyPlf/zjJ5N5HFFmLDL+oyFqNe6JxEW7A5OMnjrnLb
9T3ZR8Jpr/R5u/5FZ7A2bDVewp2KPknGRn5r/cLaNok7hcMXfy+c337ImG0O
u2zG8i57TdF4yXyJDvPiWZYbE/wh+072y/rF1V7buED2cY2f6JzWR9Z4bN+g
rb/YuVt9kthGwTeyziSHKvoksRPrm6WHx64tGbPtaSG9bWS+r/8me2Ex0GId
eZbl/3Z/ie9Y2yCfsneW/1/pMFd+d2UbZW1JfW3FBcIfbC5cegBKbnuleRJ/
KTzE8kAS70jebWvKxJ7X2Mr7V8sekd8W3LM5IFlPi4cEwwtneIF1FjcsVtua
L9HHrjDtys7JutlzRsT+ra5ucxbb+22vKRhO/rb+S2yG9Alfndcj9r/8iNiS
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
PX9BbJXYvJ1X8cfX9yHzIh/SI0r21ObdZb5kzKVvnOyXxV47X5uvEXsmcXmt
leX85XqLLdYXbE2T+LLdxxUv1v3J2Gy+bGtJxGZI7kZqDS/e007qNcUfra9d
9SDZv0s9ndiz5TNkvlaPIphg+UnhusVOCI+1eFjyJjI2ErPsvK40JauNEB+x
vvN5DekLtfzc2hvxC+sjn9es2ET6T2wdwfLYq/7Gol/Z/KjUzoq2YH3f2l7h
4cunbEwp77WwOfuyE7tW1s5Lv58dj9VCSxwhvkC0kSv90Oohy4bJHK/4nvUL
0mdCbM9isuX2VucpWh/Rr15gDuFI1r/K+ZQrXYvgSTkLUHg+WUPLPYr+QGKo
xWfbD1O+L3tR9FX77u6S4yyct/Oy61ww5IoDfP5Nas1kPFaDurLhdQ2pU1xh
jtWHS++TXR/b/7B8ba0nGVuJa0UDIZhM/Ihcb3WeK9yw47exm4yH5MvEF2ze
anHG6o0vdEibHxUMXNfY3Krwz6tzncQHrT+WnLFwfmIbJEezWg3JQeyYLa++
+neubbwo/mLXdmF+0TnL+yjWs0qtgTzXclGStxJNw2IC6cMvmoDNjyxHsnhY
8laCmdbH7cfmUCTHL7Z65SNlTy0HszWLMn6rzxRNpuwFwcxSZ7H2aW3Mxjub
s1/pS8W2bV8omaM970zswfI9kh8VHcnGphe5z1WeS3DsNfZa3HjNM6+0WeJT
1n+vMPmK/9uYQuZylb9Y2yi9ZARLbc922SNr2+RDzshcva+jYKPNr0svio3v
Vz0YxI+ITRI9pGCXjaFXeEX8lNj5lTZLxkns054ZKbzxKl8jc1m2XergV9eX
eLT8qPSVXdk2WYcXffVXOmRZqyt7sDhJ1srGWZJzfT6r/NumlpMTm3mRO9ie
3vLulBe6rvWXgskv8izbe2n9qGgC5PorbYRgstWayDrYukmpg5AxlLlbrkU4
s+XPVzUjqwWVvl9SR7BnEte+EOwtGqn9e8XHq/fDXGHpi3zqyvasz1r9h+Ak
iSklDhIbIPvyonfdriE5i0qwsVz/ol5J9pSMf9m/xYSC/2utrmyy6KtljjYf
JFyFxEHSb0PW1sbcooe80LLsXhMd0vommQvB8xLXbIy2tRU7fjKGK56zYkHp
WybXW18j97T4aXns8qOS11j8XBy12KTVV22tqvBJwlWKXrF6PgkHs/17BBsL
nyT7RdaNzNfOxY6/cIkrDkPGsGorV2eZLZ+xebrVkItWRjQxq7dc6ahEn7e1
jKu8xsYOa5MkFttzsgTHSE3BcpiSy1xxMxv3CQ6Q59qYTtZzrc+L+r79bTkf
XfZo+XupzxJ7uNIbiV+TOZZYaf3IYgX5nmhr5b3rZB9tPmt/Szhb6X+2/1bC
sqVyBpzoigXnC/ewuGo1B6tlEb8r9mYxzWrOhEss+ydYZ7Ujwn/W+hN/tPyT
cDPL822eXnyc5P4E066403rW1dk38tySdxf/XZ/FLe2+2DyR7KnNZ9fYrC+v
MRTOZvdiaVlkL67OcRDubeN4yeuJX5AYSmxmPcvij7X5wpntXhN8s3HE5iwE
V9c1Nu6T5xYOT7DC4tILf7mq9ROsW703C98It7G/tWN+0Rtm8cHWZ63+aTHN
ap42by37QsZs61wkfhGNZeGz1Tat7xQcu8p3yJrbM7lEyyJYR2qF63qbe9r8
/apv9qq/wtqGxcOiIZTfErwqvWH23KXlezZvtetfbMDmBSWOrDGT6wlmlv6Q
F7o0wRaLY4XDkJhr64y23k20kYKTlm/Y/P0qFpPflnMxth5n/YJgRdEfLB7a
XHj5NeGHJFdac7R6YNGUbCwrdm7jLMFqoiXacwrkXfFFl7bahY0jlsOsdSZ2
Ump5tk5t7WrZsOVIpVeknHEj4yRraOOCPW9lc5Oi4V/hIXmW5e1kr+26rd/a
NbH1cTJfYufluWttbW8MwSWC/8TG1vWEqxMOUPqHlz3bnqLFZ17UZdan5CPk
ngVz7NisfV7hJJkvWfM1niut2PK9F7qo1cytjrF+a3tOSo2A2JLtFbH7TjDZ
cl1rAzZ3u+qfsf5ItCaSt5Z8f8XoUpe5shOLM7ZORHTmNTZSs7Bzt5hg993G
waJpk/UnPLDooqUvi+gYpJ5l8zviRzZPLDqq3V9yva3FkLUl47H1LxtbbV5f
+i3XfUi+T2zG1mUspyJzIfZQ+GGxJYIDxAYIhpN7kn/TYd3nSucn/mIxqnBF
a4c2Jhbdz2Js8UGr51zl+CQHIb1htj+n7CnR24s+THDV2gOxc5J/ff6W5DUW
261tW1+7qo0SmyG2be2f7BGp7xBN1dZ815rYMzLEVi3nLxhV1sGulcXYcv8r
HbLk+BY3imZCcgobUwiXtpzZ7lfRQsn7CkitYf32qpeG+KDdO4InV+dYyx4R
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
DVJ8Cpg=
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3468324643172098"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.09913770109415054`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.9004567265510559`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztnb/Kbd9Vhn8kEHIBthYSKxECmkKLnIOFqI1CbGx/gaRKEGIhaUIakWBh
4RUIqRQsLLURUsSr8BaiZaqYgMUqHPI8PGPs7zNJsQ/rbNa39lzjzzve8c65
5vq1r/75V77+mU8++eQvPv/Tf77y6V/+3re+9em3//RzP/vP1z79xm//1jc+
+9PD7/7P52fHf/PjP/r4va9+88Of/dO3P/7mH3zp4+//8b9/+MF3/+7Lz++n
4+l8cp3nOfaYjK38Fvnbi3ux57wHm5ffLfd1EQ/lOvZvt8ZWbHuRI9f3eHGd
V2LdK+OE+PFH//L3H37wz5//+Nf/+p2P//gPv/G/fp7XnM4h15nOL+Oc7GN/
63lOObb3Yo/fg83tZ+u+bKySeChxZcewNbZi2xIb9vpb93hxv8XXW3lxEScE
l2zMl+Pf+c9f+fD9//j6x5/87mc+PL//4V995+M3v/hfH773b59FtfJ5/nP8
0+8+z5l+a7r+F/72+1/+w1/9k4+//sMvouNyL+T6Nn4ubD5dfzqe4tbe11Z8
WiwtsX0xNoIJk21LbEznWL/YeyyxRGL1GusufneyIcGl6fjCDiR+Jnx+3tf0
/XQOOX+qjyTOp98lf1vOt7i0ZfPpfHIvz5ifrlnuq9z7Fmd45diKfwnmEw55
fY/TOEkskdh7pU9tbS02JDg/1YXrHJxq1pNzEjwvx4RPTt+Xa5bzbd3Zsvl0
/vS303UID9nKEcszC2d45diKf0leEN9ZH23dIxn/dL+kj77wKdEtLQ+ZbDh9
St5t5SCp0YR3WR2G9IP2eLKzjY1iQ2u3YnPbpxM82erLrjmStdXF2Ip/iT5A
/GKxbuseyfhtTb/2KcEKyy0nG06a0mQ3yydLfbSc09Yv8rfvTeOy4yl1f+JF
9m9L3bzoy0j+Fo5EsIXUrDI2y5kn3jvZsOSI5Y32HkkMkLoz8cYLnxYta7rf
KWetL4ivie9IfbScc7KPjX+i7xGfXmtcpPcsdd/q6he6qJ2TsvWF9NSWIxHe
RebvCFZYTCD5VWKb5IhdV1N4jj3H1sEtn9r6+EqcIXV5i/NMn6l+EXtaTZjM
d9tatqVxkViacof4dIvLFV10S2+5wD0SS9O8ho3Di7mM0juQXonoFaReFw5Z
eCn5ren80teQXuCCZ1qOV/g/Wb9EOIzVKgu3sRpR4U5FG7d4ZTUWwuVsr23n
BSyeWJ5J8p3gAOmnym9ZTLA9IMHw6d6tvkH0OpKDzzpr11TbOQvyfYnniYte
cwBb3ye+R3ig5eplTQLJcYulttezGhfxo8UxqycTG1q9glzf6i2Wf1rNpOBA
+Vt7TVtPp/u16yTt9e18EOHMdr6SYFfBVWJbsm6WYEvhACTerIZAeityLxar
ia8Lx7D3ZWr+//VbJPYIfyt8gPjO1m6Sy8S2JQe3+uj3cGxxuPSDlote9MIX
85V2zPaaRacqes5kw6KfEyy1+Wux0Z5T/Fj8QvSuEocW32wNLbWszCtZbCk+
+uUxx97Jv1aTJzFJsMjGVVnzWdaRTueXZwpKr2f186KZ2zgk60m2cOPCLzZu
LW+5zusyj2N5IMmjKVaf55R1Ar/Ix1tzBM/rTJr8FpewPRGZf5linqyfnHCS
rBObxklyZ2uNFqmVlkNuxWR5Pqvo/NYvpIaWHqTUHZLXli+RGkd4FBmnxQTy
W+8Be98zzyfcjOTChIGWSxQ/kn7W8gcbq0VDtvlFxln4s40ZG5PWd1s6v+Xt
pIbaulnWnZZ1ROR3rc4/5ZddX11w7Jd9AecD5djmAhln4QBlXZzlihcYa7HX
1p0Jc16ZI4Tr2npnf8vWIzt+8rnwb/GFra3EVs/zyZoN0puX/vcXoS8oc6lb
eW2xuswX2zGUdcL2c4GxZD6R5A7xy1ac2DUhWxyA/K21G+E8Zb9W69+Lnov8
LYkT+2z180P2i7O9yc9rX1DmUsu9Ez2k1OvCGy0mkxwkx9cYO937pI2TZxIL
3tqYnGy+xQEsL53mrcoelYVrEf9av9j5BRKfZV6J1DIbh6S+/zz1BWXdDvGX
jSXCsUkNuuhfyHjI2jxyPOHbFqedrkPiufTR1o/kHu1avq1zplpPvreaT6lZ
NjZsz0Lyi9wX6aEsf7O5XHr5/y99Aclf+4yb5QOT3ey80uR3EmOln7X85JUx
UOYdJr+UPpr4zq4Fmn7X7jNpP2XdJvn+4rlg0ksWbLfHxKflHWfWLxfvbHpv
fUFZt1P6TRI/hL8RnCl2IPXL5sJWL2/tb31ha4H9W5KDJQ4JvhUtzvJkMi9J
4of0eiQmp7W4Ze3BdP3y7EPJ/TI/SOZfiI/e23zBNf8k9iT7P5D1XWXeofSz
Fm9tn7I1b0Lw5HpfCLvubiu2X3k+sTPxe4k9u1dY4Ql2LyyL1ZZTERsS/9r7
Jc8ivYf5gut1O9bvhHs8//YZz5bnEJwvNpmuaeekrF5datlWv2zX3mxpAqRO
We63tZZs677K+aRe2Ppl1zVZrC78v/BScj7BNNLzks9WX0DGVviz5ZmEe9gY
I70Yed7W7p1i/W61FxIDZU6q9Mvk+oVTEe5ENFuSI/Z8WwfL/hu2Nl3oA2Su
p7zj8npthq1Hdo5jOsfqjTbGSg81jZNguOV+xF8T7tkYs7lW1g+TeQEShzYG
CN7aPcFKXbDrzy2eP8+3dZysvSl7zhBfFNwmtan0F8QvT5s87V944NbckOUq
RKvZ6lUtDpDxkzUMF+t2yrplMjYSA4UbEF/Y/fzJPU7jJNqL7deI3lu00C1t
0MbzFA+2jlvuZ/togqWWD9h3KNtcK3Fi90gvmobVGLd0vCln7X6PJLYnmxQt
tPSA072QdcsEG62ubvGQ+IKM376/z8awHbPlz0XfKzFWeG959+jWPB3JU9sz
Ej5AYsnmzrUOTGKVjMfqDFtcpcxVFb3avierrMsqtcDivM0FWxcKz7H1rsw9
TXFScur5sf0guUfr98Kxt/QKy2lt7Sv9hX2Om+Aw+VubjxcaDrmOfZakzOES
e5IaXeZEJptsaY8Xe8KUOQJyj7beWV5RsNeukynrYSw32+rpCGebYmzrXe1l
Xc1Uiwnu2dpX5qGsL6a/tftq2po7XcdiMvHXNL9AavcWx5js/PytCbvInIiN
VYsPdp2AjXmCafa5vPJ+B8tL7Z7zti8uvarFxi19z/ZohWNv7cVtcdtigtUb
SU0pvRWJQ/K7hRNarlXqLOFR5TnuoluS2kHWqBduT65DxkmwxdrW9p5bmtvz
mpar25ix9261bvve1ZJT03WK9m79a31hNeqtnCL2J1y35NpFf1TmkgqnJXFo
+WrhGKVXKnuoEv55/X5hkgtlT2Bik2kMZN2R7eOIHwufnHLW5pTtj0oPbuO2
zMWXmmhrzXVOEe5h607ZX8La5Hm+5dVbWuh0/S2tafKX1ertGsJS9y9w3h6T
vNvSQqeYKfucW25TelKb76TeWf5M6mnhq/Z8qyHYnuJCI7LHVguye4GS+yIY
YjkJwYGt2rSlRVssJe9RJblP+Od7xnli8xKHRdss5xQuYWOPcHi7lpvkb9EE
LF/der+exS7Cr2ztLnlR+OcWDyn92mTz0j8WTCCxTeKk9HRkzBdzcO/teAtb
bMyQtTp2PU/RGC3HKBhFNEBSI0qdms4hsTH5kdyX7WXKGoaCvTae7cfOS5Lr
EPvb6xe9t9iQcPiLOk64/XWP+VY832KL3Q9wsq3VlEpNJ5yW9MIkX2yu2bps
65T1S/ktW/cnP5Y9kco+PMSGF3tHWwwn9rfXJ/2jPS5zXltYV3rYwpnfw7Hl
1QSjbK0v/GrC5LKGk8wVlr6+8D17DpmjL1qK/a2t+mLrO7FVwf+t53YnTmLf
p2Pzscz5Wg5vdcgLrCP10c5PFV79Hnh+maslHN72+AQ37HwZ0U8uen9Sa7b6
6GnM9lmhEldbsWTrHanvNpeLBlj44XR9O7c+5SO55tbzziWGC5e2Wijx72S3
olG/Fc+3WGdtbjkYuY4dj+V7ljOQvtVqGmU9leXJJe+sVrDFhQhnK7lcsJH0
NYUf2tpRcmFL5ykxbOOn1Gui4xGuSzTq675gS8+33IP4pWiPBX8sRtnen/wW
iT07B2d5BcEry9mmcW7tQ2K1xAmrS8+4xZEsPyz1tKyzJeeUzxTDVp8nuVC0
UNvXkJi86Asu9Pwtvve8PtE2CTfbikm7r/U0BsLBrAZrc3BLfyDcj9Qvwhms
9lJ6UouZlk9aDjPxw1JPiz5p7Wnnuy0m2JgnuWPXPE/+svr2xXzBtZ5f+J7l
tGQ8k99tTD7HY98VUno3ixsF04htbf9F6hexj8XS6V7svC3BTGJDovUR/9rn
quy6L6JPWm5puS7x3fMc8kzWhUZt54asv7bmC671fKt72/mmC41r67es7nHR
u1k+bO+36ORWsyX2KZpMmb+wNix789raSsZje40tnCz5VdY/THNkxM7WVoSH
EH5S5kQKdhX+Q/Cf6BUkT0v8kL6g4OHkl7Iez+YXie0SGxO+kT3qreawFQPE
VoUfXuSdndMp/TgZwxZOWvtM3xNsJ70MGX+pFwXrSNxu8Q1SoyfbEvzZ6rsL
J99ao2LPIc8alPwqeyOX2CBxW/act/ycxICdj7vo12xeE5uTOQjSL5Tx2Nwv
4598amPV2qTgQ8HesgfUhf6wpSeXtUDEtoR72zkL8rG9uY1Pa/8phktsWO5E
xm/Pt+Ox7+UsPantoQo2Er+/sqcmOGzjdvIjsSexW7E/ufcL7C18Y0v3sPa0
mjmxs60RUyyVOeIyb0Lis2i/to8j9YiMwfq6xMNF3SHxdp0jlovafuG6p77o
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
fl7oABOXfqv55a2ey/KQLZ8STmjXHP433nQyqA==
         "], {{0, 128}, {128, 0}}, {
         0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "6736336766801222"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "\[Rule]", "0.4988659918308258`"}], ",", 
      RowBox[{"4", "\[Rule]", "0.5011338591575623`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzNnT+rfdd1RYUCSSDgENSmURdsI0hUJtEjjbsgLDepAjLYlYlAKYINAQlS
uLENIZ/BRVL4k9gQf5pUSSRwcZuFx2Csdd8rfuLoce85++y9/sw519r7vv/9
zz754bvvvPPOP//xV//55NN/+bvPP//0x9/7w6//5wef/ujDv/rRH3x1+cXv
/n19/eVv/+zli3/8zstf/OLP/5Zc/+//vPvyq7/89Ue/+vcvP3q8nj5j70/u
Q+5vx2CfdX1/O+fk8+T6en4u5m3rXcpzL8ZWfO1inGXt7Dy8hThw4bPX82DH
/F//+c2X3/fvk9988PLTb/3Dy8/f++Dlww/+9eW/v/2Nl//7t5/8zXT9+PnH
a/us6bnTZ8h1eZZ9x613sfP8+Blie2U8rzVv0ztu2Ym1+a2xke+Sed4aZ1k7
Ow9vIQ6U+GZ9cGsetsY8XX/0H++9/OkP/+nls4+/+9Hj2KY8suV35Jrkzet8
cfEuJG9O93m0sfJ3MofTeC7mrby75Z7Tc4u9TWOznyE4assv7Do+xgpib4+f
f604UOLbdH+71nYeyFqTtbPz9kfvf/7yy5/9ycvHf/33LxO/KH5neRCxVcuz
tuxtiyNbv5t8kPx9mjc7nq15K+9u4yd590dMRb47jc1e27m149yy/5LXXisO
2PhG/KKsKZlbwtdITLbYcporm7Psvy2sW+yE2Jt9F8ITH23G+kJZrzKeMm82
dxP9s7wvie0W713UZQomL/Zfcl+xja04QPyF+Kldazu3F1zS5nrLPctzt7Au
ybnTXE0aWplbYv+WZxE+S9ZrGhsZT/HTMrdE85z8bnpf4uNTPiX2eVGXmfJy
4U3TGLb8q6x7iQNEM7G8xq4pmdvJVre45Bamst+90H8snrGYpNhVyYkkzhT+
TmL742cer7e4MLm29RGrSdr3enyWzekWQxaftX0jhStdxKutOFD0E8L77HwS
znvNJYkucdGvsqX/kFw5+c4Wz5o+XzSNaR6s7dkaTYnzhQsXTk1irM2D9rnl
msQZ63ckvk2fJz413Z/o1WXdbRwg47cYzPqI5UdWN9vikkQ3ILGUxK4tPWor
5ljcsqUhTP5L8tRkeyV3lzhc7HMrRxTNrcRny2GJzkYwv42T5LuW45c5JNfE
B62Pk9xB8JvVBglGJWtasNmFL9j7XGg+JSdu+dQWHrCcwnLMkr+ILkTmYeua
xOHCH6f3JXWQSY/a0jGIznbNX7ZwEcmDkw3bvQbkuQWH2NxB8OcWfiM2U9aR
5GjCF7bsvNi8rRFMdmtxnfXfUqsqGnjh8uXa1sdt7C11EPIZW/srGGkaQ3lW
0RWtb5KazjVeLblgC3+WWGHjmF3HyR8Lrrbc02Lvi1rzlL9sbwyZ86LJPNre
FK8u4na5ntaajHnS2ciabnEZMrbpuxYjWRsjzyrPJWtk96Fc49ULPXOLc5FY
YX259DBM8b/wjq152+pdLP025J4lvln8ScbwluO/nVuLc2y+ttcktpDatOWS
Ux6c7MdiM9LDUGIdiTMFrxb+UnKNrRmRmGzns+wPIjHKcsbCiyd7szy01Ji2
1pfMf9EAC6985vVWn23RDK9rJRMvs3pI4SDTs4j/2h6GEusKdyv3sRhgq2ZE
uBLB2MQ2pnUvPTyEd1ufehyn3aNnfaGcZ2XXl/hF4bkkJlzgnxIzLXeb3qXg
gfJdsi6lv6XkU6u9WN/Zmp/Jj2zfDol1hL+Q9yo1I8IBrXZdfNBi3cLTSWy0
dlX2ytn7Wz2q7DW2dkXu/1p1Aes7Nm5bbjXFn4Jhtvpbii8XLml9amucNu4R
/ENimp2TC81wy57LswgnJRjM4jG7h2VrLa715JKzCiaZ3uvarrZ8x+LGC/3N
YhiisVh/34obNlYXLHE9P6S3YdLctuZ8Kw9u2XN5FtEuLF4t17bX8bpfdGue
L2JgsZ/XqgsUPGn1IosDC4Z5a/0tdvzWFwrPsvMzxYdprkgvh51zwlkshy32
bPXbrfETPbP0GFt72HqX4jvTPNszxApOK/1+xa6u8aTVi6Z1tHUcG9/IZ677
Wwo2u8APdg6tDknmkGAq24tlbYbYObFnG2e2xk/ub2POxOmIPdi+oOldLvpR
rb5kObW1HxJLrV1dcCuiN9q4QfKv5aSlxnTR30LesWCw6z4H61Pld68s3rB4
gGA8a8+T3kV8rfSxk3Un++itrmLHSX4TYVrHLd+xa104OLEfe0/73Qs96kJ/
mGy1xMMyD1v9LQVjEAxG8HDpc7A5grx78U1bgyj2Y/Og/QypaxcftLl1svPC
QwsWnXzB+o7llQRLXNSAis58rc9b+yx5ZMq5lpMWvYvEEPuswnNtL5z1/WnM
9nccyh6oMk6CUYn9TLl1y+a3+Lgdz1Yd3OIuG/+3fGcLH05xwOadyUeKzmzr
RFaPsmthtUQS26fP2z0Udvzk8zbvkJ6xi/37Zf+R1T+36mgWw9i6le0l3rL5
8juDhF9YGya+X84tv+i5muZ28peCD4nvk7xT+u4sd7M1o4K1trQv4qckr1lb
Ku9L5s3W4yzes/Zjfb/YaunFLbG96JCE99n7lH51YgPWhku+I8/dsjfrO1tc
0sY6W9MkmNbit2KTpafuok91un/Zc2HX4qIuNmmYtjZdziy1eMBi1NKLa+PS
dX/jlvZScFfBV7aHoegndm+UfV+r/1suaWMdwdikFk9yq/WFYufWZgj3tH2q
1p6LzmM5tdVkSowt3HDi78R/iV8UDmI/b2140hUtL7a9IgSTkHvavFZsuOic
xQct5rGcguw3LHZ7UYufrrd6Am0Mn2zGcs/Sp1rmsPSOXqzR1v5Ecs8Se23N
iOAQ4u9bOWULA5O1LvN8oVdYGya4xdoqsdviU5b723e3ufUiDpA9UFOOJn5E
bJj0Cm7x2a24V87msn5H1qjwINsbYPEV6Xe13LPEPfIuJfdZDEx+v5Vge4t1
LU4o53lu4R9it1M8Ie+yde5WyblbtfgpDhC7sjpD4R3W90kvB/m8jXt2zMWu
yBoVHkRw+BY229Jhtji+HSfJFzYGEu2o4Bk7/0SvIJh2KwaS+0z+W/Yml7FZ
nkLsrXCuorFbrlH0B6I9Fp4+/b3MT9mTsmXztl+FaNSl/rXF061NlnxaPn+B
Y0n9ekvfszVT26NiY2DJX8Tmp+eWvTZlfW3MKRog0dgt1yj6Q6nxXfQvkfkp
e1IubH5LJyHXpYeT8HSC54lmcuG/j9dbv2myxZG39tRYvm97vWydlOSO4u+T
RrRlSzY3FYxtOS95R8K7bU3c5sStmp3l7I/zQ+ogBN8Wn7U9V4WzbPVwEp5e
YmAZ24UvX3ClLdz+OP8l5mytkZ3nrX0ZJW5srR3BFVYPLHY7xTSilW3ND1kv
W7OzcdLiDZI3rb1ZfkTWwvZubfVwXvvXBc+yvnzBlUjcK7jdxhyCebY4TuEp
BHfZuFFsifAdMj9btmR7Xy98x651wYq2z8T63XQeo90zNa3F1rkZ9swZu0ZE
r35mn+oz4/AWVyLzXHB7GQPBz9d5tuzLsFho+nzZT0TWt2BFa7fTO15jp8KP
7PrafbXE7yYftJx3+jvRpkoeJLyPrNEW79jqU73wnXKfwkeKPnmdg65jflnf
6Z72TCHyW3JlHmy/ro3PlndPuXULOxV+RO4zrVfBTmSubJ4qOqSNIcV3Jvxs
v0v8rvSpln1hBX8WHyS1sIu4/Thm259zjQ/L+paa74WeVnC4HX/h3dOz7H6B
stbl8yU+k9ouGY/9HWobr6ymYTUoogeSvtDJBwlXss+1+dH6Tjkjt3Cl6d23
chaJdVvvXmJCWd8tvLTV3144FHnfaf63+mSeyfsKbyLx2WLyrbxW/LqsUanR
WxsodmJjVMFyWzic3IfMiY1pW33UtmZBxrOlh2z1s1m8RLDHZLcWh5O9qMUO
y5mNF3W6LY2oxCXLN7fyVPHrrZ7PLX+0uiXhX9M4S/+h7WUl+drGTMKtCB8k
Y7aaCclZZA4LxrA5i+DbgmHIGpE5J9jGjp/YYan7b+W7rWuCae2eL6vjFXve
8uvS82nzNeH+Vh+7OH/v4iyXrZ5e4teTDWzZZ9FMyJxv9RSVPez2d2FIr900
byUOFHsmdkj0XhJbtvZqbcV/Mv9lD7XNHUXzKX5deq3JmtpYbTUriw8Jlyfz
P2EYMj+2p5f4tY1v19im6C2FY9p7kroSiW+WY9ocZ/GqtWdie9OcWF5T1rHE
/BLPCQ+y71L25xIebfNOsUNrq2ROtnqhrQ5wsf+OrOM0P4Tj29p3iZnExmz8
2dKEr/VMO1fW/gteLfZ8YQ8lhhfMXPImyaFWB9jaU194+lZetvp88Qsb54sO
QOaq9D5tYV37XZIXbC+fXRerERENweb3LT1zK7+Q+Fz6dYvvF3uY1o7Mre3N
3tJ5yllbkw5gfdbGCsLTS96xOYjYgMVdF3mfYADCqa3utNX/UDRnG8MJtiG+
ZnvsLR/c2sNO9LqSXyzOnOzN2onl3YTbkhoZ2fNFfHMLM2/xJuLLBTNs4QoS
D0v9bppDm0+L79s4SXzT7rmw82D7H+y5dlv6yRa3KrHL4g27RgULXWgppa/P
ctsprm71VBC7JbG9YGZre0TjIuMneWHKcbb/zfZPlp5nYp8kn9o1Jc/aOrfB
xgQyNst/SzwhuIvgZ7vvwF7b2GXjv813F1hoSy+yeJ5w2Gn8pafCYnVrw1vY
mPTDF3/f4ink/qXuP+WR8ixbp7Z1zIJFrT9uaVAFp5F4QtZrqx/D6sN2X4PF
bPbazn/ZY7WlF11glTK3ZQ5tzt3CxuTzW5qDrQNO+br0V9h9UuU3ke3n7ToW
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
         "], {{0, 
         128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "1466636402463332"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "\[Rule]", "0.2182653397321701`"}], ",", 
      RowBox[{"4", "\[Rule]", "0.7817344069480896`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzdnT3LdttVhV88KIaAYGkZS0mlhZXvg79ASARTpDmBpIoEcoQQVLAR/AG2
6ZIiphQsLcTGXxBSprMJ2GkjmECK22LCdWWMufZ6UjyHfW72u/dac8055pgf
a+0vfO1bX/rGb3z48OGz3/75f7706Xf+9Nvf/vS7X/6tX/zP1z/95h/94Tc/
+fnl3/3y7xfXv/n7f/XxOz/4+sd//8rn3uz1h3/+/Nvv/ve/fvzk376qr+3z
k7G17p/uScaZjCGZY7JeG+vSkmFLh63cWnNsySeZVzK27Xta42nJf3u9Eiwl
Y/vRP/3Br/z3x3/552//8NOvvH3/x//zJ5/88Gcfv/df33r74X/8zdt0/Xp/
8t4b/p6ay+t77RiS9dqY7w36MM1xurbySebY+rf2evv5T42nJf/ttd7AUjJm
q///+59//fbdv/+Lt6/+7b98fP391deQ+0/qUnKdYGbrva8yJPJM1uv199ba
PSVDK5NJDtM1WRcyx0Q+dl7WNpPn2+vWeKze2vG01noDS4mcp+dbfHj1Ka9j
e/2dPGdDl5JrO+bWXKbnJLhB1ovwig392dYH8q4JzyeZvMbRP/m9L7999uHP
3v7xi7/z/9bIvjcZs/VZ5DmJT2xd2/FsyJ88v/WuBEut/k+8Zbp+nfuk8/b3
6V0ndYxwuWnMrbkQ+Vtdev23Vv6vz3zVvdfnJPqzIUO7jq/Xr3g+2cgkw9f7
J/nYOCX5t0l+YJK55QnJnx3PhJNPydBeJ1hq5UNs7anr13m16hTkb+JyiQzJ
XMh7p+cQXbW+3vqFZK1bMrTybOk/we3p/iT3dTJ/8irD7VyuHc/r9aQPVv4n
c2ItzCTyuQHbLf63ahYEJ4lvbc1lwvBJn4kNtvDWYt02lyD6sL2OLfzfzje2
8ifE17dydzaGnXSDxF9JLmsjJ9ayRxsHvZdrMv6krnRSVoQn2BzLyThu4jwn
xzDFNZMMT8qE5G028o2Ez0y4Pcl2eo7N1ZD3TvOytkCubS5rOye2EQuQ996A
7cn4iU0Rn7stq8lObd/IDeuyUUtKOADB3m2dtzmNVr7R+tyJG0+xUotTTbkI
Mt8WTk7vtc9s5cSIPic2Qtb3Nr9Axk/4nvW50xpNskrwYRrDNN+TORY7/mnt
WuMk+mnxf0PPJ/20fbMb+G/r7GQuNo8x6TzRJTsvyx8SWdmc2DZmWtlOYzvp
C8j4Sc5hup/cQ565nVsgOnZbvX4jrz5xANtLQ7hfax2JHU26ZNc04QMW8wkH
sPx8kvkGLyU8sGWP5F0bvMjKltjaNl9K/L7tkyTXSS/ZhnxO9gzccD1hCMFq
y/+nmN2uo/U70/OTvqxW3TDpgSHrQvzFdG399bTWSVy/0RfU8mXTXOzateTf
Gv90T6uviTwzGXNij9s9AzdcW1kRXmrj9GRs9r3J+DfwP+ldSd418WG7v5X4
FMLZ7NiSvqAkZ0XqMgm/TeTfGj/xQa08DOGcyTgTfJt0m/j3m6/JvAjWTTZl
79keG8GKk/hPeg8m3r6xL4bkzWyf0rReJAdi7ZH0BSX9hwSHJ05I+C2xBZsb
Scbfkltyj+VFrRh5Gud2z8BJzLd7GJP+Lhs3tcZmsdrGdK3+H2JfVibWB9m+
1mkMpH+pxWOTZ5L+Q8LPrY8j60s4CdmXROY+4Zu1EcIByF9iy9ZXJrHzDXie
xFZEz5OYiPy15Gnj/STfnuC/9aHbukGwPcmfEwyxPJZgMhkPWWvCl6x8bCxG
Yi6SJ7FjtjZC3pXYIMndJb18iY3cgPMktrK/25iIXLfiJoKlNma0cYrVB+JD
bW6nhf8k1k7y51NulvBYe0+y1ziJI1q9ZMTWSOyT5HaS55DnJ3a6Ud+xNnIb
/k94ksSJLR6+MV9SK0yupzjF8gFb42jxlu31anFdguHk2mJ1EmsQPrMhTxIj
tPKf9jmt/rdknBv4Q3zWDZhPYkByj/UFhIdv+OIE3xI9adWON/oottdrw/Yn
P9taL1un2Nhn2oofJ7/z+vt0Xi7JvUzfMpue0+LD5JnTOFu1POvfJ/mfxHwb
A9pYieg/yWmc9JVJnZrUowm3bOnDhi+w60Vww86X5ACf6rve3pOy4UNJnEi4
vc2htfhw8kzLH1q68RTPt+ubxEokR0HuTzj8Br5ZP0X8ZkvfyDgTn2jXy+qS
nVeydk/F4DZHdDJfPeEV4fZkjVp8OOHYCX+4LW+f4IA9h9/2Y9izuZ465zyp
U1vcszUyom/Tmk45ilZcQHrRJ70iuYhpXvasuY3+gW2/bOueG77Anl1P1mu6
Z8NnTfJMuN8NefsEB0hsbjmtxfmET958PeFe0sdIYiuSZ7D3JzyW9OoQvZr0
2XLLG3i+3X9h+3g3aovTOibcoPXdk8Q2Sd6MYNENsQCxaxLXWB0j9mXls322
28m1IGtE+LPl/4QLWfzc9tHWD04yJHZ6kudbP0t0Y1rfJH7cwDTLmbfXxdae
nspFtHCGcCr7ncrJ1khfccKXTva3JGPeiG0tP2nxajKvxEfbMw3sPv2T+G/t
cbKdxOdamZzEpZM4T3wr0aUNnrONM5ZjkPywfZfNQ1qeYPVtey2Ss7ySa9tT
RPSB1KaT/nm77iR+mbhu0lu7YY+WDxCfS2zhpO+7DTNtjdjy3ttwhuR/JruY
7NH2RNm+oBbv3V4XgletGNzyGeLTLa9u1RNba0R80+T7Wmth7dHmuicdm/CH
+Nxt33ey32CbO5EYeTsXsY0z9pyT1lltLUw4qW/kOeQsr1YsQHDb7h2z/qXF
XS0HsJxn6jtK5pLsl7G8tKWf2/vsCK++LX+b8NJkLZ7CmeScE8K3p7+pB2Yj
tmrpG5mXrdW2bND2sLX8C+EYhLtaHmX7Y6dn2v4Ea48bexwS/WzpHsF2wivs
czauWz0/yVqcxJkWNr7eQ3qopvET35SMrfU76Zu1tpbYYLIP1L7rtv7n5CzT
ae7JXrNkvwz5PcGECXuTXrLpvUQfkn6Dp/Cf8FK7Fvbfbuf0CAaStdiIoVq+
0v5O6iZWx1q5dJsDse+6rf/ZxqrWryW8xe6Xsfmi6flJPGt5b9LPsN3He5L/
J2edEX1o4UzLp9s+z+09XNZXkrrbdh9vUje3z9w+w/Cp/ufJdhLcm+RGeMuU
EyPvtXkhuzeHyITYbFJn3O7jbfmClhxI7NDi6tu+jPxuuV+S2ye2b/nwNl4l
tXKSxzv5PbINP27flfxObHnSpemZhGMQ7CI86vV62ptDYmGiJxOmbX+bbFqL
lr+zmEnkkGDLU/jfqhW2ej+IXSQ2/tR5TUmtnPQ0JrkCq7ckNmz5AhKTkt8J
ria6nZyrMK11wjlJr6/lJ/a9BJeIzKf1SvxdwtPIcyy2nMR/ItuNeiLR8wRn
CGcj+dgNzk+4ZcIzt79HNsmqtc/LcgMSn9oeS2I7Fn+IDlgMsd+9snj7OjbS
H7tdwyK5OOLvLFec5GDP2bA+cQP/k7OaN+qJ0zgTnLE1tYSfPHVtc8v2etsn
kjjO1kOT2oflS2TMltsQf5fEU9b3Te/dzoHYXFyCJ+SZiU+xvngD/22OccKZ
1jn/G9fE3if534zzE68g9daN2kciK4J1xN/Z/YPWx9n6I+Fatnco8aEJB7A+
wnKVk7iXyI1wWsJViF+w+ZPETi2/ap3zv7GmNrdjx3/bNeEwRIdP1j5sDmfy
d0QPyTcEW3NJOLPFbeJDp2daDtDib2StN3DPco9pTVvnY9u4YENvrY+2+kww
56lYIKlP3XA96Q/BEMKHyZq2/BTR/wlDiE9Pcn0trkjkbJ9PZEJ6bCwfaHED
W6va8Ne2J9z6feJrWnrVurY9G60c0XYsYGsZt/H/SX/sPsEkt2BlYv2RxXDL
pZNcn+WKllec3NNK7JHMN9Ef2zPT8tckz094SOJrkn6VkzGRxQqbI9rgmVZn
bqhTJGtBrkkufYNfEX/0+t5JZxJfM9k14W+WKxK9Ijmiae0SX5CcO0FiFttH
RPQzwb2EYxMdsL7G7p8iceuGzbb6kYitJbpkx2Zr9E99r5msRdLHctJPEewl
tkBsebonkYPlinY8JO9BxmPxn9TIWvrTqpsT3CN8g6zRpJ+2nkv0MOlP285h
2rq8jRE2sCjpzbM5wA38JHGK5WnbcaLl1YQzEByz/U62P7DlB6d1JM/Z2NNq
bb+V55/GQPSB+A4bI1v9sWfRTzJM+tMSjjqNM9EHEueezF8luE188Q15kqdy
U4QvWVwlOmP9zgaOWT9oMYfgRrKnldxv+faG77BxH3kO8R3TM0l9kOTJJ5mT
/jTbr0U4ic2HkLzN5Ju2a6zEtxIuas8ebPFDm6M+WacmvslyiZafPcljyXtt
rqN1ttVky+QsNZuX2MB/ck+yrz/hMJbf2vGT+lFy1p/1p3atCSa09MpyBmIv
hKe16lA2T2J96wbmJzH1NMfEz1re28J/8q4Wt7T+1ObTbK/LDefV2J4Hgr1E
V4lfsLVvomPTd6+ma9s7kfSETJhG1qLV/2lrQFaXbL4i4RjkOjlPxuKbrTvb
Oov1s5McJt7bwqIJK8i7LLecMCc5oyapZ91wXg2J6y0HJj0G1m+S+0mdjvRE
2dpHgjmtNZr8WhJ3EL0lNbjWGUc2JrLrYsdg8Y3EGolfs/mrjdxgEq8lfZiT
jyb8n9xj88MJdz15bgOJiQi22JjI2h3JEbXwrcXxWvhvddL62WSO07um2Ir4
CMs3bJ4k4T+tHgDCya1fs/aywU8sP7c6b5+50S9B8jkWD8matno8yBpNY0s4
PJFhsmftZM3O2vtJH2RzlXaOts5CfITlG7Ynn/xO1jHpAbAxI+HJCR4+hf/E
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
fMX2NfG5liMR+djzJ63/TWqjrTXayJu18JyMwea7kvqR3eNPYgeLyTYOatn4
e8H/JM9g8cTy8G1sJLEzec72nnGrG1YOZC8SyS1M7yJ9PmTMtja6oWNJ/qfF
4clfcua/tVNbm9uwQeIf7TMTG78Z/5M8g62ht75N0JJbcg625ag3xALWRyQY
ReLuSYb2nBySY5zWZRv/CQ5bDk/8GrHNpJ/W1o8IrrZqcERuhMe2Ysmb8d9e
J/yN2OP2eSaEJ7Sw/ak1Sq4Jn2w9c8JAEodaX0bwZ8MG7fOtrKxtEj5M5pLU
AW2tn+hea8xJXdvWL94L/if8jdhvopMbsmph+3vBf8ItkzMiWn1lZK8KWa+k
r5isb9J3lPSgTvIka0psoVUHJBzD5nNaY7b1BbLW7x3/LU+zecWWjW9gdXL/
zfhvuaXl5y3e1eLqdswtn0L8S5KTJ+ub2Iv10cReyDNtfJSMmYzf9pgl+bEb
8D9ZR5uHtNy7JauEv5Fc6HYtI8F88jvx18SOEg62sQfQ8urEpxCf2Dpnhoyh
xQNtzoc8k8zFfsuP2KOtldhehY3+wJPc0j7f1ghOxkrWBslcLAd4CvMnOyIc
mORCk3jf/iXytOefWJ9COBLRf/JvpzVNcndJjNPKnSbfr7f5KFIreR3n6xlB
pKellW98Cv+tTRFbSL4j0OItSVxj/ePJvtCEL01jJrpH+veSvFnC1S3/b+nb
tv22cndJjNPyd5ZbJmOYdHuyF/K7ldt278HJ61Yvx0ZvRiu+tjLf+O48wTTL
lyauOI2fyDbxy9vy2ejJP9kTYnVvkgOJX4iOJf7OzoXEm0Tf7NluiU4S3Gv1
HpzEfFsjIPy/FStNfsfyhJbMCfYmemX5EsEKstavz2zFxRvymWw/6cmf5vVU
T4i1hY1+KoIJSYw/PceeKUTyAMl6Eb7Rwt4b+H9SN58wxMZKSb1pQ+Ykd7FR
40v2ByXYMsURBItaMfJGPsfmSWz++WT/RssWSLxPsNqOgdw/8ToyNhJf2Pho
+/zVG/Df2sKkA8T2W7HSDTEXeSbBdsJdW98vaHE5EpeRdSd+JMH86S+pGT3V
G5DYgq1/JVhtx2xjYduz0VqvJMa8Gf+JLdi13uDtLdw7if8kl2XXJZFtwuVa
Y3i93t6zluScCQc+2RuwYQvTOiZYncSt0zpa2zn5LRLrC27Df4IVyb/dyL1v
13+TZ97ACa0fIX6fcPuWbKdYkuSaSA7B7u0i8txe95YtTM8k/d4E96b6Aukx
I3lmwiWmXHRrvZK49Wb8b8WYSc00waun8L+Vnzm5Xvabhsm3VKxNWVtL4nGS
K074Rmt9N2zBnsVKZL5dp5veO8V9lsMQ/Uzi1veC/xbHtnuxWj0PLZlvz3d7
vabrjT1BlkeR80KTfBHx3Sdrvidtwfq7k3zA4v+kn9M9yVkcJB4hY7sZ/22M
Sfhnq4bbwsnkvbfNt5UTsOe8JbKdcP6knRL53LYfvKX/yb7abT5wAzYSbLe+
uJUP39YNG2PamvtTPGoD/5+a70ZOwPZLWB/XyrsmdkrGT+KIG74TlPAE4u+I
zFt84Ab8J3Go1eFWPvypa+LXNr4veTP+E4701HyT83CSM3U3elFadmrzvZON
E79/g81aHz3l2ZJ82nvBfxKHWpy3Pvdm/SHznWyN8ISneucSnbTn6jw1X+vL
7Npt9KK07DTJIyV+/4Y1nXTSYpHdW73BBzbkSTh8sr4kz3NDPnwDN4i+bezL
2NYrm9uxOaKnMCGxi1beacNOW7Ilfv9mLmd1NZnLzX3aJH4hZ62QXCiRww35
8BZuWH3YPjempVckN2LzP0/tG0quCe61OHbLTls+iMQUt3E5UueddM/6iI06
VEuGJC9B1pHgvPVxN+TDt3VvWneyLhtysHpFYpzkenu+yTXJCbfe1bLTjbO5
Wt8TPLl2hKMSXLJnsrX4QIL/RGdsLotgPuFyv659BQmPIvxho2eG+PdkXolP
v2HdJ99E+PlJOz2Jn9vrvqHbZAx2z+xtdTqiq616X1LPJRj46xoLbNcHE71q
6cZTea0NzE9+37bTDV9gY7fb1j2JWcie2Rt82YZOWgy3eYDWt8xuxo2WDE/q
VRKnk56Zk3mtFuZPnJz8ftJ3kPe2dCNZ65Pr3uozJPK8gf8nOpm8N8EE0hOY
rN1T1/8HDUO9TQ==
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "1428111228778929"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "\[Rule]", "0.057724762707948685`"}], ",", 
      RowBox[{"4", "\[Rule]", "0.9254578948020935`"}]}], "}"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7755138071705303`*^9, 3.775513826510652*^9}},
 CellLabel->
  "Out[134]=",ExpressionUUID->"245a8c89-6d7e-43a6-8bc5-554d83a7f615"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["8-colour totalistic, range 1", "Subsubsection",
 CellChangeTimes->{{3.7755139308645153`*^9, 
  3.7755139359139853`*^9}},ExpressionUUID->"28cabca1-c456-4419-9e1c-\
8ca72f6f70f5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"test4Data8kr1C16", " ", "=", " ", 
   RowBox[{"data8TC", "[", 
    RowBox[{"8", ",", "128", ",", "128"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"test4Data8kr1C16", "\[Rule]", 
   RowBox[{"netECA16", "[", 
    RowBox[{
     RowBox[{"Keys", "@", "test4Data8kr1C16"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<TopProbabilities\>\"", ",", "2"}], "}"}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.772719248559807*^9, 3.77271927548206*^9}, {
  3.772719324257593*^9, 3.772719331356277*^9}, {3.773124904129174*^9, 
  3.773124928357933*^9}, {3.7731251153026133`*^9, 3.7731251512280912`*^9}, {
  3.773125217467578*^9, 3.773125219418065*^9}, {3.773125271868342*^9, 
  3.773125271954652*^9}, {3.773212712732003*^9, 3.773212729006225*^9}, {
  3.773212818178605*^9, 3.773212830613299*^9}, {3.773212941366901*^9, 
  3.773212951689026*^9}, {3.773213005636443*^9, 3.773213014527096*^9}, {
  3.7732132566474*^9, 3.773213256876457*^9}, {3.773294401307526*^9, 
  3.773294423203759*^9}, {3.773348269707011*^9, 3.773348280477676*^9}, {
  3.7733514738060293`*^9, 3.773351485326448*^9}, {3.773356436954606*^9, 
  3.773356459506678*^9}, {3.775496533429831*^9, 3.7754965464457607`*^9}, {
  3.775513672786022*^9, 3.7755136842596073`*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"5fb35f3b-6fa4-4018-b15d-41d54eff9a83"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzV273Ktm161vFBSVCyBunS2MlIJIGAvg9iJ6kSUiUWIyZBCBFGUcbKFVBs
XATLVK5B1kALm0wdV0CwEjIBi7twg9+f/bjeGYvn5Xwvrvu8jvM49o/tYz9/
7Z/9y9/5o7/xgx/84F/9rZ/953d+9G//0Y9//KOf/O4v//X//OGP/uTv//qf
/M2fXf77//vvr6//yV/+9rc/+8c/+fb3/sN//O4n//Pfffv2F//jux/+/r/+
9vVz+c7Xz9e1fL/+1mX9l+9/em0/r/V/eh/qPX+RY+MTz1XXXNfziZi81IdX
33kVz5+OjZ/XXq01/NKf/fDbf/vpv/n2e7/yl/+wXv/Gr/7et7/90z/49sf/
/Yffvl7/5//1d777F//pt7/75//7n363viPX67fk87pm+b4812VtP6/119+t
+1Dv+WqfPx0br57rVWzUtX2fv/WJ61fxXPPo+8zrV/VzXf/d//pb3/3p//nN
b//ll//8H9Trr32knte6Xn1q/e5lzXIfOaN6z1d7fll/jYG6D/WeC8/Uff4+
Y+PyXK9y8Bf5+useSu7LtdS6T5z1p3P81V7VtV167tc9l/P6Gv9rDV//duVO
jY16T+FNaw3rnq9wzmX9K95Wva37sOJh3fPVM36fsbHuI89V9+T/x+uvz7hy
vNbGigdexdir2Pj0Xq3v1/ivXFVyYa1HepZ8X3JH7rnqmNQ0wQaXPb+sv2rR
glfXWQgeE5z2Cv+8io11jsKp136uPRFM9Yt2Lbnwp3/xm9/+X/9qXVq1d8V8
jbGK92qOv9qr9Z11T+k7K26/7q34CF/v/3Vtq3dctAvh1GudtedKbsq+rfis
fs1a/yd4t+SF6DDiW1Uu/4nYkJiX9dT+/gozf/q6ci7BEpV71lq3zvri11S/
+LJX67pyz7oewcby7KtGfe0Rol2s70t/XL1yfUc0q1cakZz7Wr/kVM1xiSXB
V8KXF2aQ85VYumCnlWtrzXVOQ2JVMPP3qe3I866clV5fa+BFG7/4NXUGoO6V
YMWv3xc8WWNVsJP0sovmVn2H9Z1Xukf1PqRHrLOQ31o5tc595bjEhuCfdR+J
YcnlGkuiFSyMt/a5aiOiRdd4/j61HTmjGrcSk6LnLJyzPl+/e+FrohUIP5Ue
V3mBxNXahxUDC+9Vnnjhd3J90UNEz1+xWn+rauzrGaX3XbihxI/UOnneOiMh
5yXYe/U48RGq73CJ809rO5UrybOs/a/9bq1t1Xm5T+VrtU8J3n51dvUsVi6v
Paw5JRrdp72wi+5aPc2qFV96ltSTy7Xo7et869pWPMu+CTdfebfiXHCO9EfR
HOpZv9KFBKMKV6oe2fpc8kL2v3LwOjtU689lTuwVvlrxs/Jr1fOLriI58on5
saq7Vt+24o0aw9J3Kq+UOrnqvPBfuWfVcwRfCQ8Vb2I9u2i/Es/SB6tfWbHQ
esa1VyuGLx5Z1U9e9dPv890BqVHSIyq+kueq+3OJvaoJVy+s4o3L56JjCK9f
MVznnCsnlThc/WvtT72nxInUKKlXEofC6USnEn1J1ix+dD3fOhMlNUGeUfr4
ZVahcljR7gTrvtIo6sxJxVFy1nUesp6RxGStt9ITV+7Xz0VPq/VNtNDqHwn2
u/Ru6QuvtHrRmi662dKBRR8WzLDuc/GnBB+KniD8t+Jh0Ysuvl7tp2uOrvam
Gs+VU0gdqDhcsISsR+K/akcyK7XiRLj52quaO6+8hjqjK1haMEP9W9Hb5byq
t1J9lotuJvzrFd4TPCO4S/JOuKFo/vW51n1EL7rkl/Bl0YRltk3OS3ruhQtU
rrrWI33nlTYiWKtiNulZ4r9Lnbx4DbKGehav6o9ghkv/kvcX6t6K9lu95lf8
pfrdMq8r+yx8ULBT1biqni/6Q42B6itJvRJMcplXXM8iMSAzDKsf1XlyOesa
M3X2r2q/NV8qxqvaoOTpp3llPaP6Dovc/6JpVExV56JlzkTwnvTBqtdJDlbc
WP36qi1ffL2KVV7pmbJXa52v3ku61DThJtKbar+ovanisfW3wpcv/WLVupVf
l/vLTGOtgRUX1RiWuiE4sPZN8dArL5NnFB1V9PCLznbh8oI/Lzxx5Zr03/W5
aDgXPVPyq3IZ8S8qNhNcV3X+tSfyXo/UWMFaEm9Sr1bMy7nXfVjxX/dZNK7K
Ky+9r95fZidEl77gHNmfi6b3iZ5YdbbqNcv9az2vcXXREKSPV6wleFKuF6a9
vK9U/Zfq71xwS52Rq7PiVVdcdXLtyeqPNR5Wr1nYUriPzONJPMi5XPzoqpNX
HVW0UMGWghkES4ufXnui+HGS71JvhSde5mkrZ6ka19cYW/MkFSdLragandxT
cGDtQTLPIHm66pv4+CseVl2t+vn6vmD+y5ze+q117q90SJlzqxjp4okLB6xa
nPQdOa/1uxWXVh1PNGHhLPK8F29RNCLRLkRTumgIF93yopMLP6peQOUd8m6F
1OF1dlUzl7wQP0two+A96XGXeJB1Vo5TdQbRQyRuL3si95e6uvpyxW9y/0s/
lZxasS2+8EUDESxan1d0hupLXrCraOyXOZPKH4UXy3eqp1nrw8qRy0yL+CmV
IwseqLpoxbFV172c4yv8X/1rwWOC96pHULV9OWs5F8nHqgFKbKy/rfpJ9REk
p6onXme3Lj26aj71/Y6qk8saKv6vfbPuj/CIWmeqZ7GeXe4v+lvVHi+6Sp0D
kT64err0R6kha23C6aquUuuqzMlc+njdk/q86xlrftXZj9rL1noqT5G/rXNc
Veuufbl6lFU3Ey1XcO9lnkd4UPU4RN+7vBty8Y9EZ77sp+hX4l9U/F8xifyW
4KLLO0R1rkPyVHpi7fXrt2ocVj22aj4X3id8QerPRdMWTrHyce1txVfCueq1
5IvUyVrTRN+omLxey8yqYFTJu+rHSZy88oA+oS1f9F7ZE+ER1fesOoOcr3C9
uldSxyR/qx4rvVj8sppTsv9rzdJf6vsF1XeofHnF5EUfk2v53crTJe/W/deZ
1pkK4RSVO1feIXEifPkVt6qcVPi45N2Kq+p5VY2ucu1X88xrf+Se8p5FxZCy
h4LrRHd95ZetulR17OpZC+avzyL1rWpolafUeXhZv+hI1TuWXPu6BpkVlLgV
/lg57AWry33k/rI/q55IL6txu/JReFm9Z62TopXVniX3rHrO0pcE/9f5DXkW
0YhqLK28qxxn7VWdObxwAfFJK7a5YK1LTVvxcOEj67zq/K3sw/rdiz9eeevl
PoIZqjYruSNrq/smemnVoldfW3VSak7l4PJeRuVBwrXlLESHWc8omrb0Ben1
VVuQeiV+7oUvyxxRvadozvK36+ykFgneqBxKdO+qnQrOkfgUXiN6aeXUMgsk
/aLO5Et/lDwVnCzYu2rRF84iMVC1xLUn8nnldDLnfNHqZfamxsyqRXUWq/oI
K68vfPnCzdc9q5YrtUv2WZ5RdE7pU0vDWflb9VjBfmsNF71U6oloEcKnZG5H
8KFoQRd/v2Lsqs9UziL8ZT2jaIky01Xjp+Ki6lNc9ISLzlZxyKpjolfLs1Q+
W7l55Wvyfdnnen/p4xJXF61AcI7McK61CW+qvkadJbjMjax7St9fve+iE4o3
Xa9X76izo/X7VV9a+yCYSnir9FPpF7Ln1WdZz3uZ9bpo3cLFZP9XrZBaV2vR
ZU577fOltohWVvV50QpkfySXBftVHVJ0JIkf4fvyjJfeV/Ox+guv5pMv2HXl
++WeogVd+qPwmos2XvdE9GHBP+JxVDwmupBoHRf+uHCU1KJ6dtJ35PtSW0Qr
q9y/+i+XPF1YUfRY4afVz72c10UDqX1Nakud4bn4axW7Vnwr31/PKzWk5o7M
i4o/9Qrzi44q95Eae+mVC3NeOKxorZKbwgGrzr90SMEJ4rNctAvJtfVbkndV
N1g4vOLh6ueKriLPWDWQ9U96nGhcwv3rTLLEs3hMF05R7yPz+TLPWXFdnTWq
mF/wSdWuq0dccWbFDII3hDtI3IoeJXqI1JxaS0VruvTxei33rzO68owSGzIj
ffFxLhrIxWv7dB2Q51p1rGqhlVMIfhZOd9HeL3N6q54Ilq5zhhU/iO4hfPai
lcncQuUOMqNScZHo/7XmSIzVuiF9vOZUnZO/6AlS66peV3XI6kNVfebCc1/V
AcH8Mjtde6JwisXNF3erXtVFe7/kZsVjkjuXGRLRQ4SfVq2sYhupb5/w2i4x
I3hm1YqLByF+seTU4kpVpxI9QXzn9Z2K/WocCsZb/ejSZ0WfrHWg6gzC60Xr
Fs38ou+JTnvxI2qNlf1f5y4+Qo1P0azqDPmlFkkeVa3sldd2ua61omqSl9iW
HFz9a9XSOnMisVHnnepsp8ShYPiFi8QDEgwsOFDqwMVbFD3kUp/XOYq+V/vg
xZsQbbZ6ghKHctY1vxaWqNqp5I7UYcGBgjdE8185e4kHqT+C3y5cr3JMwa6y
V+vzdY7in4pOuPqXcFvBqJe8uNScqrnJLN8rD0hqoNTnqvWt66oJC3+81PCK
PYTvX2aiVqxWb0v6b9XwJY8kbi/zw5L7NTZWP3r1jtInYlt0XfGGLue4nkX0
sfo+VNV/JC8E/8i5vNLVhTPWWr1qoOiKgvHq/GT1X+qMStUGq/ctGKDGZ62B
CzuJjn3pa7W/VK2jvvdU11bjqnJ50clfxXbliaIz1Noieys5ftFAZG2rRgkn
kthY6xfcJfyrcmRZv+hXl7km4acXjVdwrMRe9V8Em118pToPXPdtra3OJ4jn
9Qrzi34l2vLKNdmr6iPUmbHqAVWeWLnkqg/ifwmmrXhYavXan0sdqDxd4rzi
1dqD5HkFz0h8ikdwyR2ZUal1+5LX6xxl/rn27hozoltWTbvOAsn7R1Ufkxir
mufFO5A5JdEiamzLPIDMEEp+yVnX3JGZHznr1esFe0gduPikEsMVr1buLHVe
avvaw1WrVz2suVP1Cok9mZGTta14vsyyXnqf6JbVA5KYX7/1auZq9SzRWKTn
XvxcqWOfmDkX/HDZ8+pniZ4p9arOBUkerc9r/FTt+uLbvpo/rzxF5sll/6VH
1P4rWopg8spPpf7InEbN91ccWWqI7P/C59Ir68yV1IRab1esVj9X1ibaZtUG
BZvJ9z/hZ1UtsXLV2jfXs4s2LnVj3Wf1kYvvKfylztBKfah5XbWIS/+tvpVg
P/kt0ZOr5iY1vHJk8RGqrl5riPQy4ex1PkHqmOSp5IVodKLny2xGrfOCGS5+
lnhYC/vVGZs61yT8RdYpmpVwLukddW5H6ongIqlpEufVr5R1im5Z+1rlX6J7
iM5ZNbeqecp8tWAtqdW1hix+sWr4el7h9bUXrzyqte6Vti94T+re+t1Lj7jM
IVRsI3MvtUesZ5cckZ4lutbFIxCMUbFKxX7V8xIOfskRweeCbarPIl5n9eYu
2qDoTnXGde1tndsR/bD2+oqlhXNJPIieWftOnTeoGrVoU+tZhL/XWBXvvuaI
YAnh+FKjLv2r1ufK76SGS51cZ3HxsiW/ap0XLLd4R9UhJc7X/ghPrLNqK/6r
n3jRdQWHvLqWHJf71NpePfHqLwiWqFxVeFz10aR3CE5eZ3o5u0tPqTMS9bcq
p7vg8HXuVZcQHfKVxiI6w8VfkH0QHVI80Noj5N0QWYPwr+q91vi8/G79repf
XOqt5J28XyC94DITKN5i9bkWdhItZe3DhctIPa89RfBG/c563svapM9WPaT+
7iWvL7y16pAyt1P5pmgF0iPEXxBMXjXbtQ8LV0usVs1EvKeqKQlPEW1WsLTk
ncyciFZ/iU/h5jJjfNEZapxXHC54ss4zVB24asLV+6seSs1TiXPhFHVeV3JN
aqbg/FXrLnqa8KOqpwk3F+1aaojET40Z8aaFp6z9kbWtMxIfRHSPWjMr5qka
WuVHF42lYkiJc6ml6xyX5ll1sJojtZddvrOeUfi7zL8J3lv3X9+vcSJ1T7Df
ehbBzFVPE71I5r7qPKfkpnDSOvu39lbyqOpsdU+qbiPfl1xYe3uZda95sfbt
UjeEe67nrb6eXFdP5KLx1hyRXvaKU9QeUe9ZMcmqCXWuqXrctZdJ3lVeL++P
fAIzy+erdtW5MtF4BZvV2Z6qAcosq2CkOhd90Q0EMwivEW2w1g2J56pLVN1Y
YkY0WNEfanwKtpQ9uWAA0Z0q7q2eptSxypVWLlxmz9Y6JYZXXRV94DKDJDjz
lWdUPRrRZ6qeLPW5aryChwUj1XmhOisoXoxoZeL3SfxUr0H4ReWPNbarBnu5
rrOO9VpqcvXfBSOJtiAzjas/yntt9V0b8TqrTyR1uPb9qmeu79Qcv3iCl3k5
uZa/XXVb+FTFPxctYq1B+tGKH/EyJK/X59V3kDNacS788TI3LjxduKH8bo0T
uRassmLgcr32X7CZxLlolcKz1j0v3lbF/KLBCp+9rF96ovD6V1joFecVHWbF
xvr+K41ixarUQMEMomnI5xJ7wvEv7ynU9VSPRvx3qZPCm6QGXnL84iMLJhSs
KBj1lY/z6lpiqXo0NSYvfLauf+Fk0WEunF2uX835i5Yr2sja5zprV/H/whjS
mwSD1RmqynmrDyK6omAP8bhFoxO+I3khv1tjT3pN/d2LZ3qZGftEvldNTPa/
ejSVs8jaFlaR9VetQPJXYljic9VhweSCtep8VNVIqwchOljldJWLSV0VHiEY
oHo6wqNrLar+Y81T8fSlt669lZy96EjS++S5RHcSzlvz/YIxBHvUvJCavM7l
FR+v3lzFsaKzXXjrJbaF49QeJJhw/a7sm+ifF+1a+qNg/oWFRHuv+SV+8apF
orXKedU8lc+FQ639rx69fP/C32utE93yExqyzBTVGSFZc+VHoqOKhilxW7mn
5MuqnzVua2xXfFJ7jeh7C/PUfZN+Ldq1zH5UjFd9ZFlz1cGktgvGFp1QYkZ6
unAcmSWoMX/BWjVPBXuINnXpR1LrxNMRvCczTqterVoh84qyhtpnRfcQH6f2
uHq+NT7XmkVXl7OQ3iH1v86RVi3okl8S2+s7VVNdOEH2QfiO4IcL56pnVH06
OQvRb4UT1fnJiiVqPxUNWbDHRacVf632WcGTsrY6P7m+L3VeMKF4TJWfSvwL
f686+Tr36s9Wb138slcYQDQiuV6/VTmUzErVmBd9suZaPaPF9URnE1xRe33d
N+lf0i8kR6Sn1zog9a1qklKXhJtc5rhe5azs80Ufu+gwEv+CAVYMf9p7FTwj
GnXVfCS/RFuofGHFycXzrVrW+t3VC4TDSg+q8Sw8RfZZ9lA0JcEDEs+rd4tO
u/ZWekf1dy71R/SNqhlWrewyT1W9EtGLqtZx0RsrB7/o/BesJXM+dZZG+qn0
RMlf0diXvire0AXnv/IoRaeqa6taSuUIdaZFcH71KUQvrd7Z6okV91a99+JL
Vm/iop+vzxe2kbwWr6R6Kxf8U2f5LudSuUPFWhLPgv1qPRS8UTnjihnhUHX2
teLb6lFeZnWEU8uslPxuxaWX+RbhgGs/pedKLovXIJpbrUWXOSjxJi76eZ31
kti48CDRkyWWVk0TrabOFa+9vWBFqcOCT9YaLp7Xuqfss/TNhZnXuYj/VX3z
daYS87UnXnifzDOs35KzuHD/lae1H62eWzXPi94ofUTiTTD/qp+rRkkeVe+p
Pq/EUvUcaz2XGlU1TMnl6unUGrieS/ScVUtFr774RNLHL31z1Znao6XmyDmK
lih6VK2N0qcES6/YqNxfYnut+dIjBDsJppW1SS8W7UL4heh4Ep/yfembwrXX
s4tHsGqd4FiJmaphrr+t3HmdhcSb8KmqUaz7CAau3lmdyZH4lDmQqu3UGb/K
fwVryR7WXl+9g6oPyxoqvqp1WDQKqdW110i+Sz7K2cmsoNRbmWde96+YsGpK
1d8RHnfRr1avEU+nxqpohsKhBBtLPRF/tnIoqcmXGUXxAas2LvFWr2Vv64yZ
aGIrHoTXyPo/gaMu3EfwbfV0XuVjrQkypyd6qeiBgjNlVmr1VsEe0lsvuEXO
dPUs8W7Wv1V/RMP/+k9yWXRv0ZCF71duVedbLpqJ8MS6njr7sfpInTm/9Mqa
a9L7at2+zL1I77h4zTKPeslHyReZ2xTNrZ5vxTniI9QZVPHiZQZY4kr8gvVc
ou9VriR/K5pYrQMVLwlGrXMjVduvem+N2wv2+ASOvXhqK1bFW5TaJfsjOOrr
OkWjkH248LsVe1I/JZern1j1UjlfwefrLKr2K3xfer3soZxL7Vkyuy4aRZ0b
XGsTvUt4hPR94RGyznpdcb58f3HkWk9qDXyl4cteVX9h7Un15i44R55d9qHe
p+JSyR3RwV5dC8aT3iT7cJnHlniWXiya+bqP8BHBihVX1zomOKTyr4tfs85O
eo1wf+mzl/yt+GHVk0tPEXxVa4X4AoLf5BkvWPTSE6t2V5+3amsV5681vPKP
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
p2poVSes8wYLA1QMX+9Ta2/FCYKp1pnWWK2zLtKPBFfUOYHqkVX+IrpKxT9V
s5X+KD7Liuf1ueS4xI9gUfGPqrco2K/W/zozIHpRxfC1Nlavp3q1ta9JHFbs
VPV5qV1rfyRfLrVXZhQlJms9FHwrZ1r95eqJCO6t+SX+u/TZV5hEuI/kWuUp
q95WnCnfEf256odSN6qmVPVJOdO6t4KdhK+tuKoYRjSQyhHqbGrVJ9d15UeC
Meoeiqf2CqtLn1rxU2cDarxVP2vVkMqRL7m5nusyMyC9WPps7d2ytsu19Jrq
fdTaWzWliqnW/ksNFNwu+Vt9tDrvKlxVOILwo6rLVW1EtNPqv4ueJvEjuFew
eu13Em+iA9QZjFd+1qo5kl+1plX+K/h25UjF2BLn1b8QTCV8qs78SK7VudM6
jyG608oF4TuC2+X64vt/YoZz7UP9rdqXRYcRDUdmMiW2V/2RXlm5nvR68eAu
/LpqBa/8rFe6iszuiq4rOobMW1acJnEuPavOfgg3rLz1lQYl9bDOa9U8knVe
Zu+lH1Ut4oKLBH8Kz60z29IHa7zJrFGdS1w1vPrX656CSaqXIT26alkXXlxj
8uJxLLwqvVW4ap2bqhj11dkJhqkxUDXnGjOC0y5zgNVDX/G59lDOsXLMC7+4
zMDLd0RDEy5zwTy1xy3cfpmvEH+8nqnggaptCs5Z61xxJf1RPMTFweVMV/ys
PrueUXCp6C0XHlS9b9E/5XllBmPVh0vMSP8SnbxqMnUuXbRi6QvCMWU2WDS6
Wpfkn9RtickL5lnxJh634MbKKaRWCJ+S37ro/DIfJX5c1W0kH2WvBEtUjC31
vOKlqufL3lZ9qWIn2QeJeYkZmZutevUFo9a5x8rHhWPKGqpeIXWyass1lyUm
pVbXHFlrlh5d51SFR6/zlXio51L7+zoLwQAX/0W+f4nbWk8us5FVz19/u2qj
+ICr1lV+LX6HYDPhhuLHST8Vr0f2XPRMicM6AyCaRtVYKga76MPV06zzWjLz
cJlXkb5T+fgrDF9nzKRH1FmgymGlZtY+InFbvYZal9b6a1+ufysYTzRJwV3i
mdbvV74jMS/8XXJc1nzZT+FoMkMiGstaT/X6RRus3vSlzlReX+cN6hyd1JAL
hq/rl3xZeKzureC6qqkKdhJ/ueIH0SLqLGL15SsGEy4gdeCiNUkuCF+onE64
ofQI4WiCweq8k+iHondV3VLOQvz3ilVWX/4ElxccWHVdyU3pX5WnyPrrvIHk
kVyLLiF7K7lWuX+tk9XrrH7lRf+/4C6JN1mn/Fbl1+tMKzepfa3mjvTEyj2l
P0ou1J4oOHZ5N6IV13h4xeUFBy7eJLVIvP7qTVRsufZf9M/Vf1ce1dou+obU
jRpXUhtlBkZivnIxwW+i21St4IKjLlyscopat2XNoi2Iby61RTyUylXrXl0w
rfTWOusiOSIzisLlJY9k/rnyL/E4pOfW+YFan+W9g7XPUnPq/KHwkUtcVW1t
5fLqj5d5kqo5S+7XvikanTyj+FyC1YWPVO+manQSb6vurecS717mxES/lVok
XrzUGZmrlPNaMSn4cOVpxX4yt1P52vqtT8Sq1MC1ZslNqUV1Fk68BqmrdRZi
xU/lPjUfBbNV7iz1v3IEwcOVj8va6pzVK321aqrCH6sXKd6Z8Ajxd6R/rd+V
uirntXpQ5U3CVS/nIljxwkkvsVr96IqxBdvU2Lj4Oytm1j/hX5eZgctswFqz
8CnhqnU2THJQ9kpys3oiMvtRe0rVVF/5kgsvyWyM6DOVs1eMXWtdxXjCm8Tr
qbhIsJZov8JJq46xaoLwtTrzUGeWLjqt+Dvrc+kRMiMhM3vie8pswNIqpb5V
jfqy/9WnEz9I1lnXLxpv7YOf8CVFK7tgJJlRrz649JQ6s1RxhczuVu5c5/bl
O9Lv6gzARQuV+iwxIzWqzrSIVlPnrtf+VE4nc27ynerPvuqhgj3qfJHUE+Ev
gvcEU9W9vfDciy+5elPlL8IdFk4WL0YwtmjI0ourHlj7rPQLiWe5vpyj7HPV
DOuc2Dr3pYdXrrfuI7rf+s66v/Q+wQZVo7jMEggmqbxMuPaKGfG4ZeZW9GpZ
j5y17K3sofiz4vdJvtRnFy133VPWL+crzyi4vc5L1PkoWbNguYpda6+/zP9U
zXPpVxdNT7x70bhkn2U9daZi9UHR1qQXLy7wyqMX7Fex8YWfioZ80abkd4Xf
Vf9LMIb46RXrSl9b+Sv5JXMINQel38k5Sp+tczKrP1YeJN5QxfCrrlY8Wf1Z
0ZBF9xa8UXFX9XRWHVjxI/VznYvMkAuHvXj04qMJlpBYkvUIJ6raVO3FEs/V
f5Q6IDNywpsk/qW/iy6x8ldwS51DWPe/aHSvfCs5r7Vv4hl9Yt6sYirBqNVX
En2+1pA6OyqYTZ5L/F/BXasHiY4q2KbG89pb4WKyV6I51/tIfa7rr/hQOFqd
GZDedOmJEpMr9mR/6nO90vM/4VuJblB9vVrf5IxkXvEVRl3YWLhY1TDXfq7e
JFxeMIDg5OqVC5ep77lIH5e4vexDxc+iJ7/yy6Q+iB5VZ0WEQ1WNS2JecKDo
n+LByT0veqzcs3Iu8a0k76QOy3ymzL8Jd5B8WfEpeEB0J4nP2osrHqt6o+j8
wjsEh9d9Xt8X30r4tcRtrb2XfXvll63nrfVEtIuqFUhOCU6ufFw4nejJ4tte
9Njaly+ag+CB6mVUfekycyu9qfJc0RjrHGblIBcMJthS1r/Oa9WT6hUKPxUv
SWK78uuqSUqcr327zMEK76t6XZ03EOwqGE9mcsTnFT4u+v9Fe3+lsVfNpM4b
XLwV4XFSz+vMbd1DwVHClepzCQa7zAKJZn7BVNXTqZqb4Bnh3XJPwdgXH1lq
ReUd67kutUjiedVJORfBWsIj6txCnQOp/KV6kReNXfpRncGr85xSNyo2qDPb
Kw4rjr1oMqLPC6euZ1evpS+/wlTCW6X/it4lOozkuOgnr/BGxX6yz4LZBL+J
dlQ1w4q1qp8ia6ie+CvtXTDJRZO8eD2i4df6WTH22rdal0QTexUba5113kBi
uM7TCsaWGKiYqupywn0uvo/gkMo9pQdJrXjFfytWr71V5ivWs6+atrBW1e0F
a104kfAX0UyqDim9VWJb5k7rnkjcil4nNUF6VsVgF51N8OErjFHn9Go9Ee1C
zr0+y0WXrs9VfRbpp+KnSD+VmlnncwSbrdpbc2HhkMpHap7K/EnFwIKFXsXb
Wn99T0HWJp5OjTHJC8lT4QsX7e7yrk3lmK9mPy5xW3Un8SWrl73OtOaR1AE5
L/FYL+uUGBO/UmbVFj8STiF9VuqMYB7JZalvUgdEE6gzZpXXv5pFFF5Qe+LF
07loNdLXLnVGcPW6p8yUig8oz1J9duFu9YxWDakYu34u84HVI6vYQHpKXafo
b3XO4bIPohvLPkh9lr5Wc7/6U3U2oGIMOXfRrwS/ybNInsq11BmZsZS5lIum
+kq7EPyz4kT8mgvWWrn/Sg+p9URyUzTtWuelhqzzkl4pNaHyKdHB6h4KNqiz
AevZhbNXb7pyW+FEgmGkVojWJ/hKMEb16OVZ1rlUX096lnh8wh2qpvoJ7aLG
g/BBwfYVc77SQ2o9qT1UtAup87XX13oi95QeIRhA4mftoeCr+nmtjYK9Kw6s
vUO4tnh/Us8rZqvxINeiE0ptubx3UPOo+ssXjeuiXUh8rhypHnT1EFfs/RUb
Txvm
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "42020590261131320575"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.011757447384297848`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.9882425665855408`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzNnbHKdWlShbtnbJVmaDA1MzTUEelk+kMMBcExawRpQREcFMaG0UxvQARj
8/EC1CuQyQczA+/BRNrIGVA4Eyx4Hp7af//BaU4f9tn7feutWrVqVX3n/5U/
+ovv/sk3Pvjgg7/8xZ/857tf/OC3vv/9L/7693/+p//zx19879u//r1v/uTt
3/zf66fv//t/vvP2rV/7w7e//bvf+Wy9/8dv/Nnbv/7ct97+5Yd/8EauIe/L
/Z+4hnx+tcerNVzZ/33br/XJst/yrCeuf9onr2KwrLnY/8o3nrj/E3h15TPr
mo9/+wef/dI//cbbv/37P3zn9/7q87e///afvv3nL3/zZz4n7//8P37z7f9f
r/d5ff96zevLPuvq/VrDWufaF9kjeZE1kBdZWznHJ/a7/HD5ZNkv2Rc5C2JD
6+dP+ORVDBYfLmdNvkt8o/hhsYN9b21Snkt8xuZTYp8rDvP0+7V+st8nuMp6
T2xuOcy73C/xN7v3941vv0ufJPZ5utYrZ72uWRh1tXdy/yf8pNikvP/xr/7u
Z//1w3/+7KsvfuFn9vL6+VrDyrOv+WWdhc1B7/L9VW4l9iFcZdlqXfNqc/Jd
u4ar/Vqss+dSriH2ed98cq2ZfPeq1isckmDUwqviMwQPl2ZS/OQKw60vlZy7
7Ex44xM62NX7J3K6XYO1G9kLOSPCJ6/2a2vtFafvM99+n33S1j5k7+sawiEt
nycYRXzG+hXJHcRWxSZr7ytnree+3metZ31ObE5y4pU2dcWpntD/yV4Kp1p7
sfu19YLd74oXiwPvM99+n33SauA2Tkl9tzCn6KKv97myz9XeSX6xNlkYbm1l
c67lluQaW2s8wamIDS3/sXaznOpp3bWsZ50v4YdfV91X+PZV7faET1oNnORZ
4mMk1y9uSXKrjSl7Lld6+8qn1iYEw9c9yZmSvV9x8uV7ZO9lDbbWKxoy4VTk
nqQmIjyn+GrheyQer/TMd8m3l80t/3zCJ4kfrrWtXFD0CuufpG+41rBw3van
rvR2wnmK9kVyh9VjV/wWvbfch+QOy7efyBfFPtbfntBdSx4h+ENmAKye+S5r
QNs3IfnuffDJUj+uMyJ2ILoN0QpI3Woxivh/2TupGa0fknxq9WqrcRE8sVoZ
yfuEJxfNqtQ4ZVbZ9qGIrUjc2Tyyzs72Gq541xV+Eh+22EJywdM+uV4E96yG
Y7HRzomVutj6v+VCZOZhrZOcEfEla8Mrfrv8efk2yTs2FggeEp8neyHXkPqO
nBHBW1s7lFrbnrU9x1IX2GctG5L6hXAAi71XPknOeuEe0SvI2hY2Wp8nmg/B
dvJd268keHtVV1qtlfCxwm/tGpadl33szBXpoVids5yR1U9IvrBaGTmXqxqk
1HqWd5FeFakrCT4XrYk868ony+zKsv+6hvANmwcJd7L4Zjn58pPSr1z7JWsm
mFP0Pctvi8a4zrf0s9Y1Vvu94l12JtPy8IJphIfYGsTmO8K3bT4in1veQs7C
6pwkJ5Zzt++Jb9s4IrhhccxiUfFbEi+Eg9m6m/jJymUk15AcRHK0jR0SpyV/
WUyzOf1pDcTiXsE0q5nbmQQ722BxzPanbN4hayNzF3Yv5dztjFzhqGRtV/0y
ex/ib8QmpH9n62uC55ZXk5xSsJfgSemFlbkUe73t3z2tgVj98Eq7tuduMbNo
8gQHrupccl4Lk2282F4kOXfCGcpsydNzMsRPih5isfRKAy9+SF42f1m/IrWM
7WWXupv4JPEBgsOWT17pbIvXEc5J/MRyxTIDZjX5K/5T+KFdD/H58iJYWnoN
VzFr+zXrPmX+0OZ0a+eFP7YWI7Fp8x3R4ogdLFd8ol9g+zV23oz0vkv/wnKG
pzknWafVnIvWQfKyxatyHxsjtva39dFam9X9yKwFWfOVbll4csEN64cl19ue
ddH/yfoJ7hFcemJmdT236I1kXsjGGsGNd9k3J7YlsU/6HVd80s5aFGy097E1
neWlyyaWE1rdj8SF5atWt7TYctUvKP2govMTOxBMLn0fOwdln1s0K4KfVs+3
zy1aB4lTcr1dM/HDomPYvth67vqc1BHF5gSXrK2u+g42Xko9ZXsKq9a76umU
uSbbLyhnVHT+okWX3mjJF8RnrjQr0j8q9TvxDXIWVre0sWDXbHVFm4+IT5Ia
x+qry+Y2x5G4WPFr++a272Dj5WoOh5z11QwPsWeZayq5jJzR0vyXv9l6yvbN
bV1M9kh8r2AsiS97dgQbLf4U7fGqLiZrJhyjaPLEJ9d6iJ9bHkjOi9izcEWy
BoJjNl6Iz9u4I1hB+MPCRpsjiEZ01S+2mpjtf1kMsfzz6ryIjxWMLZzfxtfC
qCd0Mzv7VPrgVpOxedNiKcENy69sL8n2U+zL9nQIF7Vat/XtdU+rX5H9rhke
4rdkZsb2mKyfENuWPhfBQ3umVhMmednWEaWvZLmx1R7XmomtiD5QNKjSj7Ba
t+1TWCy90h+K5l8w8CpfWG2EfNf6tq3drnqUr+sk2GI1HNvnvaq/rnQty9mK
f5IcSuoFmxespkR82GqAJDatlmW5d8k767sWT0icFiwt9YuNNcKlSaxZzZzk
C1trl7rG5iCCRWQNBE+ItkBwm2gRBMesjmRzOtG1yrNsT7noEiSOViwU2xI7
EKwo+ryNBfI5iXeb79YZlf6p9QGr/xNfJTYs+c7Ws1bDtDa/mmUi3KD00SwH
W7/5Sf7tdVIvWJuvnmzxH8LVy5pJL8yee8HhFZu2J0VirdTLNg/aWLB5hHCb
wrvsbIn1SXumV/YkfmX79baetRqm1XOs1mH10lIX2/NdPOHzjz59+9EnH759
+dXHb6/vSVwQPLQ1QqmhLPe2ayAcz9YyVpco+qG1J/mc8GcbU7anXOy/uM2y
P+Fdds3WVvZ8S1/A+nzxAcLTbI1j9RyrdSw7E/+xmpK1G1nnus9rLrC/Q0Kw
t2iYVoe33K/0WSwvIv0Ii7e2f1e437Kn5diWm9ncZ+t6wveIfxLfI9hFfMDm
I1ubrBfJ41caaamJiNZNdGOy5nVeJS8Qu5G12RmDZU/r/0TzJ9hS9mU1HBLv
Ja8t3yNcgvBeiwk2Tm2OsPph4dUF520tZjUrgl2FYxBsITa0z7W8tPAQm/cJ
tpPetPV/Emskxosea/u5xFctV1n2t9oR2YvVEyxntr1se3YET2ztc1XXWE5i
47fEvo1xGztP47ntVdmZAevbJEdYzZBgoNX0SC1PcnfBH4In1jfWeiyfLP3c
4ts27oiv2tghPmk1ZzJrZDmYtYn1N9vHJH1kOxtDMMrG2rKhjXGbF67wnJyj
rVOWTSxWW62v2I3Y02IOwROCsYUvWe16rZnktaJ3kb1bvLV2LvMhVmcj/OqK
rxIcJu/tWVjN3OI/wRCLmRYflg8UPcHq/xbPbRyRmCLnUrQL6+e2b0Lisfik
nRmw67e8q+Rc6xvltx1IPiLnTrQRsjaLFeQcCW8sz7Lcg8Rj6TXYvLP83Nan
Ni6u+IaNd1JvFt37ib4esUPpQZcZA2sTGxfku6TXVuZMrjTMdY4Ef2zsrBxB
8lHp6ZDeq+XSVxpF4aukRi7apq3H1zoLT7ZYUbh34RtElyNaaNHYbRwVDLF5
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
kfUTOxTNh/RZyHPt+6IPW/8kayjcxvKfsjZyT5tHbO4g+Enub/dO6guyx6Jf
Wa5eakCrxZX6uvgweV3p0sQPiW8QHyb7JXN65D6lv/NE3UH0EJLLbF4jcWrn
HMj9Sy9jva72fuV7hNtbnbzkDnLWJTaJvkT0K9JnJ2u4uqbEoPW3khMLRtk8
W3pnlgPY+LKxvPZFeqCl7rAYfsV5LPeweZlwVMtDCve72rvFdlKDEJ3c6udF
Hy41/utraU1Wv/q6XqXuuIrNK/2ZYNS77PcRDkD83MaX5fzku6Q3bf2K7Gud
NcHnogdaHcDqJ8sHiO9Z/YHs3WL7+tziaplLtLUVqeWtnvAaF59/9Onbjz75
8O3Lrz7WuFQ0T/v+ak6sfLfE4Prc/oa51cfIXtZ6LPYW7LrqC1jctrXeFQcr
uY9grF0D0ZcK5pAazd6HYLvlJ1Y7LfmInIvVpkiMk7iw3KnU0ba+JnFRYsra
iuDGlY8R/7F5gcRj0azsmu2ZEky76sERvyo9C+JLRIsgmElwvmBOOcdSC6/z
vVo/wXZbb1rsKvWyjX2bvwrPL75HPre9A/I52XvxMcv5n+Ci63pSB9leBsGr
oiEsOzxxH1KbPM11LY+yvXLLzUh/s+AJyZV2/XZfdu+lllxnR+oRy/dIjJP1
vMs5jYI55GVzEPGxMv9wxUXLPA/ZS9HTrvSTJ+5DcLvkkRVftne5nmt7GUUn
txyJYIidw3livuiq11by7PI9ohEtfyhYSmL5ak6DxBG5vmgCNgafwDrLRYlP
Wh1+na/V04g/rGtK7W9rxvXe1lY2psr8ieUbxFefqHlJPiWxdsUnLS6RXps9
F6IBkjO9wmEby1ZrKv1Qm+OuZjPIs66wjtin1ErrPiW+CCbYF/GB4kvk+vK3
nFc6HvGxKzwn91+fW03v6TrUzuSs968+YPmA1fwtX73CYRubJcfZZxX+XzQB
sv4nMJD0eq748PpumZkp9SbZl+W6ZO8kjiyHJDmLcLarOqvE/lXNS86x1KFW
u7Mzdesai1EkZksslO/aXt6V7mHjZfnh1WwG8eF1plc9i2Ircn8bX/ZZZU7s
qsa3+Zf4jz2XUgvY9ds9WvuXmrfkvqLJE85s/bacHbHnVSzY95bXrT1arl60
Gtv3t/hA+tpFX7LzTld5v8yPWUwjedz6UsnvNocSDml7qRa3S211pePZ6wuO
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
+ORVj4NwqtIrsfzN6vwET/4XBGnRDw==
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "12610707415579864791"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.017890850082039833`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.9821091294288635`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztnb+rbFcVxx8GQhorO7VRAvYGgiD3DrG2ipVYvYCpHgaTgARULLS0kJSC
oEhKQVIIdhYBm6RLEUTyd8TKBEQOHDasxd5r5jN7fYobPhn2PXPOPt+1f3zm
zLvfeO2NV1//0pMnT9564fP/vPr0Z6+8+ebTd37w/Bf/8+Onz1769rPnPsdf
/e/nC3733Z8/fPLvvz/+6NNnl5df/8vj3z546/LKr79/Gb0+apNtP2oT4dH7
Rs7nmm0qrmvmmKvu3TXv9cy1zPRhdZ9UX0v2ONX9Vl13q2qk+hxmxtuKceMn
/3r5/z+fvvOVx/d+/63L977+5cfj66OfY/vs7x5/Itc4et9R+9G5VXPFdWWP
n71fkXt3zXs9cy2RPIzOJ3stq/pw1bVkayTCM/1WXWuraiRyzJlziPRPtl5m
xo1sPX7tl398fPGnf3549s/fPhxff/HhF5f/vP+Hh/c/fO3hyKPfPfKq8x8d
/3icP7331cvHb//w8tk3P3mo4OO1V9yXmfFndL9G5z/KQPW9ztbyzDlEfiK5
ivRJpP+PnL2WyPgwOv9IvWf7LXu9WV61TsiOh9lziIyf2bF9ZtyYOZ/IMSPZ
y57nqpxn57uZfpi5LzP1NZqDju1feO67l79+9J3LP37zu8dj++PrM/2QvdfZ
sXrVOUTG9uwxI3zs58g1Rt43u3eY4ex8NLreij1gtkaqHciqfVb2/EfntmoP
OLNvzfb5qvequEczDiS7r1k15qyaE2fu9cxcueo+Rsb/in5YdS8i7WeuK7sv
GF3jiFftAVfleaY/I/vQbH+uysNoPMne6+Pr2X1r9p6O5rvse2X7v+K+V9Tg
zLg3qsHIMUfXFbnXM3PlaC00M9bN3KNsP6y6F6vWQhU82lceP38c7U+ze8CK
z1CyvxsZb2f6M7KGX/X548y5Rd4ru+cdjbERR1Ex3s7Ms6vOZ9WYE+n/yHx6
vBej12fmysgxZ3K+avwf9UNFHY3WYNfM/6oamemHVZ+hZPszMt6uchQzfRKZ
O2bWnJF5eTT+Z+c4Amfn2Zk9V8WYM5OriBvPfnYw6p+IK57Zv6wa/2fmoJk6
mpkvCDUy49Vn1pPZz3pG7zXa42Sfixi9HhlPsnuTmbFo5nmDSH+uOs8Kjjif
W9VjdtxelatIXUTGh5njZ+u9YvzPeoNVdZQdJwk1EnkmKjImR9YbM+P/sQ9H
4/zoHGbOZyYDo71J9ViU9brZsYLG2bmsoh4rPnOfmX9nngXNHr/ima7s+WS9
QXZOHNXRzHNKhBqprrvIZ8oRr3h8r9Fz0aNMjhz1Kv+z6tnR6rk+8ruR9gQe
1Wbk2YZV9TjjKitylc3ejLOKrPPv0f9k64gwtlevSbJ1F3nmeZS3yF54dF8i
69tjbUbu3apn/LLPE15zro/UMoEj66vRsw3XrM1IH6567jqbvZlzzvrh7H1c
Nf5X7MUI+b/mmiRbd8fjZ58xiPR/5N5FPM9oXsj2SfZ5vGvW+KrvQZM/841k
5lZjbKT/Z567zo4DI46cc/a7WqvyU+1/ss/E3mMtVM9lFePbqnVy9lmFVTW1
aj1WMddn80De2476c3RPq8fYSP+P9imR565nzi3SJ5H128yYc83n/7M5H10v
+RnOijVJxfveah6JeOBVNTWzn612vKP12L2vcyLfQ4m4wWs6dkK/jfbgkTXD
rdY2+p+6NQnt+y+rshT5jtuqGq+eO7J9NTq3me9lELJ9q3n/muPerfoq6/Cr
a1//s5ar57JV49uqLEU+z52pccK6IrIGrqh3MlfP+9Xj3q3G/1E+s59zrVrb
6H/m+VZz2cx4Up2lVb9LXleMPgO99+/53mrev2ZWCXPBjCurWNvof64/XhHm
GnL/09YVo89AI9+DuKYbJ9TCrfJA5hk/VlH7+h9+PivmGnL/09YVI/8zWpeO
vqNByOc9Mjmrt5pbV61t9D/3m8+Zz49o/X8v64qs8yfk8x6ZnFUC63965lP/
c25Tva6Y+TcQOqxRaXnYlfU/fNb/cHK+6vPx0TFn/r4DIav3wuSsVrP+h18v
+h9Ozm/1/E/1GqAbk7NKYP1Pz3zqf85tbvX8z+i7YN3WqLQ87Mr6Hz7rfzg5
r1gjHV9f9bdv5OuPe/fC+h9+veh/ODknPP9TMQd1Y3JWCaz/6ZlP/c+5DeH5
n9H5dFuvEvKwK+t/+Kz/4eS8+vmf0bNAozYV64EOTM5qNet/+DWi/+Hk/Jr+
J/s3EAlZvRcmZ5XA+p+e+dT/nNtc0/+M/s2f0d9A9LtgzHHvHln/w2f9Dyfn
q/zPzHe4Vh2nM5OzWs36H36N6H84OSfvjzqvXWnj3r2z/qdnPsnj261yXrGu
WNXPndeu5HHvHln/w2f9Dyfnt9ofuXZl5uEeWf/Drwv9Dyfnt9ofRfqq89qV
Nu7dO+t/euZT/3Nuo//pw+SsVrP+h8/6H07O9T97MDmr1az/4deF/oeTc/3P
HkzOKoH1Pz3zqf85t9H/9GFyVqtZ/8Nn/Q8n5/qfPZic1WrW//DrQv/Dybn+
Zw8mZ5XA+p+e+dT/nNvof/owOavVrP/hs/6Hk3P9zx5Mzmo163/4daH/4eRc
/7MHk7NKYP1Pz3zqf85t9D99mJzVatb/8Fn/w8m5/mcPJme1mvU//LrQ/3By
rv/Zg8lZJbD+p2c+9T/nNvqfPkzOajXrf/is/+HkXP+zB5OzWs36H35d6H84
Odf/7MHkrBJY/9Mzn/qfcxv9Tx8mZ7Wa9T981v9wcq7/2YPJWa1m/Q+/LvQ/
nJzrf/ZgclYJrP/pmU/9z7mN/qcPk7NazfofPut/ODnX/+zB5KxWs/6HXxf6
H07O9T97MDmrBNb/9Myn/ufcRv/Th8lZrWb9D5/1P5yc63/2YHJWq1n/w68L
/Q8n5/qfPZicVQLrf3rmU/9zbqP/6cPkrFaz/ofP+h9OzvU/ezA5q9Ws/+HX
hf6Hk3P9zx5MziqB9T8986n/ObfR//RhclarWf/DZ/0PJ+f6nz2YnNVq1v/w
60L/w8m5/mcPJmeVwPqfnvnU/5zb6H/6MDmr1az/4bP+h5Nz/c8eTM5qNet/
+HWh/+HkXP+zB5OzSmD9T8986n/ObfQ/fZic1WrW//BZ/8PJuf5nDyZntZr1
P/y60P9wcq7/2YPJWSWw/qdnPvU/5zb6nz5Mzmo163/4rP/h5Fz/sweTs1rN
+h9+Xeh/ODnX/+zB5KwSWP/TM5/6n3Mb/U8fJme1mvU/fNb/cHKu/9mDyVmt
Zv0Pvy70P5yc63/2YHJWCaz/6ZlP/c+5jf6nD5OzWs36Hz7rfzg51//sweSs
VrP+h18X+h9OzvU/ezA5qwTW//TMp/7n3Eb/04fJWa1m/Q+f9T+cnOt/9mBy
VqtZ/8OvC/0PJ+f6nz2YnFUC63965lP/c26j/+nD5KxWs/6Hz/ofTs71P3sw
OavVrP/h14X+h5Nz/c8eTM4qgfU/PfOp/zm30f/0YXJWq1n/w2f9Dyfn+p89
mJzVatb/8OtC/8PJuf5nDyZnlcD6n5751P+c2+h/+jA5q9Ws/+Gz/oeTc/3P
HkzOajXrf/h1of/h5Fz/sweTs0pg/U/PfOp/zm30P32YnNVq1v/wWf/Dybn+
Zw8mZ7Wa9T/8utD/cHKu/9mDyVklsP6nZz71P+c2+p8+TM5qNet/+Kz/4eRc
/7MHk7Nazfoffl3ofzg51//sweSsElj/0zOf+p9zG/1PHyZntZr1P3zW/3By
rv/Zg8lZrWb9D78u9D+cnOt/9mByVgms/+mZT/3PuY3+pw+Ts1rN+h8+6384
Odf/7MHkrFaz/odfF/ofTs71P3swOasE1v/0zKf+59xG/9OHyVmtZv0Pn/U/
nJzrf/ZgclarWf/Drwv9Dyfn+p89mJxVAut/euZT/3Nuo//pw+SsVrP+h8/6
H07O9T97MDmr1az/4deF/oeTc/3PHkzOKoH1Pz3zqf85t9H/9GFyVqtZ/8Nn
/Q8n5/qfPZic1WrW//DrQv/Dybn+Zw8mZ5XA+p+e+dT/nNvof/owOavVrP/h
s/6Hk3P9zx5Mzmo163/4daH/4eRc/7MHk7NKYP1Pz3zqf85t9D99mJzVatb/
8Fn/w8m5/mcPJme1mvU//LrQ/3Byrv/Zg8lZJbD+p2c+9T/nNvqfPkzOajXr
f/is/+HkXP+zB5OzWs36H35d6H84Odf/7MHkrBJY/9Mzn/qfcxv9Tx8mZ7Wa
9T981v9wcq7/2YPJWa1m/Q+/LvQ/nJzrf/ZgclYJrP/pmU/9z7mN/qcPk7Na
zfofPut/ODnX/+zB5KxWs/6HXxf6H07OZ+7FfwGjIEug
         "], {{0, 128}, {128, 
         0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "15365143935027257744"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[Rule]", "0.020141731947660446`"}], ",", 
      RowBox[{"2", "\[Rule]", "0.9601269364356995`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzVnT+of1l1xYcEQuo0sQsWwZDSSLCZ9xKws3JSDSJkAqYa/JdiSCETiKWF
WCgpbNINBAwYCNhrmVqwsEsTsB+0UEHC9xUH1ofPWve+X/Eb7jzu995z9tl7
7bX2vvfcT/7DV9/5xz946623/umPf/ufd9774G+/8Y33/vnv/uh3//Pl997/
q0+//4e/PfyX3//73fG3P/rp0+d//O7zJ77/zecv/tufPX3tT996/sV//P3z
49+T49NvH/9+Ojb3Mteh41+MZ2Hzlg3p2hkbmuu01q5lZ2NP6kutNXpT7Lb2
7cX11+tlYv8rP//r///37n9+9vlz//XLt//1v//mxfHjOeb85L7Jvcw5dPyn
c8x4WtdsjSf5d1o7M19zTsvO5rgVC6djen26RncdX+kb9F/r+gYPjV/R6yT5
4isffOvpL/79129/4f3PvDiOzj+M5yef+sHThz/80vPPPv768fqt49PYaN5M
rmlsRW1uxhONLfEteE1zbNZ04Us4dg7x+IgDj39/jJHT9V/EUbBGC5ss7Kbs
DO9LY03ZE8YUjQV8TjCGP//Vj97+nz/57tMnP/jw6fGY2uR/3/ve0/99/JfP
H33nnbm/0TFTfEuuH903uCa9V3Lf4zmHHH1a00e8Sq6J/9Hxl86ntkri99H/
E9s+np/E+Cm+Hs/HcVGKwZo/GIyCvzXHpxhZczmag073ohiywKiavx3OOa0L
xrdBjjjqvlIepGtxGsNpnKdrUj52uqbxt4VvJ/F7uo5Z38SXEt7VikdqN8Pz
TbzTuIvqWkG8JONf4ORpPI/Xf/STVo67kpslxxRXKb6ZHJFgnbFnMneDjY/+
83j9I/4EPP9kE+pvyXypbyf+dpp7C/9beXDtb1E+Cng+xajEf9Ycr4Xta71m
uN+aJxh8S3Jccq8Tvpl4pJhPYzy5vuHYrbknPpbY3/iz8XmTj+hvDQ5QHmv8
bYGZlCec4vd03OJ4rTm2cvRryEELfrXAeVOroTG4iAXD95JYNv5zwvOF5m0d
t7Tegje24pfWSZLfrv02ialjnD7oi5b/r9dxYdt1DqK2Tf6+5qjGzw3+tzCc
8j2qkVvcoJXv1phP12iRuw0OGPyk+jHxK+O3xrdPdacTDzF1/sU6tvDQ1L7W
dQ96foujtuoVFP9ND4LmytP1E13c4gYtbXIlz2/ljgX3M7XrBCeTMRtcNZhm
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
3OSIxd6q63m17GmwYl2fpDFr5tiq4bRs3tIXhgOsnwmh+Gn8IcE9qolO50Q+
E+zHbvCf5nSac1vYZXhFKzct8ssiTxnMXOTiBebQmDVjNs91LPp05r0bky9a
PtyqmZh6LLWV2Zvd+Pa3P/rp0+d//O7zJ77/TdynNvwwqYFTDWiw4i5MXmiQ
uzTUQg9emTuS31JOuDim9b0WxtK1W3Mhql8oV6H12EXMtvJpgr1mnMbHEjxf
aH/aV2qt70KDtI4XeNvKxYvcYWoCrXdyWzi88Fu6dgs9Qjlwq4667pFRe9Kx
LXiU8RmTC6gfGl9dYHJrvgku0WOa32nupnWMde5Y+/yVmE9zmVmjhJuduDHl
sXfVhJOazGKNTvZc6zvjS0aDtHye+gN9RqvFPxdcq2VPWi9t8Y2Wjy20Q2sd
1zzf1Aeu5G8U86n2b/lPKydSnXL0Z/gewWKcBn8Wz04YPFnwQ1o/XPuVwXzz
XMQa0xZct/WsxZU83/Ar6odmvrT2TnnIa9jbxOCGuWYLMyl/buWClg+buRt+
SLF0vb4Gx6iubH2jls5rnU/p8UIXGM6ziIW1Dkr8qsUlTK4xvrHu67X8itqq
lXNbfdg1ria1QfNdEoM56+NWDqJrsfgeMfX5Vi295Z+Gb7dywWK+i+u09jZZ
9w3NvVo+czrfPJtKn52g9mxhI/WfVv5qrXWrF7x4ZqBVEzZ2Npiz/u1d3I9e
h3Jmutatc0x+bK1jS7+3eKyJL+oP5psOdMyG4xndavgAzS+tXL/moom+o1yL
5pQWb1/or4UGoVhh6jlvSn98cc1WzqW5wIyn1Zdc8IGW75k63sLfTH5v+c+C
H1L9Yuo2rZ6swcaW/lroCOrzi+cT6FqsMb9137UepOvb4qsLrbHQ5nQ8iz1z
WnzgynhZ8MMkz7bqYxSXKHeisdDyjVafkfbOkrWjnMRg75p3GT2ywCiT0+/6
HsRav7T6a1dyhru4eisXUH6Y5NmFXluc08J883eam5Kxmee1zDOTFHsNNrZw
hsZdqy+24IEtnbjeB3gRXy3/afntgqu34sX0I1oaKskji2Oad9Z6v4X/xiep
HWgONZzNYALVNTQWDB9bYBpd6zXnbOloyifXHGyhMY3PLPTsSW+2clNkw4d3
G82/xCZ0n66WpjO9b3p+ggNmv/3XUO+l80q0kpmX4WytPm+L19E5tvpHxm4t
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
TNd9wTcob6d1D+p7kV4ofXfD4NhpXq3vPRnNa3DS8KtkvVoYvtCSRpubMRsN
m4zH1KAWdadWfWPN1Sm+Jcemdm1ypcFA6sN0/PRe5rsbVF+bWgqNR/rblp9Q
HdHiZgsfplrS1KnM+Gm9Ys396LxMvX1Rb2xxdZP7Whi70KQUA02t1cRCwsPp
dzdMHk9yREv7t7DOxMji+ut5tXjv+nt5VI8s8s56La7cd8LwSbOOdF93Uxc1
mtTUu1o1hIVeo79t5fErx9yyIc25pg5jxrywM11HU3s3MWv6Vgs7tLjEYt8J
o5Hx+Ac48OK+QV2U2sFwlbt6cEk8Uh1x4iQ0j9NYNmNea72Es13p/3RetCZg
MN/cy/QaWv5zZW6lGtnsX0fjxfQcaUzROgatoVG8or1aU2db6HF6bGxi4rTF
wRZar8XDW/5varAtPWtq7zRfJL0Gwx+orda51WhGGstmbC2e0+oFJHw1uQ7F
LvM8XmutF/jf6u8YLdmKF6r1TI6gOs7U0Mz1Dc4n5ye/pXutm9xqMHOdW43u
oLHc0ixmLYytjD0TDKf+bNZokZevXC86NvMMDI0XirFGA74GLkTXy+CD4f8U
o4w9DadNagULXKXXSXxgvUeW4bFmvgs/SfzZrPuV812sF/WTFs5TDFzUkFtx
veDtlNOaWg3NKXQ8i3zd0lZ07w5TE17UuGheWGgWM98W/rRqp8m6L+q6LX9u
acyFdjCY2aohL2pEhp9Qf6D19hb/b+U1k69Nj8nwEPNeksl9rXhf+K2Zb0vX
t/zc9B0MVrf8uaU7KCdZY+ba/pRztrgfxe0kDy74fyuvGU5l8IHO0eBVEiPG
f1px3YoFiiHGTygHoL2qlm8sMJ/mXMN7KQ6sMfNKfWT8nK6L2bvpOLbgO3qG
k9O8doo1+jxki3sn55uaAL2mqfkYPWt4neHPiW3v6tG0eOOVPL+lB6/Up60Y
vEvD0piN7Cn2bmr5odF9if8YTmjWwsQOxTS67q2a/13c1ezFQfnGokfT4o1G
g7TwyvhDiwcankNx40oNa961SWxF925a1PZbexkluG3edTJ7AlB8o3Xslj9f
yamu5K40F1CbLHrfLVyl/mNymfEr45+U55i8udawZr7J+XTvppbdDF+i3LK1
/5XZE4Dy8Nf2fYQFp7qLuxoN0prXAoeNxmlxyBbmm5hNsMX0i9fzNddsaXBT
TzD8v2Xb1vlm71nKORe+1+KNLU71pnBXY8+W9je6qeVvC67eyu8UV6kPL2q/
Rsu3NFcrNhc+dhe+mVg2XJ32QSj2Ut8wuErj6C7u2sKcVu+7hcMG/1t1aRrX
rfka3pWMx9R+6fMDxp+N3Vr1W5Mrr6w3Ghwz2ud0TJ+/avGTFvcw+XTNXRdc
t8Vt1noqwW2jYVuccBFTyfXpfgIUS5N7terGV/KfZO6tnvWVvRKj5ZN1j8Zz
eP7qNB6zJye1lfGHK7mr0RQ0Xii3OflGS0+ZPEvfaTWc0Kw73Tt6oXMpzrc4
yaKvYWLf+Bu1z6JX0sINyj1Ox6dnsRbxZXgdnaPR/q1+WUvTtfC/pacWdRWD
IYafG+691rmnXNPStjS+qC6gPr/A1da91jhG86/BhMe/n/DfcDOzjgv+sOAS
5pjy7Rb+t/xtkVMot0nOMT0y00ta+H8LT6gNTQ2K5k0Tpy27XenndJzr2ovh
JAtfMvyh1WNaHyfak651q8beel5uUdsx/URTw1/EVKuu0sr1id2SOkkrBq/k
hBRDqH+2MG2BV8bHEnygHK+lcQyXWGP+gsMnsWniyNRCT/zB1Jeo/7S+8W1i
yvR6Wn2Z5L4tDbjQLC1OuM7vLUxr1V5anMTkvpafL/LaQhfQ67c4akvPLnid
4QbUh4396X1btQI6/hZWt/Yio3Zo5YLkHMOFWmtqbEhrLy1OYnJf61ski7zW
4lR0DIlPtvYAMbzd7AFlfI/GWotvmLxG12KN8606BtX4rXhpHRt/M9hi4qjF
ndb88Eq/Ndz1LnuampjhtwsN29I4yfm/AZctWdI=
         "], {{0, 128}, {128, 0}}, {
         0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "20096665423769445584"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.03681294992566109`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.9631868004798889`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzNnTHLdltXnT8MfNG/YCPpUqRSSKPfeZFEgo2FgpjyE7UIasAIiV0a/4Zg
L/4CSWxsrNKnsrNKJ6QRoiDhbiZcF9dYz7F4D/vc7Gffa68155hjjLn2vv/V
b/7nX/2dn/jBD37wX37yH/7zqz/+r7/4B3/w4z/6tR/+4//89o9/9+d+9nf/
xT8c/vd/+vePx3/2tz//3Z//0R9+++P/+++//c/f+6Vv/+Pf/dS3f/13v/Pd
5/HnOeR8e1yuef3ti3G+GBuZ29X55Zrl+nZdvnLMX7lGNiZfX6d87woTSgyv
YvJ17r+OmbJev/+//+3///d//uKnv/uZv/zl7/7+r/7Nd5/Hn+dc59v5ub6L
XJOM015zdWzn8Cf++he+/cxP/c2P/vSHf/uj65xyfrmmvZfrb8k1V/NGrvN6
zj/PJ+O84sfeL7lOmatyXyVHXsTkC0yw4ykxU9brOr6u/1u//hvffu5Xfv27
//if/uW3z+PPe/8cwzU/n+d8XudzDJ+fX3P1eQ7BkOuaq3UnY7NjXtVKm4M2
Hj6vecUJ+a7re+11yjllzj8/v7jW5xiuefv8/BqzvU5Zl2v85L5s/pLxl5h8
gQnX317jKTFT1us653Ocn59fY/v8/I//23/49it/8tvf/tePfhLVuM/zyfWv
uL3WlGDINeay7p/XJPN5jZncL6mVtk4RnWgxmcTSdWyvX47LnJP5v2Lv+tvr
3slaEK5I1sVyGHtfV+wV7kT+9vouiwkE3yz/J/W65Is9vsZDMJbU3yunSEyW
z69zVvhJ4nM1fluLrzz9/PziclZnEf7z+V0XNyAxZnXuNQ+2Jl7XvOaT8DSL
gYQXkXV5UceveydjJjllx2xxhuA24Q+WQxLuSvKF6GvLPy0nL39LOAb5/Dom
HIDgZ+EqdvzEHyCYVjyf6/zr+ldttXyA8HMb89f3XhhO6rXlY+T6K+1TcpPU
ccL3ythKTVlxGKINSS+A1COSs5a3EE/PxkbR2iQGCnYRLmHHSdaIfNdq/EVT
v8CKq2Zd+L/i4QRnyN+S41JnrzW64oFg73VMPGeCn9avsDXF+uG2phBusMq1
wnuvtSY1kWjPUk9JvlutXWp08XUtzyQ+CeEGBDeKVrKa+sJqixXEbyEemuXh
VrMQjkqObZ21eUew12qfq0dA1uLze4lfYXON1BfrDa6wwuqFku+XXigcchXb
NobJ9W2NvrCL1JoVtyzcdRUzpW7anibBCjI/lnNanCzfa9edcMiVN044Bukv
2J4C8XlInJNzSC5bznPVLNsDKr7B6vhF38r2BYp2Xul9opdJTlluafu2pTZZ
7mTnnMSGxeeircjcWvy3PK3gucVM4guVXgy594JjpPdNjq1fWtbaeul2Dl9g
vvUhC6YRjLU9tYKZxNcqGFK4peUnFjMtd7K+xDV+4qmW2k2uYz1My8mtLiB7
llZ++KqG2n6ivX7pPxKvYFWvC1aXPvtK45f+lOXAdt+a7bkQzCw+LcGQ4i2Q
2LD9PouHZI0sj7XzWXCb1J2i6UrtI+tOavoLf5jgDOkhEl/d8kDL0yy22Hwh
OmLFQ2yvs9S1gv+2JlrtWfzJr6yPlpPYnqnVyzYGrIdw8VhbW4vXZ6//AgfI
uluevBqnxR/Se716qWT/oV2v1d8SzmO1zxX/Kx5i+aTlLZaz2TGXHuKqlr2u
j2U/Bhkz4dulRlsNe9XlovELbpMYfo0D1p8h55feoo3D6xzio9pnWEqttH9L
1s76A7ZHtopne79W71vuV3qp1luztcxyJFsfSz21c0XW1PIHe49W35V+OsHt
FRcqOEC4LsEQMgbbW1zVXOv1EY1ja6Vda6tliudj8b/8Lblfy2lXPXrr1ax6
KPa53VIfr7gq3Oy6ftH+tr5YX53snSDxWfpcLzTOi/6a9S5WvmWpudbrIzhg
ayWpWda7ILFq13EVk6/1AomTlX6353/lfiFbH0u+E31ttXZ5H4X1V1/0sknd
Ie+7W2mcF/vrVj39MgY7D2Q+bQ+O8DEyD9YrJueX/TwE/21MvtAL1uex2Gv7
g2TOL8+z1ETLq4s2tPX9RQ/Fzr+dKxLP1sdY5RHROOUZZBIn1z3anr4dD1mv
Va/TYpHFczKf5JxVHq086pUHbusFuS+CvTY+ybqQd45Z/VW8o5Jrr3tbloeT
OS/csugmqzfJWtuxkWeQbSyR57PKvNl4tpqd4KGNT4vV5P1OZN+prU3X3Np9
DkXvWx1NrkPi//pbO1c2x0m8kXwp3lGpHeU6Nh/L+SscJrG36qdfc2X93lLf
V3WQrMWqB1f2A1zjt/t77XVsbbW//WTrVOEn1lsj/NxyiRVntrlv873wn4sz
2GcryH3ZXLOxUdbihWaxfNv2JlaeP+lZFF79OhdejKHU2VV/0PI9kmtk36nt
cZceAeGEL2LA9hRWnLmM4eolFW+N4CGJh7IvwvrPpXYUrmv3+Vi+bT1ewmFs
jFk9sso7Umte7OG3usB+r+0Pkpy1+E+wi+RR8UxKH/aa/9X7JC2HtJyZzOF1
j0TvWA+WPFu34sAkDu0em4LzFictPhMdSu7F9uwIVpM4L1hX8s7Gj9Upq7gl
c2j7g7aOWE1htQO5vl2Xgv/k3i1/INexcUJigHAD2zOy/Y7CyVe+PbmXVT+i
6A6LUfber3NIn45wITs/5Nji/+s6Qua2xK3ljRc3s7X4BR+wvemVR2111spD
K3rf6lbLDwtXJ/WacBjCye017boTDCz9iJXuIPdSfJILN655IPr9xXHJ61Ud
Kc/g27i1e7+Lj3rpr8IHSAyTd6iSdSF/u+rtEv72QjMWfkjuq/CEUpeLTifY
TsZDYoDkEblHuxYr/5CsnX1nXdF9K6+s6E1yj1YvW+1ga8SLPSF2P+fFB6yv
WOoU4cY2fkherPrFpe5bD832TSzO/HN798L1vZ+f29+Ds7WDxMm1Fqt3PZH5
vHr61g+03vULr6zsn1zNm32m247hxZ4Q67cUX5HgWOESZGwEl8jzTURDrXLZ
5qb1gkiNKH4F8Qat30X4GIk36/mQ51ZW/R27z8rWGot1hGOUemG9Mluv7VzZ
eSO12Go3kuNlT0jxxMpc2R7uSheQelHwllyzeLZXbpZ3fdhn2wsfsHlEsIKM
f7WvoHgsL/DHYiBZR1I3r30mxIsuXpnd17F6X1+pccWbIrzUYlrxxFa12PKH
Fx6j5bEX3hKOXZ5HvvLo+l14i/8kN4uHU9bX1hTbu3lR48o8FO5nY/7q2dn9
A4XvWW+k1PES2zaPSo9jxYct17I+jK3FpKf8Yp5tzb3izeLtiitazCHzc12f
YIL1cMpeuIIJdv/zqk9Brm89Q5Ij1q+zetnWWYvb9nttvrzwQskYCk9e8aWV
R1f0wgr/bZ0i8X/hnvW7LOdcHVtNTTRyGY+d/+KNF2whcV68oBd+7wpPyDjJ
3175SzSv/V6LRdbTW9Uay22Kv31d0/agbR20OFPwn8yzzRGrEa7PL59nxRtX
PNP23239spzHcv7iCdi4el1zrd9bag2p9UTXk7FZn5N8L/FdSWysvERyL1/Z
L7C9XVv7LC+6Prf4X3yM4pNYDlC899WxjRmS47Z+kXskz2isepTFA3ldc4tv
Y2tN8T3I9a/4X/EK4ruWvhvJCzv/Fm+tPl3VIDIey4UINyY13dbNFWcj/KF4
sCtfqPRoCi5Z3CZjI9647UtaDWLXpfC04tWQ9bL8kKzFqgdEeIXNa7unwva7
yf2WfF/5+aQG2Wd1yfgvbXjVbnsOiX+bv6TXttr//IJzkty0nJmsu+0d2BpK
cIDUuBUWrWqu1fgkT4knT+Zkxa/IGpVeRtGMFsNLPNh8t7i9ev9S0WVk3i5s
J/9e+A8EM693Vl+YRvpfpbba8y23KWtte2pW/1pv0+ZmydPVvggyn8SjsF5H
GcNKX5O5svsz7XtpLPe29XSll4t3RPiJ3cttr29/C4zkftHRq7y+akHRp8UL
sn6y9X7t3BLsus4pWGRjpuBVwdvVd5HzrV9k+RXRWfY9XYUvkRpqtaf1Xso+
HDLnZb9B0eMWJ4n/Q/YCEf/hOqdw6RVvX/n/dpzWFyKxZ/fHWj1isYjkJsEl
i1cEW8j9rvrj9nPyHgxbI4h/bnls0X2lXhA8KX5g0f5W25L+jp1/co+Xr2L3
z1g8IWth89ri84vnicg4iRYu/SnCN6wesf3cUutt7+aaW/tOOdITsf3x696v
z8m+u2veVs+MWA+k+GyWA9u+VfHKiq6x82n7L6VHY2OjjM1yFRLb5XcPV54z
qSlWNxVe9KK2kjprc5NwbPuOUDI/F5cmnifBMauzrJ9crmlxzL7zluAeidVS
v8p+ucIJrba1OsIek/ksOGzXwuY7WdPPc8jvHhY/uXCb0g8qHkKprRdmvuiV
kPpiPyd+2hV7VywVblP2fxK9Y/2uws8J1yJ1rXDgF7lQOKHtmxRuaX0AqxmL
B2JjlZxD6os9p3jLZM4Jly71YnUvxQ9fcRXiExL8ITWCrNdVIyy3sXsqrEdN
vqvwVbuXyXIbUhcIpy25YL2awvfKfgnL+UuuFQ9kxQ9tz9Qer7iT5VQEl1Ze
qOVs1mN/wfnJfJJ9XGXMls9f1yd7Ksj3knm7ena2l13y1PrwpBaQ860mIte3
7xq1+GMxxNZxi2kvdJata2TM5Z26hI9Z77es++d9kT0ehQfa30Wyz9at6rvV
klbL2Npq686FsdezMyQfy/sPX3gRVnOVWlB6iPb3g6yfQHphKx/+Oib3RfY/
kF4M0Vm233Fdc/VOXYv/1vu1625jzPoeK85JNIvl1aU+2jFY/7/0YVccrPA0
q0OLF2F11koXkDpL9k291sLle+37N2yPu7z31eZ+0XckPq2vTjCfvCPUxqod
v+11kvd7EM5J4qf0a+x7hEjeWV1ge46ELxUOVvi2jTFSH+29256p5Wyrvq3l
A1YLk7UjeWRrfdEOK//T4nDRdCRWr/kk7zWyOL8av/3NMsv9ClZYTr7iAIX/
WK5C8JDkqa2hxSuzNZfwGdsLXvXjyBzavq3lLVZbldyxPTsSM6t9O0Q72Pew
FU23mvPPz8m7g1aa1MYnqXG2Xlv/zWph218r9dSeY3WKzXc755afE21o/YeV
B176cRaLyPhXXqXty5DcucZQ3mlZ5tlyMOstl5i/1r08+29xlWCOHT9Z01W9
XnmJ5DmpVb/P5qk9tjyW8M/rHMvJif9g97eUmrXi7dbbsfV35VWSz21PitQg
+xsKtk5ZvCI4cHnLBIvsXlyr98n1S42wmtTGSanXNu+s5l09J2Xjs2A+4dKW
v1leTfQIiUnSq7J7F0tuWnwuXjfxryxmkv0tFttfcBtSg0iPhuwtLDraxrzF
tILbpOdO4pDEM8EcOz+lt2L7pGT+SR7ZPuBqX/q1vtf+EOu7Fp/q0v5kHorm
JfdFcorkUanFlktY3v7CzyzayupWyyFJ3hUdbdflhcdueSzBbduvueaK7L8l
vKXwKItvhG/YukxwsniYxdeyflHxV22/jHxO3iVYcMPyH6If7Z4owreve7fP
/hQ+b3sElvMXfVHqka2zZGwrj52MYcUnyR7RK1Ztf8d6BaTH9IJXWK9vxSVs
bNjPbS1b+VfWeyfYW3DMct2iTy2HJ/d++Wb22R+yppZzWu6xir2itckzTZb/
kxpa8LzkY/FG7PXJnF98kng79r5s7ba1zHKJkndlzlfvjLL5ZfGk9FyI3ixY
Z/0By52IPiK/aXvplNW+RFvridYr+z1sfln+SXKteOwrbl/0DuHzdt1JPtox
FF5RtBV5B4XVsJYLEV5Hapnt71iPyOZm6VUVjmR1GcHqVZ+U1K9rv81nTJJr
Fg5AeJ3lnLaPaftZJK9t7lgN/sLbsXrHHtv3Zti+la0L1kO2OGBzmaw7mTfr
A9v6Rfx8yyUKb7c16yvzyPINwp2sBrSctvSCrb9h+ynFW7D+/CpOrtwp9bFo
rhIbhbNZnUVqrtUIK7+XxJv9W4LhxQuy78ks/RQbz7b/S+Zh9duRhYcTH4P0
YV/oQctpS46Ufor1+a3mtfNpccDyIst/Vr5r6WEVbWV1q51b6+Ve59h98vZ9
ShbrSk/c1q/CaVexQfQyqSOv84jsub3OvzyZlR60NdT6qOVdo9f5xF+ymnf1
zEipxUUTFV5ExlD6a6V3tuI5K11P6sjnsX2fUsFP2xO3fIn4mRenvTCk4EBZ
O+sJrPoX5B4Lt7TjJD556fHZmms5GInJS/NefY0SJ1f823pRuBC5js2RFZez
eG59g9e6nmB12V9E4qT0XC6fh/Q4rNdUNHvRvxb3bB/cein2Hq3GLLlM5sq+
j9HOvx2b7evZPCX9TYuHllfbXCg+MMHY1TOt5bvIvbzQ9dabIvFJrmM9DcI5
7dis5iI4Zp+NLXFlc9/+5pF9Z0vhVGUvkI152wO1utJ6kitNavGc1ETL8b6S
bxefxGqr0m+yGpzg/0rXr/CKYJflZlYzkrER3CZYV+ah5MuKN1pPg+Sj1Xcv
dFPpH9l5Lu/xI/Wo+HIXnlvdbXOzcKSVd0pymayFfQ6oxJ7Ff4uHts4Wjldi
ePW3F0ci3GzFQ65rWk2x4o2WYxNOS+oI+dvCQ6zfaD3J4ptdnuQLzkliz66L
5dKWI604QOHDNobtPNtnPC3WWc1rNQjheKveROFm1/3aPZzWo7A4U/YbrMZv
+1Dld82K1nuBOaXXWbgK0WXlOfSyH4mM+YW2KhygcOyCvXaei6+7yinb37H1
mqwRWV+7r2DlLxGuXnhI0YBWw5LxF+3zgqu89nOsjiP8x46B5OPK6y4c28a8
1VYWiwhWvOhVFU5ltdtrzm+fh7W4YflD8aBe1NAV9l6fk73xpTdkcbt4BasY
fu3nEP1rY7jET3km3eKq9dle9AFJPJPnW8n32hi2PgbJBfKO99VzNxa37fOw
hEsUXmHz3a7Fa/whubP6LfgX82P9E6vFLKat/ByL/8VPsGtE3kFq8bZwXeuT
k2tabWVjo8SV9TFIjFlv+fvygizmXHFCniu8sHHlga/mcDUei1evx2b3Ubzw
piw/KXhrc/n6vDxHbLHU7rEkc1g4s/XKSgyQGlHip/gYxKOz+6Ps+d8X/l/9
PvKcvtV9K5/WzqHFn8K3SSytxrbquxV8szG8em+D9XWJ914424ueo/X9rK63
OovsRbRzUt6nSj4neG73jZD8srrjK4+Lv2H5pI3J6/yVn1b2JJNcI+86IzFs
75H4w4XLEQ+h6HqCLaQmkvfOEYy1XILMp+UzliN9X991zX/R0bbeXeNc7Vuw
9bHU/RfHr/mtfRaG1GKrNSz+FE/4+q6r52I1lPUEbE5ZLmf1bPFnCue/YpKs
heVpNo/sfk6CP+X65bus/7nyV0uM2fW1fRO7D/D74vwrfkuwl/w2X6llhfNc
cWLzxXJIsofB8kzrRds4IXNL5sp6VoSjEk+jjLnU3KKXi39F5tl+V/EhC/8k
noDlVyVPbQyTZ7Ffc/4y/qIvLg5m9yNZP8fyHBLb1qOwtWnFhci9kDghMWx1
MXnWo2Cy9Wat5rL+A+EYhBcR/4r4MPa7VntWifYsPQXrw9g8tTFMft+t9NFW
OHmNv+iLVR1ZcdTS039dj1ZcyPpgZK2Lz0bws+huMudlf4L1nWx8XuO3HMn2
cK89HuRf2UdU1tq+b6dwEovhhGOU3scLz6fk72rdX9SFi7eUnv5rz2S1x2al
u8t3rfxbG6u2V2J9XeK3kJh/vT+EjPPCf8v5iedW+korv9pyEhsbBE+IZrFY
V3DyRd/frvvq+PN7r3i+en/FG1x5JoX3XhzS6u7yXfb613VI7lj/imhzyyGL
F/d6fwjBKKI1Ls6/8jZt7St+9Yp7k9p66Sxyza/sC6z6/jYHX2uBC/Pt/Zaa
ZbmorUGWb9ucst9lMZlwj/JMPeGH13eVXu01BvJbM6UHt9J3F15dNbq8G9nW
PutXl16z7c1ZTCi1+wU3KH1/q6deaAHSW3/Nx0rPgujHoouJ50zy1+4/JN9F
cpzMleXktldI9jaX3C/7Q0g82NpHvC+Lmas9Qqt7t+cU/vPaj7XcgOztLL8H
RLRnwXy7piR/V3zM1oWyF8V62lbvkPwl82/vkehroqcIv11pQItvJY8K5pC1
KPFpcdt6lTYXyrGtF1YHkX0pRQvYvyXPLq10lh1b8RNeaIqVf2X7JsXTLj1o
Ur9KX4ms3QrHyufWo7j4dskjoq3I99p6XfjAC+/9yoXVGGxsFxy23m/hIXZs
RX+90DjWB7Y8fFWzylqTMRBdT/ZGklwjfNJybHvvdq8I4VfW/7TjvGLm6nHY
OHzhYZbcfIEDL3SlxX/7zuqyh6F4DqRXsvLlLA+3OWJj4IWOXtWslfa0up7k
tV0LsrfKeiwr/CHn2+ee7PvhC2aWOSkeJuF4RZtbHCA5W3TlitdZj+viYKse
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
9SIcjHBdq/dX78YvvKv4PFaflrkt++sshlvu98LDKcelp2M9cJvLtl7b7115
Xy96r6taYP/W9n2sTrH+g/UiVjxz1aO03gLRSiv/odSjlc9DcqrwFlsHSV4Q
PCxe5etjMmarWUjckmMyV6WnUPZJlvixPPMrj1+Ph/iBlxaw/n+pWWTf+Iv3
PpHnblZa3vZZbA0q+GxzlqzLChst97Ne5coLKnFyxSd5DvTidSQfi69Legor
rl78XsuXXh+/1inWR7L9YsJVim6yGoTgxhWf1z4c8m7/lZ9p6471eey7KQrG
2pwtnPbyNom/8c/B8yHjJHNOctyuaekplLyw+bUa21fycHJfK030gh++0FNW
Vxbf+MrHqxaQuSr3busO8VUKH77ihMyJ9cEsp7U61N77a8/ninmiSct3kTVd
veeHcJIX3NiO7XVeF/5D8r34D5Yfvujp2L1qq99QI3N44c+LZ3Msjy0ei62h
xDezPJNwMJIXtt59pRawvY/rHTuFD5B4I/p3pVOsNifceNX/LftSCKat+APx
4ogfa9dr5cPYdSGxutJxZMwvtCHhsSv+QHr35VmJ675sj4BgXdEyr7VAyX27
H8PG/+X3fuYXwUOiFywfILFNYpise+lx2/uyfKPgJOGlpOZaHmXX18bzi983
sbyX5Nf/A9rBriM=
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "15686501956369591456"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "\[Rule]", "0.11179898679256439`"}], ",", 
      RowBox[{"4", "\[Rule]", "0.8881703615188599`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzVnT/Lbf1Rhl8UJB9AhFgoWliKKKhIPA/2ghhrIW9AMRAMJIpYaS+kNhaa
ylLsjKCNIBaCiG38Amn8AFYmYLEsBq+La2Y/5y32YZ3Netb6/Zm55557Zq39
U1/+2hd/94c++eSTb3zu+/988dM/+rWvf/3TP/6tH/nBf37n06/+ws9/9Ye/
f/in//v5wfHP/tvn377yh3/w9uP/9YW3//jWP3347z/5sw9//b1/+FXyvT22
13mePx2X69hzrteKzNeObWsNL+xh615b+1XsxNpD2cetNSx+dL1HW2v7Sn+5
HvMFRn33V37y7Ue//a0Pf/F3/6mPf/+7v/j2/33sda7Pea9juz5lPd/rvsQe
tmzmeo8uzv8Y7OqzOK/P+np+zMdbse/ff+N7H779Y3/74fNf/lriANcc8pXH
7zWvj4GTP+2BHL/X3r1X3vpKu7rOo99rLz7m9fysHBc+Rtbqlbyx8NvPyn0v
crSt+04+8nO//DNf+Pt/+fW3X/rnz709jycffK+52Pl+DPt+McePbV4XY7jO
lz8rH8vHnufY61/wRjLmi3u98r5b/P/ivtP5z+//9R+/8vaXf/MTb9/8xnf+
zzH52+u5vLLe8coxv/L4Y5jXx7CeW3jyymPCxyZfmHz5+f0zFkwcz/JGMuYp
HpV7vfK+lhu/kpPbePTnf/Wlt9/+5u+9/eaXfvrtebylA2ztEeF7lvu9csyv
/HwM8yJjuF7PLTx5r+MJwy2ePP36ec3p/GkNCW+cxjxdc9p3e69X3pdw4wk/
Lzi5xUk7TqsD2LkQe9uqd2ztOxnzK48/hnmRMRC9Yit/2cKT9zp+4vYUN6e5
T7nAtM4ThhDeSGIN6Wuaxkx46fV9LTcu51xz8ml9yDkEY5+2Os2FjKHUrWwe
RPadjPmVPJOM4Xper6yHXqzDx1DntfXf4vvl/CnmTutM4s4UgwhXITG93Ldw
Y3t8zcm3dNTpmkS3nOyEYPvE5ab1IXnQ8742Jk72M13z4tiOYWtexI8uNJyt
dSC5z3t9Jkyb4sJ1j0ThkFYnJ/rVZHtTTC/33Zq75SdbnJxwiQu7LXzDagVT
rLca3XVM3LKTaV7Xsd5yjIueDXI+Gc+U+xCeeXE8jcHawBb/L3X5YhtWP7Hn
W/uxPlW4zbWfTvazZbfTvEpuQuLgFAuKpnTBXUssvq6TkphuOYbVwYqPk7k8
bWMaw8QzL7Q7wl2JDRDsJfhQ8I08szbNxXL1rR6baWwT1pG5l1hz4aeEMxe7
Jb0EJJ8idkuub22J+NdW/XG6F9FUSXy5iOlkPQmG2J6N4teTzZf6xeQ79phg
oMWcCXutplF4WsmpL3Jnmxs+50t6sSz/sTG9+KnVjqY5Eo5tcyii55M8tGgR
JD5O+2vrj8ROLFaQOFhieuHhUz1r8mXS32J1DxIryd9avmGPiW0UHcbGUKLD
2PUs/NbmzjZHJthL8N+uibU366dkPJNv2rotsVuyzsRHLB4WX57mQuqPNtew
47G1bBJfSj/DZBukj936vuWQljOQcyyO2XtZnWf62B6JovkUjC25s82RCT6Q
vibr79YGCP/fquOTurnVfm1MJHlosUNy/mR7U98g8S/Cr8i62Vo2ia0TJlvu
OtntxCVsD8/Wux2sbZPjUssmeajl7SRnn9ak1D0vOFjJSW2sLLpZydFI3jEd
234JMn6rB5I1vNBq7HpamyH7MvmdtR87tul7W/sueQfhY8TGiH0WHLZzIR+S
p9vcnOwXqWuQ3NxylVdysK2aL+FRNr++6AWyupPFfxuvibZP7MTimP3bor8V
XdQ+i7dlz8UOt/zF5jIk77BjJnZi+4GLLmHxk+Ce9RfLE2wMsphQOJvlJ5bb
2H0kulnhtIQj2ee+bfy160bOJ/HUjrNwgGmvyf6SnvD36v8na0hqMSUHL/XB
aS6lFkn48Bbm2P2yOGm1ylLLKJhg9936+xY+EH5CxlzeoWRtr2gCNr/e4qLX
Wo3dO6uLEo36GZcn+yS2QT7T306xyT6XcRFnLW/fei/cRU5U9msrNy9aor2X
zcXsOWWcZa1Kv+JWXCvx60ITKHy19BIUPyVraDkkmaPV+Qk+EO2a5Ob2HY8l
Nym++VyH0pdbnqmx/eqkzntda9iKy8R3tjScLf5jx0/wkNhD0Xyu9a6iCRB7
Izg5fX+h1RQbszHIYqDlus9zyLP/0zWn2lCZo/U1cj6JgyUGTdckOSDhRVOe
clFrINzVxuWtWp7NxYj2QmKr1QdI/YX44/T9VlwrsdtqAqXndktrsloN8Xey
bls8ymqkW7hH8L9oehd6gtUZCp6QfS+cgWB1qTWQmvj0t0UHIDa8lSOQ+trW
755MsdjmbrYuQOKa3ZeiCTyvY59XJXhbNByi1ViOZ7mBXQdrh5a7TvhjMY3Y
j9VCLbexPKdoDlYLKrmJxXmLz2QuFmPtvhCOV+KsfRdB6Tcj73Mgfmf9wvJY
sp62vrz1rgbLb6f4a/lt0RksJpc6Cxk/wT2LIdZ+yPNWRbsoep3lIdc8wcbZ
aV+m9bFzIXs9YeyFhj/5DvFBm1tZ3JhsvrxvkKwPsT0y5qK1Wry1/YGEV9v3
2JA4vqUzEJ5D6iyT/ROOTXzHYvI0R4LPJQ+yfTsXPQ9bPGFLjyXPchIbsJrt
Vu5J1sfauY1ZtpY32bzt3y6acFnP4u/TfEveUXRjso9lDHZtC8e2OoDVcqe9
Lvv4/Fz8brXt27FxttSCt/it1dOm+U6ag8XPwr0vNDdi59bfS+yYYu50ffsO
WGtLBcNt7mBjPVlzqxvbnNE+E1fWn9ihfVaCnGPz/aKB2B4S8rckf7Ta4FZ9
4fo6toew6BsE96Y1f6XmRnQ/WyMu+2ixi6xbsTGrEdnzS6zf4vN2nERvscfW
HshzUlvcmPjaltZxoY9ZfbXEMouZ19eZ8OHaj+x1yL7YMRMbI+8lI75JeBeJ
HZYP2zzU2tuWxniBmVsce4r1dpxFN7Ox9Tk2+77TwiVKrcHaZNHHin6+df2S
z5brkJr+Ra5q7ceuebE3Er/I+2O3cpDpb60mf1FXen62asrFHgp+Eix9fk/4
jF0rW0si+2VruMVuCTfbqmtY29vi5xfXt/Mt15nOv9CBiw9u7VHRBwqP2sJb
qynZtbV7bZ/73tIYCWZa/LQ2ULCxaAuEj01rMq1hef980eK2+vGIRlHmUjjG
RZ5LNDTiI8QO7Z6SedleCLKn5LP1PAXhUTZ3tvtuOYDdx4LPto5v/Xeau+Wl
NsYVfy/aAvEjazMlR9vStK2mQfa96A9kzEVLL3mu5SGWS5C1vdjrrV6LaV9s
/9h1fld4ssWfLTux75EgedC0DtZ/Cz+Z/nbaL1L/3cqXiR9ZmyncfkvTJvtI
sLFcv9Qut/pILY+yfVzWzrd8yuow78VVyhxLfkewbivmFjshMbpoyLZHmsSd
rZzOXueihjLdd+s3tq7rsJO/Ez8iY9vSVQjPLN/bPJf0mZR3WxH+edH7Qezc
xq/id1vcrOCG5Q8Wq7fegTbhj/0NU2KH06f0CVi7tfx5q4YyjYfs1xaH36rD
bvlayWfJWm3xyel78m7MCRPsM/v2GWRrV9ZPyV6Q9S/PhVkdYysGWfwpa0Uw
ltgJ4fBWo7P4UOpTZC7TGGxeQMZTcv/nZ9qvafyWw1/0wBCeSXzNfuzaWr8u
2s6E5+R52HI8+Qixq606stWayBhI3mdjisVhm6tauy2aleWQFusI57c9MCQv
sLGvvFug2JjlHjavJPG04J7FXqtzTutjj0keVPyaHE/7O9Uip9+wJvzfHluc
If5F7LDoclvYu8VnbK5t51LWiviUrVsRjCLaEbEH4nd23azNbNmY5R5bNUSL
USUntXhu63cE00geNGGy9WsbZwm3t/s1XZM8i2Tz8a1850LfuNAz7cfWd8i8
bBwkuGe1GsvVt3DV7u+0brY3xtYlif1vxaAtna3kESUuW4ydeLKtMW29Z9Lm
BTb3JDFlOp7mNT2LZO2BzNf2mVict35U6m7k2P52tu1VKPGCzJ30Lpa4+co+
qBK/Luy/xB2rGxN7IFqTrUds8atp3Z6YNuGYzTusrl5ysYuassUEsj7EH0lf
1oSBlp9YbaHwN5tvTj5IYmvJtUsvCllPolVu5W5FH7A55lZuSOx/0mmLJjPt
heWQZE9tL2LJXwhHsuMvnJDkFMRWS8zdykMJtykaMlkHi41WWyj2QOy//NZt
idfW5i2/ndbf/r5kyd3ImpRrEm65pV3YvyWazPN7si8kJ7Ka81Z/6bRWdjzl
t49tjcnWNYiv2X7FYntT7lnsk/hsyWVsDYJwRTtma282l7F14YvfsCZ6wpS7
2T2yuVu5ZuGWVrsouoet+U7zIjkRwZZpbIS/2XqEje/2fFtTnu5V/M6O7YL/
F+5ksa7kMoV3WS1rCyfLXEhuWGoWthYz4edTa5160op/bfksqWsQflvs7WL8
VruY1rnEJjL+56f85lHBQHvN6fyie5C+9+letifK4gnhToQXkbhvc1K7pwTn
rR5ia9ZbNTUyx1ITnHyTPD84aQ6FwxccINfZwmpiA4XzFK5CrmNjnPV9Enem
nPFCT9s6tjY85UrTWtk52toowWdiP7Y2ROyHxCy7R1ZbKDXrUpMqPc+lPjvF
uwnPSYwgNnDhmzZ3LlhN7MpqLNffE7wi2GJtmODAVjy117Qfyw2IDZQ5Wh5r
199ek+x7yWWIPds9svZsa9ZEZ7Aa2sTnbX3WasKT5mNtbMtnt/C55IB27155
XHCe+KytqZU6suXGtk/bajVFjyL2WbSRUssmuSeJFyT3tLkVwSuyJlaP2vre
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
Joszdl+Ivlq0ZbLOZPyWH9o4O+HM5C8l1lhfnsZANM8t/dzqsSU3JNe3fQKk
T2Orf6n4gsXnkiOTGF36GYpeQXiRzXPtetqxEc5QaqOF05J6HHlfqOVINl6Q
mEts+6Jvp/Skldx2WluS51o93D7vacdM9o6sP+H80/4SH7f8vOgeRKsp8YLw
DcupyNoSvyv+Mo3BxojSC0piaNENLB+w61ne52bnO12T5Bo2p7M6YVnbybZL
H13R7UlPUemTsbZR1s3msJNt27hDbIxgZukrKPGi5GUWi6Z9LLy99I3bGs00
zpIf2fmSe5Vzrmt/RCuwsbX4y+QLRSe0c7Ec0tokmeNT93geE85vsd3WGmxv
JFnzwhkIjm3lccU3rV3Z+Fs4LanjWEwusczuqcX2C/3n4vi69mdtksQpy4cJ
P7nQCW38tZjz/L68747ETdu3PN2X1BoszhObtJhZdI/CXUtdfqv2ZHHV1oMI
bkz2Y2PiNHfr18WPiv5TMNli9Vbtz9o8sSXLh22dtORopU5n+WrhcpZnEg1w
wnayvwXnLZe2mFl0D5tXkvq17VOy8W6rL5FgdanvE2wkvRPFr7fyX7Im5Dpb
fRql9mdzXotjNoYW7mFzUpJPWZsnvKj0EZG+FBtTLK+e9tfWDbfiL+HbJaYQ
fCB1+cIVbWzd0jytjRUNjfSQ2LERzknyX8JLLdeyNkNywwvOv1XTIfyHxGuL
IRarS99j6bubbJj0wFteVHSGaV6kz9ZiOOFXUy58zbFJ/1LhisROpvHYZyIs
N7jufyC6qB3bZCdbv3VL+KH1Zat7bHF+e0x8uexX4Q8E38r+2rpSyUOJbmbr
WZbLWXsjnJPYucWrosNP+07ma/U3m2fZsRVtjdi8nSOJp6XfhvDerb4CiyHE
Zws/2apzFX+x+Qvxd4vbFp/tHC9+L4DETft8IllDGx9JnC0ago2/xA6JDl/2
cWv8xActF7I6DOHk03jImKeYZXs+iY1ZndmuFZm7zXEIbpNxEpu5sKUL7dpq
BZaT2HeMFC1ouj7hb8U+rb/b/luLUVv8yq7DVj2xcCR7bPOpYp+Wm21pBRe9
cJPdWj5c+kaIPv88LnVwa5NFD7E6ntWuCeaQmGLjcsEEq10QPnNdoyHrXDhe
qfNaHa/oz5aT2OfsSuyYbMZen+gM9t0+JQ4SfJvsc8u2bVyzHOn5Pan/kncN
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
z/8AE3QDvg==
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "46724218297933137114"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.1230355054140091`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.8769615292549133`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztnbGKZEUYRhcFWRT0GUwMzNzFzJllQ9MVTTRZQaMFYRcRI/cVDIwMBPEJ
fAZfQiMDczMjA2dBoUEK/qJudZ9v/hOMnG2me777naq61XeuPW9++sWjz1+6
c+fOs7s3/3n0+KuHT58+/vqDV17847PHT+7fe/LyDT7/9+sFf/jJl9c//PX2
9avPfrn+/bt3rn5+6/urbz/687ry+Oh7Rjx67myGHa85+9wV3nEs5/z+2fwr
/R/V5+7v2dEDYZzs6O2cz10ZPzv4qHl01PGePv7Gj/evXn/t3oOHd/++Gj0+
4tnXvzn1PPjvq/KaI155zcpxjfj0Z1W+Ksc1eyzn/P7Z/Cv9H9Xnbq6M89ke
doz5HfNullde/6h+KuNn95o/m39l3ai4fv7+T9e/vfvxgz9+/ea9Cp8e1+nj
FV+neUbHMvq5p88dPT77mqPjqnic7W2Uf/ZYzrkPHLleGScjnu22Mh52fFXm
5koPR435We+VDLNfs8e48tzdc21lza+sz7NjY/Z4V9aulTl+mq3S1ay7UZ6V
16y8XzvKXaXbc+7/Z3s7atxeag2Z5co8WlnzV8b8rPeK66PW5N3uVp476vCo
635HdXup+XXUfNmxzhy1Plfep4we3+2uco5b2QdeamzsWHN25CfMo8pYnd0L
jcbwpcbApfocdbJy3W+0B0icXzvOxUed60dr/so1pcr+/5x9jjKs7P9X3itd
aswQ1n/aXJ7dC+14b5K+/o/mfmVOVfZUu/eKu+cXjWf3/Ctzp/L4bl+Vn1vZ
q4y+P31snHMNoXVV2QtVfk9ByE/otjK/KucOwv7/NvHsnn/2PUjlGuBo/7zD
6ehYKtdzRjlpe7/buoZcar2aXXMIXRHcjTLMXiOtvA5hzCRyZc8/2/PsuX5l
bzA7DivjanQf16V+Z915DbnU8c7eq0brh+ButIbM/r6sshbR+idzZc8/u7eZ
PdfPPn6U35XXPOr8mMKENeScXLmnIuW9Hs1d5fcmu/eB8v/7HO1zjnpftnL9
f8e19JV5Qbj3rPMasvsYZ+cLIX+Ku8p9+5V7JwjHksiVnivX4StrfuXe6cr/
l7f7fu/KWDrqexK587wbzRfX//Vz68p+sts43HH+rezVT587e6/L7uv26fMi
hTt3VdmvEnKmuFtZ873+c2zns5+hVDkXpNyXRZsXZO7W1ex+lcxkd7PXENz/
r/Ps/n/l/n/y+Zo8L2jcuav04yW7q1zbSXzPRePZ/f/K55kkjj1aNhrbVS6n
uHNvf9meK9dtVj5DkuaUnI3GdpXLZHe0PLeVK9dtVj63Nn3s0bLR2K5yWXdy
Zd3e8XsW8tgjZ6OxXeWy7uQR7/4cA/LYI2ejsV3lsu7k0XjY/TkG5LFHzkZj
u8pl3cmnvOOznRPHHjkbje0ql3Unz+75vf7DcUdgu8pl3ck7Pts5feyRs9HY
rnJZdz25suffcc0nZeyRs9HYrnJZdz35qM92vq1jj5yNxnaVy7rrw6M9/6X+
xiJ57JGz0diucll3fXjls529/s/JRmO7ymXd3W4eOa18tjP5byw6LzhsV7ms
uz5c2f+Prv94/ycnG43tKpd1d7u5sv+vXAvy+j8nG43tKpd114cra/s5/4Yp
eeyRs9HYrnJZd7ebR3v70f7/nH9Phzz2yNlobFe5rLs+THNNy5OSjcZ2lcu6
68M017Q8KdlobFe5rLs+THNNy5OSjcZ2lcu668M017Q8KdlobFe5rLs+THNN
y5OSjcZ2lcu668M017Q8KdlobFe5rLs+THNNy5OSjcZ2lcu668M017Q8Kdlo
bFe5rLs+THNNy5OSjcZ2lcu668M017Q8KdlobFe5rLs+THNNy5OSjcZ2lcu6
68M017Q8KdlobFe5rLs+THNNy5OSjcZ2lcu668M017Q8KdlobFe5rLs+THNN
y5OSjcZ2lcu668M017Q8KdlobFe5rLs+THNNy5OSjcZ2lcu668M017Q8Kdlo
bFe5rLs+THNNy5OSjcZ2lcu668M017Q8KdlobFe5rLs+THNNy5OSjcZ2lcu6
68M017Q8KdlobFe5rLs+THNNy5OSjcZ2lcu668M017Q8KdlobFe5rLs+THNN
y5OSjcZ2lcu668M017Q8KdlobFe5rLs+THNNy5OSjcZ2lcu668M017Q8Kdlo
bFe5rLs+THNNy5OSjcZ2lcu668M017Q8KdlobFe5rLs+THNNy5OSjcZ2lcu6
68M017Q8KdlobFe5rLs+THNNy5OSjcZ2lcu668M017Q8KdlobFe5rLs+THNN
y5OSjcZ2lcu668M017Q8KdlobFe5rLs+THNNy5OSjcZ2lcu668M017Q8Kdlo
bFe5rLs+THNNy5OSjcZ2lcu668M017Q8KdlobFe5rLs+THNNy5OSjcZ2lcu6
68M017Q8KdlobFe5rLs+THNNy5OSjcZ2lcu668M017Q8KdlobFe5rLs+THNN
y5OSjcZ2lcu668M017Q8KdlobFe5rLs+THNNy5OSjcZ2lcu668M017Q8Kdlo
bFe5rLs+THNNy5OSjcZ2lcu668M017Q8KdlobFe5rLs+THNNy5OSjcZ2lcu6
68M017Q8KdlobFe5rLs+THNNy5OSjcZ2lcu668M017Q8KdlobFe5rLs+THNN
y5OSjcZ2lcu668M017Q8KdlobFe5rLs+THNNy5OSjcZ2lcu668M017Q8Kdlo
bFe5rLs+THNNy5OSjcZ2lcu668M017Q8KdlobFe5rLs+THNNy5OSjcZ2lcu6
68M017Q8KdlobFe5rLs+THNNy5OSjcZ2lcu668M017Q8KdlobFe5rLs+THNN
y5OSjcZ2lcu668M017Q8KdlobFe5rLs+THNNy5OSjcZ2lcu668M017Q8Kdlo
bFe5rLs+THNNy5OSjcZ2lcu668M017Q8KdlobFe5rLs+THNNy5OSjcZ2lcu6
68M017Q8KdlobFe5rLs+THNNy5OSjcZ2lcu668M017Q8KdlobFe5rLs+THNN
y5OSjcZ2lcu668M017Q8KdlobFe5rLs+THNNy5OSjcZ2lcu668M017Q8Kdlo
bFe5rLs+THNNy5OSjcZ2lcu668M017Q8KdlobFe5rLs+THNNy5OSjcZ2lcu6
68M017Q8KdlobFe5rLs+THNNy5OSjcZ2lcu668M017Q8KdlobFe5rLs+THNN
y5OSjcZ2lcu668M017Q8KdlobFe5rLs+THNNy5OSjcZ2lcu668M017Q8Kdlo
bFe5rLs+THNNy5OSjcZ2lcu668M017Q8KdlobFe5rLs+THNNy5OSjcZ2lcu6
68M017Q8KdlobFe5rLs+THNNy5OSjcZ2lcu668M017Q8KdlobFe5rLs+THNN
y5OSjcZ2lcu6uyz/AzWPk/A=
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "44175329969224582408"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.03457218036055565`"}], ",", 
      RowBox[{"2", "\[Rule]", "0.9617294669151306`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzFm72qru1VhT8VJEUKUSsLQbBKqaVxb2wULBMsrCSCNkaFWIhWVuIZ2NkK
CgG10HPwBIScgNhZ25iAxWomXJfXuHeK9fF+i3c9z33PnzHHHHPuX/r9P/3W
H/7kV1999Wdf++F/vvWdP/+N733vO3/x7Z/+0f/8wXe++6u/8t2f+uHHv/q/
nx99/q1//5nP//n1n/30R3//u5/+5ds/+PT9n/vrT9/47X/9dP3++kyeUz6X
d9nzl+cU+3xJ2xZfl7uvbGvttrLVj+vz63z5kj4t53/xnRdYV+L2Rfxfv/+J
X/765//6u1//9At/8z/f/Pj5ss8//+Jvfv63//7jz3/5tV/7fH3neuY//sM3
PpsfcrbrO9f3r/Nf5yTPuT4T+9i8LrYtvrafX9i22KrE3somL2xY8sX6vfjU
/u3rz9bXL3J5hScFN37+n/7k83/84Hc+f//3/vabH2vEx/d+/M71+eP3Pz7n
47s+/v56Dvnb6zN5zsfvrH7/MZaIfa7PV14X25LvE18TzHxhW3ue6y429qzf
Vz/kvVf8k3y5Yo/Y3PqOvIvg0uozeRc5Q8llghX2OxY3rudc9vn4HPL7j++6
7kJsYnO84Ib9ITlFYoNwlSv3SZxcd79w4zozyZfrbOWHxBvhdQWHid1WuGT9
a2PV+rrYjeC/jYHC88tPyeXL16U3LPyKxMb12fLJ170beRexG/lM+CGJ4dJT
rGr0xQ1Ib0XynfDtYmcbq+Q85JkEx2wMXzYsdfnKx9JHE7sVzLT9u62nq37B
Yuzla8uXSD6Svy0ckvCi1xxp5S+Ss9aP5DPx0ZWz5MxFQyN9uuU/KzvbWCXP
Ie8l8WP1RpKDFqvJu17ofrZe2/pCcpbExos4tBhIcpbUQWtbkr+FSxNfEPuv
erdSpwiWWs3T8tLr97aXuexDZgov+FKxM7Et+U7BZ5JTtleycVV01JXuR2Km
YGnpVa+7rPKdfN9ylfKZvMv28i9yuXCkF/hTfETyuvRcVy6Q71tsKbMhkuOr
vq/sy9kzW92M+ILkGjmP5VEr3c9qdwU3SB9UsP0FDl/neaGHlxk0yalVLlus
K30fec51d9v7kHwsnJb4ZYUt5fyET67q8nV34heCFdd7bc9IYrXohEUXtVqQ
5QCvue6qZpUaauP8RX9dNOGCe6vaZD9bjkewcaUFkT6d+LH0ShZbSB18wf2K
TQiu2n7H6mAEhy3HIDohyX1SL644IbFU7lg+k56IYPtK8yRnXtUgcnei11ku
ZO9Y4vP6ITF2xarVUlYchnDRVR9kseWyc+Hw9swEo4gOY3m45cO2XliOQbDd
5q/FKMvBLCd/zXUtDhBfE45BamupQfbu5L4EA23NIrXJ9mUk12xdLjOjkkdX
/LzY+yWxTeppmX+VXWWCOTYGbL7bZ5LYIxo+qVPkO7ZPITzN8hny+xXPJ3FV
ao3VB0icWM3K6gk2v17s/BRd1OoAti4TrCtzaotR5C4v5lYrHbXwWFL3V363
eUHqguVFJEfsXPuKE8KdSt0n/Nb2a4Tr2r6SYA7BChsPhVeX2a7Nr6L/lM9E
c7A9heUVdt5dOM+Vp4Qn2Dr7Wkdd4W3hTsTvtkcm/Zq9i+UVBAdIr7Hiq7bH
sc+0cXjFZOE5lqOuZhxkh4Tku9X9iv7z4jPhJ+T8l61sLthe6fUOgLXDCx3V
ztyLTlLqb7G51bpXOUV0WoJXL7io/SHPtP0X6Y/IechuWKmJVmsqMVZ8UerF
6rOt6dffEj2/aIDkXStMI31QiYGio9oaQWo0iQFSf63fCccus3vC2ex9SS9c
eCmZ15DcIft7BOsIbtv6SHCG6JY2hlc1lNQmy0u/JM8nddxqm1ZTsnqI1VIs
phW9ncTAhXXkzNan19+SHLfzMtuPlF6b1IvSbxKd9kWPWXpq6+uCOZbP2L1x
ct+V1mRrqM3Hote95vmEg9kcKbyC6P8210iNLtpj0dMsRyV10/J/m+NXXq/6
ETu/Jhym3PeFfmj5Z6m5q/6I+HrVG5Y+wtYmy7UsTlpfv+gFim75Wtu0ufb6
DCRuy25MqV+kH7e1nuR42YMt8bP6vr1viTfyrqI5l/3P1S4Qic9VnSJ9hO21
V/XOYlfhhyueX/qylbZJcJLg24u5P+lHbL9TYr7goeXSZH532eE6p42fMuu3
c0PiFxJvFpcs/1ztyRDMWX0m2FvqptUtrd5C7Gx5gsW6oh9a3ZJ8f4VppR9Z
6Zkr/e0FLy14SN5l/WLtXzihrblF4y1aUJmzl17P8vkyhy08itQjq++VOCd8
xuqctkezuq7VjS33s/szpN5ZHrKqfSSeSQyUOl54qbW5xeeyS/OaE9o+jtTE
VZ19kYN2J4rkHendXnO5omVZPc3ultj+zubva1wtvJTEg8XnwvFKz174T5n7
F22h8NKyM2Z54EpPs5zQ6jBXvpAZtO33y2eiS7zYX1rtWrzgUdYOZF5M7GPP
dsUPib3Cr8ocysY8wQEyoyf4bPuR613Wd2Xu/wLDreZJ7EDuQmxieV35W8v9
yN9e7yXvetHjWF+v9Cvro8Ll7POJHVYa7Jes7xZXyd0LLy05Tp5z1RqLz6Su
2X7KajXkOQXDCS8lOWtrJakX19ms3cjflv0iW9Mtx171OKs+0epXluNZPml5
FDkziVurwZJ7reo7uW/J5RUvtTm+0uJsf2r3BGzvY+d0xIar3ZLLtjaeVz6y
/fWqHpVaQ+pF0boJt1xxeBu35Tmk5lqss3Nnyx8sd13Vd3Jfy3Uve5L3Wq2g
9BdEi7OfLeex83SCn9e9iO9sPto6dZ2NaAjWRy+4E6lHpdasdHhbdwpPts+3
trUxb3tqW+PIPN1qFCRubU/x4m+JbQs/sTMRq9WU+mj5W+GThM+TWSR5F6nv
xD6k1qx2DFb79jYeXnCGUstIvNm6Q7irfb6t9YQzEJsUPkC4uu15SS9AZqYk
T8n3S81d6V0kT4tfyvkJlpJYLXl9xQDhM5evCZ8hNct+x/bptn6RnQcSG4Xz
lN6c2IdgrK0vhNPad9lafz1/1VPbOaONQxKTBXNe7OZZX5D6QnQYy5MJz7ec
nJzffsdind1BJXlhOR6x/+oz4fmk9lktouxNrThD6bVtr2R1Rct5LGaS+Lc9
oI1/i5M2Dm2vQeLZPrPEueWBJPasnmZzrXAMqwsVraDwUnJmy/EsNhabkHgm
mGB1DNI/WmwsnOGFfUgsFX+Ru5C7W+5na3HRGSzOWF5nuV/RNomdX/BAu4ti
z19yxOoMLzib5aUrHZjMU2wvU2xCYm/Vj1x3Wc1brQ5gv0PsY3mU9ZfVCqw9
Cx7afsRyHtvDkrppY9K+y/ZuhQdaLLK/t1yl6D9l5mv7LJILRQcmOU5svooH
ckdSX+yZre8sDrz4XM5vdcVyR8ujyJnLDk/R3AiHJLls9fbSc5FaXLCI1CnS
E1lOSPy40oLI88v5S2+70i0vP1qeZuPB9trXma0WZH1R+vTV56JFFFuRGR/h
1QQ/V/oPwUnLE8j3r/gnNcXWvgsHrjMTTkjsbPUK8reWY1j/Fq2vvGvF68rs
zGKF3Uey8WD5gJ1rrGbTloMVHcxyDMuZyR0tx7B82/bmpWchdnvBLck8qOyI
2r7G5gg5J8EWgm8rfc/66LItqfXkXUWHtD4qtYzkgvUL6YNIb0L6C8sNil5H
9IfVfJxwDMKZ7bzMcifLkSwPIfYncWJ5mrWPrR22PtrYsH4k8V96mdLfrXxd
fFS0slKvLW6QWkZq6EofI7zC9hdWeyHxQ3peG5/X+e0ZClYUbmz5bbFt0W8J
hyE8zXJL2xuS7xA72LwjNrTxTPCkxCGxj9UBio+KVmZ/Vj2p7ctIv2b5bdGB
bX20temKq7JvRv7W9jLl+6/5rcU0q22+uC/hORaLSG9o56Hk7qW+XHF7/d7W
1oIzhbeQ56/m1MRWtr9YzSBKXlsMtLNyy+uud5F6QfCZ5ELp060+Y31h+8HC
bwkvLXpC6TtW3N7697JDyR0SJ2XPlsR20aJL7ti+wMYMmZUXPkDsTM5/fadw
IbvvQc5g9cnSt5KYJOe3sbfqv0o/fsWnfa+NZ9uDEN54Pcf6i9Sjgl22Nq3m
48QOBMdKXbN+KfyB8D3CN2x+FQ5Anl/ObDHZ+tRqPgSLCK8jOxIkH0mcW+5H
zlB+yHvtjqU9v93XKruvF0bZHLE1y2KgnVm8qDW23tl+mdjE+sVii7271cQs
byk5++I5FpNtDFudoXBLy5OLJlD2iGyNsJ+JnQteXXlkNUaCe6Sm2M8kRyx3
IryF5KnVQksPS/xrOTnBc4uZl23t3mbpCyxHKmco+6jWDuT8pO5fMVZ2e0ju
XDFZOBvhXbaXJJhjuRnhRXZfqOBtqdck3si8zOZg4XsE34h9LpwhsW13BUm9
K7ttNr/srqbVQGxPZ/sXex7io4I5q97T1ovr+XZHxeJGmUlZDcFyRYtXNr9s
nKzmenaf9vqxHIn4/cpliwlEMyw6gO0fia5F/HXdxepLFs/Jews/J7WG+ILk
sn2X1SFLvS69p+U8ltddNimcn7xrVbvJ81cxZmPYanqk3l1YutIJCR+2fInU
Kcv3LE+2GGi53It5vY1twtVtb0j8Xmaatje57lvea+uIrdeWY5B7WUy2Pez1
HVKDbMxYvxNMtj1RwTTruwsDV/sJVickdiZxS+akRdOz+Gb1MfJeG3u29lkd
ktjZ9oYWx8jzSewVDC/aF3nXix7c5rXtTWzts3M6ixVWC7I6WOnfyTNL/Kzi
luSOtS2xie1lrJZFamLpZy1G2Vhd6VrWhiT+7fOJrSz/sRys5AKxbZkDEi5q
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
4lMS82WHweas5WPX7y8//i9gI9hd
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "65643433669628134604"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.3550710678100586`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.6431965827941895`"}]}], "}"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.775513686267366*^9, {3.775513742821973*^9, 3.7755137546150846`*^9}},
 CellLabel->
  "Out[120]=",ExpressionUUID->"3402c7be-c000-47b5-aec6-4015d40830be"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"test4Data8kr1C16", " ", "=", " ", 
   RowBox[{"data8TC", "[", 
    RowBox[{"8", ",", "128", ",", "128"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"test4Data8kr1C16", "\[Rule]", 
   RowBox[{"netECA16", "[", 
    RowBox[{
     RowBox[{"Keys", "@", "test4Data8kr1C16"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<TopProbabilities\>\"", ",", "2"}], "}"}]}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.772719248559807*^9, 3.77271927548206*^9}, {
  3.772719324257593*^9, 3.772719331356277*^9}, {3.773124904129174*^9, 
  3.773124928357933*^9}, {3.7731251153026133`*^9, 3.7731251512280912`*^9}, {
  3.773125217467578*^9, 3.773125219418065*^9}, {3.773125271868342*^9, 
  3.773125271954652*^9}, {3.773212712732003*^9, 3.773212729006225*^9}, {
  3.773212818178605*^9, 3.773212830613299*^9}, {3.773212941366901*^9, 
  3.773212951689026*^9}, {3.773213005636443*^9, 3.773213014527096*^9}, {
  3.7732132566474*^9, 3.773213256876457*^9}, {3.773294401307526*^9, 
  3.773294423203759*^9}, {3.773348269707011*^9, 3.773348280477676*^9}, {
  3.7733514738060293`*^9, 3.773351485326448*^9}, {3.773356436954606*^9, 
  3.773356459506678*^9}, {3.775496533429831*^9, 3.7754965464457607`*^9}, {
  3.775513672786022*^9, 3.7755136842596073`*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"cc602dc5-80e5-442c-bb52-fe47c224e967"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzF3bGrft121fGLooh/gMEyYC8qhhi890fSRgjEwsbmBhIEg8JVMSmEYGOR
Jum1sDC9hSBYWmgpNikkKawjRLATJAkonBSTfL6M9bwW5+V5f+yzn7XXmnPM
McZca58f/4V/+PO/9Ke+973v/aM/94f/+fkf/tOf/tGPfvirf/vP/tH//OIP
f/mv/dVf/tN/+PHX/u/PH33+vf/5d7/92E/91g9+95//rR/8+X//n37w2z/5
b77/67/2o29f//26Zvks37vcZ3mWOiefmKtlzJ+YwzoPnxjbsnafuObTc/vp
XPtELC1x8l3my4JFr+L/E3lRY/vf/fqf+cH/+Lc/8e0n//P/ps//4L/9xLf/
9/Nf/uZPf/v9f/0Xvv2lv/Gz9Pnr7379ue5/fdd1jdxfvkt+9xNztYy5jkGe
vY7t1fy8WrtP/Cxx/motPj2GJZ5rnLx6xlfxf/3uq5j/dF5UrJA4+es/9/e+
/fff/Cvf/tX/+sd/rHb8xV/5y9//r//hp779zn/8F9//es3Xz1+v+fpZxn/9
rnzv1/vUa65//8Rcff33r9fLmOUZrzHIeGRsFT9lbHUermtefV7mTa5Z7vlq
DDLnEksSJ6/w5NWYa059glcseXHdpz6XzHn93b/zz37m2//5J3//22/8y186
7/l1/Nd3fb2P3PPV5+u7lrmSe9Y6eMXzNbZrPr9+Fgz5dCzVefhEPspcfZef
Ja6W9RXcqLVGvnf5XMdccaPiwKfzQnJZnuXKHRnDlTsyn5cHtfCBV/klz1Ln
qmJ4xaK6LqIxa/wLlsrv1nm4asQn8rR6FK8+V+wVz0Q42HVNrS/C8WqN/kQe
LTiwcAzJC+HPdd4u7L3mQbj313te8VC9F8HVC9Pk84V1F6+Quarxdt3/u/Qu
rjEvvEhiadG8ku9Lnl7j/LTvdMWYfK7eo/ixVzxc9UViu86n4EzNowUHXnkj
Uluveas8+Zo3wfbq4UjdXOr4tb5Lj2DxoCqHlLVe+jXVT6g8Z/G0ZR2v3116
BxV7RXcs9eXrz5Wbwu3r+GsNrd6m8EaZT6n71z2vPPoE7lUN/oqnfUJfL3Mr
dblef+X7ohdexbzgpOSdcO+ljyN+gvgqlUvUfoc8Y63vFXuv55LfretSxyk8
UOrIFWOVny94Jfly1bXr2Zd+SsW9hbe86vtU3SpzK/iw8OELb4UbXPmy+MaL
JhUues2/7E8Q3SQxUPtES/+letfLGGotEw14xarwyaqbZJySO1e9Fm5T9Y7k
bL1GxiC/+/V5az9FYmlZu+sZ6zjrHC68Szx2uX7pGUksVd940aSvdIdwmLo/
9rqn7H+uNV16eZ/Y9yKYtviNyz6KV3swKu8S7if4IHpnqeMS57WOyNwKB17q
+PXvkr/CFesciq4U3L5i5lovGb/0jOo8LL0A0VM1TuR6we3KVaqXuHxv1Y/L
vhfR44vf+Cf5Lp/6EQy8eFdda/H3RNtW30/8T7mm9qcEVyvnr16oXC+5KTWo
8nzBeRnPokek1l/f+6onUv2rK05kDiW2ZX5ecen6vVU/LhpZOJ6M+arLEv+f
+Cx5VPNr8feu+RF/6fL9ZF+NfJb+oOjQiu1Sr6v2rDxT8Ecwp/KEJbYX7+Kq
j8JPZG6rpyFaqfZW6v46WZdlD3mNmYWPXfkoWlLqfq1lEnuveP7Ct6sfXrWG
1FyZf6n1l5aRfXHVr5B92rJGtTe67OW+xrngsHja1Q+54kEws/LM655LjZDr
xTsVDla1p9Qs0R3V81w+y1pU/7xqhFrLag+o5qD4OZXvfUJrVD/tqlO17kg8
VN4rdUr6+HUfmngCsnel1oVal6/YW3p/0stYclO8RKkRi36pvorcv+qIT/g/
VUdcPE3qV+2pVc9Z4kfypfKces0rvrdojYo5go3iFYtmrHyg4o/k2oKr1cNc
OGrt5VWckWd/5V1f8Xx5ibJnrMabcKS696nWyuoFLf6PxOGyptWXru8vqvr0
et6Fq1SvdfEBrvkXrfEq36WuiSb6hBe6xKT4AHUMVx2sOPxKJy4a5BPxX+tX
rUcXL6o6VGqE+PxV20o9qjxHdIf0a6qOENxYMLzWuOoFvdJc8owS87X2Vayo
nqrorOoVS/2S5xVetOh60V+iAWsfrdaFa64q93vlOVRsr/5b/V3R1BUrajwv
8yM1ouqOyv/lXFt93qWfIs++1LW6f1XGKbz01T3r55oL8h6tuldTuLrEv2Bp
9QcqT6t9kOof1nwUvrp4DnXOBeelPl6/ez1vPUNx8YFaj+r8XOtyXS/7HKqm
Wzi2rFf1+gS7qocg2Ct7TurvCpbWe1aeWfsawnUFc64xV79o6TXUM02iLyo/
f6XdFh918RxqfZceQR1P9ayk51WxvXJU4T/CPa58FJ+n9lsrx156EFKbXmGC
4HBdr8ql5bmWs5l13uQZBeuk1tR1rOsl6y7nYWvv+/KNX2k3yV/Bz4o5FWOr
FlhwWHCycp7Fy6p6UPi/jEH4m/xUL6VibM13+VzPBcvaSb5f9xQdJLlTOa2s
xeKpLhqzviuyaq6a4wvPEZ9h8ZNFO1R8EH5S3y0jOVLnodYO4Xt1bIuXVWOy
5mn13j/9WfBQ8qjq8QXDBWPrWb+qoysfrrXg6/2XvWSveOArD7zWwao9JZYW
bik5ctXZui6C219/lvcaSS7X3JRaVt8DU+O5aiXxz69/r3/vaeH5y0/1uhee
I+tb/SvRzsKTF44tuVOfV/79VR9h4YG1LlRN9Iq/Lfqo+jnXHMr5uMpPlnNz
C0+oZ3KvmJQaXc+PV769/P0O0cjX98q8fZec/8qRhedU/JGau8ShfK57h2rs
SV24fl7tGVt4YJ3PK99r7+DTXrfUeuE51X+ovdf6vcLTJPYqr6vxJhxGtH/1
lMQzFD+wxr944J/m/JXzCM8RTKjnImWcwn+kBtVYrT5h5YfCFUWTCp686sFJ
TZf4lzlZvO6vP1LrBStqTsn7f6qv+Anf+xWvE99D4mHpIdbekOSv5FHF1eVd
NxLDFdOuMVdt+0qnSI27xlA1XeVyklOCCcJR63nG6uNV3bf4J9K7kWevZ0xq
L7t6KdUPkTxdcGa5T+V1lfNIHak8vOKVxNjyNx1qHazc8sK9qk8Xz3DpI8j3
LntT6z66WqcWT+CKgeVdTxLPtc7WWnn9bsWra94ujiH/Lmsnzy4xXDVa9Sdl
XZYzYpXX1Xf3Vb60eH2Cw3LP6xmljlcsWnTlkoNLDZK6JlxC/GrhqK/w+ZXW
rr5ojZNFg1fOLLxL9FddC8nZ+rvXs9Qz1BXrrnFWf1IwR86Iybq/8qkq71p6
aqIZ5R1N1xotuqxyJ6lNgodS7xbP/7u8T/XABZ+X85JVw1a+vcS8zPmrd+l8
wmeofk71suQZX+GY/L2GV9xe5uETZ3/qeCoGLhxDcHXhzwvuCQZKXsiYK0e6
tGHtvyz3qTF2xe0rHJPeotSdemahxrxw2joGyd/FZ6h1v3Lvay1e8Xmp3Qtv
rxrhwgrx0K77LGdVJCYXLnHNf43hVzgjuHfVuHr/GvOila7aIVix3Ec4Ye3r
LTj2qr9W87f22Zfxy3PJ+Tvpr13xsPDw+iyVO13rUjVX5cnV/6++WcXD2gdc
1qt61NUfW/YjVS9o0exVyy81dPFeqjas/37NocxzxbErxmp/rZ7xl2cRzJTx
1/eqSU2vOPMqDkWj1XFKnNf9hzV3Fp4ge8+Ek9ceU8Wfq34tvcUaM7VOVe4t
cyL4IzVLcENysGJ4/ZvItc9Y91JWbXKthfBYWYuFwyw+f9WGwt/E6xbOXO//
iqtLLAluVG5/5d3y9wEl32vfSvbALPxNYqauRY2Z6uFX/6HqL6nL4lfXPkUd
8yv+v9zz6+f6N0ekpldfqOKDYPXXMVz3EV+39lNqvnxC7y9+yMKlRT+K93Vd
L/5DrXHXHFb8vOL/GrOMs/rAdS0+oekWf7XWX3nG+lwyhprLEkuv3mMmvKjq
GrmP7JGTeBN8WLx94fZLXiw8f9H7Enuv4ueKgQu7hGNL7b7mSvbn1DkUbKm4
V3tzFUtlLcTPX3SEzNWi3+UZFw4j97k8JalltbcoWC1zUveNCO8SDK++a33e
xRuvdUc4T/UT6vX1fRf1HYziAVZ/45r/K8audZScvfiGzOGC26804MK9r7p5
zfni1VfedcWJ6HfRVsKXXv09xIrDsn+j9nFqHZT8Et5VzzBWv6juaa/euHg4
gj/Vj5I1uq6/YqzWYsGTegZK9gNcMVbP44i2qnl65Vr1LpZej/ANqVPX9y7v
ZxA+ILxr0U2VS8iYxVuTvBYvS7y7V5hZ+0qLdqseWs1xuf+rHko9ryqcSu4p
veOKM+JR176GaIEaz/K5+oe1JyLPLjlYeb7g5yuPSPib1PcFr175qDWelzyq
+Hb91LpQMVPmcOHDC1d89V4U4Xi1h1J9XfF8lnNG15iX99JU3SGxVL39a41k
r+n1LMJpr9+tuLTwSelTyxrJmGsNqvsrrnUXHF581BrPNd4qfsq+2eUM11IT
JQaWaypfqt7pwtmWXkydhxo/1Xuvvaqqreqe1eqZy2fxJAVzqv6q3ux32Vus
3lHVUOKf1POG1QOpGvaVH1j3TlcOsPBquafwnGsMy+clr8UPl8+VZwoPqXlU
PUzJwYW3SMzIXugl3pZYkjFf19ezJNWvEJx51VusvP0av5xxkHwRb2rp24qG
lf6IcDnhAMJnhD8sHpfg0qIF6hmZmu+Lb1D3FlaNUPVdfU+R5Gyt11fsCWer
Y6t17dVeowtnKnZdY65+hdTlxQuqMbCcjZJxvsLJqoXlu6QGCQ7L84q3UOdE
OKTUiMp7a6zKeKTWC08TfJZ9IxUrlj6O8P8ahzL/gvkSP9WLvu5ZPQTRuZJT
grFSQ+s8C6ZVzVg1vniY1bN6FYeVf9Z9AsJJBBsFe6tHUd8PIJ7Sdf/lXQSL
FyHfJfu3ZY3q2sl5FtFui38u83bxluvfBVeXMQgfqP24+oyVT77ixtWPrdfL
Ofqq8WtP4VV8Vj7/Kt9r/a0cvvKBa37q9wrnrOOsPVDJ34Vj1J7g8l4OqWWy
XtU/v+aq6m7hirJGMoY6nwvHq/hZ/b3KjWXeqqcncyj1sfKBWl9qfFaNUNdX
3gm2jKfy5IrVtQZV/Vv1bPWCqt6vHKPiW53n6/5Xjtd3REg9unJNdPfSx7me
a8Ec0dGV/9fadP2u8HypXzJvr/rXwiuW7118TsEBqad1fZd4lvHUd3a9qu/V
26katj579Z0ES6XfLbG3+KjL777SoaKDFp9fcFvGJnl9PUvlJEttqjruul72
Kkhu1r0QFeuua+p+DPGrq28sPnzdFyq4KvMpMVPzXe654Fh9dnmW+uwVfyqf
Fwx5NYbqB0psiw6termei689teqzLf6nvIO61qbFp6rrW+dt4RvCJ2u9Fk36
Cb5R+cyFA7IvVzTy9bzL/sBlH0v1OgQfavxczy5Y/coHkO+9NMIn/OSqWyse
ytoJj6pxtfR8q7aVuZK6f9WR+v4Z4fCv9JfMleB51TXCPa55kJ7Rwh+WvQEV
z8VjFE0qtez6XtkXJ/EmPZqldiz7chcfQDhS1VmVh1Te++q9cJ/mVPK8lVtW
bSsxINqkntuS+b/GU3O25p3gudR9iQ1Zi0WbVE613LNiwqs9sYsnWfcQin6p
/ETeTSFa5pV/IjxW5krGX9dOeIXkcuV4rziVYNorLJL6svjA1/ilDl5zW88/
Lvvx6t8Lk3lefNHFE1u0TP1c16LuS696v/YChCcsvrTEQOUeVdcvGkS02BJj
1YOqnOrrT30v3IVvrzjV0uuU2BDcXjSLjEG864VH1fdYLrlZdVb1RSuvfqVl
ls/Vq6xexIXJi+atOCx1Qb5L5nB5D0Ot+xJjr3hLzRGZt1f7UgQf6t87WHyb
es+K25KzVWMuOCZ+puSmaMnr+lpPqx/yygORXK57iurn6ltKbAjmVA9cYkN8
AMF50fgSG9UzkRpaPW3BClnT+i6sOk7B5xqfohlfcbBLXwguVV69eFzX8y77
Ra/7CG5XblPHU3Vl1eDVA6n8sz5vXSPx/Za/zVQ1Zu1RLpx5wYTlb/oseS05
JbEtPPz6d6nXdZ4rp1rek1a9oOohL9yj6rtag+p9BMeutaiYU322azyVe9Q+
l8yVxHPVJtXru9Zo8UxeedoXT67YUue59r/Em5I4qRpTxr/sIRceIlh6vVtD
5rnWxDqf4m2Kb1/3aC09FMEuiUnB9nqfGjOLzqr9JtE7S8wLjxJMq5ztur94
mNdaV459fa6edt2rf2GLPNc1zpojtT5WHl49wKo9BVvk3xePtGKjjO2az5q/
FQPrvhSp4zK2awxSLwS7Fv1e/RnBcOFyVavWPcP170ostVK8uMo/hf9XDSJ+
hXj+V52SuareqayL4HZ9Xrl+wd5lr2D1GRYut/RrJEfEr5DPtT7WfURyznF5
h+R1T+kx1fmv3Kn2C+rcitcn9Vpw+1WtlN+9xiO6oMaG4N6rvp74bFWPVP0u
46/cpr67cuFv1Z9c+jWiZ2suVN/s1RwKBxDuUeO/9rMEi67nWvq2dcxV59b6
W+e51ohXflStUzJX8lnmf4mNxR+7NEt9N2PtOwh3khgW3lh7jgt/q+9rWvo1
1fNZNH7lHksM1Hq3+Es1jyrnl/tL37bes+5tW/adCr69wvbFj5I5XM47X2Oo
NU5iQ3JQ8LD6nF+vWf6moTy7+CqLB1I53lWjxTeWa2Te6nwKR/3EHrYaA7WX
Jz6/7B+oGv8TdVa8jlf1q45fasQrTiW5XP0oOYcosSH1Ubz32m+q3t2V71XL
yx6MxQuqZwpEsyyxKjiz6K/K4WuOL3val/OqEquCD+I5SN+w+o3y/hyJh0/X
WcHAqsWu8YvuEE1UeeayJ7bi7fW8ixctOHnxPeFCwotqX6lqFtEdUusFr2pv
qGqKa05kPMs8VCxdsELy5XqW2itZOKrMp2jAuu5yzq56Wa/qbMWca87ruziq
Xqs8p/a2qpdbOWRd66phpZYJJ5H1WjRd5ZZV+1d9VNe69hEEo0SXyTxUDSs4
Kev+yne9sLdq4SUO6zqKZrz+vdZriY1aZ4UzyxiEH4rXUd+VJ7G6rG+tufIs
Mp9S08VrkrO91TMUjVNrsdRl+feapzWepVaK1yfjrDxTYri+X0u4/aueWvUb
q7cj46/n3OXfq1e5eDuVWwqfucYpHrjUINHgC8+p61vjv2oE2dsvfQrRUNW3
qT5A5SeL915jVfJR4ln42OLt12eUMcj19cyCaJlrPK/85AXTan2pdU3iSu5T
zyxInZWYrP5D9Txf6eXK1Wvdr9guGkEwU3RuHY/wq4oz13xWn6d675XPL9p/
4eS111DvL56J4IN43TWP6vkI8ZOvWlwxbfGKpdZLzAvnqbW+1nTJX9FTdWyC
k8teCOlHCA7LmOX6yocrH6vfVTmzjE3qnXCb6r3XvcTVu6hzWN/DsGj2q6YL
/6+ec/XrpN5J7izvWBCvUuZQanrVR1J/l55UvWf1BK5aI/eX9+ZdNajy2JrX
lW8v+8QkTkSPCLZUzixconKAGsNL72DZ/yacYcF8efYLD6UOSn9k2f8mWvUa
c62bn8ip2ouU64VjXNj1CUyTe9Ycr1pY6vsSP3IfeVe56F/JWeG91dOo2rDG
f60Xohmv+axebq1fy/63hSdUD004zyvtIPMsXF18nld9hzr/cs2r9wzUWK3a
ZMG0RVdWj/FVPAgvEo4qWqbuUZecXbiuzGfdX3TlVH0XU/VOxde9NOBSvyrX
kl6/8ARZ95rXNU8Xz1zGX/NLPIfKKyQOl1yrnGq5p8R2nfO6/02wrvJ2iYfr
uWRfX40fqUGLHhTutPCxC7uuMVyYtnCzqv0FW4QLSf2q/rzkjuC29MUqV6l5
KrG0nJ1fzsbWvcSv/MD6WXKk7iOVOZFYrftLZT4XL1Q4c91fsfhI4h/WnlE9
gyw1+uK6dQ+DcN16PlFqa9W/Enu1hlZ/tY5f+pLVl6jnMsT/qTqlxn999tqD
EC7xygOpfq/o1sUPF0++3lN4gjzj9bvVH5PcrPpX6l09K7F4SlLTpS7UfLyu
X/hk/XfRDrUu1LmqvQDRKaIfpaYsmqj2HepcLXsYav+r+vavfKdXPmHVa5XT
1nmofYRrTa88rRq2+nU1bpdejJyNXfSIYL70CCSu6v2FT0pdvnKnauEab1LX
an0Xr0Pm6sqLxW+5nlf4quDkgjOvepSVG1ffqf7uglfV1xWeUOtmrUF1DKKD
hOPJM1Y8FH71iXr6ihuIx1i5dI3Dyidr7ajxIPqx9rKrtqoexfUs4rcsdVyw
7tU7AarnsHBdiY0azzXmrzEI763vOnvFmeWeEm9XDFQ9++rcVj3jLD55raev
uEHln9d6SQ2q+9Vrn6jmkbwvpeZv3VdQP4u+EE5bzwdJbgoGSl9buE39rmt+
pFYuZ6mWtZbxV+9IsLTWoOsayffrPtJ/lPNigsmCjVJrru+tnluty5UbLGu6
+LF1j0HtxUgeLZ6eYKNogWX/ldyzepKXByt1XHJcNMLX+wvWyXdVL1f+Xfzq
5XPtWSxcRWpl/Vy96KqhFk23+Lqyp73q8U9rT/HGZU2X82JSN6t+r/7b9Vxy
f4lD2Qsn9xRcfTUni8avtbXm8jXO+i4OqWXyI3Xn4q7178FJHNa9Q5Vz1ve5
VS4hY6i8peZI1UcytxIzUgcX7SneuPBJ8Y1lbuWsunASOX8hdeqa83o+RWJY
NNEVe9ezL3Pyqi8mtbXW00sLSA5e61jXrmKjPEvFumUP/6uer9TQ2uNYrhc/
pHo79Qy7aFgZc31G0Z6Vq8i6C3YtPaOlD7j4M9fnhTNUPFn2O73q030dv/TF
JDZqPF8xLBzmWgvBq09cf/1IDZJ5qNy+9nxr7a58uGpVidsL9z5xvvVaF1n3
2ida8PziKpJfr7wpwRnR8pU7ybpc7yG5anrVU9f31v1+i+641kW0ZI0H4T9X
7NXvrfXu/9dneS7xbCvvqvi2nEUV7SM6tHrRgp/Xs9f3jYgnI3smZV1q/1S4
Su25yP1rP+gTfQHBSYmZV7pGtGflddW/qrlc+3fCbS7eUmNevP1P+PzLT/U9
hHtIPa39heUsauXtMj/Vi5b5vGJV/E/x4q6x1feJyTxcuCG4JGt9xXONVXl2
ibELN2quLZxNdI3w4Vf3FC4n81zrgniedd/R9VyXtylc5ZXPv3yuXqLwH8Ht
yoelzyv3Ec9Q4nbxi6p+F6yT+iVrJ76xXF/Xuuov8QdknHWNlpola1o5W93b
Vr2O5Z41foQn1PFUL7qOsz575Z+f+Kl97bp/aeEJr3x4yeWlR1PxSnDpumY5
DyLcVbys6hMufEPyQrCi8sPKhZa+QJ23ym1E90n8V72/eMLXust6Ve+l/m7V
4KJflhhYYkbO+kn9kjWS8VSdXuvUhaXCE8TbkbitfRDBPeEb4vnI3jCJsboX
bumpVV5xXVP7qsKfJackVq/frTrliv+qc+V5F20uMXb9bbvaWxcMFy4t3GPJ
neWn5o6cX1v6U3Vdao1b8mXxbYQ7XWtUzxrXmH+V17VPcXHv657SU6s859Nr
d/VMpS8gvZtPeFySOxe+vdqfX+NQNILguWil2mescSi5s/QmXtWgyudrbopO
r/Eper/WdPndqrMuvlS5iuDnktfV47rmpO7Rleuv7/r02l3X13PKggl1v71c
L/ggPU2plcueOsGEqmUkx5e8kFojdfOKB8GuheNd81N5UY0ZWTvBB6lBEksV
Y8XnFAwRfBbPRObtWqO6poKli/aXPkX1POvaVd268C7BN8Hwqvvk+tp/lziR
2v3KL72e8fKUJC8EDysGLj3W6pPL+lackfiUeXvlBdX9JIuWrPEsOmXxyetz
LRqznk2uHqy8T6COeTnzXn024WnCaWudvWJJar3UuNqLF45X/+ZU1SbVQ64e
Y8XAep/FP69ed/USq1/xCU9DOFiN7UX7LHFb/clrDJU7vcKBqsHFM5f+QuVp
NbZl3uoeoaX3LXO47Oe8MKfGtsRS9XyumJfzfa9q2aK5an1c8OGVzqr3/0Td
Wc7Y1h6BrMul66V2i+a6uKvwluVzxQHBeZnDy7Oq50CXHkr1EmWf2KXZ5T7V
TxP8qXt1xJ+8YkBq04JF4muJ1pAYkPP4gi3yXk3xAcRHWnSW8KuFqy91RzyH
2t+v+zeE60otq5xHzm/Wn4oDEqsSM/VZLgwRHSRjED6/nFG95qTyIsH5RRNJ
/r7SU6Kdaw7KulQ/VnSc7AGo/aaKUZIvgjmX7yp87Hr2pe5I7ghPW3qslcMI
5nyiz1VrqPgq8nPly4XVUjcXn0T8eeEe8lxVj9f3LwkOv9Lj8rvVi1g8CvG+
ZE9RrbMX5lQdV3WKaMnaP6oeVM0L0aRX7tT1qucuZa3l7F715Cunrfmy6LKl
Hyq+TdVBgif1nUuCt6/qhXBFwWrR6YLhEm/iV1w/1auUWF3+Vpf0mETbSk0R
Lio4UPs74iG88rKqPpUa+mp/44VvFT8r1gmeLP3uGieiPUV3VO0g9VfuL9xD
5lPuL/lb64XU/crJr+8S7iQexaueiHCSelaualvxE668uHCj6qza969eovAZ
qbkSJ9c4q1df/c9lr2nN8Ve1rPKNyqXFZxBf64p5GVvVMtVnuO4pPmrFiqWv
Idi+nEOUea5+Y+2JS09EOIlgzlVram+0xomMv+pByZdrXcQjlTMLwhOWZ6/e
jmjkyr2FA1Qut9Sy6jtVXifrKxxG7lNzauEM17qIppM+gnitgsPVW5D4qTgj
3Lvm9cJvqy963fOKKzlfU88/LmtX65ecVZH4XDhtnZ8ak9XjehXnS99h6VPU
2JNaIFxX+Jv4SNXTrvxZrrk4jOCtxIzwvaV2y99EePUOgWtuBUslHiq/rfi8
6FypxRW3K7ZLjtQzF1VHC5+pZ4cv7ldjsp5tqX3qqjcXvSYxX2OvnlG9xiZ7
DK7x1B6o8JDq51TOI3mxjLlilNQU8QEqR6qfpS4veS3PXj0l4f8S29Xjqvku
87lgzqt8qR5LHXPlzNXbkbl9pdeEb0utr7FXvQXh/BKrtVfyyhup3kvtXdYx
L1yicgDJu6VfUPO6YsVVywS3r2eRvpX0uGUdX9U4wbGKOa/ypXIzmZPqJ9RY
FY4kOVX1mvDqiqU1Hq7frXuxFq549Uqqj32NX84FC27I/qI6J/V5BatrL0bG
UNdiqcWCFcLnK++tHuDSC6g1TtaiYs41tpovUhOFS9SeSM3NiqvX9RcG1piR
+yxcbvHVK1e87lPXWvJaNJ28Y3Dx8yW/JJcXv67mXa07tY9wfZfU4ooVlYvW
PTnVuxa8WviweBpXPCx6QTBZnle8jqqbKn4uWCfcaek31Xr6CV9dYnvR7+KZ
yL9L7gtuLzxE8qt6XIIP9bxYjX+JN/n3rz91n/+y16v2mmXv1rLWFcdqvav7
byufqc/+itssPYh6NlbWqOKP8FipC9VLWTCnemuvYkPOpEh//5rDuvfsVU38
OlfLfmDJ2cVnqJ5VzffKrz7xvoL67Ivn/Mr3qxpEvAXhMxUTZE7k+pprVx0U
XSO5c2F73QMp8yBYV2uNYI7wh3rm9BNxUrXeglH1ua7YqPeUGi1n8ZZcEwxZ
tNii5Wvtk/FUjio9StFQC5e7nlHyWvo7VcMuPqHwHOGTkkcyV9f8LLq7cpsr
ZpZz61VfLNrhVZzUPb0Vq+Vn8UirJylrJ/tv6z0lL5aeeK19Fy+6/r3q/eq/
CYYsPUTJqVe8peLDpWHr3ywTbla5kNSI2qe4fndZL4kr2Zd18cxlD2rd0yIc
Y4kTmWfh2K8wSnBSeq/iR135UjFq8SUq/6zjX7wsiYG67jUvxCcUzSW9v5oj
dZ7FY5F/X3BeMFx414WlVTsse/AqFkmOyzVyPrfGhvRWrud9pYUXPlDxUDhe
jeGqDev5/YpXr/jndX/xYOWcy3IGQda95kWtI1UXyDzX35V+uuBAzYvq4VSv
puKJ+KLVq5Hrq36U9RJvqr4/R7yjxROrWrjq1ld+keDw4otKzNSzfhem1XfC
1PmpeqH2ahffUvprUr+qFvt6zfI3RKoO/fojHp3MrWgWqVOVb9R9X5VjVy2w
cMvKn69YXd75Uz1VyccrR8T3rhxY5lZyUzzzer7g63fVvx9U47nirXDpymeq
XpB3ZlauWN8PU3mdjHM5P1tzVmK+nvWrHL7y4ep3LT5A1SyvfKfaaxPeIrEn
96w4U7l31Z7CRaufv/hOS02v51yqRpC1W/yHWqPFS5czyLJGdY+BjP8TvULR
MvLOf8FMydmqNz8xn1UnCgbK2GQtLh5YfSfBWKm/1Z+R+lJxQPaGVR0kcb6c
6xFdL3OynClYPPzlDGz1Uuq7L+R9IOIvST+u7v2QWK37DK+xSa5V3ig6dPG+
llh9NZ/iTdU4rzqr9gqvGKjer/BbeV7RTRfeXp/l79ZdXK4+b+Wli68u3EB4
hcTG4uHL3Mo1y98fkbwQXXA979L3kXmocVK5uuTa8rPwatFTVSMvuVbXunq8
wrGl1lSMXTh/9feqNy7fW3njJ2pB5R6iKcRLr5pd4nDpDUmfZfF5hL8Jd6q+
Ze3lCdZJ/NdaXzHk1d5g+V7h1a9qR8WfyhWv+1w/tX5VL136hsIxpFZW7SA6
q/qiwqMEP5daIFxU1lr6s0s/VMYm/HyprYtXLzEpdUf47cLfBOuuz3VflnhK
kkcyD/V6WTvhn7V2LPi5+KhSWwWvxLuoeSd1Z9kvVLl31VaV/0sdWfiM+B6V
+wnnkXtKzlaef92n7vGrXn3lXbJGtTYJf6s888qX6j9XvlG53yf4/1XLqj92
XS+xdM15rYOV/4u/KvW6znn9XHHmGoOsxSufZ4nPygMFcySXlzWSHnrlzKJ3
6hhE39U+l/DnWn8rLxXeW88XLL2emqdXfRQcq/z/ehapa6ILpJ6+wo26J18w
7cJMqXeLppacWvyHuge7+jwLni9923o2Tcb/ygNZ+Pzioy69yMrx6txW70X8
VYn/en3l7TVPRQNWrVQ/V026+AmveGD1RqrndsVY1UGiqZd3FlVO9aoPK5q3
9p2rz3Nds/g/1feTORfcqHxeegpVn0qcLPyq6m6pxcv5l6r7hKvX/BVskXmr
P5XDfP1dwbFP8MClN13/lp9gWo1b4aKi3aqnIbrmlXe67Ht5xWEES5deleBJ
3btb+bzsnxd9V/GncomKz7UXUOvOovsWTKt8qdap6pNUP0TmrZ7fEcyRd9fI
2BY++el3j1RNVHN8ifO6jguHXDiM1EHJTeE2l16TOayxsaxd/S6pBXIWoOLz
0vMSz2TRMlW7VZ31yp+8crC+m0LyTsZTeyviRy358urzq3ePSGzUelQ9+Vq/
qgdbfTwZW+3TXfMpNUvm5BXfkLNU9btqHF7zXPtr1/gXvVC1f/V7Fz72invX
XkytC4Iz9V0i13gWjBIvqL7HqXJLiav67hHhXeIbyHxWff0qZ1/5eFfNFa9V
enO137H4w7J2nz5rUNex+sOyX+jr+r7qeQnOX/FQeUv1IZd39y28VzBZcnPJ
i4pRV8zXmlvxs/ot4i3Lu1au77pyUDxAqV/VR5KcFT0rPl7lCVL3hQNUj0W8
F/muV9cIz6/+lXxX1QVVoy01utZKwZBrzEu/QPajCu+9xiN5IXskFt9SfHuJ
fxm/cJtr3mpdvsYg5/fl2aX2SV24nr3qixrn0iuvPamqlSovqlhaucSrzxLz
y1meyj2EL1UuV2uK1CwZcx2/XFO56HL/On6JH8mLCyflTIr0Dq5rqh4Uv6Lu
RZfzNVd81n6u1KOa7+LDL+9tqBxMYlj8CuGodX2FE77yZKoPI9/7Sl+Ir145
eR2/+Gm1FyDjr+slfHvhXYJdEgPSCxBucD1jHX89h1h1h+BtrZuCjZWn1XyR
eRCfZInzBVuqxyUx9geRF8Eq
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "36507401174866450102"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "\[Rule]", "0.24423934519290924`"}], ",", 
      RowBox[{"4", "\[Rule]", "0.7557603716850281`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzN3T3LdetVxfGjQRFSCIq9FhY2EiOoEfLcCELKQISUCUdIqmgggiaFaGFl
oaWNIH6CFCGQIo2VZcoUaWw8IvgdNAGL3Qz4/ZnryUnxHPbZrL3W9TJfxhxz
XOv+jT/9+he++vMffPDBX/zSj//zhQ//6o++8Y0Pv/Unv/iT//nKh1/73U9/
7RM//vi3///vJ5+//8Pffvvyd/7y7Xf+9Z/fvX7+44/+591H//7377790Vc+
e/m87l+fta6X+8uz5P6X+V7m+NNcn7oOl/tfxvDUnl7m/tSeflx+8bPg4x+X
fb7vvXgqLj1lh+s+n/q7X3j7j7/+h3e/9r1ff/u3//25ty/+4x+8/ednv/X2
es2f/+j33sq/19++3rM+a63V62/X/eVZcv91jcz3MkdZ/6fWZ63VGv/l/pcx
yNgua1LvX/elju19+MXPgo/Lb9+Hfdbx1L24zOV9xAcZ5zc/8YN3v/wvf/j2
nc99fd7z2//1N2//9N9/9vZb3/2Vef91zes95VlrrV7v/5rLXu/5es3r59dn
vX6/7r8+r7G9jn/lXJmjzF3GL+vzagOv379eL1hC7i+f1xh+8JnPvf3q57/0
7vd/85Nvr59fx3BZk/W53l/sRMZWbabO8ePy8eqbT9mn2MxlL9Y6yFxqDBQb
qPu16oLXdRN/WT5b67UVTyTOSx5c91x2K+N5vf+Kb6/XvP62xkP5LLlMfEHs
an1+ncuK4eIXMp66JiuGyPX1WbKny37WHMUv1vc/TR9fc1n/JP+KPUgMFz9d
36/5rvVcNrZyU40PFUcJ17H2SNZW6g7BIctH6vXyvcQxuc+q0Z6KFYLDZf2l
zhW/kzwu/l73evmpYOAaP+v6S56VuHex57U+gpcuPi61yetvBZ+LfYqdr+uF
k38d8+sc5bkSz2WO6/q1bsIpCcYT/u1Sj7zawLKxlVvX9Qt/CiZZ67n2Ufoy
EnMq5lm/XfsudbHkkXVPedbai7VftcaRnCvx81JbSexaa7VygdjzWrc1ttdr
Lj4udr7qjuX7YgNrr9e6rd+uuQvHu3xfbEN8cMUcyaGv36+5CBatmK3i2OpT
soZS071ev3K6PHf9VnKf5HfpVa25vH6WtVq2Lfz2ikWVo1s5peb9FaMEg9Wc
WOug13UT/CZzFwywrl9xUnKl8BKS71YsWv4i/LbwXcvOV25a/r7WU/B25RnE
1+RZEmOlfnkfGGl9ljpa+GTJQRLDV9yoeExquhWHKyZZ2E/iUrWZGg/XGGov
uOLMFUOqdk5qyWW3EkMW9pD+4Pp+5Yvq7xJbJP5LzBc8JtyCYAbZ07X+i4cX
vnGtedXACE8u2LX2YipGWuu57F/2VDCP2G2tqWvtLzyJ4CWJ/8u2F+asesha
91XdiNQUlUcSPmSt8/JrWSvJL4ITLjYsebDykDI24TcEy9U4JphBepdSs9T+
4LLn+lypASWfij1LLpb9lR6Q8OcV2y+fWusm6yn1o/Akwoes8Uuclzy7xilY
q9aAoruoeXmtm2Dv9VuZ11rnqvVdeW19X/u2olFZv11rJXZ+yU1inxLPq63W
fqL0ByuWkF5A5TSqPdc+cp2XzEVwYOW7Vnxb9xd9iOQOwYHLT2s/S3Rxqzap
c5HaRGql6neVa5X8Ij4u9i94WHDRitULg4ltV82q5CbZl5qbZO6XGCj2IJzt
wlcSS2X9K28s8byeR1trLuO5aJgrz7BibOU9qm5t+VrFgcu/JI6tmC/7InWK
9MWkT73mVXu1YleiR6r4quo6JC7VsxKSjy49xIrNqrZK7KHizPeBIaW/XP1F
8JXUSsLZXs7pS0wQn5L9FT2P7KnoXgRLCEZd31906YKrRc9TeVTB7TK2ZfN1
HdY4Jc6IxlvWs/KKl15n1SOJDVeNq/Cryy+kdyn9guVfsi9i/7VXJTYpWF10
AsLFyT5e3rVSe+ISQ5atrr2oeh7RMUo+Xd9fYleNCYJ76/tGhDdYtYzoS2Xu
on9bvlDtYWEwqdGEw6k1e8X8yxeWv6y1qlrutRfyLNF7CJaWZ0n/aF1/qREE
D0uNU/V7MnfRa4lebv1W9HKiiV33X/YmWHSNX3oxK+Zf+vjLvyQmrDHIfkmc
vOg9KhYSnbNg1zWeZW+CySUXr7i09rqef1mxTp4l/ZTla9LPWjmxasNW7BUf
kRp25XHZx6o3EDwvuFo02Ctui38JPql1kGBFea74hWBRqUFqzhWOV2Jy5WSk
lyEYSXJo5UOkphCMJ/xq7bHKOYK1JrW/LLGxxgTB2NLTF4xa62WJRcIVV95G
dEqCjQW3iD3UukD2V84OrNpZuDLJsxWfSB4X7kj2a81F7Ef6GnVeUgsIryIc
u8xdajrpp9R3nNZem3DRa+8ED0vulngomquqQZU+nfCQwmvVeu2CFaUXINhe
4obkaMlHVYdTeyhyzmiNueLkqkWUcxBr/LVPWvlkwfNibzIv6U1UnFl9pGqB
JEaJ30kvQPxO9AbCBS17Fpwj/it2K34qXGXFS/V8gcQZ0bMJ91VtQDC/xN76
3mzBaWucwg8su73E/4q3a55a8VZy+rKBlbNqXSl+J3u6/Fp6T6LFqvWU4BbB
eFLPXnhjySOiKVr3XHmt5oIaJwUDSJ/xUtdUTc7yr6rFeir3LfuRml2wq9Q+
NTfVvphw2mtP13wl/gvGFr3Qmrtg/rUXtRdc60oZj9Qm4rM150q+EE5AMLzU
BWtf5Jym6CWknpI6Rfh86ZuIzax/gp0q5r/UNTUvCz5ZWE56DZL71ue1X2sM
4psLi0r9UnWtlfMXjkVwr/BUgjMv/In0mmsvWLQ9657yXgjJ7zXOCAdeMZ5g
11pTV/2/+PjCRTWmSZwRzCa5UuxBcJf8dmEhicnCLQsGXntd7VNii8TAqkkW
vk7WXHKo9GIEX4l+Un5bsaXsqexdxbqrr7fus8a8fFb4WOFq1tiW/1a9k9TL
9czUGpvET+E0hEuUml00/6JDqOssOivhEGpdL9j7Kb9e4xd/udRoUlcKhyM8
w4UTq5yw+J3U11U7KjGtajZqr1nqEfHxlSulv7nW54Kf5blSR4h+oMYH2S/h
YWSOVTclPb7122U/whlKPBHfEU1m5fklj6w1kRpW/FrOIq21klpV6rKqUZS6
T2Km3Ocpfq/qoIQ3rtrU5b9Sw0r/q/IhEivWvktMlrxzye+Sa1YukFws/EDl
tyWnVK71gnlqTb3ygmiZxPcvde5FNyjxob4nX3TvwhGJbay1XTl07anw1VVv
Jn5XtXwS02rMWddX3eDyHTnXf+nhyjUrp1SOWuKMaL1qzqp1utSntR6Rmqjq
ZmteW/WpYB6JycIjyTsQpHew7nnBAOLL4psXXWXlHIQ/r2cQxL8kvtVzncvf
pZaRfrr0HJeNLfwm8VY0QlVTLTnl8u6d5VOCQ9aYxQ6FI71wCJUrqxqbmteW
bYi9VX5p1QJiwyt+rr0WTL7ig9TLtVci+yW6BckFEjMrN7vGKXj1wj+IDdSe
puATyd2XXrCcSRGtoOiNV06svTPhfi+/lZqr4kypQ1fcWPlofX/hAQSXCp6/
xOSK8UTbXDk6+RsEoq+TmFl9U+J/PRsivVrBJ4Jt6vpIHSoY+MLnX+J5xUiC
dZ86NyG4QrQoFduvtRWeoc6x/naNWTCDYJ6K8ao2fj1X1kew8do7uUbsav1W
4tiFC5W6tb5LWTDJ8vGnMInMt+6L/LbOseLJ5Rfrs+R3mdeFyxLtkNRT4suX
2kq0i6K/Wr2P9dz6nlvhQ8Sv1x5JjS/ciMRVwYc1BkouFhwi8UfwVX0XkOQ4
qYvFR6pW7bKP9YxnxSTVTmoOlRpf5rjW51JrC/9TMa3UmFV7I3ipngMVbcOK
XdIjkP0SDl/0GKKdk96E4HDJy5Ir5XvhkKUuW3tR9XLCy611q/FcYqacXao4
cNl25YqXDcs+Sl/7KU2U2Mka58qhEpfEZoRzrvzhRaMi93lKvyS5XnQsta4X
LZPw5MLbS40g/dM19+W/ktPlfK70/SvvceG0pXdQuR3ZuxV7JReLdqWewZHz
y7X/WOt0+Sw9JtEwV/9az1r+W7UWy7Yr31L1A7Vee+r7p/RL9Sy2xDGxh6pL
qb2MlV/kfE3tTdR8t2JC5RMkXwvPVnuyFafVekSwgexF1SoIL7ew5codl7Ng
EuukBpH8Ijh8/Vv+teZYdYCy/pIvJA+ua6Smq7X2Rc9z0ciJ/VQOVnKx3FO4
l0teq/esWGvZpIxtPbf6tWhEa/9acodwDsL/XLCBPEv2a30v57Ykh4o2rM5d
+C7JQXVegm1EEyW1m6xbrRnX58v5cbHD+r1oHqrGYNnPwpNSi1U96pp75Vol
B4k9SF6rmjfx5bU+sqeyPmuvhZuV/RVcV31f4knt0QgPIPVjzTXLF5ZtLL8T
HbVws1I3Xc7QLV+WWkkwgNSPFz582XzFkKLbuWiH1hqKxr6u+dq7i5ZYfLzy
dVLLVzwvuUz0BnImUeLPwlRy1lLWefmL6ChqP056u9JzufAMkq9FL1pr1VVf
VK5GeDPRj4mtVu6o8lq1RpZ+xIXPl7pMbFW4/bUOVfsqOVp4M8kva76y7+s+
F75ObEw0dZWXEy2EcNRVj3Hpt9Y+iPSkBAfWeFLfISC1RuWuX8e26mXR4Al/
K/XCsv+1X9IblVqsxpZL/2hdI7lA6vQVA4UPWeO8nPVYY6tnEKR2q/tVOXzp
A64xX/jwes5r5Q7R0qy9W/ev8xU+v+6X4OTK81+4+svY1n6JzkTqUNFfLd+U
MUt8q/eRNVzzlTV8ah8r11F1yxLzJQet+4j9SB0q9ZrUcVVbK/tVdeyCH5a/
XPifhWHW2kpfT3Tdaw0rFyRzrxyF1GiSd2qNXDnGp7i72vN9Ss+8fF+4PsnX
lce7YDaJjRUrLl+rvETFBms8q04XbCNaTRmzXCM6iqqNr/WycGui7xVtv9SV
gu1r3Sq4rmrypU5cz5JaqdbCa82FV192u/a0coxSW63rK+cp+KS+s2iN7aKl
Wc+tHI5gNonVEovEj5aPyH5JfqkxWWxD6pFau4mtXrDcWueaR0TDvMZ80ZOI
naz8svJ75UYW/yxxQHxT+uYViwo+rJrPZTOVL7qclbvoosXmq25Q4onkuAvP
v+xNrpfzhhKXqt5s+Wbdu7Uv4vuV75V1WHtauWvhtRaWE3woOGqtv/j7GqfE
vTV+mUvVAAuvJblYbEk4TOnvCI5aMaHGHNnHeo5AcF3lG9ceLXtY+yJnzQRb
rrHV8z7C84tWXPa94lipPSVWSO1TsYHkiLVWwn+KPVctt6y58KsXG1vxWerK
lY8kPshv1/drv1bPVDS3kncEY1dtoXD+C79V/ufC30qOlvwr/iv5rvaJpGex
YmbVXUttWzHn2pfKka45Ct675CnpL69aW9ZK5lJ7c7U2FD5f9qJq+KuNLT+6
9N1qP0Wwx4o/8i4v6alV3V3FeNLTWXFJdIa1b7LypoxN+uDiy3I2R2pGiYG1
fhQfX7+9aBFrT1NihWhLpC4Tf1m+IDywaPlEYy81i2CkdX95D4lgQrEN4eLq
WYnK1cia1HgrmLDi1VpDiT2v38rYBB+uXuqKe1ITiU9JDbvGVjnDlSsF21TM
KTFQsMTlfeC1Ry+1vOTf2mcXHlswgNT19b1qtXe2+giVS6k61YoN1tpWTlX2
Tmx+XVPxQO0LSM0o5xoqLlprK73OenZP9Ma17yZrK/hkjVPWao2zvru1cgiX
3rfcR3qFwveKfYpfLztZtle5YsHtUpcJP7zyjnDywsPIXOSsjdiD6DHk/Nda
hwv/vGp56UFLHpd/giWWfa6YKTxVrXFWvKo1yLpnxZP1fI18L2u+4vOal9Q1
a2yXekTyl+QO8SnB5xXDC6e6YqDwXZUrkFx8icNSi0ksqpzS2kexc8EkF258
7e+6f40JlY+tPIDElvVZdCw1jywfF36v9lirrV74jVoLLD+V3sElLknNKGdD
ZE9rfVrXfNle5eGlHyf5S/JaHY/wGGuvJQ5LDSKYR8601veaVhy18siKS7WW
F63LirF1bBK3JTetPLKeK++rXDFKdF/CB0pslDGs5z51Zl+0DeKbwntLL1X4
zPXclX/lPI5wSmtNao9J9kt4eHlWnW/NL7W2Es2baFwrHr7wb9LnknPKFQ88
xSUK37L2ourW1lpJ3Ks5VM6FSc9adF+S76S+W/u48proXsTOBUdJ/K+cao11
YidS70tds/ZOOGTJvxKHax9E3uUlNU71kWUDUlvJfkmuX2uyxlbzr9QUwqWL
78s19YxV5dOkLhA8ttZn2Zvo0pfP1nxRezFVwyz657rOojWt5xald1C52Wqf
EuvWOsgarvWp57kqJr/UXKs2FNu7aBEl18iZmrWG4r/LNuQa+a3UjGuPat9K
OH/5XPssUotJLbN8RP5WrNTLov2+1Lnim6IJWXstWFQ+15pCfOfSG1r3Wess
eEByx8KxovMUjbTET7Ex6Vms/RK/fkrHKFogwfm1bysxqq6nrLPwh7Uuu2Ct
GqOqVmr5yOv9hbeRPaq1xrK9qsGTfvHyC4nPgi3lfMryX9FLVz3Dpc8iviZn
xoU3lnGu51ZepeasqokSLaLUFMtmJEYJByWxXex2fb7EKJmjaOEWzqxnQyqf
LFhLfHCNs+Zl4T+XjUmvv8bqNX7B5LIvywZkvlWrWddWei4Vz1fN2LJDiV2V
/xffl/0VflhqfKlVL3lc+o9rvnKuU/JjPWd90VuKVq32CNY/wU7C8VZOaa1D
jefL3iSuCjYQXlT0S9JTq7Yt9bI8V/ixyudIHpGcWHXaax/ltzU/rrWVd2us
sQn/v+4jfcBae0r8qZxn1f9U3L7uKbWhxGTpPQm3IHYl85V3dyyfEn5VfEFq
FtG2STwXrlVqpVrvy99dqpiq4q7KAyz/FZustY/Y8Brnins1Rl20r6u2XZyM
5MeqZ6s2vOYi/rLWTfDb8mVZqzU2wTbCkwiuq/644mft9Qh/Lly9YIDaCxPc
W+tr8VOpBYTfk32/+Oy6v+QjOf9SaxOxgdqPE72BxIFaGwrml9grvaqVQ4V3
EtsWzkR6YdU35ZyaaOqWbVTsJPFceg3rPvLuLIk/olteviz5VPgxObskPI/w
mRV/Cj682FLtP4qPrHEKxyIxQeKDxBM547zmUnvxl1xZNZBV+1f5f4k5okkW
/kRse9ltxSqSC0Sbt/Kd2Ib07ldskXhedYO1Ny0xXGxJOA2Zo2AnyWsLIy0/
rbXt0o1UXZzoisXOJXfLNRJ/RFtb9b3r/sJ9VS2WvHNGeg3COQsHvvZF8Oqy
c6lba4wSzmrlVonDdT0r/yyxRXrQ0qtd+7j2WjB5jZPiXxJjZc0v5wol9spe
S89orX/V4MlcBPMsDafUa8LVyGeJ7bXeWXFJcuKFj5L9FU5GcE61c4mTtY9z
4f8r1y081ZpLxTZiVxIzZWzS35ce4orPouEUnlPOsEgMrDhBctD6rehzar9Y
YrJgNvmt8NLCHwq+kt6E9DXE92XMy4+kLpDaUGp54aPk7zqJlrJiHrFzWf+V
ly94TGys6jqEv6ochdQywl3UswAr5lTNjOQjyVPCJwj2XuOs/RTBJ7LvlS+t
/QI5xy1aJuGCli9Ijq58rOxvzXdSzwpWqe9cqrzQ2mvJiRKvpPZf9i/+Lnu6
6pGn9K4X3C6+tjCz1JiSm1ZuFa2m+Muao9ie9CUlr8mYhVOqvbNlk8L1resl
VgtGrXiy9h+XD1bOf61hzb/CbVYdyFM91srJyJqsMQt2qj0meQdCzXHLNmTu
a22rjQmerLhd3iMnY7hw7MKdSpy86EgFE0oekVxW9TzSk611xJqLrHnNERIH
pAe0/F3ydY1XoqOr2PXSk5U6pfaAJK6umqLy+aJrkjWXGkdySu05rv2SmLbm
XnV0y3dkr+VvClRNXe2zCydcNWZVw1kxhuiBpWchOb1ykuL7Ym+C/2vMqf4i
vrny7Lq/1GUSwysek5674BDxqVpzVQyw7FzuL/hB8uNaK9kv8XHx39Wvr9rF
yjlIjqjrv2K+8EKi2RD8LOsp9cviZGRf1nqumClrsnLcuqfMUdZfsJ+sw7KT
Wide9rdyERLzJQ8K3hAMs64XrFKxq8xlxSLpy1T+p2qQpFYV25A6veoWKp9Q
+b1L/32tj/DD4i/SDxK8Kn3DS69KOJPljyvmC5ao55IEx8r7RQWvVv3/8peq
96j1vuSUyg1KvpO4LVhU1nmtueiKF3aVuay1krwvOHntkYxTep3SR66xq+o0
pE9RayuJJ6Jdkf5sHcO6Z+XSBTPUuC25T/KpxDfhitcaypk4yd2yJrIvVeMt
8fZS769YIfGz6rIEAwt+lvFXTYjUjNVHZF7LF+o+Sq4R7WvdLxmz4DEZv+zj
xSaXDUi+rnGprudFQ1hrxhW3hScRbCnxTXgeOQMi+FzsU3Rr1QYkJ1Yuotb4
T53bEpwp3I6sj2At8c1l21WTvOyhYtra91n+Ij0OiUu1JyvxtmrI6xqK/krm
vvL7mstat3reX+JV7fWvsV20lJKPpFe1fPDCba59FD5BxiCYfNlA/TsCwkVI
n0jeVSjYRurNiqWlh7V8QeKSxB+pB5ftVXwlnHPFLVJviu1JLlj+JX4nGlHB
3sKditZR/G7FQ7mPaA+kLqhaGon/azxVAyDrXPGk7OOKD/I+6srni38tXFH7
Uxc8IP0dOSeycJToLdd9Kg9W+ziC30Sv8hT3JRhDam3hJwUT1p6I1EdrzRfG
EzxWeVHpyYoeW+ovic+y/nKGq+aLeh5BcrTkGsmPYieCr1b8r3snvZJ1/co1
9f3zT+FG0U3V2CjnJipPeNEGS+xavXvRq9TzcSt3SC646FvqWaeKeyXGrvW5
5DWx//Wv/l0YyQuCvaV+EW2P1PXCIVRbqhyyxO0VW8TmBVfX3lmta9ZerFpD
dKS1l1TPlK37iP1I7FrrXLGK6JMlpkmOFp2M9FVlbS/jrPGzclZyfq32sy6c
vGCYVQssP5X4sOqRlSOEo5a6Q7gg+TtckpeFa1q4Zd1nXSO1zGV9VnyQfF15
0YUlxGcrjyT5VOLVim91zZePrzi/coTku4pzJM7U74VLqXFbfLbyvdLDXXGy
ciliD1IH1fgv45S6TOKD2IPYwModa/xrfaTWkD6d1CbCJ9T3b4uvCQ8s8afW
7IJnVp4Sbq2e71h57Sn+tvIwwp8Ixlh7UWuxqouTPVoxSjCM1ObCM0gtKXu0
fis12rpGsEHlKmVtBW+LtqSOX9ZBztdUTVrVxki/tb7P4RJXpb4WfCs8WO3V
Vl2WrI+c65drJN4+dc3FVgXvLfwp+1V1buv6lfuqhkr0P9KbEwwsveZaawiP
LbF3jVPqFKlVKw8mtVXFJ5ITl22LDdd8KvldfEQ0vdVPL3hg+ZrkRIlLl9wh
Ni8cuHyWeuGpz1Ij1N565ayEN5B4UnOcxKKn9IpSmwjmF9+pWtDKiwoWlR6N
2KHEOulzVa5PzuqKHa51vsQW0W7Jmiz8eeEzJZ+uz8IvSS1W+2LV9ys/KXhD
eIyqeRZeQvCbXCOxQv7OmuyXaKWqZlJ8quoVZS8Wbqlc4vpedCaCecTXql5L
cuVaE8HPlYevvYylExNepWKwij3EF0QbWfUYMobKmUvP6HKftae1jpAYe+GI
pP8lOGHtdf1c/07ZipPSX1txuNaDa2yiyxKdgNTFcs/L33C59AWEk6kxf/m+
5CN5x2DFD5KLL/Ws+N3a96onr3FSatIVw6smf91nzavqb2vOrXFJ7Epq1XX/
irUkLtWeRf0n+aiOv/b1lg+KZu/C3cn3tecimKRyqrVmlz6C6Emk1hMepmKJ
yk0tm6n8ofSMqp5f4mflk+s5kcpNVV1Q9VnJcVInSr4TLZCMofaPJJ6LHlWw
7iV312vE3tY917ykNqn1dT1bIfYjmpAazwVjiz5f8IzUVuKbgjmX3VYOdtnP
+q3Ua/LbihXrNTWvydyrP4p9yp6KRnftqcQ04UXXOqy8vMZW1004wKr7rf0+
weriI+ILsu+rprtwZWKrgs0kl62YLPNd9imc6sJUwvPUWFTrVsmzklvFR0Rz
JTXIpV6TOFM/Cy4SHCJzXPa59lTwTMWowouu+S4/rXzFGtuyVVk30eiuWFc1
A0/xdeueVdcn2PhyvkD2rmK52ieV9am9XfF96V9IrKg4qurtZQ2ltl3xp3Ls
Kx6KHqNi/pUXBLNVrnvttVxTc3qN2xI3xCYrL1RrAckLEvPFLwSfS01aNcOS
1y7am+XLl3wh14s9C+4S3eCKD7V+kb95JLopOZ8oZzAXjpJcVrGx5ErJy1KX
1Z7FWiupy6S2Fd2a8CoVP0hsrDFN/E58RGxy/Vuxa/mg9Bwlf4m2c8Vw4f1q
LS99vdr7k37E8gvxfcF+0sOSvFAxQK25Kre8vhe8IWfcpG++vhetVD1HI7lP
+MO1VrLOK16JLnet56q/RI9Re8qCeeQawTa1vybrJr0DwXuC0+SetY9WzzHV
XCNxYPns5VxArTvWXld9l9hM1cCIrk/qdJmv5Bfxo6qjFttbvlbP+wgWrfZQ
61MZw+W5laOWmHPhTCr3Ip+XnVSuSdaw9mrrO0jlnNf6XnTmy1+kHr9oQcXH
pY4QLUpdW6lxKiavmqV6Tk0+1+fKOiw7WVix1vK1NpFaVXJi3YuK2+W8icRe
ee7r9fIu2arTExwrOF96i2LbYkvLNysPX+uRhbcFKwrGk7p+YTbhK9YYLv0O
GXPVkYpNCr4V3Lv2QmKv4EnRvNU1v6yD9AQld0gckHwqPrLiv2i3ZC5iY8s+
pWexxiz1lMxLcmi1gYsdir/U/a09supTtae8vq+1qoxfuPF6pljql9prWDYm
vJD01ARXyL6L7qhyswtXr3vKeV6xc1mHyiMJj1HtasUr0T3KGISHFL9Yvlzz
1Jpj1TkI3ltzFNsQDvDSe1prJfsruOKpM3q1j1z1jYJ/hCtePNjywdqvlH2R
c5TCW8ocRXex4qrwXdXOxf6l7q7aV+HYhTe79D0rN778Qs6GCBaV+co7QKpf
r+9r36RiuWXna75rDPVv+V30PMvH5UycxKjFoclerznWfRQOaq1h1arVeqFq
zmWtpNaQvoloL2vtXM/BST9d6p0VD2VslWuSvCBrW88ySC4W26s4R3gb6clK
70mw6Ir50jepNePyhWV7gmmF96uxfT33wt1J3nzK76qvVU3deq5o1ST+P8XP
V+2NXC/6NNHmrTgpMVB0qtInlf2S3r3oK5ZPVe5F6rWaT6uuuHICkl+EdxWs
KFzN65jlTIT0rAUf1ppr7V3FWsJPSs6tOtiqyZE8+1T8kVrpqfNTKyYLD1/5
+TW2S/yXXkk9X3OJe8KZCw5ftl115pce1vK1FZMFx0pNcTmXUTG/9I+k3ryc
fZA+jmhChIsTzYbokQTXLfsUnF+1rLJu1f7l/QlPxR+pNaouVPhn6SXJ2UA5
Ayu1lfjv8sfaH6+8fb1e7LzGK7H5Wksu31zn5YWvXvOVdxYtH6w9AsFya0+X
Dcsc1/pL33zFT7E3qRPXmIW3EZtZ/0Q3uOL/WivpldQ4IPu4YnuNP3IOqPZ/
K/co/dO1/guXSn0hfbqKo6R3U/FwvX7lyku/79ILuPzNKYmTEquXHV56B2su
y+8krq59lPyy7Ly+j33lIMEVy+br39ysWinpF1RdTeVtVhyW954J/pdcLPHn
fZxBEK5SOCvpy4sOXPRgMn7BUcKfCL8ncf6i5688ifS1JUeIlk/WX85JrbmL
Fqtqvar+vNaz0iuU+CO8n9hDfV9E1Wxf4litf5/iBwRXiD1XDkdimlxzOYPw
1P1r71I0CcJbSv5d9i82XHPWeu5TOVrmXnlgwZkS3ySPy7kz2eta70tdJueV
pGap2F5iuGAJiVGXs/9rvpVPWz4i/ZG1npUfuPSGRD8ge7rwiXwWPCZ9mcv9
BUet+9TekOhsBUvIvkssqvWI2G2tZUQfUjVaooWQuV/e21nfFVnXXLiIWkMJ
d1H9SHhCsU/J0cLrVownZ3CEh5f4IPjqqd5QxZCiHV15oZ6PqHyRYF15P7bs
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
a29Cep2SH+s4haOTff8/Lf0U7w==
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "36629210896102279370"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.24310001730918884`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.7538561820983887`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzN3T3rvd121fGgImKvrQbEVlCwMveNla0khWBjImoVFI9FPJU2vgAbsRBB
UHwNgk9pghYWhoCFnY2VjZLeBES2xYTPl7H2icUJOz/2/9rrWms+jDHmnOv+
+b/6t37xb/y+n/u5n/s7f+h3/s8v/sqv/fmf/ORXfvpLf/B3/5+//iu/+mf+
9K/+/t/5+Pf/z/9+9/N//o+//OMv//xf+uEf/Ys//GP9/N/+xx/94b/82p/6
8T/8q794/v36zvLMV+tZ1l+/84111n34xhl947f+f9vPb9vbsm/Lu3zbN3+W
vvx79ZxX3/+Gnct3/uZ//bP/939it5/f//yfvNf1W/LM6zt1PX/iN//ZL/yB
X/8rP/7Lf/7bPyy+X99X/i7rrHtY90eeL/92+X7dt2/s5yv7X86x2pi8i+z5
4pv174utLra0PGfxwcWu6rvI50/7/FzP9fc/95Of/vAP/sn//IXf/ve/8UPN
U5/P/HzO9czr8z/8T3/8x1//dz/98S/85t/+fz5fv3t9//q3y+cFD1xr+/V/
/fd+/K2//L9++Gt/7Ld+kD2s+yNnJHlz2RM5i2/v5yv7X87x2mfZB/Gjy04u
W5JnLhi12qr8/RvPqXt1fV/O5RW/lud8rvOP/N1/+sM//je/9ON//7d/8odP
W/38fNnzlafk+deef/rC59+rv8u5X78rnxf88Hnun8+59uraf4khn/9Wzujz
mZ9/v55TMZXk5frMup/yHdn/a81yjss+X8+8Pl/ne8Wuyzcr573ssH7nen61
JXmO4CLJC9eZLmu+1i8x6rLhyy+uz1f8udb/yqeufRZbuuJP1YiudxH8IPYm
efb6rU97q8+svi++fD3n2rfrrGser/FB3qXGdnnfaiefe/L5zM/1fD6/+pTY
j/id+GzF0nLWi20IfqixSGxA1nx9/4pFEs8v2xNefO25xPnqU/L5OseaX2RP
XsWQy2Zqfqn6Qz2jmosrzpd49fn36/kSl8TvhI9fa/u0YcF+FWtV31/wnvxb
wQyVp1w57jojwXjV1ySnvIpRFauI3iuahsQKsWGJSxdfWGLadUZX/hIdYKkd
SAypeG/JNYLlrjO63mWJM1Uzr7HxWo/oEvIc8ZeqO112ctnwK+xxxQeJvRVX
XzlR3reeV8XD4tdXDbeeheRuiWnXZ9HSr/hfsXfFDBKjFhuW3738+rL/yiuv
vbrisHz+Bl69fFy0r/ouFSfU2CjPEa3v+s4Vr6r+U3XRBZde+1b10muvqu4h
Pi65u3LwGh8q56rxoda+rz2smonki5ofBTNIr4VwHLHhWjOtmO3ilTUn1j7D
V3j1imOV48jnqt+KXidnJ3pyzVl1bdc+S6yrZ/FpJ8K5RIuo/rXU9ao/XnlE
bPJaf8XS4rMLL6u4WvLpouEvXE9w+IUxpJ618I5XGstlS6LR1TpLxau1pr/0
Ry02INy/Ymnxlytn1bVVnVPyRc0dNafIu1ffXzhj1aLFPuU5C6erek7tdZda
f9Var+9IfbnWuCXu1Rhb619V2xFOLTxU4rbUWV7lsiuOSX/m9S7CJWtuXfKv
YEjh1LK2S5d4VbOo2Ew09hqTxfeXWZ6Fy8sZvaqPi50s+ETi4Sud4fO3apwU
G176H64YW/WKa58rNq42sPj+N3KZ7InwlGVPJBbJ55p/RQcT7bHy3MsHq4+L
L9fzlfj8jf5nwT8Sw2vOWvy0YpKlR0js4cJd4r91DZePVNxedQDhNdeeX3lH
3rf2R1X/WuJVzWVV/5eZkUWvvmK4zMVXrL70SF+4qGLFqm/XOk49X+lDWzh7
tdsF/0huvc6x5sFltqj2+9X3vdZ26ecVw0hOF11riRXi41JnrLr9ZeeXvYnG
W3FdzWWSQ2uOrtpp1auFsyz1mle4aKnZLVqB7LPkFMF1lbNfNnw959WeVJsU
/bPmr9oPIPFH3vfy07rPr/TkqpVVjf3aZ4mNFYeLPlZjxas4Jmck3xH7XzCq
6NVLXUBsSXqkq5Z77duib0uNu94nU/Pa5UdyT0uNM8ueVC1l+f6rOQXRFmoM
ke9I7XjRk2uuWeoIEv9F91tieI1XUi97lRNrr2PVKypvveyw4lvRi17VaCrO
rJzx+rfSS3z5pmD1ihPE/q+egSvOVK3j6kN41fO/aFY1JlyajPRILJqYzAiI
P1bdrM6HSt9g1ZG+YSfCMSWOXTphzYl1zTUOCH+vXED0GYkhVdsRHCK5UuLh
hevkmRJbZJ5dtNmrhi68WOJh5X1iP0vPf50LWLTWytMrf6/5qNYRBIcIXpW4
ca1HdNSaFxZ7qHG4xqULJ1TMLGuWPF7ft8Y3uff4eq86/17ruXIWVQMRHaDq
jVV7EXuQ/CXaTtXxXvV51jt7X2mtEldr3+yimUjeFFxRMcyrHoOrhi596a9m
l2rNtMalpW4o+VrWKXtVc3qdC3t1z0zlLK8wudw7fdme1ErEZ+vcVq3tLnhg
iQ/1jhHpWRV8VWOyaBdVw6maST1HqYVJDV002Gt/Kl6tuUNwneCuVzFTcpzo
aVVLrBj1yi+C8aRGJjlL7pmpMerynYrJK++W/Zd+16ohVG251viu78gZyZyj
8PcaAxettfLHJVcuM8iiCQhPqXqynHW1q0XreKVVLjGzruGVTiiaj+TEisFe
4Zza07Vo6YLJxc6FE9VeZbFnqbstNiN66eJfkhfEp2ofRZ1jWmxecuXCiSp3
E/ussbHOeUk/c/U7OZeKHwSj1vmpqpcKJ611ScEY4l+Lplprbdd+Xr0iYvMV
p1VsJhhAdPhF7xW9qGqnYhvLntS1SRwQPFPno2udomomi32KTlXrPsvnyjtE
L1rmdi8brvNQgtkE51dOWu+cedXPU78vOKfa21Ijqzit8lzBxvX5i69JLKr2
WWNdnQ0U35G+pvrMV/qPcDR5vugni04rfFByfe0Lkh4k6WWts13X+1YeXTUN
+d3lDijRAyvveJUXBOdcviNc5sqJFQMs+F/0E8FaMpMlvrZolRJjpafl8zlX
zavi89o/UHPZonmKvrf0gSw1hQUXXWsW3UP0CtH9rn2u8ep6pvRUS36sOlg9
r6pdVJ3zFf6Xf3vFGanj1zW86r+qvHvB/HVvr78vfbO15v6qBlRrDRKTRXOQ
NSx9XNeMm/zWUlOQ3oaFK4m2XLXNem+k+KbobKLRLdy8+mDdc4kVi+a8xMAr
5y6xouqftf9K7E365QQzVO3uOlOJk6KvCnatPEtqFoKfBdtc37nsX/SQGieF
+0vvvXDnGksr96lc41WvzoUPa//SMtsleUH0lqvHRtZWOd2retNS46ifqy3V
NVw5SPZBOP7CTepn2cM653KtbZnBqb0ulStVTldxy3KvnTxTajGyD4s2e527
cCixz1exS7RKyaeLPVRsILhXbGmpdy/cbal/1TrRMku44MwLCwkff8VN6uzq
oiFXziV2Lv89SsEeVV9d7uhb6mISJ2vsktxacWPFcsIXap6qNXrB8HWWrdqJ
4A2p2Qn2k7v46p0tda5nwTNyV5v0x0qsqDMCr3Jx1Z+rPnDtj9TXvtGjW7lY
3Z+K+UWvuPLCkk8vm6lxRu4NWLjnK4y96D9SKxG+edmY2F6tW4mPVIxUfUT4
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
NvCqB7hy3opJrvNaYk7lCHX+6NLzxdcqr6x7uOjVS82xPv/yhfr8hY+IX0it
vMZ28etX/Khy8MqhLjwpuFrysujPl/0I/ql7+42alPAjiWPiO2JXNXbJWdf5
iyWOXbZd1yCYsO7zq34YuZfglW4gtTx5ptRKxDeX+FnPd+k9qJhksW3pMRNM
teAK2UOJsYJ/ZP21tnLtrXDqqqctvcHLnOP1vq96+6//Jlf1lzobUnlr5Vk1
Hi45t/b/VEwoOVq0iNqff3FtiYdLP2rlL4u+uvSWi65yrV/qLBXLCa6ofnph
WsmbVXNbNMyFa9dZrbpOiVH1nuRrPdLbX7Gx1KFe8ZeLn9a++mrPEltk/kvO
XeabRDuVPRfeJD3D13MuXFT7URd8XvVVmf2p8/jyjtd6ao/xtQbJI4ufSj4V
+6z3iix4+/qty1ZF55R1Su6QuvyiQwpOqP3JFa9KLBXsuui0C66oWkTtOZE8
Uvt1K79eamQSW6S+IHhjuVeqcsbFHirOkfcSe15mpcUHa/5a+mZf2W2NS4Il
qs3U/CszPjJHLDZT/eiyt+s5r2pM8vfLJl/FLskjNc5Ibq21wsp5F81hqS9U
DC+175+lXl1/V/Kg1PSX3Cf8t65B/lsD1XcWu5Wzkx71WvurGHup8V04sPrX
4qdLHhTNodY7rveqs40VN1ZtqvqUaOmL3Qreu86i1heE71+zGzKL9G29WvR2
mVUUTeOVz9Z4JfG5zpdJHF565hd+Ue83qzrDZZ/iL3VmQWxJsNbSlyJ2Vbme
xCvBwzIjIPG2vq/4yFUXuM79c221x0Dikviv8OLqI7KGyhkXvfpam8wB1by/
1DjqbLWsTXoXKxcTv6h8UPaz6n6i1y13Mwr2W3io5KmlrlS5zMJ3JGbK7Jvk
hVdcddGRpBawcLGLf32jd/qVb1YOfmmn9U4/ORfBYN/QZkUflli0zDnKOpd+
8osPij3Ufh6xqzp/sdw1V8/u4ulVKxZ+VO9jEf2/9gDU2FL1n8pVq9Z0+Uvl
NTUeis8uvdO1B7j65vVedQZQ8K3wx1e6xCuscj1TbOnKg/WMqn4iPij5t9qY
cKWKw0UnlHwnMVw4kdh8zcvS43ft7aXr1ngueV/i1dJXWfn4Mr9c+wNr3bPm
mld3SYlvShwTzrLMcL3Ks4t2IZhQctCre9sqzq/9XfK7177V/urPf3vNvNT8
Xt/ryheX3lv1nMrvqm4m5yV8+fJZqRNJrafyqaoD11mneqZVf6gYqWJjefcl
Fi06Q9XlxN6WPFtzq2DCaz11P6UuX/NR1fMrlxROVOeVxI8qjxa8vXCNRYte
5uAkfi7nVWvKFV+9sqV6J4/4yLW2b+iZVROuOPlVjUD2drnP59oHwWxydqIj
SWyRfZO4LThH+LvcXXk9Z9GuF9ur+yCfBQ/U51esXuc+6hxcjZ/1vEQbeRVz
lmdWbC/cpGK2Rc+s7y64VDSxyk3kfv5v45zKeatu9sq2rxh71U+X+1jkver3
RbuutcWqkV42JrquxFuZU5ZYXbXu5V6LGkOWz8vMr8Sc5Zl13nPR0xa8femZ
tXZf853EiqWvrO7PgnMER0l8WLBojWlX/Kx1E8Eni/0Lv77OQvJdjcPCHyuG
rzlR7rwVHanONchzas987U9e6vtyH3jFJBIzr7O79qHqNhVvL/zlehc5i4qZ
a1+ZPOcVzhG/qz1aoslcNiMxTfpCr+fXOR3B6q/qvLXmVfN75ZKCURetSZ4p
/3bRxqXeIT5SefdlM7L/oudU3nG9S819VbepePtam/AXwa7ig8KPFn1G+Fqd
vxN7ls919uS6m/F6r+uZl7Yj71v5muSd2p9WbWbpQRU7rDhKYq9oTdc+L/XE
itOqJl/z9WXDgjPld68zrXxEevtrL67s8/J3yTW1t7P6+FKzEx9f5kxrDhW9
5codVSOtdQTJWVW3lzP6PNMr19S4Wm1GsJNgAOHaEgdq3lzuApJcI7pu7Qeo
n2XPZR/Etpf7S4UPyhlJXJI+vfp3ycuv7qgRH79ygcxISnyT313uKpFcIFyv
9sZInXHJfaLbS45bfGSp8y56iOxtjS2y5+KnFXNW7evaB+kHqJ+lbi65W+6F
u/5txUVVo5ba2VJ/kb+LRvcqR1dfqPW1BZdWv5N9qJ8r5r9iWs1Bkvuq3ij7
IzGnzuaIVlxt6RUPqjlCek6qTrX4QtWKr3guM3QSK2p8E1+73qXiveqDoo1X
LrzcU/oqR8vzrz1fzrfiUvE7wZbVvwS3VN69+MIrHVtmXeVzzUEV5yzfkdhV
922JOT/L+zml5iIxQXR4qWPWfZZn1nuZhJNedlvvobqwTeVZYm81R1cduNaL
K56pepTobMIBZf8rnrx49zewX9WxK5eUPFtxzsJhK8+9fLn21wk2rnhSbLLi
Xvm72F7l1OILdb6+cskFbyx2JblS8InUQF/NFb7iWZ/ff4WHBcOIziZ54YoJ
y+9+w5ZkvmDRsWX/Kw6pdZxXWrTgcPlcdXjx92/cz3nx3EvnkT2RPm3p7732
R2Y6lnuJ6x28Sz/50h9V++gun5LeTtlzsbcl11x4uHKHimkF87yqHb+ypQt/
Vj5V9cw6f7Hwmit2VS26xmc531r/Fe4jcbv2Ncl5Sf1F4rbYT+0Dl38rOrDk
7kWjqzxIYn7Nxct81sKzBCOJPin8Qrhh9WvBMwturxhyyTuSL6r+fz2zzhGI
j0tPuOhRle/LfQtih3Vm9np38eXKm6rGK/FB9HCZX664pc6w1z2seUF40ILn
q54j+PaybeFZgpMFk8hvCder97TIfkpcrdh70XxqjhZ/XPLXN+oUogNc7yU9
z5KzKma+3r3qbNLLKvsmeqzkiys+1Lt8K4YX7nDFjaVWWON8PWuxJYknol/V
OoJwkOv54i/C0S4sJJyuarPXfsr3xR6qH1XNXOqSFc9UvxCto2r1Sw6qMef6
Tr3DYdGR6hlJ7Ul0sGo/lTtcti2/K5xLaiuiTYneUvFt1TzFBqpuIHhVYtfV
Byi+I+ey9OdXbbbaTMXkVWeo/1bWWXmZxBY5U8EPcsfLK+5w2XPNO9IPKfW1
JbbInLVgpGoP9ayr/df4KRraos8vOKRyzMrxhWfV+uYSD2t9ROaOL5uv/Txy
L3TFhxe2qTqwYMLaA1l1jCsOy5yy8GvR2aSXcun5qWcn8aFiknr3V9Wo63pE
c1j0PbF/iRuVj1f9/8qntTbxSpuVnpBlBqf2Y9R5vYrb6/4IlhD+K3pX5adV
96uzdbWnUbjYFYsu+1/u5xRNTPhF7bGvfnrFB9l/0Tm/UR+pc7hL3fOV/9a4
UfNX5QUSo0TLrTFE4oP09ku9eNGuaxyrPXv1blLRJK/4tuCHuueyz9XHhYPX
3ubr3QWPLXeXVcwmWoroxlcMr/Gn5pGqRYuNXXFPcsSC36r/1vpy7X2qtl1x
uNzNW+Nt5X21t23RN6p+fv2W3Fkn9xYuNiC8W/qrX+EZmZVe9P/6d+EREs8F
81yxqGpKEsMX36kzDjIbKL5T+zTkszxT8Nu1V4Kr5YyuNYuOV9996asUzeQV
7xM8v+gJ0s9cazdL/aLqJK/mzqo+UPHMteevNMZa1xCMLTYp/Lpyt3p2r3yn
zlhJbJc4Ixi76vDXOiUOL32Mi/6zxJPKi6/fkpp+ra1U3rfUm5b8IjZWa44L
95TvSO4QG5D6y9Jvea1BMLBojFXPr3lH1rbo7ZJbxTeXPF7XWfdwwZkVf1af
eoWXhNvKmUo8qWuWz0uNoMbq6/vy3+OWWFf7Iq4YIrW/y/bk7GoNXfZTfEcw
c9XrFt+pWOLSYBfNedEDL5uRmnXVbGvukJ4iue9UYp3YreSypQdD/KvGZ8FL
19lV7Cc+fsWuqr3UupVoSsv9Y9X2JD5UDCB2XvnO9XnptVjqKZV7Lnqg1M4k
R8h7Sb4Wm6/9n1VrEp+6ZgBlzVUfqJrqtT81j8g6BcMIR7v+m9FSa5DzXWLv
grUWTioa+GWrNV+/6j8XLCSxV7BfjSeCAxeeu2hfNVYLz5X1iNYtdcAFl17n
InduyHdEaxKte+EgS+2++toVZwSLis1UPar26NZ63KIdvdKx5X1lf6pGdMXM
Za+Et8pskeSpi+fK/fOiM9eYKVhrwT+17iNcr/bEVrsSnC9xUjhFvUtT9A3B
MDXuSZ2lxrRaa6s2JlhUMKFopzJ3XOuYFVfUXoiqY9f3uvanap5XTr/igOyV
6ORiz7KG63yFHwnPXWKmYLNX+ERqPa96L19piYteKrZd83XVjWvdaqnvyL8V
zV8wmNQs5FzkHWX/F45TdRvR9uX5VxxYuEbtvZS/V818ibFXzBStUuKV+KNo
OIJJqg4v+Lnik4pFqz2IjlG1xFoDEo4m51LvW5CcJTpbteFrzaIlSi4QrFLf
t/rstc7ap31hgEWjqLNyC0cW3F7jhswiyT5Xv1j4vuSRmu9qXabmi5o3ZU+W
nuR6RnVuVDDJYgPi44JRK36W+aYa66oGUvNCxYGSZ6/3qn8XrCLaheSaGjMX
vbTef1UxVdU2hXNVXi+/JXpCvcNE1nn9Vs1rC/epWKjqnFUjqrpc5WLVZqoN
VB3+wqgS2wUnX+co/722JbYsHE00Fvm75NP6nJqzhOtdmE3qpFUvXWbTas/k
0se+4M9qDxVTLXUxiW/LnTbCfeozrzs06vyy8Mfr3evc1qILVRsQHV7epcYf
sbHrXtCKDytul/Ot98Re2EN4zfWdek/gUr8QXbH2WlQ7vJ4vviO+L3tb47ng
zxoDX9Uvlj0R/5WakfidaB1Vj605WrTl6xwrVqm6UNWIRJeuMVz4uMQisc/L
ruQuhSX+yL0fNcdd+U765eRMaxxYfFNqr7WOXzX8qrdUm5fYeJ2daMWCPZb6
heSOWsurePVV33vFdbV/TLSLV7NU1zprL6icacUzsp9LjUb8YuHR9S4L0bvk
HKs91Fhde0prf+ain8u5y928soZXupmc43KfTD3rb8xoS6yoGmPFq1WjW85R
fqtqTcLvao9l1YiWd6//VvCe1DVqfBB+usz6SS2s3psn9rb0oovOef29zqhW
/bzi5yvmX2uTPreqm4n9CGaWnFhx1Cv+tfQl1r6vysGX3FRrzZWPS6yTWbbL
hitOvr5f+8dkD2utRM5xqf0Jv6gao8Th6/u1n7Pe81lji2jIta4h+1y1I6kL
CLe6nr/Mmcp6ZA+lv6vqKpV/1VhdZ+FFMxEcVTnyEk9q3e3VvFjFh6L7XTnl
enfRIeu91pdvVo4mnyvOvOKD/F3eSzQB8esltlQfvGJv7aup6xefvXxBfG3R
f659rvpMtfOqj9X+f9F+BV9deyL3hUoOuvyo6myi4137fHHkBf8Ir681uFfY
u36uvVKXrlV1eLGHpd9bYsIy/1hjlMQWqe9IHhecIzikvtflm4s9V/3nOl/R
MSSXyfxOnW8S35RzX2Z2ah6X+HCdnXCoGk/ExmqtoZ6d4LFvYO/FTxe/Fn21
6uGXP1bsVGNa3XOJUXVWqPZAvtKUpDZRe+ZrrUdiy6X/XPYgfTVVDxGOWXu0
xA6v362az+ILkn+r3l7rofW+ysqDhPvXXPMN7C0xZ+khqfmxzuDLDMJSdxD/
rXt+/a7UX76BxxZN6RXOFx+sMUdqYTUvVx502aTELvEv8bX6W4t2ca1B7iT/
xlxDxTlVS6xagfDr2ov+CqtfWvrn36WH5KqpLff/y7vX2eRqJ/W+Qfmtyx6k
/rLgMdFCqy9UnF9znMScK2e9qhuKBnhxB7HDy4av/z6CxJyKgRfOWHNi/bcV
A1dtsNbaam9MzTtiV1XbXLTuq79O8LZoGqLX1frLZWNiV9fv1jhTZ0UFPyyx
UfTPhStdf5d+m8/9rL1Pwg1r3XDhm1VDXubEhTuILS34XzCA9LlVbLzo2PL5
qqGIRi3nXmsx1/MvHC7aznIfi2j49a6nJdYJfpb65pVba64RTCU2L5pktbGF
v0hcqty8zp2JbdQ5QXmm4PZXs+2Vx9VZkgUnV5+t/7buSZ3fFFwquewVv5Bc
WXNHrZuLBiU9Y1edV9YsmuRl8xJva96pdVjRLa/8W31H1iOxUfhL1aOqZrXw
Vtmr5Tnip1U3kzOqWEvscNGT653qVWMXLFT5lHyu2s6Cr5aaheSpOrN/PV90
/mt/aj6t2EBwjuD/hY9UzCP+UntjFru66nGCjZfPoq/WHmCxk+U5sp/1c81H
Uq+pPP3VvZpXDJFzFyxUc73ss+BSmX0TfCV1MeG5VceuHPM6R9Her9+S3Fpz
Qe3BrvssflH7guQcxf4Xu6r7IBxQPtcZukVfrblYsNY38J7cm7HMNl7rrzML
lx5eOYX8vep+FR9WjfdV/0C9U+jak6pjC8cU3xTtRXCd+JecheTliuVqHpF6
zfV84Z6V58pvveIIwrUFq4j9Vw5Vc/GiAVa8J3Fbao4SJyu2F9+veua1hlon
Er4s8b/qHsvc8VLvWHTRhWMu2Eb8otZba/1OniM2UPFkvR+j6lSLLUkeqdqm
rF9qRnXNdT8XP6q6/RV/ZM3Xnle9VPoiXsUf0fAFJ8v9ilWLqPeWSBwTHlHX
IDGq3u0v/fC1Fiy8vvpgxWMS52u/dMUblQMKLpV8Lb5fa2eXrUqMqrFF6gvS
71Rrmkt94feqx1Kw9IVVKteo8UdiS8VRsj8VCwluqXyn6oFVV6yY/Fqn+NSi
aSzxoeKuekeQYAn5rWrPFS8JV136eOt6Kk5begsXDH/Zp9iA1Bdk377RY3nF
QMFdgp0qNrve5XPPX81oLHUZwV01R1f8IDlFcFG1w8rNq21Ib7N8f8EMohWL
Hy06iehUgpcW7Ui4m/QNLneS1Nqu8Cn5txcHr3cC1Lvf62zjUg+tGsXyzAVn
Vm2nYsWqFdTv1xwh9rzoxuILEk8W3VK0xyvO1H7y6rPyuWIJ0Umkhij//WjZ
/+o71R/FRwRbyv02wlPkXYRrC2ev/QmytutcRK+WeYoaf+SZtR/mG/XKa211
PlTizBJzBK9WPVPWufCIaz8rrqi9AVccuLSLRZNcsFbVBisXWPiX+M6ChWQN
VSe5dAD5fsXnYpNVZ5C8L/ssPWzC3UQblH2QtYlGWvufBa8uup/896+Xnqtr
zwXLiW286i+quG7hNTXvC6eo5y57InZbNYeax6vOVmsQ9d4nwZYylyEauMSc
qp8v+n+1c+EU0r+01FkWPXzx2eUuCNnDa23VB6sN1FxTeWvVCqROJLqu1HAr
H6xxRvp/atx7VaORHFTPveZu8SPBgaKZVJ4luXXZ/wuz1Xes+v9lq0v/m+g/
cjfgK65XsVzV3yTeVrxaOZTEIrlnSfDbdY5VS5G8LLmjah2Vv9e+zYppZX/E
H2uNZrE96W2TtV3+VfX/yrPk7zVH155VOfdX2qNgHnmvV/WvqrVWrlex3NX/
vPTy1fgv2OkbtdqldlPj+eLXla9J3a3eIVB9c8EM1xokXy/44VWP6Kt5B4kJ
0ute57WXWL3k2aWmedme3ClXe8VrDqoxpNaXhafUuv+1h2IzVbu7bKDa/yuM
t+CoBdssfK3eU3flBdEfhHdX+5dcXzFz1WHEPqW+s8wB1RxdcdorjCFakHDV
qjvJvJXEAZmHWnKQYE6JadI7sfDEqs/XuzKqPil1ror/F8221gErtln4WuWY
Mhu1zOOIX1/2cL1X5Qii1Ug+FZ+63uWyE7ljRO7DEQ1qqUFfe1LzS8VjCx+p
Wm7F9pKD6l1MVVsTbbZyZ6lBVK2j8vGKKyofET2q9tJI3aFqrYJDKsaWGm7N
xcvcSo0hogcueq/UQys3lPtGFvxz/da155X7LL3KVad6pRNez6y1wkUrrv4l
WsHCQa79qb685Hc5ixoTKiYXPVB6aSq/u9Zcbb7uc8WlkouFK9WewFpn//zO
NQct+mH1R+GGkpsW/HPZqmhilz0L369cr2qMYs9VJxTdTPBh5Z5L/qq2UXPZ
tT+1jvBKs6q4QmJ7Xb/YmHC0qq3VuLTMnFasKOupNabrO1UvWmL4gifl316z
bHVGSexHzm6piy188Ko9VX216oSvdM5qD7VGVvXnRWe7cm6dN6+xQuakanwQ
niU6ldiY1PTrPQxSt6r5TmKj9PQKhnml8VZMtXDe2nsmz7xweMW08r513qpi
icoNxe/qnlSdWeLqosPIPtT6texVxdui9S0a1KuYUPuOJF/IPsvaBBsvGOna
h2ufl9mTyoUvG17471Jzl7xZay61t+cVdxO+Jrb3De4jWLHGZPER0coWn5Ic
UeNq/X6tewqnFmxwfb/GtKU2umC8ykdeaWuXTV5xuOrnV+ySXpc6tyv1wW/w
X4khos8vdaVrf+pM1sLdFj4l2sgr7iN6acXJtX+szuAL9l70q+tzrenUGpys
U7CBfJZ7gWptdMF4cnayz1VbW/hOvS/9FTcRPLbE2Mp/BcMsmkDV2WRtn/v/
vwH1xcfD
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "50599399972817837073"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.24465014040470123`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.7553498148918152`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzF3T+rvut21fFDxBARexsLi1NoaSCkyf5hacDCYycSOIeYKihENKQIpAqC
NqJgYd6B2NgLvoT0wSakstLKQgUTEFmnmPr9MK5nn+K3uffiXvdz/ZlzzDHG
vJ57/dWf/KMf/cbP/eAHP/jHv/Cn//nRj3/7b/7Wb/34d/7uz//Z//yDH//m
L/6N3/xzf3r5e//n359d/4s//PPffvAHf/nbX/sLf/Fbuf6P/+53v/2XP/if
3/3k9//6T13r/dfvLvfrXF7Nd1mHT4xZ56Xrr3v06nNfrfn3GYe6158e26u9
W/b60/e8yq9Pr+2yF8v4r+v//p//0q/87q//m+/+5I9/+aeuv97zr//5f/uV
f/+v/v63f/LDv/VT19czr3uu5+j9OpdyvYyzrMP1u8uYdV7L2upeL5/7as11
DMt4ND51PK9y6tVaveIMy/Wr/Hq1F69i7NX4r59//d0f/ckPv/34V3/y7e/8
23/6U9flc//DX/mX3/2n//Vr3/7Z3/618/r63X/4R7/0f/8ppn19/tc5fh1/
GVuZ7zXOawxl7tf6lzHrvHRs17yu51zXy5ro2HR9XsVhyQXlKl/Ho2Mrsbqs
lcbJJ65f5Zfmvq6txtj1uzr+6zlff/61Flz4/3XM1+cuP18w7eu8rtp6reH1
u9d8dQxl775+ltblUq91TfQ5V/zo535i3695fTomr/y6+Nj1uwvX0nzUtSp7
8Wme/yq/Su4vnE3v0Twq8a/17utzfuPv/ep3P/yvv/ztF/7HL3339fqVL7Fg
WlnDKx6uPC1jvsZQ6uy1hmVe115ozi73XDmlcbjU6Gtsuo+vYrJgwlJPF0wu
15rXZY6vdMEn8qvETOHDr+Kt4EyJyev+a16Llln40tfPvfCtYHiJ+RLbZR2K
Hizj1DVRTviJOLzWsOSF6kpdT8WiVzF5xcCF59fzX+FJWdtXOXvNsdS7hecv
+XXVi8LJC/f+hM92/bxgWuFvr/xn5UtXTl37UjTIq5h/5bGobrruVw7wiT6C
6kfVlSW/9H4df4nJ6+fX76pPqHhy5XKp15/QOOqTF55f6nKZb9Fci99efHLN
0+Ltl5p15Y7qceXbZe4LrytaYIlz9Vi0/1LuKTle6ovm/qteia6J8nnl0qpN
ytyL9rnmoniinP+aY/ESyxxLXdY6WHJZa1PRYgUPy5ivfFSfTXWWejsll1W/
aw3SHofGgGp5xSL1vRcNcu2pauQr90u9Kx6F9sKUzy9+b9nHV/qu8M+ix4sX
UcZT9q7kr3KbUstK3F71qNRf5XiFW2ovRv2forN0T4tXXOJH+UPx3lUfXTFQ
8k61ZOEP2n8p8Vk8Aa13hXu88g/Vr17qsupixd6iZUqNK3iuGFL2seSg9tp0
PEVHF6741Tu6crbUIK2z6h2VcwtXnCjPufb0ir2i35eapXGynMPR/VIurWNT
D1Br5XIebNFuuhfqqyw9FPUN1PMsGF78pdKnuPZ66VsV7F3Oqi2+XPE8C8aW
fV/6p4uHX+Jz8Y0LHmqNLvO9cFXjXDnM4mmXunzpixInRadrv2/BmeIVKDfQ
fFRPT70C1RFlH7XeLR6Lcp6i37Vuln0veL7o6OJ7FF56PV91otYOxdXi8+sc
VV9f9xRv8xXXUl2mnnbZC+1nvfL8r9jWfv0rbV40dYlVHVtZz5I75XxOqa3F
Iyo+idbTsoZ6f+FdS4+yxLn2VRfdt9TBxQ9RD63keJnjwkkKn1w821e+ypVT
r+qvcgytierDX7FRcEm1eRnnxf2KnlJvvKxnweridykPVE6uvqj6Nsv1EvNX
PJQ90jVR3ad1UP3AEquvehPl59e+KF9d6ot+h6v4Kp+uv1o7ive15F2pcaqz
dE/L80t8ai0u92j/qOga9WOVn1w4szy/cN3yvZKikbU+Lr5WiaXCb5XblDEU
77TEz9KbUB+16ETtFyjXUl9l4TllPQvnKdym7EvJO42fUjvUC1ItX/Ko8DTd
08L5lUsXXaP+gMbh4j+oR7R44EvdX/iq+sPKW8peqAYsvuISV8p7C46VPNU+
YJnj0tvSHF+0QPFhyn4V7am+XFmHosVUC1z7WLTG8h2E4jmUWNIYVr2weO/q
BenP1T8ssaq1ftGJpe4rny/fwdcxK0f9BN9QvNW6pnpHuZyO89W7I15h7+Kr
qN5X/VhiRn1LraeayxqHZX91PEsfpKzhwlXUN1iwvfyufte4rJvWfdXL1x6V
MStHXfSX+jwaV4uOvtZQzzQuGrNonFdeq/qcS/9x8Xz0nrImZd9LLGn8l5xV
LnGNRz2Kgof6nr3FI7rmtcRhqacFt/W6xOrC3wrvLbGh5wSK/ip7p/VUPZPl
fRcl3/U72upZqRZYOG3xfLS+l7xbrtVTUk2qWPeqJhb/s+Bh8aJ1rRavQOtj
mYv6varBS8/oynf1upf3n1yfq3VBMUF5Y/FdC39Tb0ox6tpf7fWUMS9nV9RX
1DFrfdd6tHAeff7SqypYV3xC9WquuSzv0ChYdO37hWnfp0ekfq/GZ+kZ6d9S
LLxu4W+q0YonWepFqRElp3TvFs+zrKFi+DWXggOqzTXGSpws61+0XtFur77/
W/iPct2iQ9W3Vxwu9+s4Sy3WWPqER1TGXDwx7X0oJym+xCudq/qx1KCiWQru
lTUsOFnmXrSt9uAW71o1e8HhEp9LjKnuVi1ZsL1giPaRCz6o11fuUY5aPBbF
5KIjyl4rbqtuUo/0E725wq8WzaX9d9Vu17X6xtq/KL+ruuAT582W3l/xLct4
rtxUbqxe3Cf0uPZ6lB8W/rDUsrL+n+hTlHEWP/kTXPra3+VdK5pr6usuvbky
5sLti7YqnE33usRM4bE6X83rRR8t2LVo2OV9SmWdC0/WPFpi7JXuvjD2iudP
eFwF05ZYWnimxpuuiXIY1Y8ab9pjLXpzqS9L/JT6+AonX8X/4mWVPbry+srx
BavV51S+tPgnr7hN+d3yfZCytgvXevVZJa4Wj6vcX2Kp7IXW1ld4W/TmouMW
f+mVj1rq6c/qnGrRm4pL6vmrt6P6qDzza09c8+6KpWs8pVerf7tZ8XypmwXn
S91XP1Z5u/ps5bMWH1J7za98j1d9Ch2bnn8ra1JqfcGBEm8aD6/2ceE8Ok7V
Cxcu6fe+NR/Viyj9IPVAFh5yzWXRRLqnr+qmfi9JvZeFIy0emn5WwRzVBcta
lRwp+Kbe5qJDtW5qf1PXcDk7t+yj1p3FI9KcXealYy5aW+ug8ueFM5f6ovW6
aOSlR1zGpvr3Wv+S44ufVnJqifOFYxedWHRlOUOi75gtvWbVNcrxFv5W1k21
2OKplvG8OrNdPKIShwWXdJ0/gYGL16Q4sHBm1SyFu+pcFt++aLfLY79+rvt+
YaPyQx1D0Z6l7mgtKO/IuvalrFWpNbpuigmlbhb+VmKg8LRS7xbuXXJHPdJr
fxe8Wjj5pzFQ7y98UnWi9obKGl75eOWUeh1lLup7FKxY/Eb1BArnV1xa6ov6
h5rjOv6F2+i56LIOhW8snnnJhVe6YNEmZU2Kvr5wVWtr6Z1d41m4aOFUi65/
5ZuVNdfvC3y952tvRXtkhcuVPC3+nnpN5X7N8aJtSz9aNabyf8W6Mt9X1yUX
Fu5R6oi+z0rXuegX1QWL317WTXXNonPL7y51XDFQuVapWWX9i94vOFP0jnLp
8rnq7RRdrDG/fMdwqWvKAUrNUp9We5Qa84t3p9p5qYllXvr8UtPVi1406eIn
q7e5+LQLrys1ouS+epiFaxWM0p5I8V2v9bnWVr/3WuqFcjk94636pYxBNYLW
tRLbiu2Fn5f4LFqjcNpyBkDP9hd+vnjCBWcWX0X9z7Jfi1b6NFYXn7bEquKb
nu0p+6W6qXgjhSdrnJTaVPzbgnvqz6hmvGJJvTjFgeU7R69yquDSov2v74+U
OrKck1euW7h0WZPFX9IarXhe8K18v0Z7DZ/A6sWjXvJC12T5zoh6v4WHv8rr
Ml99v9ar+C8apOiLot9f+dILt9GcWvhzWf9rT9WjWNat1LLiZ5b6rt+/UJ9f
tfDirS0+j2p8xerizeq5mpIXiqslVrXHrZyw3KN5Xbj94o2U3qXyrrJ3BdsL
Rqkvrdr/lWYse13uKTl15WnxNDQ3X3kyC+csnpJihcbkK9/mEz6q1pFP+KXa
S9JzGopLC6/Wa+WBC/e+tGfZl+t3Na9L7VDv9P/nlf6/4vMVX100o2r2KxeW
8xUa57pur7RY4ZxFJ6pmVD2y8Ieyv4uPqnqznBNY3tFU4kfjQTnYtb+fGMMr
fCjcWzlz4XLLGQnVjyWvv16X937oWTv9bqNiYNHsr2p0wSj1ORd99Kp26ByL
fin9OOUDxRspOVj4wBUPyv9Vn6qnoZj5ikvo+cxlDMszC58p71goGF4wf+lN
qCYt77srfF59j7Jfql8Kr1Z9t/TFimYvfEP53rJur7yvsu9lnPpz9QBfcZJS
s7QWl5hZsFrjWfX7gmO65npdzqmWOl44tq65nr288Fa/X6+1u2i6Ze/K2STl
qwV/tKYXb0HxqngCn1i3V95XWcPiEZU9Kly66F/lJIXnvOLnr3TfdU/pYZVa
+Ykea/ErltpXYkz9lsUbLOtfemFFzy51qsTbpZV070oclv1VvC249Er7a219
tW6lfl3zLeu5eGK6R4tHoWeTFp78iWvN/VLTFx6+eNTXmpfzuuo5a/9F9WnB
h+VMWsm1cra81CnlBmXNFz2uPFm9l6VP+ir+1StQLXCNWXVNuS4cQ3VZWfPl
jIHuu+Lncl3yS3NHubdyVPWoFQ81DsszVZ+W+4tuLZxWsavEefHAFQMXDlN0
3Cd44NK3KpzhWqvCt5VzFh2kvGXxAT7hiZXvjCx1VmtEyVM90/gJ/7/kxVfu
vfxdqmtfdF6l1igPLFpJa2jh+WVeqln0HJHicOFdiy5TPX7NV8e/8LqFn2s/
qIxN+1yf0EfKJxdPrIxhqbNlr0vuqwZ85UGVZ6r3qNyv6MpFF+t1qReqL8p6
XrFXYl7XZzmTqfxq8QcWLVZq0PJOoYK96kmqrllyv2B4+dxlry8+ucT2K72/
cLOCpaUGfcKDKnjy6qxm0eOFlxb+oLmm3kiJjeU7dwvf0Fh6xROU45WaUjDq
yrulz1jiRNdT8bxgkfoMZa1K3Crf07xQLqf+ycK9CzfTurDklHpQS44sOqVw
4KLZlZOoB1t+V3XQUh9135cek/IEnZfql1fYvqxV6Z0tvKJwwgt/Fu9Fvdkr
T1/1VQsnLHukeaR8Sc8nLH23pY6U+lhitcTJtVYlnpcxlN609m4Kl1CfodTN
gsNl38u5yoKryg8VPzWWFNuVSxeMKnj46vvChRuo91I4ra6h+mlaawrX+oSv
pWul+aWctsT5tQ56/udaw2uOquNe4aH6CQWjlNctXpOuofI67SFq3i3XJZYK
zqi3oz7bKz6pZ2m0L6AYpXqt4LN6wrov6rEvdVl5uPoJi/dSPPllXuoXqa4p
dVzHUPwE7aGU/S3rqecGi39b+illnZUPKG4oP7ywZeGEpeeuY1h0n/bc1Q8s
OKnnIfWM2aK/Fm+k5IX6S4WXqo9UYula50s/Lv0F5SFa98v66xhUT2nt0/pV
PMylt6K/W/hn4YTqwerZ3Sv3r3PFi67UPmZ5r13RC6o1Xu1LyUGN51efpWdL
VCcW7l3qTvEZFGP1+5UL11LNqDxcz84tPpjqQd2XMral51XGrHVTfSfF7QUT
Cv+81uTC/+s93uot61makpvXvhet8WpftOdV7lGPSPtrWrsvXbZ4TWWOhfO/
8kMWrvUKY5UnF8xRH6/s9bLmypnLvihH0npR7i88vIxTdZnGUsHkhesWDnDh
0jW2V9qn8EzVlQsXKtfLGYAlR0pva/H5i9+lHqlel5jRGFaM1b6DctGlt7Jw
ZvVklNsveV24cblf56i4V2p6iaXlfYCad9o/1fNmqn0+oS+Kfl9wablWPqAc
7JVe1mcWjFU9XmJJ68LiHxYevvh1BUMKJpQaunDLV+8tWThA4S0lj4r3tejB
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
6o7l/Uvq4Sx/30TzVLlHWbdrH5eewqJbdS6aj8U7etWzUB9GMeQVjyp184qT
wj+1nupeF6xQP2ThyQv+FJ9Q163o6KKXFdsXn7bk0eK9fMIX0meqP1C45ZVr
6mNrT0H1+BXbhVfoefXCjV/5IYv/U/iMru3irS31btEsytuXHtMVh8qTF9wo
OL9w7xL/yxkG3eurviyYU7wX9XyWe1TrqV9dOMPiIWhPQf+OTMlTxVLlJBpv
r+659lfXR3vcqivVE1B8LvVL16ToBdX4ym3Ua1JsUa2q3Ft5VNnrggmKOcoP
P329fK6eN7jiXL0FHZt6p+pRXLmvWKq9G8VVvdbvvGutL+tQeF3xPV7FT8nl
pSaqh1Zq9/LuC71fsVfr45JHhSu+qkHKq195NZ++LvhcYqNoH9VNJRcKPmuv
XLlHqX3K6woGln+q5ct4Su4U/6Q8p7yHQePn0x5piQ3VYsWrKfuoGr/kdXmO
1qNX/LngwDWXpf+oNev7vNZ+rmJyea9vwQrljQVnXr0bR/dda9mFgcv7BouX
rhyy4Ib6NgufX3jj4pG+8jaLVi1rtZzbuT5Le3nKM19x5sIHtDaVnNJ41r+7
sVyX9S94e92jXnTZL8Vz7dktdbDkpn5WiTfF/xLbF59cNK9i2jWehZN/4lp7
nQtvLBz12jvVLEVHLGMu9brgiXpoy/2Fz6jf9bOK27IOyqu1b1Lm/qp3oHtU
alzRC8qZVeMXXaBaWLG6+EjlHvXcFg7/yiMt3L54jMWXfvUuL60dJV/KmD+B
Ucu7MtRfLT6V4s/3GbfqBxatV+ZbMG3R3cWXVt5V9kW968VzW3RB8SjKODWn
Fp6mdWHBE/VIS13Qvx+kPoPWRK0dZY6qOz6NUYXPlOuinTWe1Td4FbclJtXH
W2KyeDVlDZe/nVH8duU/BasVZwr+FH7y9X7VU3q2pHiPpR4V3b34D8t3M0ts
F22rGKt6rcSJ9i8Urxb/VuOq+C2L3ilYV+L52rvCrzS/XmmKghXLWbKFM2jv
4BO5rBzgZ3WeQffxypGCw2XMSw9ROcbC0y5Pb/GoF4y9eEXhz0tMFrzSPvKi
s679umqH/h3GkiOF0xZOWL7bsvBS1RTqUSj+aN98ieelN1G8JuVRn6hxrzxV
9SLUlyvxULB38VcLT1DOUDit5q/W2eI9anxez9faXWJg0RGl9qm3tmi3wpeK
NnmV+0VTLDVa+yCqC9RDeMXfdPzKt5caV/ao5EXRwgWHl7OjJZ6Xc1kFu1Qf
lbEtGFv8w+IRlXpU4ke5SsnxRUeo56B5oX5sueeai77PX/F5waKFqyj/VC22
vM+qYIXqQR2z+uSFRy3vvii5fM1X403npWMrPGGJT9UCWqNLrflE/0v7IOof
at+8jKHo8eK3LH5s0QsLx1OfsHg4ij8lDrXOvuKBi4ew1MHiRWiMFZ+q6I6l
b1Vw/rpHPTfVCOXnRT8Wjq26tcy9aJDFZ9N6pDpa+eHC/YqXUuJK+cDi05Y6
XrhQyQutfcrVFXu1pi9e8YLP13OW8ypLjS44XDhkwZ/iCZScKutZzjwophW+
cY2nxL/6ToV3FcwpnGE5y7f0Ka57lOcX7lfyq2C78gH1H1TraW9Fc/mVJ1b4
gPZWdB10XiW/Lsx5pZW0Ri8+v57ZWDhMiY3Cn7W3oufkiw+mnFP5sPIrrSl6
rbzl1TPVI13Orix8T3up5byl4m3Bq0+cUVl0rvaMyv3qG5f6WzhP+Szl8Nor
vDC2YKnGj66P4rPi2OIJFM75CldV26oXWvjJ4lUu3v4nnqkxrHlasEL95AXn
Fa/U71XNrjr3wpPynreCva88cL1WrVRyRLF6qb+qE8u6Kd6qfi9zX/R4wc/y
zFe6YPk+nXLRot+X2rQ8s2g6xbdS6xceory3zHfpiajPWfZX/RnVzgsfKFha
vBqNvYXPF86gvlDRjKWfvvCiMseix9WLW3ye5VpjXs9RXD/X2qqY80rrLfp6
8SQVM5WHXPhZei6vuGjhYHrer+RU6QsoTyu+utaIT2j/ggMFM0uO6PMLNyt1
/9WalNwp66OY+UqblPmWmF/8E9UmGj/qL+k4C4f5hLe/YOYVqwXbl36ufvdE
92vhe2XvtB9XeGzB+eX8nva8XvGKUkP1+cWz0r+TomuiHs4rP+2V56P3lzVc
sLdgY6mtui/lnEnBAd3rxdtX32PxZtV7Kf5YqWWljmgveKm5Oq/S29U5lvj/
hN5XvleeWbxEHedy/6t3FJQcLH6a8oHl/YHq8aqOXrCxPEdrzfX8klPlHtUF
yh8Kr9aziIVvLDmo/nzBWOVLxRPQdVC+qppFtd4rvX+N+cIuxeGCJ0td+IQ3
UmJ+OW9Q+jiaa3pd+PzSK1ywseiFsuYFZ5Z105ql2Kh7fc23aIEyBsWrRTeV
ur/U1hKr6rNpvl+fqz0F1ftLz0vHfN1TzvAs/ob+bsnxBd+KB1Xyd1kTzeWi
g4rPozmoXKvEz+KtFazTMeh3RZdarHWh1J3iC+nYio4r32VTDV64Vsnfcn/x
gvRdvtpnKdpk8SV0PEsf+dV5mFdndBctr5+lcyk5W+p1wa7Sc1x8y7LXJZ6X
d8srfqr3rmt7Ye9yRms5K7LoplKvr7EtZ26Lt7C8v3rxZ3RfCoaUeCu9GOWW
qmd17qrrFw11jbNo+bI+JcYU69S/0s8t3PiVl6W9bO1lFOy98FPPApV+U9Hs
RZOqj6cx8IlzLItmKTij8y2cqsxLcVg9mdJHuH5X8674zOo5qPe1nBNYzn5f
f3ej+BWaF9p3KHil+1hq0xV7V7y98mfUM1l41KveRBmPei/q+SuGFz5ZfCH1
0sualJjRdxAtfs7i15X11/ebafwv+LngQKmJOpdS74qHX/ZCa5xqKK0vr7xE
5RUaM+rPaB1ULrT04BYOs+is4lmV51wcQM9RqAdS6tRVs9RHKnxVuXHRDhrz
OrZF15T7l7MTReMsnkBZ5zIe9RNUA17rrH6Cep7qJWqN1n3UeakfpfxTNeAn
zuiqXlaev3iAhdddMbx4Pos/oHxV9YXicMHGovuWvkCpodc4F21efKTFn1TO
r35XwSXVgKoRCt9QHqvenfYx1RcteVGwRTlMwc9rbK/6GtcYlHsXDlO4sfpO
6qleNUXjc3kvxyvPYeEwC9cquFf4atFcqn91fUqdWmq91pSir1/lddlTjWet
X3pmoHAn7cOWPsjiUy31d9F6Gm8FNzRnr3HqWRpd51JTdDyLBlSfcPGCCrdf
+HPxopd4u/alvH++/Fx9yOVcQakpCx/TddY+juZpic8lT0uuFc2rdXDhTgVD
ynPUV9Qz7YUDXL7lcm5WeUVZnzJO9e3L/crJlSuqti0xpmN75b8pbrzykNX/
WTzecp5Bv8+o2KIaULVG+d2SswVPFk2kWL2846Jg6Se8nfLMRRcrd114svL/
sobq7Wifruxv0Xff5/t4rzF/wn9TPC91efGslj6mct1SB3UNC09ezmwsWkO1
zLKeZZzKnV5hyKe9nVde0KJBdM1LnVpqgdY7zfESM9pP+T65gd6z+G+qo8uZ
vU94dCX2yjov2krXUGP7euaioYrfpTV6WU/1Dcq+6DqX2Fi8nTL+5TvIyu2V
h6jvVPa0xPBVfxWrl+srHpbcfLWnheco59G8WzSdenQl9pQvaeyVfCm5o9pN
dZz2d5b+heay8pbr/isHr/UsWvLTvb+F9yonUY2jZ4S0vpd6vTxz0YmlVi5e
qHIDzWXlaaprXsX2p+Nw0d1a+0o/WtdWPa7C5wtXX3xIPf9T/L0Le6/Pvb5z
XXBj0RrLtdbKwkk091/NRbmiauSyDp+olddnfYIDlP5C8RwW3nWt58ID1aPT
66Xnq1pG8bBotKIfl5qo3GbxGLUulLzT7z8qR1K8unJT33+4aLHrd1+9/7Bc
X7FU8nrhq5oXS60suPqqbuq7kpa5X7lf5ljqr54B0DhcPKgSnwUzlbcvWLd4
iRdeaQ4W/0T5rWrSgo3FFyrcqXCwVxxDe16f4KI6l1IHP+FpvOIe+r6RMhet
m9e1esIL79J68fWf+gzFo1viUL3rhReVMSiX0zV59Q5k1cJ6rdxg6b1evtB1
Xfo4yxlLzXH1KxYuqp65+gxaTy+cecV/ltr3Cd94ObO6nANUTlK81lKLr/Ho
GR71/Za+nnISxWTFHNU1BUsXDb7UtWu+r/bo6z1f4/b63Qt/lnpUOFjBWPV+
P3EuvXjj13iUuypXX7TY4v+ob1x+rvlScl/jqnhBZU8XT2bJKb1n8X+UB5bn
lPXUXozWCOWWJVbVI9I9KhyjrGH5mxdLbSq4vWiTgnuv+pVlnXUurzzehRct
36nXn5f4VI2peryModR39X+Uqy8c5spBjQfVfctzSh1Z8LzwYe0jaH/k2nfV
emVeheOpntV8L/ml2mSZl3qDJd4W/VLGrxi4eEGf8JYLJ1zOp12xpOu8aCg9
J6OxtHCYoqdKDHzinuIvKV+6cEO1RvFCdb+uOer3c1Uja39n4RuFay0+jPLY
cv+Sd8UrKNfL+7FLnSp1pPjkxQe4MFnft1yeqTF55dpVL7Q/XnTTtYav+l9F
y5d9/MR14XKLb6y1uPTvXuGhYsviL2l/5+KrSx9k8Uhf9UTK/aq5Coe51rPE
ecnZsraqK6/xv+LnioFLXVauWOqUelAFT656VPRjGeeyd6+u1X8rmKzxrP75
or8K7yr7pf5SmcsV87pHZWxL/VXfSf0T9U7VQ/gaq+XvpZZxqlevNa5wJ+Xn
JWeX3vfim5XxF85Z4kS5UNEpGv/Kq/X7Mq96SaUmKg9cYmbx6F5xeI1b5b1l
XlpPlTt9n++ZLBpHPYRST5fzkJ/QSlfMaM+lcP6FOy26pviB1zovZxXUi7jW
VnVKWcMLb1/5wIqrRRsuOkV96QXrXnF4jdtyrTWiPGfhQmUdXuGenkMocVh4
Zvks1QKLVrp+XnC14OHyHcxX3p32bi7M/99vsIEA
         "], {{0, 128}, {128, 0}}, {
         0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "62920725793807162408"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.24056358635425568`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.7594351768493652`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzFnbHrbdtVhZ9GREtT2llYKwZERO8ljQg2EhELqyfEKlGIiAgWIoKtlWgj
Fnb+BbH3XxBCGgsbCy1EIliICSjsFAO+j2/ua3Ef5/04Z5+115pzzDHGXGuf
n/it3/3Kb//gZ5999ns/8t3/fOXzP/jyN77x+R/+2g9/73+++vnXvvQzX/vC
d1/+8f/++97rb/7df374kz/97w/f/rkf/fir3/jlj9/5+3//8K1/+7H5+vl+
+5pc81N+l/1eO/7yvVefta+vvqvE1RvXeWOuSsxcxdunXKM3cqqM4Q1sufre
TznPBU8++/2vf/yzP/rqx7/5qx/6+Pk/ffHDl//8rz/8/C/95Md//o8f+PDr
//jTH7/4m59939+f7ydjXtdfr5/vf+O71vXJazL+8r1lnOt7n+u4Xpdx2tfr
e9cYynXK2K7mzebUVQy/PQ8lVknOku99Owft95b323lec2jx5PmeZ114jmH9
/Tvf+ocPv/DN3/j4U//6hQ/k7+u+1t+f31u+a12f1JQ34mFdf722Y7Nr9Jxn
Ms434vzqdcE6Ektk3mxO2Xl7e42uYoZw1zUnz+9a43kjB9fYCHbZ99t5XnNF
Ymnd+/O7fufbP/vx//6t+X++tphG1vQ5hjUn5LvWZ9f413qVWrbG8LzH57/n
ddbfyXzadSfjLPNga7R9bfHh+R5bi8m8kTkkc0ty8GqN1jzYmCHcm9wX4WZX
OVgw0K6dnefyvQtP1j1+/b9+/Bf/4m9/5eOX/uUvv+/1ihOCadajs7pj1Qvr
rZHPEuxd87+4DVmXxQfIfBJ8WJ99xsDiGDbOr3QBqXEEB9ZarLUjsbTyaOUa
uf5z/Ov6do1I3JKYIbm8xmnrdbmXFdsWAy3OrPkkfy/fu3h1qbM2p6xeI2u6
tI/lQiUXSO0g2LW+9xl7q+ZazUvyruDAej/RdIXnr3UnNWLluM1Nm1+Es5E5
J/NDYtLiAJln8nrFBhkbeb+dH1LXyBqt99herY2NlXer9pHctH6a1Wvr3tca
EW+EeGKW/xf9a2vuqnHEG1y4tP7ZvQq27luvknAG6yevmCEYsuak1NaCvWSu
Cu+ymGn95+LB2rpT/Mk31u55ndWHLZ7YWovFT+w+KFsjrG9JOKTVgOU6xC+1
uE3i8xkb1iO66n2U+LdjK/zfriPBIqtPSW21vLR4v0R7kny/wmeCM1ecnMQP
8eGv1m7d1/KarHdqa+uKW1KPisdu+wvE8yS4sT5LxkAwjeA2uUe732nFTOl9
rPEUH4Bgi61Hto9jz48QnFweMsFGq6Ntf8ryqKu6T+LK8l6CdeS+bNxajUDq
puVm1h8jNZ3E6sIWyzeIL0o0Wukdk1pfMG3hwJoHyy3Xdy1/w3Jpy4dJ7JH7
tWNe17R12eIV6UNZDmnz0WIF6cMSj67w3jUny4suvMVyOYIhBDest2BrffH0
bP4SP5OMYcWVza8rLV/6awTTyp4Z6y2TeCPrZf2r0huyHhQZP8nxhQk2rq68
UDI/lv9bH4DEpD0PZfUy8dCsB2jPKJU+xbom8XNKrbc4XDSI9ZkJ5yd10Gqc
q7PwpebaOCke7/P6Ze/fuheyT7t4FKW3XjCE8ExS66/6IAUTSO2weEj2lFqN
TPCn7Au1XJHku+2HEpxf/M3mEYlD63cRf570JlYtJvNjY6mcg76quTZOCLck
eEKwsfhmpKa8wVvsvZMxWy/Ojq3goeX/pSe1/k48XltrCP6QuFp13PaOC2dY
GLJ6/QTnC/8ncWJjye7DIf0X4nUQb5DwB9K/K/FD1ojUGruHp2D7G7hEPKsy
h5bLvYE51iMi+nR9l90bVnri5d4LlhZ9Z3tSlg8T3WF9V4uZludcef7ENyP+
CfFsi+9hcXJxvNJ7JZyH+MzrXuwZw8L/LS690a+08UPuvWDOlWd1pYkI3hIt
Q8ZjewoES+2a2v6s1d2kLljPjfSay3kuW9dsTb/ih6V/R/r4dq+mrdekrpXY
ID6Y9Vss/y/cu/gVtp9iMYfsKyB6hOTIG31bco9WI5PYtnFC5pbsGbDXt36v
zRfiCZCYKTXF9ihtfhENbvlhqS+Wh9jeDcHkK41m+zLF9yjXsRqT8K4r3mtx
xu5JsDlo612ZB7vXxeoIOzaLe8ULIrlDPBnrMxR+a9eC7OsjY7vCEBLzxfMk
PmTpo9kaSubZarTCA4vvceUT2lywZ9lsL7t4lWXfOOlh2XpH5sHudSk6ws7D
ldYjXugbfKnoJuuFEr+OYBfRTQVDCCZY3VG8AltTbP6SWmxjrKw7iX+rkW0e
2bOuhJ+X/vXzu1ZNIZ+1XLp4qiXfyfXLfJI+1xoDOc9S4u3t8+kWo2xclZpF
7sv2kQmGkPwlnJDELfEKSk0pfLtge/G4SmyXHCH3vr536fSFCaT3bXuLxf8k
9b3gzNW6k2uS+VznzS3+Wzwh8VZqtPVtrH/yRq5dYUgZG5mHVXdInhLud/V7
alf3a3uO1iuz637l61p9t8Zj96NaLUlylvCf4g3adSdzeJXvqz9F9Jrdt0/6
OxbPCR+zvr3lluWsesm14iFYz83q2XWG0ebyih+yh39hAqkplrdcPQPQ9miK
xrS+btF3ZA6fr4lmt/Fvn0XzBjcj675iyfozljOQOLnyzK1Pa+uFjTfymjy7
iYyf5LvlWqT+Eo1m+8Xkey03K1zR/r34rlabWA2ysKv4kyX+rb5b80xywfKH
0h+xzyh4QxNZP6T8XgyZQ5I7xVckPu3VvZTepdUmxQcg+tHmKbnfUh+tP2m5
mR1b+Z274gESjUm+q+jH4juR1wWfr/RC2de9/k7qtZ234lmR+CznJS0GklpD
8v35/uXTEnwofY03/D17XuZKYxI8Jzly1e8m/jnxGch+3VLri9e68s5iiK1r
hCcTj8v6/LamWH1H9MLSfSRObB/Z1mIyVxaj7DOj3tAX1tMm87/Ov1z1Aog3
8na/1dYdqzFL76n0VkrsET5w5UuQtSheK/FnSJ/Cnvldrwl3IrlQYpL40mRu
17zZ+Cm6wHpfa+2s30g4ht1Da/WF7S8Qzrl85tLbKnszio9nOYCtI4RfXWmE
NZ+2x23xjdT64kvY+bRxYvuPZG+5xbGlzYtXueKBzIndE2Jx/m3+dtVDWee2
yLoUDLT67skZrOdj8ZbwJfvcg+JvlJ6O1bAkdyw/Ide0Hubz/aTHfeWZW6yz
GG75v43ndU2yj87ikuW3xKsk2Gv5cBmnzfc3uJzFmeVpEI1med3bfvLVPkZy
nWettM+ttTW69MJsz4jUnStuQ2LJnuclmEPyhcSVnSuiWUidsj6V9YHX/JDz
CCQ+bV1eGn/550VzFc1rdVPBfJsvpZ+ynh9oMarUXzIPV7+5Y89xFN5LOK3V
StZDIxyAvLbrZblZ4d6EM5AzWWWvRelTEJ+Z1EHL38jvnL7R71hYSviVnf+C
vWRdyv4K6/Nf9RbJ+QXSR7iqrWseFo6VM3T22QtWB1mctxxm5Wapy9aHIfdI
Ysb6DzZHCK++0vK2T1G8yuL1Le5K/Mkr7m1/c5asb/ElSAxfcUWC1QVjybqv
f5arFD5vPfCihdc8WB5isdFq57f7zgujSE6RWLV1x/4Woc192yspXHHd13M8
du8c4TlWz9raUeJ26e7lP1gMtDz5iidYrkjmuWCsnf+Feyv2yLpYr6PUdBIP
RDMWb8f2g8iaWt/Y4hjRRyWnLPezvsobetnWcVvriWd7tTfePpfAnl0l7yF+
tZ1n29Oxr0m+WH643k+wheAMyTvS2yq/+0BwoPB/W/tsP8XGD/Ewbf0qHgXp
Q5F1Ib9jXmoQyYWize2cF1+l1Hr7unj4hO/Z81lkjYiuKRx79XSK315w76qn
U/CW6FDi+z1fl30Lhf+TvCs5Reo4mZ/VjyCcquj0NW/kORWEY5C6Zv3kKw1V
PEnL5dZ62Vpf+gjWw1/63eKz5V2290HOtZXctH671d1XnrzV0cQrsH0Hq7ne
4P8LPxeW2vwi/SbLGUhNKbG0OANZa8sZiC9hOXOZQ4KNlv9brFsamdR6O8/W
n1wxRnKknG0hcUXOaNiabn22N3rrpTdEsN3WZcsP1zxc+WaW/1/FwPresh+S
cIbyjLuiSW3NJdhIMJnEHrmXNYdXz1gjc/hGX4n4ZnYd17wR/k/m0PajSU0p
90uw0fpOhHPaeLZeJRnn8uWst2+fTVF8s4JFJQYKXtn6YjGcaEnr8dqaWzzY
1Qsg/cqif1cuWF/FjmFdh/h4V/6S9Z8XVth+gd3/X2LMeoO2dpNnfZAct/6k
HT/x5chcLZ1Fcqf4RVdYZD+7YoDEc+kJXmnJ4slYr5vooBWHpI9g8XytXfGy
LP4QbkYw0H4XWSPCGQr2Eh/V+tLWU3qjD0I8/ysNa3vNxJ8kfy9e0xt+UcGi
Un9JDV1zSOra6jsULWn30Fr+X/KX9FnW63VfV8+Ssj0v+zwrW2eveoXWcyb4
VvbwWA/qylMqfRCy1mROiIa1nmThJHaurH9y5ReRemfXutyv1eZrnAQPS35d
eVDFQyYxTDQUyXfrca15WNchZ6yK51x85uILEf5Q+BjJBXIdq8GLh7x4+Do/
SGLArunyVex+J1unrEe0/l78IuvlFo1wdb+2R3DVO7B+vvWgigYk9ZrkL8l9
u/+QaCLiVxNPuPB/cm66aPPiE9o+CPGFSi+P9CaKV2x5L+H5No/IfqdSpyw/
IRqnYFqJk+K3W7+IYJTlvaU+2r6hrUdXnHbFD8FMooms52/PF5CcIutL4p/4
ZjZ+rE9ovYXnNcsettKrKr6x5YfFW7P5bv1Sy1UsPq9YLTFZvKw1nqWLyf2S
fg3Jx3JGwPYZ11yRPSfF0yaxvdZlxc8VJqy1sHzb/pauHdv6LruvuHgjJN7I
vVtubPd9kfu1XqX9Luut2b4h0bAWG23teAPTLL4R74tgteU8awyE26zvJblM
cL74OXbfGvGUCM7YvpVdu7UWpA9F+jKWAxO+TWoo2TNpPUObC9bTJu8nvw9i
fSrrP5T4tDFv14Ws74rVcmZtjaFgGsGWNYfLByN1jZyptHXTakO7diT27H0V
79fWKeudEg5p9xGR2kE4NqmhpYdlfaH12YUn1ichvILsSSM8rTwbytayq/i8
8txKbSU9l3L+jnB4y0NsX8aeH18+A6lHtm5ajm21Rpk3y5PLfZV+ROGQS3+R
ZymQ+lu0DKmJpf9lOart59qaS665xkNwrHhZxH+w8WmvaT1S8vwi69WX/LX1
yOqyq5po42HNJ/mtutKnsPqIzNtVj8ziG8l363OSZ3kRj5f4OdafJ69tfBYv
t5yVIHG4au4bPRriT1ovi+A2ic/Ss7vCEMstbT7afgfZT3Kly67OQBFsIT0+
Mk67P/AKZ2yPrIyBxInVwsR7tHhix2O538qL8gw02+ciZyWI3rGYVno0BKPs
ul95XMRns9ys+E7W07D4YDU44Vc2x4teIGN+5ojlJ2SeyfXJ917VX4tdVl/Y
XonVAovz2P20RdcUfUr45MpHu//Teunk3m3eXdXodS/k/MiVx7XihNR3WyOK
hiL3bn08e+7b4gC5xyu9YPm85TCkd0D4p/V4y35O6zPb8V/pCMt5SP5eaasV
b8VnWNiyetN2X5O9L6ubVi+m5NQag8Wlq7pMYs9qwKIXCMdbsUTw4cojJft7
yTzbGmT/Xrxxsp/N9kdInJdcILp+YYjlYASrrTax/if5LnLvVi9bnW4529IC
BKNsbKx7tJ5V0RFFx9nxENwjvSobJ4QzFLyy519KbbVxZfUp8dDeqMVLX5Dn
z5M6eOV5Wq+PYGDx9K70l80Rwjest2b3PVqNQH7HnPBw+xwYi+0kbouOKD0y
G4dWm6/cIR5U2X9Ycod4RMXDJ5hje7gEB5YnXzgb6UlZjCU19I1+LtEONp6t
b1n0l83lKx/bzrnVzssDJzlF/BNSE+1ZszWH1g9fmLAwyvoAVntaLkH2Hi9c
el6H7D8s/JDEjO1rWD5zhQlW/5L7tedW7Dmm8ly+Eqt2nu0Zuqveja1lpZ6S
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
f0K8JjJXxPMka2o13bo+2T9QeqDFbye5f8UDr/LO6oXSF7NYTZ4zaXW05QYL
H0ieXtVHiy22zpLaal+TfUR2zq/4/xt+1FVP+Q1Pw8aV/a4VM4VrrXW3vk3R
cZa3lDX6lHlH8ojwxrVeBAPJdUhcEY/IxmQ5N0c4zxv8n3hx1m8snIHUF+v9
ljN3RONbP8p6IG9rwKu961f9Jjvm9Vl7dol4NTbHi1ayvtMbeUe0ofXYrU+y
5sFq4ZUvdh/X0ho29tYcrrUgHu8VNyPeFNlzQmqfrS/E+y1c1PrexI8qXPQN
DUi8aNtXJXhoMcFqE+thks+u7yXPOb/KTauhSt4Rrkti29Y1wpdKnpZ6bd+/
Yq/kC6lHZE2tb0Z8FatDrXdN+CrhD1daifiT9qyfjefC/+3v71xx/uJLkP0h
V3WW7Mm0nobNTaLFLD4U397qLDJvJLbtPhmizcu+FNI7IJhf7uWKPxCffNVl
u8eAxADhqGvvSsl32wsoeodwUYLhlv9bH6B81taOdU37O2gkp9a8WR/Mnh0j
uEFi/qpOkXwnc1W4AalTBTesX2HzumhVey+kLhP+sGq3fZ5D0X3k9aov1ltb
82n5mPUqrV9t+2sW90rf0H7WetHEhyFrUbyp9V32uaOFbxOuSGqW1REEK0iN
sLzC+u32NekLF9/AatU3zr0Szkxqypr/1Q+yPgnBgcWNVz2y3tqVVlrjtN4j
qSmkZlncK3q8eNRXvQAy/wRDbE+BxHzxnG0v6fl+8rsM5bcbFpcu/gzhbGXe
1phJDF9pVdJTs7m8OHA5k7W+y+6ltDznCjNJHS9aqeAP4QOkvlif6o0+iOWW
V6+tB0X+vjxhosctThJ9tDjPyt+V+1c8lmAywbTCwey8kXW3+W61qo0Ny5kL
ryP+IfHQLEct80O8KYuZRCuRtbb4THyVtS7FOy19EMJ5rp6bZLGXYFdZO4uf
pV4Q731dZ/EHy2MtfpLaZDnYuhcSz4STkHxfmGZz3H6WrMUbPpXV2pZrEX5O
5tP6uqS/QGJ4zYn1BGzts/Nve46W/5O9E2WfdomTVZsWT7C+kOVjJR9tDFvP
xPIuW5evOOriYOT6i58UvVNyjfQ41vyTMVifqnAz20si+3vJXJH8Kj5qyaPC
IW282b2FxNOzPjyZq5Lvtn6V33AhfSWyvhYrSJ9uxTDh22QOyfyQeP7/8gDt
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
vD6LM+uzVs8Wblx6W+S+/gd10noi
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "37059387199693125873"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.07847659289836884`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.9215229749679565`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzNnb3KtttVhYORYGkn2ol2dioahOyNjWAbO7EwgcTCoCYiYqWFWil4BGIp
WHkEnoGFhRaW1h5BGhMQeVMMuC6uub5tscOdl+e5n/Uzf8YYc671/ew3//Dr
3/6xL33pS3/8Ez/4n69/409//Xvf+8af/dZXfvh/vvWN7/zSL37nyz94/Iv/
/e+Hz3/3y3/z2b98/zc++83f+ZnPv//v3/387//tm5999fe//fn6+/rMeiaf
t+8kY7O/S+b+Yo52za/mVda5jLOM/7V9fsoxf1H+dfX+K5t/8fzall7ElmIz
5e//8ZO/9/lP/+6Pf/7dv/7FH3n+r9/+h8++9o///bWf+sufm8/r8+ud9tn+
7nf/5Fuf/etXfu3zv/3zn/+MjMfO8cW8yHiu5nU1dztOu572ncU+r2zgU+7X
az+ydlvG8HGtyjPZx2JLxR7K2K7iCfnuH/znr/zff3bdPn53vYc82+/+1T9/
+fM/+qdf+Pwbv/rVH5nXx7+Tsa05lrmU9Vn7ZedVbI+839rnes/Hv689/fhs
4wBZH2sDZMxX+2W/e/V+8p8dw8f1+YhF7e8uHPtxH4l92vxC7IHkOOvj1h7I
Zxa/+Pj5Nc6Pn/845o/PHz+z1oHw0PV5sm5rbGuOy8bIXNY4yfqQ2ELmRca5
9pS839rnGtvHv5Pvkvku+1zPZB3KmMt+WfspfkTWuYxhrduy//Vb67tknOT9
a9+JPdjPW58qe0RiTtkXu+/l2cZzG+vI+pC8f7U+BA+TdxK/WGv4UT9c2J7M
xc59jWG9h+C3j38vcelT7tcL/1rvt7q0tTeSH63vr/EXndCuIfn8GqcdQ6mJ
kJxF9sXmNYufF1ZZe1c479rTj58hnKXka4JR7Tuvcut6JnjbYuASbwm3LXHJ
coqyX8V+LCe1mpjdoxXrVtwj/mX9rtQLil5BYun6O8EqVgstPmXzr+XOJCbb
8di4bTEz+YzNy2vfPz6vdy4fsbl1vb/4V9EPrc5gbZXEJeundr8s3itckmho
hL9c5dkX3GHtC6kXWB3AxoSCpS1uJPjfxkaCyUsMJ79VtIVlS2Xf7ZjXeEqf
g7W9wh2If1n9oewjwSHWHmzOKvtF8F5ZTxtzyDjtXhStw+Zoa2MEo1octdac
cMyCGwkmIXu98DnRW0o+tWOw+241IqJTkXFaPr5yerE9+/mFkQiGfI1z1rqR
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
4ySulntHC68ksWu9n3D55ftX+bHgpWI/V/jqCjNYvYvEgaKFFvu8qotZXYjE
AZJ/X/OycjeajVcLf1qtrPhy4QLFDu0zqfXY2E76ZyyvLD5F8PzyhRLTLJaz
tm3nS/Lj67s6yRisLxQt1HJVmzss7iKfsXe1ld+62iPCHy0OJDHKnrEtvkzq
+1e6SsFFV3c3kfpawZxrrwuXsfW4qz4Za8/lvtA1ftsHdXVX55VtE+xNtNDC
VdfvWq5hdbbCAde+EA35CpOT8ROMRDDP1f6W3Ed0oRe6yvJfq1Ve9U6Qz5d7
50gsLfcrFg2zaHok/5IYTnAXwU523VY8sba93lP0peWbVjsqtlH2/XU96AqT
W03M5guLecr5HeLLBGNYnYFgb2tXxYbt7xZddOUma+dXcYPoDCVfk/xL7ouz
9nClfZVYR3iKxf/WHtZeF+5WeuoKH7H1oKJbvsbYBO8RGyZzLL5DxkZylrWB
0htAbPh1bCcaLOE15XethkPipL33gMQ6q2GS3E1ssuiiawwE85c8/jpG2fGX
fFrO9ZTYa8d/hbGLpvoCH17Vv0o/yesehisdicR2iyXKuYbC3y3vs/GEaLD2
/ZaDkLUtvkbyVLkb0GrIV/d42PHb+FDis8UAdg0JhrEYu/ijfbaxi/jOlQ5g
c1PpYSh4ycZYqycvm7G98eQej1Jvtf8WxtWd8+S+C3uf5LpboNQEC25/oSGX
GGVz5VV8IPH5qk+JaBqkTk3GY2vW1n4KPiRjI/ZmdYAX9WuCFa2ORGKg/cxa
N4uByXkNO4Y1lxLPbb3bxrf197Xvn1JjsT0qL3SMEjNXrrTnLld8uNoL0qd0
tb/FHqxtWx2SxKXCQ6/mvsZ2dRfQ1T38ZA3Js+UItl624h5Zc3IfiI3nV9yz
4OcvSmOx8yo46oVuaffoak/tXpR8YfeXvP/qLElZt2VLy6+LH9m5E4xne1HK
/Wlkr9cakjVZa060FMvBrQ5m63cEo9reQqur2B7v1316V7mp5NPC/YstXe1p
yZUlX5RnW79Y3y01CBJLrcZL/KjMvfBckr+sFnSFXcv9YJZrXJ2fsnHJ8seV
v+yZwaL/lP21sdHmJhL/LZ4ktrTssJwzvdrTkptKTiTPJAYWjXHtS4mZRfOx
f7c9JPYuSuunpW541Ye2+luu/IXwPmtjhCOQOGZrJYVH277QcseLzbN2v4pO
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
EvPLHWik/kL0N8uLybqVs4SFp5d3fkrOTvLg2i+CJ6/GeXUfSIljpLeNxOGS
TxdfLvehkXnZnPhCj7X5uvhU0QbtPU6W45B9WetDMK29d4WMzerApDe74Ebr
F/ZMzdqXwqeuOLtdt2Unds3LOAl+IzZv527zl+1JJvm0nDu2Nmy1AqKHWD22
9AraXtYrTeMqp1iu9+KeIhK3y5kF+11y3t/aJNFgif2/iC1EWy6c3fawEV2I
1K2IH13lbpubCDe0dS6yDqWuZPG27RO2Nn+lxZV9J3cKkfeU+yRtTiG+Zmtq
5Syq5YDkzMIaJzmbcHV/zuu4UWILqYVdcfYrbFB0BoLby90RBA/Y9bFxzObB
cs8G8TvC70qutHod0XLJvhNsufZl9ZO/xnVET7Oxl2BF+/5ln+vzNo4V/F/6
Xq7iBvnPxsa1d4Wz2x62woWv7gm5wsAWN5Z7jUj8v6rpW38vMbzo/1aLs/5i
8fyVNmhxXcEVJPYSjG25YbkbYa0D8S8yhhcY7AWnsOebSr4gdkJ6NQsXJjZj
+zqu7kYotWlrA1/UXUC2h7nomVbPt7G03NFkz4SSsRVOTXRai9XteOy5MHIu
fs3F6ja27kA0EILBrE5OYlTBElZnJnZypYORvbO+9kKzsvjqihMR3ePFXUD2
TJPNoVd6CIldxPfXZ0isthy/6HVXGICs/xqP9Vk7Bmsn5KwcGSdZ2xcYzPJ6
iyWszmy1GquDEfsvZ7uuNKtyP6fVS8mdCST/lnO7ay62zkviw1Wdy+YOoq+S
OVr8Q+ZO9KiP77EYwMYBsrakD83WiK/wg9WgSh+4jSe2rkFslaxt6akr51UJ
b7X6D7FPq1m9uOvAnj23GIDkR5Kblm3Y+16IDkxicuFiNl8Q+yEx/MW9DXb8
Fm9YvYLcc2VzotUfyPoQrWm9x+IEkkeI3ZY7K67qa8RPCW4h9Yj1ThIHSn25
xEyS34n9l7Wy3y1xxvJEEvfImG0N3WIkYj9FlyA2Ztdkjf+FLlE0JZIT7dkK
sv4kN11xumInRGslmLDYnu2pK5iE4EmLIUmNhsylxEnSG1Pu5LEYstR9yHwt
N7dc7CrmlPcTXmwxM8G9dv2vdKEXd8Ba/E84KeGnBPcWTlf0q4LNiH1enYG1
OdHGuhXbS9yzHIfETItR7blaYicWP1vsdGWrK/5c9eqUMwtlrws+tDWpguus
LlSerX5FNLEVh63mYONY2V+rX1lsZuMPsb2Sv0osWmO2+2LHY+9UtFzjhZ8S
2yaft3221lZLPx6p9VzlfbvXBGsVzFPWn/gyOYNG9O0Vk62udYXZSqy44nRW
v7JztFpQwWal/kJsmGAe0n9rbdXG3hcai/VTe8aN4EY795LrPz7bHLFqcyXv
r3HanpCrXG/3keyd1fyJzxZsbHUVq0uTuF3qniWu2rxj79+wHNnev1rWh/gU
4XFESy92a/lI0ViIn5LvXulyRQ8kur3doyvN1sY00hOyclm598by8bUOthex
9GeS8duztBazXT0TTYBgsyvMb/WcEq/I5+36WF9+gUvLvQqEx1mNhdSjrbZQ
4slV/LF7t/aIYMWS98l5pfVbJBaVe28IH7f1C7tuBetaXm91bMsFyHPRBCwO
LPqSXX8br4rebnEU4fIvYk75rtUf7PsLT7fx5Cr+XGGtq94bklNe27+996b0
BlhOV+p3luPYe9sKZ7zigNaGr/JjwUvkTkJi2zZHkz0qWuJVzLk6a3yFE654
OoljLz5PcsSLmnLJEcV3iP2TO9DKeaiSW63dXnEc8s6ruzoLB7ScwtpV0c3W
5+3cF3Yl/l7up7Va4lXMsXnWcvbij/behiu8UZ5LrZb4INGN13raHEH4GrGN
ErtsTLP9WoWXWaxofX+trb2r08bk11pHyY+Ep6//iO9YvFHuj7U6v+2nsv5V
dIYX/kjs1uobr8/sWExVNA2L8a7uHSLnZEntptR8r/rurDZOfLlwHOLv1t7I
50mts2gdJT+WHukrndxqEda/Fu8ofaolRxOd4QWPtjqYnfuLMztFV7d2aHk3
0TbJfpH6L4kntp5S1sr6/lqTtZ5kDck4CeYkONZqtgXvWR3AaoB2PFc8qGgR
1uaJvZE4fKWhkZ75K78j71w6WMHka+8sf7Qx8MX6FG3TcjergRCuTZ6Lflju
YLH4bc3Rcpwr21ix2uoM9k4kMkeL3yz+tFhr+bvVIqyPFHxypaFd8QjLo21+
Ie8n9nAVY8n+Lhsr62NzOomrJCcSHYlgWqK9Ex+8upuRxAGS36/ObhM7IfiN
xGpSV1q2QfyOrJs9s2nzRcmhlqsSnZDYs+2jsBra1Z1UltcUrcN+htiGjbFW
B7Y2dqWPrfUnsddiD6sn2L5uwr+sVlZii/38VW3O/u6KS1e/W3LuFecl/Qxr
Ha746fqtj59Zd1DbPHWV08udVIWPX/FZyxNJ3LAxlmBgco77Sh+z3yWx8YXu
fRUrij5pYwsZT+kHKL5j8wvBMFe6n62pWTxWeL3Fq0U7sr+78sXaR2vzFl+R
HozFxwm3LX07pR/S9vzb2GvtqpwTJ/5rfcfWu0m9psQKkqOvcgqJn1Z/KP/m
Qsmza8zkzOkVZ7Rx0s7d1jcth31dD11rYmPvFZe383rBYUksKmteuMaKvUXH
s797hcmJrmi5RvEXEtut5mNrB6WedcWDiA3Yfw+R6LdXnPEqnhB9o/iytTfL
3Uofgv0t26N7VXMkmLNw5xUnbX4sXIOMx+Lq9V3SO0rsdsWK0i9BdP4Xmo/F
6jYnWhxL1ueqN4/E5ILTrJ1c4cYyd7vmL/7dNFsPtetG6mIrtth6tOVfZPyF
x31RZz1KP5XVmuweEbsl/QA2RxPftH16V/ePvejHs3jmyg6tXZU6u7UTq7fY
OEnmbu91JxzNxlKriVm8bXPu0vDXXpdeCOtfL3jci7MeBNtbzkJ8Z/3uygtE
pyVnNsl7ig5j/driBIJbbG4lYyA5yNrh1blyi22IP1rftLUDclbC9m8Ubr5i
6fqttdcFM1suUHSGK13Lxn/L4wr3J3tXziRaDkveQ2JO0W2ueE3R98gYSq/U
iglFt399Hw7hGld3kqy5kzs9bN9RsT2iD1jcYm248DjyHtLfUnLfunel9PkT
H1m4/Ys662HzyItnEv+J5lPiquU1ZI9KPZFwMcLrF5az8dDeFWzrYsTXSByz
PVoE25f7IYmdE9sjMbDgQBJLSw2RYGabI2zus7UJMp4Vf0oetLZBcHLRkF/c
EWc59YpjJa4WPmVto9Sd7Z14BONZjG3jhr0Ph2gjxE/JWSSLTwj+t/ml9Idc
1SCWL5RzeS8wIak12BqBzS+lLvDiHu+SRwovu7ojjvQvkfGUuGrtcO0jqU1Y
fcOOk2gdtsaxsNOy7XIGh8QxwgeJDlD6RYstkbmv9S8a3XrPi/hwhQnJXKwt
lZ4KuybFlwnntXm/nD8qNVNS27V2azma5TJFfyM4lvBQMuYrrHLFT8l+FWyz
/k64P8HMZO5EN7ZnpUl/hcUn9uxziQ9rzBYTEm3nypZIXLW1+OLLr3uErjgC
iS3ltyx/X3GvaMVkDYn9r/EUTnoVz69ySrn7hfggiQkFexMtvdwjQT5je++L
Rve6J2et4cKEK3dbLcLaErHhK070giNYjaJwBDJOy9ntea7SZ2K1YutThY9c
3Qlj43nJKQV7k70g67nGZnsAig9e6UJk3YpGZ3W5ou1YHZvk36VFrJhf7mBf
tvTizhbLEa40imIDZO8sbyXxhPCgtRcEy5F3Ll8guY9gLatd2Jxl48ayeYuX
1pqQuzVsPcj2xqyx2bqA1YUK5ixYhfRHWW3H2tvVfNf7yT0wVn+zPlj4yJVG
Ue6y/pQ1kWI/9q6n17juhZ5T8vKn1OgIZySxhfiUtU/bZ2XHQzQfMobiswX/
2+dSsyD196tebmIDtofZ+rW9G5b0+1ltsNzhQPZujaHkwTI2q5NYXGd5q9Vz
XuTlFxqd3UdbN7Hx1p5BsHGAjNPuxRX2s9jG9ufYvGl1ADLfol1brW/Z6sIh
5X6hEt8ITrZ3OFjfJ3GA5EG7v2QMBWcWf7exq/Dlcl+ZjVEWi1puZdff3iVV
7HmNk/jUWpOlXRSfXdiG8GjLqa/uXS/PJOYs277q+13aZqnfWd8k9ln01as6
o/XHoqtY/Ebw5+LsdgyFLxccbjW6q+flXwRDEv2WjN/ac8EzZM0Lr7nSedb4
1+9e3btu65425pAcarnYi3NGNo6R95BaKtFXbWxZOPbFmXFSZ19zJ3+3uIKs
A6m9FpshugfR6IpvLkxleVPpN7D5nWhWBc9Y/a1o7La3f73f8jUSi2y8tbXm
9bukV3lxMWtXr2uv1mZITLP52tYZX3A9YnsEV1tssPB/uWuRYNQ1NrIOV88k
/5b8daXP2Lxsa8RXdxeTmEn4ke3tt9o4qVESfrT81965arEo+bv9DLHJ1zok
wfxk3wunJrnJ6paWjxdsZs+dFaxu8fkVZyx3d5DaE+HL1g6LPZC8bLn2C76/
dJWVpwrHt/5L+pfIOO3aEixROBTpPbZ3hhDt7kqHXDZTMBKJmYvjENsg+dGe
oyw9NiTv25o1sYey5oUzLtxFtDIynoKXyvpY3kFymY05FsOQXGDXisTeFXMK
TyFrVWzD9tBandbiRuKP9pyR5TIltljdmKzteifpqS64l2APaycWR/0PdHm2
MQ==
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "16229780842690144670"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.022938458248972893`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.9770615100860596`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzNnb3Kdt1VhYPiDzaegBZ6BhrQQvN9egqKgqBIBG1MFGMRbNQjEARB7DwH
OxsVG7tgY+MZCB6AhaABi+cFB1wX11xvUnxh5+W+9732WvNnjDHn3M9P/c4f
/srv/cBXvvKVP/7R//2fX/n6t3/5W9/6+p/86g9/9//87te/8dWf/cYP/u/l
n//ff9+9/s3f+PaXP//jf/u13/6nf/3av/3Wv3zxzf/+vS+/8c9ffvHx+uoz
5PrjfdY912fItb2PXRvZE/tbL/aw3LPs4ffDdz+nfb7wl6tnf32fK194YZ9X
ceAqPlytwa7zD775nS/+8y//8Rd/7a/+7mt/9l8/+eV//MTvf/nLf/rXX1xd
f7z/uraf/3j9nb//ma/99Fd/4Ysf+Zu/+MV1be9j13C1D+SeZQ/LuZDvrj0k
93n9Xbv/L/at2MnVs7++z4s9vLLPqzjwwo9s7HptVz/0R7/+5S/91I9++WP/
8Ndf2Ot1/485iKx55bWPnyHreb2GtW9kH8g9X+foF2sgNvzxMy++a8+02Ebx
o7K35N/X/a/uc+VfL2La1Vm/8KOP+0xil7UxsicfP/ORF6z7rOuPn1/8wuaR
dV4fP7NiBdnbsoa1bx9/d+0DuWc59xe5m6xh7QOJY+tM7XcXd15nus6l7Bvx
I+sv5LnW/i+/KPd5bYdX9vnirK/WueI82fN1dtauLCf6uG9WMyG/S2ze2p7l
a2sNZJ/td+1ZlBxdcvdaA+HONibbuPfJ7/77z335//237Hbdx9rqlf3P6/Fc
H/9LsR3ch+TfYodX9kn85cX6yzoJ/rH513JnorGQf1++prX6DzZpcxmxYZLL
dN7/sGZyLuvcF26xOXpdl3rH8q+Peztz94jJE5/LWGf3kNi8tWFr/4TnEr5J
cuKL3Eds2F5b+yRnveJeWX9ZJ9EoiEZnv2v1c4LxyO9arG7Xg/Iv8IWCzwtH
JljC1kHIGqxeajGt1Y5WLiiaXuGSRCsg+jCxc6K9kHxHNMmS+wi/LvyI2Cfp
mbExk6y/rLNoRNb2iH+Vs7A+SDRJYm/2/mv9y04sPifYwNrSxDaDX5S9mtgb
7MO6XjZJYi/BcpYXWy55ZW8Ei657kvhm12y5KuEma22WHyE+8pEHAlxK4oD1
EbtOUjckdlKel6yfnEXpU7L2Serp5P5Wn7f1u4IZiu2t/GV7NkgutniYxCvy
u+QZSe2snKm1N5ITLcdZes4VPyW8bHEHkkdsrZZgBmsPJDeV/p+rep/lj7Yu
Q/I7yftkPVe9BER/Rvxu+Q7wKRKfLce09kzirfX3wgXIPi/MZn3E1jTJnti4
TXqcbG8J0YqJflW0d1KDQzxLYtR5Hepohd/ZGE4+b3XyUoOzONP2exD+u+5Z
dDmrhWp94EiTJHGbrJP4lI0hRO+1XOBqb7VuDOo4JE4SXlNyqI0DhKdYLeiF
xmvrAqTGVNZseU3BITbGWr5P9uqF3xU7JzGf7KetZRAfX7nG1h1KvZicu+Uy
NoYQ/Xbdn8xflOsSW2zN1MbkhattbdfGUoLHCE6+0nhLDF+2RDQZiw9J/9VV
nC86m+1BIpzXavV2Pq7gf8vXZs4atbwSP5d9EmxvbabMQC37IfGKxHNr8+U+
V9ojwcYWT65zJzyI+B3Ri2zfFLl/2Wfba2Rjmj0LW+cq7xAgOMHGUtuTc9UL
R2aB7RmVWrb9/NKRbPwkPmX7sa1uYzE2ued63iut4EoXKtpjif9XvVKF45Mc
VHLZ8mW7zxbnrHj4WpOx+b2cC1nz3H9QZ7R6IIlvVtOwdWTCcWxeLrV1kgss
J7L5i+TfKx5K9Bzrv0Qnt7pQ4csl/tv4Ruy2cHwUW0DPKuH7JY+UPbR6xRX2
JrHrCv9b3yH3tHqm7RshutxVn9uLOGbzzgtcR+aIyV6VmoKNjfZZSN/yiidE
0ygzFCT+k57JgqsJhrH9bwSTv+j3QP0/YA9Lzb3EZJuDyLmUOFDmNEnutnjv
BX4m2O9q7syujfQFWVxHYjvhEcT+i/Zi922tx+oSNrfamWKCZ4iPWK1y2TOp
TxHMRnQS2w9J9tPOj8w8AupxBUuTNZB5AZK/bHwuvFjzd5CLLY+2+Pmq/lU0
ZBIHLKYi3N/GSRszyToJxrBanNY8wTt5bB+s1S7QvMNYJ6mZWvyseRnIETa2
294P8ly2l/sTu5JzH0UXLTqhxU7knnZm7UoDsZoYwc/2jOw1yZVrbQvnI0wF
7PysHgTmodb16rVYz2h5zVXMIftZcqjG4RI/kz4WckalJm75SNlP6wtWfyB5
56rnszzvFX62GI9winJtMV6pcZB9K2soMZnETHsuV8+y/NfmX/IstnZp/dHq
KmTfyCw/0rEDfiY5iJyv7dMm3LPYIdkrq6XYOGZ1Uavflv0ncwRzr8B7isj8
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
Z1YHsDzrRT+D5YwlrpJ7kv6QsgaCsUl/eNENSi4uM1DWF4ptk74gwt0s/rc+
XrQ48vmJmeXffyQxmeDA0vNG8gjhfeQZS+wldTo7N2dj2tIBiG/afbM6qq37
WL5mz47E26sYWHAjeZ8t4UE2F5P9L301tia1bJv4S+k5JNflvVJFi7PY2H6m
1C8sVrd5ZMXPT/Yk9BaS2Gtrx2sPScy03Hn5FNJGAJe0tWZbB7nizldarq3L
WP61rksdp+gbFjMUf0fYdTwXmWmyMdPyaFtrKHyZ4KjyXFfrJ3V526exYrut
u9n9t3iS4ATCjywfJPchfme55IxR4W93Wh8kay5x3upChBfYd7gVHmExJ6mn
aGwJ+r7sWZccTTAM6c9cfelWgyJ8mdi8fS5rPwRzEgxccAup1V5pbuW62O3V
TIHdn5ILbMy3uNfWhmyctHrROhfiazZ3FP3Zvh+P2FjpayJ7ZesL1i8IH7d4
z86+rc+s+6B4MrAZ4S9E2yfcZ+as0Pt9xQeL5mZtyWJI61NlNpNwDZsLLJa2
s+G2jlBydNHGbSwtc14l11jNgeTc4rMWn9vaTcmh9jNFY7Q6s8UVBOuiOCyx
n43zpWfsyv4tP7UY0vqUzRHEJksuKLnSYuDiXzZHW871GmNc5ZqiOZSae/HN
8t4GglvKe4PLOy3J3tp4WD5va3nkGW3vkM25lvdZ+y+95aQOQnzqqseVcLcy
V1VqTwUDW7xh806xh4IxXsQQqzkQ7m95U8lxhYeummaZEbY162LPBAsV7DRn
bY7+rpZ9zxjJR6Vv2faoWNu2Mbx8huD5yd0AL7DzpAQvkXUWLmnrVhbXWZ2k
9MG+uC7cltQfC/6/4qGLO5PftTXT8lyvObV93iuMR37Xzn5ecczX2hHxl3JN
ejUttiF6guWnxMaIb9pap525IP32ZZa29DwUbkVypeUyNvYWP7LPZWeX7JpX
XLL3t3rCaxsg7z2wfRpkD23/5AuedaUdkRho95lwlpUXSKy7qj0RW7J8meBz
klttbdTO8tj6u/VH29dnY8vKNUVzJnXYKw2W4IcrDYHEIvLsZfbtygZsji6z
SFdxuMRqckZWO7Jc9apH3eYgwhFK7clieKJDEr8j2L7Y/MqbxEdK/P/krEFf
n+WzpO5D+odtrxSpc9mze6GbFX3Jxh+LiyzOXzZM8pTto1uxheii5ZrkTTsb
Rc79qn/G8rUyL0b0f2IDLzCDjfl2D1/0B5J4+GJWl3DJwpdtvcnGxis+aLlG
0d5tfrd9ztYObW3O+jvhU5/cH+jSV7189lkItrH+aGNyya3kd23PRjn3K8xQ
+B3xETuvup6X1BRs/YWs3+Leq3oZ6fEmayt7YvnywpZFH7N1PWur5LmsfkXu
WeIe8SOrA1ssR56FaOakl6PEZIsB7LvICr8oms9V7riyZ1vzXderFmxrf7Zf
l7wz7aqHqnyG1CbKnpR1EhxeOFHRYQoPtespegvBUQRXl7xDYq+NFUXzsTH5
Cuva9RMcTnTX15rPlT2T87JxvuCQK3xoa9mlrpTOCLw3nsSKYjOFW13d09Zb
LQ8t+aXU3QgGIPjT4j3Cu4uOcVUzunpeiwFsL4qNOST3Wc3nCi9Zbkt07BVX
r/R/W6cjNZqCDa6ubf9A6RMosZ1wKHvPhasJ77jSiklMK/Ugog2S+o7FTgub
2bhXYq+NUeV5CQZY+bHkuLVOknMLL7B4ieQUMku1emmsfnX1vLY2Z3Pfwqjl
+kpHIvmdnKntDSbnaOs+BBeR75LcVN6JdIV1V4yy9R0bf674IMnjZS7GPm/R
GWy+s/nC1omI/a+4V+Zwia+RPS997wSjlrOwdmvrdxZvF9+0edDGopLHif52
5Uf2HQtrPXZtiZ8CrnrFX2yctFqfrUlZzljwLXn20t9F9DdSJyL9VDanWx5U
+jqWRkE07RIPyVmUuv/6POEFtu52hWGuMF6qpY6YRvQc4ke2J2H5EdHWCLey
faSF09l3+9jYbrU+omeS/iXbv0E+b2OFxSGl7kPy7wutgOyVraHYepyNSwQ/
XM0BFU5Rfhfpb6HWULDTa+6D7By8J5nEYcsdiD8SflrqgIS/kP280vpKz+TC
ToQ/rnWW/pD1GZvfX8Sc1xjPxjeChQoXJtjD9j+XuPc5+w1s30V5dwHBTgQX
Fe5zhQfIb6166JWGWXyTnFHZ84JXSb4g+Ytwh0/uP+rj5L09Wn8DeHU9S9HY
v1cYz8Y3ojMT3kfqqsQeit9Zzkhs6arfgJzLi7pY4WhX+Zd8vtRkCXewGmbx
zSvMdsaDpG2U3mOidRNeTHKKjTkkL1ucXHSqK4xn4xuJCZZzERz4Wn8g67c1
96STgzrUyjVXfV8lzl/l34KTS3wmNlzeJWjjbYnVlgfZc3+hlRGNi/AXEq+I
bmy1O8vfy3yKxXhkXvvK34sGQmbJbX60Wr3ld0WrL5jf1qCv4vaL/Ftsj5yL
1S6QD8q/EVyeq3DGz3nW9neJz6JcL/NR6TOx8dzOkV31Plktq9iAtcmruGSx
64qlhYPYnHLFKa542ZWueIV7X3AQUlsk6y/Yxj6XrWlarnd11lYrszFznQup
C5P72Jk1a4dXecf2PpFeXKstW05a+tys35EYSLC0xeEEC9mze7EP61xeaBef
M85b37Q9jQXb2Pt/8izjnYHFBl70e6+1FU14nZf131UHWXztan+u8g6J5/ad
NktvIft5xUkJbnnNR4hN2thO3l1A9tlykM+5D1d8+SovWPshPY0EM5da21W/
B/mu7fsq+mSxyfIZ++zku6VOWvKOrf1ZDEw45lp/4aSk7mDtp/RQWb5me28K
FrLza6/3wZ7R90r/J3ib+GOJdVaXWHtutXHbD2PPuvQkvNDb7bOTPbfrv7Jz
G3MKTlu80vbSE05qe2hX3rnCWqUvwtqJjYd2jub1Pti8873S/+07JYhNkrmA
Mov0ol/OPm85d6vDXOntpX+p9HAWnyrcecXJqxpTif8Fq9tnJD5o+VfJ0eS7
ZGaQ2DzZt6t9sHnne6X/X50v6UMjZ4RmkcDcgV1nqQ2R7xY+S2ys6OSFO5Ae
zte2R3JceRbyuwSrFJssGNvijddzCmQ9FmOQOsI6a9IvTfbBrvmKy1/hInu+
xA5JDl12+IlthJh/1S9nY0vhsyQmFJ289LNd4b1iewT32h4q6yOTw8q5SDvL
ZvMp2Vuy/iucaWsZV70lxM5tTF6+udZM8NILH1y2Z2cuiLZGagEkt5a66ov+
BzL7Y+dcim1bnGnt/4X2uJ73hbZp67zER8jaiJ5Z/MLWcOfegveBlPhj7bb0
h9uYaetcJHcve7b6KtG7Ci4qflHw6guess7rqh971eks1i3PexUDr+z/ChOW
vSLPZWOXrVXZvHOF60huJbxvcW0y73DFGUstgGCqggNtHixxj+z5i/hpz+hz
cjESz632TuqqJAZa3Yn4iH7/krTDYv8v9F7Lf61d2fdIkDMi+Id83uI6y0+v
YprtqyfPZW3AxtX1mdJ3SvLglbZs3wNm46f1HavlXnExYpNlPbbHicSTpW0S
znilV5f6L9G0i95LftfqQpZ/lR48ot+usy51DTtHf5W/bHywNvY5eTTxNYt1
rS/YPSEY3vY5r7MudZkrLkbqm+S81nrs7Aw5I9STtrQjOfNL1lPmWK09F85u
7Y3YPMH/lgtbzLDOl9TFSE4ke0JqUhYfEt+0vmbzdeHRJA4T7PG6v4twJdL3
ZXvRr+oyloutPSf6g9WoVx6x9yF7coWFbG6yvKbUkcnelr640lNK+NGVz77Q
va/6DcrZEd+09yQ56IpHE5z/4t0Rtr/LatoWB15xjYJV1nOheb2Bn1/0XZNc
Y332Cgtdaf52nqJo8kQ/Ke9eKzmL8FaSO8j+Wzx21W9wlZuu9p/g6ml7kkeX
9RT8bGNyqdld4cnSP1PmR6xWWebCyuyM7akj9yl83MbYwo9KH9rSo0iMJZqY
1QdsHLMzei9mQosmX2qyNm/aWqTt1yp7ZWujV2uw9Z3ybkOLJ0v/zMrLZH6E
1GSJXkpivn0fyMoR65pg/vUsFmtdaf4FG9s8Uni6zS/k7Ei9wObHtZ6ifVkN
jfQq2Nhla4UENxItyz47uS79vXYNBS/ZdxtaDG9rPVd5mdhtWU/BfnZOmfRH
WR5KYi+JsYUbkv1J5wV4etHBVr2VYPLCwUn8IdoX4US234DosbbmcjXjZus1
5T0hVnMgdRY7z2vtp2h9FsNc9VFY3kFy2fp3YhsWfxKbWXtS+nVJLCL1rBKv
1v4QzmVx9bLVq5rvmm8le0U4ONESl50ULklwAok/tuaiNQF5beO2rW8SzYHE
OosriG5pc5nV6KxGVPKy7YsmOrzlShPDD/xp/0YM4S9F/7fneBWvCmazWoHF
Zhb/kHO5ytfF1xCXHDnX8s21BuJHloMTPFbO1GrshO9bLEr6qIsOQDChPZdS
61nPbvPXwjyFK1m8VPAJOYsVb4m9FVsqz/Ii7k0fWbl42KrlFDZ32HxN9s1q
KYSLlZlckmuInr9su2Bye6bkfAnHKf2ftv5CnqvgedIfW/I7wf/k3O3nLVey
f8fc4hPbQ275FNEQ7HNZbHNVzyr6HsFpJH4SnYTka9sLZ/MvwiRAfyOxlOBh
hKPkjBvBbOtMy0zu1AHkfqL6S8CxV7nPYhLSo0XOrvQ8LD+yXIngyYKlSf4t
edzmeqL5FPxv983mF6sDX2m/9txJbip+WjS6wsvWdfmtqzhQYkXBbwXPkM9Y
Dbz0sFmNpfQK2p4Hi2/JuZB6hOV9tgfsdc+SzXd2rm3xWRJ7S22a4Exbo7Hr
KTUC66dX2pT1lzWrUmbuCGYm/25xKTm7FxpLuQ/RwMn+289c1SMIPlwxuegD
ZG2FU5T+ohf3tHqF3bcUQ6SuRXRIYqtWnyTrsX3RlstY/mjP2vYkk1o8wQxX
OqflLOSepPfA4q6C8ciaSU2kYPKSI1ZuLfUO259s81fBV6QvonDPdc/iIyQu
kThT9pPkEZITid8R2y7vqyFx+Mr2rrDZ8kc7v2nraInfSYxaZjoIRrWxl9QI
bB3Z9hdZ/7I5wuIEkjtsTrf2b69tjYzEDXJPOwNb8inBqCQGEjy/bIbkO+uD
treQ2KrVQq29XcVGYj8EA5PPFHuwet0Vxiv3IbmDxLrSB0vm3Nf+E63Jzsvb
GjrhwqUuY2scJO6Ruhipldt4QuyKzLVd2byNCbYvwtZWrC5E4hI5R2Iztr5M
vmtxbMkphOeS/Sd4ePm+nWcpOajwOxK7iAZuNR/7zkabB1/oD1YnubJhkjsI
RrpaP6l3kF7ET+KAfOeS7W0jGvL6/Iu+CBIbr+qJtr5jbZh8t8yHWixB9EnL
kQkeIO+wsj5ucbKNOSUuvdB8rnT+8lwWDxc9YdnwVf8Jmbu0fZiWE61/J72I
lh+Rvher+xXsUWbnydpsHynJO8RnS28S4RE2tpP9se9Rse+Fs2sg/Jr4VLEB
YhuFp1vNx/IRkiPsc1kbtrpKwbSl/6S8u+Cqdvx6rtnmxPK3A4gGeMXBr3Cd
1Qes5n+FUa94K5mZIji/zJfZ2lDhIAXbo/4rwNMtFrW2XfzLcg1iw1YTtpjW
ckPEPcG7C+w9rWZisYed4S1+YddAuHDBZiX3lf0nZ03WbHsXydpKbiK4i8T8
K4xN9s1qnmUPSa+LxUgFU5V+gIK7bH+LxU7W/m3/idU3Cqeze0Kwh8W6RE+z
fkqeBXGNo+cqXJLsv7Vha9sEgxVfsD0wVxzZYmyroxIeZH/raobazgRZXGe1
lMKRF2ckOdTamNVObdwr+2BxKTkvopUVTZ7klKKhFc287DnhvNZnCaa1e1Le
e2NtjMRtor0UjmzrgzbvWDxs+9bKDHXh4FZL+X64LjMC1lZf9FeX+1g8Zv30
6hkXNyG4yPYPE15QNCuC06wuZ/MU2ZOrfuCr9RP8s+zkivfZmGB9jdRxCC4t
M9S2X7T0t7zWmkr8JPNKhDcR+7nSB17rJyXv22e0vG993s4YFs3BPhfRkWxM
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
n8nayGyFjRv/A8Tk6nk=
         "], {{0, 128}, {128, 0}}, {0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "41966635277478833399"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.243928924202919`"}], ",", 
      RowBox[{"3", "\[Rule]", "0.7557556629180908`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzt3TGrLkcZB/CrgljYp7YwhViIQghCziHibSwsrpVgwBtQUIJCQgixEFHB
b2BhJdgoWltoKhsrP4Ck169hAhYb4gP/x5k5Z3bfX3Euv/uy7767O7vPzD47
M/u513/87PuffPLkyVuf+eCfZ8/fefXNN5+/+61Pf/if7z1/4ytffuNTH/Bn
//370O/9/endd3/+pbtnv3v1lZd/+tu7b7z+w/tf/vXF+6OPy4y4Wmfyuw+5
Pd3vJn7I764+bjsc59XfHSmvFWU3Utbd9YyU46wyWhGLZp0Ds2LX6nJJ1vPN
p1+4//MLP7n72ru/ufvR+y/d/6+/4zLd8jp+N/mtZBtWbE+yzmr7q+WT/Zr1
3dXHbYfjnJyTs87nblmvKLuRsu6uJzmeI551HXXP4Vnn4azYtbpcVl/7f/vL
F+//8NqvXvn9Pz4bLXPcnuq7v/7nL+7+9fl/3/3xT9/5iEfWmXz3WA9W60zW
X23/15/+4P7ldz5x/8Lb3/5q8nn3u5VnHbeRc2PFcU7iw8g2d8u6+nyk7EbK
unL3u1WM6raZk1jXjQNJLJp1Hs6KXavLpdr+al+Of8k2V/uYuFpPt/5N1jnL
3Wt/pC5InJwn1fHsHrdu/NztOK9Yf7cO6pZdN853r4uqHdg9V7tt9WSds863
kXOy+7sjbelZ5VLVR9W2HZc/rqfbdho5nkk9lfghY9GIZ9VHx/KqzplZbenV
+7v6dx9rf5NrbSRP0i3r4+dVWSQxZ9Y9e7ceWX1OzrpP7F5rI+WSxPzjMkld
MKtO7C4zkj9c3T7crS443rdWbYDkOt0hNl7VSZvwWHZJnmQkV3bcnup5X+Vk
+eR3kzz/zudJEruS5avYnhznbvuhiv9JXb/6eCZ5uSRHd/ZYlMT8pB6vrqmH
fM57y07ahCP1fveet/rdkThfxfCRnPkZPdL+r45PEvMrH8uuex5W9cVjxbrk
2cQObfjVx6dq53fbGzvkgq7qbpvwWKbde70kz1/F8yrf3m3/J+2Q7rW/Qzmu
KOukfKvYm+T2k/ql2rbkPuIh87TJfUpVf+1wbqxoV3Tv75JzMjmfebzsqnO1
u0w3/9Nt5yd1TbW/D9lu3M3d9n9VLtUz/W5+rFunJ88CVpdpdRyqbUjawGd0
0h5I2mC7Pf+9Ba+oQ0fy/Ek7v7qnrj6vtuGx2o27lXXyvL66lme1b6vvruiL
O6veTPLYSU777PGtquOqZWa1Q3bYd/54uYz0Z6ieo1Xrqa6j6rrr3r/scGxX
X7NJPj9ZZ7d92+07mtTvK+JDsp3VcUj6PJ+x7bGib1XSDtlh33ldLKqWqe4p
VvQJOeP1uPoa7OaFkvZtt99mUk+tHgda1UfdnFVSl+1wzuzQDpELup5H+hEl
OYdum2FWf/gzOsmPdY9/kiepnukkdXH3mfXI+Zn0+63yY1Xeu2rbXLXt0W2H
POR6eJ/zIYn5SX/CkVziyDidszhpY3fn8Tiup8oFdftDduuXWbmCbl/lkTlw
RraB+UpOxhYl+YTuWJJbbv9351jojuFK2szJM9+qfqm2p1t23f753bqsyh2N
bAPzlZzE8KrN2c0hd583XekaTHI+yfLJGK6kfk/yPEkOKslfdeuC7vEcGf94
1fONOTnPu3mApO/frLHAOxyrWcc5qRO74/SrOjp5XpDk/apcSlI3rSjH5F61
O/6R+Zbd7ftdfTeZm6U7FvhK12zSV2ckR5H0jazG8XXHcVfPT7tj0LqutiHJ
+VypXcE8y7Pa+cn1WH33qtdm0r+u20ZNcjJJDqcqr91ycd3Y3q0jdjhPmB/r
muq237rzlVWfn308TjdeVXVfN2eS5FtG3pWQ5OIea16d5F7paO1/5jw+V+6O
+eq2+W9hPM5I7ivpD5O0gZPf6tZxj1WfzvIO5wbzDtdRFa+SXEH3WefIu8nO
4pGxurPi8JXinpjPPPc6SmJvd06tpE/LLcxD2B1LJUatqwt22Gbm3TwSb5O4
Xc3N2O3/eZZrudsnZ3WfyVuwmM/8/10v3WWqtmv3WWES6844D2F37uuz13fM
fG0nsas7trfKe5xxXoikruzWCzvsFzPfprtzwyZje6vPk2fBSbzdwd13uyTH
Z4f9YuZru5tHHclvjMTJHY5VdRxmzZkvp83Mu3lkTrBk3oOz5MaTbUjmQdph
X5iZEyfjT0fy3ol3OA7J8anmQbqF8W7MfA0n40+rNnxyj1DNO1fNQbdbzBwZ
B+1egJnP6Oq5bfdeYNb7PnY4JiPjqXer15iZq/g2kgOvlqnW81hzjo04GU9d
3TedZR+ZmatYPTL+N5k/Z4f9rfa92/epWs8O+8XMXLn7HrEkvlXzGO/2LKB7
H5TUdzvnuJiZKyfvE0/mkU7Gke0cJ7tzZVR9hHbYF2bmykn/n2QOzGQ87G7t
/6O77+dK+tDusF/MzFWsO35e5TSSeS+r3HgyFmyHNvPI+9BXvz+XmXmFkz7/
STxM7h12e/6b9F9N6ixxnpnP4m5OJnmPTJLbP0ueZGSebWbm3Zy0V2e1b6sx
wmIpM/P+Hnm3ePW8IHmnOTMzn8vH2H6M+dUzBW1+ZubzusrtV+38ql7YYV+Y
mTl38vx35F0zzMy8j7v94ZNxUuZPY2be00m/oKTNn7xH2L0AM/OermL+sZ9n
leevbPwsM/O5nOT2j3XBsY7QzmdmPpeTedKSfj7VHNE77CMzM3/cVZyvlk9y
PsaFMTPv6e58ON35hdwLMDOf1yPPc90LMDOfy7Oe4VbzBbkXYGbex7PmCK2e
I5svjpl5f4+0z6s5oqvnBe4FmJnP62qO6OQ98uaLY2Y+r7vvCKvWY+wYM/P+
Tt41f8z/VHPBefcuM/N5XT3nPS5T5XzEfGbmc3nW/P/y/8zM+zuZIyiZ/79a
Xv6fmXlPJ3P7V8tUeaGq/S8XxMz8uO7O7VD1809yRNr/zMz7u+rnX8X8bs5H
+5+ZeR9XY7i6eaEq5+NZMDPz/q76c3ZzQdUyckHMzPu4m5NJ8v9Jm18uiJl5
fyd9RJN54XbYF2Zmzp28R9L8D8zM13ASq5N3h4n5zMzXsNjOzMzMzMzMzMzM
zMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzM
zMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzM
zMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzM
zMzMzMzMzMzMzMzMzMzMzMzMzMzMzFf1fwB4rzj+
         "], {{0, 128}, {128, 0}}, {
         0., 1.},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
        
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSize->Automatic,
       ImageSizeRaw->{128, 128},
       PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "72502378842348778161"}], 
     ")"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"4", "\[Rule]", "0.3764980733394623`"}], ",", 
      RowBox[{"2", "\[Rule]", "0.6199482083320618`"}]}], "}"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.775513848008978*^9, 3.7755138953599653`*^9}},
 CellLabel->
  "Out[148]=",ExpressionUUID->"576bc860-4192-44eb-835a-1219d7bb924a"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1057, 959},
WindowMargins->{{Automatic, 31}, {Automatic, 0}},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 182, 3, 67, "Section",ExpressionUUID->"388a0dab-52cc-4126-ac63-0319c67848e8"],
Cell[CellGroupData[{
Cell[787, 29, 171, 3, 54, "Subsection",ExpressionUUID->"76af5f73-63af-4700-a231-2a753da13bcb"],
Cell[961, 34, 3138, 45, 194, "Input",ExpressionUUID->"11312d72-7371-443a-83a5-7022f7996460",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[4136, 84, 325, 6, 54, "Subsection",ExpressionUUID->"9d0547cf-17e6-43be-b4be-9b07207ddad4"],
Cell[4464, 92, 6290, 151, 383, "Input",ExpressionUUID->"0ea53259-1886-425a-ad42-3a990f49b501",
 InitializationCell->True],
Cell[10757, 245, 2331, 56, 152, "Input",ExpressionUUID->"04e4fea5-f97b-4096-84e3-b820fad8b6e7",
 InitializationCell->True],
Cell[13091, 303, 2387, 57, 152, "Input",ExpressionUUID->"3fa2af7c-8381-4684-81ef-83594cac1d45",
 InitializationCell->True],
Cell[15481, 362, 2171, 51, 152, "Input",ExpressionUUID->"db54f16e-cff6-4a0b-9a60-81c7fbbcb875",
 InitializationCell->True],
Cell[17655, 415, 2394, 55, 152, "Input",ExpressionUUID->"f2bf3b57-57d3-42d3-a32f-7c120c1b4976",
 InitializationCell->True],
Cell[20052, 472, 2801, 62, 173, "Input",ExpressionUUID->"e9e5becd-28d9-42e6-a39b-71cbb8836a31",
 InitializationCell->True],
Cell[22856, 536, 2845, 62, 152, "Input",ExpressionUUID->"0584a446-b140-4330-aed6-029b46bd55de",
 InitializationCell->True],
Cell[25704, 600, 3370, 72, 173, "Input",ExpressionUUID->"6ac8b246-f929-4ebf-b7b6-8430cd9ee71e",
 InitializationCell->True],
Cell[29077, 674, 3563, 75, 173, "Input",ExpressionUUID->"12adb21d-1eea-4b3e-8464-02cb9906d446",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[32677, 754, 224, 3, 54, "Subsection",ExpressionUUID->"15994768-2a7c-48ae-b9ce-17a15e9f2d01"],
Cell[CellGroupData[{
Cell[32926, 761, 235, 4, 45, "Subsubsection",ExpressionUUID->"8d9af586-96ae-4f0d-8b0d-8fb70cdf76ee"],
Cell[33164, 767, 3776, 80, 152, "Input",ExpressionUUID->"7f290f76-4d20-4a45-99c1-be4d3ac55caf",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[36977, 852, 200, 3, 45, "Subsubsection",ExpressionUUID->"dbcb2c40-cf99-43a5-b6a7-efac0c5abb80"],
Cell[37180, 857, 3532, 72, 131, "Input",ExpressionUUID->"6fb675f1-8cd0-423a-915b-241cddf189ed",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[40749, 934, 322, 5, 45, "Subsubsection",ExpressionUUID->"4ebe7869-f88e-4902-9783-89e59803ff91"],
Cell[41074, 941, 4606, 122, 278, "Input",ExpressionUUID->"a1f86501-5115-43e0-b323-e3a0c8631d00",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[45717, 1068, 184, 3, 45, "Subsubsection",ExpressionUUID->"bb2826ed-9356-452a-af36-99095ba0dd59"],
Cell[45904, 1073, 3565, 77, 215, "Input",ExpressionUUID->"98ced873-5ac6-4b9e-b650-c158965ee498",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[49518, 1156, 185, 3, 54, "Subsection",ExpressionUUID->"476bdbe6-8561-4171-ad26-ebd401370f13"],
Cell[49706, 1161, 4267, 109, 341, "Input",ExpressionUUID->"acd3d2ea-8896-4cab-8715-3bbeb4414ec4",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[54010, 1275, 170, 3, 54, "Subsection",ExpressionUUID->"45835d6e-7c4b-418b-b16b-5826ff7ae0de"],
Cell[CellGroupData[{
Cell[54205, 1282, 176, 3, 45, "Subsubsection",ExpressionUUID->"9857ce67-d967-41aa-a1c8-dc4a01e111e2"],
Cell[54384, 1287, 2174, 56, 131, "Input",ExpressionUUID->"f1b2d4ee-d8dc-4695-b1d7-f5232f433426",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[56595, 1348, 361, 6, 45, "Subsubsection",ExpressionUUID->"4337255d-1ac0-4e9f-b9a4-7997f6bc9959"],
Cell[56959, 1356, 2732, 64, 131, "Input",ExpressionUUID->"1bcaca1e-b1cf-4b63-8094-cbf2abfbde08",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[59728, 1425, 412, 7, 45, "Subsubsection",ExpressionUUID->"34c9b6fd-1f90-47ab-8b2c-5e5c94994247"],
Cell[60143, 1434, 2824, 66, 131, "Input",ExpressionUUID->"f32e8e66-81e5-45b3-85e4-862ee4f682b1",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[63004, 1505, 217, 3, 45, "Subsubsection",ExpressionUUID->"bbe46304-a8c9-4610-9b2d-fef266fb07e8"],
Cell[63224, 1510, 2576, 63, 131, "Input",ExpressionUUID->"9ca14769-9284-4d60-a31b-5e487857ead1",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[65837, 1578, 265, 4, 45, "Subsubsection",ExpressionUUID->"a82e0c0e-c882-433a-8a7d-11c2fd71246a"],
Cell[66105, 1584, 2624, 63, 131, "Input",ExpressionUUID->"c836ec84-2e68-492b-9d3a-e4f43e626853",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[68766, 1652, 460, 7, 45, "Subsubsection",ExpressionUUID->"14961ecb-b2da-4be6-a711-e505ab698b4e"],
Cell[69229, 1661, 2867, 66, 165, "Input",ExpressionUUID->"0b34b92d-9faf-4371-94ac-ddd720c4e04d",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[72133, 1732, 318, 5, 45, "Subsubsection",ExpressionUUID->"3187af25-8038-4a1a-9805-91c61e491f01"],
Cell[72454, 1739, 2693, 64, 131, "Input",ExpressionUUID->"8a0e5cb2-474c-405f-8ccf-85cdfa941db2",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[75184, 1808, 269, 4, 45, "Subsubsection",ExpressionUUID->"85a1c8ea-6ff1-4040-8497-e1e5a7fba947"],
Cell[75456, 1814, 2506, 62, 131, "Input",ExpressionUUID->"089e5987-d976-416f-8c37-15894e1f2585",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[77999, 1881, 172, 3, 45, "Subsubsection",ExpressionUUID->"bcf88996-962c-442a-8768-3bf69f86b80f"],
Cell[78174, 1886, 2404, 60, 131, "Input",ExpressionUUID->"f976eee9-cad7-40ae-9eb8-abb7f641dba9",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[80615, 1951, 170, 3, 45, "Subsubsection",ExpressionUUID->"f5bf9f31-35b0-4385-b154-d1126b5f2296"],
Cell[80788, 1956, 2610, 62, 131, "Input",ExpressionUUID->"7b022004-514e-4e0b-a42b-ce72906e235a",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[83435, 2023, 221, 4, 45, "Subsubsection",ExpressionUUID->"89a0c131-9a09-4809-a178-0bfd9abfdb20"],
Cell[83659, 2029, 2715, 63, 131, "Input",ExpressionUUID->"cab3044c-9201-4580-9dce-211a871b1b81",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[86423, 2098, 167, 3, 54, "Subsection",ExpressionUUID->"b8bb5af3-a34b-4962-80ac-bbc195d25f55"],
Cell[86593, 2103, 2766, 64, 131, "Input",ExpressionUUID->"3dea61d9-966a-40a2-9fd8-a1e4d4758106",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[89396, 2172, 219, 4, 54, "Subsection",ExpressionUUID->"e3aa393f-40fd-4533-a667-8fbe54413568"],
Cell[89618, 2178, 2823, 65, 131, "Input",ExpressionUUID->"9e627165-365e-4b8d-9280-526bd76a8666",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[92478, 2248, 245, 5, 54, "Subsection",ExpressionUUID->"6d63eb61-66bb-4d14-a991-dd560e484611"],
Cell[CellGroupData[{
Cell[92748, 2257, 371, 7, 30, "Input",ExpressionUUID->"0f93efd4-1c2f-457b-8951-331a84496c40"],
Cell[93122, 2266, 44188, 891, 75, "Output",ExpressionUUID->"b9bf4141-a11d-450d-8803-4b8ac2b69c7a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137347, 3162, 370, 7, 30, "Input",ExpressionUUID->"7767037a-7c87-4473-a2d0-952a223e2690"],
Cell[137720, 3171, 134596, 2810, 292, "Output",ExpressionUUID->"36ab19a5-4af1-4e46-82f8-8d3dc97b196e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[272353, 5986, 365, 7, 30, "Input",ExpressionUUID->"86390fb2-f64a-4ff2-832c-ac72d4e204b7"],
Cell[272721, 5995, 18154, 349, 58, "Output",ExpressionUUID->"9179a728-a9a8-4780-9e63-00a78be8b8e3"]
}, Open  ]],
Cell[290890, 6347, 645, 12, 30, "Input",ExpressionUUID->"56aabf8b-2a78-4e43-80e8-8fef4f8b5dea"],
Cell[291538, 6361, 692, 12, 30, "Input",ExpressionUUID->"dfc030ba-235b-404f-8e5f-731ba8e231bd"],
Cell[292233, 6375, 639, 12, 30, "Input",ExpressionUUID->"273100b7-f0fe-46f2-9a58-a7449cd5cddc"],
Cell[292875, 6389, 644, 12, 30, "Input",ExpressionUUID->"1660fba2-5efc-47f1-9bc4-79afcb914d11"],
Cell[293522, 6403, 637, 12, 30, "Input",ExpressionUUID->"a0d931d4-dc63-4003-9a43-abc85e793cc0"],
Cell[CellGroupData[{
Cell[294184, 6419, 839, 16, 73, "Input",ExpressionUUID->"47493625-dfa7-4c12-865a-480534475038"],
Cell[295026, 6437, 157, 3, 34, "Output",ExpressionUUID->"0b4bae85-953e-47ea-8512-7d1769f71d36"]
}, Open  ]],
Cell[CellGroupData[{
Cell[295220, 6445, 595, 10, 30, "Input",ExpressionUUID->"82f0bbd2-50da-4bea-88a3-5929536f4e2c"],
Cell[295818, 6457, 124025, 2137, 627, "Output",ExpressionUUID->"6c39339b-d645-4ca8-9601-4d1d479cd785"]
}, Open  ]],
Cell[CellGroupData[{
Cell[419880, 8599, 595, 10, 30, "Input",ExpressionUUID->"6e56c0ab-7765-474f-8007-ce3075da2b40"],
Cell[420478, 8611, 108660, 1885, 627, "Output",ExpressionUUID->"321451f4-4019-4c26-8d16-98f5a30fa300"]
}, Open  ]],
Cell[CellGroupData[{
Cell[529175, 10501, 277, 5, 30, "Input",ExpressionUUID->"2dcbc689-857b-4b5d-a015-d6a01eee2769"],
Cell[529455, 10508, 304, 5, 34, "Output",ExpressionUUID->"442fee27-414c-48e3-a355-c36aca7d4412"]
}, Open  ]],
Cell[CellGroupData[{
Cell[529796, 10518, 259, 4, 30, "Input",ExpressionUUID->"d687882f-aef0-4434-b1db-2f8aa9a245f7"],
Cell[530058, 10524, 44705, 904, 259, "Output",ExpressionUUID->"36a6bf8f-33be-402b-a716-5c68d0fa4848"]
}, Open  ]],
Cell[CellGroupData[{
Cell[574800, 11433, 1355, 24, 52, "Input",ExpressionUUID->"2e3f5dba-ceeb-4dc4-9d9f-6c55c2be1c7d"],
Cell[576158, 11459, 44686, 905, 75, "Output",ExpressionUUID->"de3b8ff4-5e83-4022-b1a5-9cd245544002"]
}, Open  ]],
Cell[CellGroupData[{
Cell[620881, 12369, 265, 5, 30, "Input",ExpressionUUID->"dded76c3-f80d-44bc-a8cb-d1383d125d50"],
Cell[621149, 12376, 44072, 890, 75, "Output",ExpressionUUID->"69f6cb21-10cb-498a-a5f3-e2a1ac4abf81"]
}, Open  ]],
Cell[CellGroupData[{
Cell[665258, 13271, 1355, 24, 52, "Input",ExpressionUUID->"b7716be9-fe49-4871-b761-c7f2bc7ee8db"],
Cell[666616, 13297, 44072, 890, 75, "Output",ExpressionUUID->"9475968a-e7eb-44ee-8995-4aca4bcd750a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[710737, 14193, 208, 3, 54, "Subsection",ExpressionUUID->"4dc852b2-b98e-4f83-9cac-5ac4e359b1c9"],
Cell[CellGroupData[{
Cell[710970, 14200, 1435, 38, 157, "Input",ExpressionUUID->"a8800e47-47ab-4ece-a48e-bfa5a5d0c2b4"],
Cell[712408, 14240, 181, 3, 34, "Output",ExpressionUUID->"8374a6a0-0fcc-49ca-ba26-fae0454e1483"]
}, Open  ]],
Cell[CellGroupData[{
Cell[712626, 14248, 186, 4, 30, "Input",ExpressionUUID->"9c5ffe72-8a99-4df0-bea9-efe2da58b16c"],
Cell[712815, 14254, 63574, 1094, 307, "Output",ExpressionUUID->"77cff7d0-289e-4c8b-b0d8-8779493a7d7e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[776426, 15353, 615, 12, 30, "Input",ExpressionUUID->"cff6d89c-4b91-468d-a49f-6e75a783826b"],
Cell[777044, 15367, 5618, 128, 336, "Output",ExpressionUUID->"10a83680-15bc-4a50-98af-5daef0c722b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[782699, 15500, 1526, 39, 136, "Input",ExpressionUUID->"f917767b-8338-444a-a928-2457a298404e"],
Cell[784228, 15541, 35169, 630, 307, "Output",ExpressionUUID->"233f36f9-4ff4-4248-b76a-6058ca299c46"],
Cell[819400, 16173, 18409, 354, 307, "Output",ExpressionUUID->"be30ef96-2b5b-4e45-b1ca-a8f50075d993"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[837858, 16533, 193, 3, 54, "Subsection",ExpressionUUID->"115e0f41-1d29-42b0-b160-97fe4796a451"],
Cell[CellGroupData[{
Cell[838076, 16540, 279, 6, 30, "Input",ExpressionUUID->"999b2472-a408-4b22-87c5-6f38ad3905f0"],
Cell[838358, 16548, 52136, 1051, 304, "Output",ExpressionUUID->"10128053-4d01-4f68-902c-88163b34a6aa"]
}, Open  ]],
Cell[890509, 17602, 1427, 25, 52, "Input",ExpressionUUID->"2b78ba2b-ca69-40f7-a718-85bd1ee0fd5e"],
Cell[CellGroupData[{
Cell[891961, 17631, 277, 5, 30, "Input",ExpressionUUID->"2d49fee6-0fc1-4f2d-be82-8cb69efbe488"],
Cell[892241, 17638, 354, 6, 34, "Output",ExpressionUUID->"560a82c9-5362-4524-9585-da4b03fbea58"]
}, Open  ]],
Cell[CellGroupData[{
Cell[892632, 17649, 259, 4, 30, "Input",ExpressionUUID->"76c414b0-2354-4828-b57c-fffb57f07863"],
Cell[892894, 17655, 52105, 1050, 304, "Output",ExpressionUUID->"83f18fae-4edf-448f-88a8-3584fd7af270"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[945048, 18711, 186, 3, 54, "Subsection",ExpressionUUID->"c219e134-7847-4218-9bfc-805cb9970bbf"],
Cell[CellGroupData[{
Cell[945259, 18718, 1431, 37, 157, "Input",ExpressionUUID->"cbb6c1a1-3c82-46e6-ada1-b2f828f91bc9"],
Cell[946693, 18757, 153, 2, 34, "Output",ExpressionUUID->"8cbbf700-8980-4f97-a87d-175854524ffc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[946883, 18764, 182, 3, 30, "Input",ExpressionUUID->"24a3e4aa-8895-4fb0-bfba-81f3bdb3c37c"],
Cell[947068, 18769, 62864, 1083, 307, "Output",ExpressionUUID->"544bbaa5-7a86-4aeb-b152-91611f0ea1e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1009969, 19857, 660, 12, 30, "Input",ExpressionUUID->"91ef8e70-ac8a-4d13-be6f-95353476855e"],
Cell[1010632, 19871, 5405, 122, 336, "Output",ExpressionUUID->"ef4549d3-d52b-4031-9d4d-6abf6d1672ef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1016074, 19998, 1568, 38, 136, "Input",ExpressionUUID->"fd04d8fe-82e3-4369-9c2f-ac111acf8e24"],
Cell[1017645, 20038, 37103, 659, 307, "Output",ExpressionUUID->"8c4544fa-c1a7-4dd6-8149-88b8ee7c1ef4"],
Cell[1054751, 20699, 20322, 386, 307, "Output",ExpressionUUID->"6e6a1f48-ffb6-44fc-8a31-c068f2038304"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1075122, 21091, 234, 5, 54, "Subsection",ExpressionUUID->"d3c24268-4836-4377-8821-dc4f21d4aaaf"],
Cell[CellGroupData[{
Cell[1075381, 21100, 293, 6, 30, "Input",ExpressionUUID->"337713f2-355c-4d38-8249-9195f5d0c538"],
Cell[1075677, 21108, 111908, 2240, 679, "Output",ExpressionUUID->"057dbb7d-543e-4477-a4f5-3e4cb69aa8e4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1187622, 23353, 353, 8, 30, "Input",ExpressionUUID->"0583ac7c-345c-48fb-bd03-f281533caac7"],
Cell[1187978, 23363, 94613, 1885, 76, "Output",ExpressionUUID->"37daaaee-8961-4c9e-8f3f-24f6eb0867ba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1282628, 25253, 875, 21, 73, "Input",ExpressionUUID->"fa34565c-9bc2-472d-a0d9-f7bb1a430d20"],
Cell[1283506, 25276, 102405, 2048, 75, "Output",ExpressionUUID->"a1f40a01-d436-46ea-b764-b33b91d4ac72"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1385948, 27329, 606, 14, 52, "Input",ExpressionUUID->"6a0167fa-8681-44df-b870-544cf332c82e"],
Cell[1386557, 27345, 104730, 2095, 75, "Output",ExpressionUUID->"f5c3c301-9a2d-4337-9215-356eae9ff090"]
}, Open  ]],
Cell[1491302, 29443, 736, 12, 30, "Input",ExpressionUUID->"f6c2c066-47ac-4576-9cb4-e62c61563517"],
Cell[1492041, 29457, 787, 13, 30, "Input",ExpressionUUID->"9c0dc13f-bb60-46aa-a091-0b52af3fa262"],
Cell[1492831, 29472, 783, 13, 30, "Input",ExpressionUUID->"ded4704c-f9b6-481d-a314-d0f169695709"],
Cell[1493617, 29487, 789, 13, 30, "Input",ExpressionUUID->"a9d7de35-260f-42a0-af13-5962bbea7bf7"],
Cell[1494409, 29502, 880, 14, 30, "Input",ExpressionUUID->"5fadb808-2927-49ed-a0ae-418db10e5e8c"],
Cell[CellGroupData[{
Cell[1495314, 29520, 886, 16, 73, "Input",ExpressionUUID->"f138e990-720f-4263-aca2-af74ff607ee3"],
Cell[1496203, 29538, 153, 2, 34, "Output",ExpressionUUID->"0876791b-6f2e-4c4d-a283-7755a3e73fe7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1496393, 29545, 251, 4, 30, "Input",ExpressionUUID->"4ed811be-0d6f-43ac-8b14-b037dc05285b"],
Cell[1496647, 29551, 276391, 4634, 551, "Output",ExpressionUUID->"2dfb0ab5-53d5-42e7-ad8e-f7c707648908"]
}, Open  ]],
Cell[1773053, 34188, 1236, 26, 73, "Input",ExpressionUUID->"2023a64c-fa87-468f-bb48-03830ca8c72d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1774326, 34219, 296, 6, 54, "Subsection",ExpressionUUID->"07fac47d-c66c-416b-aa51-dcac39b78206"],
Cell[CellGroupData[{
Cell[1774647, 34229, 416, 7, 30, "Input",ExpressionUUID->"01c3a822-29d8-467d-8860-2609be2200cd"],
Cell[1775066, 34238, 52305, 1053, 304, "Output",ExpressionUUID->"67b6bffa-0329-41d3-ba90-c2b5f77e0e03"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1827408, 35296, 411, 6, 30, "Input",ExpressionUUID->"920f2f3c-ef3c-44b7-ad77-7d4021d7479a"],
Cell[1827822, 35304, 165595, 3458, 292, "Output",ExpressionUUID->"06869286-e88a-4ffb-b25b-b55b95016142"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1993454, 38767, 406, 6, 30, "Input",ExpressionUUID->"8934daca-a36e-41f5-a161-d88dee519ac8"],
Cell[1993863, 38775, 22805, 437, 58, "Output",ExpressionUUID->"e402fbd8-efd4-424d-b765-522b29077c66"]
}, Open  ]],
Cell[2016683, 39215, 690, 12, 30, "Input",ExpressionUUID->"c344643e-8378-41fb-a40d-d3ce6898e8df"],
Cell[2017376, 39229, 738, 12, 30, "Input",ExpressionUUID->"c93179d9-470f-44a7-9307-68c4ec56051e"],
Cell[2018117, 39243, 681, 11, 30, "Input",ExpressionUUID->"670e442b-b7bc-49ae-9896-d491b2b194ca"],
Cell[2018801, 39256, 688, 11, 30, "Input",ExpressionUUID->"c1f1a363-6b98-4dca-bfd3-edd144ab670d"],
Cell[2019492, 39269, 681, 11, 30, "Input",ExpressionUUID->"703ec77d-4a8c-4477-a7cf-182306bcf131"],
Cell[CellGroupData[{
Cell[2020198, 39284, 884, 16, 73, "Input",ExpressionUUID->"11918318-37e3-45bd-83f6-3fca5149b2e1"],
Cell[2021085, 39302, 177, 2, 34, "Output",ExpressionUUID->"63204896-0aee-40ff-8b62-c04504b98fc5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2021299, 39309, 639, 10, 30, "Input",ExpressionUUID->"a90e3182-1c36-441b-8f5f-2f548fe748d5"],
Cell[2021941, 39321, 114558, 1981, 627, "Output",ExpressionUUID->"6659f1a8-41b7-44a6-b896-eaa301324ede"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2136536, 41307, 277, 5, 30, "Input",ExpressionUUID->"db9350c5-1a30-45d4-8a16-ba95399c6912"],
Cell[2136816, 41314, 352, 6, 34, "Output",ExpressionUUID->"ae52d4f0-7fa7-488d-a1d2-68534c6ee33f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2137205, 41325, 1425, 24, 52, "Input",ExpressionUUID->"4977fcd6-1ed3-47b3-bd7b-eea560721493"],
Cell[2138633, 41351, 52116, 1050, 75, "Output",ExpressionUUID->"9bb57eb4-f01d-4cc2-8d02-296615a3b7b6"]
}, Open  ]],
Cell[2190764, 42404, 293, 6, 30, "Input",ExpressionUUID->"5e43fb41-b660-4175-82c6-2969f7b6b1de"],
Cell[2191060, 42412, 1383, 25, 52, "Input",ExpressionUUID->"d69ea0b3-015f-41a5-b247-f9c40fc9a38d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2192480, 42442, 257, 4, 54, "Subsection",ExpressionUUID->"f69a5e78-f4cb-4dae-a15b-86ce5600f6ad"],
Cell[CellGroupData[{
Cell[2192762, 42450, 277, 5, 30, "Input",ExpressionUUID->"dd1971a5-e713-481d-bc4d-6d7f291ac328"],
Cell[2193042, 42457, 424, 7, 34, "Output",ExpressionUUID->"93c21fdc-f087-47ac-9e86-52d55efd873d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2193503, 42469, 259, 4, 30, "Input",ExpressionUUID->"ecd778f8-1522-40e8-aef8-20f42674cbe8"],
Cell[2193765, 42475, 51563, 1037, 75, "Output",ExpressionUUID->"25f87ae8-4d83-432d-8dd7-1e84db70f8d8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2245365, 43517, 1431, 37, 157, "Input",ExpressionUUID->"51bb8b93-c52c-4189-86e6-2e2dac5e02c0"],
Cell[2246799, 43556, 204, 3, 34, "Output",ExpressionUUID->"2b74235e-4b8f-4a83-ab3c-0952ae36d816"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2247040, 43564, 182, 3, 30, "Input",ExpressionUUID->"76ea483d-0107-4c29-9923-2a7a9eb22677"],
Cell[2247225, 43569, 38151, 678, 307, "Output",ExpressionUUID->"4bbbff35-d7ff-4da7-9f7b-46f5b5285dc1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2285413, 44252, 662, 12, 30, "Input",ExpressionUUID->"bf8bfe81-3031-4abf-8122-196c8e3f5d5e"],
Cell[2286078, 44266, 5395, 122, 336, "Output",ExpressionUUID->"dc862bfe-18a5-4f96-9d50-7f755c247fe8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2291510, 44393, 1570, 38, 136, "Input",ExpressionUUID->"5ae2f8d9-1025-4255-8acb-d30d91e47b69"],
Cell[2293083, 44433, 62012, 1068, 307, "Output",ExpressionUUID->"ae0b1b1c-d0c5-4cb6-90f2-e07149f007a2"],
Cell[2355098, 45503, 52720, 917, 307, "Output",ExpressionUUID->"66571627-eb4a-48f7-b62b-02d327e9641b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2407867, 46426, 194, 3, 54, "Subsection",ExpressionUUID->"0a8d295f-cd1c-4c3e-ae06-02bf92370bc6"],
Cell[CellGroupData[{
Cell[2408086, 46433, 187, 3, 45, "Subsubsection",ExpressionUUID->"a84a1539-ef61-4e18-b559-dd588af4e059"],
Cell[CellGroupData[{
Cell[2408298, 46440, 1382, 27, 52, "Input",ExpressionUUID->"5a117191-b84f-4191-8667-d3e7b34bf2fc"],
Cell[2409683, 46469, 45464, 820, 1267, "Output",ExpressionUUID->"ada99cd2-14fd-44ca-b73e-202a77f65785"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2455196, 47295, 182, 3, 45, "Subsubsection",ExpressionUUID->"5c1c66d9-c4c7-4612-b93b-51b5f32e2a86"],
Cell[CellGroupData[{
Cell[2455403, 47302, 1003, 23, 52, "Input",ExpressionUUID->"9c2de349-013d-4f8e-bb27-2b2ef9e280c8"],
Cell[2456409, 47327, 49999, 889, 1267, "Output",ExpressionUUID->"45289fe2-6825-4390-944b-d5f907f9f0a0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2506457, 48222, 183, 3, 45, "Subsubsection",ExpressionUUID->"d6046823-b720-4a64-8708-f52dce625b40"],
Cell[CellGroupData[{
Cell[2506665, 48229, 926, 22, 52, "Input",ExpressionUUID->"761b26f1-8b58-49b1-a011-eed47ada9639"],
Cell[2507594, 48253, 54520, 969, 1267, "Output",ExpressionUUID->"155d8df9-62fe-4383-863e-dae7e8d9e8f9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2562163, 49228, 179, 3, 45, "Subsubsection",ExpressionUUID->"aaf1b729-b679-4ed5-b370-c84ebbc49a47"],
Cell[CellGroupData[{
Cell[2562367, 49235, 1430, 28, 52, "Input",ExpressionUUID->"0d9d69f4-4f66-40ee-b606-0be341fd69af"],
Cell[2563800, 49265, 54310, 966, 627, "Output",ExpressionUUID->"a809837a-98f5-4017-94aa-e31f3f146b69"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2618159, 50237, 181, 3, 45, "Subsubsection",ExpressionUUID->"bad85301-117a-4187-a53a-185773831b7c"],
Cell[CellGroupData[{
Cell[2618365, 50244, 929, 23, 52, "Input",ExpressionUUID->"217c4d79-581f-456a-96ef-30559568535b"],
Cell[2619297, 50269, 66396, 1165, 787, "Output",ExpressionUUID->"3a98b199-5476-417c-9e07-5e37c80ef7ad"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2685742, 51440, 187, 3, 45, "Subsubsection",ExpressionUUID->"d4b0f0b4-3179-46d2-82ae-d65d595ef149"],
Cell[CellGroupData[{
Cell[2685954, 51447, 959, 23, 52, "Input",ExpressionUUID->"41c53108-02ae-48d0-8081-c9c2138f0b99"],
Cell[2686916, 51472, 87321, 1501, 1325, "Output",ExpressionUUID->"bada75c5-b2bd-4fdc-8ca8-230a395e5677"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2774286, 52979, 179, 3, 45, "Subsubsection",ExpressionUUID->"be241203-31d0-408f-be3c-539692b0e61a"],
Cell[CellGroupData[{
Cell[2774490, 52986, 941, 23, 52, "Input",ExpressionUUID->"1bb87011-4698-45fe-a076-b11de909b696"],
Cell[2775434, 53011, 78183, 1358, 1267, "Output",ExpressionUUID->"56a11134-fb04-46ca-b6b0-1f87f5c8f553"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2853666, 54375, 179, 3, 45, "Subsubsection",ExpressionUUID->"d07f9140-ab16-4b76-a59e-d3d7cd89c571"],
Cell[CellGroupData[{
Cell[2853870, 54382, 1281, 25, 52, "Input",ExpressionUUID->"eb3c9edd-e9ba-479a-8e8d-88b19243c096"],
Cell[2855154, 54409, 79086, 1370, 1267, "Output",ExpressionUUID->"a98f721a-c47e-450f-881d-98285054010a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2934289, 55785, 178, 3, 45, "Subsubsection",ExpressionUUID->"d60e30b9-98ab-4a01-b755-63db75d5fba6"],
Cell[CellGroupData[{
Cell[2934492, 55792, 1330, 25, 52, "Input",ExpressionUUID->"8a38bfed-584b-4a6d-9c10-fd44285657f1"],
Cell[2935825, 55819, 82539, 1425, 1267, "Output",ExpressionUUID->"cdc53e3c-7142-4761-bf66-edca39026b56"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3018413, 57250, 181, 3, 45, "Subsubsection",ExpressionUUID->"b642e5ce-f5af-4fb7-9196-737c3e289345"],
Cell[CellGroupData[{
Cell[3018619, 57257, 1284, 25, 52, "Input",ExpressionUUID->"f7e0fecf-2712-4d7d-98ad-5181bcb9c992"],
Cell[3019906, 57284, 109507, 1868, 1267, "Output",ExpressionUUID->"6b9caf5b-8922-46cb-99d0-3aee73ec9b9c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3129462, 59158, 179, 3, 45, "Subsubsection",ExpressionUUID->"8b3cc67d-4a53-4e8d-845f-3a202e6c4ab4"],
Cell[CellGroupData[{
Cell[3129666, 59165, 1329, 25, 52, "Input",ExpressionUUID->"b0bd9630-24da-4de4-9f3f-14b477f897cf"],
Cell[3130998, 59192, 105824, 1807, 1267, "Output",ExpressionUUID->"ff26086f-e5f6-4831-af25-7932d2c34570"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3236859, 61004, 1333, 26, 52, "Input",ExpressionUUID->"74be7554-6025-4914-8c3b-bee43eae7d15"],
Cell[3238195, 61032, 97130, 1666, 1267, "Output",ExpressionUUID->"c130e6c6-e436-4484-a955-3becb033c735"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3335362, 62703, 1333, 26, 52, "Input",ExpressionUUID->"5b2ea9bc-0222-4fc1-a1e2-bdc87b2dfe9f"],
Cell[3336698, 62731, 104349, 1784, 1267, "Output",ExpressionUUID->"245a8c89-6d7e-43a6-8bc5-554d83a7f615"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3441096, 64521, 183, 3, 45, "Subsubsection",ExpressionUUID->"28cabca1-c456-4419-9e1c-8ca72f6f70f5"],
Cell[CellGroupData[{
Cell[3441304, 64528, 1384, 27, 52, "Input",ExpressionUUID->"5fb35f3b-6fa4-4018-b15d-41d54eff9a83"],
Cell[3442691, 64557, 90834, 1562, 1267, "Output",ExpressionUUID->"3402c7be-c000-47b5-aec6-4015d40830be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3533562, 66124, 1384, 27, 52, "Input",ExpressionUUID->"cc602dc5-80e5-442c-bb52-fe47c224e967"],
Cell[3534949, 66153, 108244, 1847, 1325, "Output",ExpressionUUID->"576bc860-4192-44eb-835a-1219d7bb924a"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

