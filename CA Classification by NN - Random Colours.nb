(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1779996,      34266]
NotebookOptionsPosition[   1765571,      34006]
NotebookOutlinePosition[   1765908,      34021]
CellTagsIndexPosition[   1765865,      34018]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["New CA Classifiers (random colours)", "Section",
 CellChangeTimes->{{3.7741703819392014`*^9, 
  3.774170389696656*^9}},ExpressionUUID->"388a0dab-52cc-4126-ac63-\
0319c67848e8"],

Cell[CellGroupData[{

Cell["Wolfram Classes of ECAs", "Subsection",
 CellChangeTimes->{{3.761379947861582*^9, 
  3.761379952536892*^9}},ExpressionUUID->"76af5f73-63af-4700-a231-\
2a753da13bcb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CAclasses", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2",
      ",", "1", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
     ",", "2", ",", "2", ",", "2", ",", "3", ",", "2", ",", "2", ",", "2", 
     ",", "3", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
     ",", "2", ",", "3", ",", "2", ",", "1", ",", "2", ",", "2", ",", "2", 
     ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "3", ",", "2", 
     ",", "2", ",", "2", ",", "3", ",", "2", ",", "2", ",", "2", ",", "2", 
     ",", "2", ",", "2", ",", "2", ",", "2", ",", "4", ",", "2", ",", "2", 
     ",", "2", ",", "2", ",", "2", ",", "3", ",", "2", ",", "2", ",", "2", 
     ",", "1", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
     ",", "2", ",", "2", ",", "2", ",", "2", ",", "3", ",", "2", ",", "2", 
     ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
     ",", "2", ",", "3", ",", "2", ",", "2", ",", "3", ",", "3", ",", "2", 
     ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "3", ",", "2", 
     ",", "2", ",", "2", ",", "3", ",", "3", ",", "2", ",", "2", ",", "3", 
     ",", "3", ",", "3", ",", "2", ",", "2", ",", "4", ",", "2", ",", "2", 
     ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
     ",", "3", ",", "3", ",", "3", ",", "2", ",", "4", ",", "2", ",", "3", 
     ",", "2", ",", "1", ",", "3", ",", "2", ",", "2", ",", "2", ",", "2", 
     ",", "2", ",", "3", ",", "1", ",", "4", ",", "2", ",", "2", ",", "2", 
     ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "3", ",", "4", 
     ",", "2", ",", "3", ",", "3", ",", "3", ",", "2", ",", "3", ",", "2", 
     ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "3", 
     ",", "2", ",", "2", ",", "2", ",", "3", ",", "2", ",", "2", ",", "1", 
     ",", "3", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
     ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "3", 
     ",", "3", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
     ",", "2", ",", "2", ",", "1", ",", "4", ",", "2", ",", "3", ",", "2", 
     ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
     ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
     ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
     ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
     ",", "3", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
     ",", "2", ",", "2", ",", "1", ",", "1", ",", "2", ",", "2", ",", "1", 
     ",", "1", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
     ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "1", ",", "1", ",", "1"}], "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.761380787003519*^9, 3.761380803977662*^9}, {
   3.761380850530423*^9, 3.761380879376588*^9}, 3.761532125182768*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"11312d72-7371-443a-83a5-7022f7996460"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Functions for creating net and random datasets (ECAs, all 4 classes)\
\>", "Subsection",
 CellChangeTimes->{{3.761380003378039*^9, 3.761380013795506*^9}, {
  3.7614020248578577`*^9, 3.761402029314211*^9}, {3.7662201708842297`*^9, 
  3.7662201728924227`*^9}},ExpressionUUID->"9d0547cf-17e6-43be-b4be-\
9b07207ddad4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RandomRuleC", "[", 
   RowBox[{"n_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Image", "[", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{"n", ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"1", ",", "W"}], "]"}], ",", 
       RowBox[{"H", "-", "1"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"W", ",", "H"}], "}"}]}], ",", 
     RowBox[{"ColorRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", " ", 
        RowBox[{"1", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"3", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"5", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"6", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"7", "->", 
         RowBox[{"RandomColor", "[", "]"}]}]}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "False"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"netC", "[", 
   RowBox[{"W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"NetInitialize", "@", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ConvolutionLayer", "[", 
        RowBox[{"16", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "3"}], "}"}]}], "]"}], ",", "Ramp", ",", 
       RowBox[{"PoolingLayer", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"H", ",", "W"}], "}"}], "-", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
       RowBox[{"FlattenLayer", "[", "]"}], ",", 
       RowBox[{"LinearLayer", "[", "256", "]"}], ",", 
       RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], ",", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"NetEncoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Image\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"W", ",", "H"}], "}"}]}], "}"}], "]"}]}], ",", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Class\>\"", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"0", ",", "255"}], "]"}]}], "}"}], "]"}]}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"netTwoCC", "[", 
   RowBox[{"W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"NetInitialize", "@", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<conv1\>\"", "\[Rule]", " ", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"16", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<ramp1\>\"", "\[Rule]", " ", "Ramp"}], ",", " ", 
       RowBox[{"\"\<conv3\>\"", "\[Rule]", " ", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"16", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<ramp2\>\"", "\[Rule]", " ", "Ramp"}], ",", 
       RowBox[{"\"\<pooling\>\"", "\[Rule]", " ", 
        RowBox[{"PoolingLayer", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"H", ",", "W"}], "}"}], "-", 
          RowBox[{"{", 
           RowBox[{"2", ",", "4"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<flatten\>\"", "\[Rule]", " ", 
        RowBox[{"FlattenLayer", "[", "]"}]}], ",", 
       RowBox[{"\"\<linear\>\"", "\[Rule]", " ", "512"}], ",", 
       RowBox[{"\"\<linear2\>\"", "\[Rule]", " ", "4"}], ",", 
       RowBox[{"\"\<softmax\>\"", "\[Rule]", " ", 
        RowBox[{"SoftmaxLayer", "[", "]"}]}]}], "|>"}], ",", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"NetEncoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Image\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"W", ",", "H"}], "}"}]}], "}"}], "]"}]}], ",", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Class\>\"", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", "4"}], "]"}]}], "}"}], "]"}]}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataC", "[", 
   RowBox[{"W_Integer", ",", "H_Integer", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"RandomRuleC", "[", 
      RowBox[{"i", ",", "W", ",", "H"}], "]"}], "\[Rule]", 
     RowBox[{"CAclasses", "[", 
      RowBox[{"[", 
       RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "255"}], "]"}], ",", "n"}], "]"}]}], "}"}]}], 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.761320809070031*^9, 3.76132083170935*^9}, {
   3.761380076739122*^9, 3.76138008147077*^9}, {3.761380306868453*^9, 
   3.761380307004945*^9}, {3.7613803682019243`*^9, 3.7613803698490877`*^9}, {
   3.7613808865370483`*^9, 3.761380886821106*^9}, {3.761525703313718*^9, 
   3.761525739797949*^9}, {3.761525773385911*^9, 3.761525799841358*^9}, {
   3.761526126195112*^9, 3.7615261594885683`*^9}, {3.7615262563705606`*^9, 
   3.761526259542873*^9}, {3.761526366651803*^9, 3.7615263845889387`*^9}, 
   3.761526478721349*^9, {3.761526538175885*^9, 3.761526570230175*^9}, {
   3.761527452325634*^9, 3.761527460151607*^9}, {3.761527865199566*^9, 
   3.7615278673014517`*^9}, {3.766220831527217*^9, 3.766220832553856*^9}, {
   3.767351883401216*^9, 3.7673519066747293`*^9}, {3.767351950209597*^9, 
   3.767351959155035*^9}, {3.7673519908327217`*^9, 3.767352000543133*^9}, {
   3.767357522438374*^9, 3.7673575500677032`*^9}, {3.767357593344013*^9, 
   3.767357644680545*^9}, {3.767510049719068*^9, 3.7675100652040358`*^9}, {
   3.767510130310398*^9, 3.767510130732348*^9}, 3.767510685310758*^9, {
   3.767510900961635*^9, 3.767510908989143*^9}, {3.767510995235165*^9, 
   3.767511009239863*^9}, {3.767511092024417*^9, 3.767511096703246*^9}, 
   3.774170906320936*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"0ea53259-1886-425a-ad42-3a990f49b501"],

Cell[BoxData[
 RowBox[{
  RowBox[{"netThreeCC", "[", 
   RowBox[{"W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"NetInitialize", "@", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<conv1\>\"", "\[Rule]", " ", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"16", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<ramp1\>\"", "\[Rule]", " ", "Ramp"}], ",", " ", 
       RowBox[{"\"\<conv2\>\"", "\[Rule]", " ", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"16", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<ramp2\>\"", "\[Rule]", " ", "Ramp"}], ",", 
       RowBox[{"\"\<conv3\>\"", "\[Rule]", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"16", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<ramp3\>\"", "\[Rule]", "Ramp"}], ",", 
       RowBox[{"\"\<pooling\>\"", "\[Rule]", " ", 
        RowBox[{"PoolingLayer", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"H", ",", "W"}], "}"}], "-", 
          RowBox[{"{", 
           RowBox[{"4", ",", "8"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<flatten\>\"", "\[Rule]", " ", 
        RowBox[{"FlattenLayer", "[", "]"}]}], ",", 
       RowBox[{"\"\<linear\>\"", "\[Rule]", " ", "512"}], ",", 
       RowBox[{"\"\<linear2\>\"", "\[Rule]", " ", "4"}], ",", 
       RowBox[{"\"\<softmax\>\"", "\[Rule]", " ", 
        RowBox[{"SoftmaxLayer", "[", "]"}]}]}], "|>"}], ",", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"NetEncoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Image\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"W", ",", "H"}], "}"}]}], "}"}], "]"}]}], ",", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Class\>\"", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", "4"}], "]"}]}], "}"}], "]"}]}]}], 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.767540425927586*^9, 3.7675404898272943`*^9}, {
  3.767540570824833*^9, 3.767540575088909*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"04e4fea5-f97b-4096-84e3-b820fad8b6e7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"netThreeCC1024", "[", 
   RowBox[{"W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"NetInitialize", "@", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<conv1\>\"", "\[Rule]", " ", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"16", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<ramp1\>\"", "\[Rule]", " ", "Ramp"}], ",", " ", 
       RowBox[{"\"\<conv2\>\"", "\[Rule]", " ", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"16", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<ramp2\>\"", "\[Rule]", " ", "Ramp"}], ",", 
       RowBox[{"\"\<conv3\>\"", "\[Rule]", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"16", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<ramp3\>\"", "\[Rule]", "Ramp"}], ",", 
       RowBox[{"\"\<pooling\>\"", "\[Rule]", " ", 
        RowBox[{"PoolingLayer", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"H", ",", "W"}], "}"}], "-", 
          RowBox[{"{", 
           RowBox[{"4", ",", "8"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<flatten\>\"", "\[Rule]", " ", 
        RowBox[{"FlattenLayer", "[", "]"}]}], ",", 
       RowBox[{"\"\<linear\>\"", "\[Rule]", " ", "1024"}], ",", 
       RowBox[{"\"\<linear2\>\"", "\[Rule]", " ", "4"}], ",", 
       RowBox[{"\"\<softmax\>\"", "\[Rule]", " ", 
        RowBox[{"SoftmaxLayer", "[", "]"}]}]}], "|>"}], ",", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"NetEncoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Image\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"W", ",", "H"}], "}"}]}], "}"}], "]"}]}], ",", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Class\>\"", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", "4"}], "]"}]}], "}"}], "]"}]}]}], 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.767540425927586*^9, 3.7675404898272943`*^9}, {
  3.767540570824833*^9, 3.767540575088909*^9}, {3.767549585335534*^9, 
  3.7675495935660152`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"3fa2af7c-8381-4684-81ef-83594cac1d45"],

Cell[BoxData[
 RowBox[{
  RowBox[{"netFourCC512", "[", 
   RowBox[{"W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"NetInitialize", "@", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<conv1\>\"", "\[Rule]", " ", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"32", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<ramp1\>\"", "\[Rule]", " ", "Ramp"}], ",", " ", 
       RowBox[{"\"\<conv3\>\"", "\[Rule]", " ", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"32", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<ramp2\>\"", "\[Rule]", " ", "Ramp"}], ",", 
       RowBox[{"\"\<pooling\>\"", "\[Rule]", " ", 
        RowBox[{"PoolingLayer", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"H", ",", "W"}], "}"}], "-", 
          RowBox[{"{", 
           RowBox[{"2", ",", "4"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<flatten\>\"", "\[Rule]", " ", 
        RowBox[{"FlattenLayer", "[", "]"}]}], ",", 
       RowBox[{"\"\<linear\>\"", "\[Rule]", " ", "512"}], ",", 
       RowBox[{"\"\<linear2\>\"", "\[Rule]", " ", "4"}], ",", 
       RowBox[{"\"\<softmax\>\"", "\[Rule]", " ", 
        RowBox[{"SoftmaxLayer", "[", "]"}]}]}], "|>"}], ",", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"NetEncoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Image\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"W", ",", "H"}], "}"}]}], "}"}], "]"}]}], ",", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Class\>\"", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", "4"}], "]"}]}], "}"}], "]"}]}]}], 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.773129574716798*^9, 3.7731295908149643`*^9}, {
  3.77316445961451*^9, 3.7731644762194366`*^9}, {3.77316451876138*^9, 
  3.77316453012789*^9}, {3.773164562656454*^9, 3.7731645703245993`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"db54f16e-cff6-4a0b-9a60-81c7fbbcb875"],

Cell[BoxData[
 RowBox[{
  RowBox[{"netFiveCC512", "[", 
   RowBox[{"W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"NetInitialize", "@", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<conv1\>\"", "\[Rule]", " ", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"32", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<bat1\>\"", "\[Rule]", " ", 
        RowBox[{"BatchNormalizationLayer", "[", "]"}]}], ",", 
       RowBox[{"\"\<ramp1\>\"", "\[Rule]", " ", "Ramp"}], ",", " ", 
       RowBox[{"\"\<conv3\>\"", "\[Rule]", " ", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"32", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<bat2\>\"", "\[Rule]", " ", 
        RowBox[{"BatchNormalizationLayer", "[", "]"}]}], ",", 
       RowBox[{"\"\<ramp2\>\"", "\[Rule]", " ", "Ramp"}], ",", 
       RowBox[{"\"\<pooling\>\"", "\[Rule]", " ", 
        RowBox[{"PoolingLayer", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"H", ",", "W"}], "}"}], "-", 
          RowBox[{"{", 
           RowBox[{"2", ",", "4"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<flatten\>\"", "\[Rule]", " ", 
        RowBox[{"FlattenLayer", "[", "]"}]}], ",", 
       RowBox[{"\"\<linear\>\"", "\[Rule]", " ", "512"}], ",", 
       RowBox[{"\"\<linear2\>\"", "\[Rule]", " ", "4"}], ",", 
       RowBox[{"\"\<softmax\>\"", "\[Rule]", " ", 
        RowBox[{"SoftmaxLayer", "[", "]"}]}]}], "|>"}], ",", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"NetEncoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Image\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"W", ",", "H"}], "}"}]}], "}"}], "]"}]}], ",", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Class\>\"", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", "4"}], "]"}]}], "}"}], "]"}]}]}], 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.773129574716798*^9, 3.7731295908149643`*^9}, {
  3.77316445961451*^9, 3.7731644762194366`*^9}, {3.77316451876138*^9, 
  3.773164554412806*^9}, {3.773164636399846*^9, 3.7731646388760653`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"f2bf3b57-57d3-42d3-a32f-7c120c1b4976"],

Cell[BoxData[
 RowBox[{
  RowBox[{"netSixCC512drop", "[", 
   RowBox[{"W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"NetInitialize", "@", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<drop1\>\"", "\[Rule]", 
        RowBox[{"DropoutLayer", "[", "0.2", "]"}]}], ",", 
       RowBox[{"\"\<conv1\>\"", "\[Rule]", " ", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"32", ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<bat1\>\"", "\[Rule]", " ", 
        RowBox[{"BatchNormalizationLayer", "[", "]"}]}], ",", 
       RowBox[{"\"\<ramp1\>\"", "\[Rule]", " ", "Ramp"}], ",", " ", 
       RowBox[{"\"\<conv3\>\"", "\[Rule]", " ", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"32", ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<bat2\>\"", "\[Rule]", " ", 
        RowBox[{"BatchNormalizationLayer", "[", "]"}]}], ",", 
       RowBox[{"\"\<ramp2\>\"", "\[Rule]", " ", "Ramp"}], ",", 
       RowBox[{"\"\<pooling\>\"", "\[Rule]", " ", 
        RowBox[{"PoolingLayer", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"H", ",", "W"}], "}"}], "-", 
          RowBox[{"{", 
           RowBox[{"4", ",", "8"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<flatten\>\"", "\[Rule]", " ", 
        RowBox[{"FlattenLayer", "[", "]"}]}], ",", 
       RowBox[{"\"\<linear\>\"", "\[Rule]", " ", "512"}], ",", 
       RowBox[{"\"\<drop2\>\"", "\[Rule]", 
        RowBox[{"DropoutLayer", "[", "0.2", "]"}]}], ",", 
       RowBox[{"\"\<linear2\>\"", "\[Rule]", " ", "4"}], ",", 
       RowBox[{"\"\<softmax\>\"", "\[Rule]", " ", 
        RowBox[{"SoftmaxLayer", "[", "]"}]}]}], "|>"}], ",", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"NetEncoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Image\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"W", ",", "H"}], "}"}]}], "}"}], "]"}]}], ",", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Class\>\"", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", "4"}], "]"}]}], "}"}], "]"}]}]}], 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.773129574716798*^9, 3.7731295908149643`*^9}, {
  3.77316445961451*^9, 3.7731644762194366`*^9}, {3.77316451876138*^9, 
  3.773164554412806*^9}, {3.773164636399846*^9, 3.7731646388760653`*^9}, {
  3.773214347449542*^9, 3.773214356618823*^9}, {3.773214400589527*^9, 
  3.773214427362441*^9}, {3.7732144803445683`*^9, 3.7732144996496572`*^9}, {
  3.773214697189101*^9, 3.773214699637023*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"e9e5becd-28d9-42e6-a39b-71cbb8836a31"],

Cell[BoxData[
 RowBox[{
  RowBox[{"netSevenCC512drop", "[", 
   RowBox[{"W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"NetInitialize", "@", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<conv1\>\"", "\[Rule]", " ", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"24", ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<bat1\>\"", "\[Rule]", " ", 
        RowBox[{"BatchNormalizationLayer", "[", "]"}]}], ",", 
       RowBox[{"\"\<ramp1\>\"", "\[Rule]", " ", "Ramp"}], ",", " ", 
       RowBox[{"\"\<conv3\>\"", "\[Rule]", " ", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"24", ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<bat2\>\"", "\[Rule]", " ", 
        RowBox[{"BatchNormalizationLayer", "[", "]"}]}], ",", 
       RowBox[{"\"\<ramp2\>\"", "\[Rule]", " ", "Ramp"}], ",", 
       RowBox[{"\"\<pooling\>\"", "\[Rule]", " ", 
        RowBox[{"PoolingLayer", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"H", ",", "W"}], "}"}], "-", 
          RowBox[{"{", 
           RowBox[{"4", ",", "8"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<flatten\>\"", "\[Rule]", " ", 
        RowBox[{"FlattenLayer", "[", "]"}]}], ",", 
       RowBox[{"\"\<linear\>\"", "\[Rule]", " ", "512"}], ",", 
       RowBox[{"\"\<drop2\>\"", "\[Rule]", 
        RowBox[{"DropoutLayer", "[", "0.2", "]"}]}], ",", 
       RowBox[{"\"\<linear2\>\"", "\[Rule]", " ", "4"}], ",", 
       RowBox[{"\"\<softmax\>\"", "\[Rule]", " ", 
        RowBox[{"SoftmaxLayer", "[", "]"}]}]}], "|>"}], ",", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"NetEncoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Image\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"W", ",", "H"}], "}"}]}], "}"}], "]"}]}], ",", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Class\>\"", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", "4"}], "]"}]}], "}"}], "]"}]}]}], 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.773129574716798*^9, 3.7731295908149643`*^9}, {
  3.77316445961451*^9, 3.7731644762194366`*^9}, {3.77316451876138*^9, 
  3.773164554412806*^9}, {3.773164636399846*^9, 3.7731646388760653`*^9}, {
  3.773214347449542*^9, 3.773214356618823*^9}, {3.773214400589527*^9, 
  3.773214427362441*^9}, {3.7732144803445683`*^9, 3.7732144996496572`*^9}, {
  3.773214697189101*^9, 3.773214699637023*^9}, {3.7732947644127007`*^9, 
  3.7732947755435963`*^9}, {3.77329486111364*^9, 3.77329488442143*^9}, {
  3.77329499344895*^9, 3.773294997276059*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"0584a446-b140-4330-aed6-029b46bd55de"],

Cell[BoxData[
 RowBox[{
  RowBox[{"netEightCC512drop", "[", 
   RowBox[{"W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"NetInitialize", "@", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<conv1\>\"", "\[Rule]", " ", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"24", ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<bat1\>\"", "\[Rule]", " ", 
        RowBox[{"BatchNormalizationLayer", "[", "]"}]}], ",", 
       RowBox[{"\"\<ramp1\>\"", "\[Rule]", " ", "Ramp"}], ",", " ", 
       RowBox[{"\"\<conv2\>\"", "\[Rule]", " ", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"16", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<bat2\>\"", "\[Rule]", 
        RowBox[{"BatchNormalizationLayer", "[", "]"}]}], ",", 
       RowBox[{"\"\<ramp2\>\"", "\[Rule]", " ", "Ramp"}], ",", " ", 
       RowBox[{"\"\<conv3\>\"", "\[Rule]", " ", 
        RowBox[{"ConvolutionLayer", "[", 
         RowBox[{"24", ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<bat3\>\"", "\[Rule]", " ", 
        RowBox[{"BatchNormalizationLayer", "[", "]"}]}], ",", 
       RowBox[{"\"\<ramp3\>\"", "\[Rule]", " ", "Ramp"}], ",", 
       RowBox[{"\"\<pooling\>\"", "\[Rule]", " ", 
        RowBox[{"PoolingLayer", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"H", ",", "W"}], "}"}], "-", 
          RowBox[{"{", 
           RowBox[{"8", ",", "16"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"\"\<flatten\>\"", "\[Rule]", " ", 
        RowBox[{"FlattenLayer", "[", "]"}]}], ",", 
       RowBox[{"\"\<linear\>\"", "\[Rule]", " ", "1024"}], ",", 
       RowBox[{"\"\<drop2\>\"", "\[Rule]", 
        RowBox[{"DropoutLayer", "[", "0.2", "]"}]}], ",", 
       RowBox[{"\"\<linear2\>\"", "\[Rule]", " ", "4"}], ",", 
       RowBox[{"\"\<softmax\>\"", "\[Rule]", " ", 
        RowBox[{"SoftmaxLayer", "[", "]"}]}]}], "|>"}], ",", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"NetEncoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Image\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"W", ",", "H"}], "}"}]}], "}"}], "]"}]}], ",", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Class\>\"", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", "4"}], "]"}]}], "}"}], "]"}]}]}], 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.773129574716798*^9, 3.7731295908149643`*^9}, {
  3.77316445961451*^9, 3.7731644762194366`*^9}, {3.77316451876138*^9, 
  3.773164554412806*^9}, {3.773164636399846*^9, 3.7731646388760653`*^9}, {
  3.773214347449542*^9, 3.773214356618823*^9}, {3.773214400589527*^9, 
  3.773214427362441*^9}, {3.7732144803445683`*^9, 3.7732144996496572`*^9}, {
  3.773214697189101*^9, 3.773214699637023*^9}, {3.7732947644127007`*^9, 
  3.7732947755435963`*^9}, {3.77329486111364*^9, 3.77329488442143*^9}, {
  3.77329499344895*^9, 3.773294997276059*^9}, {3.774202651836898*^9, 
  3.774202659321891*^9}, {3.774202695001886*^9, 3.774202725129752*^9}, {
  3.774202805827366*^9, 3.774202808775009*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"6ac8b246-f929-4ebf-b7b6-8430cd9ee71e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions for creating datasets (1D totalistic CAs)", "Subsection",
 CellChangeTimes->{{3.7614020705786753`*^9, 3.761402081162367*^9}, 
   3.766220112954561*^9},ExpressionUUID->"15994768-2a7c-48ae-b9ce-\
17a15e9f2d01"],

Cell[CellGroupData[{

Cell["k=3, r=1 totalistic (class 4 only)", "Subsubsection",
 CellChangeTimes->{{3.76622009703373*^9, 3.7662201022762747`*^9}, {
  3.766220154180862*^9, 
  3.766220165964774*^9}},ExpressionUUID->"8d9af586-96ae-4f0d-8b0d-\
8fb70cdf76ee"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gen3TC", "[", 
   RowBox[{"p_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Image", "[", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", " ", 
         RowBox[{"{", 
          RowBox[{"3", ",", "1"}], "}"}]}], "}"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"1", ",", "W"}], "]"}], ",", 
       RowBox[{"H", "-", "1"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"W", ",", "H"}], "}"}]}], ",", 
     RowBox[{"ColorRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", " ", 
        RowBox[{"1", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"3", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"5", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"6", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"7", "->", 
         RowBox[{"RandomColor", "[", "]"}]}]}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "False"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data3T2C", "[", 
   RowBox[{"W_Integer", ",", "H_Integer", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"gen3TC", "[", 
      RowBox[{"i", ",", "W", ",", "H"}], "]"}], "\[Rule]", "4"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "1635", ",", "1815", ",", "2007", ",", "2043", ",", "2049", ",", 
          "1388", ",", "1041"}], "}"}], ",", "n"}], "]"}]}], "}"}]}], 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.761320809070031*^9, 3.76132083170935*^9}, {
   3.761380076739122*^9, 3.76138008147077*^9}, {3.761380306868453*^9, 
   3.761380307004945*^9}, {3.7613803682019243`*^9, 3.7613803698490877`*^9}, {
   3.7613808865370483`*^9, 3.761380886821106*^9}, {3.761402042556376*^9, 
   3.7614020593188343`*^9}, {3.761402275990266*^9, 3.761402435380567*^9}, {
   3.761402489939774*^9, 3.7614025213819847`*^9}, {3.761402651615384*^9, 
   3.761402654567891*^9}, {3.761402747908902*^9, 3.761402793145606*^9}, {
   3.761402865578603*^9, 3.7614028799081573`*^9}, {3.761402928587389*^9, 
   3.76140295398988*^9}, {3.761402997655946*^9, 3.761403027899941*^9}, {
   3.761403075891109*^9, 3.761403076238286*^9}, {3.761403180372889*^9, 
   3.7614031997236834`*^9}, {3.7614032312013397`*^9, 3.7614032670886507`*^9}, 
   3.76140342890244*^9, {3.761403480275926*^9, 3.761403481350089*^9}, {
   3.761403513060453*^9, 3.7614035132125177`*^9}, {3.761403549605055*^9, 
   3.761403561425516*^9}, 3.761403609754438*^9, {3.76140367198862*^9, 
   3.761403675679965*^9}, {3.761403714658844*^9, 3.7614037433940363`*^9}, {
   3.761403773779291*^9, 3.761403789604382*^9}, {3.761403824236272*^9, 
   3.7614038250328913`*^9}, {3.7614038551426353`*^9, 3.761403938459445*^9}, {
   3.761404200995116*^9, 3.761404210552011*^9}, {3.761404358229147*^9, 
   3.761404358568121*^9}, {3.761527445163332*^9, 3.761527445393235*^9}, {
   3.7615304659774017`*^9, 3.76153048662649*^9}, {3.766219991187511*^9, 
   3.7662200066283073`*^9}, 3.766220602494452*^9, {3.76751011993714*^9, 
   3.767510125995658*^9}, {3.7675106885986443`*^9, 3.767510701348618*^9}, {
   3.767511127847498*^9, 3.767511130891918*^9}, {3.774170730105529*^9, 
   3.774170754804545*^9}, 3.774170821336855*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"7f290f76-4d20-4a45-99c1-be4d3ac55caf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["k=4, r=1 totalistic (class 4 only, 1 example)", "Subsubsection",
 CellChangeTimes->{{3.7662206118214073`*^9, 
  3.7662206208010683`*^9}},ExpressionUUID->"dbcb2c40-cf99-43a5-b6a7-\
efac0c5abb80"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gen4TC", "[", 
   RowBox[{"p_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Image", "[", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", " ", 
         RowBox[{"{", 
          RowBox[{"4", ",", "1"}], "}"}]}], "}"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"1", ",", "W"}], "]"}], ",", 
       RowBox[{"H", "-", "1"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"W", ",", "H"}], "}"}]}], ",", 
     RowBox[{"ColorRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", " ", 
        RowBox[{"1", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"3", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"5", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"6", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"7", "->", 
         RowBox[{"RandomColor", "[", "]"}]}]}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "False"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data4TC", "[", 
   RowBox[{"W_Integer", ",", "H_Integer", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"gen4TC", "[", 
      RowBox[{"1004600", ",", "W", ",", "H"}], "]"}], "\[Rule]", "4"}], ",", 
    "n"}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.761320809070031*^9, 3.76132083170935*^9}, {
   3.761380076739122*^9, 3.76138008147077*^9}, {3.761380306868453*^9, 
   3.761380307004945*^9}, {3.7613803682019243`*^9, 3.7613803698490877`*^9}, {
   3.7613808865370483`*^9, 3.761380886821106*^9}, {3.761402042556376*^9, 
   3.7614020593188343`*^9}, {3.761402275990266*^9, 3.761402435380567*^9}, {
   3.761402489939774*^9, 3.7614025213819847`*^9}, {3.761402651615384*^9, 
   3.761402654567891*^9}, {3.761402747908902*^9, 3.761402793145606*^9}, {
   3.761402865578603*^9, 3.7614028799081573`*^9}, {3.761402928587389*^9, 
   3.76140295398988*^9}, {3.761402997655946*^9, 3.761403027899941*^9}, {
   3.761403075891109*^9, 3.761403076238286*^9}, {3.761403180372889*^9, 
   3.7614031997236834`*^9}, {3.7614032312013397`*^9, 3.7614032670886507`*^9}, 
   3.76140342890244*^9, {3.761403480275926*^9, 3.761403481350089*^9}, {
   3.761403513060453*^9, 3.7614035132125177`*^9}, {3.761403549605055*^9, 
   3.761403561425516*^9}, 3.761403609754438*^9, {3.76140367198862*^9, 
   3.761403675679965*^9}, {3.761403714658844*^9, 3.7614037433940363`*^9}, {
   3.761403773779291*^9, 3.761403789604382*^9}, {3.761403824236272*^9, 
   3.7614038250328913`*^9}, {3.7614038551426353`*^9, 3.761403938459445*^9}, {
   3.761404200995116*^9, 3.761404210552011*^9}, {3.761404358229147*^9, 
   3.761404358568121*^9}, {3.761527445163332*^9, 3.761527445393235*^9}, {
   3.7615304659774017`*^9, 3.76153048662649*^9}, {3.766219991187511*^9, 
   3.7662200066283073`*^9}, 3.766220602494452*^9, {3.766220981573586*^9, 
   3.766220999332594*^9}, {3.767510176336904*^9, 3.76751018234591*^9}, {
   3.767510703403048*^9, 3.767510711708168*^9}, {3.76751113510611*^9, 
   3.7675111386413517`*^9}, 3.7741707301094637`*^9, 3.774170821341847*^9},
 CellLabel->"In[15]:=",ExpressionUUID->"6fb675f1-8cd0-423a-915b-241cddf189ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["k=2, r=2 totalistic (all 4 classes)", \
"Subsubsection"]], "Subsubsection",
 CellChangeTimes->{{3.7615416009618673`*^9, 3.761541603722186*^9}, {
  3.761614402366498*^9, 3.761614403857771*^9}, {3.766220158560947*^9, 
  3.766220163549625*^9}},ExpressionUUID->"4ebe7869-f88e-4902-9783-\
89e59803ff91"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gen2r2C", "[", 
   RowBox[{"p_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Image", "[", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", " ", 
         RowBox[{"{", 
          RowBox[{"2", ",", "1"}], "}"}], ",", "2"}], "}"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"1", ",", "W"}], "]"}], ",", 
       RowBox[{"H", "-", "1"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"W", ",", "H"}], "}"}]}], ",", 
     RowBox[{"ColorRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", " ", 
        RowBox[{"1", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"3", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"5", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"6", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"7", "->", 
         RowBox[{"RandomColor", "[", "]"}]}]}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "False"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data2r2c4C", "[", 
   RowBox[{"W_Integer", ",", "H_Integer", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"gen2r2C", "[", 
      RowBox[{"i", ",", "W", ",", "H"}], "]"}], "\[Rule]", "4"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"20", ",", "52"}], "}"}], ",", "n"}], "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data2r2c3C", "[", 
   RowBox[{"W_Integer", ",", "H_Integer", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"gen2r2C", "[", 
      RowBox[{"i", ",", "W", ",", "H"}], "]"}], "\[Rule]", "3"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "2", ",", "6", ",", "10", ",", "12", ",", "14", ",", "18", ",", "22",
           ",", "26", ",", "28", ",", "30", ",", "34", ",", "38", ",", "42", 
          ",", "44", ",", "46", ",", "50"}], "}"}], ",", "n"}], "]"}]}], 
     "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data2r2c2C", "[", 
   RowBox[{"W_Integer", ",", "H_Integer", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"gen2r2C", "[", 
      RowBox[{"i", ",", "W", ",", "H"}], "]"}], "\[Rule]", "2"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"8", ",", "24", ",", "56"}], "}"}], ",", "n"}], "]"}]}], 
     "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data2r2c1C", "[", 
   RowBox[{"W_Integer", ",", "H_Integer", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"gen2r2C", "[", 
      RowBox[{"i", ",", "W", ",", "H"}], "]"}], "\[Rule]", "1"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "0", ",", "4", ",", "16", ",", "32", ",", "36", ",", "40", ",", "48",
           ",", "54", ",", "58", ",", "60", ",", "62"}], "}"}], ",", "n"}], 
       "]"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"genData2r2C", "[", 
   RowBox[{"W_Integer", ",", "H_Integer", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"data2r2c4C", "[", 
     RowBox[{"W", ",", "H", ",", "n"}], "]"}], ",", " ", 
    RowBox[{"data2r2c3C", "[", 
     RowBox[{"W", ",", "H", ",", "n"}], "]"}], ",", 
    RowBox[{"data2r2c2C", "[", 
     RowBox[{"W", ",", "H", ",", "n"}], "]"}], ",", 
    RowBox[{"data2r2c1C", "[", 
     RowBox[{"W", ",", "H", ",", "n"}], "]"}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7662208536104717`*^9, 3.766220861810584*^9}, {
   3.767420218192284*^9, 3.767420224888722*^9}, {3.767510190331472*^9, 
   3.7675101957763367`*^9}, {3.7675107435691433`*^9, 3.767510777499544*^9}, {
   3.7675111667672577`*^9, 3.767511169681427*^9}, 3.774170730113796*^9, 
   3.7741708213461437`*^9},
 CellLabel->"In[17]:=",ExpressionUUID->"a1f86501-5115-43e0-b323-e3a0c8631d00"]
}, Open  ]],

Cell[CellGroupData[{

Cell["k=5, r=1 totalistic (class 4 only)", "Subsubsection",
 CellChangeTimes->{{3.767420232609075*^9, 
  3.76742024040336*^9}},ExpressionUUID->"bb2826ed-9356-452a-af36-\
99095ba0dd59"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gen5T4C", "[", 
   RowBox[{"p_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Image", "[", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", " ", 
         RowBox[{"{", 
          RowBox[{"5", ",", "1"}], "}"}]}], "}"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"1", ",", "W"}], "]"}], ",", 
       RowBox[{"H", "-", "1"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"W", ",", "H"}], "}"}]}], ",", 
     RowBox[{"ColorRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", " ", 
        RowBox[{"1", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"3", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"5", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"6", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"7", "->", 
         RowBox[{"RandomColor", "[", "]"}]}]}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "False"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data5T4C", "[", 
   RowBox[{"n_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"gen5T4C", "[", 
      RowBox[{"i", ",", "W", ",", "H"}], "]"}], "\[Rule]", "4"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "781130654", ",", "772514435", ",", "1151319452", ",", "309095787", 
          ",", "880862046", ",", "973835714", ",", "779446817", ",", 
          "345466505", ",", "535500975", ",", "793363571", ",", "1052373865", 
          ",", "455984785", ",", "339227109", ",", "1050973846", ",", 
          "513368817", ",", "91315820", ",", "113925357"}], "}"}], ",", "n"}],
        "]"}]}], "}"}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.767420274483926*^9, 3.7674204306628304`*^9}, {
   3.767420486945815*^9, 3.767420544299651*^9}, {3.767420585508767*^9, 
   3.76742067869022*^9}, 3.7674207343955603`*^9, 3.767420772579658*^9, {
   3.767420827396451*^9, 3.7674208284090977`*^9}, 3.76742089434406*^9, {
   3.767420955061728*^9, 3.767420981278881*^9}, {3.767421027288953*^9, 
   3.7674211692763033`*^9}, {3.767421201395582*^9, 3.767421202677582*^9}, {
   3.767421241360973*^9, 3.7674212597063637`*^9}, {3.767421297984494*^9, 
   3.767421319205021*^9}, {3.767421408722212*^9, 3.767421425677188*^9}, {
   3.767421513864583*^9, 3.7674215149586363`*^9}, {3.7674215579435587`*^9, 
   3.767421603507653*^9}, {3.767421678550502*^9, 3.767421750826378*^9}, {
   3.767421945450369*^9, 3.767421954722583*^9}, {3.767421987797763*^9, 
   3.767421988206396*^9}, {3.7674220305053053`*^9, 3.767422090384396*^9}, {
   3.767422124623789*^9, 3.767422124826593*^9}, {3.767422504789649*^9, 
   3.767422504907716*^9}, {3.767422579233675*^9, 3.767422604111108*^9}, {
   3.76742343797468*^9, 3.767423441428603*^9}, {3.7675102671497183`*^9, 
   3.767510276485331*^9}, {3.7675107926937103`*^9, 3.767510797967434*^9}, {
   3.7675111827730713`*^9, 3.76751118563109*^9}, 3.7741707301174088`*^9, 
   3.774170821349885*^9},
 CellLabel->"In[23]:=",ExpressionUUID->"98ced873-5ac6-4b9e-b650-c158965ee498"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["k=5, r=1 totalistic (classes 2/3/4)", "Subsection",
 CellChangeTimes->{{3.7675277832033577`*^9, 
  3.767527798880362*^9}},ExpressionUUID->"476bdbe6-8561-4171-ad26-\
ebd401370f13"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gen5TC", "[", 
   RowBox[{"p_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Image", "[", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", " ", 
         RowBox[{"{", 
          RowBox[{"5", ",", "1"}], "}"}], ",", "1"}], "}"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"1", ",", "W"}], "]"}], ",", 
       RowBox[{"H", "-", "1"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"W", ",", "H"}], "}"}]}], ",", 
     RowBox[{"ColorRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", " ", 
        RowBox[{"1", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"3", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"5", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"6", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"7", "->", 
         RowBox[{"RandomColor", "[", "]"}]}]}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "False"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data5T4CC", "[", 
   RowBox[{"W_Integer", ",", "H_Integer", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"gen5TC", "[", 
      RowBox[{"i", ",", "W", ",", "H"}], "]"}], "\[Rule]", "4"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "644218533", ",", "491739943", ",", "6889640", ",", "986144962", ",",
           "1099816682", ",", "988971204", ",", "300829994", ",", "272622024",
           ",", "304100638", ",", "626595633"}], "}"}], ",", "n"}], "]"}]}], 
     "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data5T3CC", "[", 
   RowBox[{"W_Integer", ",", "H_Integer", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"gen5TC", "[", 
      RowBox[{"i", ",", "W", ",", "H"}], "]"}], "\[Rule]", "3"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "889082395", ",", "541068260", ",", "807907479", ",", "816180062", 
          ",", "650485139", ",", "643827745", ",", "753940864", ",", 
          "871525323", ",", "351440311", ",", "83501460"}], "}"}], ",", "n"}],
        "]"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data5T2CC", "[", 
   RowBox[{"W_Integer", ",", "H_Integer", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"gen5TC", "[", 
      RowBox[{"i", ",", "W", ",", "H"}], "]"}], "\[Rule]", "2"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "525735659", ",", "1022330944", ",", "1007796739", ",", "495633437", 
          ",", "1036827943"}], "}"}], ",", "n"}], "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"genData5TCC", "[", 
   RowBox[{"W_Integer", ",", "H_Integer", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"data5T4CC", "[", 
     RowBox[{"W", ",", "H", ",", "n"}], "]"}], ",", " ", 
    RowBox[{"data5T3CC", "[", 
     RowBox[{"W", ",", "H", ",", "n"}], "]"}], ",", 
    RowBox[{"data5T2CC", "[", 
     RowBox[{"W", ",", "H", ",", "n"}], "]"}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7662208536104717`*^9, 3.766220861810584*^9}, {
   3.767420218192284*^9, 3.767420224888722*^9}, {3.767510190331472*^9, 
   3.7675101957763367`*^9}, {3.7675107435691433`*^9, 3.767510777499544*^9}, {
   3.7675111667672577`*^9, 3.767511169681427*^9}, {3.767527810705645*^9, 
   3.767528192161414*^9}, {3.767528246723054*^9, 3.767528372658319*^9}, 
   3.774170730121407*^9, 3.774170821353751*^9},
 CellLabel->"In[25]:=",ExpressionUUID->"acd3d2ea-8896-4cab-8715-3bbeb4414ec4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generate test datasets", "Subsection",
 CellChangeTimes->{{3.766220206963079*^9, 
  3.766220211039912*^9}},ExpressionUUID->"45835d6e-7c4b-418b-b16b-\
5826ff7ae0de"],

Cell[CellGroupData[{

Cell["k=2, r=2 non-totalistic", "Subsubsection",
 CellChangeTimes->{{3.761614424510236*^9, 
  3.7616144327038603`*^9}},ExpressionUUID->"9857ce67-d967-41aa-a1c8-\
dc4a01e111e2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"genk2r2C", "[", 
   RowBox[{"p_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Image", "[", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", " ", "2", ",", "2"}], "}"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"1", ",", "W"}], "]"}], ",", 
       RowBox[{"H", "-", "1"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"W", ",", "H"}], "}"}]}], ",", 
     RowBox[{"ColorRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", " ", 
        RowBox[{"1", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"3", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"5", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"6", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"7", "->", 
         RowBox[{"RandomColor", "[", "]"}]}]}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "False"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"datak2r2C", "[", 
   RowBox[{"W_Integer", ",", "H_Integer", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"genk2r2C", "[", 
      RowBox[{"i", ",", "W", ",", "H"}], "]"}], "\[Rule]", "i"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "4294967295"}], "]"}], ",", "n"}], "]"}]}], 
     "}"}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.76161444582863*^9, 3.761614510262288*^9}, {
   3.767510309142295*^9, 3.767510314786756*^9}, {3.767510828741938*^9, 
   3.767510833118135*^9}, {3.767511190521859*^9, 3.767511193048094*^9}, 
   3.774170730124617*^9, 3.774170821357259*^9},
 CellLabel->"In[30]:=",ExpressionUUID->"f1b2d4ee-d8dc-4695-b1d7-f5232f433426"]
}, Open  ]],

Cell[CellGroupData[{

Cell["k=3, r=2 totalistic", "Subsubsection",
 CellChangeTimes->{{3.761615441007943*^9, 3.761615469505878*^9}, {
  3.7616160942784147`*^9, 
  3.7616160974184*^9}},ExpressionUUID->"bbe46304-a8c9-4610-9b2d-fef266fb07e8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"genk3r2C", "[", 
   RowBox[{"p_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Image", "[", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", " ", 
         RowBox[{"{", 
          RowBox[{"3", ",", "1"}], "}"}], ",", "2"}], "}"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"1", ",", "W"}], "]"}], ",", 
       RowBox[{"H", "-", "1"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"W", ",", "H"}], "}"}]}], ",", 
     RowBox[{"ColorRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", " ", 
        RowBox[{"1", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"3", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"5", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"6", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"7", "->", 
         RowBox[{"RandomColor", "[", "]"}]}]}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "False"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"datak3r2C", "[", 
   RowBox[{"W_Integer", ",", "H_Integer", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"genk3r2C", "[", 
      RowBox[{"i", ",", "W", ",", "H"}], "]"}], "\[Rule]", "i"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "177146"}], "]"}], ",", "n"}], "]"}]}], "}"}]}], 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.76161444582863*^9, 3.761614510262288*^9}, {
   3.76161548222936*^9, 3.7616155371087847`*^9}, 3.7616157433438263`*^9, {
   3.761616079971101*^9, 3.761616104704558*^9}, {3.76161622381704*^9, 
   3.761616225061866*^9}, {3.761616308044606*^9, 3.761616315925589*^9}, {
   3.761617122206101*^9, 3.76161712999516*^9}, 3.761617258307266*^9, {
   3.761617318990324*^9, 3.761617319579685*^9}, {3.7675103204005337`*^9, 
   3.767510325142722*^9}, {3.7675108374110003`*^9, 3.767510843032691*^9}, {
   3.7675111980057573`*^9, 3.767511200821992*^9}, 3.774170730127831*^9, 
   3.774170821360751*^9},
 CellLabel->"In[32]:=",ExpressionUUID->"9ca14769-9284-4d60-a31b-5e487857ead1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["k=3, r=3 totalistic", "Subsubsection",
 CellChangeTimes->{{3.761615441007943*^9, 3.761615469505878*^9}, {
  3.7616160942784147`*^9, 3.7616160974184*^9}, {3.773350406840972*^9, 
  3.773350406962215*^9}},ExpressionUUID->"a82e0c0e-c882-433a-8a7d-\
11c2fd71246a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"genk3r3C", "[", 
   RowBox[{"p_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Image", "[", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", " ", 
         RowBox[{"{", 
          RowBox[{"3", ",", "1"}], "}"}], ",", "3"}], "}"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"1", ",", "W"}], "]"}], ",", 
       RowBox[{"H", "-", "1"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"W", ",", "H"}], "}"}]}], ",", 
     RowBox[{"ColorRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", " ", 
        RowBox[{"1", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"3", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"5", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"6", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"7", "->", 
         RowBox[{"RandomColor", "[", "]"}]}]}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "False"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"datak3r3C", "[", 
   RowBox[{"W_Integer", ",", "H_Integer", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"genk3r3C", "[", 
      RowBox[{"i", ",", "W", ",", "H"}], "]"}], "\[Rule]", "i"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "14348906"}], "]"}], ",", "n"}], "]"}]}], "}"}]}], 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.76161444582863*^9, 3.761614510262288*^9}, {
   3.76161548222936*^9, 3.7616155371087847`*^9}, 3.7616157433438263`*^9, {
   3.761616079971101*^9, 3.761616104704558*^9}, {3.76161622381704*^9, 
   3.761616225061866*^9}, {3.761616308044606*^9, 3.761616315925589*^9}, {
   3.761617122206101*^9, 3.76161712999516*^9}, 3.761617258307266*^9, {
   3.761617318990324*^9, 3.761617319579685*^9}, {3.7675103204005337`*^9, 
   3.767510325142722*^9}, {3.7675108374110003`*^9, 3.767510843032691*^9}, {
   3.7675111980057573`*^9, 3.767511200821992*^9}, {3.773350409843751*^9, 
   3.773350440070755*^9}, 3.774170730131132*^9, 3.774170821364251*^9},
 CellLabel->"In[34]:=",ExpressionUUID->"c836ec84-2e68-492b-9d3a-e4f43e626853"]
}, Open  ]],

Cell[CellGroupData[{

Cell["k=4, r=1 totalistic", "Subsubsection",
 CellChangeTimes->{{3.761615441007943*^9, 3.761615469505878*^9}, {
  3.7616160942784147`*^9, 3.7616160974184*^9}, {3.7616163320792017`*^9, 
  3.7616163322266397`*^9}, {3.761616809978292*^9, 
  3.761616810123946*^9}},ExpressionUUID->"3187af25-8038-4a1a-9805-\
91c61e491f01"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"genk4r1C", "[", 
   RowBox[{"p_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Image", "[", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", " ", 
         RowBox[{"{", 
          RowBox[{"4", ",", "1"}], "}"}]}], "}"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"1", ",", "W"}], "]"}], ",", 
       RowBox[{"H", "-", "1"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"W", ",", "H"}], "}"}]}], ",", 
     RowBox[{"ColorRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", " ", 
        RowBox[{"1", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"3", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"5", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"6", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"7", "->", 
         RowBox[{"RandomColor", "[", "]"}]}]}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "False"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"datak4r1C", "[", 
   RowBox[{"W_Integer", ",", "H_Integer", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"genk4r1C", "[", 
      RowBox[{"i", ",", "W", ",", "H"}], "]"}], "\[Rule]", "i"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "1048575"}], "]"}], ",", "n"}], "]"}]}], "}"}]}], 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.76161444582863*^9, 3.761614510262288*^9}, {
   3.76161548222936*^9, 3.7616155371087847`*^9}, 3.7616157433438263`*^9, {
   3.761616079971101*^9, 3.761616104704558*^9}, {3.76161622381704*^9, 
   3.761616225061866*^9}, {3.761616308044606*^9, 3.761616351729332*^9}, {
   3.761616407409528*^9, 3.761616411545272*^9}, {3.7616168130005913`*^9, 
   3.7616168158678713`*^9}, {3.761616854057122*^9, 3.76161686442411*^9}, {
   3.761616959822321*^9, 3.7616169685713387`*^9}, {3.7662350487859097`*^9, 
   3.766235053414468*^9}, {3.7675103304607477`*^9, 3.767510337080057*^9}, {
   3.7675108467671003`*^9, 3.767510851628751*^9}, {3.767511206650696*^9, 
   3.767511209309524*^9}, 3.774170730134152*^9, 3.774170821367737*^9},
 CellLabel->"In[36]:=",ExpressionUUID->"8a0e5cb2-474c-405f-8ccf-85cdfa941db2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["k=4, r=2 totalistic", "Subsubsection",
 CellChangeTimes->{{3.761615441007943*^9, 3.761615469505878*^9}, {
  3.7616160942784147`*^9, 3.7616160974184*^9}, {3.7616163320792017`*^9, 
  3.7616163322266397`*^9}},ExpressionUUID->"85a1c8ea-6ff1-4040-8497-\
e1e5a7fba947"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"genk4r2C", "[", 
   RowBox[{"p_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Image", "[", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", " ", 
         RowBox[{"{", 
          RowBox[{"4", ",", "1"}], "}"}], ",", "2"}], "}"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"1", ",", "W"}], "]"}], ",", 
       RowBox[{"H", "-", "1"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"W", ",", "H"}], "}"}]}], ",", 
     RowBox[{"ColorRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", " ", 
        RowBox[{"1", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"3", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"5", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"6", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"7", "->", 
         RowBox[{"RandomColor", "[", "]"}]}]}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "False"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"datak4r2C", "[", 
   RowBox[{"W_Integer", ",", "H_Integer", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"genk4r2C", "[", 
      RowBox[{"i", ",", "W", ",", "H"}], "]"}], "\[Rule]", "i"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "4294967295"}], "]"}], ",", "n"}], "]"}]}], 
     "}"}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.76161444582863*^9, 3.761614510262288*^9}, {
   3.76161548222936*^9, 3.7616155371087847`*^9}, 3.7616157433438263`*^9, {
   3.761616079971101*^9, 3.761616104704558*^9}, {3.76161622381704*^9, 
   3.761616225061866*^9}, {3.761616308044606*^9, 3.761616351729332*^9}, {
   3.761616407409528*^9, 3.761616411545272*^9}, {3.767510343627254*^9, 
   3.767510348473226*^9}, {3.767510855740291*^9, 3.767510861789513*^9}, {
   3.767511212394096*^9, 3.76751121556322*^9}, 3.774170730137302*^9, 
   3.7741708213712263`*^9},
 CellLabel->"In[38]:=",ExpressionUUID->"089e5987-d976-416f-8c37-15894e1f2585"]
}, Open  ]],

Cell[CellGroupData[{

Cell["k=5, r=1 totalistic", "Subsubsection",
 CellChangeTimes->{{3.766234237476273*^9, 
  3.7662342423556957`*^9}},ExpressionUUID->"bcf88996-962c-442a-8768-\
3bf69f86b80f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gen5T2C", "[", 
   RowBox[{"p_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Image", "[", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", " ", 
         RowBox[{"{", 
          RowBox[{"5", ",", "1"}], "}"}], ",", "1"}], "}"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"1", ",", "W"}], "]"}], ",", 
       RowBox[{"H", "-", "1"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"W", ",", "H"}], "}"}]}], ",", 
     RowBox[{"ColorRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", " ", 
        RowBox[{"1", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"3", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"5", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"6", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"7", "->", 
         RowBox[{"RandomColor", "[", "]"}]}]}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "False"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data5T2C", "[", 
   RowBox[{"n_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"gen5T2C", "[", 
      RowBox[{"i", ",", "W", ",", "H"}], "]"}], "\[Rule]", "i"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"RandomChoice", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "1220703125"}], "]"}], ",", "n"}], "]"}]}], 
     "}"}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.76154375336207*^9, 3.761543759771061*^9}, {
   3.7615441871787853`*^9, 3.76154419143771*^9}, 3.766234260385832*^9, {
   3.7662343074546003`*^9, 3.766234313807774*^9}, {3.7675103532368517`*^9, 
   3.76751035798671*^9}, {3.7675108668951674`*^9, 3.76751087175385*^9}, {
   3.767511220229587*^9, 3.767511223185287*^9}, {3.773351000589512*^9, 
   3.773351000965266*^9}, 3.774170730140427*^9, 3.77417082137471*^9},
 CellLabel->"In[40]:=",ExpressionUUID->"f976eee9-cad7-40ae-9eb8-abb7f641dba9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["k=6, r=1 totalistic", "Subsubsection",
 CellChangeTimes->{{3.767441985831099*^9, 
  3.767441990770444*^9}},ExpressionUUID->"f5bf9f31-35b0-4385-b154-\
d1126b5f2296"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gen6TC", "[", 
   RowBox[{"p_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Image", "[", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", " ", 
         RowBox[{"{", 
          RowBox[{"6", ",", "1"}], "}"}], ",", "1"}], "}"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"1", ",", "W"}], "]"}], ",", 
       RowBox[{"H", "-", "1"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"W", ",", "H"}], "}"}]}], ",", 
     RowBox[{"ColorRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", " ", 
        RowBox[{"1", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"3", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"5", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"6", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"7", "->", 
         RowBox[{"RandomColor", "[", "]"}]}]}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "False"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data6TC", "[", 
   RowBox[{"n_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"gen6TC", "[", 
      RowBox[{"i", ",", "W", ",", "H"}], "]"}], "\[Rule]", "i"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{"2821109907455", ",", "n"}], "]"}]}], "}"}]}], 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.76154375336207*^9, 3.761543759771061*^9}, {
   3.7615441871787853`*^9, 3.76154419143771*^9}, 3.766234260385832*^9, {
   3.7662343074546003`*^9, 3.766234313807774*^9}, {3.767442006845896*^9, 
   3.7674420185681763`*^9}, 3.767442129701791*^9, {3.7674429513206043`*^9, 
   3.767442951408415*^9}, {3.767508905686763*^9, 3.767508905825247*^9}, {
   3.767509529033539*^9, 3.767509573567162*^9}, {3.767509735092375*^9, 
   3.767509737176196*^9}, {3.767509804570011*^9, 3.767509804725649*^9}, {
   3.767510362779685*^9, 3.767510371844397*^9}, {3.767510876094713*^9, 
   3.767510879753971*^9}, {3.767511226543956*^9, 3.767511229203272*^9}, 
   3.7741707301438713`*^9, 3.7741708213781977`*^9},
 CellLabel->"In[42]:=",ExpressionUUID->"7b022004-514e-4e0b-a42b-ce72906e235a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["k=6, r=2 totalistic", "Subsubsection",
 CellChangeTimes->{{3.767441985831099*^9, 3.767441990770444*^9}, {
  3.773351151314988*^9, 
  3.7733511514063463`*^9}},ExpressionUUID->"89a0c131-9a09-4809-a178-\
0bfd9abfdb20"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gen6T2C", "[", 
   RowBox[{"p_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Image", "[", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", " ", 
         RowBox[{"{", 
          RowBox[{"6", ",", "1"}], "}"}], ",", "2"}], "}"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"1", ",", "W"}], "]"}], ",", 
       RowBox[{"H", "-", "1"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"W", ",", "H"}], "}"}]}], ",", 
     RowBox[{"ColorRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", " ", 
        RowBox[{"1", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"3", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"5", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"6", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"7", "->", 
         RowBox[{"RandomColor", "[", "]"}]}]}], "}"}]}], ",", 
     RowBox[{"Frame", "->", "False"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data6T2C", "[", 
   RowBox[{"n_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"gen6T2C", "[", 
      RowBox[{"i", ",", "W", ",", "H"}], "]"}], "\[Rule]", "i"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{"170581728179578208255", ",", "n"}], "]"}]}], "}"}]}], 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.76154375336207*^9, 3.761543759771061*^9}, {
   3.7615441871787853`*^9, 3.76154419143771*^9}, 3.766234260385832*^9, {
   3.7662343074546003`*^9, 3.766234313807774*^9}, {3.767442006845896*^9, 
   3.7674420185681763`*^9}, 3.767442129701791*^9, {3.7674429513206043`*^9, 
   3.767442951408415*^9}, {3.767508905686763*^9, 3.767508905825247*^9}, {
   3.767509529033539*^9, 3.767509573567162*^9}, {3.767509735092375*^9, 
   3.767509737176196*^9}, {3.767509804570011*^9, 3.767509804725649*^9}, {
   3.767510362779685*^9, 3.767510371844397*^9}, {3.767510876094713*^9, 
   3.767510879753971*^9}, {3.767511226543956*^9, 3.767511229203272*^9}, {
   3.7733511643546143`*^9, 3.773351177174906*^9}, {3.773351428563702*^9, 
   3.773351430341761*^9}, 3.774170730147072*^9, 3.774170821381504*^9},
 CellLabel->"In[44]:=",ExpressionUUID->"cab3044c-9201-4580-9dce-211a871b1b81"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["k=7, r=1 totalistic", "Subsection",
 CellChangeTimes->{{3.773070873102974*^9, 
  3.773070878369487*^9}},ExpressionUUID->"b8bb5af3-a34b-4962-80ac-\
bbc195d25f55"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gen7TC", "[", 
   RowBox[{"p_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Image", "[", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p", ",", " ", 
         RowBox[{"{", 
          RowBox[{"7", ",", "1"}], "}"}], ",", "1"}], "}"}], ",", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"1", ",", "W"}], "]"}], ",", 
       RowBox[{"H", "-", "1"}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"W", ",", "H"}], "}"}]}], ",", 
     RowBox[{"ColorRules", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", " ", 
        RowBox[{"1", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"3", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"5", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"6", "->", 
         RowBox[{"RandomColor", "[", "]"}]}], ",", 
        RowBox[{"7", "->", 
         RowBox[{"RandomColor", "[", "]"}]}]}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "False"}]}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data7TC", "[", 
   RowBox[{"n_Integer", ",", "W_Integer", ",", "H_Integer"}], "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"gen7TC", "[", 
      RowBox[{"i", ",", "W", ",", "H"}], "]"}], "\[Rule]", "i"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{"11398895185373142", ",", "n"}], "]"}]}], "}"}]}], 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.76154375336207*^9, 3.761543759771061*^9}, {
   3.7615441871787853`*^9, 3.76154419143771*^9}, 3.766234260385832*^9, {
   3.7662343074546003`*^9, 3.766234313807774*^9}, {3.767442006845896*^9, 
   3.7674420185681763`*^9}, 3.767442129701791*^9, {3.7674429513206043`*^9, 
   3.767442951408415*^9}, {3.767508905686763*^9, 3.767508905825247*^9}, {
   3.767509529033539*^9, 3.767509573567162*^9}, {3.767509735092375*^9, 
   3.767509737176196*^9}, {3.767509804570011*^9, 3.767509804725649*^9}, {
   3.767510362779685*^9, 3.767510371844397*^9}, {3.767510876094713*^9, 
   3.767510879753971*^9}, {3.767511226543956*^9, 3.767511229203272*^9}, {
   3.773070887060704*^9, 3.7730709245429792`*^9}, 3.7730711208047028`*^9, 
   3.7741708936303062`*^9},
 CellLabel->"In[46]:=",ExpressionUUID->"3dea61d9-966a-40a2-9fd8-a1e4d4758106"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.774170839636654*^9, 
  3.7741708436528263`*^9}},ExpressionUUID->"e3aa393f-40fd-4533-a667-\
8fbe54413568"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Network XIII - Two convolutions, dropout on linear only, BatchNorm\
\>", "Subsection",
 CellChangeTimes->{{3.773294911734397*^9, 3.773294927816469*^9}, 
   3.774171005551174*^9},ExpressionUUID->"6d63eb61-66bb-4d14-a991-\
dd560e484611"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"netECA13", "=", 
  RowBox[{"netSevenCC512drop", "[", 
   RowBox[{"128", ",", "128"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.773214654961218*^9, 3.773214666432025*^9}, {
  3.773294967256976*^9, 3.773294976003352*^9}, {3.774171007952446*^9, 
  3.774171018025958*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"0f93efd4-1c2f-457b-8951-331a84496c40"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["12", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{24, 3, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 24, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 3, "$InputSize" -> {128, 128}, 
                    "$OutputSize" -> {126, 126}, "$WeightsInputChannels" -> 
                    3], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "bat1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{24}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 24, 
                    "$SpatialDimensions" -> {126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "ramp1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {24, 126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{24, 24, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 24, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 24, "$InputSize" -> {126, 126}, 
                    "$OutputSize" -> {124, 124}, "$WeightsInputChannels" -> 
                    24], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]]], "bat2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{24}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 24, 
                    "$SpatialDimensions" -> {124, 124}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]]], "ramp2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {24, 124, 124}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]]], "pooling" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {124, 120}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 24, "$InputSize" -> {124, 124}, 
                    "$OutputSize" -> {1, 5}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 1, 5}, 
                    NeuralNetworks`RealT]]], "flatten" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 1, 5}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]]], 
                    "linear" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 120}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {512}, "$OutputSize" -> 512, 
                    "$InputSize" -> 120, "$InputDimensions" -> {120}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "drop2" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.2, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "linear2" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{4, 512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{4}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {4}, "$OutputSize" -> 4, 
                    "$InputSize" -> 512, "$InputDimensions" -> {512}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]], 
                    "softmax" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pooling", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pooling", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "drop2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "drop2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3, 128, 128}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {128, 128}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, "Interleaving" -> False, 
                    "MeanImage" -> None, "VarianceImage" -> None, "$Version" -> 
                    "12.0.11"]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {1, 2, 3, 4}, "InputDepth" -> 1, "Dimensions" -> 
                    4, "$Rank" -> 0, "$Version" -> "12.0.11"]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox["\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"128\"", "\"128\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bat1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ramp1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"124\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bat2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"124\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ramp2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"124\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pooling\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"1\"", "\"5\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"flatten\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"120\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"drop2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"softmax\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.773294978718738*^9, 3.773295007956345*^9}, 
   3.773325544103874*^9, 3.7741710218431463`*^9, 3.775221553750214*^9, 
   3.775222096417267*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"b9bf4141-a11d-450d-8803-4b8ac2b69c7a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetInformation", "[", 
  RowBox[{"netECA13", ",", "\"\<MXNetNodeGraphPlot\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.773215183930698*^9, 3.77321519391398*^9}, {
  3.773325520783605*^9, 3.773325521638377*^9}, {3.774171029104699*^9, 
  3.7741710292195683`*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"7767037a-7c87-4473-a2d0-952a223e2690"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      GrayLevel[0.8], {
       LineBox[{{-13., 7.960204194457795*^-16}, {-12., 1.0000000000000007`}}], 
       LineBox[{{-13., 1.0000000000000009`}, {-12., 1.0000000000000007`}}], 
       LineBox[{{-13., 2.000000000000001}, {-12., 1.0000000000000007`}}], 
       LineBox[{{-12., 1.0000000000000007`}, {-11., -0.9999999999999993}}], 
       LineBox[{{-12., -2.999999999999999}, {-11., -0.9999999999999993}}], 
       LineBox[{{-12., -1.9999999999999993`}, {-11., -0.9999999999999993}}], 
       LineBox[{{-12., -0.9999999999999992}, {-11., -0.9999999999999993}}], 
       LineBox[{{-12., 7.347880794884119*^-16}, {-11., -0.9999999999999993}}], 
       LineBox[{{-11., -0.9999999999999993}, {-10., -0.9999999999999993}}], 
       LineBox[{{-10., -0.9999999999999993}, {-9., 5.51091059616309*^-16}}], 
       LineBox[{{-10., 6.123233995736766*^-16}, {-9., 
        5.51091059616309*^-16}}], 
       LineBox[{{-10., 1.0000000000000007`}, {-9., 5.51091059616309*^-16}}], 
       LineBox[{{-9., 5.51091059616309*^-16}, {-8., -1.9999999999999996`}}], 
       LineBox[{{-9., -3.9999999999999996`}, {-8., -1.9999999999999996`}}], 
       LineBox[{{-9., -2.9999999999999996`}, {-8., -1.9999999999999996`}}], 
       LineBox[{{-9., -1.9999999999999996`}, {-8., -1.9999999999999996`}}], 
       LineBox[{{-9., -0.9999999999999994}, {-8., -1.9999999999999996`}}], 
       LineBox[{{-8., -1.9999999999999996`}, {-7., -1.9999999999999996`}}], 
       LineBox[{{-7., -1.9999999999999996`}, {-6., -1.9999999999999996`}}], 
       LineBox[{{-6., -1.9999999999999996`}, {-5., -1.9999999999999998`}}], 
       LineBox[{{-5., -1.9999999999999998`}, {-4., -0.9999999999999998}}], 
       LineBox[{{-5., -0.9999999999999997}, {-4., -0.9999999999999998}}], 
       LineBox[{{-5., 3.061616997868383*^-16}, {-4., -0.9999999999999998}}], 
       LineBox[{{-4., -0.9999999999999998}, {-3., -1.9999999999999998`}}], 
       LineBox[{{-4., -2.9999999999999996`}, {-3., -1.9999999999999998`}}], 
       LineBox[{{-4., -1.9999999999999998`}, {-3., -1.9999999999999998`}}], 
       LineBox[{{-3., -1.9999999999999998`}, {-2., -1.9999999999999998`}}], 
       LineBox[{{-2., -1.9999999999999998`}, {-1.0000000000000002`, -2.}}], 
       LineBox[{{-1.0000000000000002`, -2.}, {-1.2246467991473532`*^-16, \
-2.}}]}}, {
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> False]], {-12.399999999999999`, 
         0.6000000000000008}, {-0.25, 0}, 
         Offset[8], {1., 0.9999999999999999}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "3", "128", "128"}, 
         "RowWithSeparators"]], Annotation[#, 
        Row[{"b", 3, 128, 128}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> False]], {-12.399999999999999`, 
         1.0000000000000009`}, {-0.25, 0}, 
         Offset[8], {1., -2.220446049250313*^-16}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "24", "3", "3", "3"}, 
         "RowWithSeparators"]], Annotation[#, 
        Row[{24, 3, 3, 3}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> False]], {-12.399999999999999`, 
         1.4000000000000008`}, {-0.25, 0}, 
         Offset[8], {1., -1.0000000000000002`}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "24"}, "RowWithSeparators"]],
        Annotation[#, 
        Row[{24}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-11.417705098312485`, -0.16458980337503065`}, {-0.25, 0}, 
         Offset[8], {1., -2.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "24", "126", "126"},
          "RowWithSeparators"]], Annotation[#, 
        Row[{"b", 24, 126, 126}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-11.417705098312485`, -1.8354101966249678`}, {-0.25, 0}, 
         
         Offset[8], {1., 1.9999999999999998`}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "24"}, "RowWithSeparators"]],
        Annotation[#, 
        Row[{24}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-11.4, -1.3999999999999995`}, {-0.25, 0}, 
         Offset[8], {1., 1.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "24"}, "RowWithSeparators"]],
        Annotation[#, 
        Row[{24}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-11.4, -0.9999999999999992}, {-0.25, 0}, 
         Offset[8], {1., -1.1102230246251565`*^-16}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "24"}, "RowWithSeparators"]],
        Annotation[#, 
        Row[{24}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-11.4, -0.5999999999999992}, {-0.25, 0}, 
         Offset[8], {1., -1.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "24"}, "RowWithSeparators"]],
        Annotation[#, 
        Row[{24}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-10.4, -0.9999999999999993}, {-0.25, 0}, 
         Offset[8], {1., 0.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "24", "126", "126"},
          "RowWithSeparators"]], Annotation[#, 
        Row[{"b", 24, 126, 126}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-9.399999999999999, -0.3999999999999994}, {-0.25, 0}, 
         Offset[8], {1., 0.9999999999999999}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "24", "126", "126"},
          "RowWithSeparators"]], Annotation[#, 
        Row[{"b", 24, 126, 126}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> False]], {-9.399999999999999, 
         5.755839955992561*^-16}, {-0.25, 0}, 
         Offset[8], {1., -6.123233995736767*^-17}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "24", "24", "3", "3"}, 
         "RowWithSeparators"]], Annotation[#, 
        Row[{24, 24, 3, 3}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> False]], {-9.399999999999999, 
         0.40000000000000063`}, {-0.25, 0}, 
         Offset[8], {1., -1.0000000000000002`}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "24"}, "RowWithSeparators"]],
        Annotation[#, 
        Row[{24}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-8.417705098312485, -1.1645898033750308`}, {-0.25, 0}, 
         Offset[8], {1., -2.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "24", 
          RowBox[{"4", " ", "\"b\""}], 
          RowBox[{"4", " ", "\"b\""}]}, "RowWithSeparators"]], Annotation[#, 
        Row[{"b", 24, 4 "b", 4 "b"}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-8.417705098312485, -2.8354101966249683`}, {-0.25, 0}, 
         Offset[8], {1., 2.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "24"}, "RowWithSeparators"]],
        Annotation[#, 
        Row[{24}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-8.4, -2.3999999999999995`}, {-0.25, 0}, 
         Offset[8], {1., 1.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "24"}, "RowWithSeparators"]],
        Annotation[#, 
        Row[{24}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-8.4, -1.9999999999999996`}, {-0.25, 0}, 
         Offset[8], {1., 0.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "24"}, "RowWithSeparators"]],
        Annotation[#, 
        Row[{24}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-8.4, -1.5999999999999996`}, {-0.25, 0}, 
         Offset[8], {1., -1.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "24"}, "RowWithSeparators"]],
        Annotation[#, 
        Row[{24}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-7.4, -1.9999999999999996`}, {-0.25, 0}, 
         Offset[8], {1., 0.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "24", 
          RowBox[{"4", " ", "\"b\""}], 
          RowBox[{"4", " ", "\"b\""}]}, "RowWithSeparators"]], Annotation[#, 
        Row[{"b", 24, 4 "b", 4 "b"}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-6.4, -1.9999999999999996`}, {-0.25, 0}, 
         Offset[8], {1., 0.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "24", 
          RowBox[{"4", " ", "\"b\""}], 
          RowBox[{"4", " ", "\"b\""}]}, "RowWithSeparators"]], Annotation[#, 
        Row[{"b", 24, 4 "b", 4 "b"}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-5.4, -1.9999999999999996`}, {-0.25, 0}, 
         Offset[8], {1., -2.220446049250313*^-16}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "24", "1", "5"}, 
         "RowWithSeparators"]], Annotation[#, 
        Row[{"b", 24, 1, 5}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> False]], {-4.4, -1.4}, {-0.25, 0}, 
         
         Offset[8], {1., 1.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "120"}, 
         "RowWithSeparators"]], Annotation[#, 
        Row[{"b", 120}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-4.4, -0.9999999999999998}, {-0.25, 0}, 
         Offset[8], {1., -1.1102230246251565`*^-16}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "512", "120"}, 
         "RowWithSeparators"]], Annotation[#, 
        Row[{512, 120}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-4.4, -0.5999999999999998}, {-0.25, 0}, 
         Offset[8], {1., -1.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "512"}, 
         "RowWithSeparators"]], Annotation[#, 
        Row[{512}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-3.4, -1.5999999999999996`}, {-0.25, 0}, 
         Offset[8], {1., -1.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "512"}, 
         "RowWithSeparators"]], Annotation[#, 
        Row[{"b", 512}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-3.4, -2.3999999999999995`}, {-0.25, 0}, 
         Offset[8], {1., 0.9999999999999998}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "4", "512"}, 
         "RowWithSeparators"]], Annotation[#, 
        Row[{4, 512}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-3.4, -1.9999999999999996`}, {-0.25, 0}, 
         Offset[8], {1., 0.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "4"}, "RowWithSeparators"]], 
       Annotation[#, 
        Row[{4}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-2.4000000000000004`, -1.9999999999999996`}, {-0.25, 0}, 
         
         Offset[8], {1., 0.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "4"}, 
         "RowWithSeparators"]], Annotation[#, 
        Row[{"b", 4}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-1.4000000000000001`, -2.}, {-0.25, 0}, 
         Offset[8], {0.9999999999999998, -2.220446049250313*^-16}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "4"}, 
         "RowWithSeparators"]], Annotation[#, 
        Row[{"b", 4}, "\[Times]"], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        InsetBox[
         GraphicsBox[
          StyleBox[
           LineBox[{{-1., 1.}, {0., 0.}, {-1., -1.}}], 
           GrayLevel[0.7], StripOnInput -> 
           False]], {-0.4000000000000002, -2.}, {-0.25, 0}, 
         Offset[8], {1., 0.}], 
        TemplateBox[{"\[Times]", "\"\[Times]\"", "\"b\"", "4"}, 
         "RowWithSeparators"]], Annotation[#, 
        Row[{"b", 4}, "\[Times]"], "Tooltip"]& ]}, {
      GrayLevel[0], {
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-13., 7.960204194457795*^-16}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "0"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Inputs.Input\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 0}, {
            Style["name", Bold], ".Inputs.Input"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-13., 1.0000000000000009`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "1"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.conv1.Arrays.Weights\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 1}, {
            Style["name", Bold], ".Nodes.conv1.Arrays.Weights"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-13., 2.000000000000001}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "2"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.conv1.Arrays.Biases\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 2}, {
            Style["name", Bold], ".Nodes.conv1.Arrays.Biases"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.5, 0.5, 0.5], 
          PointBox[{-12., 1.0000000000000007`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "3"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.conv1\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], 
             "\"Convolution\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             TagBox[
              GridBox[{{
                 StyleBox["\"cudnn_off\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"0\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"dilate\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(1, 1)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"kernel\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(3, 3)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"layout\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"None\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"no_bias\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"False\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"num_filter\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"24\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"num_group\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"1\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"pad\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(0, 0)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"stride\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(1, 1)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               AutoDelete -> False, 
               GridBoxDividers -> {
                "Columns" -> {False, {True}, False}, 
                 "Rows" -> {False, {True}, False}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               FrameStyle -> GrayLevel[0.85]], "Grid"]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"2", ",", "0", ",", "0"}], "}"}]}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 3}, {
            Style["name", Bold], ".Nodes.conv1"}, {
            Style["op", Bold], "Convolution"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Grid[{{
               Style["cudnn_off", Bold], 
               Style["0", ShowStringCharacters -> True]}, {
               Style["dilate", Bold], 
               Style["(1, 1)", ShowStringCharacters -> True]}, {
               Style["kernel", Bold], 
               Style["(3, 3)", ShowStringCharacters -> True]}, {
               Style["layout", Bold], 
               Style["None", ShowStringCharacters -> True]}, {
               Style["no_bias", Bold], 
               Style["False", ShowStringCharacters -> True]}, {
               Style["num_filter", Bold], 
               Style["24", ShowStringCharacters -> True]}, {
               Style["num_group", Bold], 
               Style["1", ShowStringCharacters -> True]}, {
               Style["pad", Bold], 
               Style["(0, 0)", ShowStringCharacters -> True]}, {
               Style["stride", Bold], 
               Style["(1, 1)", ShowStringCharacters -> True]}}, Alignment -> 
             Left, Spacings -> {1.1, 0.5}, Dividers -> Center, FrameStyle -> 
             GrayLevel[0.85]]}, {
            Style["inputs", Bold], {{0, 0, 0}, {1, 0, 0}, {2, 0, 0}}}}, 
          Alignment -> Left, BaseStyle -> {FontFamily -> "Source Code Pro"}, 
          Dividers -> All, FrameStyle -> GrayLevel[0.85], 
          Alignment -> {Left, Baseline}, Spacings -> {1.1, 0.5}, 
          ItemSize -> {Automatic, 1.4}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-12., -2.999999999999999}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "4"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.bat1.Arrays.Scaling\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 4}, {
            Style["name", Bold], ".Nodes.bat1.Arrays.Scaling"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-12., -1.9999999999999993`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "5"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.bat1.Arrays.Biases\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 5}, {
            Style["name", Bold], ".Nodes.bat1.Arrays.Biases"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-12., -0.9999999999999992}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "6"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.bat1.Arrays.MovingMean\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 6}, {
            Style["name", Bold], ".Nodes.bat1.Arrays.MovingMean"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-12., 7.347880794884119*^-16}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "7"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.bat1.Arrays.MovingVariance\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 7}, {
            Style["name", Bold], ".Nodes.bat1.Arrays.MovingVariance"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.11, 1, 0.75], 
          PointBox[{-11., -0.9999999999999993}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "8"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.bat1\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], 
             "\"BatchNorm\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             TagBox[
              GridBox[{{
                 StyleBox["\"axis\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"1\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"cudnn_off\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"0\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"eps\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"0.001\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"fix_gamma\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"false\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"momentum\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"0.9\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox[
                 "\"use_global_stats\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"false\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               AutoDelete -> False, 
               GridBoxDividers -> {
                "Columns" -> {False, {True}, False}, 
                 "Rows" -> {False, {True}, False}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               FrameStyle -> GrayLevel[0.85]], "Grid"]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"3", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"4", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"5", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"6", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"7", ",", "0", ",", "0"}], "}"}]}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 8}, {
            Style["name", Bold], ".Nodes.bat1"}, {
            Style["op", Bold], "BatchNorm"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Grid[{{
               Style["axis", Bold], 
               Style["1", ShowStringCharacters -> True]}, {
               Style["cudnn_off", Bold], 
               Style["0", ShowStringCharacters -> True]}, {
               Style["eps", Bold], 
               Style["0.001", ShowStringCharacters -> True]}, {
               Style["fix_gamma", Bold], 
               Style["false", ShowStringCharacters -> True]}, {
               Style["momentum", Bold], 
               Style["0.9", ShowStringCharacters -> True]}, {
               Style["use_global_stats", Bold], 
               Style["false", ShowStringCharacters -> True]}}, Alignment -> 
             Left, Spacings -> {1.1, 0.5}, Dividers -> Center, FrameStyle -> 
             GrayLevel[0.85]]}, {
            Style["inputs", Bold], {{3, 0, 0}, {4, 0, 0}, {5, 0, 0}, {6, 0, 
            0}, {7, 0, 0}}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.08, 1, 0.92], 
          PointBox[{-10., -0.9999999999999993}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "9"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.ramp1$0\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"relu\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"8", ",", "0", ",", "0"}], "}"}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 9}, {
            Style["name", Bold], ".Nodes.ramp1$0"}, {
            Style["op", Bold], "relu"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {{8, 0, 0}}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-10., 6.123233995736766*^-16}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "10"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.conv3.Arrays.Weights\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 10}, {
            Style["name", Bold], ".Nodes.conv3.Arrays.Weights"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-10., 1.0000000000000007`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "11"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.conv3.Arrays.Biases\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 11}, {
            Style["name", Bold], ".Nodes.conv3.Arrays.Biases"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.5, 0.5, 0.5], 
          PointBox[{-9., 5.51091059616309*^-16}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "12"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.conv3\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], 
             "\"Convolution\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             TagBox[
              GridBox[{{
                 StyleBox["\"cudnn_off\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"0\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"dilate\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(1, 1)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"kernel\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(3, 3)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"layout\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"None\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"no_bias\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"False\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"num_filter\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"24\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"num_group\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"1\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"pad\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(0, 0)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"stride\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(1, 1)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               AutoDelete -> False, 
               GridBoxDividers -> {
                "Columns" -> {False, {True}, False}, 
                 "Rows" -> {False, {True}, False}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               FrameStyle -> GrayLevel[0.85]], "Grid"]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"9", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"10", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"11", ",", "0", ",", "0"}], "}"}]}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 12}, {
            Style["name", Bold], ".Nodes.conv3"}, {
            Style["op", Bold], "Convolution"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Grid[{{
               Style["cudnn_off", Bold], 
               Style["0", ShowStringCharacters -> True]}, {
               Style["dilate", Bold], 
               Style["(1, 1)", ShowStringCharacters -> True]}, {
               Style["kernel", Bold], 
               Style["(3, 3)", ShowStringCharacters -> True]}, {
               Style["layout", Bold], 
               Style["None", ShowStringCharacters -> True]}, {
               Style["no_bias", Bold], 
               Style["False", ShowStringCharacters -> True]}, {
               Style["num_filter", Bold], 
               Style["24", ShowStringCharacters -> True]}, {
               Style["num_group", Bold], 
               Style["1", ShowStringCharacters -> True]}, {
               Style["pad", Bold], 
               Style["(0, 0)", ShowStringCharacters -> True]}, {
               Style["stride", Bold], 
               Style["(1, 1)", ShowStringCharacters -> True]}}, Alignment -> 
             Left, Spacings -> {1.1, 0.5}, Dividers -> Center, FrameStyle -> 
             GrayLevel[0.85]]}, {
            Style["inputs", Bold], {{9, 0, 0}, {10, 0, 0}, {11, 0, 0}}}}, 
          Alignment -> Left, BaseStyle -> {FontFamily -> "Source Code Pro"}, 
          Dividers -> All, FrameStyle -> GrayLevel[0.85], 
          Alignment -> {Left, Baseline}, Spacings -> {1.1, 0.5}, 
          ItemSize -> {Automatic, 1.4}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-9., -3.9999999999999996`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "13"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.bat2.Arrays.Scaling\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 13}, {
            Style["name", Bold], ".Nodes.bat2.Arrays.Scaling"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-9., -2.9999999999999996`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "14"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.bat2.Arrays.Biases\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 14}, {
            Style["name", Bold], ".Nodes.bat2.Arrays.Biases"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-9., -1.9999999999999996`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "15"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.bat2.Arrays.MovingMean\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 15}, {
            Style["name", Bold], ".Nodes.bat2.Arrays.MovingMean"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-9., -0.9999999999999994}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "16"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.bat2.Arrays.MovingVariance\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 16}, {
            Style["name", Bold], ".Nodes.bat2.Arrays.MovingVariance"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.11, 1, 0.75], 
          PointBox[{-8., -1.9999999999999996`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "17"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.bat2\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], 
             "\"BatchNorm\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             TagBox[
              GridBox[{{
                 StyleBox["\"axis\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"1\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"cudnn_off\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"0\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"eps\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"0.001\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"fix_gamma\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"false\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"momentum\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"0.9\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox[
                 "\"use_global_stats\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"false\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               AutoDelete -> False, 
               GridBoxDividers -> {
                "Columns" -> {False, {True}, False}, 
                 "Rows" -> {False, {True}, False}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               FrameStyle -> GrayLevel[0.85]], "Grid"]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"12", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"13", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"14", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"15", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"16", ",", "0", ",", "0"}], "}"}]}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 17}, {
            Style["name", Bold], ".Nodes.bat2"}, {
            Style["op", Bold], "BatchNorm"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Grid[{{
               Style["axis", Bold], 
               Style["1", ShowStringCharacters -> True]}, {
               Style["cudnn_off", Bold], 
               Style["0", ShowStringCharacters -> True]}, {
               Style["eps", Bold], 
               Style["0.001", ShowStringCharacters -> True]}, {
               Style["fix_gamma", Bold], 
               Style["false", ShowStringCharacters -> True]}, {
               Style["momentum", Bold], 
               Style["0.9", ShowStringCharacters -> True]}, {
               Style["use_global_stats", Bold], 
               Style["false", ShowStringCharacters -> True]}}, Alignment -> 
             Left, Spacings -> {1.1, 0.5}, Dividers -> Center, FrameStyle -> 
             GrayLevel[0.85]]}, {
            Style["inputs", Bold], {{12, 0, 0}, {13, 0, 0}, {14, 0, 0}, {15, 
            0, 0}, {16, 0, 0}}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.08, 1, 0.92], 
          PointBox[{-7., -1.9999999999999996`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "18"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.ramp2$0\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"relu\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"17", ",", "0", ",", "0"}], "}"}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 18}, {
            Style["name", Bold], ".Nodes.ramp2$0"}, {
            Style["op", Bold], "relu"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {{17, 0, 0}}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.5, 0.67, 0.6], 
          PointBox[{-6., -1.9999999999999996`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "19"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.pooling\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"Pooling\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             TagBox[
              GridBox[{{
                 StyleBox["\"global_pool\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"False\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"kernel\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(124, 120)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"pad\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(0, 0)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"pool_type\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"max\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox[
                 "\"pooling_convention\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"valid\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"stride\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"(1, 1)\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               AutoDelete -> False, 
               GridBoxDividers -> {
                "Columns" -> {False, {True}, False}, 
                 "Rows" -> {False, {True}, False}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               FrameStyle -> GrayLevel[0.85]], "Grid"]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"18", ",", "0", ",", "0"}], "}"}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 19}, {
            Style["name", Bold], ".Nodes.pooling"}, {
            Style["op", Bold], "Pooling"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Grid[{{
               Style["global_pool", Bold], 
               Style["False", ShowStringCharacters -> True]}, {
               Style["kernel", Bold], 
               Style["(124, 120)", ShowStringCharacters -> True]}, {
               Style["pad", Bold], 
               Style["(0, 0)", ShowStringCharacters -> True]}, {
               Style["pool_type", Bold], 
               Style["max", ShowStringCharacters -> True]}, {
               Style["pooling_convention", Bold], 
               Style["valid", ShowStringCharacters -> True]}, {
               Style["stride", Bold], 
               Style["(1, 1)", ShowStringCharacters -> True]}}, Alignment -> 
             Left, Spacings -> {1.1, 0.5}, Dividers -> Center, FrameStyle -> 
             GrayLevel[0.85]]}, {
            Style["inputs", Bold], {{18, 0, 0}}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.08, 1, 0.7], 
          PointBox[{-5., -1.9999999999999998`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "20"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.flatten\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"Flatten\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"19", ",", "0", ",", "0"}], "}"}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 20}, {
            Style["name", Bold], ".Nodes.flatten"}, {
            Style["op", Bold], "Flatten"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {{19, 0, 0}}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-5., -0.9999999999999997}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "21"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.linear.Arrays.Weights\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 21}, {
            Style["name", Bold], ".Nodes.linear.Arrays.Weights"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-5., 3.061616997868383*^-16}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "22"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.linear.Arrays.Biases\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 22}, {
            Style["name", Bold], ".Nodes.linear.Arrays.Biases"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          GrayLevel[0], 
          PointBox[{-4., -0.9999999999999998}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "23"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.linear\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], 
             "\"FullyConnected\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             TagBox[
              GridBox[{{
                 StyleBox["\"no_bias\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"False\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"num_hidden\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"512\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               AutoDelete -> False, 
               GridBoxDividers -> {
                "Columns" -> {False, {True}, False}, 
                 "Rows" -> {False, {True}, False}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               FrameStyle -> GrayLevel[0.85]], "Grid"]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"20", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"21", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"22", ",", "0", ",", "0"}], "}"}]}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 23}, {
            Style["name", Bold], ".Nodes.linear"}, {
            Style["op", Bold], "FullyConnected"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Grid[{{
               Style["no_bias", Bold], 
               Style["False", ShowStringCharacters -> True]}, {
               Style["num_hidden", Bold], 
               Style["512", ShowStringCharacters -> True]}}, Alignment -> 
             Left, Spacings -> {1.1, 0.5}, Dividers -> Center, FrameStyle -> 
             GrayLevel[0.85]]}, {
            Style["inputs", Bold], {{20, 0, 0}, {21, 0, 0}, {22, 0, 0}}}}, 
          Alignment -> Left, BaseStyle -> {FontFamily -> "Source Code Pro"}, 
          Dividers -> All, FrameStyle -> GrayLevel[0.85], 
          Alignment -> {Left, Baseline}, Spacings -> {1.1, 0.5}, 
          ItemSize -> {Automatic, 1.4}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-4., -2.9999999999999996`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "24"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.linear2.Arrays.Weights\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 24}, {
            Style["name", Bold], ".Nodes.linear2.Arrays.Weights"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-4., -1.9999999999999998`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "25"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.linear2.Arrays.Biases\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"null\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 25}, {
            Style["name", Bold], ".Nodes.linear2.Arrays.Biases"}, {
            Style["op", Bold], "null"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          GrayLevel[0], 
          PointBox[{-3., -1.9999999999999998`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "26"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.linear2\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], 
             "\"FullyConnected\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             TagBox[
              GridBox[{{
                 StyleBox["\"no_bias\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"False\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}, {
                 StyleBox["\"num_hidden\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"4\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               AutoDelete -> False, 
               GridBoxDividers -> {
                "Columns" -> {False, {True}, False}, 
                 "Rows" -> {False, {True}, False}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               FrameStyle -> GrayLevel[0.85]], "Grid"]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"23", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"24", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"25", ",", "0", ",", "0"}], "}"}]}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 26}, {
            Style["name", Bold], ".Nodes.linear2"}, {
            Style["op", Bold], "FullyConnected"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Grid[{{
               Style["no_bias", Bold], 
               Style["False", ShowStringCharacters -> True]}, {
               Style["num_hidden", Bold], 
               Style["4", ShowStringCharacters -> True]}}, Alignment -> Left, 
             Spacings -> {1.1, 0.5}, Dividers -> Center, FrameStyle -> 
             GrayLevel[0.85]]}, {
            Style["inputs", Bold], {{23, 0, 0}, {24, 0, 0}, {25, 0, 0}}}}, 
          Alignment -> Left, BaseStyle -> {FontFamily -> "Source Code Pro"}, 
          Dividers -> All, FrameStyle -> GrayLevel[0.85], 
          Alignment -> {Left, Baseline}, Spacings -> {1.1, 0.5}, 
          ItemSize -> {Automatic, 1.4}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.06, 1, 0.69], 
          PointBox[{-2., -1.9999999999999998`}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "27"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Nodes.softmax$0\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"softmax\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             TagBox[
              GridBox[{{
                 StyleBox["\"axis\"", Bold, StripOnInput -> False], 
                 StyleBox[
                 "\"1\"", ShowStringCharacters -> True, StripOnInput -> 
                  False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
               AutoDelete -> False, 
               GridBoxDividers -> {
                "Columns" -> {False, {True}, False}, 
                 "Rows" -> {False, {True}, False}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
               FrameStyle -> GrayLevel[0.85]], "Grid"]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"26", ",", "0", ",", "0"}], "}"}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 27}, {
            Style["name", Bold], ".Nodes.softmax$0"}, {
            Style["op", Bold], "softmax"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Grid[{{
               Style["axis", Bold], 
               Style["1", ShowStringCharacters -> True]}}, Alignment -> Left, 
             Spacings -> {1.1, 0.5}, Dividers -> Center, FrameStyle -> 
             GrayLevel[0.85]]}, {
            Style["inputs", Bold], {{26, 0, 0}}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[6], 
          Hue[0.11, 1, 0.75], 
          PointBox[{-1.0000000000000002`, -2.}]}, 
         TagBox[
          GridBox[{{
             StyleBox["\"id\"", Bold, StripOnInput -> False], "28"}, {
             StyleBox["\"name\"", Bold, StripOnInput -> False], 
             "\".Outputs.Output\""}, {
             StyleBox["\"op\"", Bold, StripOnInput -> False], "\"_copy\""}, {
             StyleBox["\"param\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"attrs\"", Bold, StripOnInput -> False], 
             RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}, {
             StyleBox["\"inputs\"", Bold, StripOnInput -> False], 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"27", ",", "0", ",", "0"}], "}"}], "}"}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxDividers -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
           GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{1.4}}},
            GridBoxSpacings -> {"Columns" -> {{1.1}}, "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Source Code Pro"}, FrameStyle -> 
           GrayLevel[0.85]], "Grid"]], Annotation[#, 
         Grid[{{
            Style["id", Bold], 28}, {
            Style["name", Bold], ".Outputs.Output"}, {
            Style["op", Bold], "_copy"}, {
            Style["param", Bold], 
            Association[]}, {
            Style["attrs", Bold], 
            Association[]}, {
            Style["inputs", Bold], {{27, 0, 0}}}}, Alignment -> Left, 
          BaseStyle -> {FontFamily -> "Source Code Pro"}, Dividers -> All, 
          FrameStyle -> GrayLevel[0.85], Alignment -> {Left, Baseline}, 
          Spacings -> {1.1, 0.5}, ItemSize -> {Automatic, 1.4}], 
         "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          AbsolutePointSize[4], 
          GrayLevel[0.5], 
          PointBox[{-1.2246467991473532`*^-16, -2.}]}, "Null"], 
        Annotation[#, Null, "Tooltip"]& ]}}, 
     StyleBox[{{{
         InsetBox[
          FormBox["0", TraditionalForm], 
          Offset[{0, 5}, {-13., 7.960204194457795*^-16}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["1", TraditionalForm], 
          Offset[{0, 5}, {-13., 1.0000000000000009`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["2", TraditionalForm], 
          Offset[{0, 5}, {-13., 2.000000000000001}], {0., -0.17}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["3", TraditionalForm], 
          Offset[{0, 6}, {-12., 1.0000000000000007`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["4", TraditionalForm], 
          Offset[{0, 5}, {-12., -2.999999999999999}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["5", TraditionalForm], 
          Offset[{0, 5}, {-12., -1.9999999999999993`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["6", TraditionalForm], 
          Offset[{0, 5}, {-12., -0.9999999999999992}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["7", TraditionalForm], 
          Offset[{0, 5}, {-12., 7.347880794884119*^-16}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["8", TraditionalForm], 
          Offset[{0, 6}, {-11., -0.9999999999999993}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["9", TraditionalForm], 
          Offset[{0, 6}, {-10., -0.9999999999999993}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["10", TraditionalForm], 
          Offset[{0, 5}, {-10., 6.123233995736766*^-16}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["11", TraditionalForm], 
          Offset[{0, 5}, {-10., 1.0000000000000007`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["12", TraditionalForm], 
          Offset[{0, 6}, {-9., 5.51091059616309*^-16}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["13", TraditionalForm], 
          Offset[{0, 5}, {-9., -3.9999999999999996`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["14", TraditionalForm], 
          Offset[{0, 5}, {-9., -2.9999999999999996`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["15", TraditionalForm], 
          Offset[{0, 5}, {-9., -1.9999999999999996`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["16", TraditionalForm], 
          Offset[{0, 5}, {-9., -0.9999999999999994}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["17", TraditionalForm], 
          Offset[{0, 6}, {-8., -1.9999999999999996`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["18", TraditionalForm], 
          Offset[{0, 6}, {-7., -1.9999999999999996`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["19", TraditionalForm], 
          Offset[{0, 6}, {-6., -1.9999999999999996`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["20", TraditionalForm], 
          Offset[{0, 6}, {-5., -1.9999999999999998`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["21", TraditionalForm], 
          Offset[{0, 5}, {-5., -0.9999999999999997}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["22", TraditionalForm], 
          Offset[{0, 5}, {-5., 3.061616997868383*^-16}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["23", TraditionalForm], 
          Offset[{0, 6}, {-4., -0.9999999999999998}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["24", TraditionalForm], 
          Offset[{0, 5}, {-4., -2.9999999999999996`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["25", TraditionalForm], 
          Offset[{0, 5}, {-4., -1.9999999999999998`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["26", TraditionalForm], 
          Offset[{0, 6}, {-3., -1.9999999999999998`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["27", TraditionalForm], 
          Offset[{0, 6}, {-2., -1.9999999999999998`}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["28", TraditionalForm], 
          Offset[{0, 6}, {-1.0000000000000002`, -2.}], {0., -0.17}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, 5}, {-1.2246467991473532`*^-16, -2.}], {0., -0.17}, 
          Automatic, {1, 0}]}, {
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-13., 7.960204194457795*^-16}], {0, 1.}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-13., 1.0000000000000009`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-13., 2.000000000000001}], {0, 1.}, Automatic, {1, 
          0}], 
         InsetBox[
          FormBox["\"C\"", TraditionalForm], 
          Offset[{0, -6}, {-12., 1.0000000000000007`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-12., -2.999999999999999}], {0, 1.}, Automatic, {1,
           0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-12., -1.9999999999999993`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-12., -0.9999999999999992}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-12., 7.347880794884119*^-16}], {0, 1.}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["\"BN\"", TraditionalForm], 
          Offset[{0, -6}, {-11., -0.9999999999999993}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"r\"", TraditionalForm], 
          Offset[{0, -6}, {-10., -0.9999999999999993}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-10., 6.123233995736766*^-16}], {0, 1.}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-10., 1.0000000000000007`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"C\"", TraditionalForm], 
          Offset[{0, -6}, {-9., 5.51091059616309*^-16}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-9., -3.9999999999999996`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-9., -2.9999999999999996`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-9., -1.9999999999999996`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-9., -0.9999999999999994}], {0, 1.}, Automatic, {1,
           0}], 
         InsetBox[
          FormBox["\"BN\"", TraditionalForm], 
          Offset[{0, -6}, {-8., -1.9999999999999996`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"r\"", TraditionalForm], 
          Offset[{0, -6}, {-7., -1.9999999999999996`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"P\"", TraditionalForm], 
          Offset[{0, -6}, {-6., -1.9999999999999996`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"F\"", TraditionalForm], 
          Offset[{0, -6}, {-5., -1.9999999999999998`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-5., -0.9999999999999997}], {0, 1.}, Automatic, {1,
           0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-5., 3.061616997868383*^-16}], {0, 1.}, 
          Automatic, {1, 0}], 
         InsetBox[
          FormBox["\"FC\"", TraditionalForm], 
          Offset[{0, -6}, {-4., -0.9999999999999998}], {0, 1.}, Automatic, {1,
           0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-4., -2.9999999999999996`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-4., -1.9999999999999998`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"FC\"", TraditionalForm], 
          Offset[{0, -6}, {-3., -1.9999999999999998`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"s\"", TraditionalForm], 
          Offset[{0, -6}, {-2., -1.9999999999999998`}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"c\"", TraditionalForm], 
          Offset[{0, -6}, {-1.0000000000000002`, -2.}], {0, 1.}, Automatic, {
          1, 0}], 
         InsetBox[
          FormBox["\"\"", TraditionalForm], 
          Offset[{0, -5}, {-1.2246467991473532`*^-16, -2.}], {0, 1.}, 
          Automatic, {1, 0}]}}}, FontSize -> 7, StripOnInput -> False]}, 
    ImageSize -> {485., 235.85}, AspectRatio -> Full, PlotRangePadding -> 0, 
    ImagePadding -> {{23.99999999999998, 6}, {14.999999999999993`, 
      10.850000000000001`}}, ImageMargins -> 0, 
    BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Tensor\"", "\"Convolution\"", "\"BatchNorm\"", "\"relu\"", 
       "\"Pooling\"", "\"Flatten\"", "\"FullyConnected\"", "\"softmax\"", 
       "\"_copy\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TemplateBox[{
                 GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    AbsolutePointSize[4]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    AbsolutePointSize[4]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                  ImageSize -> {12, 12}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], "\" \"", #}, "RowDefault"], 
               TemplateBox[{
                 GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.11, 1, 0.75], 
                    AbsolutePointSize[6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.11, 1, 0.75], 
                    AbsolutePointSize[6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                  ImageSize -> {12, 12}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], "\" \"", #3}, "RowDefault"], 
               TemplateBox[{
                 GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.5, 0.67, 0.6], 
                    AbsolutePointSize[6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.5, 0.67, 0.6], 
                    AbsolutePointSize[6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                  ImageSize -> {12, 12}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], "\" \"", #5}, "RowDefault"], 
               TemplateBox[{
                 GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    AbsolutePointSize[6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    AbsolutePointSize[6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                  ImageSize -> {12, 12}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], "\" \"", #7}, "RowDefault"], 
               TemplateBox[{
                 GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.11, 1, 0.75], 
                    AbsolutePointSize[6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.11, 1, 0.75], 
                    AbsolutePointSize[6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                  ImageSize -> {12, 12}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], "\" \"", #9}, "RowDefault"]}, {
               TemplateBox[{
                 GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.5, 0.5, 0.5], 
                    AbsolutePointSize[6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.5, 0.5, 0.5], 
                    AbsolutePointSize[6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                  ImageSize -> {12, 12}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], "\" \"", #2}, "RowDefault"], 
               TemplateBox[{
                 GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.08, 1, 0.92], 
                    AbsolutePointSize[6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.08, 1, 0.92], 
                    AbsolutePointSize[6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                  ImageSize -> {12, 12}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], "\" \"", #4}, "RowDefault"], 
               TemplateBox[{
                 GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.08, 1, 0.7], 
                    AbsolutePointSize[6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.08, 1, 0.7], 
                    AbsolutePointSize[6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                  ImageSize -> {12, 12}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], "\" \"", #6}, "RowDefault"], 
               TemplateBox[{
                 GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.06, 1, 0.69], 
                    AbsolutePointSize[6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.06, 1, 0.69], 
                    AbsolutePointSize[6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                  ImageSize -> {12, 12}, PlotRangePadding -> None, 
                  ImagePadding -> Automatic, 
                  BaselinePosition -> (Scaled[0.23333333333333334`] -> 
                   Baseline)], "\" \"", #8}, "RowDefault"], "\"\""}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{2, 2}, {2, 2}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 8, FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"AbsolutePointSize", "[", "4", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.5, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> Hue[0.5, 0.5, 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"Hue", "[", 
                    RowBox[{"0.5`", ",", "0.5`", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.5, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.5, 0.5, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.11, 1, 0.75], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> Hue[0.11, 1., 0.5], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"Hue", "[", 
                    RowBox[{"0.11`", ",", "1", ",", "0.75`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.11, 1, 0.75]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.11, 1, 0.75], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.08, 1, 0.92], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    Hue[0.07999999999999999, 1., 0.6133333333333334], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"Hue", "[", 
                    RowBox[{"0.08`", ",", "1", ",", "0.92`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.08, 1, 0.92]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.08, 1, 0.92], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.5, 0.67, 0.6], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> Hue[0.5, 0.67, 0.4], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"Hue", "[", 
                    RowBox[{"0.5`", ",", "0.67`", ",", "0.6`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.5, 0.67, 0.6]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.5, 0.67, 0.6], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.08, 1, 0.7], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    Hue[0.07999999999999999, 1., 0.4666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"Hue", "[", 
                    RowBox[{"0.08`", ",", "1", ",", "0.7`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.08, 1, 0.7]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.08, 1, 0.7], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.06, 1, 0.69], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    Hue[0.060000000000000005`, 1., 0.45999999999999996`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"Hue", "[", 
                    RowBox[{"0.06`", ",", "1", ",", "0.69`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.06, 1, 0.69]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.06, 1, 0.69], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.11, 1, 0.75], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> Hue[0.11, 1., 0.5], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"Hue", "[", 
                    RowBox[{"0.11`", ",", "1", ",", "0.75`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.11, 1, 0.75]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[0.11, 1, 0.75], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsolutePointSize", "[", "6", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", "8"}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "12"}], ",", 
           RowBox[{"LegendMargins", "\[Rule]", "2"}], ",", 
           
           RowBox[{"LegendLayout", "\[Rule]", 
             "GeneralUtilities`Graphics`PackagePrivate`legendTable"}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7732950226887836`*^9, 3.773325548812977*^9, 
  3.774171029827063*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"36ab19a5-4af1-4e46-82f8-8d3dc97b196e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetInformation", "[", 
  RowBox[{"netECA13", ",", "\"\<SummaryGraphic\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.773215196636877*^9, 3.773215205530636*^9}, {
  3.773325524392873*^9, 3.773325525132712*^9}, {3.774171033412961*^9, 
  3.774171033653467*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"86390fb2-f64a-4ff2-832c-ac72d4e204b7"],

Cell[BoxData[
 GraphicsBox[{
   {GrayLevel[0.7], 
    LineBox[{{-13., 7.960204194457795*^-16}, {-12., 7.347880794884119*^-16}}],
     LineBox[{{-12., 7.347880794884119*^-16}, {-11., 
     6.735557395310443*^-16}}], 
    LineBox[{{-11., 6.735557395310443*^-16}, {-10., 6.123233995736766*^-16}}],
     LineBox[{{-10., 6.123233995736766*^-16}, {-9., 5.51091059616309*^-16}}], 
    LineBox[{{-9., 5.51091059616309*^-16}, {-8., 4.898587196589413*^-16}}], 
    LineBox[{{-8., 4.898587196589413*^-16}, {-7., 4.286263797015736*^-16}}], 
    LineBox[{{-7., 4.286263797015736*^-16}, {-6., 3.6739403974420594`*^-16}}],
     LineBox[{{-6., 3.6739403974420594`*^-16}, {-5., 
     3.061616997868383*^-16}}], 
    LineBox[{{-5., 3.061616997868383*^-16}, {-4., 2.4492935982947064`*^-16}}],
     LineBox[{{-4., 2.4492935982947064`*^-16}, {-3., 
     1.8369701987210297`*^-16}}], 
    LineBox[{{-3., 1.8369701987210297`*^-16}, {-2., 
     1.2246467991473532`*^-16}}], 
    LineBox[{{-2., 1.2246467991473532`*^-16}, {-1., 6.123233995736766*^-17}}],
     LineBox[{{-1., 6.123233995736766*^-17}, {0., 0.}}]}, {InsetBox[
     GraphicsBox[
      {GrayLevel[0.7], 
       PolygonBox[{{-1., 0.3333333333333333}, {0., 
        0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
        0.3333333333333333}}]}], \
{-12.399999999999999, 7.59281015471359*^-16}, {-0.25, 0}, Offset[8], {
     1., -6.123233995736767*^-17}], InsetBox[
     GraphicsBox[
      {GrayLevel[0.7], 
       PolygonBox[{{-1., 0.3333333333333333}, {0., 
        0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
        0.3333333333333333}}]}], {-11.4, 6.980486755139913*^-16}, {-0.25, 0}, 
     Offset[8], {1., -6.123233995736757*^-17}], InsetBox[
     GraphicsBox[
      {GrayLevel[0.7], 
       PolygonBox[{{-1., 0.3333333333333333}, {0., 
        0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
        0.3333333333333333}}]}], {-10.4, 6.368163355566237*^-16}, {-0.25, 0}, 
     Offset[8], {1., -6.123233995736767*^-17}], InsetBox[
     GraphicsBox[
      {GrayLevel[0.7], 
       PolygonBox[{{-1., 0.3333333333333333}, {0., 
        0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
        0.3333333333333333}}]}], \
{-9.399999999999999, 5.755839955992561*^-16}, {-0.25, 0}, Offset[8], {
     1., -6.123233995736767*^-17}], InsetBox[
     GraphicsBox[
      {GrayLevel[0.7], 
       PolygonBox[{{-1., 0.3333333333333333}, {0., 
        0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
        0.3333333333333333}}]}], {-8.4, 5.143516556418883*^-16}, {-0.25, 0}, 
     Offset[8], {1., -6.123233995736767*^-17}], InsetBox[
     GraphicsBox[
      {GrayLevel[0.7], 
       PolygonBox[{{-1., 0.3333333333333333}, {0., 
        0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
        0.3333333333333333}}]}], {-7.4, 4.531193156845207*^-16}, {-0.25, 0}, 
     Offset[8], {1., -6.123233995736767*^-17}], InsetBox[
     GraphicsBox[
      {GrayLevel[0.7], 
       PolygonBox[{{-1., 0.3333333333333333}, {0., 
        0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
        0.3333333333333333}}]}], {-6.4, 3.9188697572715305*^-16}, {-0.25, 0}, 
     Offset[8], {1., -6.123233995736767*^-17}], InsetBox[
     GraphicsBox[
      {GrayLevel[0.7], 
       PolygonBox[{{-1., 0.3333333333333333}, {0., 
        0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
        0.3333333333333333}}]}], {-5.4, 3.3065463576978537*^-16}, {-0.25, 0}, 
     Offset[8], {1., -6.123233995736762*^-17}], InsetBox[
     GraphicsBox[
      {GrayLevel[0.7], 
       PolygonBox[{{-1., 0.3333333333333333}, {0., 
        0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
        0.3333333333333333}}]}], {-4.4, 2.694222958124177*^-16}, {-0.25, 0}, 
     Offset[8], {1., -6.123233995736767*^-17}], InsetBox[
     GraphicsBox[
      {GrayLevel[0.7], 
       PolygonBox[{{-1., 0.3333333333333333}, {0., 
        0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
        0.3333333333333333}}]}], {-3.4, 2.0818995585505003*^-16}, {-0.25, 0}, 
     Offset[8], {1., -6.123233995736767*^-17}], InsetBox[
     GraphicsBox[
      {GrayLevel[0.7], 
       PolygonBox[{{-1., 0.3333333333333333}, {0., 
        0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
        0.3333333333333333}}]}], \
{-2.4000000000000004, 1.4695761589768238*^-16}, {-0.25, 0}, Offset[8], {
     1., -6.123233995736765*^-17}], InsetBox[
     GraphicsBox[
      {GrayLevel[0.7], 
       PolygonBox[{{-1., 0.3333333333333333}, {0., 
        0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
        0.3333333333333333}}]}], {-1.4, 8.572527594031473*^-17}, {-0.25, 0}, 
     Offset[8], {1., -6.123233995736766*^-17}], InsetBox[
     GraphicsBox[
      {GrayLevel[0.7], 
       PolygonBox[{{-1., 0.3333333333333333}, {0., 
        0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
        0.3333333333333333}}]}], {-0.4, 2.4492935982947065*^-17}, {-0.25, 0}, 
     Offset[8], {1., -6.123233995736766*^-17}]}, 
   {EdgeForm[AbsoluteThickness[1]], 
    StyleBox[{
      {GrayLevel[0.85], EdgeForm[GrayLevel[0.5]], 
       DiskBox[{-13., 7.960204194457795*^-16}, 
        Offset[{2., 2.}, {0., 0.}]]}, {
       {EdgeForm[GrayLevel[0.7]], FaceForm[RGBColor[
        0.7999999999999999, 0.7999999999999999, 0.7999999999999999]], 
        RectangleBox[Offset[{-10, -10}, {-12., 7.347880794884119*^-16}], 
         Offset[{10, 10}, {-12., 7.347880794884119*^-16}]]}, InsetBox[
        PaneBox[
         StyleBox["\<\"\:2217\"\>",
          StripOnInput->False,
          FontSize->20],
         ImageSize->{11, 28}], {-12., 7.347880794884119*^-16}]}, {
       {EdgeForm[GrayLevel[0.7]], FaceForm[RGBColor[
        0.7999999999999999, 0.7999999999999999, 0.7999999999999999]], 
        RectangleBox[Offset[{-10, -10}, {-11., 6.735557395310443*^-16}], 
         Offset[{10, 10}, {-11., 6.735557395310443*^-16}]]}, 
       InsetBox["\<\"BN\"\>", 
        Offset[{0, -1}, {-11., 6.735557395310443*^-16}]]}, {
       {EdgeForm[GrayLevel[0.85]], FaceForm[RGBColor[0.9, 0.9, 0.9]], 
        RectangleBox[Offset[{-10, -10}, {-10., 6.123233995736766*^-16}], 
         Offset[{10, 10}, {-10., 6.123233995736766*^-16}]]}, InsetBox[
        FormBox[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
            "], {{0, 
            25}, {40, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag[
           "Byte", ColorSpace -> "RGB", ImageResolution -> 144, Interleaving -> 
            True, Magnification -> Automatic],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->20,
          ImageSizeRaw->{40, 25},
          PlotRange->{{0, 40}, {0, 25}}],
         TraditionalForm], {-10., 6.123233995736766*^-16}]}, {
       {EdgeForm[GrayLevel[0.7]], FaceForm[RGBColor[
        0.7999999999999999, 0.7999999999999999, 0.7999999999999999]], 
        RectangleBox[Offset[{-10, -10}, {-9., 5.51091059616309*^-16}], 
         Offset[{10, 10}, {-9., 5.51091059616309*^-16}]]}, InsetBox[
        PaneBox[
         StyleBox["\<\"\:2217\"\>",
          StripOnInput->False,
          FontSize->20],
         ImageSize->{11, 28}], {-9., 5.51091059616309*^-16}]}, {
       {EdgeForm[GrayLevel[0.7]], FaceForm[RGBColor[
        0.7999999999999999, 0.7999999999999999, 0.7999999999999999]], 
        RectangleBox[Offset[{-10, -10}, {-8., 4.898587196589413*^-16}], 
         Offset[{10, 10}, {-8., 4.898587196589413*^-16}]]}, 
       InsetBox["\<\"BN\"\>", 
        Offset[{0, -1}, {-8., 4.898587196589413*^-16}]]}, {
       {EdgeForm[GrayLevel[0.85]], FaceForm[RGBColor[0.9, 0.9, 0.9]], 
        RectangleBox[Offset[{-10, -10}, {-7., 4.286263797015736*^-16}], 
         Offset[{10, 10}, {-7., 4.286263797015736*^-16}]]}, InsetBox[
        FormBox[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJzF1s9LG0EUB/CNtpKLtvVmC4q3loooolgqBUUjHnIwNhSiRnZ+iSARkoh4
MeBJCJ7Egyi0Je5MD+JdSr3Yf6A92HMFPVr0YitofOtO7DRaE83s5gtvIXsY
Pnmz83Yb0VSIVRiGkfDDJWTOdMfj5uzQY/gRjiUmxmOUDMSSdJzGO1El3KyD
eg71wNCeoK6FEFqr1rWWEi0+1rbykBDxWcdaedHh81EiMox+ympYKz8l+yjm
C7YNjMc6QHkpyUexmLRtjIhThkRAF0rJvX0YixD07Mz2EWJFdaKU3MvHTKsL
bCeX+4r5rG6Ukjv7oG8vwHbo9E0su4FScicfQvwpPGs/nb6JTcNIVbgFkyna
NzycqYG+fZNn9evY2Hu/mzCZonzhcKoK+vVFntUfGK/Wug2TKcbnY4Rb0naA
0HqD66q/KegjhKdz85eQ9RYvUEpu9THMY7n5S02r1yuUkv/6oG9v7fkLdY4x
H/ESpeRGHzxjb8D1W864Ga9RSq75oG8vwfbLsfGlcqCU/OOLRj88o4Tvyb5t
eDB/C+XKx8Irj+AcfJfnYcej+Vsolz57/oJp25kjfDcSsZ6UGyZj+3ywl0LO
uH02+rG+3CglQfg+WpS2I5gjzaUuCO/BOV31+pW5JW1/4Kz26PjD/YHprK5q
bRnMBvqS501NA2nD2euSC97V87qqoz0i4HvznY6+5XIBTGFFng==
            "], {{0, 
            25}, {40, 0}}, {0, 255},
            ColorFunction->RGBColor],
           BoxForm`ImageTag[
           "Byte", ColorSpace -> "RGB", ImageResolution -> 144, Interleaving -> 
            True, Magnification -> Automatic],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->20,
          ImageSizeRaw->{40, 25},
          PlotRange->{{0, 40}, {0, 25}}],
         TraditionalForm], {-7., 4.286263797015736*^-16}]}, {
       {EdgeForm[GrayLevel[0.85]], FaceForm[RGBColor[0.9, 0.9, 0.9]], 
        RectangleBox[Offset[{-10, -10}, {-6., 3.6739403974420594*^-16}], 
         Offset[{10, 10}, {-6., 3.6739403974420594*^-16}]]}, 
       InsetBox["\<\"P\"\>", 
        Offset[{0, -1}, {-6., 3.6739403974420594*^-16}]]}, {
       {EdgeForm[GrayLevel[0.85]], FaceForm[RGBColor[0.9, 0.9, 0.9]], 
        RectangleBox[Offset[{-10, -10}, {-5., 3.061616997868383*^-16}], 
         Offset[{10, 10}, {-5., 3.061616997868383*^-16}]]}, 
       InsetBox["\<\"F\"\>", 
        Offset[{0, -1}, {-5., 3.061616997868383*^-16}]]}, {
       {EdgeForm[GrayLevel[0.7]], FaceForm[RGBColor[
        0.7999999999999999, 0.7999999999999999, 0.7999999999999999]], 
        RectangleBox[Offset[{-10, -10}, {-4., 2.4492935982947064*^-16}], 
         Offset[{10, 10}, {-4., 2.4492935982947064*^-16}]]}, InsetBox[
        GraphicsBox[
         GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {1.3, 1}, {
           0.9, 0}}, {
           {Opacity[0.2], 
            LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 4}}]}, 
           {RGBColor[0.33, 0.33, 0.33], AbsolutePointSize[3.5], 
            PointBox[{1, 5, 2, 3, 4}]}}],
         ImageSize->18], {-4., 2.4492935982947064*^-16}]}, {
       {EdgeForm[GrayLevel[0.85]], FaceForm[RGBColor[0.9, 0.9, 0.9]], 
        RectangleBox[Offset[{-10, -10}, {-3., 1.8369701987210297*^-16}], 
         Offset[{10, 10}, {-3., 1.8369701987210297*^-16}]]}, 
       InsetBox["\<\"D\"\>", 
        Offset[{0, -1}, {-3., 1.8369701987210297*^-16}]]}, {
       {EdgeForm[GrayLevel[0.7]], FaceForm[RGBColor[
        0.7999999999999999, 0.7999999999999999, 0.7999999999999999]], 
        RectangleBox[Offset[{-10, -10}, {-2., 1.2246467991473532*^-16}], 
         Offset[{10, 10}, {-2., 1.2246467991473532*^-16}]]}, InsetBox[
        GraphicsBox[
         GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {1.3, 1}, {
           0.9, 0}}, {
           {Opacity[0.2], 
            LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 4}}]}, 
           {RGBColor[0.33, 0.33, 0.33], AbsolutePointSize[3.5], 
            PointBox[{1, 5, 2, 3, 4}]}}],
         ImageSize->18], {-2., 1.2246467991473532*^-16}]}, {
       {EdgeForm[GrayLevel[0.85]], FaceForm[RGBColor[0.9, 0.9, 0.9]], 
        RectangleBox[Offset[{-10, -10}, {-1., 6.123233995736766*^-17}], 
         Offset[{10, 10}, {-1., 6.123233995736766*^-17}]]}, 
       InsetBox["\<\"S\"\>", Offset[{0, -1}, {-1., 6.123233995736766*^-17}]]}, 
      {GrayLevel[0.85], EdgeForm[GrayLevel[0.5]], 
       DiskBox[{0., 0.}, Offset[{2., 2.}, {0., 0.}]]}},
     FontSize->10]}, {
    StyleBox[{
      InsetBox["\<\"Input\"\>", 
       Offset[{0, -7}, {-13., 7.960204194457795*^-16}], {0, 1.}, Automatic, {
       1, 0}], InsetBox["\<\"conv1\"\>", 
       Offset[{0, -13}, {-12., 7.347880794884119*^-16}], {0, 1.}, Automatic, {
       1, 0}], InsetBox["\<\"bat1\"\>", 
       Offset[{0, -13}, {-11., 6.735557395310443*^-16}], {0, 1.}, Automatic, {
       1, 0}], InsetBox["\<\"ramp1\"\>", 
       Offset[{0, -13}, {-10., 6.123233995736766*^-16}], {0, 1.}, Automatic, {
       1, 0}], InsetBox["\<\"conv3\"\>", 
       Offset[{0, -13}, {-9., 5.51091059616309*^-16}], {0, 1.}, Automatic, {1,
        0}], InsetBox["\<\"bat2\"\>", 
       Offset[{0, -13}, {-8., 4.898587196589413*^-16}], {0, 1.}, Automatic, {
       1, 0}], InsetBox["\<\"ramp2\"\>", 
       Offset[{0, -13}, {-7., 4.286263797015736*^-16}], {0, 1.}, Automatic, {
       1, 0}], InsetBox["\<\"pooling\"\>", 
       Offset[{0, -13}, {-6., 3.6739403974420594*^-16}], {0, 1.}, Automatic, {
       1, 0}], InsetBox["\<\"flatten\"\>", 
       Offset[{0, -13}, {-5., 3.061616997868383*^-16}], {0, 1.}, Automatic, {
       1, 0}], InsetBox["\<\"linear\"\>", 
       Offset[{0, -13}, {-4., 2.4492935982947064*^-16}], {0, 1.}, Automatic, {
       1, 0}], InsetBox["\<\"drop2\"\>", 
       Offset[{0, -13}, {-3., 1.8369701987210297*^-16}], {0, 1.}, Automatic, {
       1, 0}], InsetBox["\<\"linear2\"\>", 
       Offset[{0, -13}, {-2., 1.2246467991473532*^-16}], {0, 1.}, Automatic, {
       1, 0}], InsetBox["\<\"softmax\"\>", 
       Offset[{0, -13}, {-1., 6.123233995736766*^-17}], {0, 1.}, Automatic, {
       1, 0}], InsetBox["\<\"Output\"\>", Offset[{0, -7}, {0., 0.}], {0, 1.}, 
       Automatic, {1, 0}]},
     StripOnInput->False,
     FontColor->GrayLevel[0.5]], 
    StyleBox[{InsetBox[
       TemplateBox[{"\[Cross]","\"\[Cross]\"","\"3\"","\"128\"","\"128\""},
        "RowWithSeparators"], 
       Offset[{3.367778697655222*^-16, 5.5}, \
{-12.399999999999999, 7.59281015471359*^-16}], {0., -0.17}, Automatic, {
       1., -6.123233995736767*^-17}], InsetBox[
       TemplateBox[{"\[Cross]","\"\[Cross]\"","\"24\"","\"126\"","\"126\""},
        "RowWithSeparators"], 
       Offset[{3.3677786976552166*^-16, 5.5}, \
{-11.4, 6.980486755139913*^-16}], {0., -0.17}, Automatic, {
       1., -6.123233995736757*^-17}], InsetBox[
       TemplateBox[{"\[Cross]","\"\[Cross]\"","\"24\"","\"126\"","\"126\""},
        "RowWithSeparators"], 
       Offset[{3.367778697655222*^-16, 5.5}, \
{-10.4, 6.368163355566237*^-16}], {0., -0.17}, Automatic, {
       1., -6.123233995736767*^-17}], InsetBox[
       TemplateBox[{"\[Cross]","\"\[Cross]\"","\"24\"","\"126\"","\"126\""},
        "RowWithSeparators"], 
       Offset[{3.367778697655222*^-16, 5.5}, \
{-9.399999999999999, 5.755839955992561*^-16}], {0., -0.17}, Automatic, {
       1., -6.123233995736767*^-17}], InsetBox[
       TemplateBox[{"\[Cross]","\"\[Cross]\"","\"24\"","\"124\"","\"124\""},
        "RowWithSeparators"], 
       Offset[{3.367778697655222*^-16, 5.5}, {-8.4, 5.143516556418883*^-16}], \
{0., -0.17}, Automatic, {1., -6.123233995736767*^-17}], InsetBox[
       TemplateBox[{"\[Cross]","\"\[Cross]\"","\"24\"","\"124\"","\"124\""},
        "RowWithSeparators"], 
       Offset[{3.367778697655222*^-16, 5.5}, {-7.4, 4.531193156845207*^-16}], \
{0., -0.17}, Automatic, {1., -6.123233995736767*^-17}], InsetBox[
       TemplateBox[{"\[Cross]","\"\[Cross]\"","\"24\"","\"124\"","\"124\""},
        "RowWithSeparators"], 
       Offset[{3.367778697655222*^-16, 5.5}, \
{-6.4, 3.9188697572715305*^-16}], {0., -0.17}, Automatic, {
       1., -6.123233995736767*^-17}], InsetBox[
       TemplateBox[{"\[Cross]","\"\[Cross]\"","\"24\"","\"1\"","\"5\""},
        "RowWithSeparators"], 
       Offset[{3.3677786976552195*^-16, 5.5}, \
{-5.4, 3.3065463576978537*^-16}], {0., -0.17}, Automatic, {
       1., -6.123233995736762*^-17}], InsetBox[
       TemplateBox[{"\[Cross]","\"\[Cross]\"","\"120\""},
        "RowWithSeparators"], 
       Offset[{3.367778697655222*^-16, 5.5}, {-4.4, 2.694222958124177*^-16}], \
{0., -0.17}, Automatic, {1., -6.123233995736767*^-17}], InsetBox[
       TemplateBox[{"\[Cross]","\"\[Cross]\"","\"512\""},
        "RowWithSeparators"], 
       Offset[{3.367778697655222*^-16, 5.5}, \
{-3.4, 2.0818995585505003*^-16}], {0., -0.17}, Automatic, {
       1., -6.123233995736767*^-17}], InsetBox[
       TemplateBox[{"\[Cross]","\"\[Cross]\"","\"512\""},
        "RowWithSeparators"], 
       Offset[{3.3677786976552205*^-16, 5.5}, \
{-2.4000000000000004, 1.4695761589768238*^-16}], {0., -0.17}, Automatic, {
       1., -6.123233995736765*^-17}], InsetBox[
       TemplateBox[{"\[Cross]","\"\[Cross]\"","\"4\""},
        "RowWithSeparators"], 
       Offset[{3.3677786976552215*^-16, 5.5}, \
{-1.4, 8.572527594031473*^-17}], {0., -0.17}, Automatic, {
       1., -6.123233995736766*^-17}], InsetBox[
       TemplateBox[{"\[Cross]","\"\[Cross]\"","\"4\""},
        "RowWithSeparators"], 
       Offset[{3.3677786976552215*^-16, 5.5}, \
{-0.4, 2.4492935982947065*^-17}], {0., -0.17}, Automatic, {
       1., -6.123233995736766*^-17}]},
     StripOnInput->False,
     FontSize->8,
     FontWeight->"Thin",
     FontColor->GrayLevel[0.7]]}},
  AspectRatio->Full,
  BaseStyle->{TooltipBoxOptions -> {TooltipDelay -> 0.08}},
  ImageMargins->{{0, 0}, {0, 0}},
  ImagePadding->{{24., 26.5}, {26.999999999999996`, 14.}},
  ImageSize->{765.5, 41.00000000000004},
  PlotRangePadding->0]], "Output",
 CellChangeTimes->{3.773295025958229*^9, 3.773325621222777*^9, 
  3.774171034296094*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"9179a728-a9a8-4780-9e63-00a78be8b8e3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataECA13", "=", 
   RowBox[{"dataC", "[", 
    RowBox[{"128", ",", "128", ",", "8192"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.772355752786458*^9, 3.772355821872775*^9}, {
  3.772690743490674*^9, 3.7726907773276663`*^9}, {3.772693549217153*^9, 
  3.772693583566229*^9}, {3.77312988440252*^9, 3.7731298847595797`*^9}, {
  3.7732152150950327`*^9, 3.773215215437931*^9}, {3.7732950325697002`*^9, 
  3.773295032668089*^9}, {3.7741710812201223`*^9, 3.774171081293769*^9}, {
  3.774171112241376*^9, 3.774171114625349*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"56aabf8b-2a78-4e43-80e8-8fef4f8b5dea"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataTotalistic2BigC13", "=", 
   RowBox[{"genData2r2C", "[", 
    RowBox[{"128", ",", "128", ",", "1024"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.772355752786458*^9, 3.772355821872775*^9}, {
   3.772690743490674*^9, 3.7726907773276663`*^9}, {3.772693549217153*^9, 
   3.772693588670415*^9}, {3.7731298879079638`*^9, 3.773129888266445*^9}, {
   3.77321521750358*^9, 3.773215217885929*^9}, {3.773215262293749*^9, 
   3.773215271744378*^9}, {3.7732950346821947`*^9, 3.7732950347840853`*^9}, {
   3.7741710833169518`*^9, 3.7741710834211483`*^9}, 3.774171123101664*^9},
 CellLabel->
  "In[115]:=",ExpressionUUID->"dfc030ba-235b-404f-8e5f-731ba8e231bd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataTotalistic3BigC13", "=", 
   RowBox[{"data3T2C", "[", 
    RowBox[{"128", ",", "128", ",", "1024"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.772355752786458*^9, 3.772355821872775*^9}, {
   3.772690743490674*^9, 3.7726907773276663`*^9}, {3.772693549217153*^9, 
   3.77269359306248*^9}, {3.773129890386211*^9, 3.773129891320112*^9}, {
   3.7732152196732883`*^9, 3.7732152200277443`*^9}, {3.773295036430442*^9, 
   3.7732950365479527`*^9}, {3.774171084960733*^9, 3.774171085057392*^9}, 
   3.774171127062512*^9},
 CellLabel->
  "In[116]:=",ExpressionUUID->"273100b7-f0fe-46f2-9a58-a7449cd5cddc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataTotalistic4BigC13", "=", 
   RowBox[{"data4TC", "[", 
    RowBox[{"128", ",", "128", ",", "1024"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.772355752786458*^9, 3.772355821872775*^9}, {
   3.772690743490674*^9, 3.7726907773276663`*^9}, {3.772693549217153*^9, 
   3.7726935982412777`*^9}, {3.7731298932839537`*^9, 3.773129893667457*^9}, {
   3.77321522172605*^9, 3.773215222093884*^9}, {3.7732950384695063`*^9, 
   3.7732950385858507`*^9}, {3.7741710868618593`*^9, 3.774171086932007*^9}, 
   3.7741711304700937`*^9},
 CellLabel->
  "In[117]:=",ExpressionUUID->"1660fba2-5efc-47f1-9bc4-79afcb914d11"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataTotalistic5BigC13", "=", 
   RowBox[{"genData5TCC", "[", 
    RowBox[{"128", ",", "128", ",", "4096"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.772355752786458*^9, 3.772355821872775*^9}, {
   3.772690743490674*^9, 3.7726907773276663`*^9}, {3.772693549217153*^9, 
   3.772693602628367*^9}, {3.7731298956689577`*^9, 3.773129896025247*^9}, {
   3.773215223612338*^9, 3.773215224001829*^9}, {3.7732950404115*^9, 
   3.773295040558866*^9}, {3.774171088543384*^9, 3.774171088609951*^9}, 
   3.774171133328553*^9},
 CellLabel->
  "In[118]:=",ExpressionUUID->"a0d931d4-dc63-4003-9a43-abc85e793cc0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fullTrainingBigC13", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
    "dataECA13", ",", "dataTotalistic2BigC13", ",", "dataTotalistic3BigC13", 
     ",", "dataTotalistic4BigC13", ",", "dataTotalistic5BigC13"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "fullTrainingBigC13", "]"}]}], "Input",
 CellChangeTimes->{{3.772355752786458*^9, 3.772355821872775*^9}, {
  3.772690743490674*^9, 3.7726907773276663`*^9}, {3.772693549217153*^9, 
  3.772693602628367*^9}, {3.773129897972353*^9, 3.77312991704902*^9}, {
  3.773215225791395*^9, 3.773215243291334*^9}, {3.773295042430605*^9, 
  3.773295058617936*^9}, {3.773329034384303*^9, 3.773329038122735*^9}, {
  3.774171090243143*^9, 3.774171104146511*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"47493625-dfa7-4c12-865a-480534475038"],

Cell[BoxData["26624"], "Output",
 CellChangeTimes->{3.774171796690967*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"0b4bae85-953e-47ea-8512-7d1769f71d36"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomSample", "[", 
  RowBox[{"fullTrainingBigC13", ",", "20"}], "]"}]], "Input",
 CellChangeTimes->{{3.772355752786458*^9, 3.772355821872775*^9}, {
  3.772690743490674*^9, 3.7726907773276663`*^9}, {3.772693549217153*^9, 
  3.772693602628367*^9}, {3.773129897972353*^9, 3.77312991704902*^9}, {
  3.773215225791395*^9, 3.773215243291334*^9}, {3.773295042430605*^9, 
  3.773295058617936*^9}, {3.773329034384303*^9, 3.773329038122735*^9}, {
  3.7741711060775537`*^9, 3.774171106157587*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"82f0bbd2-50da-4bea-88a3-5929536f4e2c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1kEqdQEcxuEbJSswlaGBCVO52QJDoyuMlGIgRVmAJUk2YE8o01tX55zX
W56nfP1IXIe+979zfnNytTabze42v/45Wdwf394uHk43vt+5XFwf7F+vf+Xz
z9t3f2w9zdcvn4/O3vbmy/riZXv+fv569Hi4u7SXff5YHx/Sq3yvVX72VV7b
kJ93imf+29c85FmN9XWGvM6pe8gzH+vvZ8jzH+v3/tvXP9bvdKzPn/p5jvX/
w9TPeQbAvzTFPmqtte7vv94fAP5GwwZprbV2/wOQ0bBBWmut3f8AZDRskNZa
a/c/ABkNG6S11tr9D0BGwwZprbV2/wOQ0bBBWmut3f8AZDRskNZaa/c/ABkN
G6S11tr9D0BGwwZprbV2/wOQ0bBBWmut3f8AZDRskNZaa/c/ABkNG6S11tr9
D0BGwwZprbV2/wOQ0bBBWmut3f8AZDRskNZaa/c/ABkNG6S11tr9D0BGwwZp
rbV2/wOQ0bBBWmut3f8AZDRskNZaa/c/ABkNG6S11tr9D0BGwwZprbV2/wOQ
0bBBWmut3f8AZDRskNZaa/c/ABkNG6S11tr9D0BGwwZprbV2/wOQ0bBBWmut
3f8AZDRskNZaa/c/ABkNG6S11tr9D0BGwwZprbV2/wOQ0bBBWmut3f8AZDRs
kNZaa/c/ABkNG6S11tr9D0BGwwZprbV2/wOQ0bBBWmut3f8AZDRskNZaa/c/
ABkNG6S11tr9D0BGwwZprbV2/wOQ0bBBWmut3f8AZDRskNZaa/c/ABkNG6S1
1tr9D0BGwwZprbV2/wOQ0bBBWmut3f8AZDRskNZaa/c/ABkNG6S11tr9D0BG
wwZprbV2/wOQ0bBBWmut3f8AZDRskNZaa/c/ABkNG6S11tr9D0BGwwZprbV2
/wOQ0bBBWmut3f8AZDRskNZaa/c/ABkNG6S11tr9D0BGwwZprbV2/wOQ0bBB
Wmut3f8AZDRskNZaa/c/ABkNG6S11tr9D0BGwwZprbV2/wOQ0bBBWmut3f8A
ZDRskNZaa/c/ABkNG6S11tr9D0BGwwZprbV2/wOQ0bBBWmut3f8AZHwC/kth
TA==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzNm7HKrVlWRQsFEQQxtelETI3spGnauhhpImgbGJegUUNjG4iZxgb9Lmb6
PgYGivgEVoPBH7hkDMbc91Zwi1M/53xn77XXmmvOudf5nb/82U/++le++uqr
v/31b//zk2/+7g9//vNv/v7Pf+2X//NX3/z0B7//01/99uU//O+/X77+wfd/
8fU//8Yff/rhD//zxx9f/+Mf/evXv/s3f/Hpn37xJz+27/n49/L6c36X/V4S
k9Xz7RrKOlfvWT1/tZfX71/t/UvlbYn5l8q3F2v7UjVVznq1x7Keb1vJp//r
34vnrL6rPPOK2+dcc8mBaz3ln40teU7Zy+qsy/pL3F7n7QrfbF28yLEX/fd1
TZWzXuH5am3/8s2/ff3vv/m9T3/6X//9Bx9fr55DXpfcIM+8YnXF/MWaSw58
/PvHNfzZj37709f/8b1Pv/V73/9kX5O9kO/6+B7LqWxsy/vJ+q/XNm4v8naF
b7YuSr6t6sX2a6tBbJ687mVkj2Vttnbse+zZvVg/wahSOyUfXvgPhbesetzH
dRJsIbF90RfImkluvM5bi2Pk71esXvPPEivSr8mZlhose3lRmzYnCz8vHMn+
vayfnOnH77W1Y9e84jO2hxJusOIABDPJ6wv3Vn2BrNliy4u8vZ5veS/RubYv
27OwOprEfOX/r3C46NASB5KTBYvIP3su9kzt+gmXs7rbngU505X/YLniig+Q
3LP1eH228P8rVlbrEQwpeXt5DoR7XHF4cV/8wv8k6y86tOSY9eVsvZQ4EBy2
WERel17zOk/I2q7n272T/mLz0/bWKyYXzqz8OsLhr7iR9696N8Gx4p9YjLL+
D9FE15pJ/Mvd04t7kNJnbV3bPCF9mZwLqU2LD5bnWH5C9rXKB5snBHMIT75y
w3Iwq98t375yhuQhuduyd7v2ztd6dLbGV1yX9OJyl1HymeRD2TvBrqILyN5L
nyW1T3KG5OcLLkfiYP1Sy6stv3rRC1Z6sPgDK3wjvK5wGMvPyV7I3612KBhL
+uyK61rfgMTZxsdiZsG3a20kl6y3X/D8itvVBwu3IXyb6KOiVQkOEC1w5YnV
pFZ3rLiB1YMl5rZGyBosr7P6peAk2ZfVntYHs/hQfCeSh6Tnkpoq/gmJyUq7
2R630oA230julRqxXM7yn6IdrB9INDXRpIXPk+es9OCK2xOss3dGtk+VeYPS
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
cHjC5UrPsrMKpb/bvdh5jMJpSf6QXmC5BImVPVPyWYLP5F/Rzq/1FOH51gMh
XMjGrXyW4CRZc/GoSV0XPUJ02Yp3WY+R+HgrXC3+58WjyvwD6e92LyT3XnMw
gvPkrEl+ljs+y8es52y9a1v7K11mPSLyvcTnIblqtS357Is73GvvJFakXmye
k9q3ayueicVtW4PW17X81s72X3GwXhbZi+VCLziY5VEvZvmKdib1W2JeeusL
X8vW3cqXtr2YrNPOjRSOYTFttV/rKZE8tF5Q0QtFX1w1aGcqCD9ZeQ5fyhux
OVk4WOHJJD9J3ZGYkNgWTm5xifRW6wVZfLbfZXmFxavSO4pWvdZTvJri55A1
lxkVchYkZ154BcXjsmdU9GDxHF54IwU3Lky2tUx4suVO5c591etX/hi5Z7E6
l/A3gm+2j5e/E45h881qVYtFFkOs52/5CfFbimaxMbHxJ3yv4KrtfVdMPr6n
eA5FU9g6LV4l8alszhTcJvznyitbj9Y/sRyefBc5F4tLpWaJD0b+buNjtaT1
BEjOWA1l+47VOKRXkr7wgvOUO5fCM23tFH/Peg4FJwvPIede7hHs/JX1tUhf
tnc65JlFd1vuWjSm1Ywv9HXpZZZjl3q0cbvic/Wsa52EwxdPhtRa8ZoI5yl6
ofR9m/+2H9lZO+u3WBy2syUrL47E1t7Fk+eQmBSfx+aD5WmFh9v1WL+o6Gv7
2sbB4mTp1yU+ZT2Wk1x1RDQR+TvpBWUeoPBn60tb7WZzhnBU60FZ/UJ4vl2z
5d5kzQXPSa8kmGm1p81/m8MFc4j/QPwi61sSXk34IZn/J9rQ+rdWw5beamNV
OGfhb6RHk/5i9ZflCYTDk3MkuV18AOurW25s6876JwSrLR+zeF78EBsHgntl
j0WPE41Q8sR6obYuLBe19WK9F7sG21uLFiDYS3DVcjxbC6+1z0pvlvy33l3x
VEmurvTy55zfe5Hztu9YvW/9PavXCP6ssK70KesDXLlkz8h6mCv/wXrIRZcV
LWP9qNV964u7LbKGoiPsd5XztffFq7kmolmKL03+bv0Qm/OWMxDObOclyD/i
Va5y9UWfKjqx4DZZm81tEnPLDYouK3rQ4rPl+aXfFU/7taawcSh3c1fe2nO0
fgX5XvKc1fyejW3hbyT/C2cm+GY5/CpXV33KciGi9cq8pe1r9rP2LqDUNcmf
ghUrL8v2RMJ5LK97oSkK/yfvIfN4Nk/I368eZDUa8YUsN7Nxs/zN4pjlwy/0
pvVvLdbZPlW4ruWf1mMhXOh1jVhv33Jm0t/t66Jryoy0nS9a+Q8v+L+Ns707
IzlGeEjxi1a+k+3jBBNIPq/05gucJzVi8cFirO3d9jXJbeIX2bO2NVg8MTvL
UXKS1FrhNhee2DWXONu7FbLmUr825haLVj2LrIdgmtV0hHsTjCJ3uMUfs7lh
7zcL5pf+aPmSzaXi6VnMeeFB2R5B1mPvsq33+yLOVhdbX6vEufhjhKtYXC3c
z+rTKw7ke20+lDkf+0x7P2K5qM0Ty1ELbpPPklgRDLFa1WJXmXmzHGDlQVk9
W3CmcDbrjdg42/olcSC9zN7pX2uwszGEAxDMsdyPcEiihUnftP2LeMJF7xT+
VrThykctem0192jrl9QXwSviK1pdv5pvJzVu+UDR3WTu2vpFRT+WOXCi76ym
IPcgBbfJ+q0usOfyQrNbrVQ0yIqT275muevVO2yeWA5WNLideyQ6xfLei8MX
/8e+Js+0utVilPWsLEeyvkHhDxaHCwewHM9ysKIXCK7a+ylbvyvNbvm2zT0S
E1u/BGPJ3y2GEy5B8rbsheA26V8vOHDxHEj+FK5i43Bh5mo+zT6H5NLHvxcd
utKJlgPYOJC6sDV1PcdiLOn79ozKP+JBkbwifMnira3BolNsHhYuVDy3otOL
327PsXgOBCdLfyc1+4LnW5/EegiW4608JXufVWrH+mylNq1OtNrN1um1Tqsp
yGeL7iA9izzH6rjiOZezXnFL+55y91rul69zJNhOPktynsTfYrjl7dbPf6Gz
iBYoOqj4PBentesh/Nny2Gu/Fossfyueto255eRFd5Aeamd4LA+xnjPxZGyN
W25pXxMuYfmh9Z2sLrZeB+n71nOzdxmWGxRdv6p9co7WPyH4aXuurRGC2/aO
teAwiZvlcsXnsT4G4ZyEgxE9aPltyfkVjyreneUYZJ2kH5Uatx6RnZ1b+QnF
43rRc0u/eF37hKPaO337fusJ2H5hZ2kIT7OYX+4r7ZmWGiHauXiqr3uc1TK2
pxD+Sfi2na2yPXpV4ys9aP2f0usLZ7P5c+UAeab1e1e1T3CpxKTEzd6tWI1j
70dIjdv7Yhvn1Z1X0bwkV0uelB5HNMVqDRZjSd6WeQarc0nu2d5UvC97v1P0
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
FoRLr/rICj9Jbdo7MoK3Kw1ra5Psq3AVkntkX9dzSL2stKG9p7a8kXyXjbn1
tC3mrHQQwV7rbxBctRy4aC7LkUiPI/uy8zC2X5dnEv/K1mC5+yvcw+Ltaw1L
+hfJn6uOyn7JOu3sRNHmlg8QHWdr0/IEsl+Ct8VbsJqaxKH0Uxtn60dZzWV7
0Ip/Wi+R1P6qxxUtYGNLcp7gG+HMZO7rtYZd8U/rwZZ7w1X/tWu2eW59M6sp
CO9azTMQTlu0w+fkVwQDL85z7b3w29UsevG+Vv6kxRPCi174QtajJtxjhWNF
lxX+UHjRKk/smdr+u8olwqsJB7BnZL/3478y10ew0WoHqxkLv7I9qPhpJE8I
/lx9p8THev4rvm01O4kbwa7VrALJgRdxK9hO+IPF8+Jjv9BoVjeRWF3fe62t
6PrSEwknIflZ8N/mktVfBc9JfpKzK/4SyZMXsSr5b+uCvLZ3oCU+RE8RnLE6
2s4qWE1acsPWtdV0qzyxnn/h58SfKXdh5f5l5ZnYuy2be5Y/l3uZgudW75Oc
JLhBcmwVq9U9l9VxFseuGFpcWs2fWC/6OpcSt6JJV7zO+gxWd5P4lx5hObbF
NNI7LJ7bXkD0oO0LK25Q7jTLvQyJj8UEG0MbH+KhWV5q+eoKQ6wWI3VtdbH1
x2yt2ZyxcbOalOT2CvMLT7CcqnB+q21tzhcNWPwc28tIz1ppATuTTPxe67eU
mNh/hH+S95Dasbz0+vcinjafbU0Rj5FoW+KFWu+C9GjbK60OWsW/6COLgZYz
WF+o1KnlSFYDrnjpqge90I8veJT1bAvOkJiQvlY8w8JtCtaVnCT1S2JO+J6N
VfF2LBaV3LZ/X825EW/Hnqnta8UXKnW66tcr/UW0Kqkjkg+lJ5b4WP5j+yDp
cQXHrBdH9kXiZuNjdUeZJyTxJDyErOfF/aDVKeRcSA5cNbuar1v15avXkN5q
Y2h51Gq+y/Zry+ssLyX1VfZLYmi1P6lNq2VIHyR8+PVsHvGvrF6z8bH9ejUf
RXpQ8S4sh7Q82Z5j0cure9Kixy3PJ5zErtPO9ZF+arWtfX7hq2TvxCOyXNrq
puJFkHywM3sFW0gdFc5f7lDs/a/1nSw2Wg5QZsAsJlvubXO+cJ6il+09KelB
BJ/JuVhPptzlXe8h9w623u1d5AsPp+Sn3aPFLtv3Cb4Vj8V6X6SOii9k12Dj
Q+JmOYk9X1unViNcfa14MkQvWH1q+UDRJmX2yXoR5Y7Dem5W5674W+EMqzy8
amd1v1N8Tsv/y11V6WWvP2s5oZ05tz5V4R6WnxMdZ7Vb0Qh2X6X2bR2Vvkn6
79UTrZ9g+47VWcWbIh4F6S9kZsPWV8FPm//WtyF7LD6n7YNXrhJeR86dfG/5
rOWEpHZIzFe9o/R0i10r3CPcgOzr6k12btbOhxT/k+SerbvCu4hmLL/XsFzX
elDFT7AxsTVCtI/FFnt3Zjmt5dUkN+wspc2f1dyXzR/bW1e9Y6UFCjezuEfy
gfQs2zfJGshnrYdQPBm7huKnrXDbYojF1ZVHR/qdrVPb6wu/IjzfemtFi1l9
VGq2fJb0x5JX5PmWV1issPrU1njJbcLhbQ8lOWzxmWCCvaMsd3lWn1peZPO/
6HrLH+zeLXdd8f/XflrBqOv5hBuv/CXbQ0lMyGevf/Z+za7Bzt6seh/Zi40t
wRM7K2I9WPu9Fp9L3y/4Y3ljqTWCLZZHlR5HcN7yYYv5RadbHHvh/a44quWT
JH+sZ1Vmzwi/tb2V4GTRRCSXVtq5cM7yuwAbH6JzLU9e6ccV5lv9VbRe4dWE
25QeZ3Wi5a7FK772/sKLtv29cDnyfutDkry1flTBAaJPS28leyHnuPJRSf6Q
HCD6hXgOhKcRjmR77gu/aIX59rOrGTDCqex+rW9QZj+IXrOefPGBLX6utLyt
EYufZV8X3lrfu/QFy12tT2LjZn/nYmvkygfbc0l9ke+y9w425y3fsByszJxY
bmD1S8F/q3lXvoHta+Uu3nIqwnNWPrDl55Zjk8+WHCA8rfSj1W9PSu2Q3mFx
rOAt8a6Jp01y0tZ1iS3B2KLvCgcjOGN5iNVBJPcKhymftRrh+l5y7iQ+pU4t
HpK9r7iEXQPhNqVmV3fZK/+WYFq5kyLfa308grckZ8jMjNUjlrPZ2Nr8L/Mt
xF+y3GaloQgulTvB0rsth1nphaKtrBdhY7XyIe377flaP7bEhHAVgmmlv5f5
jet7SS0TzWXPtNSUzQFbO1f8SX+3GFK4Qbk/sjEpPb383sFyb7IGUvuWy5We
azHfeo9lDoFgBcFJ238LthB9VGrHYrLtpy/0e/kNAqkdq9GKnrKeQHk/8WyJ
9rE5dtUReb7FKNJbSQytF1f6NcnhK+ctF7X3JvY1wYHigxEeaPmtzT2LITZn
bByK7l7FmfT3ot9JjZC1Wd5Y+r69X7B8YJUzpa+91j4EowhuF4y1Wsn2VstR
LdcqXNTimPWOSN5eMSmz6IQf2jsOkoflvGyfsjlg40y0qvUTbB5a3LO9htRy
8SjK/aCtHXLWNicJRhXtU+qC8ATLB6yGsr21zPOsuCjJ1eId2R5hfcvVHSV5
bbm9zWfbpwhXJ/W42ovNQ/s7mnJ/TWqH9C9bd6WuC04Wf8/qsjJb9T/WjNlD

       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztmjGqndcVhYUDwY0HkcqQIoXdhfAedptKyggUkElhCNiFcZdgg6cQPAK3
JlNIbwhxrYDJBALuI0MKFb6H/3DOPvdbW1+hsCKunu+/1t57ffdKv/rjn599
9NaTJ08+ffvV/zx7/tkHn3zy/PM//PKn//Pi+cfvv/fxL17Jv/z/10/619+/
8/jXb754+PfLfz3888XTx6/e+dvvfv/bPz1W/P6Knv2Zr7/+yp+98vpbr5nV
u55r17PP/pyV51p5byd93vUsK+/55G6uPMtJDwnzWbHL1bf01s95VQGPP/fr
2dP/PHzz5XcP//jxu4eV37/1miv61s+ZfT8V7+3lf3/z+Pcf3n389usPH6/o
lfdzxYfZZ599zcpzzWZd/X5Ozsnse9418ys7srKn1XdgxdtdPqw878pe7Pqz
r/+64tWt11z5s7OvX/lvrdzhK695vTdff/2tzr31mlnfZud8tptu6VvvefY1
s+/z1mtW3s+uuzGb3ex7rt6X2efd5VvFLlfP5718O5n7lTs2e/duzf+s3vXe
Zn/OrWfZdWNv+bNyQ1YyXfn5u/auoteuzOEu3ypu5q59mc2rostOPsvKfK7M
ya79rfbqymt2cfWufqxg3dn3tqubdvkzO6uznld0R/XP2cWWu/LadUN2PcvJ
z6Enn+Uk2+zyrWJnqzntyg2suKvVn19Ofo6b/e9e+X5g182s6I6VHl95nyuf
K3fNScXN3MWuFZ9DV2abzDYrs7Gyv7u+G1n5XEPj/123pYLlKu5GxWeBlX6v
ZqoKjj3JeGT+r2b1k/xfzTYnn7fi+9KTnx8J/L/yLBXZVdz8apao2MFdupr5
u/L/ruci8H8125x83l2fU1Y+j5zs0Ar+X7khFbd39jN19WeB6htOmIddf7YT
/9+L1at/Zif+p81qIv/PPlfFfT555ytYouKunpyHWS46+TnxJP9XP9dJ/q/+
vH8v/t9191bez5W7Qeb/2ezudZ/vpau/z7kyJ7RnWXnGFP6v/vx7kj+rvzNM
5P97fadB4P+T37En6pXvUSv+7unkPFTfBDL/3/r5V36fxv9X3vOKz135/+Ss
Enqw4nk76V3f55zkyeqbOXsTqnu54vulCjarzuXKs6z8nWZX/j85q7v+3nlX
DxJuLE3P3pkVxqju4l03k8BRJ2/IlYwIuZzkn5XbReb/e83qvXqw+nk76V3f
hxN2vIL/T3LFvfi/+u+/TnbZ7LPP7gLhee91b2f76CT/E+YqRa98Z06YvYqb
OfvdcnWvpc82jQ129T6Z/09+p0foo5S5IuvZ73Bos1d9M0++/8Sbmd5ls58F
CM9LYDD5P1fv+jc8nfifptNnOz2X2fcs/8v/iXr2+5/Z74jS+d+b+ebksost
5X/5n6xP/jtqws56M5m3lJyL/M/vo8S5IuuKf0ct/785NzM9F/mf30fyP1PL
/z38NJex//I/p48S56qTpu24N5OpU3KR//l9JP8ztfzfw09zGfsv/3P6KHGu
OmnajnszmTolF/mf30fyP1PL/z38NJex//I/p48S56qTpu24N5OpU3KR//l9
JP8ztfzfw09zGfsv/3P6KHGuOmnajnszmTolF/mf30fyP1PL/z38NJex//I/
p48S56qTpu24N5OpU3KR//l9JP8ztfzfw09zGfsv/3P6KHGuOmnajnszmTol
F/mf30fyP1PL/z38NJex//I/p48S56qTpu24N5OpU3KR//l9JP8ztfzfw09z
Gfsv/3P6KHGuOmnajnszmTolF/mf30fyP1PL/z38NJex//I/p48S56qTpu24
N5OpU3KR//l9JP8ztfzfw09zGfsv/3P6KHGuOmnajnszmTolF/mf30fyP1PL
/z38NJex//I/p48S56qTpu24N5OpU3KR//l9JP8ztfzfw09zGfsv/3P6KHGu
OmnajnszmTolF/mf30fyP1PL/z38NJex//I/p48S56qTpu24N5OpU3KR//l9
JP8ztfzfw09zGfsv/3P6KHGuOmnajnszmTolF/mf30fyP1PL/z38NJex//I/
p48S56qTpu24N5OpU3KR//l9JP8ztfzfw09zGfsv/3P6KHGuOmnajnszmTol
F/mf30fyP1PL/z38NJex//I/p48S56qTpu24N5OpU3KR//l9JP8ztfzfw09z
Gfsv/3P6KHGuOmnajnszmTolF/mf30fyP1PL/z38NJex//I/p48S56qTpu24
N5OpU3KR//l9JP8ztfzfw09zGfsv/3P6KHGuOmnajnszmTolF/mf30fyP1PL
/z38NJex//I/p48S56qTpu24N5OpU3KR//l9JP8ztfzfw09zGfsv/3P6KHGu
OmnajnszmTolF/mf30fyP1PL/z38NJex//I/p48S56qTpu24N5OpU3KR//l9
JP8ztfzfw09zGfsv/3P6KHGuOmnajnszmTolF/mf30fyP1PL/z38NJex//I/
p48S56qTpu24N5OpU3KR//l9JP8ztfzfw09zGfsv/3P6KHGuOmnajnszmTol
F/mf30fyP1PL/z38NJex//I/p48S56qTpu24N5OpU3KR//l9JP8ztfzfw09z
Gfsv/3P6KHGuOmnajnszmTolF/mf30fyP1PL/z38NJex//I/p48S56qTpu24
N5OpU3KR//l9JP8ztfzfw09zGfsv/3P6KHGuOmnajnszmTolF/mf30fyP1PL
/z38NJex//I/p48S56qTpu24N5OpU3KR//l9JP8ztfzfw09zGfsv/3P6KHGu
OmnajnszmTolF/mf30fyP1PL/z38NJex//I/p48S56qTpu24N5OpU3KR//l9
JP8ztfzfw09zGfsv/3P6KHGuOmnajnszmTolF/mf30fyP1PL/z38NJex//I/
p48S56qTpu24N5OpU3KR//l9JP8ztfzfw09zGfsv/3P6KHGuOmnajnszmTol
F/mf30fyP1PL/z38NJex//I/p48S56qTpu24N5OpU3KR//l9JP8ztfzfw09z
Gfsv/3P6KHGuOmnajnszmTolF/mf30fyP1PL/z38NJex//I/p48S56qTpu24
N5OpU3KR//l9JP8ztfzfw09zGfsv/3P6KHGuOmnajnszmTolF/mf30fyP1PL
/z38NJex//I/p48S56qTpu24N5OpU3KR//l9JP8ztfzfw09zGfsv/3P6KHGu
OmnajnszmTolF/mf30fyP1PL/z38NJex//I/p48S56qTpu24N5OpU3KR//l9
JP8ztfzfw09zGfsv/3P6KHGuOmnajnszmTolF/mf30fyP1PL/z38NJex//I/
p48S56qTpu24N5OpU3KR//l9JP8ztfzfw09zGfsv/3P6KHGuOmnajnszmTol
F/mf30fyP1PL/z38NJex//I/p48S56qTpu24N5OpU3KR//l9JP8ztfzfw09z
Gfsv/3P6KHGuOmnajnszmTolF/mf30fyP1PL/z38NJex//I/p48S56qTpu24
N5OpU3KR//l9JP8ztfzfw09zGfsv/3P6KHGuOmnajnszmTolF/mf30fyP1PL
/z38NJex//I/p48S56qTpu24N5OpU3KR//l9JP8ztfzfw09zGfsv/3P6KHGu
OmnajnszmTolF/mf30fyP1PL/z38NJex//I/p48S56qTpu24N5OpU3KR//l9
JP8ztfzfw09zGfv/JvP//wC7t3Kx
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1kEqRQEcxeEXJZnICmQLGLsZvA2wgqcYKcVAZhZlxkJswSaEMjAxuF33
OPJ9RT+l97yHzn/v7OrkYm2xWNxsvn86Wd0eX1+v7k43Pr44X10e7F+uv+f9
58dHPy+3h9fdjeHscX342i9Hy+HwaTlsPeyM7rGPM+V5v/v5x76usd8zx+OP
fd6fes+Tr2XKzzDldz3H+zPlvZrj8X/qf3mOx5zjPZ/j/3ruv9s5Xu+Uv5MF
AP/SlA3SWmv9d/u39weA39GwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9A
RsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21
dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGw
QVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/
AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDW
Wmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZ
DRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba
/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMG
aa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8D
kNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVpr
rd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0
bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3
PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuk
tdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZb1ZbkRI=
       "], {{0, 
       128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
/w+vK8S7
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztnEHKZctxhB8yCGsZ2oAGT1Pbjbcgr+A9kEAgYyEPjMEDLcPgVXiuNRgP
tAgtQKCpnkCYtqFEhCO+rDx/n0E1ty/31q3KyoyMjKzz//Dbf/rJz7731Vdf
/fNff/fPT775l7//1a+++dd/+P6f/vPTb37x469/8Vffvfz1n8efXv/N737+
6Qfffu/Tt7/7j7/7/W9/+OmXX3396ev/+sGn0/vK68+/25r/NKf7W8rvJnO6
+yXmSWzYsnli29Zrwia3/J/YF+FLrb1Mxmnru5Ox3FrnP/7oD3/7m3//t0//
+d9f/6/XCWae5nTnd+d0X7s2af0WMU9y1sQe3XNs5YKW/7trI/yf3pe7ttY5
KnNu8OfJeLmFjZ/P+V058D/DXdvnn/l8Hnf+0+vTnO7r0xo+f0381mkk87hx
1NrXaW3uOZ6+m/AfN+4UX530/1aeSnzM9aXEVi7O0/5Mv05imcDGU6wpazud
hZtrkhhs1ZhELXY6o4QzuzzwZNtWze7injIS+7hr+PwzSnwR/p+co7Iv17dP
a1Ped/fl+jnhz/TrJJZvYaO7fiWWk9cJPiS1UlKLuVjX0qmSGryV11z+n9iH
9jcX/91coMSXkqda8xMaeKI1Ef68DfOTc6e5pYL5SiwQ+glRF5/2ReCbkt8T
zGnFo7vHhP+35qRr81YuUDRhBecJzbmlbyu2vcWFNvB8AmfceVzfTmq6hGcm
+OByBhrfXP7mYg79+cTfiDlb/tbKm0Quc/NCktdOa2jlUNc+LS60gee7HDXB
GTp/tfo+RI5z+ZIbay3+39Km6NeuvyU2SeZs+WSSNxNeR/N/l6e19ATXPi0u
1MoFhP+c/LzF/wkd4Ba2uDmupQknOlVrLyfMae0x4bcb+H+CzwSOtXhdi/8n
ONzCDcU+hH8muYDgunTsKFiR+EkLf1qag2JbN9crWhnB/1vaVPJa8QdlDYlN
kjlbnKel/yS9vFY96+apBGdoXufiVRJ3BO+lY8fdu+InLrehz04Zp/hS1tbC
9uTs3Hhv1bZu3b2B/7c0HBcblXyd2ISoZ0/7cuOOqPFdLpRw72QvLa47Wee6
a3b9k9YPE1x1z+IW5icYmNS2rp+09A3XxxQbJtqs8j4dy4kmSdxxUj5P1PiJ
TyavW7xXsVsSO27NksTXyT9dPG+dXQtvW3PSa5jsgbq/2+K6p/UnPJao5Sfz
oKJJTmrXBK8+fd6NhRY/d8/FrVOSOrF1LglXIew5ySXo/NJaw2RtqGAOUT+6
sdaybYtbunZT9ktoCzQfTvJmsoakL6b40ulcCF1O8RMCJxOuktiTwHDl80R+
cddM6ypuDLr9RPpOFK2punZu8bckvibvbLjcPskR7hom86P7u617FwROunsh
YpPA8Fu1Kj0PXRsmnETRGVq5gNZUT3Z270W09q74NnFnI8ETN0e0+BWRH13O
7OpyxDMFyb4I/t+qrzfXqor9CY7hxpqLA8qdKMX/WxioYLLLyRXbunmwtfck
jtyYbcXLac3J+4pvtPJjq65U6msXH4h6KqlbW1pc4ue3alXitWurJHZO8xM1
Ap0L3NctzYq2Q8s3kjVviBfXVkkNe5qzxZcIGyb1VMtvW/Go+PmtWpV4neBt
EjsKh098nh7bnuMjntlJfOPWmum4OP2uu8dWXamckbKeVuwr9nGxl4hNAieJ
WjXBHPo+8KS+lPh8ayg17ORzfC0cTngdzf+VNbfiRbEJkR+JnKXM39JJWjyw
xf9PsXn6/OTdhlZt5fq2yx+UXqRrH9fHkhqBHi43oNfTupfl8oFJ/k/EC6HV
J3ts3dVR/DbRSRKso/m/ghtKPd6623Cav1VrKL7d0tJdf2itwT07Gm8VXKJ/
N7GP64eTzxS4a27V5m4dqmC4G1NuXLc0w0QnSeKixf8TH0vOjsCEhOck9bvi
24lW5q5hsufijlb92xqEfVpaDbHmlj7TskPLVnRd2dJJkvOi7+y5PkbrqK7+
3+ovKHib+FjSF1Bq8Nb95BYOt7S+lm+3cnGi0U2uuaWNKzGo2IHQZxR/I/yH
7o0S/CHxsZaftzAh4TBu/Z5o6Yo2eLJPYpPE3+hajPiuOwj73+L/rZrRPQtC
d53kkAROEndIns7/W5iQ5Fllj8p3Ey3dzQWuTVqxsKEWI+oCwv6ujxFrVnSD
5P0Wp23pMxvqSveucuuearJm18da/D/BBOV3iR6TO9z1JzmUiAUCwydrPdrn
lTXQPtbSc5T3T2sm6oUkvibrStdnEo1oUhdVzte1A8EVCc2TwPwkl9G/1cLh
Vi3mro2Ii4TD3NJsW33/BPeIeqGFFXRd6T6npmhEt+5sTPJ/+rUSI4mtWpy2
VVO36ikF61p2buXHZL+tnEX4mLJmV7fZwIFpTKDryhb/P33GrdGIXEDfaUzq
IOW3Wnd1Wjjj5qkEJxM/cd937dyK5QTrEp9P6lA6FxCafIIVRL1wq65s7V2x
CaG1tnzJtUPCz936qHWmyvpbZ6Q8L5ycNcGv3DtRCU9rYV2r/nJtS2B+KwYn
OXDCmW/VlUnuUPZC82cipytn2rqTkNwTS/RPovYk4qWFty2u5daqNNa560+w
ha7HWzFI8GpX73Lv3RHPs0zyfyVeXH9u3d11Mcf1wwS7XMzfxg9bz7m4Z91a
G9ErUd5PsM5dm8LHiBpqMhe4vFQ5R5r/E9y4lfcTnGz5c4KZRE53sYW27S1+
mNypPvmGctanPbpru/U8zqRW6X63VUNN5gKXl05iRevzLX1jsvZJfFKprxMN
sxVTrs7Tsu0tfpjU3coa3BrQxXYFB9x1btMq6e8S9TiBIcl6NvB/14eTNRA4
mfhVy5/pvKbEePJMBBEL7nfd9bs2VHzYjeWk9lHWqcTgU7RK5bsuz5nsFxB3
mVpY0eJ1NG+/xf+Ver9Ve07mNRdXW7a9xf/d30pwgMZ2ZZ1urt+mVbb82T2L
SU3MPdMWVhC6LqHbb8BJpd53MTPpDyZ7Uc7R1V1bsZB8t8X/ExxIuGILB9wY
cfEziWXCN1ojyRFufLm+557LJP+nexa3cLJV57b6g7f4PxFr2/h/EncJVyQ4
XlJfJHFBnC/he+5e3PNy46tVa7hY0Yp9omdxCycTne30W+79eRrzb8XdNv7f
wu1Wjkg4Xks7TWL8Kfw/watb/JbouSSx79pEsY8S1wRO0nW00nty52+NL5n/
u367Qf93/YeoTeganOAhLVtN8tuEixKx39Ihk1zQwkmCgyV1FlGnb4i7xN/c
7yp5wY07l88Q+r+yR5e3EPGb8DGChyT7SupHd4/JfaRJ/p/okIndWoPW2Qg7
0zb5Evi/G3eTPIfQkJO84P4WoVUS97USDkZwdUKfJPi/W3dseObC9QdaZ6O1
6Nb4SPz/9DrJFy2eQ9f4Ld1GeV61hfnJnAROtu7HJmeqzN/Kv61nEzY8c0Fz
NkLbpG1CxF0yCP6vzO/mC/e1cqZuviByzclWyhpa59jCohZOKv7fsn+iT7Zi
NuH/rmZO+K3rD3QMunZO6iMiFzyd/ydxnWD+CWdcOyfc1Y01pT4iauEWFrV0
rdazja79E3wgYvaWLk3kiKS2JXQ296wTmxBx1zrrlg1b/NzFRoUnJ3eT3Dlb
z+ycPkOfoztngrHEs4236vFb/J/QZ9zPu2t24yuJa+KsFZu0zuUp/D/BaqWu
d3VLF+dbcT2Zr1vn6M5J3xNw57xVj7vcphX7LV3atVuiwxNaAR1rhOap2PCJ
/D/Banf+RDtK9Ac6F284R8InCX8m4i7xbdrPW7p0YreWDk/3+Gg/b9mc7mvT
cT05p2ITV0txe9ZJXNNjGy8ivjsZd4qd3b5860xb9W+C7a4On2gFRJ5NfDWx
ues/T+H/9JyT+qqbI7aNj8T/W3dIiLqA1poSGyZ34dy9uJoerRsTdnb7/hv6
2nRcT85J2CTRiIiz2HaOhP0TTdW9Q5JoJsna6FzgcuwTxp72pbxP8DFCN6Zj
yl3/rb42Hdf0nLS/nT7zFM2fPkea/7u6tBtfCp60dG8iF7j2P63TvTs3qVFv
5l3u3cWTPyR1K7GvL5n/P9EPN6yZ4P8tvHXjrqV7u3uZtL+bIzZo1Bt4F93r
2XbP5Evg/xts8sRzJPi/y8mVdSafb32XuI90y/8nNerNvGvyLtmk3vXy/2f5
4YY1E89aKpivvK/EaaLhE/cnk34r4UvKOmmNegPvmrxLtgFnXv6/0w83rJmw
f6sXnOCwq3u0egRuXUD7f+ue1TYfo+3QygW3cObl/zv9cPOaJ/l/C6sTDd/F
QFcnudVvbd2zIvx5Eg/p+2AbYvaWzV/+Pz+ezv+TGHS5WYK97p1wpfdB91tb
96wIjXoyxgkdL6kLXv6f48ZmmzzxHAn7u71gWttvxbVrf6KOOA1asyL8mYhx
QsejtcFJDHn5/4xNnniOt3hCS/Mh5m/hc1JHnOyf4Ji7tlYuIHyMznGtOV/+
r4+X/99dM80TiL9d0Jpf0Ula/D8509b9oiQ/bvCxVr4m9Jxbz/neiutknpf/
310zzRMUzdn92wXJM8KTNnH/7tlpnqRmcffS0r0Je7p9jVYNSOd0Yrz8f379
T1/zZH45xayC4e7zZSdMIGyS7DHpRxC9yCTvTK6hleNa9eY2bvny/xmbPPEc
b9mf6LW1enAtm7h43sLYFjYmfdLEnpM9Gjfukpw+iRUv/59f/9PXfCsnJr02
+g7e5J38RHtp2cG1LXEWij+c5iSwLrnTOxlHtA8Tc778/+6ab9k/wQr6Dh6h
V9N3Dlv3YTasYYPfutp+qz++Oa5f/v8xzvGW/ROsSP6m3CT/TzScVs/RtQPR
62zdydngt0m/nlgP7cOTc778/+6aafu7+oa7NgVnaP5Pa/tJn1F5Tjn53dZ9
SPpeUxIXk72bzXH98v/58UT+f+veCKED3/pbdqfPKHWQsnc3t7q9ziSHur2P
DXVrsn56vPx/xiZPPMdtWre7tls8Z1Lbd/fYek7Z3e9pTkJDo5+xmjxfAite
/j+//qev+ZbW3dJAJnkOre27XJfg/+5+k3zhculJzKfPl84FL/+fsQk9NvD/
lhaa1NH0veuTHdx7gG5eUz4zyf+Vc6c/fzpTWqskejfufifj+tacid9uW//T
10xr3S1dxeWWtP1bGlGia9H6/+RrpQ4itEqid6PwB7ouePn/jE3ocYv/J1ro
af0JL7rVU3N1J7d32dK1Wp8nclaihyR/xyPJxYkf0vMncU1gxTZ8m1z/09fc
0rpPcyq9vG06qqJBKe+733V1rRb/J+6FJrmSwHy3t5JwHmL+JAZprEji6+X/
82tuad2nORXtOtG0J+sCJTZbvDfRtVw/SdbsYn4r75/2kvSSWv0FVwty52zV
HS3/f/k/NybXnOCAO4/CCbfpqIk/u9zvVr3vnotbvyjYeFrPac2tnpRiT2UN
rTNK+iOuDRPfpjGHjk1i/qevuXWvUqnfW/rGhn6Bsh4lFyjvt/zE7fUk36Vx
MtFn3JH4WCuvuXZ4+f/L/5XfSrSIW35C66juOK3H5cmT9X5inwSvkrNOziX5
rlt7Jhwm8eGX/8/YhB6Ta27hJO0nk8+sufOf1n/6fKK5JTZP8k6CVwlOKjZv
nbu7/lavOXn98v/59T99zS39hF4zraO2eC8dCy3MTOqmFi5N4iSdm5T+iNvP
SrjBy/+59U8OYs0tHLhlZ6I/mPDeJBdM8v+EA7dwSVm/MmerN5TgqnuHwf2M
248j/j7Sy//nB7FmuhbewP8J/kbnSjcWCAxM8ru7ZsLP6XtW7r2mlp+3/LmF
Sy//nx+tO8lELTxZeyrzuxosgRsurtL8v5UvtvUr3d6QUtOd5j/x6pbu5/qS
68/JePn//EjWTOu0ih9O8v/k2dvTZ072dO1MazguBiq/1dLNJmvGxDdatUkr
FyjrnKxHXP+k8W3D+idHouu2uKXih5Pn6Na/yuvkfqabK4kzau090RmSvUxi
C52X3VxA6JaTsUbj2+b131qzy2daPdNt9kz+Fo3C5W7p6soZJTZxz7H1N39O
c9LYsqG34sZaay9ErCXzvPw/X7PCP907Fdt0fsV/Tvt172m4ayB09QRnFJuc
9t76mw+tOoLwDUKXa/EExc6tXl5iz5f/z+Ob29tKdMsNOn9iKyV2Wpjv+nNS
oyV9WJfzn+zTsjPdr0x8u9VbaZ0dkVOSXPDy//mR+GFS827Q+Tf4VaKJuX1n
N9cnGJLgcCt3EP1KAg8TTuWenRK/Cf+n9+6Ol/9395L0iTbr/JN+legGybmc
5lE4tluvKedO2LnFRZU5N/RoEs0n4QNJHUHElBsj2zBh22j14CbPnR6JX7Xw
wT2jZC+3NDpCY3Rtm+DeZI8mmf9kc6WuVOK3VUu2cGwbJmwbCmdwueKtc6cH
cW9WiTWiH7HhLk3LzoltE/3Efe6PwNIk37k5SKkjkloy8ZmX/+eD4B70uU/a
JOmdneaf1E5bWt8GOytzJpxEybPu+y0sbWkvSjy6dcSGWvLl//kgNM+n9Hxd
vyJ6Z7SG1tL6Ju18srnityd/c3FPOetWj+b0maReUH6LiMdt+uGkrz5ltPRP
hec8BfNd3CBs2NLQWlrfpJ1b+fQUs8ke3RydYIXih24Nflrn5JkSvvTyf320
9M+Pah9lX0nvjNCN3b0ouWbSzq1nUlxNphUvtG0TrexWP+6jYvIT+b/rt+4z
g0+3T8vfEk3Y1Y0TP0/wkLZn8kyKiwmJpkT0Z5Wx+T7eR8XkJ/Jb1z8TjvFE
+xD+1uq3Eva8hVfKIGxC3LFJesqJbVta2cv/9+8rGYl/tva42T6T/ub2W4me
7C28SkZiExcnk1yT3PVKbJvcSaDj9KNi8mZ+2/KxRGfYbJ9Jf3P7rcprV0NO
/OFWXUD0qV1MaD3/mGhHbnwpuaAV460YIXzmI+UaZbR8jLDhBvts8LckF7Qw
P9Grb9UFSS9Vwcmkd+OurXV/yd0j3T9qxUhrfNRco8R4y6+Iu2pfGv9X7OPi
DOEPiYY8mQuS33I5c0tjb/XXklyg/O62GHHHR801iv8nWiXdD3r5PzcP0bs/
zU/gVeLzLW0z0Y5aNm89z7VtfFRMntyX6wPb7pa//L87T+IP7pzuOlt4RfSp
W1poch/19BlFt9nWl78VI6fxkXKNqyVuvlv+8v98nsQfWtqFqzO7eEX0qVuf
d+tr97XyWxv0t1sx4o4n5hpCPyT8c/O53xo0/2/5w2lOV6+Y1MZbfS6iL3br
7u6k/rYtRk7jibkmqXMJnyTO6OX//795kr/rMmlzQhuf5DxJPpq8u5vgya1c
8ERMpvdF97Am75ZvO/dbo+VvrR4ibXNCG09yXMJt3LrDzQUJ5ie62ba6YDMm
0/tqnZHCD91c0ML8W+d+a9D+lvQQJ/Nswr2T55USPz/ZjdCpEsyf1MGeGCNJ
7ND7Is4lqW0nMf/l/5zdNttWwWFX71Lw3L3n0OqJED3rSR1sMhdswOTJfSXn
lfShNthk8txvjUn+P9mvSexwwmHXbgQGKvqJsl8iR7R0v0T7InLBNkymY9+t
2V3tKKk3J7FiQ96ZHAT/J7TlyXM/cX7Fbq1ewGmdicau2KF1l0PxN9dPbj1f
8FH5f6vmcrlKSy+iMWEDR32iv7W05W02oXsBrX4unSNOe3Ft1ao1iH7BR+X/
yu+2aq4kX9yyyYa8c+vcifk33N9IbEL3AhLt6GRnGiddnG/p/IqPEf2CL4H/
uz2pVr/YPceX/+/3tw33N1qxQPQClN/dpv8rMeLmhZb21fLJyRhR7Dnp/0lP
p/XdDTbZkHcmR8u2rZr9tj3+rw+0egEJXilzEjkiiXHXbrSutVl/uIU5yd4V
+yc60gYcfvm/7j8u1m2uC1q9gBZeTer/Lk4mOo+rg7V0rc36wy09Vtm7e4dZ
+W7rXsE2bHzKcG1LYNHmuiDpBSR45frhJE66fRDXVgmXeKL+cEuPVbA34ULK
PImPbcPGp4wEWxJsJ7CIto/bC2j93YaTHybPUCQ46WK4YttEHyC0i4/E/4mY
op/l2YD5L///y77k4gYx561c4PqnkjsUzHdrbWV+xQdcDSeJL0UfSDSizfoD
rccmMaXwgdNvTe6dGF8y/2/VxZOc7ZatlL24zzcl+pJiN3eeFv9v2dbFrqfo
Dy09NunBEedF7H1bvD9x0Pyf6DfdqgsUW7l8KcGxVv6d5P8tPyQ0/FuYT+T0
RF+d7IlsxtsN+eiWv7W4ujs/kV9u+afL212bJ7HvYt0t/p9gnWv/DfjTyoOJ
HW71RDbg7TZ/2OZvNA9U1tbSNif9M3nWiaitFN/ewP9b3FXR4m7hD4HJrh0U
m7diwd375FkQe9w2WlyUOLsWzrTqghb/d3msshci9pVYoPm/2wt2NTelF7ON
/7fu7Sj1YKtmbO19cmzOR5P+dvK9ybOb1EVp/3TzkbKXPwJD3EAC
       "], {{0, 128}, {
       128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt10GqbtUVxPGXCOIM0nYKBntREWfwMoIXUBIQFNMItnQqYiszSEZgzyHY
tusMVEgjnQfvcr91zq92rYayhOu9e9e/qs5e7/7ti5ef/fHFixf/fOe3f718
9a+Pv/rq1dd/ffv3//j01ed/fu/zt34bv/3fP7/Pv/z3pw+/++GbDz75xx8+
+v/57//+z4d/+v7Hv7z/85cfve5nXvfzr5vf5Pe/yd996u9/zhmm/9aj5mmd
n6rPBMfnePVRfn4Oi0f5/FFnm+A4keVHnf+u/D7qXlfqP+GTu7plQjdB5+lv
3IQ+d+V9uiuuPMOV34uJd9Gj/t/pt5OQ32n9p9+iQrdoGZ/QfPobd+UbUtDt
UXuEkKkrOWpv5sT8Xqm/ppXARfs+yt+4K719l27anLILaJok5vfKd6+mlcwl
Rf/pb9xd3hZ2AYHdXd8LjcWp+Z0+g6yVzCXdtyl8G3Sb1lzgqGmSmN/0ntS6
RZuF75HGt0G33QUcH8p3P6knhW7RZuEbJPNt0G1ac4Gjpklifu/iK2glc0n0
bQrfBt12F3B8KN9d4Cu/FWVPpnCR+TboNq25wFHTJDG/6e8lrVu0WWCk8W3Q
bXcBx4fy3U96Lwndos0CF5lvg27TmgscNU0S8/vUMwj9truA6dsUvg267S7g
+FC++1PPIHSa0OeCJ2XfpvBt0G1ac4Gjpklift/kDEKnCX0u+FD2bQrfBt12
F3B8KN9d6Cj5rSh7cvnuLiBoLnDUNEnM7+4CJpdE36bwbdBtdwHHh/Ld3+Tv
Cj2m9bngSdm3KXwbdJvWXOCoaZKY36d+F7RZ6xZtFhhpfBt0213A8aF895Pe
RUK3aLPARebboNu05gJHTZNT8yt0mtDnAouT2O0uYM7C90JjcWp+T3oXCd2i
zQIXmW+DbtOaCxw1TVLye9K7SOsWbRYYaXwbdNtdwPGhdvdT30VCt2izwEXm
26DbtOYCR00TOb+nvou0btFmgZHGt0G33QUcHwp3b3gXCd2izQIXmW+DbtOa
Cxw1TbT8TudFmLVu0WaBkca3QbfdBRwf3nX3K/MizEK3aLPARebboJvwhjzp
3ZWS3yvzIsyaVtosMNL4NugmvCFPenel5PeuvAizoJU2C1xkvg26TWsucNQ0
kb/Fp76LtG7RZoGRxrdBN61/0j0s53f6bwk9pvW54EnZtyl8G3TT+ifdw1p+
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
bwhnSOlzoRs1/yTyFXT7FSv5PDk=
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzd1z/KrWcZxeGjgjoNeyvtLPJhhhBHcAKxCghREDsdSZqAE3A8GYON2JpA
ChvhHN51rXVvi4R9Pva79/Pc9/rz27/4/A+f/f7H7969++PPv/vfZ+///Nuv
vnr/l9/99Pt/fPH+y1//6suffPfyrz/89/3rf33zs7fP//T29revv/3kl7/5
9O3f//zR27f/+Psn//33//X6Y9//5DM/5O8f8vpDnm2e/2Pv8rHPin2lZvtk
p+LuYkdP9Clei/OImTT3IvybyoqmZ8X7teaf7OXJmZ+cP5WHzX3p8+j5CM00
ez+lz8tZ2txLM3NEnzY7V7ClyNtUzqw4SvC29toF7m1qRuTGhYxanbO5l2bm
6I4W59E8I/pCv3/Fdal56t68Nh+tAd1rF7ioyagXdKIZPvUefR7dNSu+XeVn
akciW8QuVvNpdrrIxgtcdG1WWiepDBE5L3heaFX4LpXPQreC664xoejWZo6J
ThfZeIGLdJZqlmjqXJ9Hs/cqz5t8KzhNd9wFJhS5KuYjNNPM8GZGrbJU5FWT
e/X5m1nd9LvO4dTrle+uMaHIVZEhqTuKjhDvWXVcc1YrPegeSWXIBUbVGS56
5JrvrjGhyNXUzFc7Ffda9bjOrlT+NPWgeyR19yajpvzS9EVTk/p3R7ObNMO/
4k6bs236V/fCBR9d6JHm74umB5/0kfCFmEnz98iqm5pMsuKQC/da9XiTaS/4
aMVmKT5Pnf9aHwlfiDs22bV5/mZ3CDbQOxX3WvX4hXs1fbRiM9FZKU4Qf2/y
T2rXzaxIMdIFP15gA71T3QvNHk9xyDW2EWwpsiX1OtWh+rXgn1Q3NTMw1d2C
SS7w4YqXmvda9fgFvlpxZuoMundEFq1eC/55xQzU7NH0o9i7nsOFe2nvC268
zDap/tVaXWXRivkF/7xiBmr2SGl1xYerzGzeS3tfcKOYs/ZRk2FSvSO+q8lR
ohNfPQOF14RWU1oSWhWZKTpixSGpzLn2O0L37yqvdBatfgsIvb1iBurfC4IB
NN8259DsCJ3hoptEDuhO17rVeaWzqOmRJ/nTvG8zA0XnXuOiZm7rPBT3WnWB
5rcV22jd6nzWWZTqmtWc9b60llJ3X3Vis4/EHC7of9UFqdfNnl3xdjOfU5rR
fNI854pDRAameucyFzVzW5xB63/1u0BoVffsireb+ax7rdl3zWcFh+i9POmd
1N81z+sMFGfQGk6dWWes7iOdIcI7zRzQnavzs7mX5kx0j+jXTR7W2XuNIcX3
Psm6FdOufC081cwB3bkXGKOZXbq7hV/Ea+HTFAOLHa34NvW9+jeFnnmTW1Z+
0Yx9QZ+rZ3XOCzbWDPbEL7p/dfZeY0jB1c2dNrtY5LBmy2v8c613xLMpXQmP
rxgsxZDag6JPdSc2fd3kCu2LFbdothS+Tp0npRPNGCJjUzoRvCEYTPNwyoN6
1xcYUmhJs5PulCa3aLYUvk6dZ7VT/azOSe3lJkvrz2nmjPCOYEjxO0KzUzMz
NbdothT9lTrPaqf6WZ2T2stNXa2Yqskbgi31b4oLuxZZIXqt2WWr/lrNWfdg
6tlUzlzgcK2rFVMJTTZnuGLOFTs1M1N7U2hA99dqzroHU89q/YucEcym81nv
+oJ3VvNJ9Y7gDZ2Zopu0x3UfiXtd6EHNsSn96502z7Biqmvfm+rla71zmT1S
vdbssmZm6ntd6EHBTlrngrsEG2tNpjS8+t4UJ1/rHT2r1Pl1JqcyXHited9r
PSjYKeXlJ5kp/Cjm0GSqa9/7ZF8rNtNna3pNZ7KYeWovzfte68ELeZjqIN07
Yg6anS5/r+h3zWb6bE2vibzVM0/tpdmbzTNotknl4WX2Fv3SZKfL36s1kzpz
82xCYzoTxN21ZvT3is7SfdTMw8vsLeaZyh+xl+b3NjMhxdsXckbzTJMtL7Dc
BV+LrG4ylZjzSgNinqn80Rne9LjOhCY/65xp7lH0bCpzUne/4Gv9W0bvWv8O
EnoTPCPude3uq3xLaUnwQ9MXeo+rjBXZmOLzVV6lWE7sWs9W54Bm5tRsL+TD
6u+iQ4VHtC/0Hl/dX82c1HmVYjnha/Fa602cR/hI5EmqC1aZJvJBZGbzdWqP
q4xN+auZkzqv9Hx0hjQ/U3eu4CjNJ4L5V5kmZigy80InprKrmeE6A0Vu6B4R
HaEzpPmZunObGS7yRHRZM9M0g6W+q9mVOrtE94nO1T3S7MdUZgpWabKZziKR
Gxf4JHVm0WuCw3Uv6703GW/VfU0mb7JKqh81TwqOWn2m9rLwmuaTJsMIf+kM
1/vVvwV0dml+aOpWs4rQ8DXGFvyTyp8V/wg2SOnkwjlTuxMdpLP0GuOtuq+5
iyarrHKsydirjH3iC60fwQYpPafyU3OafrbJ4ZcZb9V9K92mtKSz8YkXVtmu
M1a/v8mNqYzV2mtymn5Wd43gh5XORfetdJvSkrhLKkv1nJ/0Tkrn4v06K1Jn
bnZok9P0szofmtrT3yW670mOadZKeS31vam+Ts15pQ3992ZWCI83+0VoQz+r
82Glq2anNDtd975m11VeiXxYaUO/vpwVzUwQvXDhWZ0PK10JnQs9a57UDHzh
c1Ka1Pu60LMiB1YsoTNB9IJgj2v50OyClX5EzogdNTOh+Tmprtf7ajJtyqcp
zzY5vKn5FRuLvbwKP+j7ik4UbJ/qfZ114nOucVSzg7RPLzBAU5NP7tJk41SW
illpftDcLvhBn0fMM5V14nOucdQqb1+Ft4X2dG/qvYtzrmal+UHnlWZR/VtD
5J7Y6YXeEQwmtCGy9BrXaY+LOQuN6b7TjLE6/4W8Tc1f92bq9cqDFzhKa0Po
P8WrggFWfao7TmSOYPJUzqdmu2IVoX/xW0NoUvC81kxznlobQv+ab8XdV7x9
mWdWWS2y5RqrpHYn8kpoWPtl1fv6WaGNC4x0jdt1b17eb/M9TxiyeX7BKqnd
NTUvdiGYudn74jxaGxcYSWSv6Fadhxf2eyFLBUuIvWhmvqZ5sYtrHmzymM7A
y4wkOFZ0q87MC/ttdoHORr2XJkdd0HxqVvqOr8Jj4v2rTtR3Eb+bxGc2O67J
GM2OS/nlVRhPzKq5a82ul7WaOo/WxkqrIs+faK+pZ826mjF0PqT0tmJR3cVi
X4Jtmqx4QaspDhEs1OyCZvaK+QtNatbVjKGz9Fq+NRlP56fedZP3BDs1eUxn
oOCfa9kr5i8YXrxfMEOqjy78TtE7EucR+al3LVi3yU5NHtMZKBj1WvaK+WuW
WGWgZolUf13IN61PkVGpjE3tTmTdhfc3WUUzgNipzl4xf+3TFeOleFXkts4Q
0SOrzhX5r/276mWt1WsaE3Nu8mFzR/ruwjup/aa8luovPR/9ObpztTaEf5tc
kWKGZj/qu6+yWmSv8LjuqZR3BDOITNO9oOcv9JniLuH9VBatuEL4XffjSgM6
q/UuLnBX6pzXfJp6VvTCtfnrztXeF/NpcoXwu8i9ZtatslrvQnOI9rvIpZRP
U8+KXtDvXzGDyL2VzptcIfzezGGhq1VW611oDrnGMzrHUncUvfZkniltNzWZ
yr1X0UCTSbT3mz0lcuZa9qZ2lOKuJs80fSq4/Yl/U92x0rPIsZT3L2hgxV2a
PXQ2ipy5kCdiR6lzNnnm8qzEGS7MX+ikyUKvooEVd2luT2lDM6E+j/4tkOKQ
1O7E964ySvBYitV1TgrW0l2/0vNqL02uE+8RPSu6QGsppfMmf+rvXWWUyLFr
bNlkLcGlun9XXXaN68R7BOOJLtBa0t0k+LM5q6YXBI9dY8sma6W82exfzeRN
VmnqecV4WjPNXV/Q54VZNb0gOugaW+q+SM2kyataAyLTNNetNK+zRedSShsr
fYrfGqLjmnvXWtJs2eRG8XfBq1oDItOu6VnssZkbOrtS+9X61B2hezOlbZHP
K7ZscqN4rbNIaEBk2jU9i54S2dLM5AtZpPvxWm/qe70iWwqPixmKbBcz0T4V
d1/NvMmfmgeajKp9lJqP4FLR9YL3LrOl8Hhqj5czUOhNs0pTz4JhUndfZbLw
oPCR6LgUl4oz6O4Qe9E5LHSruU5noNBbM1u0nlde0Gyz6rWmj1LzucBsTbbU
jKf9qzNQc53OwNTcUncRfCU+R3tB5Kre+wWuELO9wGxCeyIbmxpYZaD43gvZ
tcpzzS1Cb/r8zY7W7K25ovlsk9l0L4tMazJGMwNXe9fZtcpzwSd65vr8zY7W
faq5ovms5lUxtwuMJ+7SzMDm54sMbOZkaoYrv6/O3+xo3acr/4pnm8yW2rX4
zCYb698Lmn/E+Zs51uziC88Kz17gar1ffd+mpzS/PTmD6IsmA4icX7G02Lvo
ep2TwnfXOrTJIaKjxX5XPnoVbm/2tdZPUwNNrtM+avZjs+OE7651qDiD5mp9
R33fJnPqrtE5I/I/xQArptI5cIGRmh0htLp6Vmj7Alc3/Svuq7Or2TU6Z5r9
uJqnzh/hI81IzY7QOmk+q/N5xdX6jvq+gl2b3N7s6xSzie8SuxP5s9K87gud
gZqRxLM6n5/kWErzzUxO3Vez6yrbRV83d7Gap8jzC5pfaVv3vti70MaqUwRj
pHwtfKGzSHuzmWlNZhPnFLsTOtf8c03bumsuzLnp2QuMkWKnJrfoLGoygLi7
ZraP9VHTdyLPm57VvhNssPJ46nubnr3AGE1fp2Yuzpzyjn5PkzFSGat1nmID
Matm7wtt60y+phnt2Qvdp30tZt5k3ZVOnty9+XvkAgOkePKCZ4UfUz14zeOp
Oa96f9V92terz1z1ps7blEeaGatZXTNY07PCj0+0LXJb5MaqQ3VWiO67wNKa
YURHNz0uukCf54JuV3mlu1h3mc5tkRurDtWdIrrvAktr3hM6F3mlfaqZU+tW
55I+j9B206eCeVK5kXo2pTfNpU1G1dyo+yI1nwv6TOWDZr/UXl4lr5rabvo0
1ZsiN1LPprJC+7TJqM1sEX3x/6TPVD6I84i9iN8Uzc5a9WyTwTSjapZIZYX2
qe4grf/L972sT51vmr1TeZXq6xVL6J7VnhJeazKeOIPo8WYHaf1rHhO/NS7o
U+ebZoZUXjX7VOeb7hfhqZQftU9Fh+pnU3zSzMPmHDTHXtPnNZ+KOT/ZqZ7h
BW3r3LvQTYIHUufUfnwy/6ZPm7vQ9xU6bM686dPmObV+mhpYsVmzI1KdK+Z2
wVOCYZo+FXm7um9KA0KfTdbVHtR9rfX8imymmTbVTSmfivevcmzVlUKfWs+p
uT3Rg9BbSidC/1rPq9k2ZyLYTHCp6KZmf608Jbq1mScrPhH3vdA1T86Wynad
D4LJdZY2GUPoXHCp3mnKC6nXKU+tmCflU62B5n0vdI3Yi9Cq7lMxQ505Om+v
cekTXaWeFZ0oeElo+0LON+cg7qvPprNCs4rgZ6E37WvNGBf8KDIn5U0xT8He
wqcrbrwwB3Ff/X6dFcLvTQ3rGV7OsWt+FJkjfC08kupBzQBNbrwwh1QnNt+v
uUL4XfhOzHnla+2RlR9FZjYz+cn7UzsSPk1pUnSBnkOqE5tnSz2b4tIUP2iO
FedZZa/WsO76J7NtdlDqzKnPTO266anUZzbnpn3XnMOTXtBea95F88+qg1Ia
bjLP6pyprml+pj6P5kaRsXpW4l7iPCJLtdcu9MIqKzRvaz5p8meTeVK+SH2m
Pk9qR6m7r+amfdecQ5OBL99F8+rKj6nfJhc4pNmtqXnqz3yVHWl96rk1dZI6
T2ovTSZv3kXzqmD41LO6s3TfrVg0pR9xr2s7WnGImJXWSeo8qb00mbx5l5Q3
RfZqL2uW0H3X5AShH8HDK1bUvl7NrakT0WWpXWivNe9yOXt13mqWSO3iAvM0
2Ul7qrmj1NlWc2vq5FrernhM30VziM433emps4m+a+5dcGyzv/Tcmmy54r2m
Ni7k7YrHLvw+WmVvau9a56nvav4OWr1ecUuTh1P90vwd0WSklM513q54TGhV
51uTqYR3UvO8wBUX+K3Zs6uOSHlN70t3tz5bM29XPPYqnCw0LzpR5/BKP5p5
VpzZ1JXOLu33ZlbrmWv/aq5O7f0aJ4u5rRj1VXJJ53ZzzkKHTS8LLmoyVTPH
Vt234uqmbpucrDmhyajNfryw3ya/aR7QmkzN8BpTvUoOXO5ZkVGCXZvnFzPX
WffknK+y3ya/ad57Mv8mWzY/U7NuMwf03wV3Xfh8sTudsU1GfZLV/wEBdJln

       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1k1Kw0AUAOCgULyDq+66K+g+xY0HaA9go+iqINSFdFdwL/QUvYK38ERC
W3DhppAwP52ab5HwJQyZN5P3XjJ8fJ2+XFRV9Xa1P02b97vlslnNBoeL52Zx
e7O43HP9exz88/1VP9Sf9XxwP/nr7cd88jTe1NfD0VF3HR/iY3OF3G8Tf5vx
Xcek2NtYscXan1h51fWZOefKmZ8hMaSo2RT5GfKOUswV0jdi9ZxY68pZv6n7
/7k7Z5/vs/u2P7H6Ver/NM6TA6l7qZ6f/7tQQpz8P6xmubRcKmEtzH2zmuVT
5VIJMTNz+/otIU4u3/KHmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmbk/3gGwruvw
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "1"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzVm7HKbllWRQsVsQMxNxDEzERoU6svIr5AGwuWoFGD2AaikZlU2M/QmQ8g
mBgaiQ/hUxiJ1WDwBy4YgzH3vWVwi69+znfOPmuvNdecc6/vt//8r378l7/0
1Vdf/c2vffefH3/zt3/4059+83d/8qu/+J+/+OYnv//Dn/zydx//4X///eLz
n37795/+84/+5euf/d4PP/3zD37zR3/9rz/49Mc/+50fXX+/Ptv7fPz79Zk8
y15P3mX1rNVzX6+nrHOVA6vc+FJ7+n1491XcXly/ykPyji/i9iKeq3uucu/j
5+9aw6f/61+5xsaH3J9cX+5T4vP6nv9fvvs6N+w6X8fhc777dR8bN1svq1or
a7D4/PqeXyqXSs5fn//9t779+h//+z/+4Oc//7evy2e71x/jbO/58Zr/+rPf
/fRPv/L1p29/49c/ffxM7lPi86Xu+X377nWfVW6UOL/e09fvfq3z4zUkbtd9
rnoh15daI2soXJfErfDngoc2l17n/6rXk1qwvfVLxdb2oNf3/L59l/AN2yMu
Dla4zYs9te+1qgtSI9YrIDG3vdjmksVewuctryA8vGDXilO94DxX/yW9nnAA
q7M+3vNFndqaLTroS93nxXdX+3LlhuWBK82y0rn2M6kLUrNXDO0arNZY9buC
vcXPJ9y+YJfNpdJHVrlX7rPSU7YWSmyvz0UHlXuW+7z+rsUNshckt60WWGnb
F/VIuOtHDLE83GoKwpnJOldYYbVM6QXku1eftbrmiucVQ9JHLP+xZ8EFQ2xP
v2J+1QJZg81Pwntfe56F077+bsGNK4ZXHEievNC2VueWXnDh3rWeK+aWr1rd
UXz10lOu+rX3XM3bkJiUmF/va/tO0XErTU16UNH4xCuwOfDifMF6nt83/9/y
q2svrj5e9K/lcoXz2B5ke6jNeXJNwR/Lu6xmv64h72J7kOWlhLd8vJ706+L1
XXEu+bY607G1c8WN9CayZqLXLu5ked3K8yR7+qXOIFacjdSy7e+Ww7y4ntQv
6SOWx9r+W3iR3cfSOyzmEE1qMa14XHbvCC+yuWd5C+Fd9hzw2heiu0mNEPwk
XLTEwe5R4bRW/9rvEv5jcdvOBpT6st8tny3mlDMvUsulpkj+F85ZtAnx32xf
s3pkpS/K+YLl82R/r2usB0X+bvHW8hmLjWRPy6yL7VOkx636ka0pi9skbvZ9
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
fA7ZC/IuRccVD5zkBuHeloesPhN/xnIPO4v+YgbjWj/RBQW3rV4gOGZ7E/nu
ilvaHLN8zNa+9VLs78Vs/7Ka1/ot5LmWyxXOX9699COL2+V3giSGxXP7nJj/
Og7XswhGlRmMwm8tblu9YPHKzsCs/EnyXrb/Ft5ouSjRDnZO2Paya/3l956k
t5a9WMWZvHupX+sF2T5iz2s+vov9jdVrLWDjXOJgZwmKRrb4ZrHOzqpZL5Fw
IYInxSOyvdhqtMKFLCYTfkLexfZTgofkPhYHLCdfcX7Cq8uZ1EqrWr+iaGrS
01fnICv+/yIOBRtJrIruJj3Rzt2Rvmlx2O4d4X5X77Dn/kSjkbyy3j7Jh6t3
2ziX2blVbZa8JTEvZ82Fh5SaXeGkPRewv1+wmteeSa34/4s4WJyx9W41+Kon
Eh5FeqKtHbJ3JM6llq/725whXJFwBsKxC3+wvHdVmzaHradk393Gh6zZvu+q
xu3vESyft/5See5rjlHWU2Zd7B4RfW1xldSCnVkqvYO8O6mRovFLzrzIpeKz
2X5ttcOKi5I6sr1+9S7Wx7PvSzSpPZe03rWdY7EcktTOintcOEA0O1lP+e1A
8TBXfd/mrT1vIhhYuHfRLBYrrM9jPR+iE19oyaLRCuaTHLDeVzlTsBhCeqs9
kyW8xebDyh8o80sWJ1e+EFnPahbO+v8ktlc+WHywM0XW47Jaj+zvyiO1GEL2
vejlF7NwlidY36zUoL1/OT994V8RzCden8Vw2ytJvln9WDwNgmNWU9t+XTDc
8kaC1cXzsTlgfZVSy1a7WY/iehfSv6yms+9i5zqufbQYa3sx4cmrXlzOoMk1
FvNLbAluWG/HrpPs14qXWg+T8GpS48WHsfhm+5f1c6412B5BarloOqsxbV6V
OBOOWnCG3JPgp61rgtuF85czX8LPCb+y6ym8rpzdFN5Fnlu8HatxCi8leLXS
sGRWltQsyQfrIVvvgqzT6kSrfVZnvlYHld5tzzII/pRYlX5azsts/yJ8z+qL
Fcd7jcn2veyeWj+z6GV7T4v59hryd6tNyr4XTUEwoXhrZH+tTiQ9t/Dhsl8k
hpbj2foicSb1a3W6XT/pg6RvEi5hPYHrs51zLtys9FnyXiudWHiLfVbx2F/o
KcIxrB4h+265jcUHwlWszrX5udKhdp0WE1ZcZVW/133IeZx9dxtD2/sI3pJe
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
jqIvLP+0XG6l7+w7rjTyyt+w/b3wq+t60uNKrEgfLF6KjX95luWZRR+RGrc+
YeGx9r3sHpF8K5rR9rLr75b72Zq1usbeh9yz8FJ73mH1XflczrZIHRV9bXu9
nc2zvo3lb0WDlzVYrLC+TeH8ZK9t77b+j+XJdtaxcBvCn63XYXkOwa5S+1Yj
rHwVkj+275Aat14B0XdWC5A9Jf3Uck7S38k8EsGE4l+RvVjllZ0zJGuwayOx
JbNYlmuVPmX3izy3nKcQXCX7Zc+YLM8nPKfkVelNL/bd8meLJ9b3sJhg/dLC
8wtnJprL5m3huranE466yk/SgywmEC5H7m/z1nL+Fb+yuW3n2Qhmlnov8bQa
s3gCViMQXkdiW/adrN/qI8tzCiaQd7d9jWgNi1dEmxAv5QXXtbyaxG2luaxG
tvtVzuULzpBeY3FvVfvXc22fLb6HnRMme7rCefKOpB5tvll8KDzW9nqCsasz
9HJ2TO5TZiMJftpeU3Lm6umEq5R5g5KrJM6EKxIcs/rU+tWEo9rZP8K1bO2T
a2zOkzgUXW/7uMUZm6t2Lrr4RaWHrniU/byaB7PvTuJw4aHN8ysfig9mPSW7
dwVniJdVen3hNsWvs743yU+7F9aPIri90uAkH8h3yzU2/1eadKXBrb4uPdR6
v5ZTWU1k58EI77Vxs97ylefFvy34YD1Gi88WP61GKDVoz+LtXhSvo3i/1nsn
OWM15osctt+1+tfyH7un1luwOWlnBkh/JDmzOgsomojwt9exKrzUcgzy3Ctn
Vl6WxRmSY7bXrHh+mS8t7269C7I2sr8k54tf97p2XvQCgmPFfy6xXWlhqy9s
HtqZPTtvQ7D9hS57MQ9AenrRdGRfiHYmnj/pI1f+rzhG4a7k7wUnLR5e19uY
l/wnuXq9y6p3kL+/4P92Ro6sk1xffBsSH9uvSR7a+1sv67UWs7Ei+V84DOm/
Fk9Kvyg81tb4as7BYnLJVVuDxee3/HDFhSyWlt6x6t3FayJc9LVnRXCYPJdg
BZnDIdy4rNP6IatZINv7Vs+64kn2y/Jt2y8Kj7Xrt3MX9lysvK/VI7a3Fh5l
86FwfstbCvaW3m2xl/Spcm5i10M81dJ37JlUmbcpvzsovlapFzuDap9F9ojw
nzK/Wji21SmEv1mOd/VKu35SX7amSj6X2ZIyU1p08VUvBa8KPtjrST4UDU7W
QzC2cE6r5QtXWXk7lq/a+BD+RmL1Yi7dYqPtHYR7F0+77Nd1f8KL7DkRwXNb
U+R3Q9d7ERwgmF/OrYiOu9Zcet/Vxwk+2Ottj7N4UjhPmZOxtbbiKnaPrGYs
M+pX3pL9svdZae3S1yyGEy1jOUyZZyh9udRy+b0hmZ+3fLX8xofExOpikhsE
Zyxekdy2OWbznPRBy6vt3tln2bhZrlK8PqIZy4w64efXXlvNcj2X1FfJbVKD
hJ9bzWuxmuS59dksX7V9nPgbpX5X2pnkG8FnwmPL3OCL/lX2YuVhkjNQy1HJ
XpQ5EPtbM1Jr9neRpGZJTCwfI9zPegWlvxMcLrqJ3LN4cdd6bN8petnWS/kd
1vWskqvF01udj7/gz9e/0r/Ie9k+aPGn4OG1BsszLcewPMp6ROWsh3AMOx9i
+37RU7ZGSgzLWZvleyvdWs5VSe8jHoX1gsj72r1Y/VbUxpzwf4t1pH7J+Qjp
X6uZE8uRCmZajl3mGMnZHME9kieFf9q6K3lIOKf9bukRxYsrPcWujXAYuwZ7
zkJqk9R+iSGpNbIe6/8UXWwxrayHXE/646oP2vUUjCXapOgF0u/I3hGtZ/Xj
yp8nGs3quMJVyr6TdVqe8Lpvkp64Os+94mD90uKJlVgVfVFmMq33bvPkWr/t
L9d9rv5Yfu9gccPmxoWxRONY7UB0JdGPthasH072hdQ14SHkM8nDVY8gNbia
+7KYY2vEapDiRaz4gz3rWfEQkgPWsyIYTmrc6rgX2tNiI/Fn7F5YLWP91RJn
goek15A4EM1F+m/xoKy+I7h9/Sv+HukRhBsXvkR6DdEptgcRnlb2pfgJNq9K
D7JxtnrH1g7ZU9L37Tpfa0/radjrLecnWEHib3Ov+F32M3mWPZexGGLPPsh9
CG6UvmZzpsx1XH3Z5liJSfl76e/kXQgfu2qTnIWROBPsJRhr9TKp2cLTVl43
8UzsfIKt5aL1CE+2uV08n/LZ8pCix0ltXnEm+2uvIb6Knc2wGsSeI1gfr+Bn
mfcjWGR1E+lfVue+qJHCQyw3LmeyhSeTmJP+W/DT+htF69k8sTqL+FrXP4v5
13eLJrX3tJ689T2sr072pWgii4fF51/NZtieYjU1wTGrUwqer2rE8hASQ5LD
V8zt/lpPvnBUgo1Wf5UaIXlr10bibPPc9ia7X9aXsLzF+jyWY5P6tXzAcr+S
A7bfFS1A+rL1w62fYPvvip+UfLZc1J5Xkj6y2qPCVQpHtTVCctvWCIn/FStb
L2U+x/Y4yzFWOuLaC6v1bE6SfSH8quD5ix5R+prtZeTcn9S7XX/R48WPImsj
f7d9x87+2Zkoi8n2fJPgmOW35L0KB7Y83+rxq14KZyB4Zb2v4pWRe5YzSouT
RfsXr+D1Z8srrti+judK75T3IvhMcM/O0VkN8jnzlvgGq/N6uwaiPa12s3Nr
RGfZ75KcJxi44uGlL1jMt/3d9sH/AUv8UI0=
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2D1KA1EQAOBFQQQvYGFja6n9LpIbRCxshPWvCgixELtcIeewt9cbeAOP
YgIWaYQsebPOmq9I+LJs9u2bNzP7kuObx/HDTlVVT/uLt3H7fD6dti8Xe8sP
9+3k7HSyu+Ds57X06+FtM/p4qw/mV8376K45uv6qL08+61X/ds7q8a7ndP1u
13G7utRcSo3VNQ7rHI++t4g1jbifUvGJWIs+c6xUnDeJW0SsInpIqbwtFbeI
nlyqx0bHpNRYEXGIHjciD/vsk9F9L3p/En3NiJzPUNfZ8jPb/jZbPfY5xwzx
3GQvEV0vf1WD2Z4vQ5nLf62XbDGMrrVsz8Gh94EMMdzmesnmzL93Mnjb5juU
OA99XaL/12LW93jolofMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzM
zMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzM
zMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzM
zMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzM
zMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzM
zMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzM
zMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzM
zMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzM
zMzMzMzMzMzMzMzMzMzMzMzMzMzr+xuEg7wC
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "1"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzNm7+q9VlWRQsF6RcwMmowMvMPgtDU1z6B0IZiUKIdNQhtg2iigS8g+B6+
gLFGiu9g3pmBgWA1KNxkwRiMuW8ZfMWpyzn77N/aa80151z7fP9P/vxHP/6l
r7766i++9+1/fvTNX/7+T3/6zV/94a/84n/+7Juf/PZv/eSXv335t//77xev
//rff+3LH/3mr379X//9N18+vv757/7OD374r19/+Y1/+eHX9u/Xa/tdZP3V
OmVNu8+y5xfPQtZ58frF89o4rNZ5kRvlu1ax/a6+68X5Fkx4kWMvYvuijr5t
E1/+79/1d/KeEtvru+z65VlIPMveShxevOfF63Jeq8++3kPJjRcYsorP6++y
cX6xzmtcehHbF3V3vf7Pn//TD/7gH/7469/7x+99Ia9XuPFxzR//3Z9++dk/
//qXf/uPv/+6fJfd/3W+H8/oM+Pw4vVr/F8972fmzOvc+PieFYaQ95P4WD5p
v+t6Tc6IrPk6t0kMrz2sYvuZNWj5zAqfSXxszpDY2rr4zDgUTvVin6/zjbxn
lTNkDyU3CIZbDLn6zrXnFRbZ77KYtuIqq9wmZ0HiSfr7d+XTXjEnPc72QfK9
JM8t17W1YM/6RRyuNQmnIp/9rnTBSrOUnLF5aHODrEnwgaxv/26xyO7B4ljh
ADavSn6u/LqSD695V5lTEN5lOXnhw2Q/ljOv+GfhFZZn2vVfe1n2HMmzlHMh
GEj29rG3Xu8nOoJwjOu7rr9bLXP9nfANW9cv/EyLJ2Qdy+fJ2Vld+YJ3re4e
2Fq7csZy149/J/u037vSLBbHSh1Z3f1irlF0zcp7txj+mvcSfLhiSDyWFZew
fs5Vg+QZCQew/bfUtcUTwjdIX74++0ILFIwqvNRissVJe162piwmE/yxvJfs
2dYvybei0wtnsByJeH2W/6x4b6kpEivyvaX3kfhY76vMiwuelB5KegTpKaQe
ixawfc1ikcVA+/eCmS/6C8Hbgief6ctZrWT1uI3nx3MkvabkFTkvokHIOit8
Jpyq4JutBTunJn3TxuqK/yoPS72QuFlNQWJifWZSOwUDrxwgetNiJvExbH+x
+GM9xlKbFvMLF7VxsxqWnO+1fskrkj9XbpN9Fv65miOTPkLeY/dDPJmSq1dN
ESx6UYOreUrpKXb/V+1Yj4vouBWW2ty2GmE1D7J9ufQg6wmUWrBa2OYh2SfJ
MVuDBbdJ37GYT9a3XLfMVa0OIvOd1d0k63uU/kjy8EU+FH5bsLrwTNKLX/jP
ViPY/ds8JOu/mOcWDUL6ZsmNcifB6sEXXHRVI2RWTmrkek/hG3a+WbhKqVkb
Z/K8n/nsBPNX/NZiEYmz7TVWP1quUvZJ/k4wquDbdS6Wt6y0ldXC196stir9
y3ID6+GQurNxIDlgew3plYU7Ebyyesfy/yv/7Xy5eBTFiyv8x37W9iPC2+06
loMV/mNr5NJuNk8IJtt8INhovaCVH2W5erlr9/o+UrlveZ01efYrB0o+rHR9
4Z/Wg1pxqmtvV41bj8I+O8mxwn8I97bna2uQ5EnJgRVWWO/U5ol9TTyKlQ9j
7+Fbnmb9KxIT0r8sPpB8WGleiwMEr4oHYvWd1QiW85B8IBhlOVK5a2q9GrKO
xV7CN0gcSj8leLLS0QUrbI7Z/Cc5Q3KAzNQsp7X8wa5j9bXVuSS3Sd0RnWV7
rtUItl9b3LA6otTgqp9a3F7VBXldcrtwA4KThEuQcyd63OaAfT/JSYsV1gMp
OGnjWXwGG8/idZNaIx6ancFZTLCYQ7DLap/Cby0WWRwrfJv0WdtPiZ6yHhqJ
Z8EWktv2vEpvWnkLL+5KXe8pOo7kG8EQe7eW4JXNz6K5Cu8lcbDnYn3FMgsg
PdfeKS0zheKxFHxe4YbtrXYWb2eU1rsrtUOwxeaS7a0ES22eEM1C9ILlzORe
QfE3yFmQ9a1Gs7Ngey4rvmrx03pTlr+Vu0ZFRxM+Y++Y2dek3i2mveYJds92
vlZ8P8shbU8kHnLp40QflXop2pzoguK7ltq3HvvquWx/IVxixWFILhXMLz3a
5qflM6R+yx0DgjOWv9k4XOuU+rLcnvTcwtlKPpM8L/y89ETLQ6yWJL3b1uaF
hyteTfKZ9Cy7n/JcJFblXoHtm3afq9dWz5L3k9lZuQNZ9lZ0tNVitmfZ+Fs9
YntZOTvrC1muaDmVXZP0Pjt3I/4J2YOdo1l9RHh1iRvplWUWRnhjiVXx7kj+
lDm1xfziOxV8IH2/PLvNvRX3sz3renbLmS33K/eFSE8pdzYI/hRuTHij1Qtk
fes1lb5pdTHJGYJ7FnNszK3XZLFu1QtI7hHMIbzCxs3ySYvJK55pcamcka2X
MscseGj5YYmJ1TiEd9lYFfz8GE87Vyr30Io/YHnIhZ+l7oovUXzgou9sDFd3
QsgerF4jXkThBvZ8CVe0+prktvVGXtcL4eF2PyuOVPhM4RUEVy1PILqYxJnM
fMt8sNyrJHrhhQ9A8LPM12zvJjVl8/yK4epOSOkXRR+R71qd7yr+lr/ZexSE
e5R6KXlrZ8GWI9k+Uu4qrPTgKv8tT1idO9mD7ft2hm5z2879LTdYaepyFqV+
i3awXKXkOelrRFMQLLK4TfTFFZPi9V3rFN+s+CSkxgknKbzuBZe2Mx2LAyT/
LU8omG91vb1LaWfo1kMjM47CAUhNld5RcHKVPwU/rcYs/kBZ03rdVl+80DI2
PiudXjDK7p/gmMUEy6UtJ7TnaOvC3imymP/iuQjPJ/zz6q3X3y1/Izi20lak
vlY4b/On4Kflb5ZvlJgQvk32Sfoj4UK2z9r4kDOyeGhzzPJtkkvEf/6u+hQ5
R5tv1pMsGm31XGQuT3wYywGIv21rZNVnrcZZ3cOxM0SLn1ctl/tv5ExXPcvW
oO019i4Zqc0rPjbOxDcjObnyNMpnrcZZ9anSX8qcZcUbV89le43dp63f4qNe
WGf7LPGgyNmtzmV1J63wZPJ+i4G2Z9n5rO3L1tNY5WHhLQWHrX5ZvbYaZ9Wn
7G9qyLyg4F7hjfbuDcGWokcs5yQ5b3PYzphI7dtcIlrG1j45l/KMFhtJPlu9
dn1XufNM+rL1NMizkzws/kDBwNIHy2uCCRbrihYrsSV4deVw4Y0Wt23tF2+B
9IvVPYrCk8nzlh6x8vquPZC4re452Hxe1dS1n5LzBUOI7it3oe280r4unslq
D1aH2tmBPa+yf1KDJN/sfSrrdV/PXuYLRTsT/Ln2X3jyVaeW35a8sn3f8m2b
bxZnyu9HSu+z+XnlzPUslm8Un+SF/2l5vj3rMrspPIp8r62LMg8qOGw9FtvL
yuyy4NX1nuJnWo+X5LOND/lem1eE017PZfl2uVdv9aa9l0J6n+U2hXdZz7ng
2LXP4n/aHFs9y4o/XzG3/pvtNeV8CQ4XX5r0MssDLfe2Z1Hyqswibe0UfCg4
b5+3/I5pNUcgz1J8FeJ7EJ5MZgQWr8jvv1b8p2jbckfFPoutBXKOln8SnF95
nhbbSV2s5j4lny0+k/iTGFrtsHqW4gNbvlowluSM5YQk/iX3rC9E8NzyKMKR
Cg8hXMKuSbRA0UoWJ1e1QHqcXdPeSSO1SeqIYDvJw8J/CuaTerHYvvKcCZ+0
tW/z0/rA5EzJ/NSe9cf3vPafbV3Yc7dYZH+fVfQ7OS/Ss2xNkV5gscLO+KwG
sXVa9NpK85bf6Fm+VzhPwfzCVUj/sjOO1eyM1H65E2vvJtm+v/Jn7DrlrtSV
V6QWSGwLVhPOTPT7Si/YWSTBNHKOVssXDWIxtui1lea1tWOx3eqL4l2v+D/R
ZYTTWs6w4pmFE644s+2ntl8XnCx+cvEHbB+3Pi3p9as+S3rQFR+S2wQ3LHYR
3UHyxP62gvTBFfez51hmMZbbFI/9Nf8nvX51f4Doa5L/5D2EE64wn7xnNTsm
sSX1RXouyZlVTyG+btGbllNZvUA4ifWlST0W7FppcJKrxAeweGh7H8G6wkut
XiN4SHp34f9W49tYWS+XcDnr55SZqfUwbb8jOFBmnWUdy/9tT7F+xbU+6bnk
e0msCv9ceTUFu0r8yXOVe0dkz2VN0k/JOoRjWz5W8M3yfxIT22cJ37D9/dLO
pQ9euoDUqfUwiXYm87trz3amQNaxZ23rq/ictgYthyT1Yp+lPDvZg8WulV9U
7rbZ/mjvMtmzLjhvcYPck7Gxspx/hfmFb5AYljskq3ywuFd0NOEkRNfYeBbu
R+K5+v1C4QArrCj9l7zf6vGSt5a/EV1JtD/BTMLTbHwKVyxarOCA9Qeu/Rcf
w/KT8nqlN0s+WKwo+UBiWDz20q+vOFh+Un6/YH2qFzVun6Xo4qLFCu5d65Sa
Lb6Kvf+zqovC01Z3k8hzXetbX71wA6uLrW9gOf8KE+wZkb5M8I3gTKl3UteE
463if3G8ggmrs36hMUlvLbrbYuCVD9a/JbVg+0XxN1b8n8SK4LDNN9tziRdh
73WT9a/6tf6SnUva15+JCSQfSs0WvWk1RdGh1h8mfcdy7HK+K41p+ZLlHkXX
rDQ+mWFdmFl4BdnbC86/8jesBizxsX3zOqNy55b0KdJrrF/xXWHCC1/X6our
RkiOWR1K4k9qn/AryytWtWPnMsTTJs+74jYE223PKtzV9n2rAYsWKLlHOJX1
W4jOsr9ltp6/5Q/k/Veel9/zvvAxLL6tfF2rNy2vKN4dycPiQxb9a/Uj2Sfx
N0gcLP8pmpRwzut5r55ltT/ZM5lBWC35gv9bPF99V9mb1cvks+SMiL4gHNLe
sbH6q2DCas5ia3aVJ9a7u3DArl94o8U0wnuvPdt8Xnk4pL8QbmP91RWOFb1A
7gURPlyexZ5X0R0WD+17rH4hn7Uesu3R1i8iMS9eR/k9mtVKhMOTdUi9lHuM
hG+Ts7Z+lO0dBXPsZwkeWqy2+GDraHXHgOzf1pHlxlctl2d5fbfEehdlRmbx
nOCA1WgEG4vXarkfqevyezTrhZKYWF1j+07RpDYOhL9ZnWVxxvob1mtaaXly
7/TqlSQHyvzR6qmrjsg94cJvybOU91jMJ/u3HMDy+dUdHoK3ZH3rta7mVpZj
l9kT6ePFGyc1SDSL7XcWZ8j6hCOt9HXR9SVP7GeLPiXcjMwfV5qrxMR64Nez
rPi2rXfL94qPanXrCw/H9o7yj/C6wmes12Fz3s4Rrp5rz47gw4r/E5wndU18
Fds7yutyP8HOnUk/tb3ePuNq3k1iUmrB6pHSo0m9F15HtFvBYevhEJ5geWnh
NkVrF9wjnIpgEdHjK0/b5qfl3vYsrjq69mb5zAtdb71Q+5roqddnYfuO7SkE
A20tkN531abt44R7lHq0mFy8gtccsvjthCdbXUniYHs6wVKrGS0fs5qCnEvp
j+RMrbYqnmTR9YU32viv/MCyf3IuxaOzey69zH6vXX/F222Ps3hYvLuiv2y/
Kz62nZWT95RZxvW8dg5l+/Jn9neyfztzIb3V1uz1XeVZ7H0wUsvFAyn7L7X5
QmeVXvb/YX2LpSvtTHKm+HjWdyp60GrewsFsf7y4t43zamb0mf298OqVx0Xq
lOT/avZHntHeJbDeiMXh4j2SHHjRC17Pelb3EAg2XuduNRrBTOu9rPCTPGPp
mxY/rbYi86zSI6yPZPe86u8kf65zsTzK3mmxGo3E32Ip6UF29m3xgeDwqneX
+10Fk0uffb0+yUl7r9jq9OLFrfBzxTFW9wFWXoHtiQVjraYjnMH2d+IPkH5U
asdqpRL/67MEJ4vGt3qt9COL1Vd/sTzT7p+cNemz5LzK+pavFuyyHLhoQIuf
ZIZYvKCiT4tXYDVLwZlrb/Ze98qjthh75RXBOss/r/iUsyh+C8k9Egcy3yf9
tNx1sXMBGxOCXZavln3a9e29C4LzK35r8836wIVjEz1r685iF8EKy/9LLyj3
Xmx87P6JX2T7vuVXVmusMN9yaYvtJbdf+N5Ws1sstXVt74FYn4R8r/WFCNcq
esHmMJk7WO+0cGx7P4fUGsEHEs/SB4uWsdrTzpLs/l/M0Ugvs7VZYl64E8Ef
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
NLvtoUXnWm1udf2L3+OQ2rc83+7hhU60PPwFZyb5ZjnAyqu/3k+w2uJnqUFS
O+V+SNF3hLva+JDzKr4Qeb/Vv4UL2Ryzd7esbrXvt3G2PtsLf9Vi2uo18alW
OpH0O/K8q9n36i5o4TArz8HOE+1zrXDAapaSV9a7eM3VC3YV/k/qlzxXub9a
dCt5/7VP8uwWt4l+fIFpK8y/cLv49uSMSL8ovhD5VzCh1LXt73bmXvgV6SkF
B644rPosORebJyuubl+X+4RWl1nOTz574WG5H2hrwT474aKkT9n+UubFK85v
c8+eaekpVkOV+7elXxRPw+oR68lYTCPYQnDAfpfF8+Kx2zvelquXPCG/BbBe
n/0tieVspUYI9y6abqXxy1zb/t32KXuOl+4jnqrlWuW3Equ6I2vaeyaWoxaf
xOak/f0RiUPhFQRP7PNaj/01X7K6gNSgxRbLN0g+F+5k17RzSYJpFqvJOrZG
iG61nNn2Anvvi+R5wVuC56XuCJ+3fbbgIeHApOcWrVR4Pslhcr4k/tfzFo3w
gi8VLmd5ftGbxMezsSW5Tda0vMviHsHqws1WPv+1Z8LlyFmQe18W6wreWs5j
627FS62vcq1jsbFoBMKxreYiOVPuJlmdaHnO6j0kH2zeEtwj+UYwyuoLm9vW
27F3OV6sY7kZwW3Lu4j3WDi2zbfr72SfFpcIBtoaKby09Fyr11YawX6XfY/N
JcvxSA4XzlNeX7VMdLH1cFZ4WHgRqZHiO101Zeu0rGO9GjvfJNhS7ssRvrHC
HBufghUFr+yc2mqKlV4rcxbLH1YzfZsn9v2EM9t7fStuYPGz+DYFD62XZfmY
7QX2d1LWJyF6ucyAiNYjOnqlJS3XuvZp88HiXjlHi+e2j1u9Q3xp+7sbkm/W
Jyy1b2Nl88TijH3PqvfZuS3Jk1UuWT1INIs9O9K/CkeyaxZvx3r7qzuQVkta
rmW5B9HUZM/2HlfRpHb+vvJkXs/sbE7aGin3sUncbMxXvbL0vuuzFk/sa5JL
loevPGSrKUgMV/x8lT/EryjPbtdc+a6Ex9r6Ldx1pUkvXUBm0FZrEM5GYm75
IYmD7bkrzXvtwfJ2W0elp1iv3nLFco4EH2w+k7it9Ivtm+T95O7Qam+kduz6
Fs+v9a3vavmh7R0l96yOIM9CMKT4J1YX2PcQTk68zdIHi76wfN5yIXK+xa8u
XNFqq1Kn5T4A4SplDm7xyvaIK7ctz7TvKVrVYhHpR9eZlt9VFQ+E5J7Nn8JF
7ftJLhFdUP7ZvLJ5QvLf6oviFVt9anks2YPtiascJrG1dwPI+tbDLLy0+ELW
u7azAMuly28iCBYVPmZ1qPU9yOy4cKoyf7HnTs6UPAvh3qX/Wty2eyY664VX
TM6raAdSIy94qa1H62lYjlriaXOGYJ2N23W+hUdZPlbyk2AXmVe+yPOVFr72
UDgDmb+s+Cepnf8ByYq1LA==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2EHKreURBOAbJUGyhkwyyAYMOLyXbMFsIDeQZCIIOhAHolPXEbISXYEr
ikIGTgL/zzlv91PfVwPlXCj69NtdXVXn/+PfP//0nx+8efPmy49+/t+n77/6
yxdfvP/6r7/75R//eP/Znz/+7MOfP373v/9++fzbb37z7g/f//vtf37609u/
ffLm3e9//OHtu399++7Xn3+N+X+fX4J/Sf1Hvve1Pbyk/ms/v+Rdj8z5WXM4
0f8j83+EG8/63mfx/JHvfdYNvnZHJ2b7CP+fxZNH8IL+POstJzjw2u864RGn
9epZHNjyvtMzP4Gf9KYtPdm6wdOznezntCZv6c8J/TzN1a03ns4bk75/IqtM
+vJWn1tcelbN0/o/mSe1fk7/BnmW/gj+ciIbTL5xq58TPU/mtBQ9Ebg0WfNZ
WXTSl4V+Jn8XCLllS8+FN27N/ETPW7lI1hOBS1s1td8FKXwW8Fu55bSeT/5N
YytvnOhH0FUNL+9OqCn8Lkjhs5ZhtJz/CE+2uDF5X5P6n5I9mvN3vWzrd0EK
nwX8aR2efJfwNw155poOJN6ItjuhpvC7IIXPWoZJyfkyNybvqzl//ka03Qk1
hd8FKXwW8Fu5RZ7DaR/ZmrmsA+ncaM53fhfIfNYyTHrOF+568r6a8+dvRNud
UFPAaz6V2Ftz/nPrCDOXdSCdG835Wfjm/Mdne6U5nKgjzFzWgXRubO1OqJmI
b86fzy3yHE7UEWYu60A6N5rzr42/ar5tzj9XR5i5rAPp3NjanVDzDvir5tvm
/HN1hJnLOpDOjeb84mXP2npLyhxS7qs5f5cbwu6EmsU/1+tTbk3TEEGftZnL
OpDIDWF3Qs3iszx08i0pc0i5r+b8XW4IuxNqFt+cL7xLyOTazGUdSOSGsDuh
ZvFZHjr5lpQ5pNxXc/4uN4TdCTWLb84X3tWcf07z5ewxyQ1hd0LN4rM8dPIt
KXNIua/m/F1uCLsTahbfnC+8qzn/nObL2WOSG8LuhJrFZ3no5FtS5qDp7el3
CXeRyI3m/OKb8x0NScn5r+25Od/hRnN+8cLtNOef0+fTevuSnpvzHW405xff
nO9oSHP+vB8J2WOSG835xQu305x/Tp+FnL+l/ynZozm/OV/GX+nWNA25as4X
NF/OHpNzEzxaqFl8lodOviVlDlsaK2iIoKsp3GjOL74539GQu+V82Y+0XQva
uMUZYZ53xgsetKU58hwm70vTEEFXU7gheLRQs/jmfOFdzfmOH2m7FrRxizPC
PO+MFzxoS3PkOUzel6Yhgq6mcEPwaKFm8c35wrua8x0/0nYtaOMWZ4R53hkv
eNCW5shzmLwvTUMEXU3hhuDRQs3im/OFdzXnO36k7VrQxi3OCPO8M17woC3N
kecweV+ahghalMINwaOFmsU35wvvas7f1fPm/HlOCjws3vegLc2R5zB5X5qG
PKvP5vx5TgpeVrzvQVuaI89h8r40DXlWn83585wUeFi870FbmiPPYfK+NA0R
vCaFG4JHCzWLb84X3iVoUaKGCLvQ8MK9yDWLz/LQLc2R5zB5X5qGJO6uOb85
PwUveNCW5shzmLwvTUOEXWh44V7kmsVneeiW5shzmLwvTUMSd9ec35yfghc8
aEtz5DlM3pemISm7EPoRPFqoWXyWh25pjjwHQbvunPNf+8bm/Ob8FLzgQVua
I89h8r40DdF28ZI3Nuc7PCze96AtzZHnMHlfmoYIu3vtG5vzm/NT8IIHbWmO
PIfJ+9I0RNuF7N2CRws1i8/y0C3NkecweV+ahgi7O32PzflZt3klvOBBW5oj
z2HyvjQN0XZx4h4FbdzahbDfO+MFD9rSHHkOk/elaYiwu9P32JyfdZtXwgse
tKU58hwm70vTEG0XgtcL9yLXLD7LQ7c0R57D5H1pGiLsTr5fzaOFmsU35wvv
as6f0XyZk5N+1JxffDqHT2uOPIfJ+9I0RNidfL+aRws1i2/OF97VnD+j+TIn
m/PN/d4ZL3P4tObIc5i8L01DhN3J96t5tFCz+OZ84V3N+TOaL3NyMhs05xef
yOHm/Pn72vLcrT7lezzNDSGTC/u9M17jcHP+/H1tee5Wn+n68yzN39qFsN87
4zUON+fP39eW5271Kd/j6ZkImVzY753xGoeb8+fva8tzt/pM1x/Zf1P2e2e8
xuHm/N27bs7371fbXXN+Fl7jcHP+/H1tee5Wn+n6o+1O42HxWRxuzp+/ry3P
3epTvsfE3TXnZ+E1Djfnz9/Xludu9ZmuP9ruNB4Wn8Xh5vz5+9ry3K0+5XtM
3F1zfhZe43Bz/vx9bXnuVp/p+qPtTuNh8Vkcbs6fv68tz93qU77H9N0Jbyk+
i8PN+ec8TvPcrT7T9Ufe3Vad4nM53Jw/7yNbnrvVp3yP6bsT3lJ8Foeb8895
nOa5W32m64+8O+EtxWdxuDl/3ke2PHerT/ke03cnvKX4LA4355/zOM1zt/pM
1x95d8Jbis/icHP+vI9see5Wn/I9pu9OeEvxWRxuzj/ncZrnbvWZrj/y7q7K
hyvhNQ4358/7yJbnbvUp32P67rZqarcs4zUON+ef8zjNc7f61PylOf/xmtot
y3iNw8358z6y5blbfcr3mL675nwfr3G4Of+cx2meu9Wn5i/N+bs174bXONyc
P+8jW5671ad8j+m7E2oKtyzjNQ4355/zOM1zNR0Q7rE5f2ae2u1r2TglU11p
DpM+suW5mg4I95i+O6GmcMsyXuNwc/45j9M8V9MB4R6b8515ylpxpXzbnD/v
I1uem6IDGl7enVCzvwvMGQq8lecw6SNbnivrgHy/8u6EmifwmlZcKd8258/7
yJbnyjog36+8O6Fmc745Q4G38hwmfWTLc2UdkO9X3p1QMzGbadk4JVNdaQ6T
PrLlubIOyPcr706oKeA1bRFmIvBWnsOkj2x5rqwD8v3KuxNqCnhNW4SZCLyV
5zDpI1ueK+uAfL/y7oSaAl7TFmEmAm/lOUz6yJbnyjog36+8O6Gmhhf4LM+k
OX/eR7Y8V9aBxGwg7E6omYhvzm/On/SRLc+VdSAxGwi7E2om4rVsnJKprjSH
SR/Z8lxZBxKzgbA7oWYivjm/OX/SR7Y8V9aBxGwg7E6omY4Xdp2Sqa40h0kf
2fJcWQcSs4GwO6HmHfDN+c35wn015+9mA2F3Qs074K+Ub5vz531ky3NlHUjM
BsLuhJp3wDfnN+cL99Wcv5sNhN0JNe+GT5zhFm/lOUz6yJbnyhxOzAbC7oSa
xZs9CLyV5zDpI1ueK+vApL8052fNPxEv9CDwVp7DpI9sea6sA4nZQNidULN4
sweBt/IcJn1ky3NlHZj0l+b8rPlfCS9wuDl/3ke2PFfWgcRsIOxOqFn84/iU
TJXOpdMep3murAOT/tKcnzX/K+EFDjfnz/vIlufKOpCYDYTdCTWLf5wnKZkq
nUunPU7zXFkHErOBsDuhZvHzf7dpzp/h/2ktbc7PygbC7oSaxc/zpDl/hv/a
fTXn72YDYXdCzeKb84XZNuc7fWpeL2jjlhcL87wz/lm305w/w3/tvprzd7OB
sDuhZvHzOV/2LHkXWz6y5bmyDsicl3cn1Cze0T2Nt9ouTnucwB+hT81fmvOz
5n8lvHBrzfnzPrLlubIOyJyXdyfULD5L95rzz3mcwB+hT81fmvOz5n8lvHBr
zfnzPrLlubIOyJyXdyfULD5X95rzZ3xky3NlHUi5EW13Qs3is3L+I5p/Jb+b
9JFJ/gh9apwXtHHLi4V53hmv6V5z/oyPTPJH6FPzl+b8rPlfCZ94a83557S0
Od+/EW13Qs3ic3VvUt8E/Il9Tc6kOX83Gwi7E2oWf+2cf1W/E3ywOd+/EW13
Qs3ic3Vv8i3CLk68cfK+mvN3s4GwO6Fm8bm615w/4yOTMxf61DgvaOOWFwvz
vDNe073Tb/kvHjcX7Q==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2DFKA0EUANCgIB7B1tLW1DF4hXiCKFoFhFiIndhaeghLwVNYpPEIlnYe
wQRs7LJm/uyf+IqEJ+xsZv/8+fPXw/PrydXOYDC42V9+Taa3p/P59O5sb/XH
5XQ2PJ7tLnn/81n5+WM4fll8njy+XYy7+nXxNHoYHYy/3o9+eZ3rI+5fauw6
99nkebves9SzlJpnzdyIjkmpeJaaZ9drovO81DWl1jciJzeJeXSOlZpn1/iX
WouuY7M5eh9F76+aYyNyo9S+zjDn6DiUikmp+hDR+9WMYeY6VrNvzxyHDPs9
Yo1q9v8Z9kLNOlBzD0bX2IiYZJt/zR4+W45Fz7OVvdaKo9/dsp072XqYDOsb
UZdaP+My9DM1z6++1iVDnvPfcqxmz9bXub9N/Vhf9bPmu1iGGtVXb5DtLGil
R+LN91HE2Gz507VPayW3+4phtmfv6x2zxbMmWxy4Xdfs1SNqfsRY/p/5psYy
56kPNf/Hy8zM/db8iHNhk99lZuY8Z0HN65mZebvPBWZmbsvqPDMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzN/A8aOgFk=
       "], {{0, 128}, {128, 0}}, {0.,
        1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "1"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztlz2qJUQQhQcFcQEGpmaGopngPDQ3GVcwggYiCBqImUswcA2C+3BD7sAZ
MDAZef2qTtV3qjpQei636nZVn7/3wdc/vPj2rWfPnv307qv/vXj58+c//vjy
l6/eef2Pb15+/8nH37/96vjrv/+9Pr//6ZcPH3707sM3v7/38OcfXzx89tff
z3/77vnz/57/+503ff+0z5u+c/q7p7+V1UfR803zRr5/uoes2qzZI/Nm3Uex
HwU+FftXc7BSWyK7UtRGcFJ5Vt+nki9ZGq7oWam3XW+tzhiVb0rLM5F5FV6p
7qN+u0o/6spC6u8Q+KLuQ9ClLs+txKHa4xRcqPQ4Wp5UZLNJuZqQhdSYj/hp
FtcUn6tzkeLchT2CNlZmM3WeIeS3ymxG2FUlNwlZiOCbLn6t0MCu3yLoG/nv
qan5X+3p6rxEyDbuWYjgmy5+rchFkbyk/i01biu1kZDNaPwlZ7DKXVViiZCF
XPIDwa/Vc0VmVPyWe/6nYdIx/3dlMILWVWKpEicu+YHg15W4VXiZS4av9Hoa
Jt35q3iXLq2rxFIlTlzyA8Gvu3Cb5WUE7BFqyZiclP+z3iWLd4pdqf8+qsQJ
LT8QvJWgsZG3JmCPUNulaV25jsBf9bt07Yrck+CJNE1Q+KZaY7PuFrkzTd8U
e3DEswt/CVil5ckufDrmh8rs0ZXNFHigYY/g9e54duRv1rtU+ogiy1X2PJ2d
nB8qs0dlNovo+env0rBX6fWVb33zf/27ZPmIIk/SejrmB3X26LpnFh7UfkfQ
ClrmIdc68rfy+115ktBzUn5Qe2vXb2XhgYy9m/9v/u/yhco8Sei5IT8osjHt
tyJvTcDezf/1uc6Fv5Xv2JXxKntWcoGsCafZmPZbipxDwN7N/zf/q32hEtuV
uZHMhasJOpxHcg4Bezf/19Q68reSLwqvVOdGws5p+YG2B/VvRXyHhr2pXk/O
0o53VuQf9R7IPafmB9oesn5LnX9c9I3gvy61jvxVYFWxqwi/CD0n5QfaHrJ+
KwsPZOxN9Xpylna8syLbKHal8F/Czl3yA20PCt2O/C4Be9u8npAxXPibxReC
7xN6EjzxasLT3lediwjYm+r15CzteGfF5wp80npuyw+0PSg0OZKLCNjb5vW0
jEHmb1ae6doVrWclF64mxPVZkYsiOyRrBdnryVna/c6Rc2W2Ifecmh9oe1B8
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
RQ==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2LFqVE0AhuFVQQVvwFYs7Cy0lM0SLO1iIYjNClpIIBIRERsbGy/BFGJt
63V4BZZWVlZ2gglYbHNghpnZPfo9RX6eX5LNec/O+Va89vjo4On5xWLx4vLp
fw7Wr/aPj9ev7188+58n68Pbtw4vnPLt368zf/x+c/X+95fl8sqD1fOjR3v7
7y6tfv38cWfzz6dc8v29XnPzz2u/Z/Rr9vq9JT9b69H3asT7W/KzI85ey+9t
uQ8t7bt6Llquc/SzMPrZ6dU74rzV3s+rJ/dWL5+d7F3/8G15+nGwmtPX5rXV
+uHn/dW5r2/2Pt290fQ6U69Z4pbXHPG+9LpXva6z9menrmcO57DXa5Z8f6/z
Vnv+a7vm/CyMOBslvSPOW6/7ufm5ULt1vbx5DbX3pNcmT71myf2Z+p6S15z6
XG55X6buZ+29Kvme2vsz5ZLrH31uS85h7TXUtpSch9rzVvtclDROXWftuRr9
LIw4GyW9tfew5LxNfZXcz5LG2q1occn1l3zmltzbkjNf+8zWPstT11PyOiXv
S8t71+vfu0rO5zbPUq9z2PI+1l5Dr+e99rlo+Vxr8YhnYcS5qm0Z8Qzuaqvn
9plbch5azvM2t2hX72Ov31ty/+dwlrZ5P0ecgdHv14iuXZ3JXV3bv/Lsz9kl
n/stn4ktf9di53kOO6mL07zNv/8452wn/+8uZmY7mdnFzGwnM7uYme1kZhcz
s53M7GJmtpOZXczMdjKzi5nZTmZ2MTPbycwuZmY7mdnFzGwnM7uYme1kZhcz
s53M7GJmtpOZXczMdjKzi5nZTmZ2MTPbycwuZmY7mdnFzGwnM7uYme1kZhcz
s53M7GJmtpOZXczMdjKzi5nZTmZ2MTPbycwuZmY7mdnFzGwnM7uYme1kZhcz
s53M7GJmtpOZXczMdjKzi5nZTmZ2MTPbycwuZmY7mdnFzGwnM7uYme1kZhcz
s53M7GJmtpOZXczMdjKzi5nZTmZ2MTPbycwuZmY7mdnFzGwnM7uYme1kZhcz
s53M7GJmtpOZXczMdjKzi5nZTmZ2MTPbycwuZmY7mdnFzGwnM7uYme1kZhcz
s53M7GJmtpOZXczMdjKzi5nZTmZ2MTPbycwuZmY7mdnFzGwnM7uYme1kZhcz
s53M7GJmtpOZXczMdjKzi5nZTmZ2MTPbycwuZmY7mdnFzGwnM7uYme1kZhcz
s53M7GJmtpOZXczMdjKzi5nZTmZ2MTPbycwuZmY7mdnFzGwnM7uYme1kZhcz
s53M7GJmtpOZXczMdjKzi5nZTmZ2MTPbycwuZmY7mdnFzGwnM7uYme1kZhcz
s53M7GJmtpOZXczMdjKzi5nZTmZ2MTPbycwuZmY7mdnFzGwnM7uYme1kZhcz
s53M7GJmtpOZXczMdjKzi5nZTmZ2MTPbycwuZmY7mdnFzGwnM7uYme1kZhcz
s53M7GJmtpOZXczMdjKzi5nZTmZ2MTPbycwuZmY7mdnFzGwnM7uYme1kZhcz
s53M7GJmtpOZXczMdjKzi5nZTmZ2MTPbycwuZmY7mdnFzGwnM7uYme1kZhcz
s53M7GJmtpOZXczMdjKzi5nZTmZ2MTPbycwuZmY7mdmV7D/PbiIP
       "], {{0, 128}, {
       128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztnDHObd1SXZ+wZJHZInDuGJFAgmTzftEDhEUDniWbBGzpEQCZIztzFxyQ
uQ9uBM4cWaIFNIGH5OBaaKExNGZ99zzeH5yrc4/2t/datWbNmlW11v7X//4/
/+F//LWf/OQnf/brv/jnD3/257//85//7C//3T//+//8h5/9ye/89p/8s198
/S//7/P333/3X/zLH/773/zvn/7F//kfP/35b/6bH/76f/3uD7/1X3//B/u7
/f7tfciz7PeLuVzbxD7X2mo1x2Lni7FdY+YrMXbxt9cY+ITv1/i58JcVF5Vn
/SIE/PDL8CE2+d5j/JTPJ9vkK8e2wswn2/MT1vF7ff/eNviUzz9Vm3wbp/7t
//zbn/7Wn/6n3/tXf/ab/1/M+vb3X8a4dmGr1/dfhbGtMPPJ9vyEdXzZ9vrz
o7//w7X4p4RPgisyx++Fz0+w1UsPfKVNvnJsK8y8Pp9gz0/D2Ffa4RPG8Amf
T/b31byuv3/vuV7Z6rd/449/+Kv/9gc//PX//aPf+5brvv392iZfObZrPLw0
1Vfa89Mw9pW+9glj+ITPJ/v7al5f2T/9NDsUW317zbfrTn5f2eQrx7bCDLn/
a77X9vw0jH2lr33CGD7h87186ivn9RrbxXNf9/9kbFiN+or7L51QnvuVYyP8
X/DwuudrnBf2/DSMrWxLnvUJY/iEzyf4+1fWBK7H8L2eezFmwoEkHyQaYPW9
jO2Fecsh5BqbX5OxfXJd4sIv7D3tml6M4ZPX4iv9/SJveo3Zfl/lj9fPXWGA
5LwvjiLPemmGVZ2tjM3qvcK9ZL9E0VGfVpe48At7z9d4Xmt6MYYf/f0f4pP4
4EpfWQ6x9//K564wQOz/+luCjU/r/5LrL9aa3L/wD/HNr6xLXPgF+U72opP5
rsbwo7/3nGiVpxBbkfyF/H7x3FVOVOxs6+QEexe5HhmbPTtZ1pqM0/LP6/4X
PlgwVvzCxtZSbyT1bcvnP/r7P+7vqzPFBAMkZtm9TF/5XMuZJT+12CZcanFb
riHYW+kfsnZ2jQgGLB4u6hIEn9YvbF7zup5wuP1bwuev63/09398nN9eY88U
E8xYHnjd5zW2i+cSXNlYT86z2zhYuN3md6taDRmDxYbVDGTdL/R8qUvYHKTs
CbR5ja2blb+1a/2r7O9ED7zGU3KQ0gMiuH2tY3ku0QA2vhOtVexQeJXkd/Y9
VMWG1iaWbwsvER8hGLAa1eYLVvO8+KrwzOt7qe2T8ZB4+qvg74UnyafkL8QO
Fuc2Zl3gmcR3gm07L/K3xacueMCOx/qI9aNSTyYYsPqZ3H9lW3vG4TXmMs6y
b+q17rZ+9cvu75YTCjcS+xdMFvyUtbZ4LjYka0fe71H0f4kF1m7lTK7VYATz
pGZuNaTFRvG7wp92joV/SpwtYyDz/WX3d8ux397fcnXJXwgmSRwpew9IzkLW
qOxzsDh52aTUBy64aJVLFg1W3hVsc3a7diT+Wn1i953aOa5yOnJe9SJ/fP1u
ayCf5u9WU9k9AOSeL4zZeP3CQ9n/Y/dvWP1g49QFD5P1slp65WsXmtbahMT0
grcLzlztrytrveoNEd+3eC59KGuTT/P3gn8S18qzyBhsLCa1UBKD7Dk4wv+v
8RcdWGqGX8lFq7zD5n12bwbhHxIjih3KWaSCw5WuLv5eMLAaQ8lTPsHfL7TH
SudYDFi/I/5Lrid8slqLi3y22OeCiwg3kphC/M72H1f1AXuNrTURfF5gpvRi
rH0sBlZrZDH/8p3v5e8l33nNncyx4KHEo4v7kBhtz6qU2rLNZ4t9LP8QuxH8
2PUifGV7iyQfX8X6smeD2HmFGYsTEnOtTa7/tmCGXPO9/N0+q/i7xYPNccq+
cXKfktMVzWPtY9el9BAL59v72LzD2tnWDSyPWT8l/GC1oj33atex5Ptk74TV
t+VvS5yy2t6emVqtnfW1opcKDxTesDi0Ni91pzIvck/C+eWco82PrG2LTex+
eMsbBTPFdwqHW+xd5BFl/8bF/n/rs6uedclJrb+XuFz2i5Lxr/rpr7EVbb/i
3tW8rC8TbJM9WsQ+X4mH19/aHi6x/wozdjwvm6zGUOohXxmDrI5a7f//Sk6w
z13xednPSeIgse1qXjae2rqHxfCq3lhiHLHVah+CjbNljjavtD5u9x2VWvSK
M21csJq5cLiNQXacq/3/Lx+54ASLN1v/JDk+8cFVXLMYuIgpBcPF74h/WZ4h
WCX9CNvjsPxQ4u/L/vbcPRkbWaOyvhf+YmMN8bWXnS13FW3zWqOL/f+ln3vN
CWVPCPHflWZY2ZDM63v5iL1nqTeucs+iryyuLmojZJzf61yVrUWvzniWOGX3
7K32/K9yYRu7C0ddzGW1V6H4cnnPaqm9l7izisvWR8qec4Jby9srLrXPIpxW
NMbKf7/9XJyrKva3+4FXOsTmTeW85MXeGxsTbc71wth13mc5+cKXC2eWWGzz
Jrt2ZTxFG1yci1zp1VXcJHgjdrg4p2Bjpc2pV+tra19Ft7zsZvcf2nhnNZWt
fxK8kVhmx1DyPvK7xfOKJ20dmOCh7Hkucc36CLmnrUMSjXRxZmF1T7vuL54k
WCX3sdz+ei7BP+F8u75Fe1h9SHjG9mUst9izP0XP2PePXeSeZB1t79LazfJk
2eNncWV9k1xv43LBIfEX60d2jvY+BfNEt7x8sOy7KL5sfy/n9O0eyNdzScwt
uuhlW4sfqxOIPif2IbYqewxK7nmR41/XAWy8s7gqOQuZl+XVop3sOC0Pv35/
4bP0Agjmie8XvXThywQbLy5a7SOy8ZTUMcoYXr+v5m7vad+XYnFo/Y7oTLJe
5eyb/V7qABf5KRnPikNWuclrPBe9NhvLXmMjv5MxkL+1sbu8Y+Q6PyI5C8GM
xeornl7XQ2wctHO39yRrUfIFG6fI35Y+iP1c1wzth+SnhX8sh6xyEzKesuen
7NlY4dmukX2u7bWt/PH1u81lih+t3htg3+FA8Fb2qFj9b7/b9x68bLWKfSVH
W/Ft4YFSByD3L7Gv9JEJfqz/lloBwT+xyaqWeLHWxZ7X708u+RHBs61BlXzK
7om19RAbL8o4bQyyvdfSZ7fxiORoqz0MlucJhlcar8Q+8qzSCybrWPrFVktb
TiB57su/yDjtWhNfXtWjiP0v9thbPrE1RjuGF7dYH7T1q2KT1V5QG9PLmIlu
tGtX9NJK5xQNUJ5F3htQbGI5ioyfzNfGjouzXeRvX+Mv9i9j+8r85eJ9pCVW
ljHYmLLyu8JRpb5K/NfihzzL7v8n8131c63OsXsViv1tncTG3LLHg+Q7lj+t
76/Ov1/wqs2Jytisv1hftrm/jXcrbiw1B9J7tbW1FUettMTr/jb/Jb5v+8ir
M7avTzlLSGxr18XWEotWIXi2dra9vMKrZV3KmbKiQ2yMs75vayMlfyFxoZw3
IZxcuNGeaSU8v6oJ2BhqtUThTPspvTBi53LPVcyy3G7HSfyIaBWimQuHWP1g
+YfMsdQWXn9rdazFc9G3Nk4Rvr2IHaW3SOJ40f+WT8g62pqA9f3V+l5w/kUe
XZ5L8lOC7VdcWNlnVdOw5z3JOEst2vos8d/XXGw9lvhg4Y0SQ0ud046n9FxW
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
1z1Xe1osx1rOLzHdYsNyLLnnxRmrojMJ75V9BRd+/fpuOZPU7S3ebPwq97ze
f1X813JO4cCLubx+tzrfzqXY2cbo8ik6reSM1kcsNi76TYSv7Fzsd7Kmdn+g
5ZPi16QWt9IJ9pxL6W2R+LvyNcshxZ4WM/Zs4+pszsr3VzVAe89VXLOcb7FE
7mP14QoDq3faFF+w8y1n/wvXXedZZC6v8RedYDW8vZ7EtfLOtJVWLNgu/TV7
vo/0IldnOS9scqE5V7nPShuQMdi4UNarYMDy9qpHVsZg+Zz0nlZnsa32Iz0X
wgmrdS94fsU1+74j6+OrPstq3xTp15B4uvLT1ZlQ61MrvXeRsxRtQOxp19He
v2DA+rh91wrRdfZ3YoeCc3INwcOL94htX2Ow8a7shyd2IDGL2PDivRz2Pque
CFn3stfF+mnBks3X7P3L3C9iRPH91XvIybu/Vhiw2qPMkXBIybNsHl1wYs9q
2THYc1Wlz1j0UsGVjS92L0fpGdmeiPUXO56iby2WiE0I51zo4fKO3NLDsr05
+84Z60cFAzYWk3hkbUiuJ3mQ9bUXZ16fmSK8TfiB+PXFO1SvtbfNB+3H+qzV
LaXHseJ5wrfX+wTK2llcWV56zctqS8KNlmMv/pbYnHBL0YdWi67OVZXaNbEP
iVP2XUZkfUkvuPRny1nLcq5z1csj8y08T/BTzjgUvF3HF4ur4rN2j4TVSGW/
AeGW1Tlc+7eF91a1C6v9iG3tOSN7fzv+VX/BjmeVy6/OWpK1sM8quqLks4Q/
yTjJ98LzNjaV5640/KpXSDBAeN7GMjJ3Un8osbWs10WNqNRdbe2r+Ca5hozf
9mVKHlfqQrYOYHWjiRV0HS1HrbBtz4NYvVr2UlquKLyx2h9ScrdyjY01Ja69
OH+VX1h+KDmg9V+rOe2+/RUGrJa2PUFyvc3j7N7Iwg92LVb+Yv/Wzos813Jj
6WUT/73OqUveWrT6Ku+w62I5ZMUn1m42tq72F9m5E/63a33xTiFbPyS19FWf
iKz1qhdD1pH0I8r730pMt/Na4fz6vSV2T1HJqa/z1pKLkfmuzixY3rB8sopB
1oZ2f5HF1Ysnyzu7Xvck97HvfrF2JntprO+Xj+3FEO2xstXr99VZAzIGW3u5
4EbCG8Xmr489F7/KW8u8yjkmgn/CezYGFf+90EWWf2x++vpbG0/tvuiSJ5Z+
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
PqtYVvoXJSau4unKJkULlXVf9eJL7lnsXOpvZe6Wo2w8Klr323uW92itOLPU
jq597aKGQM472HpvicuFQ1YcbtfCnsUgvHcRK4tNbN5a+v5Wl347x9LTfHHR
SvcSe5LeOpm7zbMshxQfIbGv6PnCh5/ma0V72LW+4Gqb+9hesP298Jv1Lzue
lf1XNrFr98Ib6fuX+omd72s85T2oxH8vdOArZpV+d+E0m1OQXIDo1aIVi99d
+Fqpr9q1W3G19WW7LnYuFp9Wq6z85SJWFpuUM6qkTlXyo9X7QgkvFX5e5cU2
nyL4LD1NYh87r5X+We3xIH534WsFb+R6cp/V/rHXp+SSVs8UfNq9GdZfru2/
0kWvtSs95WKrVT99lcNe58urvQrkY+t7q/yl6J9V7LO9+AtfK++ft1gqtbIV
55OxER8nGoms3et3og9LbXxl/6IbLeeXWGxtRcazsk85G7XKl62v2fyL4L/k
gBd2Jr5f7FbeOVZ8bdVbIRqyxCl7fZlX2bdvx1+03Ov+pDZ+oaNe9ye/rzR2
qbPZmps9U0bsYLF0kS+XMzWFQ8hzyznulR1KXLP5fqlnXmikC01i63W2d2bv
87LV3wHh+dfy
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztnbGqblcVhS8KURB8BwsbS60UycVXuIrYyRWUFIFALMRGRPAV7GwsY+cb
WPkGPo2FCYgkxQ5zZIwx1973fMUKfw7/2f9aY8z57bXm3P+53/nVR29+87VX
r1799puf/ufN29/95OOP3/7+p+999j+/fvvhD77/4dc/ffnH/43PXv/s5999
/cM//+vH//7RX9//5S/+9P7rD773+h9/+88XXn/+PZP3q9eZXN/5XOc6qfk4
a1e9aF8zpW3bL3Utm9q2X7fjcNP3FDfav5vSMBV7k9/9+yef/H9M3jN5/+Q6
/3zvG6+/9cEfXn/7L2++8Dr1WY3Xm2tXvZgM55p30F/VebIWR09V2yvfU69T
87mD76puE48av5vSsBF7Ez0n15ncU650cGJP/azG64m2jbVPvJjEhrp/uJv+
qkeTtVy9VvNO3V+pcaXGXpv/mz5OdDvFf8cLNW7V2JvoOblOg0VO7F191uY+
X9U2tfbJz6+Geo6bnOvb+qsepepUqo+ORw5XnbN5ioeb57XUcNarauvkWuM6
qfx1WKR64eyFUvv8yXpVhjhnn8ne1am1ntI/dRZrsyhVA0+xxan3qjxMnQdT
998Gc9S1O+foCc+d66i8UvPOOUenzp4Ou9T3O/drZ+2q/o0eVkP/1FmsXTtS
OZDiQ4MJDg+d86A657vxP3WOdmKmvedxahEN/qtjwi6VdU4upPif6is16gyq
/qmzmKpDikUOS529hMMEdb830afxun0WcM47zjlazUFnLY28VmOg4UVqbpP7
gvNZm2tX1+Iw1tm7Xs1ZfU/qOYTU2Ur1VN1HOWyZfK4z59T5a/JZqZGqd6Xu
ueqeU83llJ4qTyb38QYDJ9dX94RO/jbWrs5toluqBjK5fqr+o855co9wPmtz
L+08K+LM2eHPhHWp57JSede4bzbGZB/oxEyKCY4X6txSNRPn3N1Y+2RujVqx
qmGj/qPOWb0XT655ai/dYEv7HOqcr0/xP3XWa69lsg90+iyp5xYcDRtxMrlX
OjzfXLtTJ3HqHk6+qzxXn0NIsVF9XrSxl26zpXEOdX4X/n+14exjJx7d4dkD
R1v1WYXG8yGptTv786s5TH7XOUs2aj6Tz3LyTp1n43mGVPxfjc05q2uB/3Pd
GrXE1LOFd97/q/NvsLf9HILTF3DqD6f6s87aJ3OG/721pO7dznqfwn+nltjI
qcazB6n4V1k00TylVeM5hMmcr66f0l/NZdWXxpnXue/Df59jzr07td4781+d
26Qvluq1Teacij2nN6H2ixtaNZ5DSJ37HP1VfVL9Wae+pNYwG/Hc4MBknOK/
es5K8fMl8P9qTGrdzhlhM/ac3oRTD7maf6P25dzj2s+QqD2Oxr5usl7n/kj9
vzcm56xGT/+l8d+pZ6bO1I3YU2vg6vwd9k5+noofZ//c2Euo73fqTo4Xk/uF
+lwT/J/P+c7MeZf4r7Jucv9N7eXaz0Cm+onqPaK9/7/bXkLtiUzyPbUW596k
zg3+f/lQc/AUc57O/3ZtP1WjazwDqe7lJvGpnjVStQL1ntJmSIqljVpi6t7k
xDb8n/uiftYmc57If7Ueq15T9bcRe07vexJ7k3uiynaH/439j6rnJDYmOT5Z
o5MjqRqUU3+G/1+ueYOBDeY8hf8pPjj7TKeu2+D/ZG6OthO2p+Kw/VyEw3an
3+14lJr/JGaufu4wITXuzP9JzDjXbzPnzvxX95wOJ68+K1XXbfBfrQNM5qxq
0si7xnMRqfqV6nsql50e0KmaXmrcmf+NHu4mc+7G/3ZNZrLPbNR1U/xP9fsc
njTyTo15Ncac+pUTq6lc3qyt8fzPV5tPKnc2mfN0/jf2PE4vtcF/Jx5SNcN2
H8q5/za4oe49UnUktT+Vqq2dYmmDCe05q/3HSe6oveMUc57If3VPlaqFOnVd
pwZydZ3JHJyaoaq5k3fq/VfNqVRNcqLJpnepuGrX9FI634H/qV5boxeprvcp
/G/UK1J75k0vJnNI1asna2z0vidznuROm/9OPSflnRNX7P/nc0712lJ9t5fA
f2eNqVqQ03tta+jUNFK9lVQfajLPVI+mwSK1NpuqRzm9lXZNLzXuwH+n19Z4
PZnbE/nvrFGNedVTh4ennqFyrr/Zh5p4N7lm4+zjxFXb09TaGzW9U3GbmrPa
l1FrmOrrRm3wDvxX91STa056u07/9JQX7Tw61YeaaHt1zck82/sTRx9nOHHl
1MpeGv+dM2Z7n//0/X9qr66yK1Vb2PSikUd360OpvrcZkurLpNbS0Hazp7Pp
nTNn514/2X86+/x3af+v7vEm91mVXZP13uEslsoj5x7X6H1M7qepvtKpvknj
LOBo69SL3lX+pzh2xQo15ief9cT9fyOnVHZN1nu3s5gz1LmdOvs4Z8AGQ5y+
ifOeyVC1Ta0X/n+5tup+ZlKLbuy7nsJ/h12NnsKps1gjdyb7wPbZJ3UGbDBE
7Zs06u0O09ox85L5fxXDKqvvXHM+xX+HXVf6T3RzrnO3/X/qmptx6HjR0EFl
uJrL8H8nhtscc+o2kx7BqZrzJv9TeyS1/jM5xzn36CfyX2VamxUOPzd1UNfu
1ILgf1Yrpy4xqeGoPYJJnDx9/5/aIzl7s8l71L5wW8N27qT6hg4rGue4hg6n
fIf/85HywqkJTH5X5dgT9/+NZxJUhju5r+7ZnsL/1D5ZXftEf3WvdUqHTd/h
/44XTn1Pje3UZ92N/40a7JWeTqyq99zJWl4C/521X81hcu9Wn52A/37MvAT+
O4xVa0HO/O/M/1Q9v30OUmNArU3B/7n+qraNfiv8f5n8d2rsV3NuMGQz9lL3
zdTze41zkOP15D4O/7P7rskZIVVLhP8vh//q3vJqNBhyKvacnEqt9849uFM9
lEbunOK/81z0RHN1jfD/ZfLfqee3GXIq9tTrpNb7lByE/1n91d596rsAqVrl
pu/wP+vF5PnMBq/ukHebXr9LOQj/s3k3+XlqjXf4fhb8z8ZwSqvJMzkpXr1k
/j89B+F/Vv/2s52btVn474871P+v4qHR33wJ/H+XchD++/o7z/m3a4ltPsP/
nv6NONysSbbzbtPrdzUH4X82707dI54Ye/B/Jw4nz5k8Me/g/87c4L8fP417
xNNjD/7vx+HV3Jw5w//n5iD87+WdOoe7nc3hvz/uzP/JPO+cd/B/Z27wfyfv
7qYJ/M/6+xT+n/q+eSP24P9OvsD/nQH/d+L5lF+n4vDUd8fasQf/d/IF/u8M
+L8Tz6f8OqXVqe+OtWMP/u/kC/zfGfB/J55P+bWplfodscZ3x9qxB/938gX+
7wz4vxPPp/xqa3XF88+/Z/O7Y+3Yg/87+QL/dwb834nnU361tVIZ3v7uWDv2
4P9OvsD/nQH/d+L5lF8NrSZ1/sl1nvi3x+H/Tr7A/50B/3fi+ZRfDa0a3x+8
ug78f1YOwv9e3jUG/N+J51N+pbSa1HDU+bf/Vkkj9uD/Tr7A/50B/3fi+ZRf
Ka0mPdzJfNS/KXe3v3sM/3fyBf7vDPi/E8+n/Gp4oX63a9IvmMznDn/3GP7v
5Av83xnwfyeeT/mV8kL9N2fVPfykj3yH2IP/O/kC/3cG/N+J51N+OVqpdX7n
b9K21w7/d3IQ/vv6bw74vxPPp/xytFL/XYnJ5zq1/TvEHvzfyRf4vzPg/048
n/LL0SrV853UkdrfBYD/OzkI/339Nwf834nnU36lvHD+nqfzb9XdLfbg/06+
wP+dAf934vmUX45Was/3am5qX+DqOneIPfi/ky/wf2fA/514PuVXyovJfJza
fvu7APB/Jwfhv6//5oD/O/F8yq+2Vmr952otk+8FqJ/biD34v5Mv8H9nwP+d
eD7lV0MrtT7jnBFScQL/d3IQ/vfyrjHg/048n/KrodWE506PuKED/N/JQfjf
y7vGgP878XzKr4ZWk76w2iNuxyH838lB+N/Lu8aA/zvxfMqvlFaqDle/m+rt
wv975iD8z+Zde8D/nXg+5VdKK+dzJ+eFyfud+cD/nRyE/9m8aw/4vxPPp/xK
abUZJ5Pfhf/3zEH4n8279oD/O/F8yq+UVnfg/+R1O/bg/06+wP+dAf934vmU
XymtTvE/1S+A/zs5CP+zedce8H8nnk/5ldJqM04a/QL4v5OD8D+bd+0B/3fi
+ZRfKa3acfIU5sD/+3jR1hz+Pyv24H8vDuF/1mv4D//hP/xv+5XSCv5nvYb/
8B/+w/+2Xymt4H/Wa/gP/+E//G/7ldIK/me9hv/wH/7D/7ZfKa3gf9Zr+A//
4T/8b/uV0gr+Z72G//Af/sP/tl8preB/1mv4D//hP/xv+5XSCv5nvYb/8B/+
w/+2Xymt4H/Wa/gP/+E//G/7ldIK/me9hv/wH/7D/7ZfKa3gf9Zr+A//4T/8
b/uV0gr+Z72G//Af/sP/tl8preB/1mv4D//hP/xv+5XSCv5nvYb/8B/+w/+2
Xymt4H/Wa/gP/+E//G/7ldIK/me9hv/wH/7D/7ZfKa3gf9Zr+A//4T/8b/uV
0gr+Z72G//Af/sP/tl8preB/1mv4D//hP/xv+5XSCv5nvYb/8B/+w/+2Xymt
4H/Wa/gP/+E//G/7ldIK/me9hv/wH/7D/7ZfKa3gf9Zr+A//4T/8b/uV0gr+
Z72G//Af/sP/tl8preB/1mv4D//hP/xv+5XSCv5nvYb/8B/+w/+2Xymt4H/W
a/gP/+E//G/7ldIK/me9hv/wH/7D/7ZfKa3gf9Zr+A//4T/8b/uV0gr+Z72G
//Af/sP/tl8preB/1mv4D//hP/xv+5XSCv5nvYb/8B/+w/+2Xymt4H/Wa/gP
/+E//G/7ldIK/me9hv/wH/7D/7ZfKa3gf9Zr+A//4T/8b/uV0gr+Z72G//Af
/sP/tl8preB/1mv4D//hP/xv+5XSCv5nvYb/8B/+w/+2Xymt4H/Wa/gP/+E/
/G/7ldIK/me9hv/wH/7D/7ZfKa3gf9Zr+A//4T/8b/uV0gr+Z72G//Af/sP/
tl8preB/1mv4D//hP/xv+5XSCv5nvYb/8B/+w/+2Xymt4H/Wa/gP/+E//G/7
ldIK/me9hv/wH/7D/7ZfKa3gf9Zr+A//4T/8b/uV0gr+Z72G//Af/sP/tl8p
reB/1mv4D//hP/xv+5XSCv5nvYb/8B/+w/+2Xymt4H/W6zvw/7/VStpK
       "], {{0, 
       128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzlnb/qZ0kRxRcFNdNXMDEy8U9g4v7QRxjBfMTVwIWFdUFMFjFZUPAJfIrN
fQ8x1tgXUHAWRG5ScM5+zqnucYM73Plyb9/u6qpTp6qr+/fNn33w6hdfeued
d379tTf/vHr9mx99+OHr3/7kK5/9573X73/vu+9/+c3t7/57fXb/8z999PKP
9z5++cOnH71848c/ePnbp7//4R//9bF0f9u7z9+V+3afybc25aC0Q/rQGG9b
B9z2U3qS6meqz0TOjX425HwbzmzaxRsX8L/rk5/++d2/f+vbL9/55Kvjt57P
TPeb7z77/7xOjZeMUblPyWGSySQf5V55l4x36mdKB1zZunJTxkX6SfqvzKMi
Z6JLKT109Yf0LYUzN9jFv3/113f/8s+vv7z65ffHZxQ9ab9L8KcxXrc/hLek
vuuOK2WbLu96ztGznefvz3tXB1w5TN915TDp3mSnBM+n7276FGJHRA/d8ab6
r+AM4fnELp6X8oyCRa5du++6Nq7oABkv0QeFG0ztE6yb9JDggCLPFD67XEix
C1cOhI+5+qlwkhvwvN2HlH6mfBDBGaLb5F2CV882J5x0/abyriLPlO9Wxuvq
uRJfKH7cHa8rN4UDpGzTxefJdhQZTvqmzJeiJ0ofyD3JSd6M5yn9aehqqk1F
b91nXLsgNqhgtav/Ex4SrCP3k5xdbunqw/T8JGe3ffd3F5NT/E2ROeEAqf4r
3KCBJ6mc5A143tCfaX7db7ntu9jSiCmm36ecCeFmk/6n9Irkdlz7UnJxqRyv
O/Z2fsaVJ+GfZOzEZhXfmpIDiQeVnE9qPegUnrfvlVqdVPtubtbNwysyT41L
+Za7JkX0yn2G2JeSk1F4qet3CC6R/IzbHyXGTPHbTf/i2sIkB9ImWb9QMOcG
PG/op4sJLs5Mzyu5PuXdG2Tu6pKyVuvmfDb5ALE1NxZw49BUXKZ8V+nPpDNu
fVTK/6b8S8qOXHx2x9uoUbkBW4h+bsbdE74p64DP36c5JfPb8OMKnjTijgZP
UObOXW+d+unWaDXW5af+uPtQXF2avpvyv0p+I5XPT/kLMnfu85t2l/IpqT1T
Kdxw5ePG5i5+bvrxxn1K/oQPKHtPlLqpaVwuBk73jfUgZV1+6nOKJ7h7D6c5
VXwTyRel/EUDk2+wu4bvU+xRsd9U3O3qttKOq5O35dka3KDBE5SaWEXflHkn
tjPpbWM9aJIh8VMpG1f8r2uDjT16KX1O2eOm3TViBBLLKDrmxt2E8yvtkP2q
bewlukEwnNRPupeC/+R5Mncu/99cr2zYuJIXVXA7lS8i403FGu28d+p8gEbc
lIp3XG6m4Iyrt9Pz7n7VlMxT/JlgneIHUzVyLmcmzxMOM8lkk6e5z6RsXJGn
mxdy80WkJiEVa7Tz3sTuTuWTFRskOpzqj1ID046/iF8jvt7FutS+GMV2Ur5S
4cNkXtycYZuTp3xZwx8pNWZK7o6Mq7E2Pckhlfd27c6tPUhdm5iZsh3XbzbO
ZyO2mVoHUdqfbIRgsmsLZFzuMwqmtfVt0+839FPhve75Jyl9IGvT7u/kXcXu
CK5+0XJWLjdQ9Lm9Zj31v7HHpMGTb+jP5n1K3zb9fko/XSxVzj8h+VVF/lM7
N9TjubXKBEO+yDkrRf6kbi21Z1nJWzbyHikO3MbbU1d7LK7fJ3jY3p/bPldN
kaHiX07pm/Jdwi3d/JXi6yfMvzlnRWxZqVsj/JboYQM/b8Nkd14a96mxp/CT
zOnm/tzU864Mn8+naiQ263+UuSN7D105K7/flrNKxc6b9f8Nbkn6fAqTXR7r
1mOQ+NcdO5mjyb6U9UoFNxr7cxtxhCvDNg6063+muSM+sYFdt+WsGracwuHN
65Tf2bSRaexETwgXauRV3Jxkyte447pBbxVfSXDA1bfpeTdvQ2qliJzdd6cx
tnNWDVtuyPZUvqLpZygmExtR5lHRE6IP7VwN4V0pv9OohUjl1hRf6XIJ8nvq
XWUu2jEU8b+TDaZyVlP7qXG5eN7mxi5/TtlmI4fZtjvlvBqyz5Twz4Ztus+4
fkd5XskpNeLxhp2euid+IYXhKZ1p56wmHkL2jLfncfpuI18xYdGpHGb73q0b
nJ5J5UJJrmZTVql2UvFOyt+l8K19NfCEjJHoTDtn5XIAoueNeVT6nMpXKNzg
+XsjP7NpOw1MSHGGU3k5t5+pdki8c4qv3lZL1vb77blo5KxSOJDSjVT77XyF
4msIHhLda+SdGphGfIfrr2/AGbedVJ4w5dduzs1uxinTGE+daeDmrNo+0dWN
Rl2H69cmu3O5WYMPKLrXyDs1MK3tO57tnKpza8818Tub+jnN72YtWUM+7XX8
lJw3faJr1426jgaGTG0q89U+r8O1r5S/S/nozXoVF38IzhC7UHQsxcM3z9Zz
caBRf0Lkk6q3b5xpkMI010+5viy1X6bh1zZxj4yL+D733Qa+Nf4ulTJ295w0
VzfaObdGjZ/CAd723Kzrx5U+k3XbFLdvY9qpmha3/8SvkTaJ/Iktn7on+Ebq
+RvymXCP2Gnq70pszvv03fb5RcS+XOxN1Z61eWDKBlMceHrmVG7hNjxs60mK
56T4g4tvjb9LleIDin66OOPKdnM9V7Edhd+Sb6XsV2knlbdJzUVKbxv7r1My
d+e9LbfGdQqrU5yc8Ha3n8qauPJ3qTbnxbWjqQ+KbAlOpnJNZM3x5loyd02W
4F67HtWtOSffIjJv8+cb8HATqxW5NepbyLnuqT2/KT1RvuXyXuW7rjzd+8Ze
YBcfGhybzK/CKxo6mapjVDA8pT/EL6Suhh/ZrPdrYPXmWW1Km25dcaNe/Wa+
ofC0SZ6EVxBbI+9OYyQc+wZuSXSS1DE2/DL5FrHx9toE0W1S7zfxipQfd7HC
/e6kk+7aq6Ibqb+n1taTBndSvuVirItvjXcV/WzbeGOuybukjjEln01uQzh2
6rz3Nh4qdp3iNu388MTHprPsUmuvJO9K9LyNRW2O6vqOlM9N5akaNt7glmRe
3FiYvJtaW0nxK5dju+0o/iX1tx5c3FP4v4shjfywkpOf5mtqRxkXybuS+0Yt
xCaPTfEHsv900g2yDkJs/IbzH1IcjLz7Nv5tCNK+u8ZNahum9qfnJ1116wZT
dufKNpX/IbmFlN4S+1KwqM1jG3akPD+Na+on6YNr48/r1PkPt903zpRo6yGJ
xdpz6mKCwp8V+2rbneIfSf4nZfuKT9mMeRX+nOKxp/5GntLODecaTb+3z3/4
vBykdblx9Km/DXHzfUo3FMwkNZDtOjFFz924oDFHjXNpXB+q9MflsUofiH8n
PGETGwnvdfO0pD+N9YgUt5nePXVm2pY/TOpYqh0lV3BzDeSzzQlv3djEla27
nkJiXuLrXXtJxS8uXqXsNIWNbn9SeVrCXdvnVJN1TIUrts9Me1v8ZsN2JjlP
Mr+tBnLq/6TzqXkn8zKNhZyj6Mrc1ZP2mQPknvim9l4zRSYpWSntTxyJ3Lu+
z/Vxp3jmDX5z03Yme1d0ZrMGcsJ8BVfd/NU0R65eKT5LaVOxrxS2TLqROnOA
XClOQr7b9nduf1J6qNy7snXx7RTPvMFvNuzFxdsG5yT+VznfeJoj5RweZVxT
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
NuZXyUu4WOrycBcDFb/jyjyVJ9n0y+6+xVRO2J2jNra7fmpq362bdWXl2pQ7
9lROrJGvIPEFye2k9norNtWYx8aaRSPuUPIMBDNTvlWxZVJnnurz5JcV7NrM
Cbs23ub/bvtuH9p2lIpD3W+dGq+C2yS3M9lIQ1apeWzU9hB/ocjTjR2IjhEf
p4ylYRcpv6zIk8RBp3Cg7SNO9dOddxKHpnSsPV6XM7u5HTcOJbJKzWPj9xT3
SPGQlGyJX3b9b2OMxL8oNrWJ4QQHUhjV6APpp2tHpN7phvrGFG4o3Ibw/zZ2
perWNm1zwr0b9phv4tLbzkU38ZPgQAqjGn1I4Zh7Bq87XmUdtl3fmMINZewT
fk7+4oY8uduma4PELlyfq8j2VM6EYMINWNqY6wZ+EhxI1WA3+pDan+Xqj8sJ
J27p6rDrU0ibLiYr77pY6vq+U/6CcBhiI8pYpmduPjfe1e1NLG3z5BR+Nvgb
0Tfy7qn9WS7ObLbZzle48+XqM+FCbZkTHSZ/F0xp3+USLm9p+EqCS409bptc
tL0vW5EV4W9Etpt7tVJcl+BSSm7uu+3nU/dtv9AYl7sG5OpDih+m8mkpX0lw
iexbSenJ9Exjr6I7v4qsUrZG9Cd1/k9DHxrYdSrua4+XXA2cb3N7RYcVW1P0
IaUDCs6k5Kzct3Fp8nEpPXG56Cm7fn6L/G2s1H0qL0HyxoSPkbk7dR5XG6s3
85ybtuPWdLl18uQshYZ+pvzCdClyaNejEvko70445q7rpey0kdtJ4QbRW/It
gmOkP5vncd1QE0XynA38Ibo69T81xgkniZ9q+AtXJxs8lvS/gUVu7ObyW9dO
N/EwVbdwA99L1Vsq+NA4j+uGmijXTk/58cbatzLGU9yV+ItNDE/5l4a/IPrp
ftflVI35StV8pua9zffI78+rnZtS+nCqJiq1R6ytt6lzwFJ+5GZu3Mbwdi66
sRepzW8V2abOfyPY4uJGIyd8KjZpc4bUt9o1URP2kjX9ht6mfBzByTaet+tX
Uxj+tpyF0uacrv8i+4NS9ZauDSo1ErfxvRt0j3xrsyYqtaY/YXIqpnDzpe15
T+F5au7aGK5wEpc3Nvwd8X2NdcOUr09xM1Kfo+AP8TXKRXSsrXsNmbt4S/qZ
wsbUuROpvxu4addtLnoKw93c9eZZKDfUPBCe4GJC+9wqZU6n/hD+4/I9RcdS
87u5Vu5i9Sb/dH264rOUeER5l+BkG8NTmEbitVTd/pS7TuU6lHm8rebBxXn3
Wzdw1+d9ar+ey/cUnjz5JoJdjZxnCpNPYZcbv0ztT/KcdE/pp4KTKbtucNHG
372aZO7Gp5s8xNWr22oeiL0rWNQeo8L5XXx2+Z4rHxfz3b6RnGcKk1MYnlrT
d2WryDC172DCvVTc2jijz5VVCq+InFM8pP1Mau7aY0/5GjLGifMrPjeFty6e
pPyIO1+ptXKyltHArpRun8IfRYfJdxtn9KVqPMi7p9pp3zdqHm4bOxljat4b
9jvhibLHc1PO7lr5hMnt/V+p3AjhAw38IRirtJPKpbfH6L7bqOtO4Se5GnOh
cLbNsZMxNnA7pZ/ERtwcMpGzkndScg7Ku2QfB6kvVeKOVK1OSg9Tuq3UxZ2K
cVI4dgMn34x/U7I9Fe/fMHcNLN30F0TOyvqFgv8Nv9xo062dS8WYbW7cbj9l
C+0+bF6uXt12jgGpMSBj39wP5cqnXW/fsN9GffLUf0VPbrtv7C9IYdQN/ITY
SArnG3ba5uTEXm47x+D5jBtHK2NPjXFzPTGFpQ1/4daVNX6feDLBq9Sl9H/i
P6n4tGGnKX5yyhen+tA4e1Dhq0pucPqdxM7tcwzc/Kfyu2ubZD9U4zxJ8juR
f4MvNbg0wcBT/p3IytXtzfNGbv6bDg3ZTs+kMF/5rqJ7E69QYmdlvaaxH4TY
u/uuy2M3z5NM8ZyUXZyya9LPNk9r1Dwr7ypxa2PfFvndHVfDFxPZum26uuRy
9em77pqR+3zjHANi7w2MUuYitRbZxskb5H/Kfqd+prjZ8zq1RqP4oMa+rcZ9
o3a3wakUvu2u9U/5zMZZEO7vSq1aYz2uje3KPE7jdedIub+tfonI37Xr9plR
hKeR9t25bvjZ1L6txqV8y/XFqf6780jaV/DklO2nzjFIyZy8O7Wj1HtPYyf6
kMLJhj2meGwDE8i8KzwtxW2UuU7VwCs4T2pKb1srIVidij0VObfreBu2P/kj
9xwDVyab/F95JpX/IXVc05WqXyLyT63Juu+6867IudGOYlNujO9ijotdJI7b
XCshPrcde5Lzt12sTtm+goFkHlM1Ca5MCD8k+R9FD11bdvXttnzpqTOjbrtP
6fCkA0Serk88tVbi4qHrB93vKtygwXlcH63gT6OmhdQkpOzLHYub/yF7/xU8
n/qc0mFXbq4NTjrQwITbrpTeunrl4jzxES6uuhh4qlY5tUaTkgmxX4XHuvWo
0+8Tf06dge/iD4l9lJhoat8db0qvCJdorEE37PHme1cOJO5r1+RvxkST7bRr
blO21paJayMKjrkY6PZZ0WeF07r3bi5Oyf883yV4fkPdnWJ3ZA26YY+bezDb
tYhkrS3195tSc+RerkxSMWPbjhoySY3LtR13XSmlh+67Cp5PduTmcyYZpuoc
UrpE7E7p22Y83q7tb+wLcP2s8rsinwaOpWKx2+KRth3dlqNTbIdg++a9krdX
fNlkdy7mNGR1qu7O1Z9NvVV+b2M+Ge+kVw1MIDiW4pOnYsYGbrdlsukTCaa1
4yAyRiXPk5J/iv8r/by57u4GLufuwSTyTO3NfF7/AQ9dCYs=
       "], {{0, 128}, {128, 
       0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztnDGuZkcRhZ8YySK1WIElixwcImbEFoaQaJAhGsnyECAyZw7IWMZjAY4s
kbAMWAIJEbKEmJEInmX1qM6cc7pPd1dwR//8unX/6q6qr6ur+r5PfvvFy9//
6OHh4Q8/fvvPy1d//NWbN6/+9OuP3v3nd69ef/bz18/efvzq/9e7z//818OL
P3/9yYv//Pfj508/P/vuJ7/8zeO/f/HTb//yvc8z72E+V8aFjp3RgbkfHUtF
lnnOTN3Qz4xvML/lGAsTRyqdHXHniIWZPsN8r2KgyldHz//r4+OS6/N//O35
zx6/fP7N3z99gX5++hyG24w+6BhH9zA6q8auer5KN8Z2M3Vwj0vlM6pYqOiA
PifNZ9C4cDDQMSdPnz9aI1bxH9V/ND8Vblf8AdUBvUbrckXnim7ocyp5gls3
xnaV+FXp4PhciUfUZ1Sx4Oa/Y1yMzzD7KTf/VTnzaFwz+V8ZI6ObStYxP+j6
i86PKm+p3M/oxuTDFU6i9l2V5zM1B3RcFbvP5L9qXIzPVGxRyZ1QDjC1BYdP
ztwLVGzN2A5do9E6HjNelAmV+UG5UeEnOp8o85l8WBXXq/J8lGMz9/ur+M/s
JVVxitaLmPwQ5T9TN0BtgY6FuSrsYhiL5oTMPagsGvvoOlJZyxy9SFWepvJJ
R57JMNxRT0PtxXDJwX+mhqPiBrp2MLJMf4RhWqUu5N4LVOzFjBfNsZnPqG+o
eMKMXVUrQHnCcJiJTVWeyeT56HyiDETvGc3nqv4valOVzyTzX1U3cI8FvVQM
rOyJ0LxIVSurrHFMf5AZO1MrcNfZKmsW6mOVOVetlajPMLVQ1RlIlEur+I/q
gO4d0vjP1A3Qy81/pgaLMpmZH1WtDI0RdI1Dx86siei5iMqcVOahogPqw+he
m1lbR8+sMF9VZ0PZmMx/pj/L+IyDmar8n9kjq8ZSuVD/H33P9MpV/S9VroXy
h5lzR00J3aMxa0QlrlWxzNSLmHlj8limL4D6/yr+V35rlc/MzP8dPVwH/5n1
SzUWlHuOuhxaB3DUnVQ1JYYzaA7G8BP1YaZeVFkX3HPI1BAYLrn5z3DJ7TMz
83+3Pg7+o+sXykz0dx35j8rf0JwcnTe0hsDs0Sr6VJhfsQuTC6m4yvQRVH5b
GeOO+b+qx+Q4A+nmv3uuVLIOHdC8nckhUbug9XZmvWN6fIxvo2uWKm+v2KVS
D3TXfitzq8oHHLXEU/N/dI1jfqv5r32Oo34ymnOV/1e+V/V3VPUQZg4r463M
J3Pem/FDd+1XlQ9U/Ba1o8P/E/iv6rs1/+fzn8nbVXZH7YLuqUcXU+tg6iHo
nDP8ZM7Gq/zQXftV5QPM76LfM/6fwH90/h08b/5r51AVL0xcM/7vqDmjeb5D
ZxU/VexFfaDiS466intcjj5CMv8ddUU0Npn7HfOj0mcV/1V5u2ovgPo/szdH
54epmaA6V2oIo+dX7FKRTfN/1Zw4fFvVR0jjv2qP7IjN5r82jhy1FPSZqr4t
Wj8ZzY9j/lFWMPs4VW9ilf8ztT7VuFT74l3q/466oio2Vfa9jf9oHZLZrzF7
QKb+X4kRB/eYOak8k7EX05tY5f+r6gmOeESvXfiPxhqTkzhsdAP/GQYy+4jR
PLvrn0xN3sF/Zk+E2sVdT3b7MMoxRz3BEY/otQv/K7U41XkJh41O5T/Td0PX
CCYfU+Wrqpq8qlasynmYdVzFE7cPo+tXxZeYeoIjHtErmf9oLY7JzdA16Gb+
q/Iuxt8Yf1hlFwf30FyImZ+RLMOTyvcqP1T5raqeoNKNudL4r6rnoLmZav/L
zDN67cJ/d6wx9Vu3XVS9j9H9lbXPUYdh8n80l3b4IXp/ZZ1lbHoz/9FnVvbg
lb5wxdaq9f1m/qPPVNX3VOcf0Gtm70PV51X1JlT9lAT+o/WumbqprlX8R2tx
aE0AXQtU+19mntHrJP6r6nur7IL2YZmafCVG0HWE8W10PtG9icoPVeusI0aa
//W1mKn/qLiB6t/8f/9zGPuiDHTYhdEffQ46n8zedtU+19GPQ/uMI7sk7E1U
VzL/0ZrATG40/3lfRX2JYaDDLox/VuYE9U90vXCcU3Xzn+nHOfqMqhhp/r9/
LUb3CG5uNP99sqj/VHy18ltM38oxD0wOz+iWXE9jxujoM7r3JgwfVPZy859Z
cyux4+BG8z+zd4DWtB1+y8wDk8OraukMYx31tNHzK/c7+oyVHLX5/367M3t/
tEaH9uMqz2z+79U7UOX/jvow80z0vCWaL6H3qOppjF8xvQxVXchdT1ZdM/nP
7P2ZPYLDpqvyIke87CI7sinqPyq/ZerDqpqzSn9VvX0V/5k4Rfs4lc8V33PE
BXql8b9iX0f/123f5n+OLOO3Ff+vcBX1SVXcuXOemfyvzOcoTtE+I8oWdFzN
/3rMji60/4v6vGpf0/zP6R2o/H+kJ8pPR79V1fdknumwr6r/y3CAye2ZerLq
SuY/6jOMrVVnDpv/mbIO/1fV0pl6NRp3I1km51H5OZono73aiizTf2R0Rtcy
1bU7/0d6quq0qH2b/5myKv+vxEUlr1P1kR3nbdC4UOmjmrcKByr2rTy/shao
elWOa3f+V+Z5pCez5s7si6E6tKzW/9Gc03HGgNEfjR0mLtz6OHru6LqD9hyZ
PNO9F9id/4zfomtHRbb5nymr8v+K76nOG7j9CmWmaj7R32Lmitk7oPUExo5u
P1f5fwL/3Xs6tJekmh9mHnbh8I78R2Of4Qzq56hfMb1IRz0K3Tujc8X0div+
g/YHVf1E1bUj/9H1mskHKnZUndNDrx05vCP/UZ5X7lHVEBjeor+7iv8oByr6
oGc8KjqP9Efns/lf91tUZ9Vej+k7NP/34r8qt2TqRSr+M89x+DlqU7QXw5zl
Q3Vg+kTMnsvt/wn8Z+oz6Nlm9Or6f76syv8rskyd36E/WmNxP4exKVPvHf0u
OueqvrNqzzXT/2fyH11PmXUBnTcmD2n+78V/tC6N1nBQH3bEXTL/K/Vbd86M
1gQq9QrVnsvt/6v4z9RdmZiqXGge0vxfK8v4P+oPqnMgKv135H+FpTNzZsd5
kkou6l7X0vifZndUt67/ZMoy/l/RB71fldedxH+m9/30e9XcMmvTSB9Vr5kZ
F2ovN//R+Vy1V1L5avP/DP6jlyNv2Z3/qr6tw0/QeHfU9k/lv6peOnOuGF9t
/q+VZfxfZSNV7xLVP43/Kh9w+4mj74/a/ST+o7IJa6Xqmc3/tbIz7VKJHVXv
Mo3bbv4n+Bja93fUw1VztSr/H8mO7l+1Vjb/z5BdZZcKB5haUBq3b+D/yHZo
zQqth+/Of/RC62bN/3wO38B/5l0VtBaUxu0b+D/6Hj2XjtbDb+A/Wi91r5XN
/zNk3XapxDJ6f2WMadw+lf8V5lfYVbln5vmWNP7P7K27fckxP24/P1XWbRf0
7B96npzRv/n/YT5WYTtj94TzLQn8r9RLHb31mXPe/F8r67DLSJ9KHxDdw+7C
7d35z6zRFbunnW9J4D/6rtzM9+aa/2fIOuyC1irRfFL1XmHzv85V9IyWqv+7
6nzLKv6j/o+uy83/lnXbxbHHV52dRuct7Tkz44LJ89GaP/rMBP938J95t2Lm
XDX/z5BV2QWtVap6Urtwexf+ozU3Zo1g7kHrgQ7/d5z/r/gP2kN3zFXz/wxZ
lV2Ymu2q8xvN/zrbmff1VGdXZp5vSeN/Je5mzlXz/wxZxi6VGEf9dpX+t/Ef
rcu5ech8Hung9p9V/Ef32o65av6fIavy/9H3aN1gZvzexv8Ko2byn8ld3XOY
zH/0XJBjrpr/Z8gydnHs8Wf61Q38T+Ph6H60v7nLeFV2Z/Zujrlq/p8hq/L/
iiz6zOb/Gfxn8tvKuNLGq7J7Zb/MnKlIYE7zP8cWjN9WfLKyJ2XyGVXcJT9n
Ziyg+qP1wIqeDMd25L/qbL97r9T8P0PWbZdVfeE0bt/Af5RjlVwX5f/M/aOj
bz6SRWv+7ncBmv9nyDrsUuEAus9F9wJp3L6B/xWOje5n8l5VPZwZryr/Z2Jq
5nsTzf8zZB12UcUsU0NO4/YN/EefX+n/ojkDUw9Hx6viPxNTqvNUzf87ZVV2
qeQVlZhV9YXTuH0D/1F90Psr7Kp8rxqvm/+o7Wa+C5DmVyrdbpNV2YWp/Y5+
F401VP/m/9o4rVwol5geNDreBP4z6wLjJ8l+tSOHd+c/U/ut6MOsIwncbv7z
OlcYyNTJ0fGu4j/KZ4efJPvVjhzekf9unSv7d/d7N2nPmRkLqP6qq1LPqTB/
pL8qf5jJf9W5JpWfJPvVjhxu/n9Y/rYLt5v/9Uv1LnllTlTnNh38d5xrUvlJ
sl/tyOGb+Y/G0ShGHPqnPWdmLKD6q/RE+5hobu84t6/if2UeHHuB5v+dsoxd
mN9VnfPfhdvN/7o/MNxG949p/Hefa1L5SbJf7cjhG/hfqfPM9Kvmf06cqmo+
KIcT+F/huepck8pPdvGrXTh8G/8d76Q49E97zsxYQPVHL5SZaP1n9EzVeN37
iErOr+oLNP/vlGXsgv6u+4yoQ/+058yMBVR/lT4jnrt7oOh4Hfxn1qmZ7/Om
+ZVKt9tkGbtUfnfVuNK43fz/MH1m9kDR8c78+w/o3Lrf503zK5Vut8kydhn9
buWze1xp3G7+1/UZfe/ugaLjTeM/U0dt/t8py9jFXc9v/t/D/wrz3T1QdLwJ
/K+sg+g7Ec3/e2RV/j+SRf1QNa40bjf/f6gP09909wV24T+ad6nqtGl+pdLt
NlnGLm49m//n8V/1d3gq53/c413F/9FaWdFTVadN8yuVbrfJJtul+X8G/yu5
fWXemPe/HONdxX90jUP3Tc3/e2ST7dL8P4P/FQ6j9ziYho53Jv8ra2jlfqau
m+ZXDt1uk022S/N/X/6jdYbKZ/TvAj3VB90LpPG/0ttl9laozzT/z5BNtkvz
/wz+q/q5I/0rNXB0HhL4X1kH0fo/87tMv0DlV26fv0022S7N/335r/rbDqNn
us+SpfF/1dnOhL/TMtPnb5NNtkvzfy/+o/PA5LHufmUC/1ed7Uz7Oy0zff42
2WS7NP/P4//TC83nZ+bAq/hf6XeMdGBqNav4k8CZm2WT7dL8P4//ldpChV3u
HHgV/2ee7UTXiFVxOtPnb5NNtkvz/wz+j7g9+i1Vj5jh20z+V9bEyv2Mzsl/
p2Wmz98mm2yX5v++/GdYrTrnyfBtJv9nnu2ceV5oF87cLJtsl+b/Xvxn+oaq
c54qvqXl/47e6y5xOtPnb5NNtkvzfy/+o89H815mHhz2mpn/u+2bHKczff42
2WS7NP/34j+jj/ucucNe7vy/omeCzzT/95VNtkvz/2z+zzxn7rCXI/+feW5n
lzid6fO3ySbbpfl/Hv9nvsPLPGcV/2ee29klTmf6/G2yyXZp/p/B/0qdx+0P
Dnut+vtvCfujmXE60+dvk022S/P/DP4z7/Y6xrIL/1dxIC1OZ/r8bbLJdmn+
78t/tF5d0fM2/q+ydVqczpyH22ST7dL8P4P/CX+jwGGv5v+cOJ05D7fJJtul
+b8v/2eeh3HMSfM/J05nzsNtssl2af7vxX8HVx29zub/XnE6cx5uk022S/P/
Tv4nxEvzPydO03zjJNlkuzT/m/+r4qX5nxOnab5xkmyyXZr/zf9V8dL8z4nT
NN84STbZLs3/5v+qeGn+58Rpmm+cJJtsl+Z/839VvDT/c+I0zTdOkk22S/O/
+b8qXpr/OXGa5hsnySbbpfnf/F8VL83/nDhN842TZJPt0vxv/q+Kl+Z/Tpym
+cZJssl2af43/1fFS/M/J07TfOMk2WS7NP+b/6vipfmfE6dpvnGSbLJdmv/N
/1Xx0vzPidM03zhJNtkuzf/m/6p4af7nxGmab5wkm2yX5n/zf1W8NP9z4jTN
N06STbZL87/5vypemv85cZrmGyfJJtul+d/8XxUvzf+cOE3zjZNkk+3S/G/+
r4qX5n9OnKb5xkmyyXZp/jf/V8VL8z8nTtN84yTZZLs0/5v/q+Kl+Z8Tp2m+
cZJssl2a/83/VfHS/M+J0zTfOEk22S7N/+b/qnhp/ufEaZpvnCSbbJfmf/N/
Vbw0/3PiNM03TpJNtkvzv/m/Kl6a/zlxmuYbJ8km26X53/xfFS/N/5w4TfON
k2ST7dL8b/6vipfmf06cpvnGSbLJdmn+N/9XxUvzPydO03zjJNlkuzT/m/+r
4qX5nxOnab5xkmyyXZr/zf9V8dL8z4nTNN84STbZLs3/5v+qeGn+58SpSv//
AelC1G4=
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}]}], "}"}]], "Output",
 CellChangeTimes->{3.773326579233253*^9, 3.77332904041077*^9, 
  3.774171804350458*^9},
 CellLabel->
  "Out[121]=",ExpressionUUID->"6c39339b-d645-4ca8-9601-4d1d479cd785"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomSample", "[", 
  RowBox[{"fullTrainingBigC13", ",", "20"}], "]"}]], "Input",
 CellChangeTimes->{{3.772355752786458*^9, 3.772355821872775*^9}, {
  3.772690743490674*^9, 3.7726907773276663`*^9}, {3.772693549217153*^9, 
  3.772693602628367*^9}, {3.773129897972353*^9, 3.77312991704902*^9}, {
  3.773215225791395*^9, 3.773215243291334*^9}, {3.773295042430605*^9, 
  3.773295058617936*^9}, {3.773329034384303*^9, 3.773329038122735*^9}, {
  3.7741711060775537`*^9, 3.774171106157587*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"6e56c0ab-7765-474f-8007-ce3075da2b40"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1jGKZAUUheFGQUwNXIBbUDGSadzCmBgJLWg0IIyBGAgDgqHbEEwN3YPb
MHIPzoCBkVB0vX7/vfUFSnuQOnXrVr37ffDVt8+/eevu7u67d1//6/nD95+9
fPnww+fvvPmPrx9efPThi7df//nq33/e/P3THx/f//nb+/e//vzj/S9///7s
00++vP/ivb+e/Te/9P95zGs+5j08putar3mtz+0x816r61q7K+SXvs/y9/bS
nV6r69J5j/htPuXftefA0X+f9Rs5+vd+rft1rd5r/XZqXUe/5tF3sPA+j9jp
Wb/Ho3+bE5+N19rj0TNuej4cYbajZyx8Pkff3MJztfY+j/j+lL8Dt/BsPGKP
hRtXfj7UbHYLn8+U52o5f8obV3PXpmfj0Xus3bjy8+Gs16y955r95L4Dt/Bs
PHpfZ9248vOB//l/Yr6pq9B71rPxKfdVuHHl58NZr1l7zzX7yX0HbuHZeNYe
j75x5ecD/zftJ/cdKNzTo5+NhT0+5Y0rPx/Oes3ae67ZT+47cAvPxtp36awb
XbiJ/M//5XxTV2HGs56NhRkvnbfm53LX0b0TP5/Cd35TPrGrPONZz8bCd6lw
owv75X/+L+ebugoznvX+a7PUbnRhj0e/Zu091+wn9x0ofM5Hv//ajPzP/1Oe
J7eWb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385
n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/
zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//
+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385
n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/
zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//
+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385
n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/
zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//
+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385
n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/
zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//
+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385
n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/
zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//
+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385
n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/
zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//
+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385
n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/
zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//
+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385
n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/
zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//
+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385
n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/
zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//
+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385
n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/
zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//
+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385
n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/
zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//
+b+cb+oqzMj/zRtd2CP/8385n9hVnpH/+Z//+b+cb+oqzMj/zRtd2CP/8385
n9hVnpH/+Z//+b+cb+oqzMj////e/gE+8hQ0
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztnb/KNU1WxQcFEcHURJMJTDQRBSOdDyMDMw00EkbUSBBGRUxEGMRb0Esw
8RIGb8L7cQZEnqRk/fit1V3nG4Pnpd9DnTq7du0/a69d3f3dP/vrP/zLn/nO
d77zNz//43/+8Pt//3s/+MH3/+GPfu4n//mL7//Vb/3mX/3sjy//6X/+fnL9
Cz/6u2/+/d9//Zsf/usff++ff+lvv/mH//qX3/nl3/7Tb+jnpzFmfEs2Or9Z
r1mj0UNrzPrzhZxvyUyvW/M8ub8tn2rJufaXls7X8aEl549TwP/+/ep//Oh7
v/+Xv/HNf/7br0Sfn/6+jk++exqfzJN8Tudc/FF5nrw2NtDS/2KPFjJ/Hf9r
f/Arv/vnP/zuN7/4j39yvE7kTOY5zfmWvzxph0/+rtH5k/HhJLOZ8+s8p8+/
Xn/NI6fvJvN8HXPKZVRmOudpXeaarvHJa2MDLf1TOZM9SmyMynz6/Cum+up3
Xz9P5jzNc5ozkW3hL0/a4VqeZE8TnZsYYmJg6/NW3WHmTNb+VVfJnMleJPZG
sdl6fnNt9Emvk99t6bBVU1N5TrgrGd+K24lu1/vVskP6ufldmoNOe5HEsYVt
t/Rm6g5q59Se15iB1iMnbJbowcxv/lr6pNfJ7xodnvaxxSGYPJ7gomSNCV6i
Mrf2a2GH9Lr1u0mOSHAC3ReTHxe1jxm/wP8LzJDsr6k9Ez08WWsn9WnLxgw3
mOiQ/m4LD9A8TvNFEttb9ZTZr4UdtnRu7N/gE1pLUttu2WorTlI938xDJlgx
0XkL/y/q60V9RO3kZPMURyW4jnKJFFtSDE/33WCSFt5u8ZaJDSQYfs2xtDD8
6bsnmz/ZNvW1dc1l9vdJ3riF2SjeSPad1u+mvl7UmIld0ZxoaqUFTqC/dcLw
SewydpWMobkp8bXEVo389HPDsdBYTe2Wxs9T3jc4Z801GWz/JA+ZYLaEpzV1
9Fv8nqkxzX4Z/zrtC+U0FtxIC4ev13KKSxQfmly84CWozdAzLck8LW6KxrS3
4kCyL+bs0IKHpJitxSGvay7D+dAa0+QsuqenfG36Jgs/WuTKxVqSfT/l1oQX
pf7S4iUSjEcxv6kdKDe16GWYOGD6I9T+qQ1Q7o76r+EWWnxUi9+j/NXiXtRW
LE3ilcEJ1I9aGInaD10Lldmc627Vgy3ONpG5xe2YXkOrl5Hcm0B1SPMXlTmR
c5E3W5iWxmdT0xlskPjpSZ4n8xq1hxaXSOviVo5I7Kd1Tuwks+klUZ86jUm4
qYSzTTDAgvM39QK1W/rdJA4kHIixPYrTkt8ydZbxzUUOMnHe8FS097HIaya2
G94p+S3DURiOmu4ptfO3zh4n+k/sh8bhBedPfcdw4Os4RtdlbI/m3BMuavGr
Rs8mB9F9NLwWxb2L3ofJR+vY1cJ1tB5s3c9FawpT469rQIrnk3jV4vyT+Ekx
f4IxKI4yMdnYpIljLR7J8Dl0L2gOMni4Fd+onZveh8kRC36S1hoJrqP57uT7
lPNc5LLEbhc1oMEqrbPlhotIMC09N2XwLdU5rUNbttrCkC1carg4Gm8XdYqp
v1r53eQIgydpzk34T3qfjsnpLX8xuWzNBSU1FMUqhg9PYnWrZklirPmtFl/6
Vhxo6cHEHDNPizcwfIKpBYw9L/J+gifNWXQaTxb8W8tfTuPNeZVWXk4wfJKj
k1jd0vNiH00vgObT0++2avlWHFjUiU9eJ/5CeQMTW2i8WsRnE8foGunak31Z
PKNp4S+mFqD6pHmZymB4hoRPMxyg2UfKFSfym/1d5DUaB0wcu+Ga+pqxVZMj
FljOxOeTzZgYSznbxK4oN77GPKauN7XDun5pcbYJ3qYcIOUVT/Zs8iw9z7/g
VdZxIPlu6/zhum+V1N2JrS7qMoPlFs9BNfxDYieJHmiv0OAo4y+tut7U163Y
sj6zbfCzqfsMZjjNk9QONDYm+7uOAy0uvYVPWrErwWyLvGN8jcYi47Ot3rrp
byZ5geLqBX6mMYfqyvQfqa1SDsTUfScMRu3HYN3WOV6qnwUmX8SBFv4x+GTB
DVL7NHnH8I1Gt8beaM2SjFncy7++v6DF9Rl7pvXpIh+ZfJrk98QOWzZAY0KL
r3sS35o4QGOO8bsWz2MwUoIHjJ1TvvFJ3tXkTTNnUiOvOX+Kn02sMJg8qU/X
Oa5lSxSz0brvLc7B2Mk6j9B819LJopdEY7jRj6nZT7aR2POad11g+xbH0sL/
yV6YnLXwwWSvEzts5TgTN064PYnh5h4xgwHotbGTRR/zyRj+ZC/JcD6n2LvI
0TQG0lp+UbutMQ+VjXK8pv5t8RtrzGZ6KAu7au11cr+e0UOCAegffR5Rq4ZK
OOR1DH+yl2Q4H8OfGzsx8fM0zxpjLzCP4d8WnH+rb7jGUTRmmvudW7VeK/ed
8H+CJ829wDQOn2KaqfsMn0x/y3CPBku0YnKin1b/18hj4kzLbk1Op5jH3COZ
xB/D9yY5ZcEbLOomyqu37MrgH5MjTr9luBezd2ucQGNpS2azrkUvaTGP0TmV
5637UqmNGcyTXFP+baFPmpcNb0BtjNZNCa/esivDVxgZTB/E5JcW1mpxxWtu
36yL6rOVNxf519g/9eVWP5firjUmSfbIcPWtPVrzBnTtrbqpZVfm/FsLy5lr
qivqv62aupWbTN5p5ZdWj9LI01qjef7Sk/elPqnzda2RrHF9v2erJqVrN3VT
yx4WvArd61bvgGKAJBe3eHJjk6fxtEe54O5MP2uBaekaE/s3sYvqZP051XnL
B1trWeD/G+prynsYHT7Zp6P5q4U9TH1xyr8Ga1GbTHLTzbzKk5h20ac2/vXk
c9oXOl/UZS351897SeJPq76mcan1nJDEztc1Uavv0MKfC26T6p/mJmO3RreL
fkcL05q1mBxkcN36OtGhqX/XdmVqtFb8bNXXLd7D9FlanKSR2ZzFug1HUZun
7xdo8XvGfxf8Uuva9GgoJ9DCdS3dtnT+ZP2brJ0+K4P6KeVbFnGjxXu09oXa
vKl3WhjsLRxlbJ7WfRTXPcmr0Hme3ItEhhO2bM3/Foah9rPAnCYmL+y5la9b
9dc61yzszdQ7Cf43fZkncdSiJ/L12jz3j96bvKjfE9kWe2H4zNb8LQ6zhbVa
7yyg+kzmOcVAc6+94aJpLWDqr/VzUVr21vIdilepzaxxVCtWJPmL8v8LHo/W
71SedT2y6GEZjL3g2SiOfZKXa+nwLR6mVTvTXkYr17T4txZPleATw5+0MFUr
Npr81eLBDG5f67+l2zWv0sLYrbxm5KSxd82jtnqCLR7GzEP3dM2n0fGLPEh7
AQZjm/7aIhZRrmDBe1Pcnqzd6H8R3+heGD1TjL2u001safFyrTolsasFD2Pi
QyuPt/g0Or6FFVu+Q+dcvPN0EYtOdt46d0d5vBZflOh/ne9avMoCY1Pu3eRr
6ncGu7byOH3Ge8vvWnxOCxM+iYsWWNHISfcl4dBa+m+NT+zwhBsTLjHh8Uwf
jXKYp+8+ec587eNJvmvhSarnJN62OMZ1PWWw8anGoZizhVdbul3MSbHik3wy
5TDXeN7YNuWKKS96ij8tnJ/4VxJnknz3Vo5uyWD4z9Pn6+ctU0y4qKdaed9w
2q3eNI2NT/Z5KVZc4DfDNbXy+6K2Snz/FANPcfukZ1PLJzjfYH4qz5N7Z7A0
tYcW/0bzKZUz8bVFPdXyL4N7k9jy1jNYWn1eihXX+O2Up4xdterHVk5vxT1T
K1Gcn9RW9P7lhV+0YrI5w2Nyh/mc5kqKtQzvYbjZFmee4N4TBqY5wuh5kQdb
+GQRxyjXRHFUS+fr3orBinSNlM8/8cZ0H1s5dBGTKbZ5yx6obRisZXgP813D
e7TqlAQbL947/xb/v85ZJ53QvmQiD+VF3+qtrHkGivOTNSa9jMUzdRd+QXtG
xpaetA1aLyRxL+E91pxJMr7F/a753mQta/7fYAMTPw1uobxQwpm38D+tMY08
JuZQeRJuhOIuE8NbfpH0jE72k/yusYeWbSTrTfBzsl8LzoTGqFZNtIh1tA41
eZDGW8PDtGIpzZuUJzf70toLYycmni+eGW6wjcnprTF0fAvXPWkbtN5Jzt7T
eGs4E+PXNOYs+L0EO70VV+nzh9/ii0w9S23e4H+jk5M8Bh8+6SOUr1hjjAV+
M/2XVtxObCORn+L/ZH4T08xeGCxNcYjZu1ZfbJGbWj7Y4osMP5nkOGrnxm6p
b1IbNnym8RGTjxYYY+EjFDsZHT5pGwYLLeyQzr+oI1pcNMWub+Um8/kCy9E6
N/ldihnoPtLc2srvrdqK+oiZf4ExTC+gxfud8IPR4ZPYL8FCCxkoJjSxq4VD
1lzoOje1rhfP5U7qXIO7zDtDW5zJaR6zX2v+zfTpDCZZ5CCDqUx+NDpc8xKJ
Hy3OPi3iUsu2DS412HuRm1ryJ32fxV6cMF6CVYzMrVi0fjZaCwMv1m5y3OI+
7kWtushNa14iqV9MnbWoyxax19QLRj+tvU44iqSPf/oz799c7AXFNlTmVixK
8s5pLXS/TJxZrJ3WsFRvLd679XmL4zXymHptzXOausz8LeoFk8dbtkf1f8rv
NE62sNO6pjvpkPoIjUW0pqNnzlsYuFXrneShz48ye/qWvZnrBUdH6zW6py38
tsYqVD/rvts6ThreL4mT63OhrZou0Xly/ofqLYnhiR0ubIZyy/R8MsUGCc9g
4sPa3ha2anIExRW0ZmnFK6MTo2fK27TWSNfesqWE90vizJr7Xdd0VM/0LBmN
z/TZaE9ikhZupHie5tm37G1hqyYemj4R3SPK9S34rmRPqfyU92it0dhtq76g
nHOL+13XdIt5TF6m/AmNpSYvLHDjCdsnttrC9jfwkK1cltgkvT83wYpUt0/m
u1a9kNQ763fwUbulsddgCcr/n7CuwQ+GG1lwLElebmHaJJbSXLDAjcY3Tf1y
4qxa9rbmeVp4ktoJxT/m3NoC/5t6oYUDW/3r9XPwjN/R929SfEvjaoubMpjW
YOyWzZvap4UbF+tK5qHcEbW3Nc9j1r6wE8NzGoy9iPMU07b0QP2Cfnetq1Zd
sHh+zkke8yzZhGMxGGbRL0vk/xqLaC2wjmMUhyfrNb31xXWLo1jYiYnhFDMs
bL6FaW+o+97CjSZfn+qChPdu+cIC/7f454X+jcytPLtel+nfnWzyyefzr/GY
sRNa15/qmtNenPDGon+6yONP1n1079Y5tJWvT7+b4A0ai1r4v8U/P6n/Vv9i
7YOtswqJnDRGteLAGo8Z26McxUmHiS/TXPykDg0+XOOlFgZYcGIG/5j43Krj
Fnvxlv5vsLfWulp7t+Cx1/6+wP+G30jWQt/jdsojSY2wwB60x7qu+1rzmxza
qgcTn0p8vBXHntzftf4XPf11DZ58nsQZc/6h5WtPchQL20vG0/zYwmyJDAZ7
mDUmeWSRm0y93IqfST2YrD05L5RgicRnk9q/tb9P6n/B5695DKM3s/akD07X
vo7zCx0afEVz4lv8SaLDVk1k5FyMb3Eja27B+HgSu8xzCW7W/5oPae21WRed
3+A3uvZ1fdSKvV8/N/hqjU9a+lxcr3sQrfGtPLvAPMbfKcagsbGFJd7Sv+FD
WtcLLoLmrFZPKtnfJ3uUrT0y+GqNT0y9ubhuYdEb9r213ttydNI7Tp5L8GRs
bOk/4bJMLl7ETGpXyZwJl9jishLdPhkfWrUVleFJfJKMp2exkp5v671UN+z7
SVf0WbtPPtciWVfCZ1IcspCzpX8aD00t0IqZlIugMeG03qQnZfiuVj+iVU+1
avYkr63xSSsv0HloH/Mt/G96kXSPWueyTF5O/I72kU3P90n9U52Yc7ML/p/W
BScbS9ZLsXqrjjO1wCLutXiwRM9rfLLAyUa3b/V9Wljltu+28mmCVVq121qH
lKcyfc/FvrTiJMWfrf6OsYeWzlsytM5mP4lPFjh5YfOmLl7s+wLnLL77ZG+u
dU6eymb2/UmZ1xwXjZNJfbeO4Wb+1hgjw5PnHFr4pKWfVh8z4Y3f6guv7edJ
/2rxzC3Of40laO54UuYWx7Xme81eLLDH4rrFDyzWsoh7rXlovymx+dv6wou6
Y/FdGoepPdBeALXbFpZo+VdLZuN3NM48yYebOoX61OK65ZstHrtV47TkbOWs
pM97W194UXes8f8ph6512LJPgyWMDhcyvxVn1nw45Yha2MOcZ1jjN3pNZbvh
2uTTxbmIdX5fxIqF7SXcIOX9bqjHE2xAse4N8r/lpwZX0L7kzXpb9HcWNfi6
9jG+b/Z6cXbltvxufI1+t8U/3FCPt/LgWzLTeuEtXbXwSWJja07mSZ6H1hqt
dx61ap91v8n4At3rNT/zpD8abmqN8Vq+0KrNTb35lu98lfktXbVsmJ4dXdwX
nOzpwtfW+HaBjRc46uvn5r5Cer3uC98QuyjuWnD7hpdb2N6nXN/gp8aejQyG
h2zFWDPnol5YY8K3cn1iA1/tysj2dZ5F3LthHroXhuNd4J91rXQDF7rQ4ZO/
Rb9LbYye+1rHzyfj/AJr0et1rk/Wctprc/4zsc9F3FvPY3yT1lmLutjYoZFh
zeGs5afrWsSxBJ9TG0v8cV2rrvn/tQx0/nWupzaT1IO0Z2R4/kXMWfi+0fOp
znqyP7Ko31uYdnHd4hZu4DHo2Z7W/C2s9WTeXMhA5zfv0UtyfbKWBIfTZwKf
5KE8fyvu3XD+n+bQk/4pTlvY4Q0Y7Emeap2DWrLR3ETnoZghiZ+35c0FbqH9
lNa9IYt5TjZweg8OjXWUF3ry8xY+TOLtgutb2OGTGOwGnsdwlU/moPX5k8SG
Fz2+JzFJCxOuz1uuufEkdp2uzbnZ27gCqudWjqa5+Ek7fBKDtXLfOlbcwP/T
+RNb+roWaj83582FDIZXMfbWwl3r91oa276NK1jkaMP1re3wZt98Uh5q20/m
IHN9igOJHdJneryVN9cyUOxHz1suuPGFbz5pq09yBXS9hsMxZ/Badmhy39o3
34oVresbeiUJhk8w/yl2mf7Xp/D/5hxOct5ycc9U63xvK34aXbWuW+eRWnwL
1cPCDlsc0ZoXWseK23gMg3Poe9/MOzdb75W4OafTcziUS29x4zTXm/jWsltz
VmrB6Zm8aXg/c/6K6jaZ8y3fvG18Yttv5cTTdxM+n17THgH15dvqqWRfFj1N
ikOSPEXzsqk1jJ0n+lxwBcnnJm+eaueTT30dk/RraM46zWk4otvi9reJ/6cx
c4Enk3Mg5r0S672mccNgUTO+tUdrjsXkkbV+Fmuk6zXnglq8Df1uoodPidut
8Qsst5bNxKWW/xrc1dLPOtZRjLToRZ5wHcX/6zy11o/xC+MjNBe3cjrFYKfv
mrrm5rj96fz/bb755PWn6JP6qeHS1/Is8lRyveiD0HpwYbfm3tskp1M9J/PQ
vW7VgDePP9nMW2eTnvTNJ6/f2usWb9w6z0PPlhh5qAzUL+j5BIPHTH4052oS
mzF5jfbmaO+PxsBPOePRGn8D///keYwn/97a6/XZG1Nfn9bSut/W8MnG5pOz
BAscnnye3OdiarEk59LPDf9Pc2uSU1o5+rbxCzts2W3LN9+6fqsvbD5vzUnx
tulFJmtJzgG26n06z5r/pLkpydeG/6d2sjiDQZ/vfcMZj3WseIvHaMXSn2ae
5+brtT4TH2/xFYtrUz9SvSWYNqmtDE5+C59QHum254uuY8WTPMba938aeJ4b
8h3du5Y+k1r+9F3KVyyuW7wr5W0o3qZ22DpLtsAeBtu36tPbxr/F/y98/y0s
d0Nt+Hav4//aO8OlJ+tNzo0YeVr6afUWTZ+XxoSv8ifjKb+3xh6UR6Lxx+Sj
G8a3cmvLr43vmzr0E3meG7iLJ/Mg5aWpbAssQeUxcds8n8Hoh/oO7UdT7EFz
TWuvb44VrTr3rRxEfT+pQz+R5zF2+Ol50PDPBldT3Zp1tXyEYng6P43hiWyL
OHzbPYO3xYokNr4Vl6jvL/oIT+LbT+GFnpQ/yfsUy1EstOC0W+cZqB7o2pO9
OMXwkzyGS6c+nsQKihu/Tfj/Zv6fnhs374D4xL1r7ddteTDxXzqGXpv3xC1w
CO2ztHTSOmNJ74MzejjN/+Q9g58SK8z1Oi4Z30/s5AZ8+9b42/Jgi5808yR8
BeW0zV60+C6D+emYRIfUNmjt38qPpp9+s+9/Ch6msrXw4SfyPHT8bTwPxX5U
5tM85j1xSTyhOIRi5hvOAFC+iH43eTfHmvcz7zm9zfc/BQ8nsiXPA2zV47ft
3ZP111p+mtMTmU/zULxtOOcEhyT4meIZUzct+HaKu8y1ic/03QG3YWaTo2+L
A+bsHH2f7yfu3bdpfJLTDW5cvDPO2La5x4r6y7rvTzH2Ah+2eD8qj4kzN/im
uV7IluB5mpta9fJte/fp41tnes0ZD3qdYD+Ko05ztnJl65ry7Ys40+IQ6D2D
yX6ZOPMpHPtCNnN+jNotrZdv3rtPH2/O9Ca4uoXhTzaz4IQNl77gglp+tIgz
ye+2MORpHnNPwQ2+eYrD61om0Tk9o0Vz3Kfk6G/TeHOm92Sfb2H4kzyt+GZ4
b8MFJfu14J1a+H/xvFDaV6K/dQMGo/inhfeSWmDR3/mUHP3p46kNnGJs4mtP
YviTDC1OmHLmC06GnoNq/ZbBrubc0aKvtOhrLHxzIVvrHEWrv2POD9wWV28e
b/aLxm2D5SiGN/b51lnNFudD8f+CT27lfYNVEpxP48m3if9P8mYLK54wAH3H
x805+tPHJ/uV7BH1NYqfE1s1PMyTZzUTnSf6p/g/qeuNXS3ez5jExtb7T2+L
LdQ2qA4pB2vmpzjhU3L0J45P9qKlf4OxKa5r4ajFWc0WBjb+aLjfJC6tz3JQ
LGp0e0NsWdRQlKelazH4ZMGP3RyH3xp/qsVavKjB2KfvmmdFJjF8fVZzfZ7B
yNPK46YHZOJw6/OTnbzly4u4d/KpFt9uMFirBv+UOPzk+JNvnvDbwjdpDDHn
OpLYSz+/zQ6NPJT7pfvSOsuRxOFFTmzVEWZ8y97WvVR6neAuWoN/Shy+uZY0
+5iMp88DoWc51mdLbrNDc1404X5P8qyfz5nIafLgk3VEK65Se0vyCJXB6Jny
PAbf3hyHnxzfwvMJ907ri1M8SeY3faWFLT1ph62+ajKnieeUX0p+t/VusgWm
fQuztfhzukeJnhdnkm+IqzePN9d0H0++ucYki/dGrWV+ixeiecTE84QLMvZ5
qlNaPdBWHfGkLz/Zc6f56HSOaO2bP23jW3UZ9bXTmOT8GF1jIkNSp6z99DY7
MXMm8fyEE07fPdlGK38l60rWYuqINf+fjGn13Bc484beyrdpPLVb8xw/0581
tp34b+uZJAsfuQ0PGJx8sj0qP70Xex1zTB3xVu4+6bN1nrOFOVu+f4N/3TC+
ZasJZqZ87Pr5AwvMv/CR2/AAnbOV60+yJdh1HXMSmd/a00TmpC42fUCDORc5
7gb/+vTxJ9ugMZzGB+OPXz9vYf5vE/6n3Gwyhuqc9g7o+a5WzGnFqCe5u1P9
TjFeC4PR8a08fnNcvXm8wRvmrCY900vtqoX517q9Yd+Nz5pagM5p+rzmt26L
ReacW+vsX0v+Vh6/zb9uHm9iBcV75ux9a55F7d/S7Vv7TtdOeyuLd7eZnJ7I
n9j5DbGI1uat+sLI3+qz/H9f+BmMSrnEpBfQ4hlaeH5h5zfvO8VXpreyuKZ8
YAv/0/OKiz01tQnlWhd1dAtr3exfnzI++W6CwUwvgMb/Vu9gYec34/+Wzy7e
0ZZcm9+i/awWFl3sabIXyVm+k8zm+ajU/inWutm/Pn18gg9p7Wb2jta2Se/g
5BfGzr9N+MTU7wlOpteJ7Z1+i+5jC99SXp3O/9/3BIzz
       "], {{0, 128}, {128, 
       0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztmrGKXWUUhQcFFSxFrBWsBAu1scgMvkLiC4xBq4AQQVEQBF9Ca6tU9r6C
rxDEd7CyMwGLNBfOzv/vdb+75ysiK8Px3HP2WXut757Ju198ff+rV66urr55
49l/7t9+99njx7ffP3jt+V++vH308UePXn0mf/r/z3P92x//XP/89+v3bt/5
/N77T3+8fu/q6fWvv7x98+LPV445dfyRn1ePOXJtK3rXfe363Oq9V8+TfI7J
59J9fPXaOu63ur8du7Zyzo5d7pj/uXy4636fVcDN7j8Pf3jz5tOH3978/u+H
J3X1+FP6g0+eXL/11+N7D/58ct1x/l33VZ3VqWNevN8j9149z5Hz75rzufxz
5L6qx3df/4pnjsz5yPmrfques2OXO/KqO7s6cmblWVTz4cjPqznzoj7SfSvn
X7nfjs86cl8vHnNkbqf+3yPHrDzHlWNWPveIZ3Z5bNf179rHFR9W53bkXqp+
3uWxXT9fyfDqPFdyproX1ee+K6+qObYrS6tzqO5g8rM6ZrXSTbu+syf9sysn
d3X6yj6u8MAuNuvotV0z6fbwLr9Vd6G7X3Y9u105Vn2mHT1C+KwO/l/h3nN1
U0fm72KAXcfv+u5Z5fMONtvlve6M6vBVx16cy9u7GK/DY6fut4PJk5/VkbG7
9jfZTefi/5V+XHnW1fMfmXlHp3S8M0xmVNJXu/h2V352vFc/l8c6enaF+Wn8
vyvTkt44F//v8kl3XnVwZke2rPi8I6PuMv+vdG5H/iR9u8LkR+Z5Kfy/K6M6
vLHLh93fBXb1QvUaqj7s5qhd2bLCA0e80Z1Ll8L/K98F7hr/d7NWkv+737t2
eK+Dezsybdf71VPX0JFL3Rm48n2n+7v5XeP/FW/v4t5L4f9dnUvm/w5O2/Uu
uoN7k7vZzVQdnJnMlpW9Xsko+T/fifL/8c8ivGM517to2u/jdjHDLqZKdlnH
9exi/iQXnUt3Z1F3J8r/L9fp3T7f9Xu07hyj7eMKMxCYv5ujujsoyUXyv/w/
if93ZVf3u+jkZ3XsZse/HyBk77k6qPqukpB1ScZIPgv5/3L5/9Tcdn0XuGs6
+Y7iXNl7rnl2/A49mUvdjCH/y/8rHbRy7wRepWVmxzsKQpcl+b96PbvepxG6
byUrkjwg/8/g/yPcRXtfTdPJdxTJLiNc58ouyP8Zb5/rnPL/+nOvcld1v6bq
Xf9GhTZDwnWu8Bghl87Vg0lvy//z+P9SdoGmV97/EK7/0vl/hUnk/3wOyP/H
Pyv5Dpm8CzR95HvTkZ/T5kl47tXcI2fduXqQlgPy/8t5W/6/LH0pv+et7iYt
93Z1KJl55P+8b+V/5i5coibk5y5PEvj/LjOP/N/nW/n/snaBrI+8/ydcJyFv
CX1EZh75P+9b+Z+5C+oZeUvuI1r3VbMiOX/5X/5Xz9DyP5N55P+8b+V/5i6o
Z+QtuY9o3VfNiuT85X/5Xz1Dy/9M5pH/876V/5m7oJ6Rt+Q+onVfNSuS85f/
5X/1DC3/M5lH/s/7Vv5n7oJ6Rt6S+4jWfdWsSM5f/pf/1TO0/M9kHvk/71v5
n7kL6hl5S+4jWvdVsyI5f/lf/lfP0PI/k3nk/7xv5X/mLqhn5C25j2jdV82K
5Pzlf/lfPUPL/0zmkf/zvpX/mbugnpG35D6idV81K5Lzl//lf/UMLf8zmUf+
z/tW/mfugnpG3pL7iNZ91axIzl/+l//VM7T8z2Qe+T/vW/mfuQvqGXlL7iNa
91WzIjl/+V/+V8/Q8j+TeeT/vG/lf+YuqGfkLbmPaN1XzYrk/OV/+V89Q8v/
TOaR//O+lf+Zu6CekbfkPqJ1XzUrkvOX/+V/9Qwt/zOZR/7P+1b+Z+6Cekbe
kvuI1n3VrEjOX/6X/9UztPzPZB75P+9b+Z+5C+oZeUvuI1r3VbMiOX/5X/5X
z9DyP5N55P+8b+V/5i6oZ+QtuY9o3VfNiuT85X/5Xz1Dy/9M5pH/876V/5m7
oJ6Rt+Q+onVfNSuS85f/5X/1DC3/M5lH/s/7Vv5n7oJ6Rt6S+4jWfdWsSM5f
/pf/1TO0/M9kHvk/71v5n7kL6hl5S+4jWvdVsyI5f/lf/lfP0PI/k3nk/7xv
5X/mLqhn5C25j2jdV82K5Pzlf/lfPUPL/0zmkf/zvpX/mbugnpG35D6idV81
K5Lzl//lf/UMLf8zmUf+z/tW/mfugnpG3pL7iNZ91axIzl/+l//VM7T8z2Qe
+T/vW/mfuQvqGXlL7iNa91WzIjl/+V/+V8/Q8j+TeeT/vG/lf+YuqGfkLbmP
aN1XzYrk/OV/+V89Q8v/TOaR//O+lf+Zu6CekbfkPqJ1XzUrkvOX/+V/9Qwt
/zOZR/7P+1b+Z+6CekbekvuI1n3VrEjOX/6X/9UztPzPZB75P+9b+Z+5C+oZ
eUvuI1r3VbMiOX/5X/5Xz9DyP5N55P+8b+V/5i6oZ+QtuY9o3VfNiuT85X/5
Xz1Dy/9M5pH/876V/5m7oJ6Rt+Q+onVfNSuS85f/5X/1DC3/M5lH/s/7Vv5n
7oJ6Rt6S+4jWfdWsSM5f/pf/1TO0/M9kHvk/71v5n7kL6hl5S+4jWvdVsyI5
f/lf/lfP0PI/k3nk/7xv5X/mLqhn5C25j2jdV82K5Pzlf/lfPUPL/0zmkf/z
vpX/mbugnpG35D6idV81K5Lzl//lf/UMLf8zmUf+z/tW/mfugnpG3pL7iNZ9
1axIzl/+l//VM7T8z2Qe+T/vW/mfuQvqGXlL7iNa91WzIjl/+V/+V8/Q8j+T
eeT/vG/lf+YuqGfkLbmPaN1XzYrk/OV/+V89Q8v/TOaR//O+lf+Zu6Cekbfk
PqJ1XzUrkvOX/+V/9Qwt/zOZR/7P+1b+Z+6CekbekvuI1n3VrEjOX/6X/9Uz
tPzPZB75P+9b+Z+5C+oZeUvuI1r3VbMiOX/5X/5Xz9DyP5N55P+8b+V/5i6o
Z+QtuY9o3VfNiuT85X/5Xz1Dy/9M5pH/876V/5m7oJ6Rt+Q+onVfNSuS85f/
5X/1DC3/M5lH/s/7Vv5n7oJ6Rt6S+4jWfdWsSM5f/pf/1TO0/M9kHvk/71v5
n7kL6hl5S+4jWvdVsyI5f/lf/lfP0PI/k3nk/7xv5X/mLqhn5C25j2jdV82K
5Pzlf/lfPUPL/0zmkf/zvpX/mbugnpG35D6idV81K5Lzl//lf/UMLf8zmUf+
z/tW/mfugnpG3pL7iNZ91axIzl/+l//VM7T8z2Qe+T/vW/mfuQvqGXlL7iNa
91WzIjl/+V/+V8/Q8j+TeeT/vG/lf+YuqGfkLbmPaN1XzYrk/OV/+V89Q8v/
TOaR//O+lf+Zu6CekbfkPqJ1XzUrkvOX/+V/9Qwt/zOZR/7P+1b+Z+6Cekbe
kvuI1n3VrEjOX/6X/9UztPzPZB75P+9b+Z+5C+oZeUvuI1r3VbMiOX/5X/5X
z9DyP5N55P+8b+V/5i6oZ+QtuY9o3VfNiuT85X/5Xz1Dy/9M5pH/876V/5m7
oJ6Rt+Q+onVfNSuS85f/5X/1DC3/M5lH/s/7Vv5n7oJ6Rt6S+4jWfdWsSM5f
/pf/1TO0/M9kHvk/71v5n7kL6hl5S+4jWvdVsyI5f/lf/lfP0PI/k3m6+f8/
W8uLmg==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzlnb/qLVlexS+KYuwb9JiJgYxM2peJxaT7CVrQaECYAWWyjgwMZZ7AyNh+
BxMjH2BS88mESewBhZtsWcvP+uyqOwbncu6hap9d372+60+dqvp98Zd/89Vf
/86HDx9+9gff//PVN3/345/+9Juff/37v/nPX33zkz/74U9+9/u33/736zfv
f/b3P/z45//2L19+90+/9/GP//YPP/7nf/zJx6/+/R++/PTz0/tPtz/tu/qc
zCf5LnLs7TzbORs1IXUga7eqM/l8tS9Zu1WtbMysMLbCpI3V1dxsnlyt1/cS
8PF/Xu08P9339Eq+q51DMp8f/etffPzTD//45T//0S+ieZ7mYPRaMufT/ElN
SB1O79vtSb8QXBGsJmuUrN2qVi3mDR1JapXMOXm1fUHwQ+a26rWbPdWu0crr
kn5feYzkfbvuRq6xjzEZ/9PjTfBDuLFdd+PYk/GTHknm3GrKyisS72Tjk2yf
YNXO7Mb4Rk+tcEXwttLxdnx7rYl+EW9vrNdp+0/xk8yT8BXRCKMOxCev+mLV
OyvME3yuPG3bj6vMboxv99TqvFA7juE5Vx7Dztdk35V3NTTlprauatvWoX0Z
vNrmr+S7TvNvz7e0+Gy/N3kZPLDqLzu3tjhpsdpiwPAY5Dx5Wwey1kZNDK6w
MWZoq/35qgdPXNfy6mnfU/5K+HblvVfca2N1xW/kvaGhLU6S9WrrkGgx8Rif
zu0Hv/r643e//vDxi19+W2OeeFpSB1ITgytIHdrxV9qa1JB8bmjiipdO47S9
kNS2XUeiuTZWW45K8hT5vabVBfucQNubye8FRr8YvdZipv09buVVjBraY7Ye
coUHw/u1fbTyTsSL2ucQ2iyQ8MxqnmQd29+zWm/ZnpdbrXtbHzK3Vb8YvWZg
xtCyVR2IHzD48PQyzuMRzBhehXiGxIsaGFhlAYPzV+v4lJ6e8lfSI6vfZUjP
kp5qM+mqR1b6u+Iu0muGN35bRkh6ZMXPBOeGd3oqH638iZ2LSZ5qr6U0cGX0
aauPhl4TX21k1WQOq34nWmZnCtsn3MyAq2y7wuHKOyV8RTSo5YTWnxBsEG5v
sbfymURPjVyT1NC4P4LMbaUv5Lja+RAuJVlghZ+VLtgZ4TS31kcZx2hrip2P
Ek6wc5/hGw2vu9LTFsOt9p22IZhZ1YT0oMEhht9uuZocb4ufm9ckrHygwcOf
C8+0NUw+T64XTeZgcMXKTxIftfJU5FqRVb+svPfKNxoaSmqyuo9g5T9Xx5vo
/qfvV7+JPOWZSQ3fxjNGPiJ1sH0y4d4E50SbWk+1wqRxLC0nEH5uPUOroSvv
QXh1hW37dyiCq2Qdn1qLhIfb57A9xTMrPW15oNWIFVcQ7jX8QIvzts7G/aor
nW09z4m7yHclGrrCvMGrxtrZ/tn2hMZa2FnjJs/cvOZk5bcJ5luOJTqS1HnF
jYY3O9VhdR0jWS8jQxFftMKtkbNsHLaebZXRbA5J+svw22/gGeIxSL8Trkvw
szr2lpdI76wy0U1v1vYyef4n0ffVc9QJbsl7wyMRziE8aed6g8+TcWy8GRrd
eoz281b3CW+vstVqm6R3SH2e8mYt5yTZIcHSCgMtt6+8/eo5HsQjGc/MaXXK
yIkGn696bYW3lUbbmnuTtw2/vcpuK2+fYMn2Zi3ntP7fyG4kZ7WaSPx80qcr
HVz1SMJj7RxW/nB1XKTXVngjPJP070pzb/K24bfJ89aSmtjYNrzZah2Tcz6r
miRr3fqxlbc3ak76gvwdH7IWxu9i9vmHlecnupnwDOHk1Vrb+WW1XsT7GT6/
xYD93FTCM+02pCZG3lx5+1Vv3szOK49N6kwyiOFhWu0gnyd9lHiPld8jXGrg
hPjtm2vXfleLbSMLrDLmyles5kx6fPXM7Zu9Seq8wjnpTeLVVx5mhfPk83b8
lXaTHJcc1wonK8w/tXZJvjByU1vDdo1WOZHModVZ4gGSfdu/kbTqzdXfbUnw
k8zNPvdl5B07I6+OfZWh7Exq4KTF/FMYW/W44eVajl399kEwSa6NWXG7zUUr
nTX4weCfN+Sd1vsZ/bjKLMnrDfd9r3Cy2sZeu7bH29yUaGKrxYZmJXNu/TPx
qCuvuMpERGcJJ6xyRPt6Ku8QLlr141Me46l9VzhZvV9hbNXjBseu9MjQrNPc
Vn9jlHB1e4w3r78l2fkNHt7IvIbXIvyz8qhG3rm5r4GN1bWarTde4fYNWE30
aHVNY+udjMyVcHXrUYmvWOFkxZ+2hydzIH1hPAeDPPNtdSzJ+E/ta/Qv4cNV
HxHfa+eClT80vFCyFsazNw29brmx9Xg3s/PKm6287grPKy+98vkJzlceY1WT
1XGR/j1xI8FY2zsrTj5xgn2+YrXWNp7t3ET02sjyp+9tcUI89koLyFrY2ar1
0mT7Vc4lWt/Ojexr9K+BN6N/DU/V5i8bJ8b71bOpE422n3u5yj43fTjpi9Va
rPC8yn1Gv7f4t/Fg4Kr1FcSDtXhb8VvrB0gfGVpJ1pf8LpCsi5Gb2rU2OO2p
NW17s/VyJPOudJBwNfFUT13z/DbObzHT9u9q3wQnxrm4FVZX5ytWXneRLZZz
JlqW8FLLaU+t6YrP27mtNM6Y51Pn1ZOatN71KS0ga/EGnWr7gvDeKkcYz8Vq
eePmPZtPjU/mYPgK8l2EJ1ueaXtq5RmSeZJzDjfnaXDyTf58gzYRTNp9+jle
n2BzdeLDV+Pb3LLyFavvMnrTwJ7xPqnJU7y04m27zgnG3qBNhD+Te1pXfdrW
NskFCXeR3z5aLl15RYIlG29tDRNfQe47WHGIoaFvO3fxhveEt5NsbnC17VeN
ep4w2e77/+H6hLZuRkYgPvkpvCVZJqnzipONOt9c9zfws835LW/bvojkSuJX
jVzf6pShlav6t5gh/t84xta72tcUGZzW+n/DH5K+tu/Naevz26QFK04mNWy9
McGb7QHewO0rH55wdTvmyuOt+CeprXH/gtGbbQ8a9y8kPZtss+K01br/Np0j
WnFyMubN57G0+F95gNZ3GdxOfHXb++1aJC9y/sr47cDwe/Z5j6QH2zknmvVU
rQgnGOv+Zi1osxV57sobMtcJ/20PEv0ysvBNPCf+7Q3Zs615qykrHLaegWii
zUuGn7cz3QnbiZd4yjPc1NCWk415ru6vX51zIDhPtl/1zgrPn0v2bP3/KnO1
OEz43MiGhj839k1q1fpGQ2s+l16z/fPquAyP2r6M564Yvmt13sCeZ+sVSf1X
mbHVmgSHttdN9CjB/01ctfmRZLqV1hie/2YWM/zziqNWurmaZ+Ir7H4h/NbW
0853RvZsdbwd8w062PK2sV4rXJFeTurQ9jXBaoK9m7224kbiEwwPtuJDomtt
9jH0N+E3ch7AuLbB1r6V7hvjG9hueZLUpMWnkWVIPW/iod3euH6VvF/5tJUH
I/6WXJtn+Hyivyuflnxu9J2hfcQDE79tZ8DkeAnGVp8nuGpru/KZN/Gwwo+R
xcj92gbvtb76Dc8QIz7fwEDr01a90+67yp6rmrRza7li1afE57da335O1mKF
eaLLNh4IflbbJ7Ui/o14lbZu7frezJ4rvWvXlHAy0aN2fW0eIOdSSL4gPLzK
Bav6rD43ch85ltW50AQPyTG23Eu4+qafadcuqVvyXUYua7mR6B1ZuxXnEAys
8ulqzu370zGu+NPI7ytNOY3Tfk78kuFtiI9t8bDSbsM3tvzW8raBydP2yf2J
K/9v+HzSa4k+voG7SD+uvLp9znClHUTvVjy/8iHGb3mtt1n5Z1LzVruNdTHy
8krHbb/a8ifxDKv+NbyQzQmJHiX9aHt14ldXXG33MvHnCZ6JVzxphP2MF9vL
Gf1O1oXkL2Pfm73TcngyhxZLK00kPZu8yPhtHZJ9E34wfNrq3OxKcw0feDre
p/we8fOEq1dezuDMFc+0WGr9cJtxDAy3vdnyoZG7SQ1vcqCRKw3tW2VDsk3S
I6QXbH9+0+8Zz9Rq+5dg+FTbp+4fJFlvxcNtnQmGyffamY5oYoK3pziw9aJG
rVbPd0o8QPJaeWzbk5CarPyeofuGr1iNudqerGmrmy0PE1666bFb7rKPZZUZ
bQ4kuXKlp62PPe1r5JTku0hWJTVs8/LbcoGh9faYSU+t7h9ss95NHr55j9up
tqRuq/Ui+Fl5FdLvbQYxfNcqaxgeo60/ydSEE1b9lWAg4ds28z6l9cmYtp80
nt9i8LAxn5VOGZm07ReS4+xnwxJObjV0da+0rQWrObS1IvVc9eNTueCmptvY
MPxkq/Un/iGeoT12kn9tnWo9jMHthmezPZ49H/u7jHFW51sIlk69k/TjyueQ
nnqzFhjYWPn/VSZNsPRUbVc6ZTwrvuUB0neruRGNMOaT1Mfwk2SclXYTTSFr
3WJ1pePt3N7A+StsGM8PXPlGm+eJJ289z6q/2rVr16LlQDI34/wAmU+Lmfa7
iDewNZpoCsnLto60fUF4wOalFTaIPp6+18iMb6hty2OrOTzlM2/6E6I1pD6r
YydjJr1j141oSuvTThxi6AhZx9U1P6s+WmGj9ZYGvxHs3aytsS43Pa1xfsPI
lav6J/Ux7tMha0H6xc62K06wNdH++yMrf2usUTJPWyuJpyUZ8KZPI+tiZF6j
p4y8djOntB7SyEe2ZyNrdxrTeN6C7TEMPTWeubfyEqtrVm/+ra5k39V1YoZP
I+vSrp3t+W/mtZU3br2okS8S7rI9m6EvZBtDs4ysSubW1opwS1KfFnsrf9Jy
4Kof27672SPJPFusJjxgrPUqr62ez0N4e3Xs7fY3nxVJ9CXBmNF3ba8RDBA9
bf3GU/nuhL2VP7F1/KYfID3SegzCV6vsRnJZm9dW3LWq1SqTku1XmGzXwn4+
XnuMyeeEZ+z5r3wj0aNVLludiyDHTnDe+gHSI6ssZmO4Pd62Z23crnq/zeCn
F9l+1Y+t5yRejvhYI08Znmo1B6L1xCO1vnTl7QlX2H6brFfruwj/GBheaauR
vwg22nm22xj+f4U9oq2JHhl99LZ9jTkQrSc4JPywuifXmI/hB5L1sq/9I58T
TSGexM6w7XERP0M8Ruv/k/FbvCXjG1mVZKik5va+xvwNPm+97korE8+w8saE
W4jvbfHf7kvy1Mr3nvZd/Z6YYPKmt0n8zOqcnuE5T9hbZRw7VxJM2vsmtV1l
WNI7ZC2IVrb35Ca91s6nfbW8auCcZEDipRPtaNeR8BjRYuJtjFxjeEWCK+Lf
DO96wlWLSYJngpmVb2y1e3XOhPSC0csrv2fPZ+V1V8fS4pnUx+Ax4knIOKfX
6ndVoqHGWrf+jejCzRxhvF/5c5KzbO5K+sLu5aeeed7OJ5nbG/httX3rYcj4
Nz83vNDqPMPKexgecvWcHMP/GJxP/LmBpRV3tVpm9DKplbGOpGdJZl99vuKZ
lYdZfdfqc8MLtb2WvOy/DbdaO0NfntKCFf7bvEnOdRPuWuXKtm7tvivNIvNv
55DUdsVvRPdX918kPuTm32OycfW2/G5wFPktb8Wx5LhWudvIm6s1anG+mtvJ
9yYYtu+Bannevi70qZyywu1KB5Ptk/FbTVzhiuQaI78bWdL21aSeN3utxZWB
k3aeRFMMbJ/uzV+N39aqfVaAwb12TjGu616txWrfN2g0uY/D1nTCUQbnJ8d1
6s3W15FeW2UogpPW2xj3Jjz1fPLVNW8tTlo8tNy74vn2mSqES0kNDa6zxyf7
njz5Kr8bWaD1AIQDkzkTHSG9ZsyBbEPqnGTYNvOS9TJ8RcvPBg6NvEZyyum4
2vqsvuvms6xvajS5FnTl7W0/Q7JY69mIjqzOJxCtNLLSak3t+bxhbkk2N7Cd
HGPCjcn5MfvcRcsJKwy3viXpO6PfV5ml1UqyfbteK8+wypItbyT9RXrW8LEt
t6x40sDDzbkRv0GwbWjWD3719cfvfv3h4xe//DbijRVHGV4uwXDbXytf1PZ7
UvOEc276f5JHiGdoeZLk8Zuc84Y5rHhy5SdbfljNjfiHZA7G364yvHRbE6Lj
bW1X71vtMOZg5ILT/FfX67beZqW5Bv4Jb6z2fWoOK55c3T+yytHt3NoxW24x
tJtkyaRWhg8kXs7mW9vLrepDcpPt04z71Fp/QrxiwhuEc1a8uuI9wpNGdk6w
Tbiu9fM3eWnFt4YeGdccvoFvyXtbd1YYbnvc9o2kVqvnnZLtV8fb8iqZA1lH
wueEc1Zcl+D/KV5KtNs4X9S+//S3g/ZYbmbnVZ2N+ttZ+6m+Np4dYfNbW7ek
DisvtJpD+2qz2xt8zucyzk0deUMeIf1o8C3xDCuv2HImOa6bfU005SbXkbmt
/MbNOax6ZKXdqx75XMa5qSPGmIRDkl4m2Xl1XsLAecvhxvkWgh+CjURT7Kxn
6xfB5EmjyTi2r0v69w0+5w3j2P7WHvOp3JHgqsWn8Xxv4tNIj9j4SY53xaWr
YzE8eVuTFTZIVjJ83covPeVzbo5Dsp7hzVbHcjN3nMZfXev+VJ61+2iFH8I/
CZ+vcLvyJ6Seb3uu7CovrHxX61tWPmfljYlWJp7HyFztmDefb2Bgj+CwrS3B
cDu+PeaKfwxvY/uTU01Wczv1+6n+yefJWrc8Y+eCm97ptI7G+Z9kzHY+JHO1
z7on3mnV7wR7q+O66cNX+xpjtvxDrvMha716zuHq3Eh7/dUq15zm2W5PuG6l
KcTn3Dz/c7P3Vx545Z2I/0zmSTjKWNMWk62vNrC9GtPo/VavW44ysonhD0mO
INhYbdNyuO1/Vrqz4kPS+6dX64FP72/eq2V79fa4Vr7L5ooW26sxjd4nucn2
lsSHrOpGrqMzfCPxh2S9SM+SHGRrk9H7Sa2SZzgn67LCwMqrG/uu1trgjTbT
3fTG7Rz+r1nqf3vZ/Wtr6+lYVh6yPZ9mP1/C7oVV7xNtMnrf9nXt58TbrH5/
J/u+7X7qlufb7Yk3XvWIkfsMb7nq2VVGa/kz8Y2Gnhoer/U8hKNsvm2Pt+2p
VX1WfUQ8APEMZF97rYnOrp7F125DeqTtX+IDb65pq62tRzV8I/k80Q5SB8JX
hKNWvXNTO9qatx7P5jHbS38uvi7BczKm/YzN1Zq2+Z3kfbKmq3NixhwIP7d+
z9CgxBsQPid9d/N+BMMLrfBDMLzS5TdwvuHriBc6vT89i29V55VeJJ+f+GfF
ycmatvmlfX+ag31thoENm7dXOrvyNkTjVtph4Gd1vugpHN7EEvE/Ce8Z53Bu
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
+jSDi0gvvFlzV9j79PVfMPXUtw==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztlz3KpkUXhAcFfwITXYFb0MRAR9yCrmAEjQYFBcXM1ND1mLsBN2JkrIKB
yYjP9LnqXKe7g+/jEebtu7pOnarqdz//+tMvX3ny5Mm3b/z1f58++/6Tb755
9sNnr/39H188e/7+e89f/evnj//87+/fv7z180e//frmh3989dPTf//+8rvX
n/7+ztsfP//lg49X/s3/+f2ic6rOX8Hzot+P4l/5N49iW+Gz6r5VWqrSYRW3
hE4IzVTpyjYLWrePfpf2kC6fJDRGeBrt/ys4q34TPma4I425yx9O4D85iyRv
Vf5m0AbdgaswEH0g2f+7MNAZYeO2K3+rPGo6/1NyKul1XTqnfZLgk3hrEPtC
9AGCfyIjzNwm85footP5T87C0NWr/Krrb4l8T86OnnuyDxAZ2tWZu7hN5u/K
Pib7cJe2bTmV7MxdcyfmReQIfSa9L8msTO4pnUcEt0nOq/pMEkOXtg05RfSo
5E51aZXOffpMel+IbLLtqXkfbZ7c1YEN/BvmS+9m1VvD5v8Ez0k+6fdC1d8S
/kDsaRUeQ1YmPbmrAxv4N8y3ynOSXmHwf0N3Te5j1b5MzK+q/O3axy48dKey
ZRChbXq+BD+EVxiywNZdib0gfDjZ6wwZVIUnOaMuT7Z1KsObJTnfqrxIekJX
FtC+Yehmtmztyi9DbtIzSmpySqci+J8y32SHMeRsV/8nuivdr7r8P5lfhtxM
9p8qPRC+YetUxE4Z5tvFeRI/4VFdPapLe8ls7covgudk56H7RtfvZJ7S/TnZ
b1c0THOe7K70vaq8lN5fQyehs6/KwwmfpN8RdN8gcv+EPDX4eXLHk3wSHbKr
o9Ln0H2P6P9JbSf5NLxfaDzJrmXLU5ufd+UUwWfVntL7taKTqv3tyuiuXUvq
gdipqj5Q1Tfo3O/qWl0dY7qf0700qb3kfiW7qGG/unYtmUET3y9dXndynp7g
57Zd6PIc4veUjJ6SrUSWGbylKjuSXrRrnp7g51V3MeQgPffk26Qro5M9jdBG
0isI/5zYQ3bNU2LXbH5e1Ysm5iDRCQ0zJbLM4JN0ptC5QPeNrp2y6YTww538
nN6pnXgj/NaW0Ss7ZcjipFcY5pi8V1ef78pTwjdsfk53y5N526n32nyS9s8p
c0zmdbI7GfK0Ky+63m6E103njcBvyGiaq2S+EBjMc0zmteHd1JWnXb7R9XYz
5LKNNzo3uzLawFWVNggMtP6Tmlm5V/J9YctTA+akJm25bOaN2Hdb76VzwezV
tP6TmjG8tafkKTFTg5/TO0VwZeaN2Hdb76WzxubV9NszqZmkVxD9IZmnxExt
fj6l907krWrfbb236/3e5dXJfktrJukVNp0kPS2ZF8SM6F2r8mcbb7SXErpN
+hu9U8RdVjTZ5TlJf56ik6R+6LxI9sAqrpJ9O8mbwX/o3lu17/ROEXcxzDTJ
syFfujp8sn92+TnhsSvnmLtKMhPpLCD0QHSbZJYR+0LvEcGzLV+qdJLUjy0v
kp5cdRdDVzF0MFvudPVDOsuS+2LQTJc/d+nkdqGMJ6/chdawgbeurlu1g2Yf
q/Jqeu4GT+jyZ1tHOrkLEZrv4tPAmw1nlYdM8TE6y1ZmZOuQSX826OR2IU7z
XXyaeTPgpN8RZh+g70J0AEMPT+aLoSOd1oUIzXfxaeCN6NuG3Ky6Y5cP0PPq
6io2PLbdpLvcxC5UlYNde2rmzdAHunRo9gG6v3X5IZG/Bi0ZdLJrF0pmPd0t
bbwZdqdLhztlNK1zWntd/mzgh8j0nbpQF36iWxp4S55j1qHNB+jcnK49uvtN
73JdWdnlezT+Kv3YeCN+Exlq2B2bT57QVZJ7at7NR7+bnEUXt0n8VXtq4C25
+/RuJnfH4AM0zzYekp3Btpu0zqe/iZJdjthfgyYNfm7QocGXiBlN7CrJnbJ5
Gt3ziU5r6EJJHyN8tUuTBj83747hLsl3hIGHpFZtnlaV78lO29WF6A5TlSnm
nO3qZubdsd2FfkcYuopZq+a8ILzdtqdEV+/qLQZNGrqZeXdsPkD0EENXSfqb
2dOqZkf4kmFPVzDQXk2812hNJj1nyu7YfCDpe108ELsw0dOqZlflS2Zuq/yW
+NuujKNztkon5t0xcN61m0keJr4jbDohzjdza/5N9CubJpM72LU7Ns6Tu0nz
kLyvgf9kB145fwq3Kx5L/KZ9ZnrOGrRNa9hwlyTnNn+28d+1m4Tmzdya/b+K
c0POTvEWYkZdPTa5m1XaMNz3hLwgzp/CrS0L6H0ksmNlvjZvIc7v6rFVeGyc
0+cY+DfsZlU3M3NbxUOy/9P3Mmiyq6sQuTbFB8x+ktSY2Ye7cCb10LWnhneB
QeddmjR0lZVZTPQBs5+YNWb2NNrPaT0k95T2nCo8SZ137Y6hq9AdwOYDZj8x
a+yEvFg5f0pXpz2HyCNC52Z/prtKsgMYfGCKnyT3xezDZpwr3d7Q1WnPqeqH
hkw0aNLg5xP9yjA7w3139eEunF17l8RM7Fey/xMZZ+C2y8+ruO3i3OwntMZ2
9eEkTtveEZhXeCYyLsl5UpNmXREdIOlXU/zE/G46gbcqT0juHY35UZ5tnNB6
qNKkjcNkrhE+MNFPiPue4MMGnF17R2Be4dnsRbT3VvnzFA6JPkBrfoqfVHnC
aT6cxGnTahVmwhO6vKjqTIKrKX5OZAExx+l+0vX+PY23KpyGjK7CXNXfuvaX
yPEq3pJZY54dMced/CSZ9afxluzDZg3Q+1uVlV2ZSPttshvbZkfMcSc/ue8d
P07DXaowE56WzFDiuza/Nfg5wef1vbw2TuONwJnsbzTmqv1NZhPx3S4/N2ci
3Suun2Rmdxpv0/0kiXllFslsSr5laL81azjZK67v3ffORJzJPk9jJnqp+S62
DmbTMN0rru/NwnNx5v0kiXml4yXfRCt3MeTvdD1UfZf+1hQ/MeOZwlsSJ+0n
XZhXvK7K/+m7GLRK+LaNw+kz6vI9G54pvBlwTtfACs8r/k/fhcimrvl26YHI
dPOMkrOw4bk481o1cJvcZTr7iGyi52vWA5HpthklZ2HDM4U3G05D163q9kl+
knepyqbkfG16sL07pvuJDc8U3mw4DV13hdsufui70Njo+U7ksAp/ckbJWdjw
XJx5rRowV2WE+S4rnlzl8yvfnchh1X3pGSX9xIZnVx+eolUbt4RnGnSy4rFV
dyHOMXNY1TEIrrp204ZnJx+eqFUbtyvebu4/9JuI2HGDHh7F3/XuMPuJDc/F
6dHqFMzE+Umd0G+iLk3aOCTuO9FPbHim8DYdZ5VuDZir/MGgk4lvGduudeWj
ORNtPef6cC/OZG+hMRPnJ3VStb+GHe/aNUM+mnvFaf52cfb2liRm4nzaK+ie
1qXJrl0z6M3sz6f528XJdewuf0ieb8umKZ5j3jUC/xR/nqLbizOzm7SHJDET
50/XidlzDPlehd/cKwycX5wenAR+2h+SnOykk6TnmDns0luXTmx4zNq4OGs7
XvJMgpPpOjFr0tx5qvRm0ImBc5u/XZy1+uw6k+CkygcMOrF5zhQOq/TWlYkT
Ob84e3E+ir9qj+iu++j5K98166RLkxN3zdCFqnZnCucX56zOs3I+wS3tV8T5
J7xlpuwaobdkn5/I+cXpwZk835BBxG7adLLigYSvmnct2R+qMEzn/OKc1XmI
zmnIuKrdtHXjqj5JnDlx16qynu7/O3F+cfo7T/K9QGRcV5YROjG8ZXbdNfqt
Z9bwRH+7OLnOQ/thMuOSvkHrZMpbZsqu0fzs6hsX5x44CW1X9duq7Ej6xkou
GHrgad5F6GHlWydwfnE6vYvounS/MvgG3S27+oA5f839wZzvZs4vTk/nSWq4
6t93cZ7slsnzV3Jw4q7RmT7dNy7Oc3Am/Xwlm7p2LdktzW8Zs4bp/kBocrpv
XJx74KQ1bOu6j56f7Jb0jMzzmsjhyh2n+8bFORfnFA0nfYzwk2ReV2mAOMe2
a8nzbdl0gr9dnOve2KVhQw9MvqGmv2Wm7FrX+Tv5xsW5N86uuxh6Gp1fdF4n
M9GsYZpD+s1l25GLc2+chrsYetpK7zV4keEtM33X6J5v2DUb5xdnL84V30v6
bbIHGt5WhrdMV5Z17drK+VWzNuzIxXkOzuS+mDkhuhzNbVWOEBxO2bWq81e+
O2VHLs79cBJ9fgondJejuTXkiEHDNIe0ns07cnHuh7PqjtN74MpM6W8lvYh+
y0zfNZoH845M2eWLk+uNu3Ky4u3J7Jv4ltlp12geqjrJTpxfnHmcVXeZwgnh
mVV3ob3InGUGXRnwG3Zkyi5fnC+H8+71f5/fdReac+KNsNOuGfBXaXgK5xdn
HudKh5zICdHzDRmafMvQWWbWVVc/OZnzi5PDeTnhdpPO0KqcojFM11VXPzmZ
84szg3Ol/5/ASZV/0l5B+8+u78GqXkTgP5nzi5PDWfW3J3BCePuUt0wyy8y6
Su7FCuadOL84e3vjSnZM52SnDKX954Rdq9IDocldOb848zhvD3y579oylM5E
27ySHK7ooepej3I4hfOLM4+T7r1TOKHzLpmhdCYa5pXkMOnbK7xN5/zizONc
6RI7cZLsY8kMrZppV5aZdUX4dpVmduX84sx3khM4WdkpW4ZWebUty2y6SvKz
Mt+dOL84Mxo+gRObZ1ZxkuwDBg0ndUV4L91nTs7oi5PzrumcVHnmiidMf8uc
tmu0P1f1mdN2+eLkOsmunDyKIdnBVna/aqaGLJuuK7p7EN+ayPnFyXkU0X8M
nNAdnsaTfMsks2wnXT16Tte3pnN+cdZ61EpnMHNCZ2Iyo+m3TFeW7aQrmkOC
qymcX5y1vbGqM5g5oTOxqu/Rfkto4+RdS/YTgquJnF+c/r5q5qTrTdTVu2ht
XF1x/YTmaifOL87evmrmhPa9qh0k/NacZdN1RfcTgqudOL841/tD1Y6bOTHs
BYHf4Esn66oq71ZwVvWTiZxfnC/XH4gdN3Ni6IRV+GlfsmWxWVcr51dlxPW3
izPpLVM4MWCuwl/Vpem/PUFXK+cn+THvxcXp8caVu5g5McyxCj8xo6o8PU1X
K+cnZ3qyv12ctd4ykRMDZsL3qmbUlWXTdbXC58q9iJlO5PzirPXGXTnp2otk
dq/M6EW//wRv/TKR
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztmjFqlXsQR4OCWFjbuwXtE2KpXVxBFAUhIMYi2FnZCi7CZbgEd+BeTMAi
TUC533fvOfOd4j3uk8vcmfP7zxx47z15/eHs3b2jo6NPD6//dnZ+dXp5ef75
1YObf3h7fvHs6cX9649f/v518/n3++fHj75/Pf529fHk9ueXP14c/3x8cvLr
zenJ/37n9p/f9flfvr9LP7t8f5f+7/qtXb6/xud9zrLUvLu8paUyXerN7zPT
Q/HZhclSddbekTV6WCqjfb4rwveX+nMyK4IjDuWCfbrG3ts+3/w+d3kLbNfe
EUK+hBxzQS7Yggsst2LSHuUCb465IBfkAmZ94x7lAm+OuSAX5AJmfeMe0Vxg
vG/k/aWxIvPJBczecoGLLa1OLmCyIvPJBczecoGLLa1OLmCyIvPJBczecoGL
La1OLmCyIvPJBczecoGLLa1OLmCyIvPJBczecoGL7VL//dd438j7S2NF5pML
mL3lAi/bXLCd7AhvOBfkAlp94x4R7gmtH0uORlZkPrmA2Vsu8LLNBdvJjvCG
c0EuoNU37hHhntD6seRoZEXmkwuYveUCL9tcsJ3sCG84F+QCWn3jHi31///k
Aub+0liR+eQCZm+5wMs5F7jyMs6eC3IBub59j3KBK0cjKzKfXMDsLRd4OecC
V17G2XNBLiDXt+9RLnDlaGRF5pMLmL3lAi/nXODKyzh7LsgF5Pr2PcoFrhyN
rMh8cgGzt1zg5ZwLXHkZZ88FuYBc375HucCVo5EVmU8uYPaWC7ycc4ErL+Ps
uSAXkOvb9ygXuHI0siLzyQXM3rbmgkmcc4ErL+PsuSAXkOvTbmAccgGNFZlP
LmD2lgu8nGkccgGHFZlPLmD2lgu8nGkccgGHFZlPLmD2ZneBcadygeseGlmR
+eQCZm9GF9h3Khe4sjOyIvPJBczecoGXcy5w5WWcPRfkAkt9407lAld2RlZk
PrmA2Vsu8HLOBa68jLPnglxgqW/cqVzgys7IiswnFzB7O5QLDnUPJ3HOBa68
jLPnglxg+S3jTuUCV3ZGVmQ+uYDZWy7wcs4FrryMs+eCXGD5LeNO5QJXdkZW
ZD65gNlbLvByzgWuvIyz54JcYPkt407lAld2RlZkPrmA2Vsu8HLOBa68jLPn
glxg+S3jTuUCV3ZGVmQ+uYDZ2109rN1PLsgFluyMrMh8cgGzt0P1kwtygSU7
Iysyn1zA7C0XeNnmAldextlzQS7IBXy2ucCVl3H2XJALcgGfbS5w5WWcPRfk
glzAZ5sLXHkZZ88FuSAX8NnmAldextlzQS7IBXy2ucCVl3H2XJALcgGfbS5w
5WWcPRfkglzAZ5sLXHkZZ88FuSAX8NnmAldextlzwWFdQMg9F/DZ5gJXXsbZ
cwGfFa1nyz2cxDYXuPIyzp4L+KxoPVvu4SS2ucCVl3H2XLAeK3KfucDFNhe4
8jLOngsOy83SJ6G+cadygSs7Iysyn1wwr09CfeNO5QJXdkZWZD65YF6fhPrG
ncoFruyMrMh8csG8Pgn1jTuVC1zZGVmR+eSCeX0S6ht3Khe4sjOyIvPJBfP6
JNQ37lQucGVnZEXmkwvm9Umob9ypXODKzsiKzCcXzOuTUN+4U7nAlZ2RFZlP
LpjXJ6G+cadygSs7IysyH5oLyO+KkHsu4LPNBa68jLNPdQGBbS7IBbnAlZ2R
FZlPLsgFhHs4iW0ucOVlnN3uAvK9JfeWC1xsc4ErL+PsRhdY7i25t1zgYpsL
XHkZZ88FuSAX8NnmAldextlzQS7IBXy2ucCVl3H2XJALcgGfbS5w5WWcneCC
td85+V0Rcs8FfLa5wJWXcXbCLLlgxr2i3cNJbHOBKy/j7IRZcsGMe0W7h5PY
5gJXXsbZ155l7XtIvrfk3nKBi20ucOVlnJ3wDsn1cwGnvnGncoErOyMrC59c
wOwtF7jY5gJXXsbZCe+QXD8XcOobdyoXuLIzsjoUnzXmygUz7hXtHk5imwtc
eRlnJ8yVC2bcK9o9nMQ2F7jyMs5OmCsXzLhXtHs4iW0ucOVlnJ0wVy6Yca9o
93AS21zgyss4O2GuXDDjXtHu4SS2ucCVl3F2wly5YMa9ot3DSWxzgSsv4+yE
uXLBjHtFu4eT2OYCV17G2Qlz5YIZ94p2DyexzQWuvIyzE+bKBTPuFe0eTmKb
C1x5GWcnzJULZtwr2j2cxDYXuPIyzk6YKxfMuFe0eziJbS5w5WWcnTBXLphx
r2j3cBLbXODKyzg7Ya5cMONe0e7hJLa5wJXXUrMT3nAuyAW0+pZ7QpidfN/I
2RFYETjkglxArm+5J4TZaffNkh2BFYFDLsgF5PqWe0KYnXbfLNkRWBE45IJc
QK5vuSeE2Wn3zZLd2qwsHHJBLiDXN+5RLnBlR9sFwhvOBbmAVt+4R7nAlR1t
FwhvOBfkAlp94x7lAld2tF0gvOFckAto9Y17lAtc2dF2gfCGc0EuoNU37lEu
cGVH2wXCG84FuYBW37hHucCVHW0XCG84F+QCWn3jHuUCV3a3f9fIjfy2cwGz
t1zgYpsLvNnZOeSCXECrb9yjXFB2dg65IBfQ6hv3KBeUnZ1DLsgFtPrGPcoF
ZWfnkAtyAa2+cY9yQdnZOeSCXECrb9yjXFB2dg65IBfQ6hv3KBeUnZ1DLsgF
tPrGPcoFZWfnkAtyAa2+cY9yQdnZOeSCXECrb9yjXLD798n7S+NG5pMLmL3l
AhfbrbmAkKOdG41PLmD2lgtcbGm3NBfwudH45AJmb7nAxZZ2S3MBnxuNTy5g
9pYLXGxpt3Sf//6fvL9beMO5IBfQ6hv3KBd4cyRwI7zhXJALaPWNe5QLvDkS
uBHecC7IBbT6xj3KBd4cCdwIbzgX5AJafeMebcEFa+dC3t8tvOFckAto9Y17
NNUF+8yFvL80VmQ+uYDZG/lWTNqjSS74A4w5tu4=
       "], {{0, 128}, {128, 0}}, {0.,
        1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1jFupQcZRuERSIhtwBKgJQNsIaxgkIAmEigpEB1bID1shTXQ0LAKepBI
JIo0SBnZ9/o5H28xI491PT73fO9/7B/88ref/vo77969++L7X/316Yff//zz
zz/84Rff+/ofv/rw2Y9/9Nl3v/rwj//98/XHf//NJ+//+rt/vf/ZX/78/p//
/tNPPv3ihz/98m//+OSbn3+t13zz8x/7mm/z8UsYvs3/+bHv5WO/76M5/9dr
XvK+XvK9HuHqtb7XS/jlZ+GttveS51R2/syvfeZz9Fqvea2vfcmtX/Lz6xHP
lMD5Wpt5REsfsatHvN9ntuiZz8Izt/fomz7C+TO/9tEetJu+1u+3wnvUON/q
dm+129faj/a76DP7LzxHz7zpW/1++1YeZD/P9Pn/0P9n8hQ79lY/y4RnQe6/
0B+h/5pbjVl7j1c5H91SjfnRP8uEja3/3b7Jdxf8aLutcwpOBOZLz8L63+2b
fHfBj7bbOqfg5BKzwLD+d/sm313wo+22zik4ucQsMKz/3b7Jdxf8aLutcwpO
LjELDOt/t2/y3QU/2m7rnIKTS8wCw/rf7Zt8d8GPtts6p+DkErPAsP53+ybf
XfCj7bbOKTi5xCwwrP/dvsl3F/xou61zCk4uMQsM63+3b/LdBT/abuucgpNL
zALD+t/tm3x3wY+22zqn4OQSs8Cw/nf7Jt9d8KPtts4pOLnELDCs/92+yXcX
/Gi7rXMKTi4xCwzrf7dv8t0FP9pu65yCk0vMAsP63+2bfHfBj7bbOqfg5BKz
wLD+d/sm313wo+22zik4ucQsMKz/3b7Jdxf8aLutcwpOLjELDOt/t2/y3QU/
2m7rnIKTS8wCw/rf7Zt8d8GPtts6p+DkErPAsP53+ybfXfCj7bbOKTi5xCww
rP/dvsl3F/xou61zCk4uMQsM63+3b/LdBT/abuucgpNLzALD+t/tm3x3wY+2
2zqn4OQSs8Cw/nf7Jt9d8KPtts4pOLnELDCs/92+yXcX/Gi7rXMKTi4xCwzr
f7dv8t0FP9pu65yCk0vMAsP63+2bfHfBj7bbOqfg5BKzwLD+d/sm313wo+22
zik4ucQsMKz/3b7Jdxf8aLutcwpOLjELDOt/t2/y3QU/2m7rnIKTS8wCw/rf
7Zt8d8GPtts6p+DkErPAsP53+ybfXfCj7bbOKTi5xCwwrP/dvsl3F/xou61z
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
MKz/3b695Gv/A0hUI/g=
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztm7HKfUkRxJcVRNjU0MTEB3BT3cVXWMVAoxU0WhA0WMREMPBd1tDYwNQn
MBYMzAyNRAWFP8iR+n1VNafn3Am+pfdy7zkzPd3V1dXz//qPfvrJT95/7733
fv6Vf/3nk08//87PfvbpL7775X//z48//ezDb372pX+Zv/rP37/tr/3hlx99
/x+/+fYPP/jrR4r9ux+8/9EHX/3Lt/7+4ecfX9nO99vvor9t7IV+nvqtsk7l
+amYaa+hHW/tva+MH+c7qZxNxfbKvHD26MR56ix+/bfvffz7P37j4z//6avS
d377xRcf/ffv3e+8+/nV39X3331+4130t429XO3r6nPlT/mtss6rs76yaVwp
60+tgb6XxltjDcpzGvHj/KVy1tmXk+NOXjh7pDbNC7rORq2n37lav/MuxZ8N
LkfPyOHVbc5JzyLVLzhroM9Unr+S2zs5stJO5axy1qkcb8TqXZhAn6Oszan1
9I/mV+OZKS6Xylna2zY4Jz0Lhyen1qC8l+Yy5Vd0705cNeKnoY0o/qFY18CN
Rm/bwASHIzl1J8U9aJ/r9BeOdpHS1mhsK71tg3MqtV6pm46v6BpStV7ZixP/
qbhydAnHptpIqna0caOR1w1MSHFI2mc1sH0a/3ewyOHADudx+DbFulQdv/LV
1bsUPpOqFw3e25hBNOJHOUcn92ntSPVEzhpoXrcxgfJz6jeHG6SwfSX/d7Ao
pRU7WmVbR3L6FKeONPiMwx8c3utwPMXnTvw48aDkvsMt6RyhMeNT4rONCSs5
eQMrUmeU4v8pLKJ7pH5W9qXskeoATv46dcTR2FN8vqEVNLDIqXE0r9v55eR+
ims1akoKE5w6fpce2PBVu3+nZ+ToJ04tdvosZS9tfcPxP9UZFD6v/DX0dopF
qf7O0QYbPSPFEKodTeO0jf7UOQsnfui+7uL/DhY5eUc5TCMmlb5G+bzBY1P8
toFXqfW3+VWD16XWmTr3VG9+F6dN8VUlH5WzSJ17o79r8P9GXlNu6eyRxiTt
HVby2JWxRP2ZWr/zHGf2lNqLs87UOaZ6cyWeG5yW9pgUQ5w66HAGykka9TTV
v6f4YeM5Tkwqa6B90Ere6MSSUnMbXNHp01O85S7+n9IGlb2n+osGD0nVRIe/
KdyMckiHkzQ0onaOUN9S3YnyZ6emX31+F540YsnRDRyuSDGw0ZvcpQUp9c7J
zUZ/0eAhNE+d82prZaleo9EPtnPE4RUNfZL2TY3P23iSiiVaIyjPpHiYqolO
vjR6N0dvdL7j9BdK30F5hbKXVLzRWuNoZQovSs2O2xqRg8OUA6f0Sar50PU7
dao901xZU5T4b5y7w/EojrX5/479RYrXpfg/7U8pZ0hx2lSMpd7laMXOc1J9
WeqMlPUrn1NNYyW/TdWUBp9P5UhDP1mpBU3uLxrrSenqqT4opb3QPFViTMlN
h8+vrHGKNtLWhWgtcHpbWgdT/DZVUxp8Xjl3JUccTa+NRcfOYm+K21D+pmDX
u3+091fyhfZEjZkLxVLn+4pPqC6k9Pup3rbBuxwN08lNWl9StdKpU+3+egKW
7mI72JviNpT3pmKD1juqR6X2RXmaco7OuVMMmYDhDa3AmT05uUljNcUrqK6b
Oheqfe2oC620HYyiOoOzTtqzK++luNfAKMqvaO1w8Lldc1di+Mr4pHtXuDT1
D10P5RX0jJya1dA8J2DvLrajGzjvpXpsCoed+R3l5E7uK7lMMUrZL625KT5G
81rRkVLxSfdO9ZYUX3L4Ho1Jp49o86tjvy22lfpOcZviHs0p2hes7KNprLZ9
69SgBh+jGO7UMuoTZ7+Oxt6IDSeGaQ468e/wq6MFvS22nV7MwR8lTuj88d3f
Kjy23Ucrserci1jJDVI1LjVPV/zj3Btpa2LtOzMOhjtYQTmkU5vaWPRU2+nF
Gr5V4sHpqVN7nKyfN7iB07NQTujoWik/057X0cRWzlMop3L6vkZNPJx/Pa9r
11DKzVJ9a2qP0/TzBjegOptST1O6loJjyhoa8xSHYzTiQdGs2pyE1kSnT5yA
txPsleebikkFw+/iVw6/bejnDW5A85E+x9mjg2N0Lyn/p+YsdD2O5rmyBjln
PQFjd7Hb5+vEJNVbnPyle0/NrOkZreQGzn0k6nO6RwfHHPy5KxeceGj4p1GD
FG2ncW/q1ew2H3NiMqWfO/Gf2ruzr7u0Tdp/Ob0Pjc/GjN65u9LOBep/h0tQ
3SxVg1L3TCZopJNtqoWurK1OzDdiNaUFKc9M6ecpPpDi/3ROR/s46hNn1rlS
W3Dee/V9pV44mp5TgxrzkaMFvc3nFNMmYE5Ks3U4rbJ+2nO1/e/0XxRPGtq7
45O7Zp0r88tZv/NbJf5T90was7wn2YrPFY06VVtTmNOOVYdbUh2J9mUNbtPI
ncbdLUejczTPdv1Nna/DYZzfrsRnB9MmYHLbTmndtB9vY47T27b5GK0j9Fwa
+KzU+rv6PkUjojFDNc/2LMyZDaU4TENvbOCzg2l36XgT7BSnSukSKcxx6sVd
fKzRQzl1is7g2n1fY/ZHn0M/T/GKhu63Um9cic8rZ3k72kofp3CqNr+imNPo
T9t8LPVMWq+d57R11Pbsj36u6J9OvDmzIcoZUlqiw1Ua+Exzv40V02xHl3b0
T4dfNTQQGqttPpbiWo4GojxHiasUF23M/ujnTg/irJP22qn5SFtvbOAz1aZo
nLyCFtTghA6/Svk8pUU0+BjVfOjMhdYRp79zeo3GvRoFKxT/t3VjimM01yhm
pnKtjc80zml9mYDJ02zlTB2e05gdO3aDj6Weo3yf6mxXe2/MWxWfO7O/Np93
cCzVO6R6+Ua+0Jmggs8O5qzkjU+yU/2mghUpLaUdA6mcamtiFKMaeEI1K4rb
jRimtc/hkHRfzjlefSel1zk1MZUjx+7ZtN90OO3V89t1+d31O3wsxWdScz0H
oxwdXtmL06ekYtipdzROqP9TtSZVW6m26ezXybVjZ/FQqfWU2ztcN7VH5R5O
ip+kdCFlPcpvG/W0rbc08FPBHKc+Kn5QnumcY0qvc3KT1vr2/OXYb4vnVO5f
xeRddd/RshSO5NQUpy6v5AkNvcXpHZz6m/JJCj+d3s3R6xqc3NEq74rzY/u5
79xjadR9JVZTa1PyLqV3pbSClE9SnMHpHdrauFObUrVP8XO7btIZCtUqG5rY
sXu5T7GR4oazfgVb6HudvTi9uaPVOzadDTmcgeKMs5e79EAnPim3SdXNVL1I
8f+jBa2xG/rhXfcuqGalYBrlNrQ3v8ume7nLbmvjKT2w3T/SGHbiwcFeeo9i
Wl68gk3jR4mNFE+g9y5SfQqddVLOtvIeVIoH3rVOymmpNt7QA1MaWko3o71k
aobiPOdw/vW5n9JDVt67oDHs9PIOZ0v1yK9gO5xWiZPGjIPWKdpz0f4iVXOp
Fkd75wnxdmw971ZyV0fzpPmYuovicLNXzgvnniT1G53bUl2I9qcUkxv8ga5Z
4Tn0OxPi8NVsypGcmSZdD9U8aW1Kza+p35zvv5rt4FIKVxt6JtXGU3c1lfVc
faftn2PPsR1N1Xkv5Q8KhtNem/a/ip5M/TwhBibEHsUlWlMaddbpE1O1qX3H
KeWfV+55d7Gp9k5zypnnpniFo9U36uMr54VzvsrMfQIXpT2C80xa+5w7b875
np53jk21d2cWRvV25Zkrc5PuxblbOCE22vFGtQ56R8uZb6b2mJoR0Jmd00c4
9z2cHvnYa2yqvTdmYXfFA81N555PKu92t1O45GBUm4s6HIbmXapHXtlTU855
7J6t5FfqjmVjntXOzXb9euUccXCpgVET/JCqcUp+Kf1USvNpaMjHfptNua6j
8zh5PSEeGvcxlLx7ao4o2kXD505e3JWDqdqU6q2o5rOyph/7/9vOPcmUdkr7
2Qm+Suk5Sk499R5dSrtocIaV8xen1rdzrTHXa2jIx85yACVmnLxz9MAJMUDx
NoVjSq5N8E+jLrTP6Oq3bV0oNQ9K5ZqjHSk+TGnIu/e8d9lUZ6C45Hx+1z0f
6jelHinchu6R6gOvliP0jK5+q8StU2dpbDRysDHzcuopfc6EeNvFpjqDgrG0
p0vh4V1+o3G4chY8bXY5+YyotnOF81QXcnreVA6maqvyXoer0HnQhDjcxXZw
qaFpT/CJkwvKjLI9C1aeM8Fvd53RVQwrmEw1CppHKR2e3hGitTX1rtQcTeEA
x35b7VZ+mzq7XTDKuTfu5JGTX0+6I0TPKKWrUPxR8siJN7r+VK413kVr0yvE
cCMXnNqd4jxPvceYqomp/Hpqz+VglMJnGhygEedUF3LW0HjX0XPm5IUTq86d
k1RNmWY31k/zTlnPk3KNamWNeGu/19GgnNxPvatxB+nYPZ7gcFRljvaku74r
+YyCG8oantpz0fsMqXhzOJXDnZTnN/hD6j7njrE32U7Nqui5ONxjxzhx7pw0
6ktDK97FpntR6oWjjSixQd+r1HSHb6981+7xtovtzKocXEpxyx3jJMX5nb5M
wahGPNzl58ZdRMqv6JyljZMKj3LmIPRd9FyO7ecFjXl6h5nyAWf9k+Nk5X2b
CTreBD879xmUs1PijdZfpWY5OHn1fKrJO/XXede0eNvFdu4wNDg2nTmu1FIa
9l33bVbqeNPslXelFM5M9Teqnys1q32vrPGuY8+xG1qQU3cmc34FTxp7afRH
u/RcVMuidZD2REo8O3UnVfsoN6B3wum7psXVK9uOduHcH1DyetodFWU9Su1z
+jXFtykdjz6z7XPnLqJTU9r3KBztKIWxdC+UJ+yiMb6a3dAuFD7Z0HJX+orq
nI1euMGjJnMzqofQ2KO1z8HbFH46cxza91FfKT6fEFevZje0i8b8sa2lUF+l
+KGDG43+aHLPRXHJ0agbGpGSIxQ/nVrp9EqpO6678I0n2dO0C+e3K+/YpPih
giHODDF1V3ACT2vcRaQ46XAA+vzUWSj9jvK5w/8bNeXYvj1Nu2isv/3e1Lwj
NQd3OFXjmXfZyvxI0TocjcjBVecsHI7hzDIc3zo15dh+Xji4unKOr6y/sR76
HBrzDo4p61T0nJU9YMN25kcNLb0xI3Ywk+5dyaMGV1RqygQs3cWerF2k1p/S
cilmUv9QP9P8ot9JPXMaT3NmSfT5FMMpptE5gtOTOr5KcUUl9ibwjR3tCdpF
av2N7zvc5uo5NMcdHFtpO5jWsJXe0Fmz09Ol+LaD1YquRWsWfU6jphxbzwv6
/ZR2kVo/1U7p+ml/rczRnLuI03jOXT0g5R4OtlAcU3DS0YjoM1N3Bpz+WvGP
kwtHC9Lz4i7tonFHKMX/aV/p6CopvWVCXFEcXrkGBTOvsMXh0hRXU/U01Yc6
HNupuSmtchpHmmDfpV20cczh/44PHc7m8Ct6FtPs9poppjm6lvK5w1Uo33D6
UIWzKflF+XzqjHbhRRNyra1d0PpCMaExR75av6PJpOI2NeO7y071gPT5Tsyk
8NzRHlM8xOEeCmej72rk9dGC3pYLKe2CPnMCjq3UNlNxuyP/afeAK32i4HlK
O1Xe2+grnT7orr71rnnTNDt11rQWNN7b8I/Sp1DftuOWzvgm8B+l93QwYaVP
nP7O2aPyXkfLpbyuwT8dfHZy+Uk2zQVHu6Dx5sydUzhG6xTlWinscnw+gf8o
53vlq1TfutInVGtq9LmUPyh1xMHStm7f1pZ3sVOYoOC2k1PTcMzZr3P3IIVd
tE9ZGZNO7Dn9o3Pujb07PUKDP6R6Wzr/pThGsXqytnxX3jnn68S2gw/tnKV3
Dxw+0/Cbki+NOaODRSkMdO6TtH1C+0QH9xycT91ncDR/igm0f2zX3Gk2zX2q
XSjPoTlIc9nJ2dR9DzrDVXR7Z19OPWroHs57HY0ixWFScbKyz6V7SfVlTvwr
mKDwJZprTs2dZqfONzX3pL9NzY6n9XHOHpV90f56pX8c7Er1g5TDrPRJqs9t
cCGKG6ka7eRCCk8a2vKOdYFyfqWeKnGyI84rmNPgeNN6WIo/qVi6em+Kw6d8
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
gfrHuWOTqmWN+qjUKcfPK+8GH/t17H8C5rI/rQ==
       "], {{0, 128}, {128, 0}}, {0.,
        1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1TFqVGEYheGgIK7A3sINaGWhg12wjJ3YRNAqIERBrHQDVu7CwvW4Apdg
qwnYBhIyf+adz6dIuAk3lz9zznnu/dfvjt7eOjg4eH/37NvR8cdnp6fHn17c
Of/hzfHJo4cnt88uv/z7Or8+fPlq8/vBh82fn/eefP32/Onj74ebXz8+by76
/UX3XPU5l3n+Za4vOsNVz3aT91z1/9rWPZc553WyvmruK/qz4vnb6tjqPqzY
xa46fB0fVvztdfq/+nNYseVtZb3a/21Zt/qeXfl/nU7u6t20YhcrnlOzdFu7
KHS45n/5c1j9vtsX/1e8fyf5v48b2VU/99HSbe2i0OH/odv8X+f/Tdpe286k
jdT8L1u6evs19/a92/znP//31//C+ff9zPznP//5z3/+/2/d5j//+c9//vOf
//wv5F7bCP/5P7Xb/Oc///nPf/7zn/+F3Gsb4T//p3ab//znP//5z3/+87+Q
e20j/Of/1G7zn//85z//+c9//hdyr22E//yf2m3+85///Oc///nP/0LutY3w
n/9Tu81//vOf//znP//5X8i9thH+839qt/nPf/7zn//85z//C7nXNsJ//k/t
Nv/5z3/+85///Od/IffaRvjP/6nd5j//+c9//vOf//wv5F7bCP/5P7Xb/Oc/
//nPf/7zn/+F3Gsb4T//p3ab//znP//5z3/+87+Qe20j/Of/1G7zn//85z//
+c9//hdyr22E//yf2m3+85///Oc///nP/0LutY3wn/9Tu81//vOf//znP//5
X8i9thH+839qt/nPf/7zn//85z//C7nXNsJ//k/tNv/5z3/+85///Od/Iffa
RvjP/6nd5j//+c9//vOf//wv5F7bCP/5P7Xb/Oc///nPf/7zn/+F3Gsb4T//
p3ab//znP//5z3/+87+Qe20j/Of/1G7zn//85z//+c9//hdyr22E//yf2m3+
85///Oc///nP/0LutY3wn/9Tu81//vOf//znP//5X8i9thH+839qt/nPf/7z
n//85z//C7nXNsJ//k/tNv/5z3/+85///Od/IffaRvjP/6nd5j//+c9//vOf
//wv5F7bCP/5P7Xb/Oc///nPf/7zn/+F3Gsb4T//p3ab//znP//5z3/+87+Q
e20j/Of/1G7zn//85z//+c9//hdyr22E//yf2m3+85///Oc///nP/0LutY3w
n/9Tu81//vOf//znP//5X8i9thH+839qt/nPf/7zn//85z//C7nXNsJ//k/t
Nv/5z3/+85///Od/IffaRvjP/6nd5j//+c9//vOf//wv5F7bCP/5P7Xb/Oc/
//nPf/7zn/+F3Gsb4T//p3ab//znP//5z3/+87+Qe20j/Of/1G7zn//85z//
+c9//hdyr22E//yf2m3+85///Oc///nP/0LutY3wn/9Tu81//vOf//znP//5
X8i9thH+839qt/nPf/7zn//85z//C7nXNsJ//k/tNv/5z3/+85///Od/Iffa
RvjP/6nd5j//+c9//vOf//wv5F7bCP/5P7Xb/Oc///nPf/7zn/+F3Gsb4T//
p3ab//znP//5z3/+87+Qe20j/Of/1G7zn//85z//+c9//hdyr22E//yf2m3+
85///Oc///nP/0LutY3wn/9Tu81//vOf//znP//5X8i9thH+839qt/nPf/7z
n//85z//C7nXNsJ//k/tNv/5z3/+85///Od/IffaRvjP/6nd5j//+c9//vOf
//wv5F7bCP/5P7Xb/Oc///nPf/7zn/+F3Gsb4T//p3ab//znP//5z3/+87+Q
e20j/Of/1G7zn//85z//+c9//hdyr22E//yf2m3+85///Oc///nP/0LutY3w
n/9Tu81//vOf//znP//5X8i9thH+839qt/nPf/7zn//85z//C7nXNsJ//k/t
Nv/5z3/+85///Od/IffaRvjP/6nd5j//+c9//vOf//wv5F7bCP/5P7Xb/Oc/
//nPf/7zn/+F3Gsb4T//p3ab//znP//5z3/+87+Qe20j/Of/1G7zn//85z//
+c9//hdyr22E//yf2m3+85///Oc///nP/0LutY3wn/9Tu13w/y8lxrBX
       "], {{0, 
       128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzVnb3KNlcVhoOCiAcRFUktqKV+H7HwADStQgQtoiJoIdrEU5BUnoClkBPI
sUhKCytLCyNYvII7rtvrvtaeFE+YvMyzZ+/1c//smWe+r/74l9//6efeeOON
X3/xk/98/93fvP2rX7372x984V//85N3f/7Nb/z8858c/v7fn38d/+Wt373+
x3t/ePX177797ZfHX/r4h6///q0/fedHv/jNfxyfzpmMczrHGNOY/2YcjHEm
a0m/OzluxWry91Z8WvEk5xgxT2N161pGbbfqpFVXt+r55d8/oYDX/+0zGf/0
3cnnZ3/866s//+0rr7/8va/932N82qc1/804nI7JOJO1TPLS6nGSR5KXVmzT
ObRwjMR8ggmT+NvXMmq7VSfp8dPq+TTOpJZejk9q1a5/Y/52HE5c3NIMLb2d
zodwRzr/Vn5JrFpYQeY/4axJ75+OU34k12r16el4Mn7KUy09b9Sz7cta9fmE
+dtxaPW4obuIdrI5K9Utae7SfifjtLhpU2vZvoZ4ikkuyPgt/bBZzwSfW71A
eGpz/q1Piglp7aXjt3xTqklanEU4Is2XoTdauJ3i2MvzidZK9x/SaxH/cjp/
Ep90zySN+WRuRj0butrQqK1jYy3GHkXqrw3uMHSdobcNjmh5ZzJ/Q69OsMX2
p6nemJzfqoGX8SEaPtVChlZv5Y7oQ7JG497KE7iAYHXrmOBnquvIvVQbY1u9
Q8ZPaz7FeUOD3apbontbOWpp11S/Gb7Mzh3ZfyC+pqXfNrXirXm29oXSvLR6
kKzR2NOYjE/wYaJXWzrz1r1Fu4/SHKU4n3J3q+YNnbMZZ7s2NveIyLXseaZz
IGOmmNPSLcZ8yPFE15F9jJbOJNiyuV9Bavj094lWmfisyTwnnJJ6GaLtibcl
cTZ82SQ+9jNF6bXseaaxIv2eYg7xHZO6IvMxOHcy5mQ+KT4QnExzZ99HTjU5
yWnKCwa3trQKwRzSa7Yva91z2TyHcCvpX3uv/pb3tMckvZbyi+3BJzhgc5zB
Uy0/RfRGi1tbOp9gbKtHSC7Smkw1wOZxqqPI+GkNT3ROi8dbHt8es+WFCZ4Y
GsP4faKBYy09b+uWVBsbfJp6lrT2yD5AinWbmqf1rBF5Bn6yLnv8NL9E86Te
k3DQ5nPmBn8RbJxgTotrjPGN+yMt3WIcE53f8rATzjLmRuaZap405oTLWr44
PSY1dvqQ94ek2LuJVy2cbPmgloZP55nWsD0+0fOTvxPuMDDfxklDy9k6oaV5
DK+XaphJ/Z/wlvzewfAItl829g1ITU74keB5S8OnuEe8ZzpP0iOb+GP0Uaun
CDZuvoOO6ASyr3L6e6pFWzltnW9gQvpd+7d1qb4leNXSe0QDtzS8oSfT/jVq
nuiElr4lfdTqqRQnWzVMeq2lE9KYPEEzpHNO529gRSs+Ld/X8oatGkvxocUX
5O8G108+rZq38Yf0b4uLbW4lPUV8a4v3yZw3NYOtedK+S+u8FSvi+yafW+9J
JthF+sXQq7ZWb33XwB+COaTv0vkTbiXvxDtdy3g/tqFPNjUDwTdDSxvfNd7z
01pLOmaL0wnOk5onejXFqLRuDW87wSuDywyNauzVEO/Q0vwtzWzkyNAMk/o0
fI3hAUmsJmu/pSFtbZxidasHCXe3aozwL9GELV+QciXh61aPpz3Y+tia2cjR
xC+0ctrq09M87XdHGLFq9Xj6XYLJqVZv6di0BwmPvDx+wvtyJ+Of5nOK1eYz
A4Qrbb9s5KilmY0ctfxgS6O2tFzLA7Z8lrFeUucEG9PfFqVYZOSacMfLMT/4
8ONX77/53uuP3nlrFHO7blv+jtRtS1fYfX0L8434tLR9yxcQjWr/PjTFAXI+
8Sat9Rp4mOq0Ta1r4K3Bm4bPTbE09VnGb2daGm9TS5ActbQfydFkDsa74CaY
kMYk5ZpbvN/SYKSeDX34NB1laOMWb976fVaq/VL8aWFyizs26zkdh2jdFGcm
46Tv3yb5avVUWp+2HyTaYxJbopdaPnTTUxNv2NLGBs6kGon4etKnT4vVpKc2
67ml4UltTLCxpTNT72Bo8pZGIrXdqvOUI9K1EDw09hla8ST6n9QVGbOVa/K+
xFRjPCFWre+26ploEkMrGh4w7dnWvT+ijQ0u3tQPLayzMZNgKYln6g1TrWjw
Zkv3Ej086VNDk9v3AloclOrtWx55ovFamryl2dK4tfrXfhdTSz+0sM7GzPRa
ad+d4tl6L/dES7cwJ+0vOw5GjoxYTXoz/dx6hmTzGdQJBrZ4kPjr1p7JaY2G
xjbud9s9bmAm2Ysg9W/4LIJLk7UQbGzFIeUUsi4SK+N4k+MMziW8k/qIlAeJ
9yRxIDlNtXEaczIfY40tzEnnNsGNlh5O683ApdZ1CYYba0lxL82pjfkkVhOO
a+0P3Iohqdv0WqdxjPuPk2u1foc7mSf5kHdFEsxJe4p4H8ILk2sZPpToh7Rf
Nj1RWjMpHrZ0iKHDyZit943bMWzp3k0v1jqnFXOCpUasDO3UqiuiNza9M/G8
dl5sT2TUzOa7ZFs6vFV7aT233gNp1C3pu5Zub+nbicZ+wr/7QPq6hSekrtJc
EDwh9ZzWZMplBua3PJHhF9Jz0rVMcmfcx2/dKzmNmWIa8Y9kH6P1zNumpk1r
LNUAmx7T4Jo0bmkdtsY3/IjtBWxvYmizTV5L8ac1TqpVCI8Y9fwEvUd6Ib2u
XWOT81u/M035pdX7xv7JLb4mfqS1P5BiTsubbL5vx+A1wkH2OGktEX3e0gCb
eo/4988K35F+IeOQPcBb70DYxPxW3xlcaejGST9O1t7SXQZWP+HvLcyx8cr4
bZHRs0+YMzmf/F6spf+J3mhhzi0uMHJNYjt5Zq91rXQtxl5NS/9Mxpz0lPF3
4qNv4dXknKfpvc05t/ZDWlhk60CyB0L6wq6Tlj63MdDmSqINyPzT8VNdZPPL
JIatPbQWxra4qcVlT+vlFncQPZbiLZkD0VEkX5v/dlUrbvZzQZtcOcHV1jhG
HsncCL9MxpzMwfZchI+MPV7Dv7R6meCh3Y+tmpkcpxxhcLTR+3avGXkxuPKW
Bm7xy2a+SC0ZvZ/iKsFGkmujho1ebml+ox/T+Ldw25izzbmEo0mvtTSnzZUp
Jrc0MMFqgmMkX6mXIflq8YXxbgHCTSQXJ+xt9XKrHw0NnK7R0DatY1LzE86d
5NT4bV2rtsl6CWa2MLmladPaTuc/yVeKM639/BZPGfEhOJNey+a7Vj+m85/0
o/Fb4FTbkLkZNd/6rrGHkGKIsb9xqtVWnRO+M/ox1XgtbXN6xy/hrNb9X/LZ
zFfr77Y+b+kc4nFS/Gxx7unvaS2Rmk/5KMWu05hknBaPTOa22adEPxh+mZyf
aptWX9s6v5V3I1+pvzA4zs5X2guEKzd/a2nwtbHPsNmPRJcSrdhaO9HDpJ7J
d23t93JuH3z48av333zv9UfvvBXzfovTW3iSrt14hu2WTyQYm+pDo+9a8Sc1
0+JrorGJZ7c19i09ZvjByX5jy5unWtF4ntn27wR/Wn6HzIHE55ZPJH7E1oqT
2rZ1jqEbjbidzifPJ9trMbyD/e6dNCYp9qY64VbN23o7xUMSE8Onp3NuaVej
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
w/aDLX1L9FhLc27i2wl/TucYz66catiOm4EVtgZo6fy0BiZ/T+dDuPV0joG9
xntOTn+f1E/rGSpSw4aXMd53R94Nleox21caWNHSQoaHMuJma11DA7T2Hzbn
YOTa8AKTXjCwlPhBolGJl2/tUbe0fRr/VDPYmtPWh61zJnxK6oHUBvGYRKcR
LDV01xPmYOQ6rb0UMw2fNamlVr6IliPvWGtx1kQvtTg63QMxepzwaUsj2Rw0
qYf0u2ncSA8aWEq8g3Hf09B+JG6kTlq9T/qO3C9rabZWfCY43PKPLT+V8gjR
CU84J9VI9nvRjWOigYnPbWEp6X2ydsKJLdyw66fV+0QbTNa4+e5HEp9WLlKN
cUuvtuK/eZzmq5X3TS5IvdJEr5Jn9VMsJb93S7X3RMOkvWNop1b9PJlT0rWT
GiZaxfYUKbeePBR5LtHwvLeObY5raW+7r4l/J3jY0mCn3m9pj9P46XPUhidt
YZRRh0Y9E14g8Umv2/IU6Xdb70dt7QO3+Lr1aeWIeK6J/jT0Q8rRp/kQTTX5
bitfKW6T38LYeSF1SDzg0zgl5YWUK1vYZb//k2gYQytO4mN72HSNxr3O0/gt
v5DqB8P7GJp2co7BlQbO23lJ8WSyRsObPOH+V6p5bM1P5kA0TItTJvklfG3U
RkvnT3Ce+LtNfrfHIV6jpT9tbGnNwdg32MyjwSkG57ZqKdX8LY1B+H0y/5ZP
uZUvwrOpTkt10aTvjGeKWtosjc+m17i152DoQPtZUDuPm3qm1YOpVry1rk3P
3uIIO1+G7jqdf/r3LCb8NdED6fmT3LVqIL2u7TVSDbapM4kOTPnC6Is0j4RT
SL5IDxJPmq6RrGuCvYbXM3R7K19kLcQXtHjk1p7Gpk4++RriNYhma8WzpYHT
vmj5IFJ7rXsWqa5IcYNoSFIDrXUZ3mfCWSSGk5iQfE3qsLX/ltZYusaWxzQ0
6i2vmmLdRJu18LClgdM5E324eU+Q1HOrBw1dZ2N1qwYmmqHlr4k2S+MwwYTJ
OUQTtnDDfjaSaNTWOaSeSV5a8U/x3HjHyy1fk/IIqecUkyc6sMUpNla3NBXp
r0ltk3VN+KLltdN6JvqBPKNO+DH11y391vIgBLeJDmzp/JZ2MjDH8Imp5yI9
S3Qg0WmTNbaw2vY+hl5K6y2NVSuPRDe29BvR+S3cSOez+S6jtC/S2iNzJnhL
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
1/on521YlA==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztmkGqZkkRhQsFcQsOFcS5zqtxC+0GrAYdNQjtQBpB3EKDCxAH7sV1uAwn
dlOCF17F6zjvOycy8//vgW5eXfKPGxmZGXnixP3pF3/4/Pc/ePfu3R9//O3/
Pv/wp19/9dWHr3/zo+/+8bsPX/7ql1/+8Ns///q//777+59f/+Wzb/7xs8/+
8/5v7zt//+Lff37/k9/+6/3Pv/h7+bdqs7Kv+tCxo/qszivhTyK2ibkn1lHd
e6796fptYl8l4ubaw4l4kj0wmbsmY+LKJ+8uqN51HeOyWdnvoLOOZHwHHf+J
Px3f1Ngm5p5Yx854ch6ruai+kblXcJ079bedvdp53vEhkX9c913Hn8n9r+YZ
kk8S/JDs204c1Pi77HTsd2x2xpOcoPrQmSO5R0hMOvFxjSH+u5Cuy1SO0fGt
89tqjJp/KpuTtX96/6tjXGeB8MMKZE0TvqXnSO5clZOkOepkbiT1O/mb+JwA
yS3quZ7kmdV7ST1CaoGOnx3/J7nBFav0hA5cd43Lt/Qc1fd27Li0u52R0EhJ
HbFbHEh+JjZX8X81Pp37IrHuq7iEa12IPtaBa0+6fEvMkcRB3beuun43qL2S
65i0BjIJolFXdqrxLg3fxf8T9YtLt+m8Sx3jwir9v7Lj2pNEl6vsEzsqEjpz
oq5fBVcdp67jbrFK7/NETeTi/2oPS13fZ6iXq+eJXJ24313xd3GSdF/A9dt0
PNNI95FdGkgaCR6eqInSOrP624620/ntbjWginQtpo6pfJusxVx8huQHl+6q
8sOd93O6dib651vm81YkeDjhuulc0XmXKw4dn3erAVUk4uP6dsKV69SYqDXL
ZO9Dtalym7SWdQpc3HjST8LDCbcncXDlhI6fk1qEsoa7gMTHxYdJbTVZs6g+
uO4yUpuTWmznWsAFFzdOx4poL+p8r8/V/Ex6rB2bHT8TvPHEerlCWqtR+Ymr
Dq3Gqz6Tc0Tu0wQnUWuxR+U5Hbju2USs1H2l7n/1tyQOam3iem/1LjXnnF4v
E62GcHKSf1w9l7Q26Nq3hJN0xuzGb1chsXauWCV4muvOUvcVmQvJFZX9TnxI
b70zfhLp+5TYJ9yY3LkubTDBsYkWmsgJJ/KcDlxrd7XpilWam6lncHJenfEJ
P9U9f+IZcd2nxP51/GT+cZ1fwmFcdhJ36yS/XQXX2rlyMvHNxbtU3SYxr46d
zm+Jn6p2fUpfQNXiqt+q60h6AYn8k9C+iJao2qmQqO/S/HYHqGtX2SHxVH0j
eUl9L6n9O/Y74ztIaBSunuZuZ0TNAy4+r+ZVV/5Ja1+d95KzmcgbHd86Nnfj
OR1Mxtx1jxP+6dIAO/6vsq/CtedVO5NzrODaM5XNThxIHeGq7xLaVzUXFzfr
vKuab/XbHWr5E0HqJpd9V/2S1jF20EkSurGrNkzDpUurYxI+uJ5P9pLS+b/j
c6Le2Y3brEKa+6n5k+Qll46Rtj8Jcn/tUC8TXXoHH9Tzpb4rrclP5n+1n6Lu
591q+VVQNf/d8iepnXcYnwaJf4I/u/xX68dVPqjnq/PehF7aGTOp/5BcpN6J
q2r5HeDShzv2XePVfLXb+Em4+F7azwqdPEPqx4QP5Bsb9ayl5z6Z/0kuUnuL
p9fyBIm857LjurvV/nJ6vHsNX0NC5588C5Par8sH19x38yed/0lOcGlBFXbg
P2mQvOeyo9az6p5cdS+syhUunX/VXZbWfl0+7BaTtPa1iv+Tu+9E/pOGWsMS
Dcd1v5B3Td4Lai/PBVLb7lAXT2q/xAfXu07xZxX/V3vfLu16B/4zCaLtqM/V
dXHpTul7YYdcQXR+1Z/EWUhrv8QH13hXTCb9meT/pL5Tz+Zu/GcHqNxVXYvO
nlH5gMq9E3r+DmdT3Z+qP4m6OK39qu9S567Oi8RkB38m9R/XOqpnXPWTzHcH
JM5OJ2eqYyb3sLpPSG4k81LvKeJPui52ab+JezbN83f2Z1L/IZy/stmZyzP3
BVw6Njmz6bNMdEJyRyTO5mStmn6XS/tVf0t8IzYJVvmTzv8uzq/ylo79jp0d
+IAKVy2sPlfv0MRZVu8p132RqJET41e9i6zFo3KzHZDI/y7OT/YD0TwfqS+Q
yA/quqTPckL3cNWqqv+qXkf0qPS7qvioWm7lz4ncbDck8r+LkxPNk/DPzrw6
41chkR+q8QndRrVD3kvqHdVmhXT/etW7SG2YsHPjJVz538XJVZvX8a7agfiw
A1z5QdVpE3UijYUyR9ITcX1v4+pNuPQWon2ptWFnvVy55cZHuPI/+Y5Ctam+
S60lV/X+CNLaS8cmqafSsXXVoS775E4hd3TiXUQvTdcI1fgbH0HyP+EY6r5V
czjhQi7+MwlSW6l8tXovqacmY5u+u0lO7oxXOY/rLHf87MShGuOqEYh2/WxI
1INX+wmunuYGLn0gjbSmqv72OoZoI5WdfmS883XZV+NAzmBijCsOk3v1xutQ
uXpCe3Tx82qOat3ReV6NmdyT6T5g57fq/a4+d8U2rTWpXEidLzmbiXOtxsHF
7XfWYE+EKydXNtUzm9hj6rsIR03vSdd9Sn5bzb2zN1TdO8FFXVoT4bodfzpx
Tvytrp2qTZEY7qzBngiSJ111ruon0ZFU+6664G2zfgnXvNTfqjotiVuCi3bm
6+pfT2odrpxf2ey8i+ilrnx+1wIzIHq4q34nGlTHfvouU+GaF7k7iM+u/nLn
eSJ/dsZ3xiQ0f1fdp+bqjs/VHMn6krW78Ta46mLXe1UNSs0VpF+QgKqHrKpN
KvsuDtwZ48qfLv1cjUnHB7K3r2Mma3PX+lb+q3XojRwSnDmhf07WLypO1z8T
/WV1X7nyvEtLUdeO+JaokdU4u9aXaI+3LjSDBOdM6J8df3bIq2ntOgFyZyX0
lusYwv/VOar8U+2bkBxLbFa/7Ywh55fs7R3O8o23IcENVJ1zMq+mtes0SA5x
6S0kl6p7qZq76oPr3iQ5ObF/EutF5rgDR7rxOojeW9l0cZt0Xk1o1wk/r3Dl
Ipe+p2rC6l1P+DypEToxJ/3lBN9WfVb3fGeOp+ilN14i0VNT1z2dS4mesMM+
J3eQi692fKueu3o96jqS/O86C+pcOr5VfrrytjrfzrvUed3IIc0b1byUzqVE
j1J1LZfPRK9Q3+XS59V5ET9V/133oIvbE/3Tdb8kaqjd9NIbb4O61tVzsvdc
/qf3bVrXTYx35bdVtVs1htQapF7o+EzOlApX/87VZ79rgceGq3e8Q108yeWu
UPPGqtrcpeeo71L31Sq+uioHdrgW8dnVd7hrgccA4WMdTNbFRO8i/lTzJdyM
aNckbp05duDi+el7v3rvDjlQ7VOQGipdq97YHzvzsY6fnd9O6lSJ3rSrxpnk
tK5vllz3fsdPdV6+aH3avquu7PifqFVv7AmXNntFIs+49l5aK6iek950572T
ebIDl/blWi9XPZXOgeQ8pr+huvsCjweXNpvOM669l9YK1PGdM66+N5EnVZC8
RPSNThzUemoyB5L3qnPsxK3j210LnAWXNpvOM647Ja0VuGqiRB3hypPVbys7
avw749Ux5LsXl17nilvi+wQyvrNXVd9uzEPlYIT/qHmGcHuXrlL5T+ZIfCPa
iJonXX1/Nc+TOy4RE3VfueKm3pXqu1Ska88bMyDn4gqV/5Aalugk6vOETlWN
ScTclXuJxtUZ08mfRAsiMenEqjNHMn43jSXdz7oxg4RWUNl36beEd6m6SqKu
IfcL0aY68azsdGyqSN/p5I6o5ku0PnV8J4aTedXFl+5aYC1cZ82lf6p7Rs3D
neeueaX7mITPu/QiF/90aSmd9erMpRqjPndpg5NroYL0R9K+3ehDPWuqjkFy
GtGCVB/IvFxaqKsucN1BrpqoE2eXpqTmosS9o+75VWuhwlUf3fx/LdL5qjOG
8Hx1TLoeuT4nuqhLdyLzUvMn4Z9pHSlRn6pjXLwlvRYqXHXTjXm4cpQrpxG+
2jn7Lo3F1StM5yt1XoR/VvYrH9I6Ume+qs/EH3UfTq5FYr6rfLjxOlw5KqEn
uHTsau5ER3Lxf5V7u86Uqmt14tZ5F6kv1HmRuyNh5/qc3LmVHddaELj0gRvz
SHPv6l1E/1HPC3nXZE9EPRfkTCXWt5qXunaud3XikLBzBblzXbk03XslOoDL
hxt9qHvSpbcQXqTOS607iMZOzqlLM1fPFLnrXXef6mfnXavGdJC4T9PxUX/r
qqlvzCCRzyt0cjvJ/yrHTugzrr8766WOmbyzSK4jv90ZRP8nz9MgPb5JP2+8
RCLfXpHWGVzaDtFnEnN0neVV/X1Xz1397W5I1Mid55Pzqvxx1Sk3vJjkZgmd
obKv5h8yX1ffZFJzdt1TZF5pLXE3JHS56/gdYnJKnXLjI9LcbJWGoOZVVXet
npO+c5oXpfv7Kg9U49OZF4lPAmTfuvTG2Rl/2s/O8xszIPwqzc8Jh3dpqp1Y
qXEmube/sq/7cH3u6u+76inS+9iB91ZQ9636/cOkftjBKXXKM0O9f9P8nGgI
6tkh3JLETeXACY7k0ljU3K7Gp2Nn576ASwdz3R2Tc09853CDg5zlBD8nPS9S
j6S/q6nGuPh29a4OSH8/kWNdnGG3vgDRCTs2ib7qnOf32Sfrm/DzmeHSRgg/
V/Mz2TM71J4uvk3yretOSdxNhDOo9lXfVLhi23meuF9cIJxw0s9ngIsvddaL
6POVz8SHzm/Te4/w7Stc+hW5U1x2iDZS2enYT9/1rn2V6I+v4v/qubv5vxeu
M975baIWSOzzdO2Z5smkN0pqK5feot7Ras042RdI6ITq/eiaiwuuOv3G2+DS
VF35n/S/MhH6PxLnKMGT1TEubdmlt7j6Ta7f7pZzOnM8kTOTHtyNt8HVh3Xl
KzW3pPdGgp/v0Jd09doSegup/V2aYef5JDpxW6VlERDOucrn00E01QRfIrVe
em8k9IEd+pKk1+bqp7i4q3qndH6rjklD/Z4trWW50OF7p2hZp4D0PdOc3KVF
qO+9IsHPV+ls6rzUfkHn+RUkj1V2VM6v1rmr8o/rbtrh/qr86fh59wI40vlq
8l2uPlqFBD9fpbN1/CRaMekvd8ao9QKpZXbLP+Ru2uH+6oBoDqt9PwlqDEn+
SbxrN52faLCTOluCH7q4Oqk7JmuZVftQnftu95c6R3Vv3Pz/dbjOMuFI5F2T
6+7i54l8SHS2BD/sxMqlV3Te24kJ0aZW5R+y307hz+oeuHO+F50zVYHUBYnz
q8LFzzsxSej8iZpFHa/GgXA8F+9V94Bqk4Ccix3OFEGin3jjJch5Ue2kzy8B
6YOTXOrS+RM9BVdfleRSUnuSGJI9k4BLS5w8UyoS+uSN1+HqLZKz6Tq/Kgg/
JFw3oSml30t6E521IHZc9UuibnJBrZfV/ZnwWcXp/etTkOBmq84diUOi50i0
DvV+UfMAuRdU+2rerux37JD5krVbxU9cutYOXNp1z961QB+E25O/EzlTnXsi
L5Hxaqxcmowrth3+oNoh512tH9W1U9erM/cK6n5I20nDxU9uvET6fKXP3ap7
35XnK/vqfk5weBJb17ok6pHKn/Rd6eInk9x+VS1AatiOnRsfkThfaY2o40Mu
YnzuZK+6dB7VPoktqR0SHM9VVyb6ERUIH3DVCKt4NeGik36egsT5Ipow0Ys6
c6Tx+j6ban5I5AHXGSE8uTNerX1U3+rIfXo8qdHSNV06zq7fVmMSSNRWzwbX
+UrXpC4NOQGXVkbygNpzVHM74Qaqb656sANyB1VjXDWdOhfSd57sWRNM7o1H
RVpvcdWkO3OPK1xagesOdfV8XXWByrFJPehYz+5cdtifJM7kt4m5dLDD3jgd
Cb1FzTMuPrwKRG90zV2tF1z6f7ouI/ejK0e5NPM0XP2UxLtcSOSWSf93AIkh
0RbUnrJLG5+Eqx9KNDFyp6iaUoL3krm48pKr/iI+ED9VLcvFATKz1PxP741H
AumlkvFqjbYb17oioduo9hP3qar7ueKp1p6u/m/HB9d4FxIxUTnA5Hxd+vPO
HDINdX2r35I6K5H33HHqwtVrU/OeehauY4jGnlgLwvPTPlRjVmn+k1r9zn0B
knPSvp0CF59Ue52unLODDqmeC/W+U3vHCZ8n6zLXHiM+dHxbtffU97o0yfS7
CFbth9OhfuPh6q2r945qh8bl+0Dm66pVid6rztfVg1DtuzRqdb6VTTLG5YOr
dt7hXYmYqGOeDeT8Es3nCqI1VXbSd73rTJFvqMjdQc6CWte4eCPpUz8S91Nr
IpcmmX6XKyYJjvqoUOt9V2yJ1kS0jnTc1LlXzwn/79hM1FYunpDmGydyv4Qe
q3K/xLtcMenE6u4FfATRClyxVbUmlTMnQDTzyiaJLekFuPrIif7OzeVeIhHn
qx3XHljVl3H1JZ8Brv2gxpboxiofTsClY5DYujRYci+rMSfr/sxcjuiKrvPr
4thkXh071+euntojgejSRN9T8xip/RNw+ZnQtVQ7ZC0IXyKagxrDt6zxrlDn
SDSZxBjXvDogmiR57yNB1YpJPu+8d4d639X/Um2S/Uzi47p/J+uUjv+nwMXz
V+lvrjxAYjipOz0SEvWU2lskWkciDoT/uHQtVed31Urk/nXljfQcT4Srv5Oo
xa4+uDhJBztrCCeC8M+EZjvJ/0mvrbI5GTdy7lzr3hnjqlOegdeR/Oyyk7Dp
is/9zUAOaj50abaTNaOrViV3GYlbgieTe9D1jUGFZ6sFSF1JtJqEzUnNf5WG
cDrUM6VqAtW7nHNQQLgBuctI3Dr2iRbn0qI7/pCYP2otQHIX+U4jYVN9lwrS
vybvfVQQ/raqBlTh4vmJnEnsk1pg1TcnJOZqz+gUuOopUmO6Yp7QYVzvOn2f
uKDmLlctOTlHApLTKjuuuBHu7bqzXD3fTszV9eqM3wEqz3edKVdO7uyrhA4z
+a5nBskV6pgdoOYlwuHJGDXfduZYzVfVBzo5itxHnfjsvMcqpHs9iTFk3ZXY
vIbJd914iUftxasavosnk/4vqVMS2lSCD7jqsh1ANP9V83Vxfhf/P51znggX
HztlXVycJ5FXyXuJn0SfcX0bRrSmHeC699Pzde3/hO70SJzzRDxDLz6hc5K8
Su5WNU+69CvyXJ1X5/kqJOaergVcumL6t4/EOXeGysdO7MUndE7yXUfHTsKm
+l4Sk+7aKPPauRZI9F7TGovrrknw/0finKcgwfF2wOS3DZ1969KH1d5rx+fd
egE76wAu3S9dC6h7j/jvqvtO55yn45QavEKC86vvJf1NlQuRs+D6VtPVCzhF
ByA9a/W7r0R+JmunfrfQ8ZM8v8Fxeg1+xapvG9TzRTg/yf+TZ7PzrlN0gE4u
JfdXh+uS/KyOUe8RUrOczjlPx4k1+BUuzk/mqJ6LxPNEbBO9gBN1ANd+UO+L
yb8THINwrVM454k4vQa/YudvG1z5czIHknVP9BQ6zxNw6TCkv5/+++oDyf9E
azqRcz4STqnBryCcv4PJb1rU55Oc3/VNkfrezvM0iL5BtJ1Jnk80omp8ot6p
4vbWtX12nFiDV34muCjJtyR/EjsErrOWuNcm7z6i83fsJPbkpH01VqTe2Y1z
Pip2rsGr95J6s7Lv4nud564xibVwnTVyr63SARLfQZH6lPBnl/3JHllnLW7+
n8NuNXjlA6lbSY2s1sLpOLhsumqfVfxzcu6d5ypncHFvl/0rXN8bpP288Tbs
VoN33ku4ENnPpJ5Nx4HYT3zLl+afZL7q3Du8SF0jF/dO1CCT+81VK914G3ar
wSvfCE9IfNvQqRcSWorLfkLrVt9F6ikXFyV3jVoLuLi3S/+Z3M+qztPxU/Xh
xkeQWqxjx+Wb6mf62wbXmSVxcNlPc/vqt7vxz87z9D6p3pXQfzo+dOaVuH9V
/qa+98ZLdLjxqh4cqUES+mr6rKXHJ+531x09yT9dOmdiX7k0H1VjITlZXYvO
+pK9d+N1qPdsuhfv4jnVXMhZI2dz1b2jxsR1vyd4QqLecXEMsk/IvnVpQepv
SV1GfOus7423Qc2r6XUhZ9Olr6Z7aol7h3BscgYTPM3FPyfvWde6EB9ctZi6
Rlc7/wUXx6cj
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztnL/KLVkVxC8KYmgkaOYbiJop92JmJoyIoNH1XzQojIEOGMwL+ATiW4iR
iQrzAj6EkWBq5gyIdLKl6lb91t79nRP00HPo3r332mtV1aru737lx7987+ef
efXq1a8+/8l/3nv7629/8MHbD7/3uU//52dv3//6197/7CenH/33+PT8h9/8
+7f+8Mcfvfn+Xz9+7Z7/5ncfv/7Bn3/75jtf/uKb1fnqeuV34prJdbnzVJ7V
Wq/7rBPi7M4/iXMyt1b8T6iX03I7mU8rznRuEM9SxnHPr+N/9V/fffPhT7/w
+m8ffSna0xPOk3Ulz9q1d7v2QonzCTzlzo3Y95Prhc7tZO2tOE/mRqtG3Dhc
x1+dr65v7YsyB+I8WVcSQ2L85Ln0Xihxpjk3OVfW0tr3k+uFzu0Er1pxnsyN
Vo24cUgwXJkbzY90jbsxb+VJi2ddXG09y53Pq1ev/ncoc5jEQKJeaBw7oXYm
c7sVZ5drWrlB1EhS78p6r+fXuV0Pgh/pGl+ty933Vp64e5Q8N3lWEue//OL3
r//072+8+edP/mH3JgSOKfns1guhE04435XbkzhM5AZRI0kcVuvalf/0ubIu
9173dzc+yr64e9fKczdWSS9M8BShf5J9P61eWhjYGpPGYSI3iBoh/AG31yC4
Y1LnJ/u7qx+kc5ioBYJ/E55SxnFz2K2dRCecoPMJ/HHrroXDRG7QGjXhjtW9
Sa+RcMdkDFdza+FJq34nc7h1JDzo4o+Sb+44CYYrtZNgJl0vLQxMctvFvSQm
RG7QGjXJk9X8V7/TPhWtdQkdQtevm89JDreOBOcTbb/KNyX/J/OT0MCteiEw
0I0/of/pHoHWja0cW11/rZ3VOTFPWusSOkSZD83prRxuYX5rzq62V35350Dk
pzsfJc6teiG0dCtv6RymNWFLNyY5plxzxfnrNavfad4k8GQ1vlJfK5xJcnhX
P9jqC1q5nfSSrR4zyRN6X3b1sy1Pg167m8PJ2hOuUfKHrvfVWhT9T/MmoRtb
YybvQWjdSNRjosGIfVz1qkS/meQS0fMmOUBgF5G3Se619LAb85ZeSmqhlWOJ
/ifymeAFOs5EDie57dYjrT/dfXT1CR1DYpxWTbljJpif5EPCa0R+Jj1+q94J
D9zNk0T/t/aU1o0nvGtozZPgxEQL0T2Iok+IGBLjEHgyue/Jeuk+JYl/8r2W
u/ZJ7lD4ztX/dD/b0o0tzdaqX3eviVgp+aloIYIrXX2i1G/y3NY47r2Evm3t
+yRuK/dOemhEje/ijl21doLPQ/Qabg7T/lWi8RJfpbUuJSdX+j+phdZaCDwh
tHRS1wRuE5qtxfVEjU9yh3I9UWtuPif7u8tXITCHmP8qP1e/7/JVVvifaJ5J
byepZQVD3Jpy972Vz8keEZrnBJ2Z7LvLHQrXK55/kg8E9ibzaXEQjXvE/JWe
TtH/7hxcrbXC/5UOIeZAeAtKzrhedGvfd3EofT3RxxGas/XvLSRcn9TapP9P
73tLk7uYQ2uM67nb6xHzUfLZ/Q6BwBM655O8csdP3pu3OJTmhRZH030Q0Wu7
/JLUGq2FJuuC0ORubhMaQ9lfJW5E3irPUr5DmNSNk9jSGr/1N/4Eh+7S/27O
JxiS5H+LO1zNv6o12qts6Y2TNXmSD+69yV4TeevWF7Evk9hOzF8ZX+H91t94
EnrvhH3c1QcRWJF4v8nf4BBeXFIXuzQ50Qe5+Nn6+6ld+JDsy6RudLHFnX9L
4yV/4znp907uo4urd8nhlQeY5IniFbfqZRJbWjrWHZPWk4rPT3McobEn49zC
Fnf+yr2KfnP1f6J176L/r9e4vUCLg4gcdnPAveY0TZWMQ/Bsi4NamlDZ30mO
2+WfTObq6vqkj1N+T+o9wUA3Prv0v8KbSu6dlsPKHBL9r+jG07C9pWcI7qb1
pKsJaS+rtY8n9ybEefINZ+Lfuth1R/2/4tMTNFvLJ3SxXcGZXf9GXItzJ+u3
xUGrNSaa0MWThDcn/ZNdvQntp7neXeLf0ti7S/+v4uCOuSuH3ZgruJ14Qcpz
T+CIJH8IbUxwkKvrVnzRiqeb/4l/ckJv0qrrRMMTf/P1kvS/m1fKOHQOJ9cr
GJ6cJxhyGkcQvHwaB61+J/59J6U3IfSPMmcix4g9dfVY0i+8VP1P6MMWvyec
tbre9X7dY/LfiJvkiFYPmGgkgoOUMV0vtJWTLf3j8kvCHS63unvqfo+t1GlS
m3fU/642I+q6peGVPF/9Tnv+k/9GHM0RRA+4i4NamsflC+X3JM4JvyTc4fJF
a0/pnr2lgd0a3KW3W1iU8I6bP4nvp+iB5LugFobs0v8JDhPrbWFjEjeXOxK9
mmCjwi/J/BO+SPiu1aevajmpo9P0P+GL7tJLq+vdbzLdHGj9/ZcbcxrbW/Gn
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
KGsncu+0OCv97GotLQ8niaer893Dxckkb11sT/pl5feWTk7G3KX/aS806Vvd
OiV0qYufynNXe6TUYLLepBem9T8R52Qtrv5P+I7ofZRD8bha76pc7e3ipKtn
Ejx3r2lxREv/r65peaFEL5ycu5yl1IvLTW6uJp6/cr2r8Qj9vyvOCVe6eevG
ZPK5LsfR2ruFk7vwmZhzUvstze/mCeEP0F5o4tu0evNE+yX8q+TkJL8TcU64
0uWRpCeafG6rT2zpTxqrJz0fgl9a+p/wQgl/oKXzW7zjYourdVtY6ubGCnsn
37MQcU44qOVhJnxK578yHwXnCawjsPoEPD9B/yc5RvsDCXckeLuazypuhH/l
1mnLE0j6wRa/t+Ls9qeEhnH5iOhzlVxy57O6l8bPFlZPYnjrWQnGrsZM8m0S
w3dpKqVG3DUSuOFqV8XzIXTvaXFOuNXNQ1c/03FOtIH7jmBS/+/ijgTzleuT
3FBim2iqSQynNVXLH0hqLdGxSe0T3N3qj2jPPOGdVR66v7t1RMdZwdXkXZKL
8y28nfSUiDm09L+Sh26OERju8pHLKQQ+JFjq4gMxh4S7lfgTXEz0Kcp8lHco
ijZW5jMZ5wTfVut1cek0L4i+dzWOgmMu/rs6051DguFuDhOY2aqvhKNdDZDM
weVEJYeJ5xI+ect3WmljV+8lOZ/EWdnrE/ycSS+IWFfCHS39r+RbS0MSGEVg
pnuNUkdKDSp5ldSyW+8JV7a8ndb4ru4i+mv3cHuHVpxdzZZgaRKfJJ673hcQ
/o+r/5W5JbXQ6seTdbmYmeBDgnVJvUz6JIQ2mJyb0rO4cyOwLtGWk/otWfsk
F0zqf5ovEkymuSbJq4QjEsxs+RitNSr1MtmLJT7YLg+N5utEh0z6BskeKfnp
5i2Bqy0MpzmC4McT9D/tLbfqzu2dlTgrOOOuUVlXy49y+y9a/7sxV7Q9zdcn
Yw7Bfat3GS52uWuk723tI/0sJf9p/e/+7nqPLq629JVbL61vKhSeUrQW7cMo
+5Lo/9a5wuluDic6hMYBZQ4t/eZqKrr3obnV3cdkr5M9pfW/oqNoL5f+DiGp
/VbvcJ2PorUIHJ78TobwrJReYNKHJHBgUr9Nzn/XvXf0o2j97/bghJeb6OEk
f1r+sHK960GtOILQ/0puJ7yjjJno/8TrS7Qxfa7k+Yr7Eq4n5n+C/m9xXOte
ZU9p/U9/B+hek3iPLf2f4G0SN3ffWz6M66u747gYpZwne93yId0aT/Ckpd9c
/CHmP3lvK86te905E/qf9pBpv7fFCy3PJOGF1jWtvVPypJUPLk8pvaGL/y0f
ksBM5Xo3f1yd35r/JN5O4nOLX2j9v8qZyW/5kvNW/lx/b3nFu/hx13eYCZa6
PNXCLlcnu1wziQ8Jz7ZwbxJviZ6L8JRa9yo16+r/VQ67+JD4FYnmb+2pUuNu
/BM8nMThlneXvCtv1WxSR8p6Fa5pYaa79ta3PbR+buFtiwtoj4hYV8Lv7nqT
3pzAPaWukzivnkXo8JZP0tL/k72J8l6AqEE3bq36IvAh0S1KHRFYOom3uzCc
yOGk3hMMTPr3Fu4lfXfLE2h56S2fpDX+ZG+i4FiCLcq9yV7T+JlgqaJbiPcX
NPdN9hT0kfCUm7duTJTaJPRky/NP9kKpF8JLd3Vaa3zlIHoT5bnE+51d+r+F
D6tzwlOd9F5amNnS/5PzP1n/r+qxpSfdvmBy32kvXXmWgkXu+PR3mInn42qM
pL6SvSb81eR64juKFnadgJmnzT8Zx83bJJ5JPSqHW3d0biiYmfQ+9LdAxPjK
Gl0Md7Vry6+Y1P90riq+KOGp0rh3R38m2etkDoQ/udIVroZcHe77ArcXSPZa
wTHC/9/1zU/rXUDCI8mYBNfv0v8JthD6v+UF0ffSmN/SGMmzJvW/6zMkeli5
Jvn+x43/aj6E/+/GwfV2Wnu3utedw+p3N/6KX+HW5i7938rVlv5v4eTkvcqc
W2Pu8pdo/a9o/kk97PoGLY3h4nDyvnWXn+N6LC3N3/KXlBxwa3xS/9N6+LTv
qIl7J/2ZSf1P5K0y5iTWtb5XIWot4VZ3vQnOE99kunza4ikXoxK82qX/kxxW
7l3tnbK/LT+N1v80lk5yB+H/JPqExnZFEypj0rzvcmvre8tEcyb9VBJnIj4E
Rin4TOv/1jVu/554/jQ2JvhM42prbm4M3TEJf7KF7Qm+Jb1Mco2y9oQTr9cQ
3k7Lf5uMz+r6BKNO0P8ELin9u6v/CRw+AbddXJ3U7cnckhpM6sLFupYnsKvW
CLxVajPxcFp75OL/Lj46Wf/vwqXE8z8ZDxPead3b2rvWvbT+34U/hNeqxFyZ
8+T7jsTDSeZ8QnySfT9N/0/iktsXEBhIrJHom4iY0/NPalB5rpIzNP60vNYk
D2l/232Wi0XuHrnfhBDxUWJ1F/0/iUvK+Mp3s7v0MO1HJfe21nUX/b/KGeW5
Cf4QPkArtpPvOxL/h37fSsSnxUf0XhP1ReOMu++EHqbXSPDsLmw/Qf+7/HKC
/m/xgrt2+u8dXJ51+eh6jaIPifgkfPTU//8fZ1ZrTOqIxnA3t5P408cd9f9q
/JP9/5P1f/IdvoJFqzm0+GjVDxL90Wr+k3V0F/3vXjP5/pfGSSI+rYPuXxKM
Suqihe3uOHfX/0o86Z6i5S+5fcojf/9zgi/h8juBey2cpONG4D/BHW7euph5
/f0u3/+crP9dbZnEkP6+KMHtJB/c+npJ+j/BEOLdirsuovfZxVnEPE/T/4oH
26rl1lqSvaD1f0uf78LwxMt6fv8z40u49av8PjnnybjR3JQ86wT9v9IPLuYk
HPGS9D/RQ+3yfxR8Vg53PkoO03tN6/8Ef1a/r96hKO9WJvV8C6tbfLGLm9y9
nvT/Ce3aWkuLF9y17/L/T/B/FKy+Hs/vf2Z8lcQ3a2HUJKfQc3Cf1eKCXfo/
wSUX2x9B/7f8f/dZbp4k3v4Kf5IxH+H7HwIrEjxxD2LMybgl+dPq9SYxKhlf
wZ+n/u/6/6tYtb4dbfURq7m1vn0l6ivZ69bcJnFml8amsZdeV+v6XRjlYqZb
y0/9/27rnfy2M+kL3JgovUAS5zvq/+QgMNbFMRobT1vXLn45Qf8rtZxgu4uZ
d9f/qzHdGNLvjie/X2p5TXfR/ydgMoF7k+f0ulp7RPd6bt4mmPn8/mev/5/o
Z+XdccsvonsiJYfpvSZyksYTgpsmj1082Mqr1non9b+CPy093FpLskZa/0+e
KzmW6FuiB3R/v4v+b82ZwJCTuWAXD+6K1Wn6v1XXyTgvSf8n71uTv7e6zofw
dpIeUBnz7t//t7RlC0OIeycxsDUm4fkQcztN/yt1/dT/+fvWROdfr7muq+Xt
0D2REqtH0P+Ejm3dS2M+zWWE5zPpU7l56+bn9ffn9z9d/z/pC5R7lb2b9Hbc
eCqxeqn6v7UW+t53xfsm9rbwucVBk/yeYJQyB0VD7sIHhbNO0/9JX0DgA+3t
JPzuXn93/T+JezRe0dj4kvqU1viE/r+eP7//eTf97+6RgjkJPhDz2aX/lV7g
ZP1/mi5t4ZV7DY3Pp42ZjD+p/xOseGT9f73X9W0I3evmzAn+nrvvSkyIvXZz
chL3CHw+Tauf0KfQc96l/5O6pvGhhfOEJlzhkhITN1YtzdCaD63/iZoi5nay
bjwZtyfXTo9J5MMJ+t+t60fT/+57WNdvd3Xval3J34W1csDV2CvuSzAk2etW
fSW4d3fcbmm2u58nMaf1/2n+QAvnW5rQHV/R2InuVfjCncMu/b+6N4nDpP5P
8JPmjl24nTzLXfvkQcd2F0a52PVo+t+djzu+onsTzZ9o3SQHkvdKdB3R+n+X
btyF25Pz2YX59FomMep6/vz+Z8ZbS7yX1RwSTJvU/6334K06IvT/JOacgNv0
unZxwSSnn4ZRJ/gDSq29JP3vauDr7/R3OMre0X93luSDuxdJfRGY08Koybmd
cO9k/JPxW3nr1kirrpNxHln/JxpY0cYn6P+k91HWS/dirRxoYUKLI2i82nVv
C/MntX2CzwRGtbDdHecR9H8SW/e70BP0v3vewrFJ/e/Os4Vjp+HVCfcmcdsV
/xP0//P7H45bk9i6+j/55vME/z95D36a/j9Nz9PzT8bfxWtJ/P8Dcs0rCg==

       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2b+KJGUYxeHBBXVjvQERDAx3Y7vdVLPVwEh2RA1kQVgDMfMSTMU7EQPx
Fow0ErwCA2FDZ8FgksLv8/3T553zC5TjMHu6uqvq1LPtG598+fjzl66urr56
9eZfj6+/fvTs2fU3H7z84j8+u3768MHTezfx23//eZG/f//e6e0/Xjv/8uHv
p/sfPT+99d3r50///vWd2/n27xzlij+70hN53UjP0e9E3stuf+Tnu6+b9Tlk
XQMrv9/Zk5Wz3kvFa1Vcz5H7MfI5ZP3Z6u2qvnduHgHn//rnrzd/PL338Svn
n558cb7/52+nd394ePr5+aPT7Z9n/dmVn0deN3L8kWPY/Uwin8/K8a+8buQ4
dz/PlfdScY4iPSvX2EquuOYj913W5xC5rnbPV8V7ifx+5DxmHU/WdbLyfDns
XHlWHr3u5r1z+LpHPSvHv3Bsu9f57meyewwr73flPGadu7RzGnitrJ8ffp6R
87tyrW5+PlnX2KWuq917Le29BK7byHM/65rcffbt7nlWrrjX0q6N3Xt24TrP
2sbIbkSuk+3j33z+luxn1s8L7vHQ+Q1s5vbrJj2bQtdb4FlW8fwNfW8WOdeb
x1a94WnnMen+qvZ/yTO34B7cveazzl2Fl6oNVnK/F29sxfVf8WzqNGT5eQ/c
+53HprDzoc8kYL8S/xdf89XX58X8f6n9zMq710z1xhZc/1P8v31vVvh805Al
x7lipCn+T7LfnfJ/py0L/B/yarHB0p7FBbvR6v+K4xfzf7lFk/yfdU0qbHvo
My94/k73f7UtW//uVrE/WZ9/xf8L6HxG4P//twlJ9862/7P+7nChZ27Wuat+
/o70f1au9n/FMQf+HoT/8X+a/wuuN/yfcN9tPn9H+r/xe8uSv7tVf7cZuAbw
P/6PWHR7c/B//L6LfOc2xP8r+7Z9bMX+jxxz1i5dzCH4X2aLym0j0KnwzFXw
f8R7yv4/fN3I94qN18zKMXc+9/E//i/5brOxE/8nfOcm7P+S5+budywC10z1
c7/iePC/zhapWb2iU3l/Os9j2nfswv7ffa4dvcfq61n5uV99PHLPCPyP/wUs
V3EeFa4ThWs+7f2KXTMK5t/eSfwvs0VqVq/onLI/Jfdd1vfqd8j/2+/3Qq6+
1HM/7XgEth3/17lOuXP6/ijsgLP/j45/5ffv0nM/7XjwP/6/UOeU/VHeATf/
q+1853M/7XgEth3/17lOufMu7c+ldsDN/xMz/sf/na6b2OmwP/jfJ+N//K/g
OuVOh/3B/2T8j/87XTex02F/8L9Pxv/4X8F1yp0O+4P/yfgf/3e6bmKnw/7g
f5+M//G/guuUOx32B/+T8T/+73TdxE6H/cH/Phn/438F1yl3OuwP/ifjf/zf
6bqJnQ77g/99Mv7H/wquU+502B/8T8b/+L/TdRM7HfYH//tk/I//FVyn3Omw
P/ifjP/xf6frJnY67A/+98n4H/8ruE6502F/8D8Z/+P/TtdN7HTYH/zvk/E/
/ldwnXKnw/7gfzL+x/+drpvY6bA/+N8n43/8r+A65U6H/cH/ZPyP/ztdN7HT
YX/wv0/G//hfwXXKnQ77g//J+B//d7puYqfD/uB/n4z/8b+C65Q7HfYH/5Px
P/7vdN3ETof9wf8+Gf/jfwXXKXc67A/+J+N//N/puomdDvuD/30y/sf/Cq5T
7nTYH/xPxv/4v9N1Ezsd9gf/+2T8j/8VXKfc6bA/+J+M//F/p+smdjrsD/73
yfgf/yu4TrnTYX/wPxn/4/9O103sdNgf/O+T8T/+V3CdcqfD/uB/Mv7H/52u
m9jpsD/43yfjf/yv4DrlTof9wf9k/I//O103sdNhf/C/T8b/+F/BdcqdDvuD
/8n4H/93um5ip8P+4H+fjP/xv4LrlDsd9gf/k/E//u903cROh/3B/z4Z/+N/
BdcpdzrsD/4n43/83+m6iZ0O+4P/fTL+x/8KrlPudNgf/E/G//i/03UTOx32
B//7ZPyP/xVcp9zpsD/4n4z/8X+n6yZ2OuwP/vfJ+B//K7hOudNhf/A/Gf/j
/07XTex02B/875PxP/5XcJ1yp8P+4H8y/sf/na6b2OmwP/jfJ+N//K/gOuVO
h/3B/2T8j/87XTex02F/8L9Pxv/4X8F1yp0O+4P/yfgf/3e6bmKnw/7gf5+M
//G/guuUOx32B/+T8T/+73TdxE6H/cH/Phn/438F1yl3OuwP/ifjf/zf6bqJ
nQ77g/99Mv7H/wquU+502B/8T8b/+L/TdRM7HfYH//tk/I//FVyn3OmwP/if
jP/xf6frJnY67A/+98n4H/8ruE6502F/8D8Z/+P/TtdN7HTYH/zvk/E//ldw
nXKnw/7gfzL+x/+drpvY6bA/+N8n43/8r+A65U6H/cH/ZPyP/ztdN7HTYX/w
v0/G//hfwXXKnQ77g//J+B//d7puYqfD/uB/n4z/8b+C65Q7HfYH/5PxP/7v
dN3ETof9wf8+Gf/jfwXXKXc67A/+J+N//N/puomdDvuD/30y/sf/Cq5T7nTY
H/xPxv/4v9N1Ezsd9gf/+2T8j/8VXKfc6bA/+J+M//F/p+smdjrsD/73yfgf
/yu4TrnTYX/wPxn/4/9O103sdNgf/O+T8T/+V3CdcqfD/uB/Mv7H/52um9jp
sD/43yfjf/yv4DrlTof9wf9k/I//O103sdNhf/C/T8b/+F/BdcqdDvuD/8n4
H/93um5ip8P+4H+fjP/xv4LrlDsd9gf/k/E//u903cROh/3B/z4Z/+N/Bdcp
dzrsD/4n43/83+m6iZ0O+4P/fTL+x/8KrlPudNgf/E/G//i/03UTOx32B//7
ZPyP/xVcp9zpsD/4n4z/8X+n6yZ2OuwP/vfJ+B//K7hOudNhf/A/Gf/j/07X
Tex02B/875PxP/5XcJ1yp8P+4H8y/sf/na6b2OmwP/jfJ+N//K/gOuVOh/3B
/2T8j/87XTex02F/8L9Pxv/4X8F1yp0O+4P/yfgf/3e6bmKnw/7gf5+M//G/
guuUOx32B/+T8T/+73TdxE6H/cH/Phn/438F1yl3OuwP/ifjf/zf6bqJnQ77
g/99Mv7H/wquU+502B/8T8b/+L/TdRM7HfYH//tk/I//FVyn3OmwP/ifjP/x
f6frJnY67A/+98n4H/8ruE65s3N//gHVKHcx
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1zFrFEEUAOBDo4iQ2tompQFTWKi3WqeLIFgonKCFBISkkFT6A/wFtpaW
tpZWdnZW/gZ/ghew2BRD5jHzbjfxK/b4cszNvnnz5u3m9su3B6+vLBaL4xvr
j4PVu8dHR6uTJ9dP/3i1Oty7e3h1zQ//rlP/3no/7P36udzZ3h927n9++OXr
p+Wbk0dnPB5Tcum3veZpuVfL+GjM2eNb3JLnmjgz6mTO9ZB9Rmrmb9mjlpxn
x5N9Zlv2d5M9JFoD0ZjXj4Bzr+H57vD02Yth++a9Yf/bnwc/vn9c3rl268z3
m5wn+xrHUxNz9vg556HGc1hLrzy01Emv/EdrqaYOo/G01HZGbWTkIWPvWmJo
2bvSVcrP+NlRE/94fMY82R7ftyY/pfh7jZ8qJzV5qImntO9T7W9LHko5qamT
6NpL94r22FL84zHj+VvOb01tl+JpqY1ordbkoZSTlr2rWUvLe0ivMxVde/aY
aA5b1turP0TXGHVGTjJqtRTzJve3Vx6i30f3sWaeUh+IPpcz6jx6FqI10+vM
Zux7r3haaikjP1Odzbn1hDnENrectDwv5hB/Rk/InrPmnblXX5rbe9cm6yfa
8y9ibTPztP2wZs7o/1NT9czL6po+L8/MPFVfmkM8l9Xe+ZmZ/09752dmZj2f
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm5r/8CcdvV
hg==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2TGK5FUYRfFGRdyDkQsw0VRsDEQwHFfQikYDSouImakwuTuZPbkKnQGD
SRq6qf5X/b6vTqCM0n3r1X33nQP6yfc/v/jpvZubm18/evO3F3e/f3V/f/fH
dx++/Ycf715+/tnL99/88c///3r75x9e3d9+8Mu/X/z29asv3/3z678/vX39
zce3f/3z7e1D//6hn3lqzmN+9zF/PiX/oZ8555mP+O7P1dvR539q/lM/6+g7
eq53dMR5nuvunqvzU3LOucmjf/cUFh1x78/1WULmpVxwqZwjejvlnBPvTj7D
OTd2xPc92qHymzrnNi7lhUvxR+CJnHPEXcg95ILz352w8ylv6lIumM7tKTyR
c3JBLtA6F7aaC2ZxewpP5JxckAu0zoWt5oJZ3J7CEzknF+QCrXNhq7lgFren
8ETOyQW5QOtc2GoumMXtKTyRc3JBLtA6F7aaC2ZxewpP5JxckAu0zoWt5oJZ
3J7CEzknF+QCrXNhqxNdINz1psyJ25ZZofWQC3KB3Pn0u96UOXHb8n60HnJB
LpA7n37XmzInblvej9ZDLsgFcufT73pT5sRty/vResgFuUDu/JT//i/c9abM
iduWWaH1kAtywZTOc8E+nsg5uSAXaJ0LWxU6zwX7eCLn5IJcoHUubFXoPBfs
44mckwtygda5sFWh81ywjydyTi7IBVrnwlYv9f9/c4GTOXHbMiu0HnJBLtA2
KexkOren8ETOyQW5QOtc2Kpw5lzg352wkyms0HrIBblA26Swk+ncnsITOScX
5AKtc2GrwplzgX93wk6msELrIRfkgqd+1qX6zwX7eCLn5IJcoHWubTUX+Nye
whM5JxfkAq1zbau5wOf2FJ7IObkgF2ida1vNBT63p/BEzskFuUDrXNtqLvC5
PYUnck4uyAVa59pWc4HP7Sk8kXNyQS7QOte2mgt8bk/hiZyTC3KB1rm21Vzg
c3sKT+ScXJALtM61reYCn9tTeCLn5IJcoHX+mJxz7jYX+NyewhM5JxfkAq1z
4XsJ/eeCfTyRc3JBLtA6F76X0H8u2McTOScX5AKtc+F7Cf3ngn08kXNyQS7Q
Ohe+l9B/LtjHEzknF+QCrXPhewn954J9PJFzckEuOGfnwuanvK9csI8nck4u
yAXnvDth81PeVy7YxxM5Jxfkglxg9p8L9vFEzskFueC5Op/4duT+c8E+nsg5
uSAXnPMehc1PeV+5YB9P5JxckAtygdl/LtjHEzknF+SCXGD2nwv28UTOyQW5
IBeY/eeCfTyRc3JBLsgFZv+5YB9P5JxckAtygdl/LtjHEzknF+SCXGD2nwv2
8UTOyQXX4wKBFcLmp7yvXLCPJ3JOLtjtAo0VU76L8L5ywT6eyDm5IBfkAvN9
5YJ9PJFzckEuyAXm+8oF+3gi5+SCXJALzPeVC/bxRM7JBbNcIN/1xLcjv69c
sI8nck4u8F0g/K7w3XOBf7+bMifuWeaD1kMuyAVTOs8F+3gi5+SCXJALzM5z
wT6eyDm54LIuOOd7F1ghbH7K+8oF+3gi5+SCy77HXOAwROs8F+zjiZyTC2ax
Xb7riW9H7jwX7OOJnJMLjnuPwnk0Vgibn/K+csE+nsg5ueCy3Wrn0foXdpsL
fG5P4YmckwtyQS4wO88F+3gi5+SCXJALzM5zwT6eyDm54PGZR7zNXOAwROs8
F+zjiZyTCy77NnOBwxCt81ywmydaTi7IBbnA7DwX7OaJlpMLckEuMDvPBbt5
ouVcswuOfmu5wNz8lPeVC2bxZMqZhTel9SD8fC5wGKJ1ngt8nmh7lvkg9yD8
fC5wGKJ1ngt8nmh7lvlwqR4EDgtn0FghbH7K+8oFDk+Ez9L2tmljuSAXyJ3n
Ap+r2p5lPsh7yAW5QO48F/hc1fYs80HeQy7IBXLnucDnqrZnmQ/yHnJBLpA7
zwU+V7U9y3yQ95ALcoHceS7wuartWebDU88g32Mu2Pd25M5zgc9Vbc8yH+RO
ckEukDvPBfsYIufkglyQC8zOc8E+hsg5uSAX5AKz81ywjyFyTi7IBbnA7DwX
7GOInJMLckEuMDvPBfsYIufkglyQC8zOc8E+hsg5uSAX5AKz81ywjyFyTi7I
BbnA7DwX7GOInJMLckEuMDvPBfsYIufkglyQC8zOc8E+hsg57/6u4AX5HnPB
vrcjd54L9jHk2nKEMwgcFs6gsWLiVnOBz+0pDLm2HOEMAoeFM2ismLjVXOBz
ewpDri1HOIPAYeEMGismbjUX+NyewpBryxHOIHBYOIPGiolbzQU+t6cw5Jw5
Mium32Mu2Pd25M5zwT6GTOkhF+QCrXNhq7nA5JWwMXnPMium32Mu2P12tM5z
wT6GTOkhF+QCrXNhq7nA5JWwMXnPMium32Mu2P12tM5zwT6GTOkhF+QCrXNh
q7nA5JWwsSM+S3gjuSAXaJ0LW80FPrenMEQ7v/C+hB5yQS6QO88F+xiinV94
X0IPuSAXyJ3ngn0M0c4vvC+hh1yQC+TOc8E+hmjnF96X0EMuyAVy57lgH0O0
8wvvS+ghF+QCufNcMIsh2rZlVmg95IJcIHeeC3yGCJ8rbE/em8Bh4QwaK4Sd
T3lTucBniPC5wvbkvQkcFs6gsULY+ZQ3lQschkzctswKrYdckAvkznPBrExt
2zIrtB5yQS6QO88FszK1bcus0HrIBblA7jwXzMrUti2zQushF+QCufNcMCtT
27bMCq2HXJAL5M5zwaxMbdsyK7QeckEukDvPBadnyjyRc3JBLtA6F7aaC2a5
YApP5JxckAu0zoWt5oJcMHHbMiu0HnJBLpA7zwVO/sRty6zQesgFuUDuPBc4
+RO3LbNC6yEX5AK581zg5E/ctswKrYdckAvkznOBkz9x2zIrtB5yQS6QO782
F8iumbhtmRVaD7kgF8idX4MLzumaa9u2zAqth1yQC+TOc4GTOXHbMiu0HnJB
LpA7zwVO5sRty6zQesgFuUDuPBc4mRO3LbNC6yEX5AK584ku+A9gE20+
       "], {{0, 
       128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzVnb/KNVcdhYOCehtJLUK0sfH7tLSNf1qJoFVAiIWxEQsvwNLbSJd4A96A
VhbpUws2giZg8QqOrsWznj2T4g0nh3Nm9uz9+631rDkz873501+88/MvvfHG
G7/82mf/eefdX33v/fff/fUPvvL5//zs3fe+9c33vvzZy9/+++/z139486uv
//GVv3znrQ/eev3y9R///o3Xb/z1g9c/+ttv6tdX22z3Rbaz2n7y3dX42/lv
j311XMa+VrXx5H2tPrOqf6OvV/NGxmbX/BPqn4zt5evPLOC//hEdeLmdH//5
u6//+e2fvP7TD7/+H6+v9kW2k2wz2X67HTL+ZL9JzVx9d3UsZAzG/Lfrfte+
Vn+r+icaksxh8mfzoVHzT6j/k+y98jgy5tXYXs4tYeZEw1vPTY6R9PjVZ1o/
Ir28mn+Dve192fyWHEurJ/axJ3XY+mxbh3ft18gpLXPajEe4IqnVdmxtXxg1
YOhAy5zJd0lNvqyxdt3bYyHsbe9rxdvt63YdV/siPUu8JtHbtuaN/bb1T9aa
ZBbCeG0NtH3Rji3hbaMv7BxH1v2kFtn50WZvO58SfmvzZtLvq30lPWucBzbW
i+yX6Mxq/pNjIYzXaq/RRyttJH1h8/zKO2wtanl7NbYVe9v5lNQ/YcW2Dtt9
reqw3f5Hn3746pO3f//q4+//7tVqvZK1uNovybar+iF9RNa6zVOkj1qdJ/Nz
dYwva8DgecIShLVaLSJzu/KFVfYx8in5rb/lMXINQ7svwu1Xc5Xo9krDje0b
/mtf90LWesW6SR894TzGSZ5vWeKurNHOM6nVk8y5ylxGNjyp4SvdW80t8Qhj
+6vvGnXS/u5s6B5h/hXDJ35qXIdJ5mrFsUbWaOc5qX/j+oSWOUkNEG5p9eTJ
nN/+GTVvb391/tyok7ZfDN1rfbmt4ZWfJvy8yiakX1o9XI3N4Jb2d5OVhqz4
p60Zu3+fxvnkNan59tzCqjYMXWrrJDneK364S/dar1xxO3l9V48k3mFkjRW3
2HPe+gXxlNXakf5d9aNxH5yx7sl+T/JYoqurLJl4SqIDZI1s3WuPsWWw1bGT
cZI5aT+zqm1bq8mc22Mg2yTZ+WTd2r18sn5W+e7kmFvdJveZtuxh697Vd417
5Uj9J/5u6wNhgJNat9KNqzlvueikfho8YNStwfmG15DvJmxzl7cSX2hrY5WD
jPtBiCa0emhcA2nrg3E/jnEs7TwbGWd1PrA9LiPrtTq8mkPSyyuvWT2HwWCe
Vc2v+rStQ9LjJ72v3e/q2TKtXhn6cPV+u6YGb7dMkugGyTiGd68+b9SewUXE
v1b8Y2jOavzEW0mmNr6bMORVDRCvN/iH9MXVdhLtNfSB9J3N26SvybG0144S
7245s90XqT0y/6ucSLi9/SOaQ3xwdQ+d4SnGd43t2/yzen/ls0QfSN+t/MXo
a6N3Xh4LefaIkQuS8yGE59s/o2eJ3xnnPVpPNHywvS7xrnNi7bNrViy04p+E
DZL3T+bKVU5sa4DUsMGfpHfadWx13vBxg51IXZGebXvT5p+WSVY+1Wqa4cur
YyH13H6e3B+3qvl2jUiuXGWxlbaQGiP82c5b2yNE5w0fb1+vdJLM58r7jHxt
6NKqPlea1vYa+bzNQivGJtsh80DGQOrHPsfY6vMqpxsscdc5hJZFT14bvPKO
dg5bFlrVs+1TNted7DXDcxPOT3SGPEPY5qX2uheiJ+3cntQZo/YIS5w8h0D2
azBSUnskA9qs2Pa+cZ35ylNaBrD7y2Da1WeS99vatnmpnbdWT8h6Ef20dcBg
idV8PoGxDbZJxpnosDG3be+vartdi7tywUnWIv82R/tn9I7NS22PrDQnWa92
m/azLm3eMPZLsvmKsVf6SbZp6Jg9D0ltG0xr5ALSX4bmnMwghLsMXlppEdGZ
kz240oEVb5AeSfa7Op9AGLvVDdILJ3XMuM5/xQNkPEYusPMUWfcr5llpfts7
9hhWubjtkVWWaXvQ1hAjuyV9TXTA8NNVTie9cMXJNh+SObka8xPOTa10lWRS
wjwnc0Gi83buSObHyIltXbU1Y/egoSErJrSzJ/FTY41WHLjSsbvyssHALWuR
XNDWG3nWCpmTRLdXvnmyx22Nav39Lj45qSG2pxvZs12jtp5JP7ZjSP5W19Jc
bTOZ5/a7hIEJbxismORo4qfJnCT3/xr8YOihsf0VM6/mpOUT0kethtieTvRw
VbdJn7Y6aXPgSsdW60J60zj2ZF8rVmw9l+hGu03iKatzAqTH7cy+Ymaivav+
XfURyYak3pIavhqn/azsdq7IsaxyUNsv7bqQfZ3kh5O59WT2NLzYmOekPlfH
1c7bSreJ9ia6QY7L8O5VvbXbXNWMoasrjzhZ5yv2aGvM5gfDC0httLqxOm/Q
zv9qnglDrvqOvH/Xa9IX9udXv6W2NWZ4mcFdhP8THljVeatXqzkxetPIqoZ/
2WxGvL5lqqRWW24k/d6uVzLOuzSfsNkTPp94h5FP2zlfcdfqPMCKh41MSuq2
7UGiISSrPoEhVz5l9BeZQ+M5NnaGusvfV/dVnfz8KmMa3mRw1+rceMt1T8iw
Sd2umCHREOOZ/CcZcqWxSV0Rfr7r38pZZfOk157g70/j+RU7JXXY1rPxXAuj
T8lrW39O5qzkWJI6af20ZVTSI4R/jGcVEn5u/WLly8SzVjn6pL+T2r6L/1d6
SDx9leXbdTn5myPpZUMrDG89yVrtsSQ9kmxzpbFkfVe9lhx768skCyTrsqrJ
lb8b58Fs/k9839aftgeT77brQnxnpWmt/pC8vHomm5E3V1nSmDeDydtxGlnG
Pj+Q+MUqR5P5bP191SNJbyZal3y+7Reih4RzkixP+oX0wsoHbX8ka7eqt9V9
jmTOV/Nm1/nVdxPvIHWy+m2F6K3BUcl8GutO7gk9yVcrjVrVA/FNuxeMfyeC
eHGb1wyGJ4yasJahIauca3O7oY1Xz45Y1VurtwZHrfRtxb1E0wy+WmmU8VzT
1e9Hq15I/JpkDSNXJsdLGJ7kTXLsREOI5iTz39Z5yycGH64y74p/DF09eR7A
yAKreiYsbfjjSc4k27c1ql0Xm/PttTb4OZmH1o+S+V/Vz+o8Ruvdq+t5iD+S
tSbPMEzGvPp3SVaa09ZGMg9J3638se0v45p8+3n1RH8SHkj2u8plq7UmGk7q
vO0vwmNt/ax4qf1M2y+k9lotIh5NeK89D9B6TetZxvmNFcu1/pjUldEjxndX
bLkaQ1KHq5y+ug+rHfPqvNZqLYyMY6/dyjuSdbza5upZji0nJM/NXtVhu9bt
MZLtE5ZbZYrV3JJeaL97VUsnGa/lXsLMyTq2OaXd70ozDR5Y+XXChIQzSQ20
9WD4neG5H3364atP3v79q4+//7tXhN/I/Le+udpX4omr811J3mzn1v73Sk76
/qp3SL6zn62d1FsyJ61m3qU/tpe1/ktyE9El4ndkLQjjtbnjJDPYnmjwQzvP
ydyuss+qZ4nnJnN79ZkVbxsZbVWHK9229aetN1IbhraQ120NGPq8yrx2HlyN
3/AUUvP2v+NjZN5EZ1a+b5+vaHmbzNuKXQl3nWT+dpur8ax0qa2Nk9f/EH1e
6dVdvxOt1pR4SqvPT2DsJ69L23dEK1Z+1H6XsOuKbWzmX2lXOx77mrR2rlpG
utLYdsyrObG56yQH3sUJpJfb+iH1dte6EF9u+9HIgKssZtShkTVs7UpqeJUx
E0ZaZZwVy7Wv2zkhvm/3C+GQhBlsTriLsVd1fpLPiU6u1s44RrsOEw4xnotl
60DC1Yb/Jv2SfJ6wXFIzq+sQyHoZ3rHiHJtvT55XIRrY1u1JPj95HnWVJZNj
tGvA0OEn6MCqr5O5au+3Wt2/THSsrfknsFxSM8SjWz4hc2L/9tGuS8IeyTyv
1mVV2y07XfXp6t6ru3yfrF1bP3fpQNvjK/65Gs/VvU6tjpFjTFjiqubbmjFY
jni9nXHIeRWyr9V5idU8kBpbXSfTHmOrjaueOun7rW6scutJ5m+zTKu97bob
r1v/Mrys7Rc7J65y+oorDF1dzSFhoZUfEf1px7PyixUfGj5ucO/VHH5RrmW1
2czOawbXtRmBzP/q2bat16+upyU6TzgkOa52DlfPSSC9djU2w99JRmvnPOkp
+7zHinuNLEyY1v59+WQvrDS/1ZxV7xOOWmWQVZa8GjOZ8/Z3nFXuMFi09dZ2
bgmrGM/SJHO++i7RNKPvVr58kjEMr2x5zPDTFdcZ+YjMc6LPyd+K/do5J2zT
8kn73ZWeGFpnswqp1WQO2/ppv2tkrlVOafXQZgzDK5NesP3UzgWt/rT9svJB
kiXbXki2//KZdUYuNrKkkVtbrTPmgWhmq89JvZFaTTRwpW9G7m4zDqlhIzus
+si+HszIBW1ft/1iaNqqflbrbmRSokuEr4x+WfEz0UwjUxi+nGjmqg7beTa8
vp2ftgZWrNvuKzmuu86pGnVus5at2+26t7pE1rRlITtPtWMgWbudh5a1VjWz
4iuSHZI6NOqk9XqDGUi/rNbCYEJbr4zzAHexVjsPZJ6NTEq81c5ZracbXk/W
y75fidT2yW2u6mTFAIQZ2l5r+XzVF4QhT+oV8Vzy/kobVwywysur8y1tza+0
96Q+rHxnlVMMjSVsQLbTasuKQ1bvt/5uXGOc1ORq+4S323UnnkveJ6y16oW7
/CjJksnYyHWnRq2ucgqZ89V1+8RzEwZYXety8vldq3U0WHGlCcZ5+JXWGX1q
5NBVNrnSRqMXbD8i5z3a2lvp2Mn744i2rOq59Zd2v4TBWjYjmmCso8GK5PVJ
XW0/Q+aErB3pO6Nm2n43eoH4UXJcxutkDomOtXxF8vj/Y+H/9bfKcck8rGq4
3Wabg0iPG9dTkX5c1cOql0kGWWW0tt/bOWk1ltRMMgajF0iPrPzFzuyt5rQ8
ZpxfInNC5iGpvZVGncz+q/6yWXGV71a5MmFO8syZ1dol21x5Oun9FTOQ7Z98
ZpHBAC3jtZqTfObq/rircRpZqa2ZROtWNUm2uaq91TG2vtayon0NPxk/YbCV
Txl9YXBvMv9tHjFyiuE1bW2vtMKoPZvHVp9pmd/IVqT2DPZO5mFVP4QVSQ9e
9f4qSyZzZd97u8o7LUuQz5PaMDh59Qwx4jsrHTbq5Gp9DR5bvSZjMLJVy7dk
PEnfJdln5ZWrtU56kDDDKmu359VX47R9f9W/q4xDONleC6IhpMZWdWLXXsIP
5PoN4o+k5okOr/poxc8rLW1ZYsV7qzkkx96y8UozV76/ug45OUaDXZPaW63F
qgcTniHZn3CscX6grcmkNghLtzVPNLPVQ8JvCT+v/IjoZDJXhJfI2pFjb7/b
aiapw5NrbfMM6RGyTdKDqxzR6hXxBcOjjbp6Qm0TPWw/33r61WfIvWkrdlrN
1apnyTNXk940NLnl7bt+cyc8s+LJdpsrrjZyd8u6tma2vUDqanWP7WoMK99f
cRHRLoPHjNdtDRMtWrFcmw2TNSX39axqjHh6Wz93HSPx3JX2rjLXSjNJDazq
auXv7RhsT2+5yB4DmVtD8xP9TPoi0VVSG4Z3EF9udcyuK+Lv9jG2XN1+13he
XPLdl9ftt31tcCzZL2F40neGp6+4ejUGosm2BhLeNtaU9GPr+60vJ/qz0mQj
r7XnMVbPyGq1xfYgwtsr/lxth2hm0mvE35Ptk3NQ7TES9rPvhSfatdIZUqvt
mq48jjAt0YqVXpHrf1b6nNxXYmtLWz8GV9v5mvTvSjOJnq94O2HLNl8k89yy
X6vVxj0yRLcTnUn+SK8lc9vut9X5VR4kfrdiACNTEM0h2tJqwuoYbc0/mRGS
+bczJllHkhPtNVqx5WrMRKuNHHqyX9rabn+/WB1XUhstA7TbJOfAT2oX0aWn
PS+UHAvhrmS/q1pqmZb4F+FhskYrtlyNeaVFRo2Rfl/1YMucqzWy9YH0e7L9
VX0SDmnX4gn1RjzXWPerOUzmwZ5bQ+tafU7WaMWWqzHfxeo2Wz4hvxPft/WB
6K2h56s1aj2acP5dfWTUVftd4rlGL5PXxL9Wn0/qdjUG4zmHq7xD2DLRwJPM
dnW8bb3ZLLTSq1bPk7k6uUYk09l9ZNRVW2NXx9V6Lpnb1evEj9q1Jlq0Yryr
v7tYvR3DSkPuYjaDu5I5IbpBxtzWSbJf4n0k1xjMQ/ro5LMobc9d+XJ7LLYG
Ep+1+W3FAEltrHIWqeGEwU4+491eL/I8xlXNrzSk3eYqBxnMs8o1xPcNTbY1
39btlQYa1zeu+C1hyJVXtjrc1vOKGYztt9y+Wq+VZpKaN3pwlbNWfN727EkW
WjGMkXEMvl31O9HAlZ60+nnyPhSjzpPvGvfRJ7q60sC71qX9rnGfDunBk5lo
td/Wr1cstGKY1vtW/kKOsdXt1TgJa9l9ZHgxYdqT1+6ujnG1/RV3rdbdyESr
XNP2uHF+wOjlFf/bz5wn677SzLvuuSasYuyr7SPDi1suWtXGim9XWeYJ3E4Y
zOAlw8tWPX6Slwx+btex5ZCWzQifr8Zsr91dvm+zK9E9ktPt1/b8275DzjOQ
tVuNf8UYRgZpM2l7LAY/2+tIttNmEIPVr8ZA1m5Vw/a+2ozQevFqm8a1uPZa
r/LOSfYjbL+qc/K+kUGSYzQ8hfDzah5WWtF6HKnbk55l1PCK5QjjkUy92qbR
4y//bJ682hfxboP9DL5a5b7k/bsylO0pto6d3P7V/Kz+fYTWd4hnteuevN/6
fruvlb8ka7RiALueCduQ+jF4gNTnai1WLEf4xM5QKy9eMVtbh8Z5AJujiCYQ
TlgxhsF17TyTe5NXNUD8zmCkk17TencyP6tr41f/lkG7XiuPeEI/JnNy8v4U
43hJ1mu1xdYE+zXhqxX7JWth14CRJYm2nPQawg/JOYdVjmvHbOfHZD5X/Lnq
tfbfQUg+c9ezfVZZz+hr47s279m/XRpcZNQYyRFPYHi79sj8k2dDrfx0lR+N
91f9uMo1pBdaHV5dC7HyYsISq++e1IcrfiN/q2MnGTypsZP1fLImnzD/hk6u
erCd86vjJe+v+vFp7EF0+OoYjay3YolWE1Y6YHvWagzkd/C7csGqng2Gt9mJ
zP/qeoCr766uM7TX7q7auIs9rrR65fWrrGdoo+E7ZF1Iv6x0gOQOUgMrX17V
84rhCSuS7z6h5tt9kbVYaaDRR3bPttqy+m6ScUgWIFzacgXxHYPV23k4ec1q
WzOtphHdIFmAcIvxm9pK907WPOk14l+rdW810853K/aweYDoGKmHRBtX4zdy
OqlDogMn8zLhjeSPZIGVZ634c7XWK06+65qBxL9W697eb9jWBqmr5NjJuTvC
A6TOjT5aZcxWk+0+Inxi69XJzLtioZa1VnNIeKbtx1WPEJ8y5nC17jYvEf05
mQ1XNWzrUpKzVr52tX3DO5K5avlkpattj9/1bJxk+22/r3q2fZ98l3Dyqubt
Z7q2dbXSwFUftexBPNc+b0MYY5Vb7/JWwzvasRl5LRkDeZaOzUsnmYdkJcIq
yXyuetPQmZU+PEHnV9xFesT+HSrhBHIND6m3k966YiQyNsKEZD7tTErW1O5f
23/JONtabf2l7feVP97l+8ZaPG1f5LzNiicT5ln9xmTzJ9HVluWS+WwZ3ta9
k/l01VOkF9rtkHGung9gMy3hkKd5Qeuzq3Un+yKeS3qcaO9Jn31CLmh1aeV9
hu7Z5/9XmrbqhcR/V5ko+T0o4Q2719o6aTPyXZr/RflMy4StVpy8N9/w2dU4
iV7ddd6DMH+rn6v8teIfw2dXXkOyrcHq9nmeVXawNf+L8tqoGWNshDkNrm7H
SXLByitX9bzyUJvJCf+c9Nm29lYaa7CNrdXkfXvtkv59wuvVPBAda38Lbpmz
rTGSI1a8uuo10pstf5IeNJg80fOT+WiVYQmfG+trr2PSv8n7pH5Wa53okv23
Oi4jo61YpR0/+S1spatJD7Ye1PYmyeZtDxpMbtet4ctEJ+3zFa2GrNbxpOeu
eoGcW7Bfr9jSyGIrhk/WkfTmlZYSXSW5wPhMO+eG5qwY7CQ/tL58V2ZpvZvM
812etRq/wVRPm5+khu3nu7Z90R4vOb9kMwbR4dWfzRVEM42eXfGDrUurzEI0
p+1l+5nnxHOJ9xGusM+9t/Nj/4Z4F7+1PmJkvfb9lQ7bun1S3xItsnvnqn8T
jyC6ZHOswZ/EHw3NsY+r5QrjeA1OJhq42qbBriuuXuWgkzpP1t3grlXN2Hlk
pXuEFVccS8ZGesrQh1Y37My+2o4xP6v+TXJEe45lNbcG3xqaaYyN1OHqN4tV
Fn6aj9gs0WqCMU6iUe0YiD7Y5y7uep9wZvv5Vf8m4zeyjJFBbM08mcFX/tiO
udW3hLfv8hGbJZLXd40z6XGbS1c6kHy+9cHV+0TTjO+u+MT4TMsDq2dMEc28
6zn8xBMTHV75aTvPto+0Pv6E7Gb0PlkXwqWtlrbbJ/51F/Ov8tHV51d8YvwZ
GYSw1kq3jWeVJDmFZOek1whjGDyZjCHZ/slrNgj3nnyO7opDVrl1VQ/Ej1bM
T+phxV2rcwt2FjaOMekpgx/aPm2PcbXN1i8I3yac02paO2aie6vslrCNwQ+E
zch6tdxl1MNJ5m/nhHyecMsTsjCZT3JcRLfb3kn8aLWOd923sqq9RH8MTbZZ
lNTJyXVMvL6t7TarGvXQai9Zu2ROkrWzfxNvPdfW/5WGXB1X8u/BEWYmtUTW
kdThyWcvt1x6Fw+vWJTUSTLPJM8aWcb4DKmHdgxk7YgXv1w7g1uIp6+ysK0h
dp2TniKc02qXPf6WH5Las3nYzgjJWqxycesLK/YgNWbXJOkFsnYGU624ZcVv
dn8RDSFM2I7Hfub5SkNWNUmyMMkmKx4mvZD0l51tW19IGNJgkpPPK171wop/
TjKhnd3s50uv/Ijwycl+bMezqhmyr9Znr46XPFchGfNKh1c9u6pn+/WKSVaM
2tZk29erz9zFhAZjt/3VrhfJEassQLLhqr9Wa9Eel/1vQKz8+qRHk5y1YpK7
fl9b6YzdI6t1XP3dxYQrrVi9T7Lz6hqAZDxkrkg/knMXhA1W62X7Dvn8SVYn
uSbRjSdoLOHP1Vrc5Tt2zZC1INeik0zX+unq3MJKW0jtrfxx5TvtPJP1WrHH
Sf43xmNk2NV2bE5O9mv8fvS05+rb80+0ouUoO1PbzEyYluTE1h+NDJWMn/Bk
m8Va37GfbbUaD9Er415++1rctjaIViRs1vKwfT6T1EyrjQZ/tt6xyl8rZm7/
DF8j2yFes9qvwfaJDts8THy27RGib+2YE78jbGlkkJM8THrh5Gfamkw0oX1/
pcNEN5L3V3ntqo9W9WNnKDJ+wqirXk72S3i47ZEVv62YofV6gy3/BYrri5s=

       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1r2KXQUcRfFBQUTsxdJX0MZCZkiXOj7BCH4UASEWEtL4gFY2qVKlzzMk
AdsB5Z5z57dhFZHrZZJ97/6f2Wt989Pvz3755Obm5o/PP/zn2f2fT168uH/5
42cf/+fn++ffffv80w8v//r3z8fXv7798u7pk6/u/n71xd2rd29uf/v6n9vv
f3h9+1/ef+hnHnr90N896t+55GfO+Jz/N+uS73vU9zqjz6M+5xk/c9TrS56x
s3PP/r076vUlvxdH9XbU9z1jx85+9s7YqGtu72N1dfZ3P+P5ueazd83f97N/
r4/q/IydOYOVZ3zmx/r8Wj9ne9E1d0/+DNrnEfx/5dl7rJ+55uaf7VHrLnTN
Z1XeMeFzLn4G7fNc8jws+r9wX2F7hffXszRerHBNuIXsh1on+f+x9xWeVeH9
9SyNFytcE24h+6HWyVFcWH/2Fp8B+f31LI0XK1wTbiH7odZJ/p//CzujZWm8
WOGacAvZD7VO8v/8X9gZLUvjxQrXhFvIfqh1kv/n/8LOaFkaL1a4JtxC9kOt
k/w//xd2RsvSeLHCNeEWsh9qneT/+b+wM1qWxosVrgm3kP1Q6yT/z/+FndGy
NF6scE24heyHWif5f/4v7IyWpfFihWvCLWQ/1DrJ//N/YWe0LI0XK1wTbiH7
odZJ/p//CzujZWm8WOGacAvZD7VO8v/8X9gZLUvjxQrXhFvIfqh1kv/n/8LO
aFkaL1a4JtxC9kOtk/w//xd2RsvSeLHCNeEWsh9qneT/+b+wM1qWxosVrgm3
kP1Q6yT/z/+FndGyNF6scE24heyHWif5f/4v7IyWpfFihWvCLWQ/1DrJ//N/
YWe0LI0XK1wTbiH7odZJ/p//CzujZWm8WOGacAvZD7VO8v/8X9gZLUvjxQrX
hFvIfqh1kv/n/8LOaFkaL1a4JtxC9kOtk/w//xd2RsvSeLHCNeEWsh9qneT/
+b+wM1qWxosVrgm3kP1Q6yT/z/+FndGyNF6scE24heyHWif5f/4v7IyWpfFi
hWvCLWQ/1DrJ//N/YWe0LI0XK1wTbiH7odZJ/p//CzujZWm8WOGacAvZD7VO
8v/8X9gZLUvjxQrXhFvIfqh1kv/n/8LOaFkaL1a4JtxC9kOtk/w//xd2RsvS
eLHCNeEWsh9qneT/+b+wM1qWxosVrgm3kP1Q6yT/z/+FndGyNF6scE24heyH
Wif5f/4v7IyWpfFihWvCLWQ/1DrJ//N/YWe0LI0XK1wTbiH7odZJ/p//Czuj
ZWm8WOGacAvZD7VO8v/8X9gZLUvjxQrXhFvIfqh1kv/n/8LOaFkaL1a4JtxC
9kOtk/w//xd2RsvSeLHCNeEWsh9qneT/+b+wM1qWxosVrgm3kP1Q6yT/z/+F
ndGyNF6scE24heyHWif5f/4v7IyWpfFihWvCLWQ/1DrJ//N/YWe0LI0XK1wT
biH7odZJ/p//CzujZWm8WOGacAvZD7VO8v/8X9gZLUvjxQrXhFvIfqh1kv/n
/8LOaFkaL1a4JtxC9kOtk/w//xd2RsvSeLHCNeEWsh9qneT/+b+wM1qWxosV
rgm3kP1Q6yT/z/+FndGyNF6scE24heyHWif5f/4v7IyWpfFihWvCLWQ/1DrJ
//N/YWe0LI0XK1wTbiH7odZJ/p//CzujZWm8WOGacAvZD7VO8v/8X9gZLUvj
xQrXhFvIfqh1kv/n/8LOaFkaL1a4JtxC9kOtk/w//xd2RsvSeLHCNeEWsh9q
neT/+b+wM1qWxosVrgm3kP1Q6yT/z/+FndGyNF6scE24heyHWif5f/4v7IyW
pfFihWvCLWQ/1DrJ//N/YWe0LI0XK1wTbiH7odZJ/p//CzujZWm8WOGacAvZ
D7VO8v/8X9gZLUvjxQrXhFvIfqh1kv/n/8LOaFkaL1a4JtxC9kOtk/w//xd2
RsvSeLHCNeEWsh9qneT/+b+wM1qWxosVrgm3kP1Q6yT/z/+FndGyNF6scE24
heyHWif5f/4v7IyWpfFihWvCLWQ/1DrJ//N/YWe0LI0XK1wTbiH7odZJ/p//
CzujZWm8WOGacAvZD7VO8v/8X9gZLUvjxQrXhFvIfqh1kv/n/8LOaFkaL1a4
JtxC9kOtk/w//xd2RsvSeLHCNeEWsh9qneT/+b+wM1qWxosVrgm3kP1Q6yT/
z/+FndGyNF6scE24heyHWif5f/4v7IyWpfFihWvCLWQ/1DrJ//N/YWe0LI0X
K1wTbiH7odZJ/p//CzujZWm8WOGacAvZD7VO8v/8X9gZLUvjxQrXhFvIfqh1
kv/n/8LOaFkaL1a4JtxC9kOtk/w//xd2RsvSeLHCNeEWsh9qneT/+b+wM1qW
xosVrgm3kP1Q6yT/z/+FndGyNF6scE24heyHWif5f/4v7IyWpfFihWvCLWQ/
1DrJ//N/YWe0LI0XK1wTbiH7odZJ/p//CzujZWm8WOGacAvZD7VO8v/8X9gZ
LUvjxQrXhFvIfqh1kv/n/8LOaFkaL1a4JtxC9kOtk/w//xd2RsvSeLHCNeEW
sh9qneT/+b+wM1qWxosVrgm3kP1Q6yT/z/+FndGyNF6scE24heyHWif5f/4v
7IyWpfFihWvCLWQ/1DrJ//N/YWe0LI0XK1wTbiH7odZJ/p//CzujZWm8WOGa
cAvZD7VO8v/8X9gZLUvjxQrXhFvIfqh1kv/n/8LOaFkaL1a4JtxC9kOtk/w/
/xd2RsvSeLHCNeEWsh9qneT/+b+wM1qWxosVrgm3kP1Q6yT/z/+FndGyNF6s
cE24heyHWif5f/4v7IyWpfFihWvCLWQ/1DrJ//N/YWe0LI0XK1wTbiH7odZJ
/p//CzujZWm8WOGacAvZD7VO8v/8X9gZLUvjxQrXhFvIfqh1kv/n/8LOaFka
L1a4JtxC9kOtk/w//xd2RsvSeLHCNeEWsh9qneT/+b+wM1qWxosVrgm3kP1Q
6yT/z/+FndGyNF6scE24heyHWif5f/4v7IyWpfFihWvCLWQ/1DrJ//N/YWe0
LI0XK1wTbiH7odZJ/p//CzujZWm8WOGacAvZD7VO8v/8X9gZLUvjxQrXhFvI
fqh1kv/n/8LOaFkaL1a4JtxC9kOtk/w//xd2RsvSeLHCNeEWsh9qneT/+b+w
M1qWxosVrgm3kP1Q6yT/z/+FndGyNF6scE24heyHWif5f/4v7IyWpfFihWvC
LWQ/1DrJ//N/YWe0LI0XK1wTbiH7odZJ/p//CzujZWm8WOGacAvZD7VO8v/8
X9gZLUvjxQrXhFvIfqh1kv/n/8LOaFkaL1a4JtxC9kOtk/w//xd2RsvSeLHC
NeEWsh9qneT/+b+wM1qWxosVrgm3kP1Q6yT/z/+FndGyNF6scE24heyHWif5
f/4v7IyWpfFihWvCLWQ/1DrJ//N/YWe0LI0XK1wTbiH7odZJ/p//CzujZWm8
WOGacAvZD7VO8v/8X9gZLUvjxQrXHnr/PTa2OW8=
       "], {{0, 128}, {128, 0}}, {0.,
        1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
tD4r724u8HdvLnA4qW+vluexfv4LD3iqqQ==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1LEKglAUBmApiNaWtoaCoLl2paUHqCcwqCmIagi33qU92nuAXquChhYh
Mc3oG5RP8co5nt/bna+ny1oQBLvm/TSN9+PtNk5mjcfFIl6Nhqv6nYfn8fCp
fQyvg03U6Sfh5NKJktYlPPei6NVpz7zeT/M773xn7afqTFubx1nrz+oi+i1z
dlnrL9rfyliefovITNaslvkd8uwPRfT461nlz+5XXJ25mBdXwbLKXP6/VoV6
mGWVmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZn/wTdOA1SV
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "1"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1jFKA0EUgOFgQLT2BF5BK5sEe6t4gggKgYAQC00hWHgIsbfzBB7Bi3gN
E7CwCeyyM5s3s1+hfErYvJnM/pvTm/vZ3cFoNHo42vyazR8vV6v5+vpw+8ft
fHl+thxv+PL3s/V48T45/rmYnlx9Tf778209/X5dTD6en6a7/r/LbV/f5Dqp
Zkv1vk1m2HWdLmvJfZ0u18+x3i6fV9t5Up3tVPvfZc9zvybVnuSYOZVz96HP
85zjM83tfc2Wqg99PltznLHIzU/1LItwtmttfqrvSxGav6/+9PkdJto9Usps
qe6pCM+pUprfZZ4IHlrzU53DfTU/QkNydCPyPpToUp6tpTe/pvM8tOanOm81
Nb+m88wxm5/jHoyw3lL2OdW9X3rz2659CM2PsP/MpTS/Vg+t+bn7H+EzZS7F
mh/HQ2h+jv5HWAtziS6lFUPwEJqfqv8R5meuye6vOK61+V36H2FmZuY+21hT
89v2P8KczMwROll685v0P8JszMzRXFMna1oLMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzd/cvTm6wew==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{3.774171826015395*^9},
 CellLabel->
  "Out[122]=",ExpressionUUID->"321451f4-4019-4c26-8d16-98f5a30fa300"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dir", "=", 
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7733290093954697`*^9, 3.773329016503849*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"2dcbc689-857b-4b5d-a015-d6a01eee2769"],

Cell[BoxData["\<\"/Users/thorsilver/Downloads/Wolfram notebooks\"\>"], \
"Output",
 CellChangeTimes->{
  3.773329017635899*^9, {3.7734927077811537`*^9, 3.773492718275812*^9}, 
   3.774171834122046*^9, 3.7742267514462214`*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"442fee27-414c-48e3-a355-c36aca7d4412"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"netECA12", "=", 
  RowBox[{"Import", "[", "\"\<netECA12-r12.wlnet\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.773492741198941*^9, 3.773492779444697*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"d687882f-aef0-4434-b1db-2f8aa9a245f7"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {15., {0., 15.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["12", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{24, 3, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 24, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 3, "$InputSize" -> {120, 200}, 
                    "$OutputSize" -> {118, 198}, "$WeightsInputChannels" -> 
                    3], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 120, 200}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 118, 198}, 
                    NeuralNetworks`RealT]]], "bat1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{24}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 24, 
                    "$SpatialDimensions" -> {118, 198}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 118, 198}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 118, 198}, 
                    NeuralNetworks`RealT]]], "ramp1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {24, 118, 198}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 118, 198}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 118, 198}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{24, 24, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 24, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 24, "$InputSize" -> {118, 198}, 
                    "$OutputSize" -> {116, 196}, "$WeightsInputChannels" -> 
                    24], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 118, 198}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 116, 196}, 
                    NeuralNetworks`RealT]]], "bat2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{24}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 24, 
                    "$SpatialDimensions" -> {116, 196}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 116, 196}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 116, 196}, 
                    NeuralNetworks`RealT]]], "ramp2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {24, 116, 196}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 116, 196}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 116, 196}, 
                    NeuralNetworks`RealT]]], "pooling" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {116, 192}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 24, "$InputSize" -> {116, 196}, 
                    "$OutputSize" -> {1, 5}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 116, 196}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 1, 5}, 
                    NeuralNetworks`RealT]]], "flatten" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 1, 5}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]]], 
                    "linear" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 120}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {512}, "$OutputSize" -> 512, 
                    "$InputSize" -> 120, "$InputDimensions" -> {120}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "drop2" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.2, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "linear2" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{4, 512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{4}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {4}, "$OutputSize" -> 4, 
                    "$InputSize" -> 512, "$InputDimensions" -> {512}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]], 
                    "softmax" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pooling", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pooling", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "drop2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "drop2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3, 120, 200}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {200, 120}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, "Interleaving" -> False, 
                    "MeanImage" -> None, "VarianceImage" -> None, "$Version" -> 
                    "12.0.10"]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {1, 2, 3, 4}, "InputDepth" -> 1, "Dimensions" -> 
                    4, "$Rank" -> 0, "$Version" -> "12.0.10"]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"120\"", "\"200\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"118\"", "\"198\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bat1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"118\"", "\"198\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ramp1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"118\"", "\"198\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"116\"", "\"196\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bat2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"116\"", "\"196\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ramp2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"116\"", "\"196\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pooling\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"1\"", "\"5\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"flatten\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"120\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"drop2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"softmax\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   ImageSizeCache -> {297., {107.4169921875, 112.5830078125}},
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.773492759281205*^9, 3.773492780397972*^9}},
 CellLabel->"Out[51]=",ExpressionUUID->"36a6bf8f-33be-402b-a716-5c68d0fa4848"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"netECA13", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"netECA13", ",", "fullTrainingBigC13", ",", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", "20"}], ",", 
    RowBox[{"BatchSize", "\[Rule]", 
     RowBox[{"256", "*", "4"}]}], ",", 
    RowBox[{"TargetDevice", "\[Rule]", "\"\<CPU\>\""}], ",", 
    RowBox[{"TrainingProgressCheckpointing", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Directory\>\"", ",", "dir"}], "}"}]}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.772359301378972*^9, 3.7723593151826487`*^9}, {
  3.772692972974709*^9, 3.772692978955448*^9}, {3.772693103833131*^9, 
  3.7726931061383677`*^9}, {3.7726954327396307`*^9, 3.772695433052311*^9}, {
  3.773129922404114*^9, 3.773129928369681*^9}, {3.773159589015329*^9, 
  3.773159589253455*^9}, {3.773159731047542*^9, 3.773159755478558*^9}, {
  3.773160016071207*^9, 3.773160037844142*^9}, {3.773163441661957*^9, 
  3.773163451374845*^9}, {3.773164439689281*^9, 3.773164440226226*^9}, {
  3.773190755014002*^9, 3.773190759153596*^9}, {3.773214805205216*^9, 
  3.773214807559754*^9}, {3.773215293310206*^9, 3.773215308393745*^9}, {
  3.773254986921338*^9, 3.773254987629869*^9}, {3.7733289965083933`*^9, 
  3.773329001497841*^9}, {3.774171842022563*^9, 3.774171860396275*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"2e3f5dba-ceeb-4dc4-9d9f-6c55c2be1c7d"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["12", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{24, 3, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 24, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 3, "$InputSize" -> {128, 128}, 
                    "$OutputSize" -> {126, 126}, "$WeightsInputChannels" -> 
                    3], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "bat1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{24}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 24, 
                    "$SpatialDimensions" -> {126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "ramp1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {24, 126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{24, 24, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 24, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 24, "$InputSize" -> {126, 126}, 
                    "$OutputSize" -> {124, 124}, "$WeightsInputChannels" -> 
                    24], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]]], "bat2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{24}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 24, 
                    "$SpatialDimensions" -> {124, 124}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]]], "ramp2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {24, 124, 124}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]]], "pooling" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {124, 120}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 24, "$InputSize" -> {124, 124}, 
                    "$OutputSize" -> {1, 5}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 1, 5}, 
                    NeuralNetworks`RealT]]], "flatten" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 1, 5}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]]], 
                    "linear" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 120}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {512}, "$OutputSize" -> 512, 
                    "$InputSize" -> 120, "$InputDimensions" -> {120}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "drop2" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.2, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "linear2" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{4, 512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{4}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {4}, "$OutputSize" -> 4, 
                    "$InputSize" -> 512, "$InputDimensions" -> {512}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]], 
                    "softmax" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pooling", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pooling", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "drop2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "drop2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3, 128, 128}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {128, 128}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, "Interleaving" -> False, 
                    "MeanImage" -> None, "VarianceImage" -> None, "$Version" -> 
                    "12.0.10"]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {1, 2, 3, 4}, "InputDepth" -> 1, "Dimensions" -> 
                    4, "$Rank" -> 0, "$Version" -> "12.0.10"]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"128\"", "\"128\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bat1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ramp1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"124\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bat2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"124\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ramp2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"124\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pooling\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"1\"", "\"5\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"flatten\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"120\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"drop2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"softmax\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   ImageSizeCache -> {298., {107.4169921875, 112.5830078125}},
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.774187606064065*^9},
 CellLabel->
  "Out[124]=",ExpressionUUID->"de3b8ff4-5e83-4022-b1a5-9cd245544002"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"netECA13", "=", 
  RowBox[{"Import", "[", "\"\<netECA13-r20.wlnet\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.7741936807666407`*^9, 3.774193692512092*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"dded76c3-f80d-44bc-a8cb-d1383d125d50"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["12", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{24, 3, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 24, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 3, "$InputSize" -> {128, 128}, 
                    "$OutputSize" -> {126, 126}, "$WeightsInputChannels" -> 
                    3], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "bat1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{24}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 24, 
                    "$SpatialDimensions" -> {126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "ramp1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {24, 126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{24, 24, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 24, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 24, "$InputSize" -> {126, 126}, 
                    "$OutputSize" -> {124, 124}, "$WeightsInputChannels" -> 
                    24], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]]], "bat2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{24}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 24, 
                    "$SpatialDimensions" -> {124, 124}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]]], "ramp2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {24, 124, 124}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]]], "pooling" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {124, 120}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 24, "$InputSize" -> {124, 124}, 
                    "$OutputSize" -> {1, 5}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 1, 5}, 
                    NeuralNetworks`RealT]]], "flatten" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 1, 5}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]]], 
                    "linear" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 120}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {512}, "$OutputSize" -> 512, 
                    "$InputSize" -> 120, "$InputDimensions" -> {120}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "drop2" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.2, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "linear2" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{4, 512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{4}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {4}, "$OutputSize" -> 4, 
                    "$InputSize" -> 512, "$InputDimensions" -> {512}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]], 
                    "softmax" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pooling", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pooling", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "drop2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "drop2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3, 128, 128}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {128, 128}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, "Interleaving" -> False, 
                    "MeanImage" -> None, "VarianceImage" -> None, "$Version" -> 
                    "12.0.10"]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {1, 2, 3, 4}, "InputDepth" -> 1, "Dimensions" -> 
                    4, "$Rank" -> 0, "$Version" -> "12.0.10"]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox["\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"128\"", "\"128\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bat1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ramp1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"124\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bat2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"124\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ramp2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"124\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pooling\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"1\"", "\"5\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"flatten\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"120\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"drop2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"softmax\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7741937305460443`*^9},
 CellLabel->
  "Out[154]=",ExpressionUUID->"69f6cb21-10cb-498a-a5f3-e2a1ac4abf81"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"netECA13", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"netECA13", ",", "fullTrainingBigC13", ",", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", "20"}], ",", 
    RowBox[{"BatchSize", "\[Rule]", 
     RowBox[{"256", "*", "4"}]}], ",", 
    RowBox[{"TargetDevice", "\[Rule]", "\"\<CPU\>\""}], ",", 
    RowBox[{"TrainingProgressCheckpointing", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Directory\>\"", ",", "dir"}], "}"}]}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.772359301378972*^9, 3.7723593151826487`*^9}, {
  3.772692972974709*^9, 3.772692978955448*^9}, {3.772693103833131*^9, 
  3.7726931061383677`*^9}, {3.7726954327396307`*^9, 3.772695433052311*^9}, {
  3.773129922404114*^9, 3.773129928369681*^9}, {3.773159589015329*^9, 
  3.773159589253455*^9}, {3.773159731047542*^9, 3.773159755478558*^9}, {
  3.773160016071207*^9, 3.773160037844142*^9}, {3.773163441661957*^9, 
  3.773163451374845*^9}, {3.773164439689281*^9, 3.773164440226226*^9}, {
  3.773190755014002*^9, 3.773190759153596*^9}, {3.773214805205216*^9, 
  3.773214807559754*^9}, {3.773215293310206*^9, 3.773215308393745*^9}, {
  3.773254986921338*^9, 3.773254987629869*^9}, {3.7733289965083933`*^9, 
  3.773329001497841*^9}, {3.774171842022563*^9, 3.774171860396275*^9}},
 CellLabel->
  "In[155]:=",ExpressionUUID->"b7716be9-fe49-4871-b761-c7f2bc7ee8db"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["12", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{24, 3, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 24, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 3, "$InputSize" -> {128, 128}, 
                    "$OutputSize" -> {126, 126}, "$WeightsInputChannels" -> 
                    3], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "bat1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{24}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 24, 
                    "$SpatialDimensions" -> {126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "ramp1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {24, 126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{24, 24, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 24, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 24, "$InputSize" -> {126, 126}, 
                    "$OutputSize" -> {124, 124}, "$WeightsInputChannels" -> 
                    24], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]]], "bat2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{24}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 24, 
                    "$SpatialDimensions" -> {124, 124}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]]], "ramp2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {24, 124, 124}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]]], "pooling" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {124, 120}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 24, "$InputSize" -> {124, 124}, 
                    "$OutputSize" -> {1, 5}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 124, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 1, 5}, 
                    NeuralNetworks`RealT]]], "flatten" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 1, 5}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]]], 
                    "linear" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 120}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{512}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {512}, "$OutputSize" -> 512, 
                    "$InputSize" -> 120, "$InputDimensions" -> {120}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "drop2" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.2, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]]], 
                    "linear2" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{4, 512}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{4}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {4}, "$OutputSize" -> 4, 
                    "$InputSize" -> 512, "$InputDimensions" -> {512}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]], 
                    "softmax" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pooling", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pooling", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "drop2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "drop2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3, 128, 128}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {128, 128}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, "Interleaving" -> False, 
                    "MeanImage" -> None, "VarianceImage" -> None, "$Version" -> 
                    "12.0.10"]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {1, 2, 3, 4}, "InputDepth" -> 1, "Dimensions" -> 
                    4, "$Rank" -> 0, "$Version" -> "12.0.10"]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox["\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"128\"", "\"128\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bat1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ramp1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"124\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bat2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"124\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ramp2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"124\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pooling\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"1\"", "\"5\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"flatten\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"120\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"drop2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"softmax\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7742026208868523`*^9},
 CellLabel->
  "Out[155]=",ExpressionUUID->"9475968a-e7eb-44ee-8995-4aca4bcd750a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generate test data for Network XIII", "Subsection",
 CellChangeTimes->{{3.773348207450644*^9, 3.773348219490479*^9}, 
   3.7741885294352407`*^9},ExpressionUUID->"4dc852b2-b98e-4f83-9cac-\
5ac4e359b1c9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"testDataECABigC", "=", 
   RowBox[{"dataC", "[", 
    RowBox[{"128", ",", "128", ",", "1024"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData2TBigC", "=", 
   RowBox[{"genData2r2C", "[", 
    RowBox[{"128", ",", "128", ",", "1024"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData3TBigC", "=", 
   RowBox[{"data3T2C", "[", 
    RowBox[{"128", ",", "128", ",", "1024"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData4TBigC", "=", 
   RowBox[{"data4TC", "[", 
    RowBox[{"128", ",", "128", ",", "1024"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData5TBigC", "=", 
   RowBox[{"genData5TCC", "[", 
    RowBox[{"128", ",", "128", ",", "1024"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fullTestSetBigC", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
    "testDataECABigC", ",", "testData2TBigC", ",", "testData3TBigC", ",", 
     "testData4TBigC", ",", "testData5TBigC"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "fullTestSetBigC", "]"}]}], "Input",
 CellChangeTimes->{{3.7727181209651337`*^9, 3.7727181544477663`*^9}, {
  3.772718196797276*^9, 3.77271823838671*^9}, {3.7727184594178867`*^9, 
  3.772718461126959*^9}, {3.774192047474938*^9, 3.774192068250688*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"a8800e47-47ab-4ece-a48e-bfa5a5d0c2b4"],

Cell[BoxData["10240"], "Output",
 CellChangeTimes->{3.7741887720758123`*^9, 3.774192304243709*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"8374a6a0-0fcc-49ca-ba26-fae0454e1483"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomSample", "[", 
  RowBox[{"fullTestSetBigC", ",", "10"}], "]"}]], "Input",
 CellLabel->
  "In[147]:=",ExpressionUUID->"9c5ffe72-8a99-4df0-bea9-efe2da58b16c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1zGOpOUZReERliwWgOTYWzAkJIO8AQc4czaWIEBIyEOAnLEDZ468F6fe
DTtABskBCdKMpmv6Oa9v0K3qq+6vzq06/62/f//Xbz7/8oMXL158++FP3z5/
9d0fX79+9fc///bnH7549fXHf/j6Nz89/P5/Xz8//tc/fnz5yd9ef/anTz/6
7Kt//vDy04/+8/J3//7LGz1+k7992/Of6sxf/s6vPX6T338X5nfhfJdeb9v3
Eec/1XO97ev/6Od69Gv1VJ4815lPdY08lW+Pvpafak8ecf0+Vd+n2rdHbOYj
dlXr8i6b84hNfp+OaZ+zj34vHtHx0Wc+Yq8e4dujd/4R17XML2+m7Mxz3Re9
z/uu57pXeS4fnmuv3uc9j+aGcF8qfF5s/03f3uf+P9f5gpPCe/dce1X/jNv+
t3LtuhOeVzuzwiy4KvxPUXFecEPz4f8t15wUnlc4U3jftbxyZtF5+TUR3rur
ecVJwbdLHgoMArPGX++4/W/lspOab5c8FBgEZo2/3nH738plJzXfLnkoMAjM
Gn+94/a/lctOar5d8lBgEJg1/nrH7X8rl53UfLvkocAgMGv89Y7b/1YuO6n5
dslDgUFg1vjrHbf/rVx2UvPtkocCg8Cs8dc7bv9bueyk5tslDwUGgVnjr3fc
/rdy2UnNt0seCgwCs8Zf77j9b+Wyk5pvlzwUGARmjb/ecfvfymUnNd8ueSgw
CMwaf73j9r+Vy05qvl3yUGAQmDX+esftfyuXndR8u+ShwCAwa/z1jtv/Vi47
qfl2yUOBQWDW+Osdt/+tXHZS8+2ShwKDwKzx1ztu/1u57KTm2yUPBQaBWeOv
d9z+t3LZSc23Sx4KDAKzxl/vuP1v5bKTmm+XPBQYBGaNv95x+9/KZSc13y55
KDAIzBp/veP2v5XLTmq+XfJQYBCYNf56x+1/K5ed1Hy75KHAIDBr/PWO2/9W
Ljup+XbJQ4FBYNb46x23/61cdlLz7ZKHAoPArPHXO27/W7nspObbJQ8FBoFZ
46933P63ctlJzbdLHgoMArPGX++4/W/lspOab5c8FBgEZo2/3nH738plJzXf
LnkoMAjMGn+94/a/lctOar5d8lBgEJg1/nrH7X8rl53UfLvkocAgMGv89Y7b
/1YuO6n5dslDgUFg1vjrHbf/rVx2UvPtkocCg8Cs8dc7bv9bueyk5tslDwUG
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
/W/lspOab5c8FBgEZo2/3nH7/7z5fwGkjQ2T
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1kGKVGcAReEmARF3kS2YoWCTFQg6dtCBOBIEAxFnbiDDZAtx5jRryCIy
zDpUyCCTgE3Vq/6unEE3ry9Fv3PP++tWfffjq6cvvrm6uvr5/qdfT2/e/PD6
9c3bZ/c+//HTzcvvH7789tPlu39/Pl//9cej6yfvn1//+uH+9X+vH/z29+Pf
//nl8Zs/n39RftvXnOte//f6UziF+96W7bb/87acp7z+lOtz+bnkOTzX/z/i
vudye8mzeldn7JR9O4L/rrb0iLN0rnsdfT61+2rvtbvayXM9uyPOwxH7f677
amfvkp/vlzxjK98t5d245PcN+b6L9zp6J8/17I44D0fv/xEbsrj/2hlb/G6p
7Ub517f/R+yk3PeI/T9iQ4Szd8nPd3n/BefC+6j869j/o3dS6yv4FDZNOJOX
PGOCq8VnVO64lfdqZf9X8hU/K2dMcLX4jModt0Lf9t/xtsIpMAicsp9y363Q
t/13vK1wCgwCp+yn3Hcr9G3/HW8rnAKDwCn7KffdCn3bf8fbCqfAIHDKfsp9
t0Lf9t/xtsIpMAicsp9y363Qt/13vK1wCgwCp+yn3Hcr9G3/HW8rnAKDwCn7
KffdCn3bf8fbCqfAIHDKfsp9t0Lf9t/xtsIpMAicsp9y363Qt/13vK1wCgwC
p+yn3Hcr9G3/HW8rnAKDwCn7KffdCn3bf8fbCqfAIHDKfsp9t0Lf9t/xtsIp
MAicsp9y363Qt/13vK1wCgwCp+yn3Hcr9G3/HW8rnAKDwCn7KffdCn3bf8fb
CqfAIHDKfsp9t0Lf9t/xtsIpMAicsp9y363Qt/13vK1wCgwCp+yn3Hcr9G3/
HW8rnAKDwCn7KffdCn3bf8fbCqfAIHDKfsp9t0Lf9t/xtsIpMAicsp9y363Q
t/13vK1wCgwCp+yn3Hcr9G3/HW8rnAKDwCn7KffdCn3bf8fbCqfAIHDKfsp9
t0Lf9t/xtsIpMAicsp9y363Qt/13vK1wCgwCp+yn3Hcr9G3/HW8rnAKDwCn7
KffdCn3bf8fbCqfAIHDKfsp9t0Lf9t/xtsIpMAicsp9y363Qt/13vK1wCgwC
p+yn3Hcr9G3/HW8rnAKDwCn7KffdCn3bf8fbCqfAIHDKfsp9t0Lf9t/xtsIp
MAicsp9y363Qt/13vK1wCgwCp+yn3Hcr9G3/HW8rnAKDwCn7KffdCn3bf8fb
CqfAIHDKfsp9t0Lf9t/xtsIpMAicsp9y363Qt/13vK1wCgwCp+yn3Hcr9G3/
HW8rnAKDwCn7KffdCn3bf8fbCqfAIHDKfsp9t0Lf9t/xtsIpMAicsp9y363Q
t/13vK1wCgwCp+yn3Hcr9G3/HW8rnAKDwCn7KffdCn3bf8fbCqfAIHDKfsp9
t0Lf9t/xtsIpMAicsp9y363Qt/13vK1wCgwCp+yn3Hcr9G3/HW8rnAKDwCn7
KffdCn3bf8fbCqfAIHDKfsp9t0Lf9t/xtsIpMAicsp9y363Qt/13vK1wCgwC
p+yn3Hcr9G3/HW8rnAKDwCn7KffdCn3bf8fbCqfAIHDKfsp9t0Lf9t/xtsIp
MAicsp9y363Qt/13vK1wCgwCp+yn3Hcr9G3/HW8rnAKDwCn7KffdCn3bf8fb
CqfAIHDKfsp9t0Lf9t/xtsIpMAicsp9y363Qt/13vK1wCgwCp+yn3Hcr9G3/
HW8rnAKDwCn7KffdCn3bf8fbCqfAIHDKfsp9t0Lf9t/xtsIpMAicsp9y363Q
t/13vK1wCgwCp+yn3Hcr9G3/HW8rnAKDwCn7KffdCn3bf8fbCqfAIHDKfsp9
t0Lf9t/xtsIpMAicsp9y363Qt/13vK1wCgwCp+yn3Hcr9G3/HW8rnAKDwCn7
KffdCn3bf8fbCqfAIHDKfsp9t0Lf9t/xtsIpMAicsp9y363Qt/13vK1wCgwC
p+yn3Hcr9G3/HW8rnAKDwCn7KffdCn3bf8fbCqfAIHDKfsp9t0Lf9t/xtsIp
MAicsp9y363Qt/13vK1wCgwCp+yn3Hcr9G3/HW8rnAKDwCn7KffdCn3bf8fb
CqfAIHDKfsp9t0Lf9t/xtsIpMAicsp9y363Qt/13vK1wCgwCp+yn3Hcr9G3/
HW8rnAKDwCn7KffdCn3bf8fbCqfAIHDKfsp9t0Lf9t/xtsIpMAicsp9y363Q
t/13vK1wCgwCp+yn3Hcr9G3/HW8rnAKDwCn7KffdCn3bf8fbCqfAIHDKfsp9
t0Lf9t/xtsIpMAicsp9y363Qt/13vK1wCgwCp+yn3Hcr9G3/HW8rnAKDwCn7
KffdCn3bf8fbCqfAIHDKfsp9t0Lf9t/xtsIpMAicsp9y363Qt/13vK1wCgwC
p+yn3Hcr9G3/HW8rnAKDwCn7KffdCn3bf8fbCqfAIHDKfsp9t0Lf9t/xtsIp
MAicsp9y363Qt/13vK1wCgwCp+yn3Hcr9G3/HW8rnAKDwCn7KffdCn3bf8fb
CqfAIHDKfsp9t0Lf9t/xtsIpMAicsp9y363Qt/13vK1wCgwCp+yn3Hcr9G3/
HW8rnAKDwCn7KffdCn3bf8fbCqfAIHDKfsp9t0Lf9t/xtsIpMAicsp9y363Q
t/13vK1wCgwCp+yn3Hcr9G3/HW8rnAKDwCn7KffdCn3bf8fbCqfAIHDKfsp9
t0Lf9t/xtsIpMAicsp9y363Qt/13vK1wCgwCp+yn3Hcr9G3/HW8rnAKDwCn7
KffdCn3bf8fbCqfAIHDKfsp9t0Lf9t/xtsIpMAicsp9y363Qt/13vK1wCgwC
p+yn3Hcr9G3/HW8rnAKDwCn7KffdCn3bf8fbCqfAIHDKfsp9t0Lf9t/xtsIp
MAicsp9y363Qt/13vK1wCgwCp+yn3Hcr9G3/HW8rnAKDwCn7KffdCn3bf8fb
CqfAIHDKfsp9t0Lf9t/xtsIpMAicsp9y363Qt/13vK1wCgwCp+yn3Hcr9G3/
HW8rnAKDwCn7KffdCn3bf8fbCqfAIHDKfsp9t0Lf9t/xtsIpMAicsp9y363Q
t/13vK1wCgwC5yn5R88YwEM=
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztmjGurctVhJ8MQqRMAImYzKTGDyZAYEZgJIgskEyALBE4RyIhZQQm8ACY
AzkZYyACiQBbIrgEG+p7X1X/vc+5wX3qd/Tvf3evXquqVq39e3/2Vz/6i+99
8803f/3bv/rPj378N3/805/++Gd/+lu//p8///FP/uD7P/mNXy1//j//fr3+
nf/8wbc///d//uHv//Jff2DW//b33//2H37z53/4y+/95bdPvfPV81/+/dV6
8U762UVsW/dC9/wu92LuK3m+VQsn62KdP4vca53F5Mli/0/lWLL+p1/84of/
37/1O18983f/8iff/u0f/e63//Ff//i/1l9+9su/J9+bvPPV+5N1socktq17
Sc7+jvdi7it5vlULJ+ticZZWDtM9m/qidZ3En+7zqRyjNZLwEY1nS+d8+c6W
Jnz1TrqfV2uqAZL8offyaj/Jnt/lXhb7TPZAuWldFzQnaf7QPKS5Z87S6j0T
fd7a2yLHFr3Aur9Ivtf0a/Q9yT4pttCaSvaWnNH0pDQOJ++F5u3Cx7utLgyn
Uz6icU4w0OAq1fZUz7dq/6kco/pk0YOb56lfQXs3E7ckt038aRzoeRcey+Je
Fn039RkWtdZ63nAo9VJMLlEuSJ43fNTqhQ2vnfR8krO0evA1rtJ7bJ3rVV0s
NDCNg9Eni5wx99LCipbmfKofX3Boq+5ov7DwDFu9Nu2FaQ3elmMJbybPr/N5
nSfJuWj+Gw3c4gijnUzOLO5o8dmWz3BybTh0UXevcom+54Z+al2DN+RYohNe
1fjCP7khT+i5Er5u+ZmUI0zemvgs8oHeS2s21+LK9fopfG7h2w2xNfy4vqMb
cmaNycldLOKz6BFaXk3yTqrVk/e39HbrXowfa7SW4cr1mt5pC59bnhvd5zqG
xttZ3NEiDq39LDD5VfwXeZLEgWrglmdFNW3So5n+gurtVg4k3NTKmaT2qVZc
rA1ut/CZ7oHm9jq2Bvda/RTdz1M5Y+JGccOcpRUH0+canZDgZ6sGTY2bfofy
Gu25WvdOufIGv4J6lQZnaC2YWJ2M7XombjTqwuswOfMUd7fyZN3nUk+v5Uu0
5jIU90wO0BguzrXQJzfkeXJfCc5QfZvkg5mXPYUti76e5o/hEZMzt3E3zRPq
Fax94+QsFG9bM4Lk7qhOTmrKxHCdz0+taZ4v4tnqm1q6+mTMW57tU71MK2du
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
i7+3zmgwfNF33MD7LSx9yg83/gPlGpO3N9wpvWuqYRJOMfP9lieZnNd4p6av
PNkHmVpIfCHz91a9tDCqNSNOMOGpeRDFUlojrTs9yTU0z6k/8BTmUw2/8OgW
szmaz/SOWvrH9M5PaYlWTEys6L3TfVIPJ4mV6TfXvG88ydbcecHvLa/AYF2i
CZ+q39Y+Wz3Xq/uifbrpL5Kz0/cnudTa81Na4qmebo23J/0i4yO11jRvKV+3
cM/w+0L/mHt/SsvdsE/jO5m/mz20vncRhxvW656ulc/Gf2v5RXRGsMA0WtfG
xzD+nuH3dc5Tn6EVz3fcp/GdWn4y3UOSw9Q3a8XhKf2QxKTV07XyOcmZJLeN
X9TqN1s6lp69xYP0GcPFixp5lxnfDftcz4Vbn6W1ZuLTigOto0VeLfR/y8NJ
4ty694RfWvVuMI1ykNFLJ/Vqss9FjSQ5fMOM74Z9tvrrk59NNH8Sn1exuhnn
W70AfSbJ2xZWm3s3moTWkcG0JPdaWqU1x3mK31t5vtCo77jPBDMpfhrspd6X
4a+WV3wDttP9m/ckd5f4SC3tbe69VUfGO0pqc6FVFnp1we/rPDca9WQ9tva5
1ueLdcKhNLbGK74B2/8biWrrPg==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzV1z/KbXcZxfGLAck07ESsTK0Xp5AINjZXiIVEhFhIOjvnkNZRWGUGKR2P
CVjYBPKy12et5xQJ+76cs89vP8/6890/++NfP/3TT969e/e3j7/736cf/v7b
L7/88NVnP/3+H59/+OKTX33x0XeX//jff99ff/PRX95//q+fv//l777+zT+/
/cX7d3/48/vf//s/v/4xf/8x1///3R+6fnIf8btv/e5b7/lktqkzPNlF6vqt
sxV7fHKGJ7/11p0KHTY1IH7rycwv7PeJxy+cOaXtJ8+uc1Jo+MkZmt3xJD+v
6VPkSTNnUjpsakB3vfCR3q/OWM1UYl/Nc+r3lyZTie5YcdqKG4VOdL/obNSZ
cM1TzawW3tF9Klhdf/fJbAUXNbl61XFiX5pnmr7W2bXinCZrCT82d6F7XGv1
Qh5qzklxSDO3tZdT89E8KfJWM6pm4xWPNe+jc6CZY0/0ozl5lYeacwRL6LzV
OaD90nxH0O87qYxNdcQqxzQLaa7Qz6J5RvR7s39X+ZZ6FtGhF/JBeFZ8XnOg
YAwxk2aONf8u8vDymVOs2/RO0+NNFtUzb2ZsKjdWGtAsJ5hKc0WKJzWTp35X
9N2FM6dYV7CT6LvmnFezEtzS7M0LGniSsams1u9xQg+pszXfC1IavjCrJ+cU
92nqVueG4Gc9z8t9seIxkYerzzzp0NU7QnO/ggdSHhR5ssou0RdC/02Nic4V
/d7si5XeRB6urle7uOYFzXuCAcTfV/tK5YbeaVNjTVZ/kvPNvhAeWe1FM4b+
Xc1m2gsrxkuxqNB/c1+ai3QeCo2lslTrSjOMmMOKB0T/Ci9ojV3wgp5/syM0
82heEvfReaifUeehuL+YrdhRkweaWtJs1sxzodULeaV5QOdkk6lEHz35rVTG
ag5MzVZkaZNRV10j2EN0vc4B4QvN5Dqv9JxXOaOvm/MRmhHPJfoxxQmCObUH
tZc1L2leTWk1dbbmfcT5L7BHMwcuPG8qq0W2i4zS3mxyo/Z+iiuamaN5VX9e
d6JgBj0rnXv6fUFki+gRzc/6nMJfWmMi8wUzp3pNZI7mVZ3/TQ5vMp5gsyY3
asYTjHTtbMJHgrGbGhNnFh5v9l1zR83O0pmp+TDVCyJnmhzV5HDhkebZNPs1
WbGpT83JIlc1TwqNCf3oHr/GAJf9ollaaFVrWJ9N99oq03QfpfhE6PkCJ6R+
V89Zd8cFBhA+1efXPmr6WnOIuL/QdnN3F55Rs2Kq01fa0xyo+VnPbcW02i/a
U3qn15ht1X0r5m/OM8WuTe+kmGqVXakzX+DJ1B61r5s8IPqoqT3hZf28TZ5p
5kbznJpjxXuEyFLhNe3xJk+mGFL7uskDoo/0ToXHm8/b5Jlmbuidiq5v+lfw
p/BaKqNEVwqNXe5ZvZdmvomO09/VexQ80+QuvVPN8yudr3J7xdiX+/3avvRe
muyhs0J4UMxKzFxrVc9HzKqpB8FRIrcFj+ms1v1+gVF1d6y6bNUdQksXrpvZ
oucm/PKEOcVzXeuylH6ETpozuewp4QXNZkL/qX4X/Nm8bmbLNVZsdnfquVZd
L/I89XfNDKkcWHmqmXUpLwj9i5699owrNl7pWfi3yWbN3BbaEyyh+Vb0RdOz
r5LDTa5u+kv4tMlm4gxNPa9470LvCI+vOPBJVogM1LmqPXUhh5tcLbSk/y66
ZqVDzborzrycD6v8FEzV9MUqV5tZvcrhC1knGE/z55O9CFbUmXaZM7X2UrMV
u0h136qDUs+oNdlk7KY2mjsVGSi6QGS78FcqE651VpPJL7xHXOMW3UGa5QQz
NH3a1Ize6QXvX+OxVBYJX6w6S+eAzgfRHSsuSp2zqQHRfSvNr5g8tVPRR7rj
LnhNzPwaP6furxlMs7HQoc4WfR6tsVROCs3rXtbcLrpPd5xmNsGWzW7Vs3qS
G6nvrjyoc1jzs+6vph9X/ah/9wJriQ5deVz0l8iH5vxTWaH3K3QuemeVvdq/
TY2JDNRdKZ59xVqi0y902TX2W7HEqgdFXzR7TWi+6UfRXymdiAy8rFWRD2K2
YhfNLtNz1vpscpTIQ80GuteedO4FT6X03+QHwUgXtPpEY+IMTV5tdpk4W1Of
TY568pkmh6z2lTpn01MpDtFzvpD/Td5r5tgFXm122bUsTeWq4KhURjU9rlld
Z9oqi4QOm4yh+arJD83PC97Q2ha8J2au+U1k7Er/17JIdIfQsJitOJtgjKbe
RB+teuEJI+mO1vzT9NSF8wum1Ty2yqIL+akZXvBSqqNT3tQMueqIlH+brNvs
iKYetOYv8LPOFs0tIrev+Vd3zbUsXTHkKlu0F1L3F32R0rnOn5TmxRlS2ltl
+7UM0b64liEXsrSZdalrkQMpLzTP0Dx/Sg/ad9feL1adu+qaJks3M6E5q8v5
merT5vtIk0k0F636vdkdzX4RmbB6R1j5KzWrZu6J/Bc+vZCfmluaeSWYJMXt
qdmm+l3PWeTGKtMu9EiTB1I51uzx5o5S81/lp/DjBT2kmEQwalMnl5nk2r6e
/JbukZROdO+LGa46Wutz1adNbTT1sMrwJjO8OpM056a5tzkH0e+rDNS+a85Q
59UFLQmGaXa9fq/RTHvNI2LvqbmJHGvqf9W/OgO1j5rdLfQj9KCz5RpXaO8L
PQuOvcAkWj86x5pc3Tyn5iI9H5EzzWxZ5fMFTzW/m/KU5sbU2YRHLmedmMmT
v4tc1f0rtN3MH9GDIlt0Lze7Umgv9d0Uu2oeE5/RnHYh617lPBe6STPM6pyp
Z3mrrlZ+uTAHzb2aSy/wm7hOaSPVoSmNaR0Kzm9ykfb1iuuaXhD5I7pvNQed
z5pLtZZS2SX2ldLktX7U/LPqR+HHV3+PWHkw1fUpfwkNp/yieUkz8Iq1Us8o
WFp/V3SKyC7dj8KPF7QtekF7UHtZz1bf84mvRUY1c7XJ5MKbmmfEd5s9ezn/
xfW194hVJqQ+o7ld+FE/l2ZCzVQik1Nn0EzV7HHtiyYnCG0I1rrwHqHZVczw
guZXXNfMPfEsokeEhrWXde5pXWlmE12v+UdktWAP3fvNszU1f40rdHY1eU9/
ptl9QkuaFZtcpzNwNbdXZ+8LXhDsKrJ0xRUXuL3ZcRdyJnVPwZavwnWaYfRs
V13WzOGVF4RfdBdf47EVw4iOW3Hghf02e7CZJ4I5U8+e+m6qy5q93MzPy527
YrYLOmzu/UK+Xduv7n2RM0LbutP1e8eKmfVMVrnaZNQmswk+v6yBZr7pThR7
0Xpoakmwa7PLUme4xtUif0SuNhlVPK/ImZQOmxrQXS98pPerM1YzldhX85z6
/aXJVKI7Vpy24kahE90vOht1JlzzVDOrhXd0nwpW1999MlvBRU2uXnWc2Jfm
maavdXatOKfJWsKPzV3oHtdavZCHmnNSHNLMbe3l1Hw0T4q81Yyq2XjFY837
6Bxo5tgT/WhOXuWh5hzBEjpvdQ5ovzTfEfT7TipjUx2xyjHNQpor9LNonhH9
3uzfVb6lnkV06IV8EJ4Vn9ccKBhDzKSZY82/izy8fOYU6za90/R4k0X1zJsZ
m8qNlQY0ywmm0lyR4knN5KnfFX134cwp1hXsJPquOefVrAS3NHvzggaeZGwq
q/V7nNBD6mzN94KUhi/M6sk5xX2autW5IfhZz/NyX6x4TOTh6jNPOnT1jtDc
r+CBlAdFnqyyS/SF0H9TY6JzRb83+2KlN5GHq+vVLq55QfOeYADx99W+Urmh
d9rUWJPVn+R8sy+ER1Z70Yyhf1ezmfbCivFSLCr039yX5iKdh0JjqSzVutIM
I+aw4gHRv8ILWmMXvKDn3+wIzTyal8R9dB7qZ9R5KO4vZit21OSBppY0mzXz
XGj1Ql5pHtA52WQq0UdPfiuVsZoDU7MVWdpk1FXXCPYQXa9zQPhCM7nOKz3n
Vc7o6+Z8hGbEc4l+THGCYE7tQe1lzUuaV1NaTZ2teR9x/gvs0cyBC8+bymqR
7SKjtDeb3Ki9n+KKZuZoXtWf150omEHPSueefl8Q2SJ6RPOzPqfwl9aYyHzB
zKleE5mjeVXnf5PDm4wn2KzJjZrxBCNdO5vwkWDspsbEmYXHm33X3FGzs3Rm
aj5M9YLImSZHNTlceKR5Ns1+TVZs6lNzsshVzZNCY0I/usevMcBlv2iWFlrV
GtZn0722yjTdRyk+EXq+wAmp39Vz1t1xgQGET/X5tY+avtYcIu4vtN3c3YVn
1KyY6vSV9jQHan7Wc1sxrfaL9pTe6TVmW3Xfivmb80yxa9M7KaZaZVfqzBd4
MrVH7esmD4g+ampPeFk/b5NnmrnRPKfmWPEeIbJUeE17vMmTKYbUvm7ygOgj
vVPh8ebzNnmmmRt6p6Lrm/4V/Cm8lsoo0ZVCY5d7Vu+lmW+i4/R39R4FzzS5
S+9U8/xK56vcXjH25X6/ti+9lyZ76KwQHhSzEjPXWtXzEbNq6kFwlMhtwWM6
q3W/X2BU3R2rLlt1h9DShetmtui5Cb88YU7xXNe6LKUfoZPmTC57SnhBs5nQ
f6rfBX82r5vZco0Vm92deq5V14s8T/1dM0MqB1aeamZdygtC/6Jnrz3jio1X
ehb+bbJZM7eF9gRLaL4VfdH07KvkcJOrm/4SPm2ymThDU88r3rvQO8LjKw58
khUiA3Wuak9dyOEmVwst6b+LrlnpULPuijMv58MqPwVTNX2xytVmVq9y+ELW
CcbT/PlkL4IVdaZd5kytvdRsxS5S3bfqoNQzak02GbupjeZORQaKLhDZLvyV
yoRrndVk8gvvEde4RXeQZjnBDE2fNjWjd3rB+9d4LJVFwherztI5oPNBdMeK
i1LnbGpAdN9K8ysmT+1U9JHuuAteEzO/xs+p+2sG02wsdKizRZ9HayyVk0Lz
upc1t4vu0x2nmU2wZbNb9aye5EbquysP6hzW/Kz7q+nHVT/q373AWqJDVx4X
/SXyoTn/VFbo/Qqdi95ZZa/2b1NjIgN1V4pnX7GW6PQLXXaN/VYssepB0RfN
XhOab/pR9FdKJyIDL2tV5IOYrdhFs8v0nLU+mxwl8lCzge61J517wVMp/Tf5
QTDSBa0+0Zg4Q5NXm10mztbUZ5OjnnymySGrfaXO2fRUikP0nC/kf5P3mjl2
gVebXXYtS1O5KjgqlVFNj2tW15m2yiKhwyZjaL5q8kPz84I3tLYF74mZa34T
GbvS/7UsEt0hNCxmK84mGKOpN9FHq154wki6ozX/ND114fyCaTWPrbLoQn5q
hhe8lOrolDc1Q646IuXfJus2O6KpB635C/yss0Vzi8jta/7VXXMtS1cMucoW
7YXU/UVfpHSu8yeleXGGlPZW2X4tQ7QvrmXIhSxtZl3qWuRAygvNMzTPn9KD
9t2194tV5666psnSzUxozupyfqb6tPk+0mQSzUWrfm92R7NfRCas3hFW/krN
qpl7Iv+FTy/kp+aWZl4JJklxe2q2qX7Xcxa5scq0Cz3S5IFUjjV7vLmj1PxX
+Sn8eEEPKSYRjNrUyWUmubavJ7+leySlE937Yoarjtb6XPVpUxtNPawyvMkM
r84kzblp7m3OQfT7KgO175oz1Hl1QUuCYZpdr99rNNNe84jYe2puIsea+l/1
r85A7aNmdwv9CD3obLnGFdr7Qs+CYy8widaPzrEmVzfPqblIz0fkTDNbVvl8
wVPN76Y8pbkxdTbhkctZJ2by5O8iV3X/Cm0380f0oMgW3cvNrhTaS303xa6a
x8RnNKddyLpXOc+FbtIMszpn6lneqquVXy7MQXOv5tIL/CauU9pIdWhKY1qH
gvObXKR9veK6phdE/ojuW81B57PmUq2lVHaJfaU0ea0fNf+s+lH48dXfI1Ye
THV9yl9Cwym/aF7SDLxirdQzCpbW3xWdIrJL96Pw4wVti17QHtRe1rPV93zi
a5FRzVxtMrnwpuYZ8d1mz17Of3F97T1ilQmpz2huF37Uz6WZUDOVyOTUGTRT
NXtc+6LJCUIbgrUuvEdodhUzvKD5Fdc1c088i+gRoWHtZZ17Wlea2UTXa/4R
WS3YQ/d+82xNzV/jCp1dTd7Tn2l2n9CSZsUm1+kMXM3t1dn7ghcEu4osXXHF
BW5vdtyFnEndU7Dlq3CdZhg921WXNXN45QXhF93F13hsxTCi41YceGG/zR5s
5olgztSzp76b6rJmLzfz83Lnrpjtgg6be7+Qb9f2q3v/h+75X1bnLKI=
       "], {{0, 
       128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztncHKbUcRhUME8TWcCc50qrkIDgXhChkKEXQUESIi4sSB+BaOheQlfAGn
PoI4DjgUTMDBFW1Z619rdVfvfw06nBz22ae6a9XX1VX7P/frP/nF25+9/957
7/3ya1/85+1Hv/7eJ5989JsfffXL//npRx9/+1sff+WLl7/79/jy9Q8+/+Gb
7//tzx/8/PNvvnn39Z/++ds3f/z92+/+4w8f/sdr9nrks8p9XLYlXit2Kn5R
1n+nzYpmEnpwrYmyzpP149L/Th+x65ngnvJdaZ9+9umnH/yvsfou9vrVZ9//
7O/f+fAbv3rz47/8lb4PYo9yz8RrxM70XFbrv/LFNJuR+yv2IPpcjdV6Iut8
i352xkWaIa71n8CNdO7BXv+uX5S5rGJnZc+790FsS79G7ESGMpdT/HfZjPgX
yW0QbSvzXdm/mjui+Qn62RkXLh8h64n4SOFemhuu+HLtdyt7VjYj77N6Rt5P
792InWz8snNheZXgv2Kz67yMrL+LsYiulHXbqZ9TcaH4iJ0XwkM2H1bWM803
dq3YOGL1r8Sa60zn2ruVM9dqjq6a5+r+Cf5PqKXvPHezc2dzOZaBii/SeWwi
ZhN7mYtFyHoqtk2IL6VHk2YLu/7s2q6uZ+u9iK5W3Fb4kOA/azNr2+R6HetT
V2wqvnDFAhsXSsy62Kv43VX3du0RbHwpez2y/iu9JeKL1TNyf1a3CMdW+mHr
2Kz9LGMZ3v+/ubD3QTSTzvPZc67y7AfrF7YuvfIF4mtXHqvEF2Izex+X35F9
3BUjyv7CzpHdX1jmuOKL1bPSE1TOoew6JM74yLpN4z+i/wn1OkU/iF9YXqU1
ifgocZZhdbJ6P/EcKbIObIy46vmudWD9ztbl2Gc8FJ0gflTOQYpWd14zmf/K
88lKXYKtrSlr6zqfKtpArmd5uLPm5np2SKkvsXpT8n8lf1bOdK59UNHYzmcz
VuvA1nOQa3a+ZhmlxKDiI1bPSl2C5QDyPrK2rGbY3FLRpOssk6i5sZ91sTdx
rkzPi+Ubqz3ktauWq7BFyQ0UBrriK7FuN/Kf1UO6NqKsratfoNQxEmeZtG5d
34v4Gvne1fvKeWdn7CPfi+jB1d93nZdZf6X3F2U9XT16Nq7ZuSf4z+7dbO7E
6kfxqaIZtvai8ISdi1L/YXWr1J3StaYEKxJrqMQX22dXrlc4o+TeLKOUtXKd
j5B1Y+NaiQv2PuzauvIitvbC+lTZl5H5svkq+7ycohOXbtm5K7mBwknl7MBy
0sXMRI6UuL/Cf3bNlf3lpZxD41R5BswV1+l1YPduJS9CvovlBpv/J+LL5QtW
J8q+icxrdQ3irwS3WV8ofldqWWxMufpHyPsJ3iprpawtG18u7bE23MJ/Ja9I
1EPY+mpibZW9iR3sXFjblOcZ2PkqtSbFNlfuyuarbO6E+JHdR5C4c/HfdWZk
1zZd905812T+szmbclZNPMuRWFvX3pTQCbtfK7m6whB2nV22KWcNJa921SeV
HIm9XuGhcmZkY+pU3/Op/Gd7moiPVvdH7DlVM0fiQonNhE4S9px6PkSp7yX6
2qwekPddPX3E18j1rtyeretOeDaV1eTOuEaGi//KedDllwl7q6v34dJnghWI
PavPJp4PYfWDcMP13JfrLJCIfYWlSOyzZ5nVPdkz3c7cA9HGqbhWeKXMlz3H
Kdckhov/rvOysg7pWpZrzZX+oOsa5Z5Kn4W1x6VP5HtdOTarGdf1idwDsSHd
75vAf1fNjX3NznHn2ipnW+Q+p54TSJ+d2RqC6zXrIyUnZ23YWZ9kX7M1NLbG
q+iB5WoiB1Y4uTOulXN3or+2s0bnWlu298GeZxEtJXTiOssoOkzrbWWPUlNS
+uzp/hSiVbZfhqwtkg+z17hqyK4cWKlZ7YxrZe7K8wmJvltiuJ6ZRK5X+MPW
4U+dZRQuKfkwm4sq+53SZ0/rk9Wqos9Tr5VYczGQ9YWrv7aT/2w8KudKxU5l
KLkckv+w+Qwbv4pOXGcZds1d+bCSiyrnUIX/6bM/O19Wn658L7GPK3UkRKuJ
+ieyZ+3kv6vPy54rFR8pQzmPuM6Arvxn51lmZ92VtUc5RyB+d2nGpU/WZnYN
2b5VQueJfS3BQEW3Sr6hxKCSi7rqAGlWKPHl0kMi/0nPZULdFbGHzTfYtXKt
c6Km56ppK3tEIs9n93HW5vR5HNHD6v6sBhQblNeJM9E0/ifqM678JzGXCXVX
5LuU+ygxpdR/EjU9pabNrrnSI0Z0xX4Xa7Nip5L7peuNrA3I/Xf2apF8Sbm/
K74SelB6KIm5TKi7sjYn/K58luWPS5+JfAyxmT0XsHsBYptrX3Odx5X+mkur
iDYQv6S15+JqggOIX1g9uGLHNRckJ0nXXRFtrN5P91Vdn1Vi89TzEooelHhH
zrxKLsHatroPYrNyLkvzn527S3vI/pg+Cyh1YFYPrP7Tc1G+N133QGqzLvvL
f1zPyJqwNXa2r53ICV218YTNaf4rPT5XXsfupy6/J2pr7GvXfrezl4Gsg1L3
YPsdibp6WjOT+e/auyfch50vsv5KzXbnWVV55gfhg9J7Yut+Cb+71patJSpn
XmUuiVxaOfex5yNFVy6/P5X/SmxOvsa1/siaJHqmCUax9VvXvqbU/RJnQGVt
2TqPom1XTpvIpV1xp2iMvb7812Nz8mvX+iNrhehE+V4XoxDbEMaybFHqfqvv
dTGKXVuFV2wcsftdupfBrq1yf6W/wOr/NfOfjU2lzpl+neb/qX1HYZSyryl1
gHS9zsUodm1ZXimxs/psIqdF7EzXltnPsvU011o9if/K+Z19ZjLxGolNZf1X
1+/cd9L8d3E7Xa9DGJLoraTzK6WXpOgEsdPlO9czBogGEJtfM//ZM6arrut6
nVgH1xxdflf0psyLveZUvc7FqBvzqwTTlNove39lrVw1gdfMfyR2EH+xuY3y
mrXHxX9kjmyMT+C/wmqlV6vk6glG3ZJfJbik1H5d9VJFP65+92vgv7LmyF7s
2q9ZzrviVGEdW4s+xX9X3CFzdNXr0oyanF+xQ+llKOdf1ndKLYvtv7zm/B+J
d2QNE3UbxL8uhif0qfTpdvLfFXesj1xcTTNqcn7FDnYu7NlEyQ9XdrIsco2n
8t+Vv6386KrbsHpD1lBhBaJPpe6h7FOJZ1SUa9hcguUqq1uFUdPyqzTT2LMJ
W7dP7GuJ8ST+K2coJJ9h/Y5cn6hBsaxQ9ghEG64YSfcokeE6R6xsVvZiVnsu
O135lct3rrkgrEB8l6hxucaT+I98FtGAq2bC6gSxma0vsbYhflFiU4mRU/xH
au8KVxWGs4yall8lfJfI/5W9L52TKONJ/GdHIo9i78/qgeU8W59n+7+Kf9kY
OcV/hANKjCjcYBk1Ib9SOODiElv/d/m3/H+Z3xPf5cqjEL65nv1YfVbZF5TX
yprvrFG7dMLGtSsXdfFKOaewg/XvtPzfVZNU/JUer43/SEwpZ730mVexh+1Z
u871CHPY69P8d+2J6VzUxdV0foXYPC3/33m+Y+foGq+B/64eDcJG9p5sHZ7l
OVvnRPSPrKcSy6fy/8Q6J3JRpfe0M79K504KlxB/7TzfsXN0jdfAf1ePZqUN
hUWu2rvSj0CYNqHnlea/a50Vm131t0RtDYlf5byprLOy5uy8XP6d0Bd+Kv+V
OnziuRGW8y7eumoLSvxO5r/Sm0jUh5HPsucC5bsQv7D7pit3SnPJVd9Ln3fS
MZVe5wT/lRq161ym1BgV3iL3V5jG7qeu9UzwX+lNuPjveq5G4Ywrv3KdX07x
n82X2NhMnHfSMZX4LOvrRB+NraOy82JrjMg1rMZcfFBqKTvrukrNTZlXOkZY
XSV668p92Lr6Kf7vPDe55quMJ/Ff6XWyepjmR2S+6bqNq8+u6I2tublqRDuf
q3HlSK61Xd2HzbtczwIpZxm271b+z9Q2wkBWeywrdvpRObe++75St0n3hRO9
VKVGhFwzLUZca+s6NyVq4+la1in/JsaT+M/m/wlWnPKjK99W6kLpPrurvoFc
7zpHTIsRZW1d5yalt+WaC6uZ8t/72YS2lWddVt/F6nCnH9lzK8vw1dzZM/Lq
Pom4dtWsXLnBtBhxrS3ra+S5INf3ps8yp/ybGE/iP8uuhJ2n+K/UXpRnNnb2
2dO9VLafi2hvWowoa6vkEsq+X/7nxpP4n9AeYqerb8WORG0feWYj8bzfzmdp
XPvR6p6TY0RZW0TnbC0lUVMt//fYP03bCe2t7Ez0rdI6cfWFkfptos/u0lvi
ua9bYkSx05VfIfuFovnyf4/907St9KQQO129RWW4enAu21z1n3QtXTm73cKH
dCy78ivlGYPy3zuexH9kpLWX9qnSg1u9nz4HufZNF//Tzx/eGCPp/IrtJSl7
cfm/x/5btI3k/C7tpX2q9KBdPRGld8DO0aUBZU9Rzkq3xEi6tubqJZX/3jFB
M2ltu3qXk/mf7sexPkLsT2s1UVdk7b8lRhK1NSQekf7R6rPKXMr/s5pJa3vF
QLZ3yWov7VNX7QW5Z6IevlOr5f8c/iv7wjSfnvLvhJi6RdtKH8qlmYRPldoL
uw47n2tK6G0CKybHiOuzSp6QOFOX/3vsn6ZtJTdOPIfm8qlSe2HXJF0P36nV
CayYFiMJO5Hzo0sDE3x6yr8TYmqyttncOFEDT/hUuQ9b/19dc6NWJ7BiWowk
7Ez8reVkn57y74SYmqxt5LPsM+qus+1O/qe1dItWJ7BiWowk1nZ1fkycBSb4
9JR/J8TUjdpejfSzQOX/Wa1OYMUtMeLqryHvp7VX/u+x/xZtr74r/Rxa+X9W
qxNYcUuMKP01JC5cZ4EJPj3l3wkxdaO2WR26ngUq/89qdQIrbokRNudBzsWJ
vsAEn57y74SYulHbCU0ifYHy/6xWJ7Dilhhh+a/cP/03leX/Hvtv0bbrb2BX
NqefmS//X6aBCay4JUYS/TU2dnauQ/k/RzMJbSvMRDS587dAy/+cBsp/r53I
SD9TUf7vsX+yttn1RDSp+GjnZ8t/r67Kf69m2N7xNJ+e8u+EmLpF22x/FtHk
qd+CK/9zGij/vXauBlsjRWK2/N8fU7doG8nbld+F2PlbcOW/VwPsPct/XSdI
75g9d5f/+2PqFm0jnEfur+QqLv+W/7oGyv89dr472POy628wy/899k/WNpu3
s33bnX8LXP6/TAPl/9lYRvIu5IzAxmb5v8f+adpG6jwKe3f+dqjy2fJ/j65u
jJG0nWwfjc3nV2uy06en/DshpiZr28VqRM+rGpHSt3Jpo/zP6ar8x21j/30N
128Elf977J+m7VOsRs4a5f9+rZb/+/mffrbTNZfy/6xmEto+xer0v59V/r9M
b+X/nlje+Wynay7l/1nN7NQ2q1X2jJD+97PK/5dpoPzPxTKi/5XmkVyr/J8Z
Uzdq28Vq5Oywslnxdfn/Mg2U/7lYPvVsp2su5f9+zZzStsJq9nmGhK/L/5dp
oPz3xjLS20WuT5yRd/r0lH8nxNQt2ma1qtwn/bcA5b+ugfJft/PUs52JNS//
92jmlLZdf7eV+J3P8n+PVsv//fn/qZ7XTp+e8u+EmJqs7dV92L8FUHyBfLb8
36PV8n9//j9Bw+X/HvunaXvF/NV9XL/tg8wFeT0hdp6k1fJ/T/4/IefZ6dNT
/p0QU5O1zdb5XTUiJEYm9wueqtXyP5f/K/9eRvl/b0xN1raiyZ2/F4Fcr2ij
/Pfqqvz/b6269oiExsr/PfZP07byfMLquyb8tk/5/zK9lf/7Y9nVCy7/Z8bU
ZG0j+fyK7YhtO3/b59TZ+UlaLf/3xPKEnGenT0/5d0JMTda28rdaq+/d+ds+
E87OT9Jq+b8/lpW5uHKq8n+P/dO0zbKU3S+UPWg1JvQLnqrV8n8+/xM5Vfm/
x/5p2kZYuqr/KD0Cdi7T+gVP1Wr5P5P/iZxnp09P+TcxJmgmEaesrpA9QpnL
5H7BU7Va/s/hfzrn2enTU/5NjAmaSWs7oWHkmlv6BU/Vavlf/pf/Oftv0fbO
kT7bpu//JK2W/+V/+Z+z/xZtp8fken5CV7dotfwv/8v/nP23aDs9Jtfzy//y
f6edO2NEmUv5P0cz5f+efkH5X/6n7UzHSPl/NqZu1HZ6KL5L1/PL//J/p50J
zZT/c2LqRm2nB+u7nbFQ/pf/O+2coPnyf4/9t2g7Pcr/mVot/8v/8j9n/y3a
To/yf6ZWy//yv/zP2X+LttOj/J+p1fK//C//c/bfou30KP9narX8L//L/5z9
t2g7Pcr/mVot/8v/8j9n/y3aTo/yf6ZWy//yv/zP2X+LttOj/J+p1fK//C//
c/bfou30KP9narX8L//L/5z9t2g7Pcr/mVot/8v/8j9n/y3aTo/yf6ZWy//y
v/zP2X+LttOj/J+p1fK//C//c/bfou30KP9narX8L//L/5z9t2g7Pcr/mVot
/8v/8j9n/y3aTo/yf6ZWy//yv/zP2X+LttOj/J+p1fK//C//c/bfou30KP9n
arX8L//L/5z9t2g7Pcr/mVot/8v/8j9n/y3aTo/yf6ZWy//yv/zP2X+LttOj
/J+p1fK//C//c/bfou30KP9narX8L//L/5z9t2g7Pcr/mVot/8v/8j9n/y3a
To/yf6ZWy//yv/zP2X+LttOj/J+p1fK//C//c/bfou30KP9narX8L//L/5z9
t2g7Pcr/mVot/8v/8j9n/ylt/wsdALYz
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2LGqJtUShuGNgph4Ed6ChqIbUyMZURBMtqCBDAgzwWBmMHcyDBgreH3O
gMEkA3/tqm/1V1VvcA7POfT0372617vW7k9//v3Jrx/c3d09//jNfz15ePH1
s2cPf3z30dv/8cvD088/e/rhG/75/3/e+p/XX9z//c3z+39fvvzqXf/w0/df
/vXqx/tPfvv2/l2/75j3neeWc0bPH/3dquupsvr8VdeguM5bxjzzPkTvq8pX
nf+qsVU/C0Vnqt5zdTcU3VOMieIdqLp+xbO+qtUn1wJ189XzSDGXHaxeWxVz
/KrOKK7tZDdOvg/qeVq1t79qzZ1qRSsU+xn133rOa0HVXFY3XNEfxfNSvw8n
+3Ny73TVunNVK6bauQPqOdWl+YqOVc3lquPVna/aryo6pniHr1pTFH8LKH4X
1zZcsdao9x7dm58Zq6vWBUV/Tu4lruq/+h4z74/zv2Ut8FlTTv7/25qv3sdm
Ol91/Mn1seoYxf5KsTfu3syp99XRin2p+m/J7lY8I/X+8Kpnd9We4eQ+alvr
FHsSrOuJeu5v6H/V+1/VRsXezGE8Tz4jxZza1jr1+4x1fd7Q7ZO9qnqOmc4o
rqeLnd9zh4Zc1f/ov8W17/C2DjisBYoOZObUyX24w3NxeM83tI410bP/6uPx
tR3o2EOHtfjkvU/tv2L8He7LzdFxc3v/ce07r2j71PfB4b6mti7Tpaljoh7n
W8bK7f3HZ975zHuC+z535y5FW+RwXw6u2tsw332s6ED0d1kLZjx3ty65nbOj
M3s25rW/qzqgaDvvjP9zd+jSVfsNh3FwWAvY4/W1ugPsDTzdsf+Z/lTtNzqO
m8PfAuzxPK14n6/aj+Gd/c/sPareT4fxcXsWDu85PtMBRdt5l/yfu4Or7rdq
37LNrAV9re5AdB45jMkGd+9/9F266pzbzBzvZcW7XbWPchifqZ7UtMweo+qc
mLWgo6s6oGg774n/c3doS+YeM++bwzh0MWuBp9UdyOzNcN/n7tAQh2Mwa4Gz
Fe9z1d7JYXymunvHovelPgazFnR0VQcUbecd8H/uzs1X7O1ZC1gLJlndgeh8
cRiTDe7Sf8X7kzmetYC1YJIVHcjMKZ5v3+eubn7mOrucE7MWdOyAou08X//n
fnKOZ5rgfE7MWjC1A9F9kcOYbHCXRmXeGbdzYp93A+s6EP1dnt2M537VfM/c
o+Kc2OfdoCdnOqBoO8/O/7m7zfGO58GsBVM7EN3/O4zJBtMxvME053wHor/L
c5nx3DF2NmuBrgOKtm9+Ll2eO8YdzVpwpgPR/b/DmGww/ceYtUDRgejvbhtz
B9N/jFkLqjqgaPvUMXcw/ceYtUDdgej+32FMNpj+Y8xaoOhA9HcnjWcX03+M
WQuqOqBoe8fx7GL6jzFrgboD0f2/w5hsMP3HmLVA0YHo73YZq0mm/xizFlR1
QNF2t7GaZPqPMWuBugPR/b9DGzeY/mPMWqDoQPR3HcZhm+k/xqwFVR1QtJ21
wP+5Y4z7rgXqDkT3/w5t3GD6j7GnT3ZS0QG+//ib/mPsb/VaUNUBvv/0Mv3H
uJcVa4G6A3z/8TT9x7ivq1qq6ADff/xN/zGe4UxXqzrA959epv8Yz3ampYpr
4PuPj+k/xrOdme9Vfwvw/cfT9B/j2a7qQ2atqVojHJo5yfQf43mu+uZT1QS+
/3ia/mM8z9E5rmgC33/8Tf8xnufMfK9qtWKNcGjmJNN/jGc40+2qPlddm0Mb
N5j+Y9zXmfl+yzkV18D3Hx/Tf4x7OfPdRr2HV3zPYS2g/xjjx81TRUsd1gVM
/zHGt3de0dhbrofOe5r+YzzDVX3ONP/kuoPpP8abrWi14psP/fc0/ce4l9Vt
j3ZesWZh+o8xzndV3erMmuXQwM2m/xj3dWa+R1udWXfov6fpP8a9HG1p9JjM
WqNevzD9x3izr/r2UnVt/C3gY/qP8Qwrvr3ccvwt15M5P6b/GOPb+6/Yh1e1
wqF7mP5j3N3qPXx07ahaazD9xxg/rr0n14Jo5+m/j+k/xn2d6a1iLch8g8L0
H2Nc29vMt5qqhmd+F9N/jHG+z5neKq6Z70L0H2N8pp9V54xec+a+MP3HeJsz
/cwcX/X/sxb4m/5j7O/MPj8zxxXfjlgLfEz/MfZ3pu2Kf1vVGdYC+o8xftxa
cLIPVdeQaY5DMyeZ/mPs76p9eKb5VU3O3BdrAf3HeJvVDYx2IHM9VeOA6T/G
G3xV/0+uHVfd+2bTf4z97dzA6PVk7tHt3rub/mPs744NjN5XZr3A9B/jqe7S
/6q2Z8YH03+MJ7lL/zN7+G1j4mD6j7G/O7ZO0fzuY+Jm+o+xv7u0Tt38jmPi
bPqPsb+dW3ey+V3GpIvpP8b+dmvdVc13HpOOpv8Y+9uhdQ7NdxuT7nZ4jhhj
z9a5Nd9hTCbZ7ZlijK9tnXPz6T/9x3ib1a3r0nz6T/8x3mZF6zo2n/7Tf4y3
uap13ZtP/+k/xtucad2k5tN/+o/xNlfN2UlznP7Tf4w3mLlM/+k/xnuc+Yaz
YS7Tf/qP8QZXzfFJpv/0H+OpzvRtw7ym//Qf46mOztNt85r+03+MpzozZzd8
C6L/9B/jSVZ0e+paQP/pP8bdnZmzJ8/pZvpP/zHu6Mx3m8y8njT36T/9x7ij
q/bz0WOqrsfB9J/+YzzJVXN26jcf+k//MZ7kW+adYj/ffb7Tf/qP8SRH9+rR
YybNcfpP/zHubsU3n8z5u5j+03+MO1qxt1cf42b6T/8x7u7o3FQf08X0n/5j
3NFV8zFzTPe1gP7Tf4y7ONrbzPyt+i2HcaP/9B/jjs40ufs56b+/6T/GZ7qU
Ob7LOR3G2aGrXez8fDGeZMV3mKvO6WD6T/8x7uhou6L/tuqczqb/9B/jjq6a
a27ncRhDh652cfd3AGO80/Sf/mOMd5r+03+M8U7Tf/qPMd5p+k//McY7Tf/P
9P8/1LAJXw==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztmrHKb1cVxINCsBDfwc5CG1ObiwhWahFbLSJoFRSSQux8CLG2jq2ltZ0v
ID5LMAGLK3hgfvxm9jnfvbeIbC/nO2fvtdeaNTPr/+1f/e6j33ztvffe++wb
X/7PRx///oeffvrxH37+/lf/59cff/LB9z/5+pfLP/73v6/Wf/73N1/95Dvf
+/AvX/zoVbJ+/18/e/Xjz3766rd//+7/rOnzybq1h+Q99N/N/k2cW/E0z7fe
Y+49+feTOUO/ddd+Tp5xsYdF/Ft/29r/GsdoPf7pF3/7wT+++OWH//zWB6/+
+vnnH/6//15/5ur55Fv0nVfPJ2e5emfyLbp/E2eD+Vf7v3p/ElvznuT5qztK
7utkztBvJf8t9nO1XpxxsYfWXdN8bp0x+Vta1ye/lfSgq29dPXN1FvpOwwHo
+5P4mz6bxJbmxoKHL/h/ci9mvc4Z+q2T+6F7M+85uYd1/Bd7u9qnweTFtxJO
clKnUExOOCe9a/O3lPcuvCDDw6lOoZxq0QvWOdPq+4v90L0lOWxwsrWHBe9q
cTODw1f3mzyTxJxqbVo7J3UKxeQFTzZ9ge45yQ26T8P5DV812qHFSxd7o31/
Has1P79rD/QZUzsJN6P9t+XpGa3dqp0n6BTaa1o8meKtud+Wj2e0nuGr9F5a
3NvUgtFrtI5asaI9bqGVFntY+DZJPrS+a3Kb8vmW72FweKFTTK9JcsDojpZm
XN8LzfM15zS60uCVyUmj71q5YeJgcNLkZ6tfG/558m8NzrTqsbXPBIdP6hTa
a2htLrh0C9tb2jbBwAXnbPGKJDeMd0Hz0PicBktbdUdzzzxj+jXNE6rlzd8a
rGtpwGTPr/97S0NR7dPSKcZvad3vwougMaHapNU3KYc3vIJydXrvLb1s/O0k
hkZHX+FMqxYorrZym87yKH+gPS7JsSS3qTfeembB1Vt8Y62pW/OOFrYneEj7
VGtOYfQsrXHD543fZfZ2cr5Gnzc9iOab4VGtvmP4qjkv5Q8tLp30nZYOWvB/
o5VOeoyt+Jg5bxLDNY9N7ohiV3LXLW7ZysOW19eqzeQuDM6v1waHKc9p1ePJ
Hmp6SqtOW/w/uQvD61oeo+E2Lb+aelwLHmu4+kld3JqBnvT6KLdscf4nrNd6
s8XDn9ATW1hE67RV77RHmPpdaPBkbfh/EvMFV29h+LpmjQ5a/Ptdcxyq91tc
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
LvpRy2N8Ap6/SWtay3dxEtPLKGc7+V06IzAexRpX155ngntmb8YroziczBRo
f2n9RsjkQHIuqnmfhi1vw9r4Endpt/VvolrfNbhK1waXWhje8tkSrDPvb3ll
La+vxQ1avSN5f8tjvNrnm+QLvZQ15VRP0G7GS1l819Rsy68w90UxfOF5Gv88
6U0tj7H179SrpLlNuRz1h2kPoj3unS+0W9N6f4J2S/a8yCVTI3QebfwKw9Na
GG5ia+YOV3s2uZrcL/13M19O+j797iJnaA96ss/8Jq0pZ6Ne94JvG75hcqk1
AzX7Md8yd30yD828nmJacl4zL2v17kU+UD/f5IzpQVfveQJ+vg3r1hznadqt
lUstjkprx2ARxZOTd0e/m5yLakOqgxZzhEU+rL3KRHvSnDR85t26i40mN55w
rpO5RDkqrWWKRVf3e4Und/l49HnqudG7oF6o6XfGxzPnMl4lrSnKf0zveLf2
2Jg8Q/3wu854Vy7RmSC9l+SMFH8MPi96cUv7mPkIzfmkf9FaW3v41Kcy/lJy
v6Z3vFt3eYjxguhdr7nlOpcSvpTgxgKfDU9u3Z3B6qu9LeYjZgZKsfQuD7/l
X5n7onW0zs+3Yb3Ik7twnubDIpcWfmwLn5O5ZKvGTS+mfnjS0818hM5AW/e+
9vBp7dP8b3GSRXze5rXxis3vLk6u1/rFxJzWy4KPtfpRUuOmNxkfZvF7m/W9
01qjZ6c9olV35t4NFr3zhfL7WnCYk+skN4x+aeXSSQ1lPHbD1c15Tc+i/f0k
Viw8lpauWfB2c78tLy5559u2pvf75D5L+cNittjqTYv8XPg81L81vyVYzzrX
WLHwWOjZTW60eHtyvwaLkjM+AXvvWpvfD9D6uqvP0j0sZlW0Rhb5aebIptao
P391X+tZ5xorTnpNSa9s/cagxdtNTdGYJGd/G9Ym/tRXOXkuo1VNbtDn1/6S
mREvvpvwPeNdmL52EisWXlPC1Y1Go/fY6rOtmNC6ewI+39ULEpync5l1nzWe
tskN+l3Duxa6zOh9im909mpyjPa1NVas75reO92b0WK0z1IOs+aHb9L69bP/
B1HIQHc=
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzlmjHOpkcRhFcgIa7BFXDMSlzBjggXCyJLSEuAyMgJCEm5AzewiInIfYK9
A7ZE8Aa0XKWqp2e+f1uy9Xs070x3z0x1dX3+xW//8OXvf/Lu3bs//vz7f335
4U+//vjxw5+/+tkP//G7D9988ctvfvr9n3/53z8//P3Xf/3m/T8/ff2rv//t
6/efvvrP+4//+Pb9d//+9H4an/5+zp/+due73yq+KbEo37p+Evu24m3Nb50L
8S19ZxJ/3DfVekfEvUp8IPAhWZM4I+J8E9/ePew5591g05wkt62/J5+VWNzY
E3+S+W6MyTqtnBC+Kd/Sdybxx93r1BtxzfWBwBMih0S8t/nmctRkXyJ2xTd3
jlIr3Xy6+7rruGu2fHDPJYkxuZOKb0lO3HgVfzbfiGsJn2zhieJnK29JvIk/
tG9J70Dc24Q/JKb0U9O3Sl+m7Ovm310z6cHd3tbNbQv/k3N0z8XNbfJmb3gj
kyX3/2kEx5jWUfKWaGKJP7RvLc1NOSOix0numLJmknNlzSQ/SiwtvaLV2yZc
/WktXKXPxc3JZq6m+a617v9kCceY1nH3dX1u1Xfat2nN5G+ip0t66sRc7E3q
l7tOS8Np4Yziv9sXKDG6uJrkltYflJwTulNiLa4y+dyqvy390/Xfre/E+1Vy
O+WtxdtbdbCVByU/yhx3/jQnqftJT9d6C8n5un0rcT8TPtbKyfRtkqtTPbIy
f7JWL5xgiMtp3Xhb9zw5083+V4l98q3VL7es9aaSWu9qce5dSnTOxDclby3M
n85COSN3nSSHyriSH5r/K9xyslYv7N5hWm+Z/EzOMXk7LS5H6Btub6KME0bg
f4vnJD0d7T/NpZM+dJqTnLXrD9GXtc5a8blVd9w738JVuody91W+fc4h7nby
ZpV1Wu+X1jmJvZLYW/tO67f8b91Vxf8WN0h6zKSnnuYQnJa+t0ndd/l8C1eV
GFtakMsHlLNw/Ul0RXevVo1Q1r8Z/1s6eessNvv0hH+63FiJXdmr5T/Bgaf5
hOZD918Ktrf2dfPT6qEUvKV7E5rnT/OTt5nULMVP1wgenvAE12fXB8V/1wf3
rrr45r6R1pzEEp+f44TmM62fjLuYn/iT+Dbt27rDbi1Laj2tLShrJr2eEgtx
55W43G/dut+Ki+7T3W8TPxOdpPV3chZTflo6xrR+4lvSf92m9xLv62mEVqas
P8W4ebeT2jfFOK2vxJvE0lo/uQ+ndMhpPNHGW5y21Y/T+Xf9meYQOq1iSW9C
vHeiB2+d76ZWpsSl8CLibrfqnVKjT/G0luZG84RpXze3Sc/lntFmz76ZfyIn
bh4SPxNsadU4mgsRvXYynmhNSoyt2JPcJm+zdTfcGFuaeXIumzpkoh+23nWr
Z0/Ows3/ZElOiLs9Ga1LKHsl3COJK6kvLa3MjSX5VvEzWVOZ03qbhKZ3SvdO
4iIwX8Gl1u84rb41OYsk/8T6NP4nms+0pnvWyvqt90jo3i2tLMm58h5bnKr1
W0NylxR/3LiSNVvxttZs9YB0b0toMm7eWpizuX7LWj2Iq2u5uJf4Q2gFhFbW
0rta+XdjV9YnavfN+N/SDdzzncZdbYfobWlNJuEnrXOk129ZqwdJ+kEXP2/u
6ZT5hD7f4odELIo/0xxXf7gB/1t8w+3j3L1aWrTCB6b5im/KeIt33cCRlPUT
o7nKczzpMd35p3o6ojdX1nEtqfVJHWmdr7LvKfzf/N2qpSe3dJXWHUhqDaEv
bXKkFi9VjNZGEs7m4jaxV5K3pDdXxl1raWiJb8n5JrqWk6emz+6cZE3325au
Mq1J5DPRE5Q5hO7k7qus0zICc5IzcjHcjbHFFRN+RbxlxWitIME0l08qd2za
N8kb8Xeyrzs/6cEVTCPq+6Z+m/Qvt/G9yWhtxOVgbs5bfLXV8ybnnryRyc/J
CK1gmuOu0+JpBF9SfCb8THpb9+4RHDup79NeyvrumSp7Keei5FnxofXeFf8J
ruLuq/jc0t+UceVcFC7q1iDljbR47DRO1E1lneRbWjsldOOEhytz6HHFnxaH
d+ug4qfic6KbuXWf4HuTuXym5QNdU9y9XE6bvB3ifSnzk1pP1E3FT2Wc1k6T
OphovC1uRoy77yiJfcq5e17K/OTtK3aK77n+0Jzqtr6GeL9ETlp9GaFznsLe
6Vua/0/jSW6TO0nXgtY7UmKneX5ydol2N+3r+pnE2+rraaxLjNaWp29bPrtv
rYX/ybeb2guhWyqxK+sk2g7dR0xzlG+Td6TEPs2Z7LaeTtk3qdd07UvGXaPx
v3VGLja27iTxjpKafkNPlNTuzb4sWYfoIxKcmdZv5ZDGAcWSezXFOI0nut8N
9/kUp3LXdOe0vk1iofXhaZ2EA9A8geDSrg8tvFLedSv2abzVY7Y0dlrfVvxx
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
Vt5O4Rhx7skbIWr0Jh62dMVTe03W0memNadxQutwv93sxxP9eYprmt/Kc8v/
5M64firzW28tuUu0xt46d5r/t/5OfFPiJfKzudfT3LvRqstEv0D/HqFllDVX
t5m+fY63MHmy1u9Km79BKLEn99P12bVE40rWdNdp6VE35I24q7f1PooP098u
T5vG3X7/VG1tmfte3HWU+cl9S+5JovUld8DNm3I/idy6eaB1G8VamE/07G7e
CK5C7OVa0i8nenXSLyixPMdP1VbXWj2Li6st7TG5J0mNm9ac5id3L+GrNI8l
NGpCw2xhPtGbuLzFxX96Lzf253ir/ra4k+KzywM3a6tiLo4l427+k/pL1+7p
21bPmMS7qbET6xP8fxq/LW+vPsc194yec1rcvtX7K3vRtTUxl6sr49P6yfm6
cbVq9/Rtq+64d29aJ9HcFJ8TDaG1fuvbG/L26n8rsbdy6GIp3fsne01znFym
puBYgvlJf+HijBuv4luCt67e1epZXB82cSxZv/Vtcm9bvtG/TdB/b+J/S9ed
1k/er7KOYqe0oM1zd3H1OU5zD1p7dO+wiz9J30rj2A34T9yZhLu+pb9b+XTz
1tpX4fAuV9y8864l+pib/wQrWrltxT6tk9SUyQdlr0Q7SvCZxgqiNrXuDK3X
vcrfSoxKTogeTZnf0mo2c0IYHSOBFa38uDis1CkldiUuF2eS3iTJOYEVLY7t
xkiv6d6T2/5u5ZPo0RRr9RHK+u63p/h/631N60/fEjVUsYR7EPx2Wl8Zb+nw
ST+ejCv5adWLU2u2tI4bMD+Ja/q21aMpeyVzlG9fUf+hdWMaK1xzY0kwWfFH
uf/Ke3G1NaJGbGKvMj+5t8maSW6nu3GbtnNbj3bKWrXsVfDfxSsaK5LYFSx1
MTnxoaUvJRom3VPQ+O/WwdaaSf2dziU5a0Lboc90EwNbdqrnTYzg8KewwjVC
80+0+lY/nuhRCeYoZ5dg7235JHj15v1xtZ2EIylnuvn2W0bUstvwn+AqBFYQ
8SqxtProZB33XiXrJLzRnUOfl7sXwatbuiJ9J5Pxaa9Wj3bKNvXG2/xPuIoy
7s5pxev6nLzlVg/S0hhdjE3WJ/pBIp+tO+Ca64PiW5KTybdpnK6hNxitN27i
f6tHdmPZ7AeJftblPMm4y9+SPBB5JvrBBK9a3KN1LtOaxPouPifvt1VDb+sF
aM2NjrfVI7t4onxL9IMtHt7q75RxBfdaeVD8cddv9UrKHOWeJPczwTrFWnzD
tZZ+S59pK97ECL1xGifwP+mdk3ue6KJJP5joG0S/oOzr5iHpK1t3zI0l8ZPQ
wFtcjtCu6V64VXcSvnQKDxO7gU+2/E/eVEs3VvZ110/uW+t83XiVPCS4SmCU
Esvkj+Kny0MSztDSQlvclTg7WptVzivpxZJ8JnYzn3T9JzgSoUlOPiTxuhqU
4meiBbmxu77R/XVLEyM01WkvZdzlbO6+ihFnR2iziv8JztyM/7fxycla76i1
jmIJtiRxKeMt3Et6qESLIPQE9822MJ/Q31z+4OZN8Y04O5fzuPl36+lkNLa4
djOfVHx+jif+JOsk/ieYluSZ6N3o2pH02t4JZXVT8ZnmSC1tLfFhWpPQRlq4
6mJgi/Oc6gVu5pOuP0pvknCkxM9pL2XcvXtu/5v45vqpfNvyM+GQp/rfFgdW
9t3EHFd7aWFmotclMd6g7Uz2KnxS8T/pr91vWz67OaQ1yckH1/8W7iV+trT0
U/0v0b/QfMb1h/gdhPCN4A832KvwycmI+0PfySSHbr1OuHricwvTXOxqaRrE
fU7eVII/NJ9x/XmO07+DEL65a96M/6/CJ5V1WnystabiP6H/uJqkiw/unUl6
zAQfWpw5uUtKDgl8fhWOnYxv+va0RMNkvPYs4RubfFKJxcWiyYfWmq7PLs4T
mrzim4JL7vqurpKsqZyL24/QuXXx+VU4tsvBaCxtYdGmz4kpb+0Un0xqa0ub
InpzF1toTZ7o+6ZvlfGWn0quXGvVKSXGFj7fxrGTHnAT/1ua2M34T/CNhPNM
8919k/UT/1v3JPnWrXfKOlMeXB+S+US8rrW0wWSd1jnewLFdrtV6a5MRNfE2
/Cf07RZPm/Zq9bNKLAk/39QnJ5/dvmZaJ/l9gX7XrXgTc+95q04RtXWTY7fw
ofXWkvy01j9ldP+eaCaJbjOto/jpztnUTidzeWOik7f0nNYcN95pTcVaGuPk
J6F53sCxEx21pbsSviXr+1nsWCted46LPwne0jxc4b3Evk9L7hLxm8LNb1yJ
0f3WrUEK3rY0TyWWUxzb1Zw3dVdir5vx34034R7Je1HGibvRylt2Yh1zOSp9
7ptvvGWEzklorXSN9rLW+/+dCN2V3us2/E9ibM13fUv8b3GYU/u2zMWTVh2/
4Y0TeZvmtOrmc/1WHUlqdMJ7Jz+J+9DScom9TuF/wiUmS97jJq+Y9nX93NyX
thZuu3ttvvFNS3D1uU6rF1Nw+xTHJnygfUv2ugH/n6b4n/SPig+tb5W4CP6/
uW/L3Jy3dAZlTfqN09bCz0TzdH1z/Z/8VGJJ7pubt5ZvyW9hyXzCEtxOOIa7
phuX4gNdp4h9CUtieZqLCS1t8OZ8PscT/ExyRbwpZXyy5L4lfKOl1yXzE98I
S3A7wQRlzQSTFa2SwH+6PyKM5gDP+YRufFs+n5bo80mulDuvrJPcbXdNBfOV
O9a6zy5uJPh56t4SPfWpmpjoBq1aQ9wT2ggO0OL2yr43vCPXNxf3Eo1omrMZ
i+Knwt/c36Pd+5zUa3fOqXtL1PTpW7omuvgzzSF+427Noa3FAQhur8x/lXrq
4pWy/nOc+H02iWVak/jNd/M39FZNvA3/W5wqwZPWvi1+ovhG3xPCWvdTwQfC
/5t/C25hVwtLn+NET038BtHad/KB6DsSzfnU22/dQwJPkl7yOYf4PZq+J4pv
ibXqVPKbZstndw5hCScnsNTtKVqxTPNdn5N9W5ok3YOcevt0bd3kw0nOlVzR
73qTM09xET01EcvN/dTTWjgzfZvU5c1ePqlfrfuW9FP0+918+3RtJbixyxNa
OZmM5g9EjEosrbo/jRPn9Sr91DTfzXOCey0up8xR6pE7Z9pXGW/1CwROKvmf
5iTWqq20HnLqLU8xEvxh+paORfFZ+XaaQ+D/q/RTrbffWjPBqJYG6FpSCzbr
qfLtKeyafEhqK43zN7zlVt4I3tWy5I1M5nI5d83Jtxv6qVbtczmz64+ryWzi
XqJfufoYoS0kv7nQluThNsy/oa9PuMep3y43f4tRxl1r9a2EtWpfcn+UOQmu
urEr8Sq+tXrqpJ4m/t/G/10t7gbMv4H/T3kjeBqN/y39LdGKXZ+TvvU2TVXx
k8ClaTzByQT3CO3dzcNmf+qu37IkVzdoO5tvecqDMj75rMyhOUPrjOg+YspP
Ums2+6lkDqGbub2bgpOJTq74kPim5IHA5BYmtKylfd2g7WziP81pn0b3O8SZ
JuvQevhmPW3VQeIOtLTuFvcm3pGCIe7vBcq+yl6vqPk8v22990TbOZXbU5zW
neNacqbu+nTPTsxxLdHTFN82+6bpW9fPTd8ITVvxf/LnNs3f7Udc/wltx9XY
0xw5/hCclqgvyl7T/KQvm9Zp9XrE324+lRiJ+0/0TW6MLf0k8a3Va7dqGd2/
u+be+YSTTPOTb5PxlhG/XzyNri/TXi2N1D1HZU7C2WgNyo2dyNsmLtH3c/Nd
J5xHWfMGvXraN+HSLX1S+dbllkRuE51cWcddk+hPE27gnqOreyf538zn5Js7
p8Xzn9bCJSKft2EmoUGd0quflnBppe4neZj2dWsBnVuiH9msL9N8Jectfd7F
B7fWtDDqlHbX8qflW5Jzxf/bMLOlQdH9phtLS6dt1YvkjiW8cTOH7r3d1LsI
naSlSxNarnuH3X2Tt9+quS3f3Jy43yaaHo2ZrTxs9puT0Zp/K/bkjrXmT+bm
sDV/muN+q6zTqgWn8D/RqVo+tO48gXuEPuPeW0LTc/PgxujmwY1lWp+Iy+Ue
dOyEdkT0jEqu3H7khhhbWsr07Q38X9kr8aH19pVY3G9b+pLbyyd9vTuH7vHd
d73ZvyuW+EPETmhHtBZE9yabMSZ6VNIDKjkheockJ0Q9nfZVxt05kw/Km030
IiX2xGj+T9x5Qi9VYnHv2CY/Udah9cnJEq6e5JyO8b+D+chM
       "], {{0, 128}, {128, 
       0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2r+OVVUUB+AJGOMz0NFTaT2gL0AxNLZjIhXBBE2Ebl5AS5/B3pew8I1s
hMSChoTJWb+1177nKyAfk3Mv5+69/u1z5/EPP928fHB1dfXzV+//urn99bs3
b27fvfjywz9+vH31zdevHr7n3f9/PvjfL548++fuz6e//PHX9aPvf79+/tu3
z16//fvpx/74mk9df+Saz7mHI/dWdX3V/STWp/Oa+742sYZHrj/iVbmQ3pfO
vau6JrGnVT+vyt+qWErEwKp6W7XOic+VyNPOmEnUxkTcpveiM2YSPXRV76ha
n85ekL7/xNxy39yZluPpmE/0l868S6xPIr+q6nNnjidyc9UsnXbnbLwqN1fN
nFV50bnm0/YlHdvTcnDVeS0RJ6tmgAk5Mq0/pvta1WeZfE6cMIek/69EzZw2
EybOeok4mRDzidljwr6n63ki7zprfufsN7k+r5pDpvW+xPukY37y3NW5JonX
Js62nbGartXTzsirakt6pp3szvlz1fk6PW+k13zVunWuSTqGO+fkzrq3an+r
7nlazEy4twl1L9FPO+fqRN5NOF90PpeYtl+JOSTRO9L3PKHXrOqVE/rg7k7M
mVU1bUKtSD/f6Owjk9dkx/5edY5I1/lEf5w8tyRiY8J9rup36dyZUE8SZ590
jKXjNr0mu/T3VfG/ex1YNQsdiY1pdWnaXu/Y34/EQFWt6Oy56Zn2yM8n7HXV
+nfu7+Q6UNX7OtchfUae5lV9bXIvWPUcoDMfj+Td7n0/UYuO1KtELe2M+cQM
cIZ5e0L8d8bbhP6eWJOq3D/SR6ruLV3DJ+x11fonrt9lBus8C3f2wUt1Yv2r
4mRVf6/qQVU1Pz1Prqrhk/t+51yUnhOq7iFx3kz3C66dbdL1P/3azpytypdV
tbqqhnfez+S5KLF36RkssSarzsWcq2OX6glxnsiLVfVqwqybnot2mV3Ts3rV
PladNfh43z9Dn50wp1X1nUT9T9fJCTHWea5Z1eOqela6L3TOKmdwYqad8LnS
ebEqNxO9Jv0MrXOeTNx/ImZWfd6qXp94/pPoNZdao1bVlkvtuVVn+c6+M6HO
H8m7CX02EecTYinRC9K9Pt2DJswV0+I2cZ6dnL+JeEi8dpezWDqXJ+TsqnPf
tM+Y6GuJfjFtbafVtMQZanL+TnZi3XbpBZPj55Jmm8lxkq4zu+9ROh871/bM
e3FkDauen0zL8XQ8V73/tN60Y19LPwPUC3K5WXVGOLNXzTmd9Wr3eWByb9q9
ryVqSPr6S3Li+ZhnbrXrk17PCWeBCftyNk/oa4n+UlX/zxafiZpz5vWsiv/O
HLFfPKHmVD2jTvep3Z145tO5L7u7cwabcN5nXlXbxfDnr8O0a/j4/k447zPf
t86nX3tmr/rO0R7176k152m+73PII57weSe46rx/5Bp7lNvTxPXM6Vid/J3y
7k5/J975+1qc6wvMq2pRov6fubYk1mGX92TmOU6fT51/c+uwy3sy815W5+es
84Tf/7dfzKzO969t5+//2ztmTvcFzq3htPdhZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmbmff0fU+CqUQ==

       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztXDvObkcRvAIJsQ22gGOuRUTmwHgDF8lElpCMBIKIZbAK7wISIhIiIlIk
1oCtS3CkT/PT5arqx8yUZOu7R3Nmenpm+lE95//Jr37z+a9/8O7du9/++Nv/
ff7h9z//+usPf/jlj777x5cfvvrkp1/98Nuff/rff9/9/vt/fvHpl//+7NO/
/fF3P3v+/sef//r+L1989v6bf/3zfeR51bvP553fjcw9ohO3bpn+M/Wjar+S
QbUf0Dmq9ozqPFbtAdVYjnV06LbD+r67SMf0tXDLjPbPyKOai3tN3Wc5U+do
P6o2KnmYPpnfjnk9/QU3y4u3ENFz57WIxEiZ/TPyqObiXtPVu6qznKlztB/V
b4ce0D6fzxmb79ifFxcRRPJNd/9obl41FwciOT7aZ6bOI+M6uBGVHlDdPrFa
o4jNn8gPXOwH9/7M5AGmnLWInWfsVRX3gtpDNE52yBPp5wlHHtE5PrnYDwwn
wPRfxQ90O2uorYvYqym6ZfhwlTyOvR1519HPxQWKTN7VfV+Cubfj1vNKJ45+
MrkXxkc8n6N8eOeaAraK1/5f1AG1FSr+wWGXIjJMqQWgQHmkTN1GbH5E/kid
oqqmcO3/xUSgvKgqN1/1qbo7gY77/zXVGyq7rdLt6l2G73LspdW76Lyu/b+Y
AiZPd/Cuz+fMmWVkm3ju0HtQKPeC6nYF9/0BdC+t+kfneO3/xUSo6noqfpWJ
x9B4dRWL7nrumLmj9jYyropjUeWnkbFQ2SLzcvRzcRFBxA44uFbU/qA+BeWT
n9iJC3qC4UxQHa7GVXHsK5lX7d1+6tr/i4lw3AlHc+1VP6jfUfV/2hlkOBym
tsL4WTSWQG04Osdr/y+moIrDicT2qm9w0P5PuBfEAPW/qtpQRAZU/lWbzHsO
7n4uLlbI5HAi9sFhex35AirDTkBzQFUsserfsU8YP3Xt/8UUMHfCmbGYe4mq
OT7B1BpQeSaCqbk8+2Hu2zNxu2OObs7w5P124QMTa636iYyF9umowTHvnswF
oTkU49NVfDtTU676diwyL7Sfi4snmBw2s07HnClV/S4yF1QPE6H6BgqtGaG5
G2N7mZzFUde+9v/CAdXZdNfpVlDFlui4p3FBqhxKdY8UzSUdtVr3t2Oqdy8u
VmDOJsPbq+57M/7LwQ/sejaZ+aru4jLtHfXclTzu/bbrHrvIh6OWqqoprID6
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
nyPPmbn/F8Eiors=
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}]}], "}"}]], "Output",
 CellChangeTimes->{3.77418902086278*^9, 3.7741923047567244`*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"77cff7d0-289e-4c8b-b0d8-8779493a7d7e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetMeasurements", "[", 
  RowBox[{"netECA13", ",", " ", "fullTestSetBigC", ",", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Accuracy\>\"", ",", " ", "\"\<Precision\>\"", ",", " ", 
     "\"\<ConfusionMatrixPlot\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.772718835348043*^9, 3.772718835872539*^9}, {
  3.773157558742169*^9, 3.773157559675911*^9}, {3.773291266369521*^9, 
  3.773291266873107*^9}, {3.7733482373548822`*^9, 3.773348237428149*^9}, {
  3.774188635136705*^9, 3.7741886352042837`*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"cff6d89c-4b91-468d-a49f-6e75a783826b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.6954101562499999`", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "0.6947637292464879`"}], ",", 
     RowBox[{"2", "\[Rule]", "0.6408589997174343`"}], ",", 
     RowBox[{"3", "\[Rule]", "0.636842105263158`"}], ",", 
     RowBox[{"4", "\[Rule]", "0.8026396562308163`"}]}], 
    "\[RightAssociation]"}], ",", GridBox[{
     {
      RotationBox[
       ItemBox["\<\"actual class\"\>",
        DefaultBaseStyle->"LabeledLabel"],
       BoxRotation->1.5708], 
      GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQW3ilXflKpff29fJSdovS39vLd8YdnrnjvX1+yQWZ
kysf229oyuR+2/jcfsPKD3MtWN/Yv5GedVvA8JH9iat+F2fUPbNn4qy5van7
tf25M2Bg75Tw9ILS7bv2DGDwwh6X+W/N93+1SntjLyxnY1Le+tZ+wzKZVcuv
vbPv8DkU+6ngln3EPuWufqHH9gGvCyP1P760/2P9cOf2wOf2LzvLF5uyvbKv
ms5Wp2T81r7kO++RF+ov7U/+fKj4yPO1vZ/9H7Pzp97ar7rxRUQ24rL9v9Qt
b8wXPrCfvp1vp+qZF/YWXiYhWTav7b876CiX7Hhjb+M49+XUsnf2h5ZUf3+g
9cr+1OInU9T/vLb3v8UmFin3zv5/yansGPWn9n+vuv6c0fHCfu3jyTH+DW/s
+W6lRvEKPbPnc2h4qa710l6tYasfy5k39voCFyy+e7yzP1HN6nzs4jt7C9YH
zglF7+1tn+poGme+tRc7Ybd8j/k7+w2O6p2GWu/tAU9+wc8=
        "], {{0, 0}, {4, 
        4}}, {0, 1}],
       Background->GrayLevel[1],
       BaseStyle->Directive[
        FontSize -> 7, FontFamily -> "Verdana", FontWeight -> "Thin", 
         FontTracking -> "Condensed"],
       Epilog->{{
          InsetBox[
           FormBox["544", TraditionalForm], {0.5, 3.5}, {0, 0}], 
          InsetBox[
           FormBox["525", TraditionalForm], {1.5, 3.5}, {0, 0}], 
          InsetBox[
           FormBox["13", TraditionalForm], {2.5, 3.5}, {0, 0}], 
          InsetBox[
           FormBox["23", TraditionalForm], {3.5, 3.5}, {0, 0}]}, {
          InsetBox[
           FormBox["223", TraditionalForm], {0.5, 2.5}, {0, 0}], 
          InsetBox[
           FormBox["2268", TraditionalForm], {1.5, 2.5}, {0, 0}], 
          InsetBox[
           FormBox["133", TraditionalForm], {2.5, 2.5}, {0, 0}], 
          InsetBox[
           FormBox["184", TraditionalForm], {3.5, 2.5}, {0, 0}]}, {
          InsetBox[
           FormBox["8", TraditionalForm], {0.5, 1.5}, {0, 0}], 
          InsetBox[
           FormBox["62", TraditionalForm], {1.5, 1.5}, {0, 0}], 
          InsetBox[
           FormBox["1694", TraditionalForm], {2.5, 1.5}, {0, 0}], 
          InsetBox[
           FormBox["436", TraditionalForm], {3.5, 1.5}, {0, 0}]}, {
          InsetBox[
           FormBox["8", TraditionalForm], {0.5, 0.5}, {0, 0}], 
          InsetBox[
           FormBox["684", TraditionalForm], {1.5, 0.5}, {0, 0}], 
          InsetBox[
           FormBox["820", TraditionalForm], {2.5, 0.5}, {0, 0}], 
          InsetBox[
           FormBox["2615", TraditionalForm], {3.5, 0.5}, {0, 0}]}},
       Frame->True,
       FrameLabel->{None, None},
       FrameTicks->{{{{3.5, 
            FormBox[
             RotationBox["1", BoxRotation -> 0.], TraditionalForm]}, {2.5, 
            FormBox[
             RotationBox["2", BoxRotation -> 0.], TraditionalForm]}, {1.5, 
            FormBox[
             RotationBox["3", BoxRotation -> 0.], TraditionalForm]}, {0.5, 
            FormBox[
             RotationBox["4", BoxRotation -> 0.], TraditionalForm]}}, {{3.5, 
            FormBox["1105", TraditionalForm]}, {2.5, 
            FormBox["2808", TraditionalForm]}, {1.5, 
            FormBox["2200", TraditionalForm]}, {0.5, 
            FormBox["4127", TraditionalForm]}}}, {{{0.5, 
            FormBox[
             RotationBox["783", BoxRotation -> 1.5707963267948966`], 
             TraditionalForm]}, {1.5, 
            FormBox[
             RotationBox["3539", BoxRotation -> 1.5707963267948966`], 
             TraditionalForm]}, {2.5, 
            FormBox[
             RotationBox["2660", BoxRotation -> 1.5707963267948966`], 
             TraditionalForm]}, {3.5, 
            FormBox[
             RotationBox["3258", BoxRotation -> 1.5707963267948966`], 
             TraditionalForm]}}, {{0.5, 
            FormBox[
             RotationBox["1", BoxRotation -> 1.5707963267948966`], 
             TraditionalForm]}, {1.5, 
            FormBox[
             RotationBox["2", BoxRotation -> 1.5707963267948966`], 
             TraditionalForm]}, {2.5, 
            FormBox[
             RotationBox["3", BoxRotation -> 1.5707963267948966`], 
             TraditionalForm]}, {3.5, 
            FormBox[
             RotationBox["4", BoxRotation -> 1.5707963267948966`], 
             TraditionalForm]}}}},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{All, 36.}, {36., All}},
       ImageSize->300,
       Method->{
        "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
         "RangePadding" -> Scaled[0.05]}]},
     {"", 
      ItemBox["\<\"predicted class\"\>",
       DefaultBaseStyle->"LabeledLabel"]}
    },
    BaseStyle->{
     FontFamily -> "Verdana", FontSize -> 8, FontColor -> GrayLevel[0.4]},
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxSpacings->{"Columns" -> {{0.5}}}]}], "}"}]], "Output",
 CellChangeTimes->{3.77418913261523*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"10a83680-15bc-4a50-98af-5daef0c722b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"entropyImagesBigC", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{"Keys", "[", "fullTestSetBigC", "]"}], ",", "500"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"entropiesBigC", "=", 
   RowBox[{"netECA13", "[", 
    RowBox[{"entropyImagesBigC", ",", "\"\<Entropy\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"highEntBigC", "=", 
   RowBox[{"entropyImagesBigC", "[", 
    RowBox[{"[", 
     RowBox[{"Ordering", "[", 
      RowBox[{"entropiesBigC", ",", 
       RowBox[{"-", "10"}]}], "]"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"lowEntBigC", "=", 
   RowBox[{"entropyImagesBigC", "[", 
    RowBox[{"[", 
     RowBox[{"Ordering", "[", 
      RowBox[{"entropiesBigC", ",", "10"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"highEntBigC", "\[Rule]", 
   RowBox[{"netECA13", "[", "highEntBigC", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"lowEntBigC", "\[Rule]", 
   RowBox[{"netECA13", "[", "lowEntBigC", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7727190003310432`*^9, 3.7727190300142097`*^9}, {
  3.77306943758751*^9, 3.7730694509663277`*^9}, {3.773158502088438*^9, 
  3.773158510047945*^9}, {3.773291269588808*^9, 3.773291277379661*^9}, {
  3.7733482430458937`*^9, 3.773348252369199*^9}, {3.774188641350009*^9, 
  3.774188648929162*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"f917767b-8338-444a-a928-2457a298404e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1zGqpkUTxfFBQUxNjTQy13hGzMyE0cxoBAVhQBhFMdNduBRX4gbcgStw
BgxMZnjf+9TpOqfqH3wfV7hzf6er6+mu/vCbH55+99ajR49+fPfl/z199stn
L148+/XLd179x7fPnn/y8fO3X/7423//e/Xz94//fPzHzx98+sX7H336/5//
/un3J+99/s+Tr7/668nrfn7d79/7d173b2/5uerv3/s76ppcyaZY15XMXXVQ
9J4iQ9Wedn2bVb2h6Jl7M5/8prr2rupbq/pe1GfCybNUURP1v61aV1Wdu9ai
Pp8Vdej6NrvWe+XsPfktq/f0ZM+o5wS379ehJup/W7WurrfVyVmiqycVP1fl
PLnek/eR2zel6Bn1mXxyX6rcrneHus/V65q6lq6e7Job7z0fTq5XfR91nUvq
veuqZ9e+nKyhuibO6zr5zZ5cS1dPKjKrz5yTd9PJs/fkjHTyrVGVQT0nqL/f
rhlP8abrWpf6m3WewRTn88m5Ud2TCuvknOb2Fjj597vmBIc7t6smVWfvyRpO
WovD+aw+w6vOBPUd6vZdd/Xhyb/fNSc434nqmlR9Iye/nUlr4S1w5v3ldm6o
z970c89hTnA4z9U1vPKNnFzXpLWoz7H0t0BXzRO/60nnnsOc4HwnVtVQfa4q
vsf0tfAWqO2BbTOA87mkuPed5wTnsyJ9Fpq0Ft4CD8usrrnbPirO3sRzz3lO
cLtzJ81Cim/WbY9S+qHrrkn8m4lnr/O55zYnONyJ6u/R4Ruv+mYdeiC9HybN
Hon7qDh7E8+9SXe6w3fqUDfmOs9+6HoLpPxNZ8v5XHI4HxL3RTH7ddVN8c2m
9IBzP3S9BZgBes/elHNv274krqXqLmCum/0WUM+KDrV1sJzPpa5ZxcGatJaT
b7cNdZv6FlBkcKttipV+7m3bl5S1KL7ZDXVzsJzvlPTaOljO59Itf4d98VyL
4pt12JcNlvOdkl7bFMvh3EuplcO+OKyFuW625XCnTK2tg+VwLt0787MvvWtR
fLMp+7LBcrhTptY2xerqAfVsOXVf1GtRfLOT9mWDpb5T3Na7zVKfS1W94VCr
lH25shb1PZK+LxsshwxYnjOneq5Qn0VT96VqJlfcIxv2ZYPlkAHLc+bkLeC5
L1V3Afuy03LIgOU5c56cK1Jq5bAvVTM/+4LlnAHLc+ZUz/9utXLeF8XcnlIr
rFrLIQOW58ypmCvSa9W1L/f+juKOcK4VFm8BrDPnrXr+d6tV174orEm1wqq1
HDJg+cycifnTLcXcPrVWWLwFsGpnTvVbgH57WAb1HZFSK6wzlkMGrF7L7b5w
rpXi+1LfESm1wvKxHDJg6Sz12U6/na+hc34sf8shA1avVfU36bczNXTOjzXD
csiApbPU9wX9druVnh9rhuWQAavXuvI3r/RYYq2uWOn5sfZYDhmwdFbVfVHV
V861umKl58faYzlkwOq17v2bip9TanXLv03Mj4XllgFLZ1XdF1V95Vyr9L3G
wto8m2HVvgWq+iqxVun5sbA2zGZYDzvbeQu8+d+m7zUW1tTZDIu3QFWtHOqP
heVmOWTA0llXZuD0t4BD/bGw3CyHDFi9VtXbwa3fUuqPheVmOWTA0llufVVV
q5T6Y2G5WQ4ZsHqtxLfApPpjYblZDhmwdNaV3+96C0yqPxaWm+WQAavXcnsL
ONQEC2uz5ZABS2dd+X36CgtrnuWQAeuMpXg70FdYWPMshwxYtdaVbPQVFtZs
yyEDls5SZKOvsLBmWw4ZsGqtK9noKyys2ZZDBqxaS32201dYWLMthwxYtdaV
bPQVFtZsyyEDVq2lPtvpKyys2ZZDBqzbLfXZTl9hYc22HDJgXT+fT57t9BUW
1mzLIQPWm62TZzt9hYU123LIgHW7VZVTcV9sqD8W1gbLIQPWw85bxdlOX2Fh
zbYcMmDdblXlVNwXG+qPhbXBcsiAdT4nfYWFtdNyyIB1u1WVU3FfbKg/FtYG
yyED1vmc9BUW1k7LIQPWm3+Ht8C8vcbCcrYcMmyzHHLSV1hYOy2HDJsth3uH
twAWFpZbhg2WW076Cgtrp+WQYZvlkFNxXzisCwsLi5ktxXLLSV9hYe20HDJs
sNxyKu4Lh3VhYWExs6VYbjnpKyysnZZDhg2WW07FfeGwLiwsLGY2Byslp/q+
cFgXFhYWM1vXjJ2Sk7cAFhaWW4ZEKyXnyfvCYV1YWFjMbGorJSdvASwsLGa2
WislZ9d94bAuLCwsZjbeArwFsLCwmNmqrJScvAWwsLCY2XgL8BbAwsJiZqu1
UnLyFsDCwmJmu26l5Dx5ttNXWFizLYcMDlZKTt4CWFhYzGy1VkrOrrOdvsLC
mm05ZOiyUnLyFvCsIRZWouWQwcFKyVllKe4Lh3VhYWExs12xUnLyFvCsIRZW
ouWQoctKyclbwLOGWFhTLYcMvAXOW/QVFtZOyyFDl5WSk7eAZw2xsKZaDhkU
VkrOLou+wsLaaTlkUFspOXkLZNUQC2uq5ZChykrJ6WDRV1hYOy2HDAorJSdv
gdwaYmFNtRwyXLFScrpZ9BUW1k7LIYPCSsnJWyC3hlhYUy2HDPdaKTmdLfoK
C2un5ZBBYaXk5C2QW0MsrKmWQwbeAuct+goLa6flkOFeKyWns6W4LxzWhYWF
NXtmS8mZaG3uKyyszZZDhluslJwpluK+cFgXFhbWvJktJWe6ta2vsLCwfDJc
yeyQM9FS3BcO68LCwpo3s6XkTLe29RUWFpZPhpRaTbIU94XDurCwsObNbCk5
061tfYWFheWTIaVWkyzFfeGwLiwsrKyZLb1Wk6xJfYWFheU/syXWapKluC8c
1oWFheU/s02q1SQrva+wsLD8Z7b0Wk2yFPeFw7qwsLA8Z7aptZpkJfYVFhZW
1syWXqtJluK+cFgXFhaWz8y2oVaTrJS+cq4hFlaixVtgp6W4LxzWhYWF5TOz
bajVJCulr5xriIWVaFVl2FCrSZbivnBYFxYW1vmZzS0/Vu3Z3tVXiTXEwkq0
rmRwyI91/mznLYCFNdu6JYNzfqzas/1kX6XXEAsr0bo3g1t+rPNnO28BLKzZ
1i0ZnPNj1Z7tJ/sqvYZYWInWLRmc82OdP9t5C2BhzbZuyeCcH6v2bD/ZV+k1
xMJKtHgL7LQU94XDurCwsK5b/wLs0rMN
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1z+qZEUYxuGLgrgNt6AYesHQxGBMBKMrONGAMAZipplbMHYfxkaCuAkT
16AzYDCJ0Meqr/qrep9AeWboPnNO/fmd6ve+/PrZ87ceHh6+effV/549ffvx
y5dP3332zus/fPX04oP3X7z9it//+99rf/LTn49//fbr4/PP//7oTf/4+6eP
f3zx8+MvH/7wWPH3t/iW7775mf/y1e/OGpOr3736mZG5mDVWs75b8VxX11jF
vc1aD7PuYdY8jnymohsj8zhr7d3rfkYaO9LGlffW4Rkr5rFi/FeO4awxn7Vm
KvZUdR+q779i31WcnWY9Y/U+rT7z3Gveq9dP5/50eHdX7Kl7jfOshlS3ZWUf
qrtR3YSV8zsy5ifNafW8rzy73utdcK/mV6/DDmNb/btj5Xt25bzs/i5Yud7u
1Z9uc3qv9b/y95rm1z1jh3dBxe+FXeZl5Xuw4nxY/a5fucd3n9MOnjXOs9bM
7s0fOT902I8n9X9kXmat+YpxuHr9butq1nOdNKcdXP2uPKn5I+tzVq86u8M8
zlrPI+/06v6PXLNb8yvW2C5z2tkV54dTx3PlOaSzO89pdVsqnnflGbu6+dXP
ONLtlXPa2Zq/Zqx27/wu/a9Yh9Vre9Z5deXamzU+1euq4p53t+bXjdWsM88u
7jzXFWt15Rm1urEV8179e2HWGkg7/2v+mm6kvQu6zfusex7ZIx32abf1tnKd
VIxbhy5pfp9uzDoTdtibu+zrkbXX7TOz9ukua6lb/0f+vrM1f243qhu+y/7t
sK87tHTkvV8xnh3WQLd1MnIPI2e5Hdd8WvNXnjES3GFtVLR01tmyYi3t+C6o
XicV3e78LtD8PuO/yx7ccV/P2psjzzJrH1W8d3Z5F1Ssk4p5qZ5rzT/D+r++
/9Xt7TAOs95r3dZkxfhUjMPINXdpjub3mYvdXb1+Rs5vK+eu+qy++zqs7n/F
+7HifjT/DO+y73bZ1xUdmHXemzUOI52pOOuetE6q5+hea3vWmGu+/u+4r1ee
CSv22kjDd29+9TqpaN29+jlrfjVf/3ff19321Kxnr9i/HdZAh3VS0cPq87/m
7+vd9+Mu+7pb869ec5dn2XGdzPp3K9qr+Wd79/3YeV/v2MlZ74IOz9J5nVSc
7Vd+RvPP8El7s8O+3rH51ffQ4Vk6r5NZ7+KKz1S0QvP7+NR92nlNJnTyVFec
/0euP+szFb8LNL+/9WfN+tT8MzyyTm655qyuVq/hDu1i/e+wrzU/xxV7Z+W6
6tAc7mNdmtt/zT/bI2tgZL1VvI869If1v4NH+q/5Z3uk7bP6PKvb3gWs/3PP
UcYw0yt7O+u7s56Lz7B2/b+9nDxWya6Y9w77uuK3Bvd3ctNm7YsOz8J7ubq3
I9fU/xxr2vg673D/vJf1ljs4uf8jezB53Fj/+Qwnd+zqOBg31n8+yckdGxmT
W77LrP/c2Wn9r+i2dwHrP+/ohP6PjMnKa3KO9Z87+NT+X91fV/fgyDU7jA/v
tT6Z9X98f93y+ZHOz7ofPtv6zx2c1qhZY3L1Osz6z92c0P9bnqviPH/qeLL+
8xlO69XVs/rVzySMIes/n+GE/s8ah5E922EcuI/1nzv41P5XnO2rP8M51n/u
4IRGXX326s8w6z938Kn9n/W8I5/xLmD9584+qf9XezsyPrP+rQ7jxvrPmd69
/yNN3v2avK/1nzt4x/5fvc+r5/PO1+QzrP/cwSf152qTZzW84pp8tvWfO/jU
Ll3dX1e/O+uanGn95w4+tVGznqXbdfgM6z93sEYx6z9nWv+Z9Z8zrf/M+s+Z
1n9m/edM6z+z/nOm9Z9Z/znT+s+s/5xp/WfWf860/jPrP2da/5n1nzOt/8z6
z5nWf2b950zrP7P+c6b1n1n/OdP6z6z/nGn9Z9Z/zrT+M+s/Z1r/mfWfM63/
zPrPmdZ/Zv3nTOs/s/5zpvWfWf850/rPrP+caf1n1n/OtP4z6z9nWv+Z9Z8z
rf/M+s+Z1n9m/edM6z+z/nOm9Z9Z/znT+s+s/5xp/WfWf860/jPrP2da/5n1
nzOt/8z6z5nWf2b950zrP7P+c6b1n1n/OdP6z6z/nGn9Z9Z/zrT+M+s/Z1r/
mfWfM63/zPrPmdZ/Zv3nTOs/s/5zpvWfWf850/rPrP+caf1n1n/OtP4z6z9n
Wv+Z9Z8zrf/M+s+Z1n9m/edM6z+z/nOm9Z9Z/znT+s+s/5xp/WfWf860/jPr
P2da/5n1nzOt/8z6z5nWf2b950zrP7P+c6b1n1n/OdP6z6z/nGn9Z9Z/zrT+
M+s/Z1r/mfWfM63/zPrPmdZ/Zv3nTOs/s/5zpvWfWf850/rPrP+caf1n1n/O
tP4z6z9nWv+Z9Z8zrf/M+s+Z1n9m/V/pfwAeYrRn
       "], {{0, 128}, {128, 0}}, {0.,
        1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztmLHKXVUXRYOC2ApWWtlbmT7BF1CITxBBq4AQkSBY2Pkavom9+Aq+ipiA
hU3gu+w15hzr3BT/zzHce+7ea60551jfZ9/+8Oz79x49evTjh6//79nzV1++
fPn8528+ePMf3z1/8fiLF++/fvz1v/+9ef74t3+evPrqp6d/fvL3k6//+OvJ
748/f/rRL58+fdu/v+35/59/yPNDvnvrZ07eOfWeqXqe3P0hv3tSz9a/0/Wn
63xr32/9LXqWbPOQ/HdDTU70QvswPZO33ot+nqr5VJ5uqZuh/q0z0J5MsBkx
n1ue6Tonz5ycW/q7yZq3NEjwiW1W6fpfyQda+/KWLE7W1sCuJ15Kz4O5j0l9
0b2YynpD36fqZvPPJPO84w2utq3fmvoblGGukrUlZnVjra6qi1a+T93X0Mer
8kZyr7mHv0VcVbNTO5ShVlfVRYufk4xEzGErg5J+MuWBrZmh9UUwwEbNErNh
8+Ttutj49wTDHLY023rnrb9lm6vk3yLuubYtDqE9eYoTWr1r1SE5YzTHJjXb
mu1bf4tmS3pOaO8yMB5R21bu0Nqk+aqVO3QdaJ9p6TrpOYTv0XVLatzgP8QM
bN+DaDaj+9LiN3rGknWjPdb2bNvXDP7WmueWLgx6J/KopZeTmZ/67tT5W5xA
182wv7d83uBvth3f8PcKWhctljDsQTS303e3MadhP6W1sLF3rTObdwebNxoy
OjmHyVrR7N3yxi0aTOZ10q8M/Gzzk2QvaO+aej+9X9h0Z7vLlt9tzQ+duURe
03wyxRJE7048auPOYvCuVgbRPmxmJ4IBDL+b3DENGqR/N/l5ww7Yeg/tAye5
k2TsZJ1pH07mYPIuLR4w6Hqqd8m9kta7gWOJMxPvaXEOcX7CxwzaIc5DPxN3
sX13i9+eaJD+bosDk2zc8naDRxF1I2Zy6i4Ec9o4dmrHSXKvue9T391Y5xYH
0mzcykSDn5hnMrnjnLzTwLE0R7Xy60qZleyRQXe0Zul8STIGvRcnd1XDO4l+
Gc5MsMeW/XRLZiX/brBFd4bMNdetlWXE368In7FlunnXo/df4sx0Hhn6lczx
lu4MPj/13WSPWll28lt0zW2ZbtjRiPtOMaohj1q+3crWpJYNudDK0ykPNDCJ
zU+SPGA7GzE/V+odnbm2fk3lcqsvrYxusQSRBUT2JWfMvBMlZ8bAS1t6R3iv
+dnArvTctnZqmm0MvDR13yvx3lReEDU0+BjNaa06mHNhKkMNbG/eqc1+ctJH
W+7beG9qFzZ4lHkmDZ8x5+wUx9LzOfVb2/cL2k8If07OLTEbBh6g30nss4aM
M3DsVE1ohjG8c8pzkrO3fb+4txkzeALNLfR+l+Sc5O5G+ACtX5ptrsTVySzY
UofkvBk8sLXbGvY4ulZTfpj05CkfSPpSi9O2cDXN5BvrkNw9DTPWytCWVxvO
1vLPqZrQe9CtWk6yWYtjzXdJeiBxL+LuRB61NGuevSkvonWxMUOJ8xj62+qd
bean+MG2X9C/ley7jZO36Ghqj6PZu5U7dFYmGYnwKAMbEGegvTe5X9h0YdMa
zVEGHRk8k+aW1t1bNaR3yaT/JJnWMOc0G9jmtuUhNDPY9g5DnQkupTPiIZ9P
7iP0jtni4ZPz2LLbwFQ0J2w8/8ZcbuU4PScGn6Q9kJgxQ20JX6V1QWS3IWto
TqB5g/jdpMfaMs6Qjy2/NfseXROitq3zn3j1VObSvpTM+qT/m/dHGyOZs5WY
ARsnGJ6T3j7FHnRenGh5e79sd7Fp51Y/b+WmIR9PPHmK3zYyBp1TyZ0luSOf
zJVh7zD0q3UX4ruGu9/b2YgsMHDIlvps2bsJpiL0QmS0rae2HTCpZYJtDL5k
9lJ635nyWANj0Jy8cbZp/0nu18metu5i2GenfIDwjeR5zHMy9Vs0CyUZ49Yz
m9l+SrN03ZLzPFXzZD0J76Jn1ZDRhqwk/LDFMIYdZ8qTp767pW5T+ZX0zClf
Mmuf5iJa4/Q5CZ4xzDPte8Qc2jI9mV80F9FzksziZJYRdzFov5U1BGtN6S6Z
ES0eM2iQ3iXpHD+p+ZSuCa6j86v1W0lOoz25VZOkr7b8pJVZSX9OsjRdB0Lj
tK+2fM9Ww+Rzi5cM7GTbB2mva9W/lft0Phq4iPBkW09buqZr2PLG7e80fCbJ
Yy2tEX3fcq+ktyT3wWQGTeWswZOnatjK66k7Jt9p8P8TLbe0RudOaydN5umU
Tumd7tYzG/Ydekdu1dymfeI89B2TM3Ay/8m8mNJsqxdEH7fsszYtTM1b6450
/hruktQ70ffWjtzypWQvWrrYyPzEXWy+QeuLyOgtDJl8PzGTLd82/JbBl4g8
snkRna20Zk9+yzYnLTZI+mHSB5IZSsw/zVpmrzB8Jpk75gw1Mz9dH9qXbMzc
8gcDVxCen+SEqVxLeoXtMxszhWZdgzaT3EVrkM44OteI79LMk8yLpCcn2a+V
g7QPE0xizqktzE9zWvK7SX9LZlzrncmZnJoTg+7oz7c8tjVLyewmfIz4TMvb
Dc8tzdL1P+k14YfEOW1eeqI7Yjdpadk2Y9t5ic7T5FwZfJ7WnWGek+yRnG2D
l9J9of0teWYzg03dpaVrmgNtM2zjMTrXbDtdi0mSDEnk5lStWvWkuYJmsFY+
GnRN8FXr7id5NzUDhE6Td7FpPKkpuubJrDfw9pYcb52Trj/BLckZTs6nYU4M
c2jT/lQNDXulOXds/knkeOudNHsQPaLZkqgtnR1JjrLtSmbubfmPIWcN3pXc
rQg/bHkszTwP6ZFtn7JxzlQWE7WlZ7u1q9KzN/VOg/8YvMvmja13GtjbkPVJ
jqLPaTvz1JwQZ57i3qnvGjzBwCotvWzhhCTvEXex8TnBUQSH0OxH+2drR7P5
ZJKL6H3EwDN0Hhk4oXXHZL7Q838yV63dKulpyTncyKiGs9FZTzAqwTPJfG+d
k6h5Szt01ht8teUnhp3OlsU0j9H8bHtni3+I/bS1E7X6RfO2IY+SedfK7uTO
m6wz0fctLETMWIsbkxzS8jHDHQ1ZT/shPfM2fyP6Tuzghl14Iwslv0vXKskh
U3ehNWW4YyvrDT5JZ0qSG09mO+nPyZzawkLJ5y21NfMYnXeGO05lfdIzkzNP
7z5X8tupDCV2YYMGDe9sZZBhHgx6JHzYNjNTfpj0oqQe6RluaTPpOWYNEvey
8X8rU1r7l4HNTvyTmJlWrZJ5YahDa+Zt7GHWYJJtaP0SLGfo19T5kzsX7QNJ
jjIwicHDk9pp6cW2j9B5dyWmIrIp6ZlT+wLda8MM0EzS0nuyd1N9pL+bZP4t
50my6z0wleG+hlrR7GfQpk37dO+u6g80/2zUr6HvW5jK5kvJWtH8NlWfZDYZ
tG/2qJY/0IxtO6fZ66Yy9x3LdVnXoHGal5K53OqF+cyG/LKxxJacmuITQ2aZ
WW7LDBP1ufUzrdkz+J7ZSw2cltSOIeuTfkVk3/ZnWwZNzTAxJ63dxDDbJ0xo
81I6W7fkJpFBybki7tXiTxvLtXJnu68m85HWET1vNmaY4gFbbrb0stEn6Vzb
crakfunatnhji17o3SHppS0WMvQimafJzxu81PCe5DsJ/drObJiZ5E7U2t3o
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
       "], {{0, 128}, {128, 
       0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1j+qXucVxWGRgMkAMgF3rp3+QrrUzghkiCuBwSlCuiTjyRhSxONIGVeG
dMalbXCRxiDxfeee5/fuXUgsCenctdefvd+PP//ysy9+9ebNmz//5sffPnv7
l99/9dXbv/7xo5/+8Ke373736btf/wj/9vOvn/C/vvn65X8f//3ln3/47csv
4W//8d+Xf3/y/ct/vnv3i/hDv/M+//4RPo9wfta/eeSbj3B4ROcP1e2Rv7/i
/1497yPfvELzZ/lyl3fPmvcRns/aFVd4cfVefRaHZ+HX7N3is/FmYHEdX/3O
eeT/XvH2vkvbxV28GVhcx3fdiCve21d/82pthTwsfq6Pm4HFAi6+/wV89Q3d
neBgIW+bgcWVDD/rvghY6GxdwwqWdZa5LXbwa+bkpHdL8f1f17zidaVTm4E5
uPKG13I7YQ9rfCodec3vy9wWO1jLiYbl/Ne9E/Iv6DAZC/5OwILXgu/C7B+q
g8BzwluxwrOIV9uZOt/FR8uVsIcFzsK8FZ5FvNrO1PkuPlquhPe/wFnQcJpu
8v7Rvl/Bms51PtrdOQnXva7oJu8fDQsaFnXW+Fd0FrJUz6owo6DbcjuPv8ZT
6/LV7/NTfRSyoX2/ottr6iBzO4m/xlP7voYrPhY7daqGWqcq3E76vsZTw5Vu
aj4Kmgi3SeAv9Gjx4u3m3l+Bs5alZ/HXdFi8WMvkqd2coLOmifb9yn1cfB7W
Mql9v4IFnQUdZHzq22yxj7V9ouGrda7ca1nbCn6WPuvL4vp+EDSRu3nXvZa1
reBKp6b5MgFrntb5nIqL2gr9ErIt5Ef2ZQLWPK3z0XyUd9Q07+7Kdl0HYU/W
sda1Op/6m62im4Cnda3CU9irGhb6Mjkz2putopuAhb4IHmk8N6u+JtMyo3Vc
+46M6zNWvBZuouyjoKHWHSEnQsa093+xa/UZhTxP0K2Y1WlZEjwS9rOWecFH
rTva9+sdOem+C7tUzpLGX/BIuAtCDgWdZVzprKaDkFXNI41PMQMTOijwFPSX
va7/XC3z0/ol71XBI2EXad2f8Kaq7zft5072va65hjW/tJxMvtdC34uaF73W
fK9rLmg4Qc/KW07OlcBB9kLL/Em+C/6+5t7TPK3rede90HwUsiHMKHRH00Hw
/VSvT82Mpqf2/q/oJmSvzr+ig6ZbkXN9T9b11O5F/b4Is1f4V3TQdCty1vZY
PQPT9qqmg3yjte/flYE6n2JWK72WPZI7pe15TYfJuOKFxqeIK72ueKrNW9Ht
av7CjdZwxYt6ZwUsdHny3ZnmV2VeoZunaqt5NyEb2oxCTnYPO/iueSfofOqM
Qu803bQZNQ01fep6VvSv+y5rq801gY+2t7XsTfu+kMmiPtpcAoe7ZtQyL/AR
dq+8N6ZhrcuCJu/DX+BW7/5dXmiZFPhoe1j7fh0L/X2kyxV9KjzlLgj5FHaU
8AbQZhQ0lLE2r+bXqW/OCdmodErLhoCF3VjM3qmZPCnb03A9q5WbXtxRGue6
5vVManoudrKxb4x7ddhsdL+v6b+4i6dlu/KWE+bdbPgeyd1f7GAhz0KWtJ2m
zStgoS+TM7l+dbHm3V18hD32mp3SfD+V80mZXL+6uJ6NZ/GpZ1LYA1frU+R8
0l0TciX7JeNT97aW1bqPAh8tG5qGq4/ZTQELd1ne2/Lek3UQsqThaZk5lb+w
t7Usad7dpY/QI7lTQhfq2a57pPGv6DZBW23eSjY0/po+guYCZ7mblb0t+K7N
qOHt1Bm+F/ekNqPgYzEzAk9BT62Pwi0WvDjJd4GPdlu172v4WfNqvgje1flU
sqHhYhfqbyoNCzkUMiPoPKGPJ827nTJzUvRIy8CpfIpZndBHeV4tw6fyKb6p
NCxoPpmPnKsJM17RfU23Oh9t3snZPjVjlTdPkYMwo7AfNJ4aH23ezfZ5Gavc
3yvmEvIgZ+kkr2U+WteKGmoerT7mW1rIhjDjFfoUvS52Ss5JkbOcAUGTIha8
07J0avbqcxVzommi8T9VH+E9rPmocS7uk6JuGv/iG6n+fS0zd2WyroPQX43P
XZprumnfr+ekiNejM3aa0F9hRmE/C/mUcf3uFPF6ZN6pCk95xoqGQs4ndGqy
/oLOskfaz63oJsxY0bDo3Unzanx2xu4brz5X0btK9ir3qHLf63wmaK7xX3yd
7wKHYvbq91SbV+MzQXPt+3dlXuCm7UAtG3dlT7jj8h5e/j5nDVf2obDbr96B
Qh6E7GnZ2A6ex1/YIfV9dcX3NR/lPVnBFd32++d9f7tm7q5p3a9wKPIXcr74
bCz0S+iaxkfIxtVvkrrXd70ZhJ4ubmEtY9quqOz5oi+aJtr3K/dxsY+1jGnf
PxULvgg6yPjUN8Nif89P26t36a/5LmChL8Vuri+Lhf7KmancQW2uohcarnRw
mi9FrHlU57P4Ol+KnItdEPIj+1LEmkd1PoKn78Nfy5Xgheb1XV2o6yD0TsNa
d+p8tEyuzg6e1s0KT2EPV/bAZuCMO3uqzgIW+iV4pPGckFVtxmkZEPp7xZ7X
dBZwfcZTs6TtHME7zSNtXk3PSpfrugnZq/M/NRsCn92r/n6Q/ZKzrfGpeCdr
OMGXK/gIu1TOhsZf8OgKf7driysd13QQOOxe3TeVoLPmy0ne1buv+SJku9gX
ea8KO03eLdu1rncVzQWvJ++cndHfbxqf7Zrj3amaF72u52TCjMUuaPtW6IuW
Q4GD7FGlI5ovRQ7CjMUuaB3RfBRyWM+GpvnqcJ0+wq7bDJynzzSdBS/q/FcH
JyfC22wz4Oij/Vz57miaaPxXB0efuuYaHw1X9Be00rpT/35lJ1R0kLujcd4M
mG8tTWehO3W8XphZFThoe1vjr2VA0FCYS7jpGn6WhnUvtKxewWfCjJMzcKrO
9XkFLOgseCHMOGGHyO86QZMJ+0fTQeMzeUat49q8Gn9hxrqGGp+K73U+EzTf
nTDnrgkcZP5aJle37drV3xe0mnynrtBf4HCSp1r3VzeHv8BTwNpOEG6T1mVN
c81ToUdX6FnXrchf2CGCVoIXsi/7JnH25En7p6hb8ftaluqZlL2u6ynkqq6h
nElBk8Wtbmo8BS/kjlc4nMRfyKGgw+JutrXsadkW+vuh8wocZM3rmVzcxXdl
W+vIdvz19dQ00b6vZXJxF0/L9kl7sr5jBR1krGVS2FeLZ+6fSuY1HQSvNU00
rGVy/epizbu7+Ah7rP4+PzUblXk3Y4srN/0uPvVMCnvgan2KnE+6a0KuZL9k
fOre1rJa91Hgo2VD03D1MbspYOEuy3tb3nuyDkKWNDwtM6fyF/a2liXNu7v0
EXokd0roQj3bdY80/hXdJmirzVvJhsZf00fQXOAsd7OytwXftRk1vJ06w/fi
ntRmFHwsZkbgKeip9VG4xYIXJ/ku8NFuq/Z9DT9rXs0Xwbs6n0o2NFzsQv1N
pWEhh0JmBJ0n9PGkebdTZk6KHmkZOJVPMasT+ijPq2X4VD7FN5WGBc0n85Fz
NWHGK7qv6Vbno807OdunZqzy5ilyEGYU9oPGU+OjzbvZPi9jlft7xVxCHuQs
neS1zEfrWlFDzaPVx3xLC9kQZrxCn6LXxU7JOSlyljMgaPL/+AeAQA/I
       "], {{0, 
       128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2T+qZEUUB+CHgrgIE7fgxM7DwA2MK3iCRgPCGIiYmLkA43EtJsbG5mau
wEScAQMNhL5d51SdqvMFyqf0u923/vx+1bc//PyrF1++8/Dw8PX7b/714umb
T169evr2s/fe/scXTy+fffTy3Tf8/p9/3vr31x88vv7rj49/+PXTx+9+/OX5
n789Pv/p52f/8b9fc4tvuc7I9TP8f5/5ls8ZdY9Xx+3qa6KuuWoust9r5PUZ
8xU1RxlreGSPZKy3Cp8/IzNHnPG+UXu2Qv7PnK/svRCVIavmK3t/Ra2NjP1e
YX2uWhtRXTbz82fs2ai5y76v7DGp7FXzlXH22z1jK3wvyD77rVqfGZ9tZm7M
PBuvOh9mzF32mUH+z8nYqLmo8DkrrKWMDp15Dl+VJ1F9l33mX9Vx2c7u0AoZ
smP+r8rYVWe83Z09d1FzlJH/M8+W2deP6tNVXbyquztn/o75n5EVFca/wrzP
PANn98uqs2X2OFQ481TI/+xzQofM32XcMtZz5y7IOCvOPEet+i6Qsa5G7mXV
mUf+19nLp+Z/9nfejHPv7s7Iq+zzwKr8j7rmyPuuOvNUzv+Z3XqSK+R/1H7J
3oMdnNGPO+Z/1FliVW5n3/uq/M+Yi845MDP/M/piJOez82oX7zI+M3Mg+/UZ
/ZJxjqqW/9l5HtXduzgj/0eun7G/Ms5mHVxtfGbmz8x1OLMLMua3Qv5n92C1
vVBhT2V0aNQ5aqT3K8wLr83/jHUYtYarZf6OXRDVyxX2RfY8rjoPZHzmDp1+
qitkTnYORJ1jZ37OyvmfMeYV9kL2eos6Y2d3dNR3wFPn9yRXyJyMTBh5r1V5
VWEuova7M/+c9RmVt6u+X3DNdVshWzIyP2ocTp0LOZA3pxlZnfEac93HFTJn
ZM3MfN/sLqgwFzI/bx4zxifq+1pUZ3Wb691dIXNGPk/UuSV7X+wyFzK/Ti9k
ZH7GejbX+7pC5mTshYwcy869CnMh82t61XfY7O+8XGddzcyckdzIOP9n77vK
cyHzazojq6Ouad7PcOX8j3pGlN0X3fLf3p+f+SPrcNW5heu7Qv5HrdWMe5m5
5qvlvz2+dg9m9IUzPK/KnJE1HJVd1TK/Wv5XWJM83he6gCtkzsjnqZB7M/fF
Lt/FuI6jnvnogp7Ofmay6rnNjrlX7btYhfXJt6+ZqGd3uqCPZ+Z/9t/unnur
votVuHeOzfyZe5z3dYVnzt3O+RX2abV75/syf+R5Tvb3eq7vU/N/x9zL2Ke7
3DvfN18ja0D+80n5v3vujczF7vfOsWvj6jXlf0/vnv8n5V7UXtvx3nl8TqPy
XP738Y75f2ru2YO8qguurjFr7wzvkv8dMn9kjircC9dfP1F7zdo7w5Xz/9TM
j9qnp44Dz++CqPVZYRx43/zvnPkje+3U8eE6+zqqg7iOK+R/57UU9dy1w1jx
/H19y99WuF/eK/87Z/7VPWU/coV9be2d55n5L/Pz9o79yDP3tbV3hmeuE5mf
96zVb3M8c1/rgjM883eibuthZI9k7Ltu49/ZFZ7r6oL6zvidSObcd+/Ze6rz
XHTzqvzXBXs56vwpZ+4b84zff40/V8h/XVDfUc8KzOP4+GSMuXnp6Wr5rwtq
OuosyuNjHpXz5ogr578uqLk2rq6fCveyizOe+Yxcn8/2LvmvC+qsk6jffHm8
Z1e9hs/wjvmvC+qvDXkS27OrXsNne/f8t7bXro2R/8/3ZfXV+RrZ7xXGh+W/
Ltgrl4z5+Nhe3Y8jrzd3PX1q/sulObm06po7OuO3kl2uyTXdIf91wfh+vzo+
Gdfc0SPjtvs1ub675b8uuG/er66NkWtWGJ8KvTDy3GbmNXlfd87/zl0QdZ6P
GrdTx3lmF2dfk8+z/NcFV+c9av1UuN8KjhqTatfh+pb/uiDjOYBnC8z1Lf91
wch9XX3NSWPFvLvlvy7IeOYzcn1mlv+7eMcuyDjbZ7+GmeV/Ze/eBSP3ctKY
MHew/O/ZBSPPeaJeU21MmLtZ/vfpgqvvG3VfI+9VYY8wn2r5f3YXjGTy7tdk
Zvlf2RldcPVvo57zVLgmM8v/HZ3RBSOZHJXhGddkZvl/qld1wdXPk31NZpb/
nZ3RBTO/U8y8DjPL/1Od0QXM3NPyf1/rAmaW/6wLmFn+sy5gZvnPuoCZ5T/r
AmaW/6wLmFn+sy5g7mn5z7qAuaflP+sC5p6W/6wLmHta/rMuYO5p+c+6gLmn
5T/rAuaelv+sC5h7Wv6zLmDuafnPuoC5p+U/6wLmnpb/XMG6gFn+M+sCZvnP
rAuY5T+zLmCW/8y6gFn+M+sCZvnPrAuY5T+zLmCW/8y6gFn+M+sCZvnPrAu4
s+U/sy7gnpb/zLqAe1r+M+sC7mn5z6wLuKflP7Mu4J6W/8y6gHta/jPrAu5p
+c+sC7in5T+zLuCelv/MuoB7Wv4z6wLuafnPXMe6gOU/M+sClv/MrAtY/jOz
LmD5z8y6gOU/M+sClv/MrAtY/jOzLmD5z8y6gOU/M+sClv/MrAt6Wv4zsy7o
afnPzLqgp+U/M0d1gV7Yy/KfmXVBT8t/Zo7qAs+L9rL8Z+bsXtAFNS3/mVkX
9LT8Z2Zd0NPyn5l1QU/Lf2auYF0g/5mZdYH8Z2bWBfKfmev7b6nT3ts=
       "], {{0, 
       128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2TFKA0EUANCoIFY2OYDkCtpnsbCX2NqsoFVAiIXYqEfwHB7Ay3gBSy8g
mIDtQpaZvzsTX5HwEpLN8ufP/383s5v7xd3+ZDJ5OFo/LdrH89Wqfbo63Ly4
bZdnp8uDNV//HhvvvX3MT46nzefse97l5/dp8/Vz2bxcXzRd73c513G6vrvN
8bf5fN/v9v3dvjFJiVvKGqXEMyJW0efZN/dS4pkrbinxybUHU/Z7rtxO2V8R
cYteu9Jqb0pMonN7Vx3d1yJ6cUpejVWvos8/eiaJ2PvR8RyyBkbX9ohen6vf
RdSfEualEupzaXtqrDpWQk+xXuOeW8RalzAbR885KTNDCfU5us7Uktu1u7TZ
2PqW2YMi6kmu3Mh1zCGvm6LrdnT+DHk/reQ853F7CpfjWtZryDkzeq4e8t7g
WNcpteQVM9fl6Jk8usYOGZ/S4szMHFFj/b+ze3Fm5v/pGu8/1Fgba4wzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzPn9S8B8GCU

       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2c1KQkEUAGApkKCn6AmE2qbRtqXtA4NaCYEtKmhRb1HbNj1JDxUEpdDC
jZDcOTNH+xbKp9w7M54583PHg8ub8fVOr9e73Zu/jSd3p7PZ5OG8v/hwNZke
HU5353z6fS189v066j++HL/tf4z6X5/DweB5ePF+f7Ls5WtWedW965bZ5d4u
5azb/ohyItrQ5ft1r2mVGxH1dunfUjEslfOtyozIwy5xK5VjpcZCxNipOQ+X
6q+I+SSirug2R/yuUutUq7iV2p+0cvS6UGoNith3dam35liruRfKsLeJ3uO1
Gkc12xMx9jPsIbPFM/M+pNUYb7Vudnn+jW5nzbWjZm5Hz0WbMnayzUsR8c+2
J8kWq03Mh+hn8Oh1M2I+b/UsXCpnWp3/ZMhJbjun6a/83qZ+yXy2nO3MIXNd
2WLLZfNBf3HN3MtwHpghVpktVttnfcqt8k3uMTNvt7fpP3dmZv77nF/zXmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZv6f/gELOYk4

       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2z2KZVUUBtDCBjF1CE5BQ6EaRyC0YGBWikYNQhmImakzaEwcgONwJuY6
BLvBVKjn2d8++9RdgbK6ePX63vPz7X3Pe/3R19+/+u69u7u7Hz54+79XDz9+
9vj48NMX77/7w7cPrz/5+PWLt/z53//e+cUff91//uarl79++fv9U/zpN3/e
//L3/cvHD39b+vl/veZWV13nrddz67itjO1Trq3qXqruMTFWT7nmxHx13kt6
Xd06hum1WrXfV9ZJYo2lx2fCuk3sx2l1ZNf+TayHqnHe5aq1MeFepmX+rp+v
5GrnGq66x/S4TVhLK3VqV/8/LR8SzwIT1lJiHZ54L7v2aXq/TOjTdvW9nfs9
fe/pZ6Vd66pzTjt7j1P2UeLeT6zv02pi59lI1Tzu6ns7a0HnOCTOFqrWRqLX
PaUWdO7ZCfd7tXvsrInp3KjKh868Su+1yeu887yls1Y+p9zY1edMuN9pvc0E
V+3N9BrrzKVE77qrDk4b812vr6o16bp8onc923Zez7R7TI/Pyh7ZNY9VfXWi
J58wJom1kf7dxN9VNddV1zlhXaXrZnofVV3PyuunZUViPad7m6r9uDLX0/bp
Sl1OZ2bV+t/1/LKrrzglN9JZset6qnK+8x4TY5XI/F3PWYncm7BP0881iV4o
nbfpzE9kRboH49r1nOidJo9DVR52ZkVnb9A57yvzku7Pq9ZGYg+mMzy9riZk
xelOz90ptTuxzif0YxOuLTHviXxYydj03knX5cTzXeeanJAhpztR00+p3Z1n
Aol+LJ0Jnb1xZx+SqL+JZ7dEzU0/K6XvnXOZX7WWTpzTqtzr3F+3XkNV7U73
+Z05n37mStTo9H7vHMPO58crO5Fd6ddMyPxE3Uxn767e/gpzulJz0/W3sz5W
1S/5P3OPdL5mwr1X9VdVWT1hThP15ZQ5rRrbqjqSzurOuUiMCdeu4ar1OaEW
pNdb4nygs1dMr590zuya05WauOsZeVf/My0TruDO841pfUhnJiT66qpcTT9T
TJvf9LlHOttPr5XpesF76/vk9+ysm7uuP332UtXTTpvfRC+UqAWn1MqqnJ82
Jic6MY+nvOeEzE9ff+LZoWqfpnMgXSvT+yvx3H1KnlQ9L08YkxOdqLO73nNC
5u/KtAn9/IQcnpDVVfnWuQbSY1uV/6fkxolO9JDpvnRX5ifGcNpcJ3638/W7
6uApa2DC3kn3lhPG5BRP60MmnO2s7PFEfZlwv4kxmTDvVdd8tbOLqv480UMy
V+39qh5v195PPGclng0nZ1c6307JtGk93injxnNctWZ2Peemsy4xbhP2abov
rap9E8Zqsqs+I+DrOL1mpn3ekTjH6Dw72lULVvI5cR4yYawmeNr+4vnuXDPp
54h0Hey8ngn7NJHbVWtv2lhN8Cn7i+c43c9PuMeqzN+V/9M+B6nq1avqr2cB
5jmZecq+W/l8szN7O2vQKbVv2twxX8ETMmpXvk07h+/8e3dl/kpdmDCGzFfw
ifvrlM9hJ4/Jrsxfec2EcWbmOXWq6ucnetd3ADrP9p/TfDHzetalv5dyitPf
Aajq4Vfen5mv6V1nF1fw5O92XnlemK/s9BmC/vP/5XlVjTD+zLwrT678meOu
72Q682fmRD4kzvyfU/4kznkSZ3ETxoqZ57iqL73ymUP6M5SVnzMz35oViX7+
OWVU+vMO/4aLmXflWFXOP6dcSp/npL/zw8ycOPNZef9TvKuf9yzAzOnsmvaa
0131b7WuVmeZuSeXEt8LvfU1V3BVLUj8LjM/b087o75yLu269yuPOfPVnO4h
E/3qhHE7xc7/mbkqk09/T2bmq3nCd/V3vSczM69n8q7v/8t5Zub+WtD5/X+Z
z8w8J/9Pfx9mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmzvkfENVvKw==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1zGOHFUUheGRjSxyVmCxA5zCCLZgr2BAdmQJyQTIGayAgAh5CyyCZXgT
SAQsAFsicGJpnt+9r8459w9Av0fd1dV1q773+vH3Pz598eDm5uanz9/97+nd
z9+9enX3+tmj9/94fvfyyVcvH77LX/7/733//u3ft39+8evXn/371+0PD9/c
vv3ty2/+eP3P7cf+fp/XfPj31f7YZ92nV8955xyqvlfVezuuz8ljdl/D7vtt
9bMUvq/CM7h6Pquv6bjPu83cuc4n76Uq/3euQ9V8d57NjufoKm+7j3ny+nSc
j/KeR3ktqNprdX/uVevy6v151f68o0/6cNK3q6zr2Gt135MKe86qv7uvQQpW
d7/3pCdV+4Gr9ucT/D9pQrf5V12T7r1ux3PXsa51f273c929h7/KFuVn5OT6
otbK/nfs2bqfHeV7++T+v3uv1f3e7jXo5L70qvNU2yOtvvfkuj/Z/47n9OR+
TMHYqmfh5HOn0FeZ3L2XmOZJ9zOO/+fntWPvyT3YSWN3zD95bsr+Vz37HS7t
3EsKRp30pPv7JjmvPK+q3wInr8/Ja9W9J+yYo/JvgZ37f+c1Vc9j1R4g1RMF
V11aYf9fZZT7WrBzPieP6eJ8x31y0vOO9yZ5gv9e8+q+bx3Xgp1jdpyni+Fq
VqiZrPC5+K/fCs++wn3bvRZUXfOr1iP3vsr/k/f2yd9BCp7gv9e8JqwFq9e2
ex3pcMOxT1rRsb5XfdZV66D7TFNbzf+ktaDqe1V5Mm3Pr+z/6nurXo//tIv/
jmvByXu16voozDfV/53zdPQN/73axX/lteCqZ7l7P5nU3VbsPEfu5uO/bzv6
r7AWqN2fVXt+x3tAYRZVn+XuGP57ddKz370W7OzZus2p2lsqzNHRCoVzUGj8
9+pUB06uBTvn1rEGrZ5z0txPWqG2H1Bo/PfqCQ5UrQU71+qqe3Wy+Wr7/479
gFrjv1dPM6HD7aq/Y76X/477gSRPUq9h6ryUe/Ve2jH/5P5z8kwV/FfYD6R6
knoNU+el3FXfvcpqzNe3YuezuvcDEzzBf695pXbHdcN8TSs63E5aC/DfqzFE
p5mXpv/dc6w6pkLjv1fjiaZLq/e5wndR7p1r2PH7q2ruao3/Xo0nOl01R7rv
2q5e/9XX7JyDQuO/V+O/jktVJih8L4Xu8GH1+DszUvBB2RP895oX/Wn3cIct
E7rb/53PqnqNWuO/V2OIjlE75jO7Ph92Zrd6bu6O4b9X47+m+QrHdO8dH3au
edVvB0fT8N+r8f9a8xX8Se2d+3zn2dkx330twH+vxn+d/We3P9Pme3LN7XbJ
ZS3Af6+e7MNV/lfZsnN8heujYEL3eqF8fHdP8N9rXvT978+q+1zh+yr432Hy
6v58Zz1yMRD/vRr/dVzq2M8z00/z1v33wgRP1L67Y2OFpkU7zjPHffOrPKla
rxWsUPPE/VopNP5fa9HqLKr2rqnd4XDH8+Wyn1f2xP1aKTT+n7HI5TWOvfN7
6uRaMKHx36sn+KDQO3u8jte4987vnZ3ro/DMKjf+ezX+65jfsbdPWguqzr/j
eaHx37Hx/7z5O/vYq/a97o0VeZ4wU695pfaOye7HdGmsyPOEmXrNK6lXr9Xq
/lz5mI6NFXmeMFOveU3oVZOrDO84ZlJjRZ4nzNRrXtN69f5cfW/VMSc0VuR5
wky95jWtq66n2nEcGyvyPGGmXvOiafzPbvz3avynJzRW5HnCTL3mRdP4n934
79X4T09orMjzhJl6zYum8T+78d+r8Z+e0FiR5wkz9ZoXTeN/duO/V+M/PaGx
Is8TZuo1L5rG/+zGf6/Gf3pCY0WeJ8zUa140jf/Zjf9ejf/0hMaKPE+Yqde8
aBr/sxv/vRr/6QmNFXmeMFOvedE0/mc3/ns1/tMTGivyPGGmXvOiafzPbvz3
avynJzRW5HnCTL3mRdP4n93479X4T09orMjzhJl6zYum8T+78d+r8Z+e0FiR
5wkz9ZoXTeN/duO/V+M/PaGxIs8TZuo1L5rG/+zGf6/Gf3pCY0WeJ8zUa140
jf/Zjf9ejf/0hMaKPE+Yqde8aBr/sxv/vRr/6QmNFXmeMFOvedE0/mc3/ns1
/tMTGivyPGGmXvOiafzPbvz3avynJzRW5HnCTL3mRdP4n93479X4T09orMjz
hJl6zYum8T+78d+r8Z+e0FiR5wkz9ZoXTeN/duO/V+M/PaGxIs8TZuo1L5rG
/+zGf6/Gf3pCY0WeJ8zUa140jf/Zjf9ejf/0hMaKPE+Yqde8aBr/sxv/vRr/
6QmNFXmeMFOvedE0/mc3/ns1/tMTGivyPGGmXvOiafzPbvz3avynJzRW5HnC
TL3mRdP4n93479X4T09orMjzhJl6zYum8T+78d+r8Z+e0FiR5wkz9ZoXTeN/
duO/V+M/PaGxIs8TZuo1L5rG/+zGf6/Gf3pCY0WeJ8zUa140jf/Zjf9ejf/0
hMaKPE+Yqde8aBr/sxv/vRr/6QmNFXmeMFOvedE0/mc3/ns1/tMTGivyPGGm
XvOiafzPbvz3avynJzRW5HnCTL3mRdP4n93479X4T09orMjzhJl6zYum8T+7
8d+r8Z+e0FiR5wkz9ZoXTeN/duO/V+M/PaGxIs8TZuo1L5rG/+zGf6/Gf3pC
Y0WeJ8zUa140jf/Zjf9ejf/0hMaKPE+Yqde8aBr/sxv/vRr/6QmNFXmeMFOv
edE0/mc3/ns1/tMTGivyPGGmXvOiafzPbvz3avynJzRW5HniPtP/APt3e5s=

       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1z2udVdWhWELJEQXIKsWlIQjAmyqCy5SAiNBZAnJBIiMDtAC+uOUDkCA
6AURLomgEiR/2vMZY+x7CWwdW+fus9b8ece7f/U3f//d3/3BV1999Q9//PO/
vvv+H3/z44/f/9Nv/+h3//G33//w9Z/98Ic/f/zn//3nd59/+uuvv/3pv//1
m3/5j3/75td/8uff/ue//9Vf/Ndf/um3v//5l3znS//2ye9+6Xm+9DlXNfn9
7/xfn3/J96/u/qSPT2r75F5P/v+Tz6I+CzUR83bFBz1LVz0SM3P1fDHDV2wR
OdLKFD3byXtdzfkC38T+XjH8IzFfzL9mvpifpPtpB9Y523LUq7wQuyxqK/wn
ue8LzBe7/HbmJ++V3JHkzGjuJWd77ZlXvdMzL+ogHODqXeMtzL/q3UdifjLf
kzuSnJmrXWvtfnJOknl9ldGt2or3mivfeAvzNUMWanU1P8vMF7MkdkGwVOej
npNW75aZ/2QORY60uLGQ+5+B+Qs9TXqOmJnk7ojdT87Jk+xby0S9g1dsFBkh
uKHv+P/Mz+d7ckeenOFqF/TePdmLVpY9meErpunZFn1c8BnNDe354mxvZH4y
35M7Ilinc0G7cTKPWvOj2ZjcQc18wUYxt8nc/wzMT+Z7ckeumK85n3RjMYdJ
3govFbzSLE06sMgL4fwiU1o7lXQMne/JHRGe3/KopH8K/9fcFvV5ez3F7ous
1My/qttHYr72hNaOCM9veZR2KvF8PWN6TpLzrN31qi8iKzXzrzzkIzH/ahdE
1mumtZiTdLYFRokZ03Oi3ebKE7QD66xc2IvPxnz9jqDdWDNfMOfKPRayrDVj
SccQbqNnXvRlYZfFXnw25r8llwVnWswRs53s+4LT6uzTbpN0DJGPrV0We/HZ
mJ+sYbK/yfuK2Ug6ld7f5fy6mh8x58nsTn5fu5Pe2bcz/8rxdC6L3xUsFT1N
MrnlWq38esJePecLbt/qkeCb9pa3MF/UTeSymLHWu8Pa+1Fyf5O7qesvap7M
0yTnW8/R72VvZL5wIXEekRetdwfBbeF+Yn+T2afrL97LWvfVnG99R+/XG5kv
5lycZ4FXyTsm3480Y5fz62q/kt6oc0RkR+uz3q83Ml/MuX6na/FK54jY0wXG
tnr6ZCaTnt9ytifPFI4tPrfmfJn5V7+rz7PAK7GnV3dZZo5+X7tymCTzxS4k
PfCKLS3m6zlPslfwM8n85Gwn+9hi3QJztNsvOFXSN8R9r2pyNSdJz9fn1+xt
+WSSw1ezveCrSVdpMWfNVxeY32KaYN1VH1uer8/fqqf2SX2eBZ/RmaVdpeVR
glFXWbPg+UmmrbGlxXzhlklnE9zTO5LcfeHhC56wsGtinluz3XK8J325ytxW
/VvMF26ZdDYx8wtuoJn/ZK/FObWrJJkv9k7PdsvxBPPFLoj6a/4n3TLpbLrO
LTcQvbvyLlET7Spi18Q8t56/kNcth0zm6dXdF9jVcjZd55Yb6LnVd0y6+tXd
hUeJOXn7vq85pOCM/r7O3GVn03VuuYGe2+TZkne5+tuFd5DkviT3PZmbX7r7
V3VYZn5yX4Sz6SzWTBM7eMW0JOev7nLFyYV3EMGuqz5qD2/1WpxtjfnJfUnO
XuvMV25w5SHaaUUuJJ8pmN/yBJ0pV0zWufak1yI71pgvfOxqBpKMFXOr76vr
k/TG1jO154t3nytfFexdyLUrjrX8Ien5V44nZl5nStJztJst5FfrvWP5Xnrm
xc4m7yvuKOqva5v0fOHbV/W8+lvh+WJ+BP+T+dXiz0KmP+lv0ld1zQU3RAbp
z2vM13manAftUckZE7ORzK8Wf5J5pDmgfVX7zxX3tFNdMfaqtknPF3manAfB
HJ1BV/O/MANr/NF51PI64Z9rfpXMXM3/NeYn+yv8Vru0rsMC80V+LfNH10Tv
+JWvXt39av5bDvnZmJ/0Zz0PwqUFB9aYr/dXe3vSQ97YRz0PyR1POslHZb5m
uDjbwrtDMneSfij2uvX95F2W+6jnQXOv5SRXHF5jvma4OJvou2bjMvOXvXHB
za4cstVHPQ/Cr67cTO/vG5mvGS7OpmdVsFHk0doMLHBe7GmSRXpfxDyI+Rfn
F/v7RuaL87T8UOzy1d2XmX81AyKLdb+ESyf3S2dT8gwtf0ju3QLzxX2THE6+
Iyz4vPbDKx9r5f6CS1/xUHuLyIu1eRMe8nbm65kUZ7tir+jjG5l/NQMii8Xz
kxnUykfxWZ/h6t3kygE0KxY8X8ykrq2Ymc/G/OT3Wz6WdOlkfglWiEwXNdde
qlnRYv4bnUow/6pHb2T+1QwIBmpWCJcW9U+yN1nn1vxoh1lmvp7JVr4LLi2w
XXv+gq+2niMy6Kr+SfYm63zF7St2JVmx1q/kvIneaR9Y+/8LM7DQC+144pz6
c9IbNQd0LidZseD5mhU636/2boHhSea39lFnh3C8pG+I3dfeKJgv/FDk/luY
L/JOO5Xu+xuzYGEGhJcmvyNm7Kr+y8xfdkvtosIxkp4vZjXJEzFLOusXmH81
A1cc0/1KZoTgwxrz1/is/VDfPen5Se8VPBHukWTpgudrf7uqp/bhZT6sMf/q
PIKZwg9FL1pcSnJY8ETMUpIVC55/dS/BfM3/t/Bh4TlJJ7/alwVvXGC+9jq9
O8ls0vdtMV84kmD+G3dE8GHhOVeOl3SnZNYsM197XbLmOpv0fReyKfnOcpXj
yzvyGZgv3EC4k/78Fua3eif8XGeTnr2FbNJ7J7K4xbSrfX8786/4pt2p5Qlr
zBfZlNwd/Y5wlR3inJqlotfJ/i7syGdg/pN5TrrTG2uSPJvu3dXuJN81NCsW
sumK+Qv9XdiRz8D8q1nV7rTgCQvMv2J7a3fEZ+G6ybu0ZiCZTVe+p+vzGZgv
WC3caa0mLeYnOSB2R9cqeV+943oGxLvAFcNbO/IZmN/iknYPnTVJjiWdsOWB
C8x/wkPBOj0D2vc0M3U2fVTm63erlnuImizkUZJjC3mUZH7LSa5YesVwPZ+a
+aKeH4n5rZpr9xA1WWD+VY4nvS7ZxyRLr5xE/O6CYye9OtnrtzP/6o4LDi8y
K8n55NmSrpvc/SRLr3ZKe3vLsZNerR1G1HDB85/Mif7ccpWrvNP9WvAfkUct
z7/yEJ1NyX3Xnrawv1cZvcz8KzcQrrvgKld5p/u14D8iO5ZZ2mL+1Qy0dqd1
x6s5fDvzr9xA87/lKqJWa2fTPdVe3WJpi/nib5Pz2brjlbO9nflrzrbA/CsH
fsvZdE+1V7dY0WL+1Qxox9bP0exaZp3eu6SzLTD/yoG1R4kM0h4uvHrB8Vqe
f1XnJ2e+6pG+Yytf1pi/5mwLzL/yw2TNk9950hfh1S2WLni+dlFxttYdW/my
xvyr/V2oQ5KlV2wXjqQ/i5lZYP7V95PZJGZSn611x1a+rDFfOE+rDlfMv9oX
4bHibMIfWt9PsnQhmwTPl31D7LjOlzXm616/kfmiL5r5YmaSeyTu2/LGZDbp
fRFnE3N45agiX9aYr+cwWQftAGvM1zOT3CPBW83ShWxaY36S/1e+dOVRIjta
e5rc5QXmX7FaM3/Br4Qnt/xc56/Ipqu5umJ+yz2EcyZ7nWT+1eerXV5gvphn
7fnJvdOerJ1BcPgqp5LzqT1/mfnib69qkvR8nSlXGaqZr1kn5naB+SK/BN+u
3DX5HiHmU3t+cg61L+letzxfZ8qCt7ScU/NqId+FHwrmtD4LziSzUv9Wy/OT
s7rA/KvfuqpP0iWSzimYL7JJ9Poqj1q/28pKcUfhKq2aJ31Js6Xl+YL5T3qn
XSLpnIL5Le/Sjr32u5r5oiZJRxX3Snq+cGNR8+SeXs3zmksknTM5P9q79O+K
XBMzv+xF+pxillqen8xiMRtiT8WcLLhEsqeteRDeJfZIO0DSrxa8SGe6mKWW
5yezeKGPC2xpuYQ4m8ialm8kM+UtPpb0Zz3DuiZi3oTni/OLvda7mWSLzj7t
hC1f1b4hPC3J85YnL3iR9re3M//qbHqeRR+1MydrIrI42UedOwtzpc+gfUx7
vu6d+N03Mv9LZ6M1z8LDtS/pM+gsTvZRzMPV56t7idlI+pj2fNFr4cZvZ37L
J69yKukzSXdtcSaZucJbxGdRwzf62BWjtBfp9wvdl6Tnr/E26VHJ3dF90R7V
8kntosv3WvAxwV59hifPb2Vx0vPXeJv8zpM+Jjn2ZHeumHlVn6Q/tDw/mRGt
9xThNsm/1VxaY37y7mIvBOsE00QNk3xLZqLwh5bnt+og6inYK7xIv1+I7G55
fsszhVcIDxEs0jm1zPzW+1rS8wUTWvVMOmfyb0XWPNmXZM313a/yKMl8zSLR
l7cwP+kPLc8X52zVM+mcyb8VObXM/OTdr9gl+C+4LbxFZ3HL81t9FMxvzZuu
Z9I5Ba+0q7yF+cm76x4JViTdfiGLW57f6qNg/gKX3sJ84UXi+XovksxP3v2K
XS3PT9awlcUtzxdOrnNwjUu6nknnFLsmPr+R+TojrtxMu2LSw4U/iN1Men6r
j63MbXFpjfmiR9oPF3L5quYiI67qdlUHfX7B5CfcWGb+Qh9bmau5lNypJB8E
e1uOseD52lv0LghWCCZc+YDO7uVsEm6T7K/mUnKn9I6L94hWtray+Ko+gmna
UYUnaCZfZXSSgTqbhNtcMV/vnWBRi/lP5kq7jXaMZBZfPV8wTfuA8ATN5AVO
as8Xu6BzMHmX5Dy3PF8w/8kztWNovxV9F0wTzNHc00wWuyxmMplNSb8V92o5
jNgp7eEfaR+vziZqktxl4ZOidy13XZsN4cOa+SIHF/y5leNJD/9I+3jlb1c1
b+3yMvP1fVtOLvZF5EXSbYTP6PsueK/2io+0j1f+1vr+1X4tM18wVsxYcjaS
9Uy6jeDJGvO1+yX36437mMw48f2r/VpmfvJvF3ZZ9K7FySdcveLJGvPFc7RX
XM3zwj5e+Vvr+1cMX2a+dsJkvrR8SXBY3+vKZ9aYn+yj3q9kv4RjtJxN7/7b
ma+dcG0HtZvp/mq/Ss7qW/xcfOeKkyKLBW+TztY651uYrx0jyVLtG7omyXvp
M7eY3/JSsV8LDNF80L+bPOdCv6687upvF3b5KsfFeZL3ar3LLMzzmu9dzXnL
86/OLH43ec63MP/JLug6i10WPUo6xtW9NJcWPL81J605TzJf8C3pjS1vWWB+
Mls1S7VXi3rq39WeLzim51nPiZiNNeaLnEp6Y8tbFpivPUfnRdKr9X3F72rP
FxzT8yZ2Qddnjfn6DNobNR+Wmf/knOL5Czt75dvJeV5zaVE38Zwnv3uVxWK2
NfP1GbQ3ir6/hflX3NCOlNzZqx1PzvOaS+t3k6vnaOYnZ17Mg7iXqI+YsY/K
fJ3Lmp9rzE/yYdmlW45xtS9XzG+5aCtbr86g66lZvcx8nctX/RJ7IZivXf0t
Lt1yjAVnSPZIc0/M80I9PzPz176v9zfp+UlfWtj3Bce48jrh+UkXbblcy6nE
zHxU5msXvWKmqIOeyaQviVm92vGWMywwv8WTVl+0M+hc/gzMX+B80tk087Wr
J3kiOLyQoS3PbzE/2ZfWPIid/ajMX+C83oWW518xp+WQgsNJZ9C9WONJkhXC
1cXvigx6O/P1DLxlF/Q8a39reb7wh6u7616s8UTvu+6d+I7IoLczP7n72osW
mP+Ew2L2BPPFLAlmLjA/yRO977p3C791lePLzBcOk3zOGvNFH1sOqWe75bEt
z9c8SXr+k8/ivle/pV1ugflXTq77q3dc56D2fOGQYv71PFwxXGSZ5one9ysm
a6/TfbnaqRbzxcys8SfJ/KR3aYcU86/n4WoHRZZpnuh9X/BP/VvJuV3w/KuZ
WeNPy/OF4yUdUrNL1CTpzzrTteeLOdd5pH9L5MUa81s7vpAdSV9NcjJ5x6ua
aMYKlupMT+aI8Ki3vFPovFhj/pp/tnZ8gcNrDnl1l6RL6J0S/LyabdELwWQ9
8635fwvztdto7iXZrjmczOVWX1qO2mJ+crYFM3/J8/8HAuVOQg==
       "], {{0, 128}, {
       128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}]}], "}"}]], "Output",
 CellChangeTimes->{3.774189172988782*^9, 3.77419363293056*^9},
 CellLabel->
  "Out[152]=",ExpressionUUID->"233f36f9-4ff4-4248-b76a-6058ca299c46"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1jFKXAEYhdHBgMwyzBZMZZNnqpSCljaOwVQSxRRi5ypcQxaRwvW4g3Qq
WNgI85g3913IOaB8go4OM3L/z+dXxz93FovF7+XLp+PV7bebm9Xdye7rFxer
yy/7l59e8v7t47VP/x4O/x6vh18HR1/f9/fdH8PDcm94+nM2vO+Pvn9sr/OY
Y79nk97k8cc+33UeZ9u/d6rXaKrnOPZvmOv9s4333iZ/51Sv11yv+1zv/7HP
faqfnep/dqrntQDgv7SNG0ZrrXV/z70/AMyjYYO01lq7/wHIaNggrbXW7n8A
Mho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGut
tfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyG
DdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+
ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO0
1lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHI
aNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW
7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2
SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsf
gIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJa
a+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCj
YYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7
/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNgg
rbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8A
Mp4Bv/Xysw==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1sEqtAEcxeFByQVQtm6BrbzZuACUhdAoVkqxkJ0rc0GuAmVho2je98wp
z1P0+6RvZhj9z871/fHt6mw2e9z4+HQ8fzp8eJg/n6x//uNmfre3e7f2kS9f
H599cH45XL1tDY97p8PK1tmwf/F6sLl9NHz/+hT902P99Tn85vu/f89Y/Zv/
f5HX/tfnMMVjjfUax3qsRX4OU7wPp37PLPIal/UcGn6/Y/1dL/L+n/r5jPW4
MwD+pal3vtZa685e9v0BYDkabpDWWmv7H4CMhhuktdba/gcgo+EGaa21tv8B
yGi4QVprre1/ADIabpDWWmv7H4CMhhuktdba/gcgo+EGaa21tv8ByGi4QVpr
re1/ADIabpDWWmv7H4CMhhuktdba/gcgo+EGaa21tv8ByGi4QVprre1/ADIa
bpDWWmv7H4CMhhuktdba/gcgo+EGaa21tv8ByGi4QVprre1/ADIabpDWWmv7
H4CMhhuktdba/gcgo+EGaa21tv8ByGi4QVprre1/ADIabpDWWmv7H4CMhhuk
tdba/gcgo+EGaa21tv8ByGi4QVprre1/ADIabpDWWmv7H4CMhhuktdba/gcg
o+EGaa21tv8ByGi4QVprre1/ADIabpDWWmv7H4CMhhuktdba/gcgo+EGaa21
tv8ByGi4QVprre1/ADIabpDWWmv7H4CMhhuktdba/gcgo+EGaa21tv8ByGi4
QVprre1/ADIabpDWWmv7H4CMhhuktdba/gcgo+EGaa21tv8ByGi4QVprre1/
ADIabpDWWmv7H4CMhhuktdba/gcgo+EGaa21tv8ByGi4QVprre1/ADIabpDW
Wmv7H4CMhhuktdba/gcgo+EGaa21tv8ByGi4QVprre1/ADIabpDWWmv7H4CM
hhuktdba/gcgo+EGaa21tv8ByGi4QVprre1/ADIabpDWWmv7H4CMhhuktdba
/gcgo+EGaa21tv8ByGi4QVprre1/ADIabpDWWmv7H4CMhhuktdba/gcgo+EG
aa21tv8ByGi4QVprre1/ADIabpDWWmv7H4CMhhuktdba/gcg4x3Q00bG
       "], {{0, 
       128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1jFKmwEcxuEQoXiFjl7Bzk1wL1hiL5CCTgHFDsXNk3TreboK3sFR6CIm
0LWQkO9784rPA5Vfi5rEqu//5Pv14mo6mUx+HK/fLJY/z25vl3cXHzZ/uVyu
Pp2ujtZ5/+/Ppj/+OZ8//36ZPT3+ne3aDzdfPi+vp/Ovv77Nt/n3XT92jM+/
zWNt8xyGeqyxP+eur3Gbxx37+Qz1vTfG/+9Qz3OMn6kxvvf2+RoO9VqGeu1D
/a471O+Wfb7+/3ufCQDv0j6bqLXW+u32ofcHgMNo2CCttdbufwAyGjZIa621
+x+AjIYN0lpr7f4HIKNhg7TWWrv/Acho2CCttdbufwAyGjZIa621+x+AjIYN
0lpr7f4HIKNhg7TWWrv/Acho2CCttdbufwAyGjZIa621+x+AjIYN0lpr7f4H
IKNhg7TWWrv/Acho2CCttdbufwAyGjZIa621+x+AjIYN0lpr7f4HIKNhg7TW
Wrv/Acho2CCttdbufwAyGjZIa621+x+AjIYN0lpr7f4HIKNhg7TWWrv/Acho
2CCttdbufwAyGjZIa621+x+AjIYN0lpr7f4HIKNhg7TWWrv/Acho2CCttdbu
fwAyGjZIa621+x+AjIYN0lpr7f4HIKNhg7TWWrv/Acho2CCttdbufwAyGjZI
a621+x+AjIYN0lpr7f4HIKNhg7TWWrv/Acho2CCttdbufwAyGjZIa621+x+A
jIYN0lpr7f4HIKNhg7TWWrv/Acho2CCttdbufwAyGjZIa621+x+AjIYN0lpr
7f4HIKNhg7TWWrv/Acho2CCttdbufwAyGjZIa621+x+AjIYN0lpr7f4HIKNh
g7TWWrv/Acho2CCttdbufwAyGjZIa621+x+AjIYN0lpr7f4HIKNhg7TWWrv/
Acho2CCttdbufwAyGjZIa621+x+AjIYN0lpr7f4HIKNhg7TWWrv/Acho2CCt
tdbufwAyGjZIa621+x+AjIYN0lpr7f4HIKNhg7TWWrv/Acho2CCttdbufwAy
GjZIa621+x+AjIYN0lpr7f4HIKNhg7TWWrv/Acho2CCttdbufwAyGjZIa621
+x+AjFc5zATq
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1jFKmwEcxuHQgjj0DkXwBLondOoqEUeHCO0UaImU4uYBnJ08Sq7QnsXB
A6jg4FKIfPnevMXnAcuvpabxS+H9H1z8mH//MJlMLveffpkvfn9ZrRZXp3vP
v/m2WB4fLT8+5fXL13Mf3v+Z/jw7md3+Op/dffo7/bx+mN6sv85e//km/fp7
//U6b/07Q/7dTV5nW+9nyHN76/sZ+/lv8nMNeeZDnsmQ9zn2a479WW/yzLf1
OkOe1ZDPYlffu63/e2N8jmM/nwkA79K29khrrfX/1bveHwB2o2GDtNZau/8B
yGjYIK211u5/ADIaNkhrrbX7H4CMhg3SWmvt/gcgo2GDtNZau/8ByGjYIK21
1u5/ADIaNkhrrbX7H4CMhg3SWmvt/gcgo2GDtNZau/8ByGjYIK211u5/ADIa
NkhrrbX7H4CMhg3SWmvt/gcgo2GDtNZau/8ByGjYIK211u5/ADIaNkhrrbX7
H4CMhg3SWmvt/gcgo2GDtNZau/8ByGjYIK211u5/ADIaNkhrrbX7H4CMhg3S
Wmvt/gcgo2GDtNZau/8ByGjYIK211u5/ADIaNkhrrbX7H4CMhg3SWmvt/gcg
o2GDtNZau/8ByGjYIK211u5/ADIaNkhrrbX7H4CMhg3SWmvt/gcgo2GDtNZa
u/8ByGjYIK211u5/ADIaNkhrrbX7H4CMhg3SWmvt/gcgo2GDtNZau/8ByGjY
IK211u5/ADIaNkhrrbX7H4CMhg3SWmvt/gcgo2GDtNZau/8ByGjYIK211u5/
ADIaNkhrrbX7H4CMhg3SWmvt/gcgo2GDtNZau/8ByGjYIK211u5/ADIaNkhr
rbX7H4CMhg3SWmvt/gcgo2GDtNZau/8ByGjYIK211u5/ADIaNkhrrbX7H4CM
hg3SWmvt/gcgo2GDtNZau/8ByGjYIK211u5/ADIaNkhrrbX7H4CMhg3SWmvt
/gcgo2GDtNZau/8ByGjYIK211u5/ADIaNkhrrbX7H4CMhg3SWmvt/gcgo2GD
tNZau/8ByGjYIK211u5/ADIaNkhrrbX7H4CMhg3SWmvt/gcgo2GDtNZau/8B
yGjYIK211u5/ADIeATha1MU=
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1k1KWwEYheFrCiHb6Bbs1B/sEnTmLAUdSECJA+msoy6ge+guugdBN1QF
pwHDvTk54vOA8ir+c/E7X3/cnl/PhmG4X7y8Ol8+nK3Xy58X89c3rparb4er
Ly/56+3ltS9vno9nB/PTu2FxuqnXR08n//48nvz9/f1dvelzt33/tl9/08eM
+b7v+dzk1x/z82z7txrzO455fvb1jE31u495JnfxM0/1LO3iOZzqGdv1MzzV
/6hd/6/b9u8zAPApTbUftNZaf6ze9/0BYD8abpDWWmv7H4CMhhuktdba/gcg
o+EGaa21tv8ByGi4QVprre1/ADIabpDWWmv7H4CMhhuktdba/gcgo+EGaa21
tv8ByGi4QVprre1/ADIabpDWWmv7H4CMhhuktdba/gcgo+EGaa21tv8ByGi4
QVprre1/ADIabpDWWmv7H4CMhhuktdba/gcgo+EGaa21tv8ByGi4QVprre1/
ADIabpDWWmv7H4CMhhuktdba/gcgo+EGaa21tv8ByGi4QVprre1/ADIabpDW
Wmv7H4CMhhuktdba/gcgo+EGaa21tv8ByGi4QVprre1/ADIabpDWWmv7H4CM
hhuktdba/gcgo+EGaa21tv8ByGi4QVprre1/ADIabpDWWmv7H4CMhhuktdba
/gcgo+EGaa21tv8ByGi4QVprre1/ADIabpDWWmv7H4CMhhuktdba/gcgo+EG
aa21tv8ByGi4QVprre1/ADIabpDWWmv7H4CMhhuktdba/gcgo+EGaa21tv8B
yGi4QVprre1/ADIabpDWWmv7H4CMhhuktdba/gcgo+EGaa21tv8ByGi4QVpr
re1/ADIabpDWWmv7H4CMhhuktdba/gcgo+EGaa21tv8ByGi4QVprre1/ADIa
bpDWWmv7H4CMhhuktdba/gcgo+EGaa21tv8ByGi4QVprre1/ADIabpDWWmv7
H4CMhhuktdba/gcgo+EGaa21tv8ByGi4QVprre1/ADIabpDWWmv7H4CMhhuk
tdba/gcgo+EGaa21tv8ByGi4QVprre1/ADIabpDWWmv7H4CMhhuktdba/gcg
4z8JACT2
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1j1KXAEYheGLAZltJKSwdsrADaliY6OF9QhaGQKGENJlJZJ9uJn0WYOg
AxY2wlzmzpkT8jygvIo/4+933l5+Pbs+GIbh2+Lp2dnqx6fb29XP88P1C1er
m+XxzZun/PX8tO73f5bjxdH9+P3d7w+b9JfPf8eH08XH1cndOPV95/qYL99+
k576ead+/E0+7zav38XXsovvw9T33eZrST7ObX4/237Wc/19zfX453qcU/+f
7Pp3Y67Xz/U39VoPAPyX5tq6Wmut/63e9/0BYD8abpDWWmv7H4CMhhuktdba
/gcgo+EGaa21tv8ByGi4QVprre1/ADIabpDWWmv7H4CMhhuktdba/gcgo+EG
aa21tv8ByGi4QVprre1/ADIabpDWWmv7H4CMhhuktdba/gcgo+EGaa21tv8B
yGi4QVprre1/ADIabpDWWmv7H4CMhhuktdba/gcgo+EGaa21tv8ByGi4QVpr
re1/ADIabpDWWmv7H4CMhhuktdba/gcgo+EGaa21tv8ByGi4QVprre1/ADIa
bpDWWmv7H4CMhhuktdba/gcgo+EGaa21tv8ByGi4QVprre1/ADIabpDWWmv7
H4CMhhuktdba/gcgo+EGaa21tv8ByGi4QVprre1/ADIabpDWWmv7H4CMhhuk
tdba/gcgo+EGaa21tv8ByGi4QVprre1/ADIabpDWWmv7H4CMhhuktdba/gcg
o+EGaa21tv8ByGi4QVprre1/ADIabpDWWmv7H4CMhhuktdba/gcgo+EGaa21
tv8ByGi4QVprre1/ADIabpDWWmv7H4CMhhuktdba/gcgo+EGaa21tv8ByGi4
QVprre1/ADIabpDWWmv7H4CMhhuktdba/gcgo+EGaa21tv8ByGi4QVprre1/
ADIabpDWWmv7H4CMhhuktdba/gcgo+EGaa21tv8ByGi4QVprre1/ADIabpDW
Wmv7H4CMhhuktdba/gcgo+EGaa21tv8ByGi4QVprre1/ADIabpDWWmv7H4CM
hhuktdba/gcgo+EGaa21tv8ByGi4QVprre1/ADIabpDWWmv7H4CMhhuktdba
/gcg4xGdfU5v
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1jFKmwEcxuFgQQQP0FmcXHWsJHiAthBPkEKdAoFkkG4depNewhs49CwF
LyBUwcHF4eNL3rzU5wHLT4hp1Kb/9+Tban5zMJlMNkdPf8wXt1fr9eLH9eHz
J98Xy4vz5Yen/Pny8dz3jx9nf+5+Tz8//Lr8eraZ/j3+Mvu0Op2+7tePeevx
bz1m6NcOfQ1jnnPMa9jXz2fo97utrx3zM9nW6xn6exzzuxjzd415/jHPuev3
2rbej7t4/bv4t7rr9++2/o8a831NAHiXhu4rrbXW/0fv+/4AsB8NN0hrrbX9
D0BGww3SWmtt/wOQ0XCDtNZa2/8AZDTcIK211vY/ABkNN0hrrbX9D0BGww3S
Wmtt/wOQ0XCDtNZa2/8AZDTcIK211vY/ABkNN0hrrbX9D0BGww3SWmtt/wOQ
0XCDtNZa2/8AZDTcIK211vY/ABkNN0hrrbX9D0BGww3SWmtt/wOQ0XCDtNZa
2/8AZDTcIK211vY/ABkNN0hrrbX9D0BGww3SWmtt/wOQ0XCDtNZa2/8AZDTc
IK211vY/ABkNN0hrrbX9D0BGww3SWmtt/wOQ0XCDtNZa2/8AZDTcIK211vY/
ABkNN0hrrbX9D0BGww3SWmtt/wOQ0XCDtNZa2/8AZDTcIK211vY/ABkNN0hr
rbX9D0BGww3SWmtt/wOQ0XCDtNZa2/8AZDTcIK211vY/ABkNN0hrrbX9D0BG
ww3SWmtt/wOQ0XCDtNZa2/8AZDTcIK211vY/ABkNN0hrrbX9D0BGww3SWmtt
/wOQ0XCDtNZa2/8AZDTcIK211vY/ABkNN0hrrbX9D0BGww3SWmtt/wOQ0XCD
tNZa2/8AZDTcIK211vY/ABkNN0hrrbX9D0BGww3SWmtt/wOQ0XCDtNZa2/8A
ZDTcIK211vY/ABkNN0hrrbX9D0BGww3SWmtt/wOQ0XCDtNZa2/8AZDTcIK21
1vY/ABkNN0hrrbX9D0BGww3SWmtt/wOQ0XCDtNZa2/8AZDTcIK211vY/ABkN
N0hrrbX9D0BGww3SWmtt/wOQ0XCDtNZa2/8AZDTcIK211vY/ABkNN0hrrbX9
D0BGww3SWmtt/wOQ8Q9pDfwS
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1sGKFUcUx+EhkkTXWWSdV4jb4KAB12F8ghEUAkJAF+JOyC5v4pP4WlF0
4WbA4U7P/P7wLW5TXdTtrnO6TtX32/N/Ll7+cHZ29ub+p8vF5dvHr19fvnv2
0+ebF5evHv7+6t6n5vuvv8/tD389f/Tx6a/nf/98cf7jvw/OXz7579GHX/78
49v+q9pXjf+2/7rPvG77qnd9zxxOmdv3/Pe6Y647z1Oef0rejv52R8Ry9Jq5
qfcencNT5lOL/ZQaOaIubqqmjsjJTdVXOed3dXbc1Jgjztmj19LRe+nRsRy9
zxxxXt/V2ijEXltLt+nnWk5qOef/2zHz0fVym3VRMHBhT16MvWzRo+v6rnJS
zjn/8z//988a/ud//ud//u/syYuxly3K//zP/02z8T//8z//8z//rxuY/5sW
5X/+5/+m2fif//mf//mf/9cNzP9Ni/I///N/02z8z//8z//8z//rBub/pkX5
n//5v2k2/ud//ud//uf/dQPzf9Oi/M///N80G//zP//zP//z/7qB+b9pUf7n
f/5vmo3/+Z//+Z//+X/dwPzftCj/8z//N83G//zP//zP//y/bmD+b1qU//mf
/5tm43/+53/+53/+Xzcw/zctyv/8z/9Ns/E///M///M//68bmP+bFuV//uf/
ptn4n//5n//5n//XDcz/TYvyP//zf9Ns/M///M///M//6wbm/6ZF+Z//+b9p
Nv7nf/7nf/7n/3UD83/TovzP//zfNBv/8z//8z//8/+6gfm/aVH+53/+b5qN
//mf//mf//l/3cD837Qo//M//zfNxv/8z//8z//8v25g/m9alP/5n/+bZuN/
/ud//ud//l83MP83Lcr//M//TbPxP//zP//zP/+vG5j/mxblf/7n/6bZ+J//
+Z//+Z//1w3M/02L8j//83/TbPzP//zP//zP/+sG5v+mRfmf//m/aTb+53/+
53/+5/91A/N/06L8z//83zQb//M///M///P/uoH5v2lR/ud//m+ajf/5n//5
n//5f93A/N+0KP/zP/83zcb//M///M///L9uYP5vWpT/+Z//m2bjf/7nf/7n
f/5fNzD/Ny3K//zP/02z8T//8z//8z//rxuY/5sW5X/+5/+m2fif//mf//mf
/9cNzP9Ni/I///N/02z8z//8z//8z//rBub/pkX5n//5v2k2/ud//ud//uf/
dQPzf9Oi/M///N80G//zP//zP//z/7qB+b9pUf7nf/5vmo3/+Z//+Z//+X/d
wPzftCj/8z//N83G//zP//zP//y/bmD+b1qU//mf/5tm43/+53/+53/+Xzcw
/zctyv/8z/9Ns/E///M///M//68bmP+bFuV//uf/ptn4n//5n//5n//XDcz/
TYvyP//zf9Ns/M///M///M//6wbm/6ZF+Z//+b9pNv7nf/7nf/7n/3UD83/T
ovzP//zfNBv/8z//8z//8/+6gfm/aVH+53/+b5qN//mf//mf//l/3cD837Qo
//M//zfNxv/8z//8z//8v25g/m9alP/5n/+bZuN//ud//ud//l83MP83Lcr/
/M//TbPxP//zP//zP/+vG5j/mxblf/7n/6bZ+J//+Z//+Z//1w3M/02L8j//
83/TbPzP//zP//zP/+sG5v+mRfmf//m/aTb+53/+53/+5/91A/N/06L8z//8
3zQb//M///M///P/uoH5v2lR/ud//m+ajf/5n//5n//5f93A/N+0KP/zP/83
zcb//M///M///L9uYP5vWpT/+Z//m2bjf/7nf/7nf/5fNzD/Ny3K//zP/02z
8T//8z//8z//rxuY/5sW5X/+5/+m2fif//mf//mf/9cNzP9Ni/I///N/02z8
z//8z//8z//rBub/pkX5n//5v2k2/ud//ud//uf/dQPzf9Oi/M///N80G//z
P//zP//z/7qB+b9pUf7nf/5vmo3/+Z//+Z//+X/dwPzftCj/8z//N83G//zP
//zP//y/bmD+b1qU//mf/5tm43/+53/+53/+Xzcw/zctyv/8z/9Ns/E///M/
//M//68bmP+bFuV//uf/ptn4n//5n//5n//XDcz/TYvyP//zf9Ns/M///M//
/M//6wbm/6ZF+Z//+b9pNv7nf/7nf/7n/3UD83/TovzP//zfNBv/8z//8z//
8/+6gfm/aVH+53/+b5qN//mf/7/0/w/UeBcG
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
e0XIneZA/jO7ZPck/115Ee72ze76t14AwXWCfw==
       "], {{0, 128}, {128, 0}}, {0.,
        1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1kFKWwEYhdGgIG5DxA3o1Bo6cmiJK3iFCoVAQQelk9KxK3AiFJy4sq6j
EZwKhvfezS09B5RPIRqNeP+jz99WN3uLxeLucPNuNXz/eHs7/Lg+ePngy7A+
O13vb/LX69tLP95/Wv68Gpbnf54vjr9efvj9dLE8WT+8q9967LafH/O9pnqe
Y57ze77OVF9zzM8y1Wu0q8eOed3HvNZT/Q3M8Rpt+3ub4+9q28eO+b5z/LxT
Pc85/ufM/b9lAcB/aapbS2ut9b/Vu94fAHajYYO01lq7/wHIaNggrbXW7n8A
Mho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGut
tfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyG
DdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+
ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO0
1lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHI
aNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW
7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2
SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsf
gIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJa
a+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCj
YYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7
/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNgg
rbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8A
Mv4C4lst7g==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}]}], "}"}]], "Output",
 CellChangeTimes->{3.774189172988782*^9, 3.774193632948462*^9},
 CellLabel->
  "Out[153]=",ExpressionUUID->"be30ef96-2b5b-4e45-b1ca-a8f50075d993"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Network XIV - BatchNorm, 1024 linear, dropout", "Subsection",
 CellChangeTimes->{{3.774202761342402*^9, 
  3.774202772784957*^9}},ExpressionUUID->"115e0f41-1d29-42b0-b160-\
97fe4796a451"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"netECA14", "=", 
  RowBox[{"netEightCC512drop", "[", 
   RowBox[{"128", ",", "128"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7742027753076267`*^9, 3.774202787786147*^9}},
 CellLabel->
  "In[159]:=",ExpressionUUID->"999b2472-a408-4b22-87c5-6f38ad3905f0"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["15", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{24, 3, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 24, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 3, "$InputSize" -> {128, 128}, 
                    "$OutputSize" -> {126, 126}, "$WeightsInputChannels" -> 
                    3], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "bat1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{24}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 24, 
                    "$SpatialDimensions" -> {126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "ramp1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {24, 126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{16, 24, 2, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{16}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 16, "KernelSize" -> {2, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 24, "$InputSize" -> {126, 126}, 
                    "$OutputSize" -> {125, 124}, "$WeightsInputChannels" -> 
                    24], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 125, 124}, 
                    NeuralNetworks`RealT]]], "bat2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{16}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{16}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{16}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{16}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 16, 
                    "$SpatialDimensions" -> {125, 124}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 125, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 125, 124}, 
                    NeuralNetworks`RealT]]], "ramp2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {16, 125, 124}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 125, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 125, 124}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{24, 16, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 24, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 16, "$InputSize" -> {125, 124}, 
                    "$OutputSize" -> {123, 122}, "$WeightsInputChannels" -> 
                    16], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 125, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 123, 122}, 
                    NeuralNetworks`RealT]]], "bat3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{24}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 24, 
                    "$SpatialDimensions" -> {123, 122}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 123, 122}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 123, 122}, 
                    NeuralNetworks`RealT]]], "ramp3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {24, 123, 122}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 123, 122}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 123, 122}, 
                    NeuralNetworks`RealT]]], "pooling" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {120, 112}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 24, "$InputSize" -> {123, 122}, 
                    "$OutputSize" -> {4, 11}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 123, 122}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 4, 11}, 
                    NeuralNetworks`RealT]]], "flatten" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 4, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1056}, NeuralNetworks`RealT]]], 
                    "linear" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1024, 1056}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {1024}, "$OutputSize" -> 1024, 
                    "$InputSize" -> 1056, "$InputDimensions" -> {1056}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1056}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]]], 
                    "drop2" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.2, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]]], 
                    "linear2" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{4, 1024}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{4}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {4}, "$OutputSize" -> 4, 
                    "$InputSize" -> 1024, "$InputDimensions" -> {1024}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]], 
                    "softmax" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pooling", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pooling", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "drop2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "drop2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3, 128, 128}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {128, 128}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, "Interleaving" -> False, 
                    "MeanImage" -> None, "VarianceImage" -> None, "$Version" -> 
                    "12.0.10"]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {1, 2, 3, 4}, "InputDepth" -> 1, "Dimensions" -> 
                    4, "$Rank" -> 0, "$Version" -> "12.0.10"]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"128\"", "\"128\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bat1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ramp1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"16\"", 
                    "\"125\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bat2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"16\"", 
                    "\"125\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ramp2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"16\"", 
                    "\"125\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"123\"", "\"122\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bat3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"123\"", "\"122\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bat3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ramp3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"123\"", "\"122\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ramp3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pooling\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"4\"", "\"11\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"flatten\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1056\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"drop2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"softmax\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   ImageSizeCache -> {298., {129.9169921875, 135.0830078125}},
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.774202788683174*^9, 3.7742028175913277`*^9}},
 CellLabel->
  "Out[159]=",ExpressionUUID->"10128053-4d01-4f68-902c-88163b34a6aa"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"netECA14", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"netECA14", ",", "fullTrainingBigC13", ",", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", "20"}], ",", 
    RowBox[{"BatchSize", "\[Rule]", 
     RowBox[{"256", "*", "4"}]}], ",", 
    RowBox[{"TargetDevice", "\[Rule]", "\"\<CPU\>\""}], ",", 
    RowBox[{"TrainingProgressCheckpointing", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Directory\>\"", ",", "dir"}], "}"}]}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.772359301378972*^9, 3.7723593151826487`*^9}, {
  3.772692972974709*^9, 3.772692978955448*^9}, {3.772693103833131*^9, 
  3.7726931061383677`*^9}, {3.7726954327396307`*^9, 3.772695433052311*^9}, {
  3.773129922404114*^9, 3.773129928369681*^9}, {3.773159589015329*^9, 
  3.773159589253455*^9}, {3.773159731047542*^9, 3.773159755478558*^9}, {
  3.773160016071207*^9, 3.773160037844142*^9}, {3.773163441661957*^9, 
  3.773163451374845*^9}, {3.773164439689281*^9, 3.773164440226226*^9}, {
  3.773190755014002*^9, 3.773190759153596*^9}, {3.773214805205216*^9, 
  3.773214807559754*^9}, {3.773215293310206*^9, 3.773215308393745*^9}, {
  3.773254986921338*^9, 3.773254987629869*^9}, {3.7733289965083933`*^9, 
  3.773329001497841*^9}, {3.774171842022563*^9, 3.774171860396275*^9}, {
  3.774202833264744*^9, 3.7742028356331*^9}, {3.7742267154809437`*^9, 
  3.774226717906592*^9}},ExpressionUUID->"2b78ba2b-ca69-40f7-a718-\
85bd1ee0fd5e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dir", "=", 
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7733290093954697`*^9, 3.773329016503849*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"2d49fee6-0fc1-4f2d-be82-8cb69efbe488"],

Cell[BoxData["\<\"/Users/thorsilver/Downloads/Wolfram notebooks\"\>"], \
"Output",
 CellChangeTimes->{
  3.773329017635899*^9, {3.7734927077811537`*^9, 3.773492718275812*^9}, 
   3.774171834122046*^9, 3.7742267514462214`*^9, 3.7752215814152193`*^9, 
   3.775222120731801*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"560a82c9-5362-4524-9585-da4b03fbea58"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"netECA14", "=", 
  RowBox[{"Import", "[", "\"\<netECA14-r20.wlnet\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.774226756471808*^9, 3.774226768170888*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"76c414b0-2354-4828-b57c-fffb57f07863"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["15", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{24, 3, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 24, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 3, "$InputSize" -> {128, 128}, 
                    "$OutputSize" -> {126, 126}, "$WeightsInputChannels" -> 
                    3], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "bat1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{24}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 24, 
                    "$SpatialDimensions" -> {126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "ramp1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {24, 126, 126}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]]], "conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{16, 24, 2, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{16}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 16, "KernelSize" -> {2, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 24, "$InputSize" -> {126, 126}, 
                    "$OutputSize" -> {125, 124}, "$WeightsInputChannels" -> 
                    24], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 126, 126}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 125, 124}, 
                    NeuralNetworks`RealT]]], "bat2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{16}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{16}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{16}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{16}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 16, 
                    "$SpatialDimensions" -> {125, 124}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 125, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 125, 124}, 
                    NeuralNetworks`RealT]]], "ramp2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {16, 125, 124}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 125, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 125, 124}, 
                    NeuralNetworks`RealT]]], "conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{24, 16, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 24, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 16, "$InputSize" -> {125, 124}, 
                    "$OutputSize" -> {123, 122}, "$WeightsInputChannels" -> 
                    16], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 125, 124}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 123, 122}, 
                    NeuralNetworks`RealT]]], "bat3" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Scaling" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyArray[{24}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyArray[{24}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.001, "Interleaving" -> 
                    False, "$Channels" -> 24, 
                    "$SpatialDimensions" -> {123, 122}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 123, 122}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 123, 122}, 
                    NeuralNetworks`RealT]]], "ramp3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {24, 123, 122}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 123, 122}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 123, 122}, 
                    NeuralNetworks`RealT]]], "pooling" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {120, 112}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 24, "$InputSize" -> {123, 122}, 
                    "$OutputSize" -> {4, 11}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 123, 122}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{24, 4, 11}, 
                    NeuralNetworks`RealT]]], "flatten" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{24, 4, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1056}, NeuralNetworks`RealT]]], 
                    "linear" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1024, 1056}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1024}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {1024}, "$OutputSize" -> 1024, 
                    "$InputSize" -> 1056, "$InputDimensions" -> {1056}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1056}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]]], 
                    "drop2" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.2, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]]], 
                    "linear2" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{4, 1024}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{4}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {4}, "$OutputSize" -> 4, 
                    "$InputSize" -> 1024, "$InputDimensions" -> {1024}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]], 
                    "softmax" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bat3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pooling", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ramp3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pooling", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "drop2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "drop2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3, 128, 128}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {128, 128}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, "Interleaving" -> False, 
                    "MeanImage" -> None, "VarianceImage" -> None, "$Version" -> 
                    "12.0.11"]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {1, 2, 3, 4}, "InputDepth" -> 1, "Dimensions" -> 
                    4, "$Rank" -> 0, "$Version" -> "12.0.11"]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"128\"", "\"128\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bat1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bat1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ramp1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"126\"", "\"126\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ramp1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"16\"", 
                    "\"125\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bat2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"16\"", 
                    "\"125\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bat2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ramp2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"16\"", 
                    "\"125\"", "\"124\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ramp2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"123\"", "\"122\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"bat3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["BatchNormalizationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "bat3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"123\"", "\"122\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "bat3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ramp3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ramp3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"123\"", "\"122\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ramp3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pooling\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"24\"", 
                    "\"4\"", "\"11\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pooling"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"flatten\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1056\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "flatten"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"drop2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "drop2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"softmax\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.77522212415726*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"83f18fae-4edf-448f-88a8-3584fd7af270"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generating test data for Network XIV", "Subsection",
 CellChangeTimes->{{3.7742266909286623`*^9, 
  3.774226701142276*^9}},ExpressionUUID->"c219e134-7847-4218-9bfc-\
805cb9970bbf"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"testDataECABigC", "=", 
   RowBox[{"dataC", "[", 
    RowBox[{"128", ",", "128", ",", "1024"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData2TBigC", "=", 
   RowBox[{"genData2r2C", "[", 
    RowBox[{"128", ",", "128", ",", "1024"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData3TBigC", "=", 
   RowBox[{"data3T2C", "[", 
    RowBox[{"128", ",", "128", ",", "1024"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData4TBigC", "=", 
   RowBox[{"data4TC", "[", 
    RowBox[{"128", ",", "128", ",", "1024"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData5TBigC", "=", 
   RowBox[{"genData5TCC", "[", 
    RowBox[{"128", ",", "128", ",", "1024"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fullTestSetBigC", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
    "testDataECABigC", ",", "testData2TBigC", ",", "testData3TBigC", ",", 
     "testData4TBigC", ",", "testData5TBigC"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "fullTestSetBigC", "]"}]}], "Input",
 CellChangeTimes->{{3.7727181209651337`*^9, 3.7727181544477663`*^9}, {
  3.772718196797276*^9, 3.77271823838671*^9}, {3.7727184594178867`*^9, 
  3.772718461126959*^9}, {3.774192047474938*^9, 3.774192068250688*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"cbb6c1a1-3c82-46e6-ada1-b2f828f91bc9"],

Cell[BoxData["10240"], "Output",
 CellChangeTimes->{3.775222319601818*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"8cbbf700-8980-4f97-a87d-175854524ffc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomSample", "[", 
  RowBox[{"fullTestSetBigC", ",", "10"}], "]"}]], "Input",
 CellLabel->"In[59]:=",ExpressionUUID->"24a3e4aa-8895-4fb0-bfba-81f3bdb3c37c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2TGqJkUUBtCHgrgNcQeKmcwguIJxBU9QkwFhDEQwMDKfyE24AMVE92Rg
6AwYTCJMV9et/ur2CRyOQ9vv/XWrvlv/9YMvv3329TsPDw/fvf/qj2eP33/2
4sXjD1+89/pfvnp8/vFHz999xZ/+++e1/3r45ck3v3/y9PMPH5++6V9/e/nk
x3/+/vTnP/948qbf5vlZ7zz6nv9755nff9bPmrWGs37nijWZtQ5n9k/Fz521
H87UZeV7zqxPxf5ZuSazMvCq+s7Kk4qzVv1ZKvJwVp5X53DFOldnZvJ/W13r
BM/Kjer7TMU6r/wsybWrzt6r7rfVOVydq1ed31lnJyHfrsqBhM91VeZflTmz
7nUVd5tdanfms8zKuup7b8X9duVdtDrzK3pEQu5V5MAuvSAh82dlTsWelPlz
17/6Dp98H6j43pF8NtOyLuEemLA+u2f+rLvTrLp3yvyV+7a6XyTcB2b9/sln
s+I7Qqf8T+gFO2b+ynvdVc+n1a76XK/Mlop8rj77aee0eg8kZP5VPTftfpW8
r6rvFWl7OGHdKvL5qt608n57B1ff0+6Q/xW9IDnzV65b9X7olPkVd7+renr1
PaTrOVrZHxNyPi3/K37uHfbqLt8rEzI/IW8raurs5GRR2p1qx/zn3vmfljlp
Z2TlfZ7n7plZeyzhbNpL+d4l/9Py6uied0bY/CenFpyf/2mZf2bdjj7DPWz+
Y28nO21fJWd+RYbrBfe0+Q8nOCH/Zf75mQDn2/wnpxZ8bf7vnvmz5jzOUW+b
/9i3yV65r3bM/FlZPeu+l7A+PHePmf9wwj6s2G87ZlrCnS1hHXhN5pv/cMKe
nLXHdsz8q85v17XisTqa/3DC/pT557P6zPf6hM/Oa/aV+Q8n7MOj+61r5ldk
tVkQm//k1ILfPpfOvGd3z/o+fmbduq7tHWz+Y98mW03XZHJF7+B9bf7DCXvv
6DN3q+msO9iZdb7bmne1+U9OLfj8Xkr4/RMyv/rs3239O9n8x15N86x7bKf6
rvw+XtGjE9aQM/eb/Oej+X/m73dxdVZXP9OpFnew+U9OLe7sM7Xb/f5Zkatn
9v+s/1/AmTb/sVcTXJHbu/eC6qye1U93X1s+v5cSsl3+7+WKuXT1rDvBs7K6
os8mrA/XnceKMyj/7+OK7Lrb3XXH35kzbf7jHO24344+I0uZx86p+Q9ftd+O
1q7rzIc57Qzu2Avkf46P3iuueidzV5v/yIEEn/m+OeudzHz+PCZb/ue4YuZz
5v3Md7b5T04turribl/9DHNXm/84+wl77+j+qXiGmcfOS0K2y/98z6rLmWf0
AuaxDJ/1Hvl/H1fcJWbtW72A72zzH+d9ZeafWfNd3sm8u81/+MyemfX8Lu9k
3t3mPzm16OSKOcxV72TuZPMf5z1hv52pV8U7me9s8x9emf+7v4d5d5v/5NSC
mXll5lf0iITMl//MzGN9wfyHmbm3zX9yasHMvDLzK3pEQubLf2bmsb5g/sPM
3NvmPzm1YGZemfkVPSIh8+U/M/NYXzD/YWbubfOfnFowM6/M/IoekZD58p+Z
eawvmP8wM/e2+U9OLZiZV2Z+RY9IyHz5z8w81hfMf5iZe9v8J6cWzMwrM7+i
RyRkvvxnZh7rC+Y/zMy9bf6TUwtm5pWZX9EjEjJf/jMzj/UF8x9m5t42/8mp
BTPzysyv6BEJmS//mZnH+oL5DzNzb5v/5NSCmXll5lf0iITMl//MzGN9wfyH
mbm3zX9yasHMvDLzK3pEQubLf2bmsb5g/sPM3NvmPzm1YGZemfkVPSIh8+U/
M/NYXzD/YWbubfOfnFowM6/M/IoekZD58p+ZeawvmP8wM/e2+U9OLZiZV2Z+
RY9IyHz5z8w81hfMf5iZe9v8J6cWzMwrM7+iRyRkvvxnZh7rC+Y/zMy9bf6T
Uwtm5pWZX9EjEjJf/jMzj/UF8x9m5t42/8mpBTPzysyv6BEJmS//mZnH+oL5
DzNzb5v/5NSCmXll5lf0iITMl//MzGN9wfyHmbm3zX9yasHMvDLzK3pEQubL
f2bmsb5g/sPM3NvmPzm1YGZemfkVPSIh8+U/M/NYXzD/YWbubfOfnFowM6/M
/IoekZD58p+ZeawvmP8wM/e2+U9OLZiZV2Z+RY9IyHz5z8w81hfMf5iZe9v8
J6cWzMwrM7+iRyRkvvxnZh7rC+Y/zMy9bf6TUwtm5pWZX9EjEjJf/jMzj/UF
8x9m5t42/8mpBTPzysyv6BEJmS//mZnH+oL5DzNzb5v/5NSCmXll5lf0iITM
l//MzGN9wfyHmbm3zX9yasHMvDLzK3pEQubLf2bmsb5g/sPM3NvmPzm1YGZe
mfkVPSIh8+U/M/NYXzD/YWbubfOfnFowM6/M/IoekZD58p+ZeawvmP8w9/O/
HYDJyQ==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztmTGubkcRhJ+wZJEiyBEbIIDciC3YKzASRBZYJkBkLIFlsAkWQsIyiLEl
gkMwVpWrvp7+731XAo2Pzj+np7u6qnreL373p8//8KMPHz78+cff/t/nX/7l
t9988+Vfv/j0u//4/Zdf/fpXX33y7fJv//vfd+t//PST3/zrPx8++/onv/zN
af2zT//+2T//+PVn//7i5/+3dt9X9nHfT+Jv7Z/kzX3n1v6TeVD2SWrt7u/i
h65X8n5S31bv0Ofa0IM0n7T4QfnWh8PfaX/3HWX/03M3fjfmpEbKGZM80PvT
+FG+5a6TcyWYn6yRG2fCV0luEw11z7WhB2k+cWuhxNnq8cQXPWNreTNiHkn8
jIO178tDsqeb56THlZhbWKIxkPBnq0ZJn572V3gj8Z/Kdwn+mezBlldPvKvb
a26NkthO77e0z/0j/F4LhwnelLMTeHPfV+Jv+X+3psk7Sp6TGilnad0zJDgh
PG1yLzHZgwmuXN/Syr/bm4SnSjB2qqMbc2vGSerSWit4TvB2ix9acyUxXxA1
annOSR/b8o2tXNE9mPB8y7e05o4Ew8S9QUunXB/VqukkDol5ytXHSX5I5sqk
pm5+btU0iS2ZfZS6tOo4mZPEOxG+RelZF+eTOU9ivtVHiY5PnuWWJ3drquB8
A2636XuS85aPbfk0oo6tnLS8E613ScxJHZMeb3kPGjMtLpr0kBs8OcEPRC8n
Pav8dnNN3Xfosyd1vIX/WzNIC9tuHQn/M+k9iNltWw5veXKCH1pa06r7pL4T
NXX/6LMn9W3lJPHGrXhob+CeUcHD6blbd9p7tPZMdIHOYZKTlidv8UPCaa3f
3tJ3uqansz//XK6medKtF+G1CC5qxePGdstztmJ265LsmazpHN6a2QmOeu5D
4LM1axD6fqump5y3+ouOk/ZatEYk8Zx+2+rfVu/TPNnCdutcSj4JrSTqSM9r
RN0TjnVr0dKUWzVNdPO5f6LLSZyEX1UwMOmfT3lO+lSpXeJPaJ5sYVupdUvX
lDq29mzN7Kf8ELVozdpuzAlXtzRlsqZJL7e4l7gPmfS6bk1veXgFS8msp+SB
4DQCY621G7+SQ7qOhO9K5oWWr3ZjdvGc6PtkTZXn7m9b/jbRSpoHCD9JaGJr
BlH64oRbmicJjCn1SrSsdRaijsk+rXmW9jz0WRJNecWaJrOby4fJzJXwgPut
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
mrb8W2v/V+kvwmu5mriBz1v1JfDW0s1kTlF60/3WhucJ5yT8SXyL9nuJx6D1
2u2FVszJuW71F+G1kjy4tdvg+d13XLy1dNPFVQszbh4mn9Pzb8sH3uL8Fi+d
ct7Sa8LLKTEnXutWfxHeifacr75Wzq7UNNHNlo+i+Y1+Ts+/iZ62tLg1myTe
lfCZBD+4MSu9duplt8db/UV4syQPLY+9ee3WuuUJ3Rwq79zSmtbzltdye7xV
i9Nz+m6n5V0JvVbySeup2y/PP9rLJZhJ3n9v3r7FM61ctfKsYJXWmhZHKb2Q
8JKbq6SORJ8qunP6I3S/da4ED8S8Q8xldO8o7yvYcM/yimsFV609kz5N9IvW
mlPMynPlvIrXcvch9LEVW+tcz98SPJ/0kbs/zZn0XDbZO6d3CF1+S2tlBqS/
5dbCja11LnombeH2dEbCXyWxuRhQztXSuFvYJjiTyKEbJ9E7kzPLW1qf8Eno
o/stujdbWtOaSSdnbYUTEt5o8Yx7LkLjNmCb8OFJrpKa0n6DjuEtrSf1sVWv
pDeTdxQuVTjT5bTWrE33zulbLe0j/LBb90lsn2Ij7liUdwidTepI5LmFh81r
F1etufWW7tzyePQZFdwScdJ1JOYjwmNMYtv1G/S9SktnW149iZPwnK+ybt0J
uN+idYfO1YbZk+DAxG/TPrDVs/RsS+RkUq8JHibmWaIu2zznZh/b8qjK81u1
OH331uypxJNoR3LGpI4tn+zG0PL/yndbOWnpdaKn9J7K/q26JN96xfXkfcWG
OZ3IW4u7Wj7WxfwkZlp+lY7Zzc/k/EXv3/LAyvtELxD89pbWbs6JuWnDnE54
iUQv3Bw+n9PYTjDT8qtu/lsxT2Kb4J9X4bfWrJHU/Ra3bMs5MaMlHvX5dwvD
xAyb5JCe1xLMtDxtCwPEvNbCdsJ1BE9Ork+5asXm8ttmfaRz7r7j9g5xV0Bj
OOkjmquJeY3Q+pYfdjHgxpz4n493Czk/n/JJ81sLM6+ynrynnVxvyy3B1ZPz
WqL1rlaenk/i5JSfVmxurt7q+nl2wuO1Zs9t3NLKOYHhyf7d1lNKHhKubvmW
1v22e5ZEK1tYcnvh+U7CIa1cvaU1rd1JzrdxC53/BMOEzk7eadB4Vvg54Vi6
d1y9U/ZR3ndz0pqnaB/o5uotrU/nJTzeSccVvD3/NnALkf8W9ibveLf1lItD
957TPdfkfJTc2d7yeBty+FbvFpI8JM9PdSHuGSa5hc55gj0lD6d3lP5NZvYN
PeXGSd93Ed7V7RclJ8m5lG+1dGGyX97SWqmR8lzB0uSd8+b1Buwlmt7yAxs0
N8FqcnaldxL/0PJUhMcj+GoDrl5xTd8V01jdxi2b10q/KP3l/vZVzq5gNdk/
4VgF57S/Sr7b6tNWDt/zWqljoh20b0lifs/rpN9PvfYqc1mLl2judblx0msl
/di6q3kPd8K3+uLU760eSXqn5eve25rmq81zmfLdhJdo7m1hfvKuVel9Fw/v
4U74Vl/Q+Wz5BJfHNuR523qSrzbX4sRFCi/R3NvCvPtbQtMJHXkV77F5Tddd
6RHlecItH+s+z1fJd2/hX8Ebzb2JL0p+S2i6cvZER1q5em9rApMt3U80aBu3
bFtv85kb8O/eIRMc5fbpKR4lziT+lpc45T/5lpurDf24YZ1g0q1Foh2JRrzn
ddLvhM90Y5vUwdYsTHCRq02tGU3pZSUnrs4m/f6RH34YhyuYTGqhfCuJZwO3
vMo6qQVRx1s62Pp3jZaO0DErez7fcWNu5YS4f/jID3qtXcxs8Fof9f2HYSC5
A2lx3a2zKzkh8ulyURJzS79cfac18fTdj/zw/Xlr6e8pzy08tPhqQ/43rIk+
JbiOPrsbg8IzLU5uxZzoC6EXxJySrN8bP7T0V8lngofJs7zn9eSdxoZatLDR
OqPC7TSeEw5s9W/rOTFrvPo6wVWCzyS3p2+1zrKhLhvwoORkcmafxH/yjoLP
Vm4J3r6VTzeH7ndfcSadXCfePvF4SW4Tr/Ue9D3JZ2vubv1285q++3qrvETP
jAneXhGHiV4rf0nPPvdp+f9TbO65Tvu8h7VydkJnN/vYJG8tHlPuTjfkgc5b
wgMJn78Hfjhh7IQ3QnPd3Cb/jqOccUNdNqwV/Cu5dX+74exJH7U07j38GyXt
4V1MJnr0Kuvn2ek7sda/7SY94v4b9Kv3FNGbic6+1X9rU/gk4Ry3FhtykuQt
yY+SqxMmXU5T3tm8nrxzc3NF98hb5SKiN+ncvvqdNnHeBP+vmDeXk5W/Fte9
4vq/lr1pzQ==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztlzGqZlUWRgsV6RkYd2SuYFiF4Ag01aAEjQTBDsTE7tiR9CwMnEv3NKwC
AxPhHs/Z965v7xUoS3nvf/ve831rn/+fX3//+bfvvHjx4l//ePOvz1//+OkP
P7z+6Yv33/7HN6+/+/ij7959g//545+3/O//f//q1w/ee/nrRz+/+uqTX15+
9r8PX/323y9f/vn//xX/1c9f+Zw//8zq5+z83VPzXOFTn1/xDlfPtPocT73/
nb9b/X6qn2Unq6fmPNW7lH7dmY3q91aR4WovnepyxXs+9W538lbx/k95oNqN
dz7XnXeYHXfdmeFqn9zZr2p/3rkrT3Whwv8V51X9XKfuFU/NTL4bV/eo+p5A
uEc95fw73wPhbnxnB+/ciU/dHwiOrdizhDmrM3bqu1vF71bcf1bPvcL/p3pR
fW9/6jsm4d1WvJ9Td5in7g+0ft15ZyDvAto57pz7qV6feq4Kl1a85zvvCae+
uxHebcW98c476lN3Qlq/Ku7MKf4nnGOiK9L9X303rt5Nd77bU++K7JmdTlX8
PM3/nZh2jmRXnLofEvx/yoF3Op9wT66Ys/pZqp1wyhuE+9Vkrugd+f5/pwMJ
/t85o1PdJ5xv9f6qzsBTTrjzDvDU/WoyV/SavAt23HKqCxW+ot0HyLug2l0V
GSA4/6m7X6fdSuanek3YCxXvqsJX1T5ZzQDNCXfeXWlnV+3qO/dpp92ayO6C
ezpV4Zmn7oSnXF19VzzlavLZnXL1U2edvls7sbvgbKcIe6qiU085/9Q9v/qd
ELy0c46EzJN36wSevAtOeYa2C3Y+h3DnPzU/bZ/e2eWKLlSfKe19TuOuu2DV
83c+OyH/ZOcTPEC+o57KFWGPk3frNO66C648I+FeVJ1/ghNS/E/w/M7ZPdXf
CreT89CVCVm68x5CeMaKXUB2fqL/E/tIy/addx555i7Y8QnBkxW97npeXflO
lz5176q+v8kzd8Gqz2n+33EjbX79X+f8U+f71Oecco7sLjjlRvKzPNVr/f9s
j9J3fcW+kzlM8Gf1vYjcr3Se7P+K3tHOdKdHhPcsM3fBzmx3fqas/yf4v6Jr
5iGXK3bBzudXzEzoXTrb9x7+X/W8d/45fGoXnLpjPDWPrP8n+H91fnfBHH4q
J6ecQ+hXJ9b/Pfx/Z2flflxxl9jJpHd+/U/mlExW9F3uwU/dQ3ZySOhUJ9b/
/fx/qvuE9yzn5nZnhqf21zTW//wenbp37fSL8M5lfm5PufrK7xJ6l872ndmj
p/pIeLdyVm53Zrhzp8j6n9yjauevzkl4zzIzt6ve2LnbV+wUWf8TelR9jqd2
BOGdy5zcnvrdnV1A62Ai2/ce/q/umtyDn8rt6mw73xcIvUth/Z/Vo+qumYHe
fGdudz5/1UuE3iWy/uf3qKJrO88o5zItt6fu/ORnIbN9n9OjnU7JPTglt6cc
RZifzPq/X49O9YLwnuU5ud1x1M73iMms/3v0qMLt5qEf03JbfQ8hzE9m+967
R6u9ILxb2dzueCnlGQms//v16NS9iPCe5Tm5XfXSzv+X9X+nHlW43Tz0Y1pu
d763rmaV8Fw0tu/2yHOfw+TcVnjbXaD/7dHfyz/hPcu9c7sz/52f2ZX1f78e
VewIwjuXe+R2NWMVuSW8BwLb99we7XjeO/9MJuT21F1lJ+eE90Bg/Z/bo1N3
e3fBHO6U2x13EZ6XwPq/R48q3G4e+nFibney7Z1f/0/o0arnvfPPZHJud7J6
6jOnsf6f06Ode5Tcg2m5PTXzjscInSW8f7vfo0fVvZNzmZDbK3+X9jNd2b7n
9mjH8975ZzIttzt3j4qfmcb6v0ePdu727oI5TMjtqdl2fsZdoP/Te7Qzw84z
yrn8VG5XfVuRz1OzdWL7ntUjQu/kXL4ztztOTv/MFNb//B49lWfCe5azcruT
sfTPTGT9z+zRnb1bfUY5l5/K7aqTTzm84jM7sX3P6tGp7wLe+WcyIberzln9
3VOfOYH1f26PTt3t3QVzmJDbU3+X9jmJrP9ze7Qzw84zyrlMy62s/xM5pUdX
5vfc53BKbmX9T2Zyj1bndxfMYXJuZf2fwrQeVbjdPPRjWm5l/Z/IKT26Mr/n
PodTcivrfzKTe7Q6v7tgDpNzK+v/FKb1qMLt5qEf03Ir6/9ETunRlfk99zmc
kltZ/5OZ3KPV+d0Fc5icW1n/pzCtRxVuNw/9mJZbWf8nckqPrszvuc/hlNzK
+p/M5B6tzu8umMPk3Mr6P4VpPapwu3nox7Tcyvo/kVN6dGV+z30Op+RW1v9k
JvdodX53wRwm51bW/ylM61GF281DP6blVtb/iZzSoyvze+5zOCW3sv4nM7lH
q/O7C+YwObey/k9hWo8q3G4e+jEtt7L+T+SUHl2Z33Ofwym5lfU/mck9Wp3f
XTCHybmV9X8K03pU4Xbz0I9puZX1fyKn9OjK/J77HE7Jraz/yUzu0er87oI5
TM6trP9TmNajCrebh35My62s/xM5pUdX5vfc53BKbmX9T2Zyj1bndxfMYXJu
Zf2fwrQeVbjdPPRjWm5l/Z/IKT26Mr/nPodTcivrfzKTe7Q6v7tgDpNzK+v/
FKb1qMLt5qEf03Ir6/9ETunRlfk99zmckltZ/5OZ3KPV+d0Fc5icW1n/pzCt
RxVuNw/9mJZbWf8nckqPrszvuc/hlNzK+p/M5B6tzu8umMPk3Mr6P4VpPapw
u3nox7Tcyvo/kVN6dGV+z30Op+RW1v9kJvdodX53wRwm51bW/ylM61GF281D
P6blVtb/iZzSoyvze+5zOCW3sv4nM7lHq/O7C+YwObey/k9hWo8q3G4e+jEt
t7L+T+SUHl2Z33Ofwym5lfU/mck9Wp3fXTCHybmV9X8K03pU4Xbz0I9puZX1
fyKn9OjK/J77HE7Jraz/yUzu0er87oI5TM6trP9TmNajCrebh35My62s/xM5
pUdX5vfc53BKbmX9T2Zyj1bndxfMYXJuZf2fwrQeVbjdPPRjWm5l/Z/IKT26
Mr/nPodTcivrfzKTe7Q6v7tgDpNzK+v/FKb1qMLt5qEf03Ir6/9ETunRlfk9
9zmckltZ/5OZ3KPV+d0Fc5icW1n/pzCtRxVuNw/9mJZbWf8nckqPrszvuc/h
lNzK+p/M5B6tzu8umMPk3Mr6P4VpPapwu3nox7Tcyvo/kVN6dGV+z30Op+RW
1v9kJvdodX53wRwm51bW/ylM61GF281DP6blVtb/iZzSoyvze+5zOCW3sv4n
M7lHq/O7C+YwObey/k9hWo8q3G4e+jEtt7L+T+SUHl2Z33Ofwym5lfU/mck9
Wp3fXTCHybmV9X8K03pU4Xbz0I9puZX1fyKn9OjK/J77HE7Jraz/Cfw79fqp
/g==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1zHKX1UQBfBgUFyFYGysY2FlgluIjWAVQauAEBGxcwNux8qtuBcTsA18
H+/Nnd+ZewtllOS+mTPnnDn/z3/85dXPHz158uTXT9/969Xr3799+/b1H999
8v4/fnr95qvnb56+K//8/5/39fPPnr74+rcfXv797N8XX37/7OU/z//65vnH
X7z80P//0J95yJ+/Uj/2Wx/681d6voLVXX0+pP+KeSv4cGWWal514XYX367M
spJjVzCpwHYl/yt4eIVLFfVKbVb3X+0PFXdthzqRV7vVZ0dmvTJHrXxnN75V
YKLV1XdTmDG9Pjvap073vUS+JfacyDFh9pT67GifWs7n1VyVMdd6FnatfWtS
fXa0Ty3n84osIfAtsecUju12T8+OTp3iP4k3RdBXokZWcmy3e3p2tM+OEv1n
pY9p72j37nBsxj09O9pnR133Xe5TqytmqcZqZ47tNsvUuSbNImAlZ8VEDO/6
bVv9fhcmwk6nzjJ1rkmzdGEleG/KHqfm/+rvChzbbZapc02aRcCqy3tT9rgS
Q9nDu+p0jchZJWWuSbMIWHW9mbLHLgw1bNN52/UtOavI70+dJVE7u3l1Rf+T
8r+W67RvyfxPmWvSLILnH6++d14Zc62flTcx5f523Wt5rkmzCJ7/kD+/g1dr
2aMLq93u9Q7398zlzCJ4fmKd4kvV2aBrFoFvwu/odH/YbS75dnTl/Me+o+1L
86VqXgm9Jd7rdH6eufxZuvSSqGthlkn5KmWWakyEGRN5O2mulJ6rc+BKDAXf
kHNIyt5TtKb5icYT4f2V303BSr6tKd8S3pd9UphFw2plD12zC++v/K6MVZdO
hdwlf0vzsR08WctXd/3drp5TdNE1l5YlUn77aH6l3W5hLg1D4TfOqXt10TWX
gFXib5+V907zE+F2VO9d0/td/Dm1mWm1uTT+r+xzJf4yVyd9N0XvKT6TWGuZ
VphL47+W/2W/2s3D030jXYOJ9c45YWWuFnQn7PqxvcleKn9X9o0ubgt+K9Qp
fiW8r907rR/hFk/1cG2/6Xlj51uQ6Fdd72s5TXtnpVfs5uEn/2RlTrmuuNcp
OSElh8i14BVTPVzoX+htUtYVakF3mo6m7lrISNV7TPdwQTtCP9V6rMBE0KZ8
Z+WbNQmfFMy1WuCevEeZexqHBc2m7z2FAwI+MuYre5M50IVnYv5J8WoBq0l7
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
       "], {{0, 128}, {128, 0}}, {0.,
        1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzlmr+qb9tZhg8KQUQIBAIp0ngBNtF6H9JZJ4j1EU0VCCSFpPM2vIXkGkKu
wCqljVVKwdbKBCx24YT34XnfMcfaFvswz+K35m+Mb3zf+2+sv/yHn/3oJ3/y
1Vdf/eLP/vCfH33zzz/8+c+/+eWPv/XH//mnb3761z/46Z/+4fFf/vffH5//
6m9/8fV/f/8/P33vv/7109//3T9+/Z3f/fmn3/7+u19//vOn56fPJz9vPZt1
LvaSvN+sZ1HPt76Xrsf0AO0TU59W3RbvX6+zNRetWq17rFXbxQwmn//9b/7m
67/4t//49P1v//unX//qV//nv8/f8/SZp/d8/vPPn82cPn1Xss7kH91LUkP6
ebpOU0O6ntY5Jut5+q6kB5Ln1vnS95vepu+n80LX2ZqLFg7QM6V1S/4teoye
NX1ucVnr/QstTZ9NDWlN1j7oqSZmPQvtbdZDsYue9dPe6fkuZuot3W7mYu13
WmtreYST6zH9TLmM1odqNqOlqcb4KBhutKKZ/YX2bmFRC0OobqHzmPTqon9a
ut1w99rv0DNdzOCiVgvsSvZlcifqU4xOMzNycgZbWGp4n2ZB9Hsp/tD1UA9u
zvrpdw0WtfqK9k9LH5qeXGitBDcoLy+yCLr3RT9//kz3m8xsK4dp/e5TPVvc
scZwc9ZmFuh8tTy7Wb/JZCiXGf3T0gYGQ+i5m0wg2aPpDeoNzftpFtHC6pbu
TXQ1nWXj16g/NZ5l4U8XGL7QkPT9rTyH9kDLY5o60H42ON/iF6NhKFbTdVJv
0sIcel50Rqhvekv3tuY98d2t+y+jM9f+lOrhlnY1ezfZL32nwQfjMalXNZn8
oj8Nv1ANYzI02gOtTM/kb9TjLPQ2rY/RvfTzT+feyjbNXQnVEgt/aupMMa2l
yZNZSPq8xY8trb7g/ZafMvhp8Ir601Z+tc70zPqNvzBZwaI+LV+ZzKbxg625
TvgowVUzswaLzN6NJqf7Mn6tpf+Tc1zwvjlfquVMz7RmvKUh15me2aPxEVQz
tOq/0BWtfmvNXXJexnMl2QvV4a37HYppCT638If6tYX+p1hheJ/mJGuuT/p/
MfsGYxeZntnjwi+sdXhy7i1dYfRbS28ns7zWok89Q/GQ/m7Lt5rvXWjjk/l/
svfk53SdSV5qdA6dhdbst3RjK/ege6QepMU7hqdo1rfwTWb2KRa1+LqlRZ98
n+Gg1h0BXdvifqGFmSc5Ivm5mc0Fpi10wvrZ1JNySsuDUPyhGthwccubJOey
zj9p/rbIDI3+T+pjsMvsMek90z9mZhf5v9HnRk+2fGVrxlt61TwvcC/RY8ke
qT5MdK/pN6O96VmbPm/lnwv/QutjNOSCi1t3BC2so+fY0jBrjjipmek7F7n3
gtfo3lt5OM33Wt7f9KrBloXvo2dhMp9W/Q2GGxw2upfu3eiKRc8k50h1V5JN
LTiCclYr4034vXVe9P0LzE/6PPn84ntp/1D/Qs+IYrLxfaZvKZa2spdWZmg4
iJ6F4SDTnyf1eUsLJT2/yP8TzmrN7yJ/M15vgb3JGSX6dpEf0v6h52W8idEh
i7Mz2NXKXpI5amEX5Y5EX1EOolhE57qlzxdezGiJk/q/pQFa+VtLp7Uyeap7
W5lbKw8xs2Z0tdEhRucb/dnSz2beFxxE55dquUV9Wmfa0qK0zsksvKX/6ZoX
/WA85iJ3pbNmNBjlPnN2i8yqxXctjk7O0Xhhk70kc5T4x4V/MXrG9KTBLnOm
FENaesPkGC39T3/3JIe28mfqbemsUU9N+eiktkzq0Oq3BUcbbUb7sKVnzEzR
Oi90GsVM408XPUD3aPSGwYGW/qdrPsmhhgfpWZtZW2Ru9LmlLQ2+tTSY4ejF
c0v3tjQMrclCt7dwINkL1f9rXjDvbPV8UkOzX+ptWxxKs4iWTjAeP+FNiocU
/422NJrTaCGKh09rW+dCJ70MnSl6R9PSaUbHtvxUqw/NLLe0hOHr1j2d8bCG
QykvLHLCRV7d4iOK+bSvaI8tdHXL57a0X6J5WnnjQkMmWtF4Dbpfil1v4Tz9
ruQzLb4wHtzwONU5re9qcZmp7WLvCR+tca/F9UZHtXxuKwdoac5Wrms0pNkX
7Y3WGtZ64+QzvbtsYTJdQ0uDGb1kNDz93aS2xs8arULPcc2/LYxNchuqFVtZ
EO2HRf5Pe3u9r5Y2O6n3bnum+UzrXsb4LKrBEv3Q0i1J3xq9QeeX7r2lRSnu
neT6he9Y+BSagdD6Jz6OcuIim6IYRTXVWu/d9pycu+GOJDcwPWBm7WmdrTvT
BENa2pv2XsKbRrMZ/077inL9wncYf0Fr3soJW9xq/FFrXwseb+m9G3CeatEE
EwzWncxvzZ01faep+UJvmzk6eZ+Y4K3BsQRjW352cXbrnJByawtXk+99WoPR
mYZbP7rmX3jSZMapHzxZW4MbpuYtXWqyTTMXlDuoVqScS3sy2W+rJ+nZGe10
0iMYvUG1BO2ZVp5jeu+GZ6oNjCc1fnCR3xoeN7rd6BajSxOcMdlpCw/f0tiU
601P0rNLPJHBIpNrtfrfZIPGYxqeWvTn+rmVq9NeWuiTRU0WPUDvyExus8hJ
TE2S9bc4saVz6M9NT9Kzo1r3Bs5dZIP0vIzOuS2XWGgh8/kWttDcb13zRQ+0
akX3TvWhyU5v4MT1vbM5l7U/Mv5xjWmtbLClW1pzus4lFpiWYGni91vYss4b
F1ol6QGTGSY1X98dG/w5yYkGc5Ka01kwd14J57buNZKzMD3W0mx01ijumRzs
5izI6DTKxQZbbrtPaeUhplYJbpjea+EY7cMWJxrMad1Jmbols0A1sPEIrb5q
zfJTn7Qy5JYHP5lLrL1A0idU+y306smaJPUxd7IUo9bef8E7C/3Q6iuTEa35
upWpGpw/iWmt+wKj7alWWecSay9AP099fUtXnKxJS0ss8plkL+Zem2LXSf3Q
yoiSuaZ43uJrujY6j0az3eDBk5lteYSW7vrozwk+mHm/YY/JXBg9sFhD0v8J
tqx1ptEPRvsZbbnIXhY4luTh9NwXeaPp+Za+Teqz1l0f5XmdS9xWNzOP6x5u
9eECV5N1Uv1AOcVkOC0OMnWjONbii1afL+bO1ITWyvCR8aG3PZsMIXlny7/f
wAutPK2liyieG1w1WSvVmS0Pkqy5lb2s88Bkna330NreMLPJHs3fJNAeu6EO
LX6kuUTCFx+lbid5qtWHJ7nbZK2Ua+g7W3uhPNvqGcOPpv7m8zdotkRvrP+2
4aPzYwvP39JLrfqYbOdL5e5kBo1HoLxw0m/S/mz1jOHHBOvo/e/N+o3qgeS8
PnoWlPCUybeNf7+hbh/lb73e4m6jw01OZbT9W3jV+luahXZK3tm6N79hLha5
YnLWt3HimrNadbitbjes5y3upli6uNejWGR4ZDFfVOdQ7U3vNBf48JZ+M71h
/C/VJLdlGgvOMnVo6aXb9NtH5O7k5wbfWnun+LNeZ8Kt9PP0rCkXG3y4LSM1
9xc0t/wof99C70QWXrLFoW/10g3rWXO30XIU38zen+pg8MesM9EGT+83OcMi
66D4YDK9xVzQXNTkWrfljUY3mp4xep7Wc13Dln77KNydzNHTHpPPGN9kZpZi
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
jK1+o54uweFWNpisJ9Ek69lMMG2RQdHvNRhi1knXYLxhK+9q3aGveaeFM0aP
Le5DjTdp9TzVXWvt1OKjFn62+qqVzyTz25pNkzOYPbZ6O6mP8V9Uk9N5pOfY
ysmTWV7r3tZdRnK+yR7X55jgVSu/amFaSzu1+Ih6N8PpFEMW92gtL0l7yfRw
glfr+rTqYLzV05pbmRXdC53lhX8xvbo+L6pnFvdBi/tKimnm8wuNbTTwyb6i
c23uJlr7avH7Iv9s1cdgGvVW9J6ota+WnjHvXNwD0rXR80rqQM/RrN9wFuWj
lv43557Un+KJ0ZNrvUHzE5oP0H0ZTHham9F4rfos8knDcQaLTA+37qHWupfW
eeFHWv6Irr911rQ/jf5v8XurNww/mvUsMhDTw8m+DCaYjGVdH5PfLjiudaat
nPxpXy2sbumQt3J4io2UHxdagvZna0YW+oqeKT2vhVY5eabGo5m8mmLd4l6D
rtNgXesegfq4lnY1nGu4w+gQ6vtafoRiY0srmh77vA5GHy70QOs50TmUy1pZ
0Fv6MFnD03pMZmJ8xGK/iY9Ozt3wqckDW7xv8oHW7Bjdm6zNvN/owwWmGS3R
0uE0r7iBC1pc1sqCTurD5J7R4M/izoh6tFbm2eLflvenn2nxJvVfCw+Y9Dz1
Qet6mnOn+tBg+JP+X+PqyWdTN+OvTQ1b+jDx6UYzmDVQHUUzyYSXTb5nsGit
iwxvtjSSmTXTDwkOGy4+ee4tHZK8k+oliqstHlzXjfK70ZwLfUj1+YJPF2sw
+aTxVskeW7VtPRsvQ/VAK6sxnmWhr5J6njx3qkNaM2XuGpJ3npyFhUaimnOt
D1t3YeadrTVQfWVqRfV/0mMnNY/xMgYPk/ckein5Xarnjb4y9VxkPnQ95m7L
6IQWX5+sW4vXFnVb6ECqdek7zRoMdi14gWKRqW1rnXQvZqbofC1mrcX7pp6t
c29lRK2Zpfxuemah5ShOrnFmnYkl72xlvK01GBw+yZs0P1z3lfHdLV5urfOt
OfqS9B7FwyT/b/lKk78tnhNPusCZRSaW3PMmWcpC8xj9bLCrxZs0F13fhSXn
aLA3mWWavSxqYuaI1vBmvWf65/N/Jic0M/4WJ5oMvzWzLW1AcamlY1t3Rmbe
W/1A7zdb+SG9D6J+zeRCBicX94Nmjlp9eIPea3mBRJMbbXab5jf92eKadcZC
z4Xq2FY9aX648GhGG5ueMX2VYEgrF6L7avGFOSOaPS70+VrvrfWw6ee3OM6c
S1KfFs6cvFdq4UCrngZvWx7NaGPTM8YX095bnEWSJRq+SLg+2SPVCS3sWuu9
tzwC9YYfkeMWvEZ1SOteqYXJVM8ssgiDV0bnGE40Z5fwziKHTHDA+Mrke02e
YM7uZB5rtNxaD6+x6AYuSPqzlTGae1jD1waTDfa2sgiaGVKPZjCcaldzdonf
aekf+s63OLR1t0WxsfX5Vv0XenjtHW7guJZOo9l7a5bpWRitRfGK9ob5PMUc
msO0craWVmnpK5rtUO+w4FDKKSbbp56rpfcWdxC0H1rfexvHUZ9LeY16jbVX
MhmX4dZ139IMwTzT82rdTVMOSj6TnJHJWMz6F2fX8qrUNxlvQtfZmqOnfqDf
exvHLTgo+d1kvgxnGdygGtjo81bfUl9vvtfwprmbTj7fytCM7l34ylYW2prf
Fie27hwXerj1Xa3+bJ37goNaWUFLg1HcMNnvW3kdxdtFzyS8afQGxROD50mf
L3JLk/OvtS7NuFrafqHH1pi55ta1PjTebc31iQaj8/vRcf6pPxdaiPIm1Vc0
E17ccdM83Gh4+q+Vm7W0bivPMbO5ntPWXaTh1gXHtfxdUn/D9bT3kneezGTW
zzRzaPUMzbcN9i7y4ad+MJ5iMVOt3GztBajGa/XtyRwsySta3Jp83uText/R
NRiupxqM+o4bMHzRn609mh6gen6dD5t3trIIqkMW9xcLL9DitRtmM8GZROtS
HKafWZ+p6TfqYVteI3kP1ai3PdP+pHs0etho15aeN9re9GQrwzdeddHPJ3nt
rdmk95IUAxd51OJMqd5LPk+53ngNeqbrzOSt/mztMTmjFrYvtCXlLDN3lI+M
bqGcu8YZw2s3zKbRBlRv3IAhrZla/J2D+XxrXzdgvunPhXejnE5xtaUtKYe2
vHZrXug638pPDK+tdYJZP+W1Vo59Gy+0uD75R3/XnKnBopPPpj9pjm1wdXF3
Y/Rwsk7jQxcY0sLJp7UtsKKlA1s6wayfcnFLV9+cORiub80vPZdFtnDyjEx/
0p40upF6XpMjJXo4WWfSVycxhPos0wOLHjY6kJ7pYjbNvY/R1TfnDC2uN2dt
5oLqzxt8tOlP01dUN7ZwPtkjvV9IPk97bIEhtMdaWqvVzy0dmJxp0ntm/RQD
13evN2C+4frWWbe4tZUtnDwj+l2tbI3OmslMWj1j7kFoX7X6gfYY7U/6Nxsn
dWBLV9OzoNogWaepofnMyWeq4Vs9bNZMvfANf4dg1pNgi8GlFobQ+W3xeOsO
zmAI5Vzae/T+1OQnLT41mR49i0V28REz/BbXLzzsAmOTnqfacpELtbQr9ZXU
O7QwxHCcmX2zfoohJq9rZWuG640ONPO4ztNuyC4+yjPtQ6PlFn5wge0tDWww
NvH7RkNSbbDuK4obCTZSPjX4mXCu4UTzvTQDpHrYzKPhsmS/Lc3T8sI3PNMs
0fy8hbGtvkq+12hIOuMG95I1G++Q4KTpK+rRTuIwrZXRses7Mvpzky9RL/NU
W1r/Fia0cOC2Z4Of9OdGHxpPbbC9pYEXmXYL02j/0/uUBW4YnbDAYTP7J3Xm
U2+0esZkbob7qEc2+VUL6257TnAvqTPl6MQnUi1nsJ32fKJVWpn2Iq9uYZTB
T6MzWxrsBhxe7JHyqZnBVsZo8LmlPZJ9Ge98wzPFTzPv5neTs6B9ZbRH6/6x
pT+Ts0s+38KoZKbMmbY02G04vNaZ9OxMrVo4Q7m4pT2Mdro5C1poJOPv1t7Q
cFPLU7TqSX360/pbuc1CzxvdQrOgG3CY9iHVmZRnF/N7kqdoDRf3L1/S88Lf
md+l90RUqye838qLzB2TuS82vmOh55Mzpf3TujNa4LDRwMkeb7hTXuAMXc/J
LOhLel74u5NzYXyc0betepq+bT23cq2W3kv652YcbnkE+nmanxjcpu9ca++F
b70Bn08+tzLP9VxQfZJkCIm+bd1VtXCgddb0TJ8+Qz1a8p7Fvfkahw2WJjVs
+Uoz16bmLZ6ic0rr1uLNm58Xe1zMRWsvRhubu6oWDiz0m/kumqWbmi80ZAuH
kxq2chXjK2/DGcpTyQyae5+ndX5JWRDVVGtsMRoj2UvC+wavTA8nOGDOZfFd
VJ+bmtN7jbdw2JwX5Z3WndRbOEN5qqUrvlQ8N5pt8bdP65q3dGMyX2ZtFFtO
zib9Lqq7TM3X/NvCYXNercyE5ngtvWfmlK7ZcN//Z5xP5p36oLc0BsUKcxdM
efAJE2gOuZ7N1neta27yipaGWeP5yZlt6T0zpwm2J2s+mWv9DzAcsCk=
       "], {{0, 
       128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztmbGqXVUURYOCKFhY29naCNpY6HsI/oDxCyIqFgEhgqKV36CFhVgKdjZW
4gdYW9taWFjbmoBCmgvnsPeac1wzisg1vNzcdeaYa4338tJ7H9/98Kk7d+58
8uzD/9y999lbDx7c+/zdZx79zwf37r/26v2nH7788t9fj16//tt3N3/+/MXt
Dy99dPvXT6/c/vH3ndvnf33x9sjvX3p95Osf/5ojr8++z9mvWXm9axbasz37
nruYSX7+6c+QfA67ctn1fFbec6IjtBwnds7Z9/nxq29u3rn/+83NLz+88fjr
h6fh9r9fl77m65e/ffPt91+4fe7T728ufc3K+5/9mrO/Ls1y5PWuWc7+XdPP
9uyMR57tyvtPfP6zbKw85+nncLYX0+9z5Osnurnr80znuGvGXc/t8dtx9usv
vT7yrHa9XnmGl2a/NNfKczvyZ4/8/sSzPZLp2Xu08v5n8z3L5Nm/a9cu2vUc
Vnxs4mtWXGWlm0d+/+xnmMjxSC927YFd+2oXk2d37EpHVnjYdY9WPvMKh9P7
9tLfe+T3V3bprmc14UUrPV35PGd30cTrs5/zyGfe1c2zrK7McpbzXXMlOZ94
Prs6e3annXX7XfdoZT+vdGSFt7P5nr1TEz5wtu+7bvSEF610f+L1xI7a5TYT
e/Ls51xhbNceWHluE8955c5O+/PEn534+cbKs53Ot7VDkv4/ca/PzrLrFk/s
4QlnWGFmZU9Ofx837RXTTrjC5K7OrvRxhecJV9zl4bs+88TO2bVDJlxi5eec
E/5Pc36y/+/6e6e/j5v+3nbFCc9+hl05nu3spbyS93eXK+565keez5HPnNw5
1+L/u753Xvk8Lee/Fv9fcZVkjsl7dNYJj/zZXU64a67pnyev/Mx/F+e7vs9a
+fcR2g6Z9v/pnzfq/3s7nrwv03dk4n2O7JZLf3b6e/9dzpBkctfPaiae+cr3
Ate4Qwj+P/3zf/1/7vk8Cf4/vdtbcyWZTP4ccvqZJzs7kRfB/5PeSOCn5RL6
P9MHCHe2xWTr5ycrz3zaK1p5Jf1/5fuFlc9DY0n/n2OS1tNk98lMXqOn0fbM
Nfr/xL/XXztX+v/cHdH/r9f/ybnQ9gzZ/1dmufTMr50r/V//J9zZFpO0/Unr
UTKvCf9f8bQnjSv9f+6O6P/6f+v5X+MOIfj/k8CV/q//E+5si0na/qT1KJkX
wf//r3c5ebtpz0f/73Ku/z85e0b/vy6u9H/9n3BnW0zS9ietR8m89H8mP/q/
/t+aS//n9CiZl/7f5Uf/n+OKxifhzraYpO1PWo+Seen/TH70f/2/NZf+z+lR
Mi/9v8uP/j/HFY1Pwp1tMUnbn7QeJfPS/5n86P/6f2su/Z/To2Re+n+XH/1/
jisan4Q722KStj9pPUrmpf8z+dH/9f/WXPo/p0fJvPT/Lj/6/xxXND4Jd7bF
JG1/0nqUzEv/Z/Kj/+v/rbn0f06Pknnp/11+9P85rmh8Eu5si0na/qT1KJmX
/s/kR//X/1tz6f+cHiXz0v+7/Oj/c1zR+CTc2RaTtP1J61EyL/2fyY/+r/+3
5tL/OT1K5qX/d/nR/+e4ovFJuLMtJmn7k9ajZF76P5Mf/V//b82l/3N6lMxL
/+/yo//PcUXjk3BnW0zS9ietR8m89H8mP/q//t+aS//n9CiZl/7f5Uf/n+OK
xifhzraYpO1PWo+Seen/TH70f/2/NZf+z+lRMi/9v8uP/j/HFY1Pwp1tMUnb
n7QeJfPS/5n86P/6f2su/Z/To2Re+n+XH/1/jisan4Q722KStj9pPUrmpf8z
+dH/9f/WXPo/p0fJvPT/Lj/6/xxXND4Jd7bFJG1/0nqUzEv/Z/Kj/+v/rbn0
f06Pknnp/11+9P85rmh8Eu5si0na/qT1KJmX/s/kR//X/1tz6f+cHiXz0v+7
/Oj/c1zR+CTc2RaTtP1J61EyL/2fyY/+r/+35tL/OT1K5qX/d/nR/+e4ovFJ
uLMtJmn7k9ajZF76P5Mf/V//b82l/3N6lMxL/+/yo//PcUXjk3BnW0zS9iet
R8m89H8mP/q//t+aS//n9CiZl/7f5Uf/n+OKxifhzraYpO1PWo+Seen/TH70
f/2/NZf+z+lRMi/9v8uP/j/HFY1Pwp1tMUnbn7QeJfPS/5n86P/6f2su/Z/T
o2Re+n+XH/1/jisan4Q722KStj9pPUrmpf8z+dH/9f/WXPo/p0fJvPT/Lj/6
/xxXND4Jd7bFJG1/0nqUzEv/Z/Kj/+v/rbn0f06Pknnp/11+9P85rmh8Eu5s
i0na/qT1KJmX/s/kR//X/1tz6f+cHiXz0v+7/Oj/c1zR+CTc2RaTtP1J61Ey
L/2fyY/+r/+35tL/OT1K5qX/d/nR/+e4ovFJuLMtJmn7k9ajZF76P5Mf/V//
b82l/3N6lMxL/+/yo//PcUXjk3BnW0zS9ietR8m89H8mP/q//t+aS//n9CiZ
l/7f5Uf/n+OKxifhzraYpO1PWo+Seen/TH70f/2/NZf+z+lRMi/9v8uP/j/H
FY1Pwp1tMUnbn7QeJfPS/5n86P/6f2su/Z/To2Re+n+XH/1/jisan4Q722KS
tj9pPUrmpf8z+dH/9f/WXPo/p0fJvPT/Lj/6/xxXND4Jd7bFJG1/0nqUzEv/
Z/Kj/+v/rbn0f06Pknnp/11+9P85rmh8Eu5si0na/qT1KJmX/s/kR//X/1tz
6f+cHiXz0v+7/Oj/c1zR+CTc2RaTtP1J61EyL/2fyY/+r/+35tL/OT1K5qX/
d/nR/+e4ovFJuLMtJmn7k9ajZF76P5Mf/V//b82l/3N6lMxL/+/yo//PcUXj
k3BnW0zS9ietR8m89H8mP/q//t+aS//n9CiZl/7f5Uf/n+OKxifhzraYpO1P
Wo+Seen/TH70f/2/NZf+z+lRMi/9v8uP/j/HFY1Pwp1tMUnbn7QeJfPS/5n8
6P/6f2su/Z/To2Re+n+XH/1/jisan4Q722KStj9pPUrmpf8z+dH/9f/WXPo/
p0fJvPT/Lj/6/xxXND4Jd7bFJG1/0nqUzEv/Z/Kj/+v/rbn0f06Pknnp/11+
9P85rmh8Eu5si0na/qT1KJmX/s/kR//X/1tz6f+cHiXz0v+7/Oj/c1zR+CTc
2RaTtP1J61EyL/2fyY/+r/+35tL/OT1K5qX/d/nR/+e4ovFJuLMtJmn7k9aj
ZF76P5Mf/V//b82l/3N6lMxL/+/yo//PcUXjk3BnW0zS9ietR8m89H8mP/q/
/t+aS//n9CiZl/7f5Uf/n+OKxifhzraYpO1PWo+Seen/TH70f/2/NZf+z+lR
Mi/9v8uP/j/HFY1Pwp1tMUnbn7QeJfPS/5n86P/6f2su/Z/To2Re+n+XH/1/
jisan4Q722KStj9pPUrmpf8z+dH/9f/WXPo/p0fJvPT/Lj/6/xxXND4Jd7bF
JG1/0nqUzEv/Z/Kj/+v/rbn0f06Pknnp/11+9P85rmh8Eu5si0na/qT1KJmX
/s/kR//X/1tz6f+cHiXz0v+7/Oj/c1zR+CTc2RaTtP1J61EyL/2fyY/+r/+3
5tL/OT1K5qX/d/nR/+e4ovFJuLMtJmn7k9ajZF76P5Mf/V//b82l/3N6lMxL
/+/yo//PcUXjk3BnW0zS9ietR8m89H8mP/q//t+aS//n9CiZl/7f5Uf/n+OK
xifhzraYpO1PWo+Seen/TH70f/2/NZf+z+lRMi/9v8uP/j/HFY1Pwp1tMUnb
n7QeJfPS/5n86P/6f2su/Z/To2Re+n+XH/1/jisan4Q722KStj9pPUrmpf8z
+dH/9f/WXPo/p0fJvPT/Lj/6/xxXND4Jd7bFJG1/0nqUzEv/Z/Kj/+v/rbn0
f06Pknnp/11+9P85rmh8Eu5si0na/qT1KJmX/s/kR//X/1tz6f+cHiXz0v+7
/Oj/c1zR+CTc2RaTtP1J61EyL/2fyY/+r/+35tL/OT1K5qX/d/nR/+e4SvL5
D5SJ8Rc=
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztnD3LrVcVRaNCtBT8BfYiooVV8mJpJcTKRriCGiQiJEXwoxAbwcpO7BR/
jv4dCzsTsLgWB9ZkjrH2PjcplJ3Lec/Zz9rrY8z5nOd8/Se/eu9nX3zrrbc+
+son//feq4+/9+GHr379w7c//Y+fvvrgO9/+4EufLH//v/99un75zY9e/vOH
777z0b9/+/Ktf/745Qcf/+Ll79/487uvr19/zaP1o9dP3jP998ke0r9Nr4va
Z/NZzd4evQ/1/lQ8m5xpPutUfNK9GfnWXDt1LlTONHt+lng2OfP6v3/hm797
50+//OrL+3/9x/+tH73m0fs/eh/j/Zv9T17frJtrSWNr/G0TE+pv7TO97RrT
PN+sHbvW7LMwcuNUPKm/bdh4sv7aX/74zs+///bLl//2r3dfX9ufm+7N4Apb
dxh/a+us9G/TnKFybPMaPwvr5lw+j6e3Tll9sk7PztjDZG+TfDMYYJPhm/0Y
vDH52zRvqTw/xWNv6ro5l8/jubN+xOfpOu3tj/ottZ90bzZXpDrI5v9J3E4x
yaO6bubCoxy7gcGMnD+1ntQaleefhXhunpfhdRh/a/swFFekcbD5P/2sTY1m
8/8pLdzkxrOsqVpr6u5NiufNa1sLp94L5cNQzEz1T4r/G9/D1mg2/zd94wYd
evOaqrXJ+X4W4nnz+gaNTGnGxntp4jPpLU0/T+eXcRZNXlH8P4lzc3Y3sPGz
9AHjXvybFM+b17fdZ0n3nHJj+p6pZmlmjV0vzVlQZzR5vc0St+nQGzg2vRYq
35pcujmeN6+b+W6sm/726DWUDjXYI+2HTb1Q2sRmNmpmGff6T7HxbX1gUmuT
fGvifHM8b143830zDzfzmepFjS64TS+n19swm+HVp/x/Soee4tjm/p2Rz1Rd
f64L+himLE3lIVWDVP+Z9CLKf9j0x9K6bvRXqh+bXG32v6lDjVza5CKq1tL6
ffTvp+L5LOuG5Tbz0P6ePPX9jbTfUr3R1svNrGk0XTorjRln9ITm/SmOpXo1
VWu2Nrfj+Szrxn+gZjS1n4Z1KY1J1UXaG6nXUz4SpTsMbyGdcVRuGxy7ubaf
8Uzfh9IR9ky5bZ329htyr6mdRoOn729oqzSfKR3dcA6layhv4Ya8Nd6f6o2G
n9nUwqP3ob4rQsXzWXRBWi/Gs0tNbO25bNfgZk+wdTTlY1Dv2cx3O28p7WP0
RsPPpLS2UddUPJ9FF9h9w8i9lP/te0ZNzjR1ZPiuhnamvD5D40zif8N3kjfv
d6e9wvYz7fq1ueU2XWDM4sZXafIwrR2bpdN6aerI/k0tQztvapbmPvVm3jav
T1momb/N3qhZbOcY1aup/Z/ifOpa0rxKObC5XpulqTmY/q1RF02Nb2oW47qM
vG30C5X/Rp9s/Mz0Go0ca2JI7Z/SBY02T3VBqrOanjmJf6r1Tv0Gl+GNUDXS
aEP7t84MlrNnfaNfjPvdVJ9s/Eyq9k99H/uUTjk196nPojjq5ms8dUZNjRjx
MfTpZC6k72/Memr/VKyoPjnZP6VlGl+60R1p/ts6ZZP9DJ1L9RbDf9jU8sYZ
GTXSxIf6dyqXGk2afhalhQ39QvmNaczt34ZKc6zRJg2X2t9NtT83vUbDM5mc
0Q3PwNpnRPlUmx5dExP7uhpmeHb9QtVj45OkbEbFvGEqaj6mPGbMfUq3UhxF
zdxmvjcxsc/I7sOGPqLY3u639nePb9MvTT2m/TD993R+NfcvqPsFqUaenO9k
zw1vNz4GxVEpX03OxdjPqTOi/BPbozM0y6mZ0vSrm/ULlf+GN9iwDfVMRBrn
TTY7tU5ZaPP5uMZ/uyG2TU42fZiaR4aeSjmNmikNv92sX+z8N/yZRvtPmLDJ
bUOn3LZOrzHNDUMXpHPE4CiKwSivlarNNJ8bDmzOMZ0pm/3qlH4x8p/yBqlZ
0/SK1Pew2ezUehJbKt+ofp72H4OjTv0+ADVbU68v1YZU77KZwehXp/SL4WE2
udpcIzX3KZ6k+swNa4ol0pg0Nb6pVTfjb7xP2qOouFH+szFT0h6Y9quGizb1
S1Mv1HWlOWbMfcpranTK5pq6v2PnXnNem/eqmvgb+nryemPuUzxpzJTms9L4
NP3K1i9N7lG6Y7PPNLE9pVNOcX4Tw01vfJNjqfO6Yc+bTEXVFDVTKMYzWNHW
L7f9pp/dZ4zea+sUmzObGKa5fYM33nBswzmGJm32bPQoSsukLJ3mA8V4Biva
+qXpbzbLUdfYzH1Ds9gz0eD8lAE273E0/bDpwzYX2Xu27y02caPuC6Q5QNVO
k7cU81BxM3SEfY0ND5zSzqdyvonho7+1f+fhFBc1Mblhz1RPs/2oxsMxOIrS
6WmtUT7DqXvBBtdRGs3Qy412vsF/m8Sw6QlN/hj6rrnfRHGRvWeKJajab2af
7Z/Y/nw6oynfzGAVw6Nu6pHyA9OefOo7YMbZUfxJ5Q/Vi6jZYc81m+Wo56yN
2dHUAjVzN/tkOndS38z2cGyuszVamleGH3jb2VE+la1lqPM1OLaJocFyzd8a
s4/yoin/JGWzZ/zOjD1/Ka7b1GiGRjY8dvvsGoac6CBKyzQ9nDpHiqttlmt8
PKNe7DxP90lx6SnNbqzTukjzx15TObl5j4nKDWM2NT5VqnMf8VXT2zfPbpKT
p/LfZgbjXobhn1DsSvXJG37LxWZOe2ZRPYSaL42utz3MlEtTn8rQGs152T2n
0aR2/jceIzVb09lh+4STujvFrg1TNesmJ9P8t39/jIozNbspTrN1pZHDjdZo
eq/dcyj+bziw8bE3zzrtvYZPSGmKU36LsW5y8tSMaxjP9gqaPRsepv2MT8MA
kz5s8H/Tcwz+p3JpkxNs/WX4hI/yrdHFm36LwfmU7rZnXOqfGDzTMEbDFXYP
nLy+yWHKr6DyxGDFJg5NLqV/a2hYSn8Z2oTy4uw+bOsCQxNRs5jS1JS3cCpX
J0xO9cCmZtMctrWGcRbpudu8ajAbpUntujY8TOO+CeW3bOrENM+pmDc9itJr
z5irlAZv8spggEZrNHO/ORdjBhl+8iYTUnVteJgU/xt92NCqqR6krrGZcVTv
bXjmtlxN42b0gSaXmvnV8KdxLzWNZzpr0lyyn1k27vfd8D4G/1N+HcUSaQzt
OdJ4ZdR5bXoLxvtQjLGZS2mPatjSiFsTT+p7a40WS+cUpVOoWUm9j83/xtrW
g01/aOYjVZsUU6VcvZnz1L9TvErl0mTPRi8yfA87DtSem1qe1BQ1K6n3aa6L
4snb9KDh6VEcleojg4dP5eop3Tfh1Wb+UvcsqF40WVNsYGuQZs/2fgzdau/Z
7smn9GDD+ZNYGUzSnFc6v6gZZ+saitVT3yC9Xmru23XdeJg25xh7NvSFrVvt
PRv5TPVnW/sbHprBUZPzMph5M1cpxqDinM7NTf6ndPRE4ze10+QndZ/a0BfP
8puW1DOPVO+1vRSK0+xnzKk9NLOMmnGba8N/Np5PtPm/0dHNWRv8b7PNJhvb
3rjNh3YfbjiT0mIUJ6T5YHsjaa8wnksy1o3mpTyf5v0p/k/rlMorm/8NtjFm
aKOz7HUTQ8obsTlz8/fxmplCsR/l0VGe3mY+24xhcFTT9yjtnNayPVNS7daw
jTFDjTqi1hQfUnrZ/r2+NCYUJzRxMz6L8qgb/8HIZ0ODpLOs0QjUXDD6qt2j
7ByjYtLMWdsbT+NM6dk0f6g5Re05rfeG/6n7F+lnUXWxWUcGlxrfJWv0QsOu
jb5ueg7VozbnV9OH7Rq5YXZTfgvVAyn/djP+jcakmOfUPV+qjgw2aM6OmrPU
7+s2+vqGHpXWbzO/jFlj+NinZvckVylf4obndIz42/lGadvGFzX89qaWmx5C
zRdKL6Sc3+jrzT7WxGQzxwwP8FnuZzU5afclqidTZ7fJNk3vmuRtyr1p/zml
xVLeaDzSRi80NXhzH6Nispljm8+TNmt7dje9etObpZ6pp/iKyjf7Nwkp/42a
NadymPKm0hkxiUNz1jf0sXTPTW+nZkTjAab1kq7t2Z3mZHOmjY6g2JXi9tQ/
p7iayplN/XhDDjez0uifFP/f0McMn83o7U1N2X3shp5ps4F9XyP9LLsHpn2p
iVVzdgZ7N7m3mcMG/zf/3pzdZtyovmHnWOOvNl5u0682e6ZxLalWtfvw5jOq
Rt0Z9yBSD+GG3wChctjmf0NDUTOuiVvD/03uUfxv3Fc91cdue/9JvqU5b/vA
aZ409yAMbWL0JYohT/XMZlY2eW7nrTHjmrgZZ0fpxOazqNrc7GOn3r+JueEJ
Nyxq98NJ3TV+UdOXDCa3vSZ7VqZ5Yt+/sL9v0+S/oZcb/ZLm56T/TM5os481
n9W8v83/m7N+8v6GF7HJS6e+S3xDz0x7S3Ndk8+i8jb995R7m1re/D5bs57U
pl2zt+kpm4Gp+w4UizZ9wGB7ipfSfLPvfWz2TJv/05xsWKLhk1PxNHLA0IlN
fCh93TAkpac2PYFJn7TnYNMHTt13oOapoVWNWU/prFNz/4a83Ywn1dMMzWjo
naZmG4Y09NRtngDFpU1+pmedcnWj05saoXoItTejRm7IPSNvJ7OVmms3fM+E
0hfUehJPSl/bemoz/xsGS7n0BmZLe04aH6oPU/ou3dumztrMPft3Xaj+1sST
8l4azULlqr1ngyFtD4fKfzuHJzG/gd+a3t7U4ylGSvN2s0bs3GvWaX9O+0BT
O01PaM7L1h2bfdiutVMeDqVHKD/nNn6j/NvJNVKcb/PSDWuDo5q5PznT1Ftr
5ouhcw3NYsw+qg/bXGrHzdBZhj9seNoNv1G61ZjFFCNt5rmRwwZHUWdh6MSG
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
3tCjXn/9fwET4TwR
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzd1zHKbncVxeGLQrBzDDYOQGu9OIVYaXcFUwWEWAQL0TLoAByL4FQsHIaN
mEAaCyGXs5+11vsVCed+nPec/d977bV+50e/+d2nn33v3bt3v//B1//79MOX
v/jiiw9/+OUn3/zjtx8+/+lPPv/+15d//va/b67/89cfvv/kL3/72a+//NP7
f331z5//498/fv/3P/7qf64/9p7vcv2x7xLPf/Kuj635ST//3z1Xs3hS55Vm
nszoSU/WNNx6ptbqlYc80Z7W1cfuiKg/OTuhN7HjQttJ/9R5JPJXzG5hZ9d8
W/RQ9HM5c5/sUYtFW5wptJTMlwVPbvFti+GFJ+udXfNAzZ9Jvel36R1PsqjQ
qp7jVR5dZWLLk5N9u3pvMkdE/wV7tHZHa1jPXWtMM7/wf/2u5H6tsVzSB5I1
6Oxb++2CJjVbitxv8clarunMEpppcUvrLE+eI3xmoQbx9+XrBU0meyjyS7Cu
8M81PhTaa/G2uBZeJ3JQz13UoH3+Sqst3xOZIljuymOv/FDnpt7ZZKYnPVzz
p87oV2QPrbGFDE3er+fb4jRxz7JHiYwWuaPzV9Sv+y/yKJk1C+zd4ivh1a1d
0zvyRJ/iu2PZnxd2/IofNDcms7LFWprtxc5qP2/1/+oe7UWit61MF3y14M9C
S9oHRA9bWk1ymsiahRxM6kH0ZIHDRc1ir3WmC02K/RL+I/QjdnnNh6/mLvp8
5fN6RmIWLZZeyNBWD1tnFN4u6hHnEl6ha9PZJ3xY+Ia4P8mcLc4RWk1+I7yi
v7XY/mpeyR0X+7jGxk+0p88iOFDkvn5+KxOT2aT7JjhE5KCY0do9SX5O+t6V
Fy34j2YewbT6XJolNEe1WFf7g5iX0OTarPU9Vz6ma9PP0f1fYLaF+q/em5yv
zimdmy2eF16drC35/LU90t8IQrdX+3u175o5hcYWfGONbwVT6e8Cvcstjlrg
SZ1ra9wlei52p3XGpJ9rTQp/0AwmdiTJq4LNknsk8ld7V4vnW98aV76kGSnJ
6kkNtPxhIeOu5pX0JcG02k9EFmg2W+6n3lPBJIK1Wpyp9ZZkTtEH7VF6j4Q+
BT8ITxAem6yzVY9+ptiXpG+IObb8WWhJM+dVRmvGe/LMJ7mQ7K1gmCfn0rPW
sxCZIvjhqrdX3rim7SQril0TcxS8ceVvgseW35vUlZ71Ew8Xz9F7J36r90i8
V8xr7b2tuYi9W9CD8Mzl32r/v/LGq11L+n8rs65msazbZNYv/FZ4oDiLmJfO
jtauJa9FH644IalzzSS6hmS+i6xfyKbl6+Xvjqu9E31YyM2Fa+2TIi+Ezq+y
ST9H+PnCWbQHXml4YU/XvjvEN53Y61ZuLmgp6aV618S3hvZVzV2tbw3NGzor
hbfo/rT8RPREZJDoT2uvWywk5t7yrgWOFXmk+6M10+LVpGbETulsatXf2gXh
YyLL9G+TfLigmVbOikxpeaboiWbX5P06g1oZl/Qx7Sctvekarrzoim0EV2iN
tZg56fl6jq+Ss0k/1P0XHqXzemGnkjNqzXeNVZ5ktPYHkREtfl7mumTOCp4X
udzKo+WdFby0wNJivpppF/Z32QPFLieZWXCd5kPhz0mvS563Nd9WnaKeBd+4
0obI6Cs9L2hSeLvgMeHnQqvaV1ss1OKit8SNLU8Q/NDSXpKLRG5qn0nyg9Zz
klsEy2neuJqXPrvg4WVubHnC8nmFfwqP0oy3kDULNbe4Rby3xYHJ8yYzZYFR
W2y2zMnJsy/4gM73qzPqfibz4qo28dsWBwrfaN1/pbEFj9X8s/zeqxoE3+q8
EIytM0vP5aoPV/4suEXkqdbAgs9rtkly+AKHJH8r+q89Vpw9ucuamcXfr+oU
XCHyfZm1krmg+9maUZI3Fq6Fr67l9ZVu9dmveiLySHzv6Ey/+j5aY+zlPdXs
kdTSW8qFli8l81p79fK5kruQZLOFHF/IBfHeheeLWSR9bMHbF1hR6EQzScs3
rvxNc53er6t7rnJcz+Uqv7Qmk1mptaq5tPW90GJFocOrs4j+PPENMYs1/xQ9
0Syt/UHsZjKLNesKrV7tdZKfk/NKZqLmHJGbQrdab1eavKpZeH6yzhZ7ay0l
WVowlWDvVu7rebV09So5suafVzWLnU327UpXgnMEDwvvErksZne1+2IWmk9e
hY21X+kc0XmtvxH0N4tm1IX8utp97YFrXiH08Op+rlm6xcY6yzRz6rxO1rPg
21c+vMYkwj8Fwyxnjc7iBT/Xu5NkkqRX611OcovOQb1TST1optWeKbQh7k9m
jeafBT8XOr/yigUe0/0RvNri9iQfJtlPe6z2gRb7LTD5FbvqfNdZn8xWXcPa
rK/eqxlY55SeqfBY4fMtdhX5cqX/V8ygJGPrZ+r6xdx1zl55keYWrZkWC+nc
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
eX2lW332q56IPBLfOzrTr76P1hh7eU81eyS19JZyoeVLybzWXr18ruQuJNls
IccXckG8d+H5YhZJH1vw9gVWFDrRTNLyjSt/01yn9+vqnqsc13O5yi+tyWRW
aq1qLm19L7RYUejw6iyiP098Q8xizT9FTzRLa38Qu5nMYs26QqtXe53k5+S8
kpmoOUfkptCt1tuVJq9qFp6frLPF3lpLSZYWTCXYu5X7el4tXb1Kjqz551XN
YmeTfbvSleAcwcPCu0Qui9ld7b6YheaTV2Fj7Vc6R3Re628E/c2iGXUhv652
X3vgmlcIPby6n2uWbrGxzjLNnDqvk/Us+PaVD68xifBPwTDLWaOzeMHP9e4k
mSTp1XqXk9yic1DvVFIPmmm1ZwptiPuTWaP5Z8HPhc6vvGKBx3R/BK+2uD3J
h0n20x6rfaDFfgtMfsWuOt911iezVdewNuur92oG1jmlZyo8Vvh8i11Fvlzp
/xUzKMnY+pm6fjF3nbNXXqS5RWumxUI6d8S79G/FjrQ856r/OoPWuDqpc32d
zPRkPdoTrpj/6n6dg8nzJvnqamf194LwfJFfyczVmZLkZ9GTpA5b/pDsW4vl
9HOWOeEqNxfyXc8uyRhJPlnLSqGTBc9c9ocFj23lxUKfNScIrl6Y1xWnrXm1
yDjBKsnnX+1dMgc1M1xl9MLOauZ5ojfBQmJ2C9mtWVHslL7WHiK0l2SYpE8m
81ewqPA04bEtDSS5qJVHoictn9Tn0r6qWeKKwcTzRW1Jn9cMr/lQfy/oXEvq
/Gp2V/drftM1rz1T93AhT1+RAZL5csXtOtM1+4kMEjoRrHuV3Qv8kOx5y9uF
Nt7S2XX+JueV9I3WLrf84apmzRV6B6+8IskPyZ5f3Z/0bTG7q7Nf6VPn2tUz
hV8lvaWVy6LPT/yzNaMnderdSeasPnuyNu1jyXrEXMQ+Jn1ygXWFT+pMT/q5
Zk69j7onVzsuahAcm8wL4TOaM7UftjxN5K/WvM7utTzSrCv6rJlcc1or40T9
SU5I8lVyv4QP671IMlVSq7oP4l2t3Gwxnti75LeJqPMVd3DNT5LfAtqXknwi
ahO9enKWJzps8arWgNanzh3tw098RmssuYMt315m5mQut3JKc7v2bfGuJAtp
VtcckvRYoTedUzrrRYaKndUsrXu4wEWa+ZOsKPY9qUntUVp7mnlEbTqbruau
5yXq1IwnsrKV9ZqLxKyFBgRL6BoE8yTZI7mnC7kvuFefRWfQE3/Qs/4u1/8F
N6jrDw==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt10GKXVUYxPFGQdyBIwcZuAGdp3ELcQURdBQQEjA4cwvO3IArCIh7cCVu
QkzAgZOG97xf1Vd173+gtHLf63NPnVPfr599+8OL7z96eHh48+n7f714+fbr
169f/vTNJx/+47uXr7768tXH73/8+d9/Pvz8+NkXj29+/ev5sz8/f3zq57e/
/f78j3c/Pv7y94snf77lecXveuqziu+/9x2d767Y/1uev/d7juR4ZG33ntUj
ezj1vlNnW52L85m0vBR3P6FnnH2r6G3F90/dna21qT+7NacUPaDYh61npt53
65mWvJyu2zKkIseEGeS0wdbanOZ3zilFDzgNufV3gaLfnOtMzmvLdYq/LzD/
rG221qb47NacUvRAgiHVz6j7Tb3O9rycudw709V9ewXzq98d82P+NNtgft35
dFod8+/O/a0uVd+7qXuq6IFGQ26ZX/13wVnzUufivONqm2F+zK82VaMhk22D
+bvM75xBzlmWdi+21ub0AObH/Ef+LjhrXupcnHdcbTPMj/nVpmo0ZLJtFD3Z
nleL+W/5vZhfN/e3ulR976buqaIHGg3Zbv4jGTXmpc5FsTb1eVPMsq39x/ye
OYX5M22D+c9hfqdXMT/mx/y6ZxI6cCqjxrzUuWytbWu+JLja+e6YH/Mn2wbz
Y37192D+2S5V37upe6rogUZDYv6uvNS5JPQS5sf86jmF+TNtg/kxv3O+JLg6
YQ+dn92aU4oeaDQk5u/KS52Ls5cS5kuCq53vjvkxf7JtMP91zK/Iy7knznux
tbatHDF/zjMJHTiVUWNe6lycvaTOC/NjfrWpGg2ZbBvMj/nV7sX8s12qvndT
91TRA42GxPxdealzcfbSlsnV358w9zH/8T05qyGTbYP5Mb/a5Jh/tkvV927q
nip6oNGQmL8rL3Uuzl66dz0Ja9i6F5h/dk5h/kzbYH7MnzDL0u7F1trUdxDz
Z/ZnWgdOZdSYlzoXZy9tuUuxJ2lzH/Mf35OzGjLZNpgf86v7BPPPdqn63k3d
U0UPNBoS83flpc7F2UuYH/NvzSnMn2kbzI/5j+y/c0+c92Jrbeo7iPkz+zOt
A6cyasxLnYuzl9Tdhfkxv9pUjYZMtg3mx/xp8zrhXmytTX0HMX9mf6Z14FRG
jXmpc3H20tY9VexJ2tzH/H5LtBgy2TaYH/OnzeuEe7G1NvUdxPyZ/ZnWgVMZ
NealzsXZS+p7esv6E1ytnq2Y32OJFkMm2wbzY37178L8s12qvndT91TRA42G
xPxdealzcfaS0/zOzybMfcyvs0S7IZNtg/kx/1YHJt+LrbWp7yDmz+zPtA6c
yqgxL3Uuzl7C/Jh/a05h/kzbYH7Mr+7ANFcnr019BzF/Zn+mdeBURo15qXNx
9hLmx/xbcwrzZ9oG82N+p/lb7sXW2tR3EPNn9mdaB05l1JiXOhdnL6WZf6uv
nPMO82P+ZNtgfsy/Zf6E/VfPO0WXqu/dVl5nNSTm78pLnYuzlzA/5t+aU5jf
7wfMj/lbzO+0MebH/Gn9mdaBUxk15qXOxdlLLeafmoOYP2dOYX6/HzA/5m80
f4INtu6s+g5i/sz+TOvAqYwa81Ln4uylRvNv2QDzz84pzO/3A+bH/JjfM1ud
Xaq+d1P3VNEDjYbE/F15qXNx9lK7+ZPnPubXWaLdkFt+wPyY/0zmT5v7W12q
vndT91TRA42GxPxdealzcfbSmcx/y3di/pw5hfn9fsD8mP+s5r/l+52z1dml
6ns3dU8VPdBoSMzflZc6F2cvndX8abMV8+tM1WjILT9gfsx/BfPf+52YH/On
9WdaB05l1JiXOhdnL2F+zL81pzC/3w+YH/Nfzfxbs9XZpep7N3VPFT3QaEjM
35WXOhdnL2F+zL81pzC/3w+YH/Nf2fz3/n/nPHJ+dmtOKXqg0ZCYvysvdS7q
tW1ZWj0TW+Yd5sf8CWfb2ZPteWH+85lf/V7OLlXfu6l7quiBRkNi/q681Lmo
16buLszv71LM32XIhLPt7Mn2vDD/uc3vnHeKLlXfu6l7quiBRkNi/q68tjon
rW+d75UwfzH/7JzC/Ltn29mT7Xlh/uuYP20eqe8g5s/sz7QOnMqoMS91Luq1
qbvrTOZPOBuY/3yGTDvb6p5szwvzX9P8CXdWfQcxf2Z/Jp9tzI/5r2D+5C7F
/F2GTD7bmB/zY/6uLm2ZU4oeaDQk5u/KS52Lem1qb2B+f5c2zinMn3m2MT/m
x/z/7zu3urRlTil6oNGQmL8rL3Uu6rWpvXE18ytmB+Y/tyGTzzbmx/yY399R
zs9uzSlFDzQaEvN35aXORb02tTeubH6n27d6EvP7n0nrwKvlhfkxP+Y/fk+d
87S9P9M6cCqjxrzUuajXpvYG5vfco62exPz+Z9I68Gp5YX7Mr95nZw8r9hDz
655J6MCpjBrzUueSZtGp36WeiVs9fO/aMD/mTz7bmB/zY37/uzt7WLGHmF/3
TEIHTmXUmJc6F6dFMb9nn7fMg/kzDZl8tjE/5sf8undP6GHFHmJ+3TMJHTiV
UWNe6lycFsX8nn3eMk/arMH8mL8xL8yP+dVrc/awYg8xv+6ZhA6cyqgxL3Uu
Totifs8+b5kH82caMvlsY37Mj/n95ld7QL2HmF/3TEIHTmXUmJc6F6dFMb9n
n4+sDfOfz5DJZxvzY37Mv2t+5x3E/Jn9mdaBUxk15uW812qLYn7PPqvXhvm7
DJl2ftR3pD0vzI/5t9Z2y/Pqezd1TxU90GhIzN+VlzoXp0Uxv2efEyzdss4r
GDL5bGN+zI/5M82vthPmz+nPtA6cyqgxL3UuTotifs8+J1i6ZZ1XMGTy2cb8
mB/z55vfee+c67yCITF/V17qXJwWxfyefU6wdMs6r2DI5LON+TE/5u8yv7OT
MT/mx/yYH/PnWDrBMGpLtBsy+WxjfsyP+XvNn7xORQ80GhLzd+WlzsVpUczv
2WenpVvWifkzzzbmx/yY/xzmd9oS8+ueSejAqYwa81Ln4rQo5vfss9PSab9L
bapGQyafbcyP+TH/+cw/9b6YH/NjfsyP+bvMr75raku0GzL5bGN+zI/5z23+
rb8vFD3QaEjM35WXOhenRTG/Z5+dlp4ymHqdmD/zbGN+zI/5r2N+tffUPdBo
SMzflZc6F6dFMb9nn52WTrhHaku0GzL5bGN+zI/5r2n+W84J5sf8mB/zY/7z
mf+WM6Po8ysYMvlsY37Mj/kxv+KeKr6/0ZCYvysvdS5Oi2J+zz4r8lUYLKHP
r2DI5LON+TE/5sf8yTOi3ZCYvysvdS5Oi2J+zz4r8lUYzHlPMX/m2cb8mB/z
Y37FPVV8f6MhMX9XXupcnBbF/J59VuSrMNiR86z4/rMaMvlsY37Mj/kx/73n
B/PrnknowKmMGvNS5+K0KOb37LMiX4XB1OcZ82P+xrwwP+bH/J5+uIIhMX9X
Xk4jqS2K+T37rMhXYTDFrFGbqtGQyWcb82N+zI/5nXd/612S+zOtA6cyasxL
nYvTopjfs8/qLk02v7MHWgyZfLYxP+bH/Jjfefe33iW5P9M6UDH3W/JS5+K0
KOb37LO6S1vMr9i3RkMmn23Mj/kxP+bfmlNXMCTm78pLnYvTopjfs88JXZo2
p65syOSzTV6YH/NjfvWcSniX5P5M68CpjBrzUufitCjm9+yzs0vV7pqaU+qf
kw2ZfLYxP+bH/JhfPacUP7cYEvN35aXOxWlRzO/ZZ2eXqt01NafUPycbMvls
Y37Mj/kxv3pOpc2XtP5M68Cp89aYlzoXp0Uxv2efnV2qdpezk//72X8AJ5HK
ZQ==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztW7HOdUlx/IUlizdw7JTQjgE5dApPsEh2tJIlbBnZBMA7EJL4sSzxEDwC
IDs4Qsxu1VZVd829t6Vdff/RTE91n5nu6j5z//5n//aTf/3ely9f/v37f/rf
T776xT/9/Odf/ddP//bP//iXr77+x3/4+m/+9Oev//+/P//9u//+zx/+3f/+
6sc/+MV//Bj5++vf//KHv/nnP/zol7/9nx8lxjyfs2OQdRNrJWxp81X670k/
K/shYVfb2UmfIwVPGmca25avXPun4ew///7ykLQ/vxzEtU8S51fx1ZZdCT9P
8gHELtdZc+2H9DlCxp/wpHEivlWwJc67gmGSD7vO/lMS+JG1lDGsKOf3hI19
jy5bXHaxfp7kA0oOcnFFxCeID13niPXJCedpTCJfI75FsCl7VfHV6bkS/xP5
GtHJxl4lB7G2IMJyOcR2Zb+xe1uxJYEfsev5PM0H2Bg1yedd/nTVVsh7QbAp
cZ59LwlexO7/hK+UekfJ12yeYm1ka1s2v7P7XMGZEFdOn6wdFD8rcYz1w+m5
UoOw/lHyF4Kf9TMy3hUP2bOs1GWIfiX/JnzVUPsj9rp46WktNvel+zDImC3u
nXieOC9PcfVtELsQG101SIIfnvS46hQ2lrLYTv5J8DqWW57GKDUj6yvXe5mM
SwoXYoXlA6e5yHNWXH2ANkn3W1x7WPGn0s9Jc2mFKyp8iY3PiE5kjDJ+Mha5
+ntK3aT0TxI8Od2fYc+RIq44huhn103/jeBBbHSdQVeMcnHySS7tWpftnyjx
ObHflDjJ6nfxFqVPm+ifIBgSeSoxXqnxWR+6uCU7V8ndkzWIssfYs5bgRa4z
lc5TLq6o1FDIXOR9nfSf7ELe3QmnKxaxmF11k4s/IBhYG115nK3xlb2UiHuu
GHgao+BEMCDYXFziKQrfdq2bOAvp/Mvid8X/p7DnVNnnbBxgcx+CR4ljSi5z
1TXf9C4ZGxWuhWBQ6ujEu1Piw1ZvyoXfFW8VcdnyFOVMIXoUv6XPIBujXPE5
watZ3pjeq09R6iOllkyc2UTvPVFHu0SphRH9id6UEn9uz1OuelOJpSf9rC3s
ugn+n6ivXdyM5YdK/03Zt+me2GRfyNV7R+xSuMRkzEFEieGK/sR+uCVPKT5M
9KMQW5R4gqzLxkZXfe3iaUrMd/WOEnMVP6f7Qok6zrUWWwe5Ys4kdz2NYfWz
dp3mNucpBUMiH7n8qZyLkx42TiK+PWFwxSW2/+PKF4iN6XM02Rc62cg+V+rx
03PWD66Yc3uPBbFLWes0Jm2Xy/bJelCx8TSXzR1snEQwI+uycSnB+RP5LnGO
WP8ofaHEnk9/9zmNcfFw5bmy7mQ8R/Aoek46E3Wo0kd18b0GTsj2PVh+pfhT
yWsK51fqHYUbJOID4mdX7HXxk8QYZJ+wa7lkq8eSwMPqSdcd7JjEGUnkI6X/
oMR/pafk8ieixxXb2dyHYE6co4R/EAzsuoi9LnHVsCdJ8zoFA4tTwdOQpxQ9
J3H1CRP5KGELexYSZ0cZg9jrqmvY+oX1yWmMK9e4eiDIukpcUuKqK4+78qzL
n4qerVyczlOsHnb/pHMNKy5bFC7kOjsuYeO2q3+V5v8unUod5zqbCjalt8/m
cdc7bYh1Lj1b+wHBjOhh90/ijEzWjMqeZ/2v1A4un7j2HluvJfh/4nwhONm9
pNiCYGP1T553BCciiVjn0uPiS+l8wdqr7E9lLyW+BSB2sTiV89jwfQTxyVZN
p5xBRCdrl/LdhNWPjD/ZhYxReBqrk9Xf1kM4SaJv+ZQ0P0TtZPAo385YYXMW
ayObFxBsylz2jCs+maxNXFw9rcfVD3RxeNZGhfOzOhU8p/GTPQRXjygx/iSJ
uoPFgJwRFkOCD7g4P1vvKL2gZpmshVlsyL5iY53SD0RwumxE9Lti3eS6iR6C
sj9ZX7HjXX5G1mXxPMe4vhNN1pIs50diCPLcVY83cKEtzqO8a5afKP3AdIxN
S9u6aTyuXOwan+CHLr6t5NN07ZPAz/JJdvzkd5PJbwrs+ETcS5zrZv4/2euY
XDeBR9HPzlVsRPAovIjFz/Z20vciEvWRwu1dNUIzB9viPFvnmv22tYVtstcx
2QN04VHsdc1NxPC2frKLn6dxIhiUXpCrL/SUNg52wubSeRLFV8qebKhNFD23
rMu+o0TvaJLzKPayPCQdQxR+ztqbxs9ydeXvdC9r8jtL4t0hayG+Yvck29tM
+4rVc8u6ifGInkn+z2JI7P+t/jAi6dpTuftxitXK30j8T+RQZHxD3wBZK3GO
lHot4StFzy3rusYnYnu6j+fCls4jiVrDhcE119WrQfS3fYc9PZ/sG0z2ChDO
j+yByd4XIlt4GvKCwh8QDAp+BAOLzRUrXD5J8DrFFgU/G/9duTgRkxt4iGst
BRt750rp3aV7hlu9uIY4n5bJWJTosSTyiBLfJjmkgl/p/yh2uSQdE056Gr4v
INjYeM4+n7zT6/LJ5Lqu8Vu5TMHP2sXarmDYkjS3Qea67vywdrVxsMm8tnVP
z/WulXpB8duWnsk4mc5fW70I17vbuiuYjldb93WR887W/ie7GrgfMjeR19i1
XJhP45V3rXzTZ/2p+GGLkyfWapjL6pncAwiGrb8V/Ii4+L/CAxFsLhuVuZP7
StGfxux61y4/3H53KLFWw9zJHkvD/TeXpHsjLjwuHqjg2drzCh7l+RZm17tO
+KdBPvz//2Syx8LiZ3Gm8Su2bPXr2Podee7Cg9j4bX51+oddC5H0Oz09d33b
TcTwxHnc6gspcxu4ECvpOJb2w9Y3FARb+qy54oMLm2JLes9v8ZwETjbmI/vf
5ZOtfuy78X/Xfk7EsebeckMNq7wv9ryw/Z8GzubCc9KZ5jkunEqfB9HJ1h3f
9q7+Uj8yPq3zVfl/w3fMrVoygW0r7iHvi63fXfc92u6qufa5woVc/kH0I/hd
eyPBG0/jt3oFibnIeNdcVg/y7ibfi3LeFT+w4yfvDqU5HmtXgrezc1mdrhjl
WlfRw+5PJI+f1kr0Bl2ch9XZMDcdM1n8iKR7bpP1CIttcq7rXCscFckLSl8C
wZPuF7kwuPS7MD9FObOJ3iCLv0FPM/9P9yERPImzkKhHGnL0d/HLXxOlV6Nw
/nSPgrUX0blVY07mPpYDTPYGWRuRuWk96bmTHOYpk/3/NHfaug+QmKvkYsUP
Sr2g5GiXr5C5W9+80nVx4pssgk25L6RgeGf+v8Xhm7kT2384jWHxJOYqtbni
2/T5TXzbRfS4nrf1oBCcLP9n9yfLSRC72nJEeq4rPmzxmQbupEjDnlHwuHKT
6/vgZAy8pV6ezCNILkj4gR3jsmtSzxb/Z/Wk+YwyxrXnG86UCyeLR8H/fK58
11MwbL2vyXr5JOm7r0pPZvJct53Tk5703K34MFk7bN0Xaug5nHCyeFwxk60f
E+d38n1t1cvpPPIUNs4jvF1ZV9FzGtOQI9L8v/kOTwN3QnyS1t/Wc1DuWrDr
IuMVDAnfTtbLLswIBtZGNr8j+rfOO4LzFv6vyKv2/9Nn7faeAzLm9joawdNQ
L7swT8bGyVjBYtvqDW7NbebwrB5lrZPf0netX6nngEjzOUrUJpN7nsU8iT/R
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
       "], {{0, 
       128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7752224028511353`*^9, 3.7752224120281754`*^9}},
 CellLabel->"Out[59]=",ExpressionUUID->"544bbaa5-7a86-4aeb-b152-91611f0ea1e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetMeasurements", "[", 
  RowBox[{"netECA14", ",", " ", "fullTestSetBigC", ",", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Accuracy\>\"", ",", " ", "\"\<Precision\>\"", ",", " ", 
     "\"\<ConfusionMatrixPlot\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.772718835348043*^9, 3.772718835872539*^9}, {
  3.773157558742169*^9, 3.773157559675911*^9}, {3.773291266369521*^9, 
  3.773291266873107*^9}, {3.7733482373548822`*^9, 3.773348237428149*^9}, {
  3.774188635136705*^9, 3.7741886352042837`*^9}, {3.775222426547949*^9, 
  3.775222426622118*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"91ef8e70-ac8a-4d13-be6f-95353476855e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.63701171875`", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "0.8012958963282938`"}], ",", 
     RowBox[{"2", "\[Rule]", "0.6278493557978196`"}], ",", 
     RowBox[{"3", "\[Rule]", "0.499466097170315`"}], ",", 
     RowBox[{"4", "\[Rule]", "0.8756892230576441`"}]}], 
    "\[RightAssociation]"}], ",", GridBox[{
     {
      RotationBox[
       ItemBox["\<\"actual class\"\>",
        DefaultBaseStyle->"LabeledLabel"],
       BoxRotation->1.5708], 
      GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQGwI+2KPTb2cuvC/354n9jW+8169kvbBXVjTpiil6
Y3+pu+WCRtFte4cJEWXi2Y/tj//t2Lda6pX9Fk0OL42lN+23HG5/n3Xmkb1f
pNKlgAsvMcyF0YukLmcs+vzSPkNGjF3h2mv7BZptP9p43tnvsBMQ+r/imr3J
t5j/qUcf2tv1HYgVCH1pr7z69IbwXy/sJXq7uFu0XtuvYO3xlNnz1v7ku6t6
xxnf2O/LbD4d4PDWvkp6hYPDtnf2586Agb1TwtMLSrfvQu19Yb9/c4Jkyc9X
9lY3TiyN7npj//q7ueafhHf2HnF3nwn+fmPP95Pv+JvXb+2L7Be9X8X23n6h
pRCzj+Rz+xS3VUfj7r+0ny50xuq9wlv7q5sfZYlOemz/7Zqi/JzC5/YmDEe9
J/99bf9fSyPJVv+dfdSyS8sFDryz1zQXPSuc9d6eLyZt6V7R9/bPihbr7Y17
b7/odvXOvC3v7QEO8rSl
        "], {{0, 0}, {4, 4}}, {0, 1}],
       Background->GrayLevel[1],
       BaseStyle->Directive[
        FontSize -> 7, FontFamily -> "Verdana", FontWeight -> "Thin", 
         FontTracking -> "Condensed"],
       Epilog->{{
          InsetBox[
           FormBox["371", TraditionalForm], {0.5, 3.5}, {0, 0}], 
          InsetBox[
           FormBox["730", TraditionalForm], {1.5, 3.5}, {0, 0}], 
          InsetBox[
           FormBox["9", TraditionalForm], {2.5, 3.5}, {0, 0}], 
          InsetBox[
           FormBox["6", TraditionalForm], {3.5, 3.5}, {0, 0}]}, {
          InsetBox[
           FormBox["92", TraditionalForm], {0.5, 2.5}, {0, 0}], 
          InsetBox[
           FormBox["2534", TraditionalForm], {1.5, 2.5}, {0, 0}], 
          InsetBox[
           FormBox["122", TraditionalForm], {2.5, 2.5}, {0, 0}], 
          InsetBox[
           FormBox["74", TraditionalForm], {3.5, 2.5}, {0, 0}]}, {
          InsetBox[
           FormBox["150", TraditionalForm], {1.5, 1.5}, {0, 0}], 
          InsetBox[
           FormBox["1871", TraditionalForm], {2.5, 1.5}, {0, 0}], 
          InsetBox[
           FormBox["168", TraditionalForm], {3.5, 1.5}, {0, 0}]}, {
          InsetBox[
           FormBox["622", TraditionalForm], {1.5, 0.5}, {0, 0}], 
          InsetBox[
           FormBox["1744", TraditionalForm], {2.5, 0.5}, {0, 0}], 
          InsetBox[
           FormBox["1747", TraditionalForm], {3.5, 0.5}, {0, 0}]}},
       Frame->True,
       FrameLabel->{None, None},
       FrameTicks->{{{{3.5, 
            FormBox[
             RotationBox["1", BoxRotation -> 0.], TraditionalForm]}, {2.5, 
            FormBox[
             RotationBox["2", BoxRotation -> 0.], TraditionalForm]}, {1.5, 
            FormBox[
             RotationBox["3", BoxRotation -> 0.], TraditionalForm]}, {0.5, 
            FormBox[
             RotationBox["4", BoxRotation -> 0.], TraditionalForm]}}, {{3.5, 
            FormBox["1116", TraditionalForm]}, {2.5, 
            FormBox["2822", TraditionalForm]}, {1.5, 
            FormBox["2189", TraditionalForm]}, {0.5, 
            FormBox["4113", TraditionalForm]}}}, {{{0.5, 
            FormBox[
             RotationBox["463", BoxRotation -> 1.5707963267948966`], 
             TraditionalForm]}, {1.5, 
            FormBox[
             RotationBox["4036", BoxRotation -> 1.5707963267948966`], 
             TraditionalForm]}, {2.5, 
            FormBox[
             RotationBox["3746", BoxRotation -> 1.5707963267948966`], 
             TraditionalForm]}, {3.5, 
            FormBox[
             RotationBox["1995", BoxRotation -> 1.5707963267948966`], 
             TraditionalForm]}}, {{0.5, 
            FormBox[
             RotationBox["1", BoxRotation -> 1.5707963267948966`], 
             TraditionalForm]}, {1.5, 
            FormBox[
             RotationBox["2", BoxRotation -> 1.5707963267948966`], 
             TraditionalForm]}, {2.5, 
            FormBox[
             RotationBox["3", BoxRotation -> 1.5707963267948966`], 
             TraditionalForm]}, {3.5, 
            FormBox[
             RotationBox["4", BoxRotation -> 1.5707963267948966`], 
             TraditionalForm]}}}},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->{{All, 36.}, {36., All}},
       ImageSize->300,
       Method->{
        "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
         "RangePadding" -> Scaled[0.05]}]},
     {"", 
      ItemBox["\<\"predicted class\"\>",
       DefaultBaseStyle->"LabeledLabel"]}
    },
    BaseStyle->{
     FontFamily -> "Verdana", FontSize -> 8, FontColor -> GrayLevel[0.4]},
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxSpacings->{"Columns" -> {{0.5}}}]}], "}"}]], "Output",
 CellChangeTimes->{3.7752227981587543`*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"ef4549d3-d52b-4031-9d4d-6abf6d1672ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"entropyImagesBigC", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{"Keys", "[", "fullTestSetBigC", "]"}], ",", "500"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"entropiesBigC", "=", 
   RowBox[{"netECA14", "[", 
    RowBox[{"entropyImagesBigC", ",", "\"\<Entropy\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"highEntBigC", "=", 
   RowBox[{"entropyImagesBigC", "[", 
    RowBox[{"[", 
     RowBox[{"Ordering", "[", 
      RowBox[{"entropiesBigC", ",", 
       RowBox[{"-", "10"}]}], "]"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"lowEntBigC", "=", 
   RowBox[{"entropyImagesBigC", "[", 
    RowBox[{"[", 
     RowBox[{"Ordering", "[", 
      RowBox[{"entropiesBigC", ",", "10"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"highEntBigC", "\[Rule]", 
   RowBox[{"netECA14", "[", "highEntBigC", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{"lowEntBigC", "\[Rule]", 
   RowBox[{"netECA14", "[", "lowEntBigC", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7727190003310432`*^9, 3.7727190300142097`*^9}, {
  3.77306943758751*^9, 3.7730694509663277`*^9}, {3.773158502088438*^9, 
  3.773158510047945*^9}, {3.773291269588808*^9, 3.773291277379661*^9}, {
  3.7733482430458937`*^9, 3.773348252369199*^9}, {3.774188641350009*^9, 
  3.774188648929162*^9}, {3.775222905853323*^9, 3.775222915581979*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"fd04d8fe-82e3-4369-9c2f-ac111acf8e24"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztmDGKpVUThhsFcQMuwHRCTWWaAVfQExm2oBiMCCMyGAiuwsTYDbgGN2Rm
aA8YmDTcj3PqnKfe8wT/z+PQfe936616qm5/+vUPD99+cHd39+PHT//38Pju
1du3jz+//uj9f3zz+Obzz958+IS//ve/9/z45V8vH77/7v6LX/58+X/+7Y9P
7v/+6sX97//8dP8cP/e7z73OLa9/y2uOPPMtz1P9DCOvv7Lm1T0w8l7Vz3C1
bld/N7XfrtZqJJfq56H5ZJc3rtZ51uxXuK4irwoXVedY7Z/qWlX0W0UuK2uy
st9mzfVKb8zy/Er/E3hkXir2b4Ufds3IruxW9sPK23vW563uB8JeqO7zXXf7
rPc62f/V319m1XmW87vnNWufjvRDxX7f5dJdtxP5s+zy9sobUv+vvw0qvl9U
+4TGFfdz9bxX3wYE51fMBbnfRnqv2iHVTOg9GhP6vCJfGs+650c+7667izyD
p93/s3bErv5J6j0C7+rz6u+JhNoS9m/FjHefwRPu/1kzRfZ5x96j8a57W//X
3WbkXUDLK/X+vzpfK72h//nOqa6h/p/7ea/WZNcuIOR1wv2/8n4guL1L7xF4
liv0//r9W32zVe8CWl6p9/9Iv836GRqTMyL0/Kye0f91n53gou4zeML9P1Ln
Xd8N9f9e5698Tf0/9/tXtYtS8+qyc2l7sOMu6JhRdW+PeLui/idkutIzFbu+
e16n3f+7epLGhN7b1dtXazLr56v3S5dMr9ZkVha7+qpLXt7/4z3ZZRd0zKji
tqnYC7v2CznTiltx1y5I8v/J9//I86+86/Q/585ZmcVIdoRMR+ZilvMrdkGS
/6tvDMLnqnielfOu/9ffOQSucCOBZ92cFfN7mv9Pvv937X0CE3qPliMt06u+
6jiPs+qz62br7v+R/ul4/+t/Zu/RMqXle/XZyPM4a39V364j3wu6zKD3v/5P
zav7LhhxDjnfkbu6wre0nyfk4v2v/0/mXbtglt/I+Va4ZWXNK5zp/c9n/X8m
074XpDq/4ucJe2HWZ9yVkfe//pc5u6DLrM36LFc/F2F2KnYKoZ9pz0+YfYLP
9T+nHyp6o6Pzq3fHLMfOymLkcxHy9f7X/4Q6d+SKXXDCTHWZr5H6k+fR+z+j
P/U/h0d2wWnO7zJfI8858nl31d/7v1d/6n8mj7jitFzI87Xrs9BulZF90Z3J
/an/mVzhkFSmzddIFrOcuWsXeP/z+1P/y0lMm6+rz7by31feJ97/zP7U/3IS
0+Zr5Dln/bv3P4dp/an/5SQmzFe1G0f+jlQxp97/vfpT/8upvGu+Vvqz4jNW
1N/7n9Of+l8+gVfOV0X/z/o7z8rn9/5n9qf+l0/jJP/P+psS4fm9//W/LCfN
16z+n3UDE56/IhdCX3XsT/0vn8Zd/F/h9lk/P6v+3v/6X5ZT5+vq+474s9q3
3v95/an/5dN4l/+vOnzWe81ysvd/Xn/qf/k0rp6vlc8wa76qb2/vf05/6n/5
ZK6Yr1tep7v/b/ndlX+PSnWL/pflvvM169l2+b9i31XnQuirLv2p/+WTeeX9
v9J7tL9BVTzP1d/tyPpflnvN14jHyP9esQuq37c7639Z7jVfI+9F+Pdqz1S8
fqpb9L8s8+drxJ+7nF/xWXQLsz8JnJqR3JcrPDnyvhXOr5g7gk9OcIv+l+W9
80Vz6azfTXJRqlvINTcjuTvP6mfyXM+aO7KLUt1CrrkZyR151t98uri04zPr
Fn7NzUjuyFd7srtLOz6zbuHX3IzkjjzSn7f8Lm2u9T+n95JqbkZyF57l7Vmv
qf+Zn5HG5JqbkUzmkf6c9Zqzvl8Q5o7solS3kGtuRjKNr87L1Zki7xf9n+cW
cs3NSKbxLN/OmrWV+0X/57mFXHMzkrvwLveS3yvJRaluIdfcjGQy39JjhLno
MndkF6W6hVxzM5K78Mm7QP9z+jCp5mYkd+TTdoH+5/ReUs3NSO7OJ+wC/c/p
t6Sam5GcxKm7QP9zeiyp5mYkp3LSLtD/nL5KqrkZySdw912g/zm9lFRzM5JP
4467QP9z+iep5mYkn8xddoH+5/RMUs3NSJb5u0D/c/okqeZmJMv8XaD/Ob2R
VHMzkmX+LtD/nH5IqrkZyTJ/F+h/Tg8k1dyMZJm/C/Q/J/ekmpuRLPN3gf7n
ZJ1UczOSZf4u0P+cfJNqbkayzN8F+p+TaVLNzUiWObvgqjeSXJTqFnLNzUiW
+/ohyUWpbiHX3Ixkme+Hq7/b0UWpbiHX3IxkmeOHkXkc2Sm6Rf+fnJEsd3HC
yB6p2EG6Rf8T6izLXZg8U7pF/5+WkSzTHHuao1LdQqitGcky0wOzfr67o1Ld
QqitGckykwlzRHAUrSZJtTUjWZbJjkp1C6G2ZiTLMtlRqW4h1NaMZFkmOyrV
LYTampEsy2RHpbqFUFszkmWZ7KhUtxBqa0ayLJMdleoWQm3NSJZlsqNS3UKo
rRnJskx2VKpbCLU1I1mWyY5KdQuhtmYkyzLZUaluIdTWjGRZJjsq1S2E2pqR
LMtkR6W6hVBbM5JlmeyoVLcQamtGsiyTHZXqFkJtzUiWZbKjUt1CqK0ZybJM
dlSqWwi1NSNZlsmOSnULobZmJMsy2VGpbiHU1oxkWSY7KtUthNqakSzLZEel
uoVQWzOSZZnsqFS3EGprRrIskx2V6hZCbc1IlmWyo1LdQqitGcmyTHZUqlsI
tTUjWZbJjkp1C6G2ZiTLMtlRqW4h1NaMZFkmOyrVLYTampEsy2RHpbqFUFsz
kmWZ7KhUtxBqa0ayLJMdleoWQm3NSJZlsqNS3UKorRnJskx2VKpbCLU1I1mW
yY5KdQuhtmYkyzLZUaluIdTWjGRZJjsq1S2E2pqRLMtkR6W6hVBbM5Jlmeyo
VLcQamtGsiyTHZXqFkJtzUiWZbKjUt1CqK0ZybJMdlSqWwi1NSNZlsmOSnUL
obZmJMsy2VGpbiHU1oxkWSY7KtUthNqakSzLZEeluoVQWzOSZZnsqFS3EGpr
RrIskx2V6hZCbU/O6F/pvTGj
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt3cGqJsUVAOBBQQyuxF12LnyBZO0dsslanCcYIVkZQhQRd7OTxKWbPEA2
Ie8QH0AGMjvXeZKMGMIvoeCce+r0X931La58/vy3b1V196nqquoz73/yx49/
/8aTJ08+f/v1fz5+/uVvPvvs+VfP3vrxf373/NNf/+rTN1/zxX9/fvS7v/jm
4fu/fffw7z+/8/SjPz17+q8Xrx7+8tf3fubb74w8+t2IR8eJ/N1seY4sc8fn
3ecle8xK+1fOe8fxK23S3ebZenWc31n3wqwyzyrDrPt0VmyplDNb5tddwP9+
Xj779uHlF39/+OAP7/3Mo+9Efjfr22Nmj99RnsrfnfX5keclcszIT/b8Ro7T
cfzK9d/d5kfeI5Vj3ismdMelyr1wZPyptOFtX/D8zVcffv2P3z794Z+/fBg5
8v1sXzY6/uhvjX53VnmyZY60T/bzbH0r5yVyzKyPPOaRx8862+aR8z7rHsm2
yay6zIoJ2fM4676e1W7dzpZ/9LuVdhv1R9l2nnU/VvrQ7HVVeSaddU9V4tVt
OSPtk30mrRyzu8wdfcEsV+6RSFt194mVmDDrPGbv62wZOuJPJUaNyl85d7P6
yux82qz7pTI3mz2/kWfDWfdUd8wZtU/2Hs8es7vMK7v7Hsk+g8y6B7N16X42
nNX/HrlG0H09VGL4rHnaWfdLZb4022d1j+W65zRG10/kvGTLMzrmrDmTWcdf
wbPukXv1WZF7rTKWy5ahcpzstX3k+kj3uYv83ci8d6Q9KzEt8owWGW9k11Mq
11L39XzkGCD7nY7x/5Fz/h3Orq2sUOZsOSt7V+7V/2afMWetEWRjbMe5i/zd
yP0+il2VefJ71T07D7PyWK4yBsj+zOq/7tU/drd/x16FFeoSGbNFrpPuvi8S
uyJj4I410461xex4ddT+lfg2Ou+V+6Wj7pX+8YxjuexcbtYr1HE1z1oHXNnZ
+f9KjK3c+5G/2zGXW1l/nHWOZvXF2fbMtm133Svx7Yxjucoem6vuw7lXPztr
r8IKnvV8d6/zMooPkTpW9hdlx+SVtqrMcWXXr7N9Wfd8cnbOp+O9mBXu0+y1
UTnvO7uybyG7DnUld9cx2+d2x5zsmnL2esjuo6jExmw7RNpkVt0r6x0d19XK
91qlX9shRmWd3Vs+GkOuUJcrObs2MSvmZOeTj9xHEZmvq+wPya4Rz6p7ZM6n
+7paeSy3wxzFvdozO2aoHJPj5yW7NlGJOZW4V5lDzu79yNYr8lM55qgulZiW
vR4q19XKYzlzFH3t2bFvYbW1pLN41rP8rDgQiXvdc8iVtYBKjM32s9m++Mh9
6bPeq1rhHjFH0deeKx+T+/qX7Bx7JcZ2l7OyTp19rpk15unYlx6Jh5X9Qkde
t+Yo+tqzew1x53Ze2bPiYWWuvuO6yj6nZL8/a/9M9zrCKDZG5tZW2BdkjqKv
PSPrXJU1RPts13Tl/crKd7qv1VnzNqPvZ/cWRo4z6rMi3+8YA1Tap9vmKJj7
nJ0nmfXs0F3+WXF7FDci64yVNu8eA1Ta58i+yRwFc18cGI2xV8gLly1/dg4n
sj8k+6yR3Zd4r+fls5xTcxTMx7iyDti9dzESx7JzL9l5sMgYcrW59Gw/lT2n
K1y3zPw4Z9+vjBznyDmf7tgY6XeyMfPI+Bl5VqqcU2Nm5ms4O88fiY3ZPduR
WNSxJyS7lhF51ujeH5V1JYfeas8yzFx3di2gY799JY7Naofs+8KRmNmxP6rS
p0e+UzmnK1zPzDw3bszab99Rnll7QrJ1r7wrceSe/+xzU/acWj9lvoa788J1
5AWq7AmZNdaNjPMj4//u9fHKmkXkc2a+hiN5Ce61578jNmbHutnx/JHj/2z/
VXl+Wfn8MvPj4kZHXrgVxo3Zvilb9+zvjuJwtl7ZZ6VZfeIK1y0zP873ygt3
5LhxVm7V7rXUe533Sp+4Qp/OzHVn9+1kY92R+15mOfJvSFXWUleYK6u837FC
+Zn5cT4yL1z3vPeR/WDkdyPHPGMdj8wLwcxrxoesj9z30tEPRtZAV37/q1LH
St/HzOu7Oy/clWJFtu73ev+r4kh/vXNefeYdnB33jn737HsIK2P4I/d/dtRx
VE77gpiv5468cGeMFbPyp91+vto8WGXv6Gr7mph5rmflgTl7rKjkTzt73SN1
WW1fEzM/zh154c6YQ6ay5/9K//7IynNWzHx8POx4N3YFV9Y3zzjHNautVigP
M/fd45W8cGdc/83mT7vSPA8z860reeHOMjau9HFnnONiZo7Ew0peuEiMvVcd
s3P1Z3nPl5m5Eg9HsX0U9yLxcIX3YSu+ar2YmbOxLpIX7uzvw2b3NZ2lXszM
2ViXzQuX7TtWaIds/xhpwxXKzMxciXVZR/qOUfxcoe6jslX+fYEV6sLMHIlX
lbxwo34k8jkzM6/jSl44/7YsM/O53PHe61neC2Bm5p9c2QPpnVlm5nO5ktst
sl/IO7PMzOdyJR9y5HNmZl7Hlfkc67/MzNdwJC9cdv5nhXoxM/P/u/IOr/xp
zMznciUvXGUvkLkgZuZ1nI3bldxBK9SXmXlnV/LCzVojXqEdmJn5J2fzv0Vy
Jp8xLxwz8w7OvgsW2dvpvQBm5vM6Mv+f7VO8F8DMvKYjeeGyezu9F8DMfC5H
5v/lhWNmvoYjawGjuC0vHDPz9Zwdw1v/ZWY+r7PPAvLCMTNfz6P3v0bfkReO
mfm8jszPV+Z/zAUxM6/jSF647DyPvHDMzOfyKFZnc77JC8fMvL4ra77ywjEz
X8/Z/G/ywjEzn9eROfzRfk554ZiZr+3s3k7vBTAzn8sduX28F8DMfC5H1gLk
hWNmvoYj8/nywjEzX9vZ8fyov4h8zszMa3o0npcXjpn5es6+wyUvHDPz9Tx6
h0teOGbma7iSz01eOGbma3i0/1NeOGbm6zm7/1NeOGbm6zmSI1ReOGbmfSwv
HDPzPh7Fc3nhmJn3sbxwzMz7OLsWIC8cM/O1LS8cM/M+lheOmZnlhWNm3sfy
wjEz7+PRmFxeOGbmfSwvHDPzPo7s/5QXjpl5H8sLx8y8j+WFY2bmW8sLx8y8
j+WFY2ZmeeGYmfexvHDMzHxreeGYmfexvHDMzCwvHDPzPpYXjpl5H8sLx8zM
8sIxM+9jeeGYmfnW8sIxM+9jeeGYmfnW8sIxM+9jeeGYmVleOGbmfSwvHDMz
31peOGbmfSwvHDMzywvHzLyP5YVjZt7H8sIxM7O8cMzM+1heOGZmvrW8cMzM
+1heOGZmvrW8cMzM+1heOGZmlheOmXkfywvHzMy3lheOmXkd/wfavAhy
       "], {{0, 
       128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt3L2OHcUWhuERSIgbICEjJYTcI2IyEyECNAiILCGZAJE5RIgb4ULIuRhy
sCUCJ5amp9a71le13+AcPWc03ru7ev1VtY8/+e6n5z++d3d39/OHr//r+cMv
X7x8+fDrVx+8+R8/PLz4/LMX77/mq///88Zf/vPvs29e3d3/+ddvz972p39/
f//x79/e//HR1/dv+12/f/VzHvOZ7/qdq59J3MvV6+m8F2IdiHt/zOevXE/V
z69eP/GZnT8n8oJYq6lnROdpVU2uqj90LnfWt4Qa2NmzqvpyVf+6Gid0H1x5
7p19J6Gvdc6KVetM/1l6hqnKL6JGddZ8ej6hayDdC6rmDaI20n2EniuqcjOh
RiX0rKr5pNNED91lPTtrftr6J8Qqke+d3zU1v1XNS1XrmRYnnTMDcZ1pvaAz
1+j1pGs+PVMRPaUzx6ueO/G8iNpCrFXCuiXUfPpeiOe+S/3vnJeI9STupbP+
E+tZVTc657eq/k7sHei1Itaz8zPp+E+YMXas81XxtpLLU+uZMCtW9USirlbV
t4T8JWaYznwn5qiEHJzq751zVEJt73wWU79Pz3XEfoSef+hcq1rPqf0jPfsR
+Ti1P52qaXTvnoq9HZ1W56typCre6J7SOYNNzcNEvlftcei+TM8PVZ+fXPM7
139qHkhz5zxPz5/0NaflHd0HibmLWMOpvVVCLCXUsc4+3tl/E+pzcl9I2EfT
MbBj/a/qF51nLLvn3dR+Z2qmpet21TyQsFa7eyqu6DpG1M+050XUqKq8S1ir
hDWvykE6PumcIvb4U2u1u6dyuWrvTOxDd6lpVbmzcu/J+6apNe+MMWKWpu+l
ar+ZcAa1o3fJ5eR9bsJZUOes6JnPel4QdY/e83b2wao6llZb0jy15vRcMVVL
E55XVf3prDnJrqrVnT2U/l4iRxLmyVNjeBdXzVSdeZSwVlUz/0ouJK8VPQ8k
rDm9pyDuN622pF3zrZmYM+n9dcL60P2OriEJJs4QiDVPiKuVvUBC7nT+Wc31
64Q/S8cG3RM7zzROyqPd6wnRr3fpBTrHnWfRVbWUjmG6B02d7ZjvOblW9ftV
55DGxm2aOBcl+lFnDBPzdtV93dqcfwvunAFWYl6f4c6zfSL+iV5QVVfT9kcJ
8aa53KTfmxhLZ3jqzKGqF1TtbafO7Tufozm7l4mYX/ku4+oM0+cYCdfcWSen
ciSh7+icPH3Mn6X3CwnrptdrBVFXO+tb5yw0dSbmbHae6TOcq3GesCaaqxX0
XqBqlq6qsZ3n51PvQczlvTx1Dkn0HZ0TS1d/TsdM596TuJ6EGtu5r9ezeUrM
TsbP2Z7aP3bOuisxX3UNU+8+iJ/rnPpfFdtTM5XOqfmd73foekifU63kQtq9
T/UpPdsLiPpv/GS6qgbS39u5B1m55s7vrbr3hM/U/b1gJbbp79WZcbJLPSTe
KXTWUnruSjgf0zn5Tu8LjI3zTLwPqopD4tw+eUYizrKm9oZ6tv535oLey/T5
ScI55FQNJM5vr34O3UN1Tv4SNd/nfranzgE6ayl9DVNn/sR+ynzPd2cfNzbO
c3JNSNh3rKwPceZPPCO6Z+memj/1PsjY2NdTcywR83QeVfWXqb0G8fs6M0+J
90FEbOucuErr9Z1zbOcMT+Rs1fltwnPXtfFTVbd9R3CGd+/1RB2rmouIvKjq
0VXPyxzPqflVcVI1/9gL8k3Pomm9gKjzRE+p6sVp/VrX9vrOHk3nl86p+VOx
mnC/9JokrGfCc9FcjU3OL+MwpwZ21qip9wVT5yH0+xRz53ZMx9Lu16MfXx8S
zsA77/fqmhDrTDwjfbbT3s2lXY9er4dVfSHt+XbOJ75H050xfLXGdp5nOs/k
e+q951S/I+aTzn2Qe+rb8VTd3uV6dG1trKpLUzW/qh9VzfBTc755tK+n3s1N
vatynsmMt6rekfAeaupzqvqpOXK2q/bUnXtw4nrSZshTTZz5rPQI+l6qehYR
h+aIJs5hEur/1Wuma8Utm5jtq/oLEXv0/J/2+ebIeabPW4hr67wvzT27qt+h
63PVdxHnYMTnmyNne+psP/m7Ep7L7q6aOek9QlW+EPWfPkfyzF9P5S/xHoHe
p+v1mKmKAfq7OvtR53pW9YuEeNP5+Vv1vqBqVrEX9MQMcV5N7+noGb4q5qfu
3Xw5z51nNSuxmnCder220J9Jzy1V13Bqnup8J9RMInem5ka9Xns7P7PqeuhZ
IjlP9XlO2G8m7HM11wsSzgbpWZqun842mo6lzhzp/LOe/8zW/87PqTrDSTgz
MZ41nZsJcxcxv1X9XOf46nNfiZmEmm8866ncWfmchHtZ6WUJz0uvP6POfW5C
nhrPuqpOEjMScS9VuWDu5Jh41sm1lPgu4/k2Texh0/bCVbmf0Nf002Km6lmn
1efO/U7Cc9f9uUPU9s4ZiegR9Drr2jp5NTaqZgDivIjYd1fNRfo8E+/FEs5/
0s6sdE98Er2b6DXEviPt/YXOdOf8Q5//EHOaubBXfNLfS5/5rPQ75xw9lWvJ
9T+hnuja+Jw6VySuZ6WeJ/dQva8T9trE5zgL7eW0M0YiljrP7Y15XVVXd4mf
U+/rVCfsMa9eD9G/OvuIMa9vrR6eel+7O2GPWVXDV2ov8V7AsyCttX5aH+l8
/0tcW+e+SWutd3TCWXrn36Ow/mut9dPqML0vIP4Ohu8CtNZ6vf5f/bOdv5/2
Pl1rrXfx1Zl5qi8k/51trbXexcT7087fsZ5rrfV6/V85/686e7Fua631XjW/
6lzIXqC11pk1/2o9X6nt9gKtte6v+Vc//+rPp97zaq31qU7+9xYecw0r95uw
/lprnVbzV2opfXaktda6tv53/n+y/PfWtNY6s+ZX9YWV701YN6213tH0v59J
nPNY/7XWmqv/xHveqjpv/dda656+kPD38H3/q7XW1n97gdZaczU/rV/Q16+1
1rdmouY7z2ut9XnurM/2Aq211lprrbXWWmuttdZaa6211lprrbXWWmuttdZa
a6211lprrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmuttdZa
a6211lprrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lprrbXWWmuttdZa
a6211lprrbXWWmuttdZaa6211lprrbXWWmuttdZaa6211lrrHP8HviS2zA==

       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztmL2KJmUQhQcF8S7EWDDQ2FnMzIQ1MR1BowVhDcTMTDDazNzMi/AKzL0I
vQl3wcBwmreec576xmCXHvi6u96q81f9/lffPv/mrbu7u+/eff3f84fvP335
8uGHL95588fXDy8+/ujF268vf/z335vrD355df/Tz3/f//7e58/+e/3bX39+
8sevn92/+vDLZ4/5zcnvH3P9mNoeU8PJ9WPee/UsV997tYaTmSZ7S2CGwOcU
F4ien+CEqHnq+QYe0bOY0l7imQYtJWad9LWkbrQ0mcDDlB4m+0PU1uICPSMD
JpO6Z8AVjYGkVmyf19TZW5o85e9TXpnsDz0vYsehcWXG5Mb3GvrcmmnSp2zX
xO5A6MxUDQasJrPxVG9pnNi+A9h0r9Wf5HNonaHnYt4XDHUmv0HR+mzAWMvf
bfmE9qApLUreS/vORg1MYo/22S0+vtGzWp7Y0kBDT56CniT7djLT1v5o6+GJ
D9Ka1vJxMzZaPaS9LKnnG/cRs7bYMkmr/wZPn6rThrcWl4l80to9p3bwFjbo
fEL4bDK/GXiazCQtjhueSWfsVg5pcdl8djqLGvBs8xr6XIZ3GfpmyD+0pxDf
Ewwz3aJLNmzQedvwnYfI2DR+DLmUeNfG3aSVb2kcbsyiLX6Z/WvqvS2/Jn5P
vJfQN1supblj0xxbvqWzH43PZFak60/6bMvfbffarumet3Kpjfv0e214pv3a
9pyp97a096pf0Ds7sYMnrw3anuw5nXNojTX0OekdyfxJ5wozJqf2BQJjyf3l
VvW2pTMtfSA8hT4Lfe8U9wnMJ3+/MftNYTLpgwQ2aJxs19uWziQx0MqQNowZ
aiN4fTJrAp8tLBlmZ860yXxi01tD/2k8ENmVyDAGjtC12c5C4LN1RvreW83b
9G5r09uWL9NYbZ2F9gtDPwkduNW9aeN+YcjtrZ2ohZ/WjtbySlsGTmY5IkMa
+pnM0gbMtDiVxKQt29D7u22+yaxF+34ro06d5aRvNk2YyvxmvSU83cCpqfcS
+klkmyR+kvNN5pkWl5PntWHpKi8IvNFeTL+XftdGThHZrHXd6k+Sp1tyIL1n
0fvCRq4lM0BLo6b0lubLRk4ZepJ878lek+T+iR4mc6DB61t5hsYSnVeTmYeo
M+n7Uz2xcSrZk+R7p/ayZObcMjtb7qLPQmMpud8Z9GdKP5PYtmG+NQvbvQZv
nfKmZI6iM1LrmbRftLA0hX9Dn22ZqpU3/sd/xiuT+So5a9u5kpi0fUPY2POp
Og3eQf8+2Vui57Ydn9BPw73ErM3nos87pUuG7wmtnhN6S9xr8IVkb5N5ieBI
K2MYrg2emzzXVX5NYdjG3yRnp3y8lW9tOmbWRiIvJTMqnRMIPrY02dATmw7Y
ss3UnmXoD5HDkx5qyM9T2pjcJZNzb2G+pRVb8knyjGZNMOhGy6O3aJQtP5uv
aT8idk8aq1t+T2ceW05oacKUV7Z43dolk/5u8CaDnifzg23/3TiXLfmEnhHh
I/Q+TucN+r3JrEV4q8FnbfUkcZXU6ta5DPhJ+mBSB5L7He19rXcRWY72cYKD
rZ3FvIfSu16y58S5DPvCFj8yY4DGjME7Tupp+TixE5nz7Ynf0fcadI+YL51D
bH5t0HkbBmgfIfQ8iR86B5rzBtETQx8MvpzcKejzEnhLer1BZ2gM0DnW8Bxb
RjLg0OCPrT5sqcFcD+01hppb+6wtN9KelfS+ZEYy+EhLkw010x6X1EmzJrS0
xeChrZ2IngXBl5b3PYXs1PImOkcl97vW94cWl5P+SGQwOnNO9dOQYWieJv0i
+XxbdprSmSTeDP00ZIApbBv0OalvRJ9t+ymBYbpO2i9aPTRkp2R+Tvah5TtJ
z6I1cCrv2TzagKukjxN5IJlPDL2ivxXQ2cmsIcReSWSzll7RfbNlMxpXrT4n
/dGQPYhMuOUsrTzcwmfSEwmta2WeqT63siKh1VO4ovWnlRuTOmPw0ynO0jvR
FDaSvWr1n+YgnanofEs/k5gjzcGWB7Uwn9QZoue0Rxuuk72l81irV7TGEl65
JS/dEr8Ij7Z5K60zNGaSedKMQwKfxO5MY8DgI2ZcXe0hsUPZznuC8yRPDZpJ
PN+2Oxi0ZQqT9DcQ4lytfTOZHwx4prFh2Bda+jP1LYXQCqJvBu8w6DDRT8Os
zR5KaHgS24Y8Sesn3X/6OS2vIXbwKRwafJ/uD6Et9BkJvBk8tKWlRC6a4guh
G2Y/sl1v2TeTz2zpdhJvG/vf8uWkNtL63NqLT87e2meT/pLsc1L3krwjzk7v
UEmc03uZgWtTudHAWUM2IPYdArfEubZ4qI3vJ1pHn5H4npD8JmCYBdHDFi8M
ektz2ZAJCb63+mzmcpLvhhy1JQuZ9byFw2TeMGgCzWX6XMk6zTikPSjpI0mu
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
DS2ubcEwjWdakzdqVPI7DF0/wRFbbkzm3uROZMgn5hpsOYHYfZK5gtYKwlNs
GCY8LundtD8a5rIlbyTzibkGQien3nsVb8kaTuaV3JUIfiW1l+5P69qswy1d
svnaLV23djpai64+P6lFrQw/de/GDGy7pvfN7f0x+NotXSf9lMi3hCYT30YM
vknXRvc5uY+YeZf0U4NGGTR8S0+IXiX3qWT+Sb63pQPJHWGqzydzoWdKYLv1
TFt/DL6/pSdJnyL2KUP+IWpu+SaBZ+JbE6HVUx5h89AWTrZnvykMG3qS9Cma
+61MldTtVs8JTE7tVkm8TdV2wjW6tta9tuxn1isDr80eRPRhytNtO90Ul0+y
k+28U9ggepjkoLnPxNnpfEt4WSu3EJmB/s2U19M9NPCx9XzDTkfow1O7pr+N
TGl1C/PmbED7EXEWmtctDCd3xlYPzTud2VsN18n8k8Tq9jzQ4nsLG+bcQvSt
dS+NPZuPG7hmuCa+aWzviUHHDHwn/ILmUWuX2XJN+5RtLvRvDN8lknpyS3uc
IQ+0vg/QunqSH4j+E15pxjBdG/39p/X9oaUb5ndt3+NaXpmsjZ6vOZ9PeV/r
+4Ytk9C+PzWXKY2yZdokxmy4TXq0ube0zxL+QufzJFYJ7tO+OZUNaD008Kvl
vyd9buVSW95reUcr82+8JvyC1u0p/ib9scVHuv9m/WnNt7Vf0Nc0Pmle2zKJ
Lf/QfaNraOnwVN6jfTa5oyX1h84hdEZKegrBcdofW1q90Rc21tzC6pSeTOVe
OmsR50ryfUoHCH1r1WzYuej+02dp7fhED801m30tiR+aO+bdh85+ScwT2Z7G
iW13vnovfS7bjraxZrOvJfFDz47QqOTuY8DY1O//AZZXiSs=
       "], {{0, 128}, {128, 
       0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztlz2qZlUQRRsFcRbiFBQEA30IinkbG7SgiQ1CC4qZYxDMHYaZgzB3HmYq
mApfWbXP2VW1AmX1x333p27V2nXf/uKb51+99uzZs2/f/Pt/z198/9GrVy9+
+OyNf/7x5YuX777z8vW/8cd///uH//juraef//zpw9/ef+8pyr988t3T759/
+vTx179+kDnPI+d/5Fr/dfx//e0jv0fPk7luVR3U7/GR5z15z+r3FX0XJ9+R
4p4z7049p7eepXtvnJxN9Vyf9Js6X9y8qvaG4j2erFvUA255p/abeq9Q53jV
OW/1hvpaas8ojq+qW9UOdnLGTzpf3ZOKPafqftz2OnWuqb9H1M+ryJGTvVGV
Zc4Z4bbfnnSOm8ccPOng/5Mzpd431Nc96caTO6T6u+nkbuDs/1vOV3sgcw9q
jynmq8qTJ/2v/g5S73WKGVF89936hlLURPG3VR7Y7P+q2VH759bxDvverW8x
tz3z1l5Xdd2TO8lJb7hdSz0vDt5W1FPx7ZbZ0255/qST3XYzhz1Tvb/d2g+r
9uGpXlL3ttv5HeqmOKbKt7c8r/4mddjDT/pfsYc4/K7Od4fsduOT35gbau68
b7uxOh8VfeW8T6rzTr3P33LIVBfdyoWqvc6hDmrnb/C84tlP9pUixx36tqqf
b3lA/Q3S5X059Mat3cCtDpkehj1d6rYP3+rnW+e89V3Z5d3d6v9t2Rq9/6rj
YR//39qHb+1y0XuuOqfimytzvMP7cmDF+3Wu861ndPCtG5/0v/M+rNjlHFyq
yFnF8zp4yblnumeuet4VO8wGVvvfeR++1dsKlyrmTpFBzo5y8KF6rjvWGYf3
8r/bPuzwXaC4T3X2nXR7d0c5O617nfH/DP+r92HFDnzLmW7PnsmajP+7OKqL
0zpmAf7v5X/1PtzFFZl34eDJzDkVPeb2frs7rUsWONRqKqvnq2o/VJ/zVq8q
3O4wv10y2qE+Dk5zzgK3Wk3ik96I9lX0GOdeVdTE4XnVOT6VnZ3m1m/OterO
6nmsugf1zuywD2f87/a8eH6G0xyyoEutOrJiThW7vfoYh77Ft3u4o9NuZUHH
WnVhtTeqesmtJxU56HDPMP53y4LutXJmhf+rrpU5xs2rmR528BXs0w9urJ67
SbVy4yr/R997VV912bHVOQj34qlOU8zd1Fo5cMYzit21yzkV9+CQUzD+d8uC
DbVye0fqd1eVOyfPeXLG1fcG438Hzyi8BOt2y8w5M8efPOfJGc/8DvdlnJbv
c4f778jqXTrj6qodwMGfit3GwV0w/j/poujfwv+v5grnZM6puAcH5zucE8b/
DqyYC7j2XWS8fbIfHGa56hk31G0zb/Z/lVu21c3N+Yrviy5Oiz5vVU261w3G
Y9E6ULe7zq96F5lzunHVPh89pup+YM/+cfBDF/9sq5u65rf2zIz33Fix/0yq
D7zT/wpvkwU6P6j9f/JZbs1ypm6Kc8I+vMH/6t1J4ZnuXOUH9bt45FodXZfZ
VarOCfvzVP8770UO9XGrv/PxXfxf9V4yfetQBxj/V/VtZi+aWlu1Zxw834UV
Paw+BvbhbY6qqknVPjaVozXB87WzHJ1rxTGwP2/wf1Vvq8/ZndX7Kp7R5WnV
e+Ed9eJtvlLvThtq6FAfh9lxmNmqOmeOJwv68gb/V9Uhui9NrWfVzlnlKIc5
uuX8TB26nBPG/+q91OGY7pzpq6pcnsRVO0zHc8L4X73/3zpmKt/qPYc5cphZ
Rc6qzwl79pKDT046X7Hbb8gCxR6ovu4kVvSquv9hH57k/6q9pcppG7KgyieK
3zdw1bO7nQfG/1Xf/lPP6cCZvqr6HefA8B7/R+8z6g3nczpwJr8yzo9e12G+
YNiZO/qnyslVDlec040VPXayVg6zBsNu3N1LmT0zWgfFOZ05+rxV/aZwPlkA
w/McdXJvdDiPQw2r+i3zXYD/YRj/w/7+j16rKgvwPwzjf/i8/xVurzreYe5g
2IHxP5zxZ5XnFbmA/2EY/8N5/0cdXnWtaN9msgaGtzH+hzM7fJXzFVmgyB0Y
nsT4H37kvXf3f/RvYXgD43+4yoEO/j/5vDDcnfE/nPFwpn86XheGJzH+h6P9
sOF3GN7A+B/O9Eb33/E/vJnx/05+pB8mfS9En9dhNmEY/8Nq52f6xMHt0Zw6
WTcYdmb8P5ujDo/2zK3vBcV9qusGw26M/2ezwqXRPqk658l+xv/wBsb/s/mk
/6PniWZE1fcF/odh/L+BFf6PXivzjRDt28z94394G+P/2VzlzCqvqh1blU34
H97A+H82R9/1ySyocmzG+VX1geGOjP9n8y1Xn/w2uZUpMNyd8f88rnJdZpfO
9Fvm3hSZQhbAUxn/z+Co9zI7/MnsqMqXqufK3BsMuzH+n8FVTs70RpU/FflV
dV38D09i/D+bFV5V/60i79jzYRj/b+PoO93We+pcg2FndphB+G4u3HLdrd57
5FoOswnDU2cQ3ul8t94jC+DN7DCD8B7nO/ceWQBvY7cZhGc7v0vvkQXwBnae
QXie8zv2HlkAT+UuMwjPcH733iML4EnccQY3c3fnT+o9sgDuzt1ncANPcv7U
3iML4I48aQYn8VTnb+g9sgDuwlNnsCNvcP623iMLYGfeMIPOvM35m3uPLIDd
eNsMOvBm59N7ZAHsw5tnEOfTew5MFsDM4DzG+fQeWQA7MzOI8+k9TyYLYGbQ
n3E+vUcWwB2ZGcT59F4vJgtgZhDnd2d6jyyAmUFnxvn0XhcmC2BmEOd3YXqP
LICZQQfG+fTeVCYLYGYQ57vx5t5z6HmyAN42gzjfh7f1nhuTBfCGGcT5nryh
97owWbCTp84gzvfnqb3XncmCPTxpBnF+L57Ue1OZLJjN3WcQ5/fl7r23jcmC
edxxBnH+DO7YezBZMIm7zCDOn8ddeg8mC6ay8wzi/Nns3HswWbCB3WYQ5+9h
t96DyYJt7DCDOH8nO/QeTBZs5lsziPNh/L+TyQIfPjmDOB/G/zBZ4MPqGcT5
MP6HyQJPVswgzofxP0wW+HPVDOJ8GP/DZEEvVvif9wLjf5gs8OfMDOJ8GP/D
ZEFfxuewc+/BMFlwZgbZ82H8D3dnsuD/zV10Nh2eBe7L+B8mC3xmMFNbGMb/
sDOTBfm5e+Q8MIz/YWfenAVRn+N/GP/DU3lbFmR2+2g9YRj/w114ahYonoUs
gPE/PJW7Z0Hmeauc36VWMP6H4e5ZkLlnhdvd6gP7MP6HO7JzFkTvoeoZHZ4d
7sX4H+7Ozlmg2O3JAhj/w7B/Fjxy3ei94XwY/8Nw3yyoyoVoHWAY/8Pb+FYW
ZO6taucnC2D8D8NnsqDKydFj/gIn5rVD
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt3L+qHVUUB+CLivgKYuUrmFbvxc5OiKVYXEGrgBALSWdlYSf4BPY+gi8k
+A4mYJFGuMNevzVrz/mKhC+Xyc7M3mut/edMzsff/vD8+3fu7u5+/OD1b88f
f/r85cvHV1+9/+YP3z2+ePbJi3df8+f/fr3x759++fDRP+89fPPbF/d//PX1
w6/3f37294e/3P/fz1f8dptHfbTNo//u0TZXnivxd1f6JzG+E9o82j9Hr1kZ
o3TcVv08UR+qcn9CbTmrNq7EaufzVsVkOjcT95NwuoZc1bv0VWLeT8zRE/K0
s7acVRur1p9nzQXpOlwVh51rv3TsVa0Zdnd6r9d5n4k1RrrPE7U3Uceq9h2J
OTTd/kpcpceus/30faZjqbP/Jzuxluis+YmYmfxcZ9WZaXvACfvNzjkxsR7Y
ZdynrSEn1O2zcicR/xNivnMvkDijSPdnZ+2qGq/O+t85R1f1SdV97lIzV/pn
wv135k76DGFaHThrj9NZzxM17aw1wIT8nbAu7VzPdI77WfP1lep/1Z6u6ppE
rUvf8y5xPiFmEn01YX7s7PP0Oi09n07OkbP2+9OeNz2HJvaG084urhQniTpw
C33VOc925lpVbEwY98T8OCF+qua4RH9WxXbn3LTSVxPivHOdsNKHu/fVhDzt
PPtK7Is7x71qrzQ5VjvjpGruSMTMhDOKHWPmrDO0s2rChD6vmgs687Qq1ybU
/AltpuOqKiYn31siXyacX50VJ51ruck5Na3+T65vE9bPnTXhSnE7+bnS+bLS
zuQ6n87Z9F5plz5M9PnKWKTrW1VepNeWVTWhMy8mxOG0mlaVL+nzjV3GPVHD
J88101wVM+n4T8xBidxJ7PET+6BdPO3+V84iqtaZnechuzu9X5jwjFUx3Hne
0rn2npA76blv95ic7M4cqZqDxIN8WaknVfGWOLfpfN7O+eisNrl2XNLne2Ig
N3YT7v9KfbIyX3Q+bzoeEvl7y+uZCXk07RxSDOifaX2SPt+e7MSZT6Ju8HqO
dJ7hG1+e7MR50YTnStSKCdfw+vieVf+NL09w+vPcHeM8fT5wpb7axZPP7ow7
T6hvVWeYO655qj5fXrlml77a3Z3vRTBPcOfnXJ3v6qTrQKIfnBvPH+ujeTQt
tplXYjJ9dnFWjiTWb7u0eWtO70mNC+/uxLsu0/IiMTft0uatOb0n3f2ck3mX
+jatH876DHFav01253p+l3NO5sn1bYIT68bdPx+5BVd9RpOYj5gnxPyVzoLS
eTqtHa7tW+9u8Y7uXM9YF/FVfdX9L9+OE+9wWhfxrflK+1++thPvP1TlxYT+
YU7U/5U8Yk7X/Kdcn1jnmAt4dx99F1Sc84SYvGqbzJ35lfg5c1VMrly/S5vM
Z+Va4r1f5s55YcL7/3KBJztRt80FPGEu8P+bmJ9en1fqts8IeEI8X6kd5nSO
JN6FsEZiZp7jqvX80Wuq7oeZmXPzQuLzX3WemXmOd3lHjpmZe+aCs96RY2bm
c2t++h05cwEz87k1f5drmJk5Nxck3gs9eg0zM8+p+U9p5+g15gJm5jk1/ynX
+45cZub53uX7bH1GzMxcW/Orrt+lTWZmXq/JviOXmfl69h25zMy36Wnfbav+
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzM/OK/wUuHgvY
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt3DGKFUsUBuBBQVyAGzBwA5oJvsHIfMyFETQSBF8gL3uJK3ABJgYGBgZG
7sW9qGBgMuClzl91avoLlM+h7emurv7PuX3r3rvPX1+8vHF2dvbv7Z9/XVy+
ffzmzeV/T2/9+seLy1cP7r+6+ZP///7zy98efn30/dO988/vL84/frlz/uXD
k/Nnn9798+fPr9rmqu2v2ubU/ztybCPHM/K7TvWpx3zqPqvOPXHtEvOt6nqN
zI308Y/M8/T1qjqvVXMmce4j8yeRLVW5NDNjE9m1KvMT90jiuqTnT/p+r8qK
xHVJ5NXM3mlm/U0cT+J3Jepjui6syuqZx9wt82fWgkQNTfcPVffXzHuhcw50
uDer5snMuZfubbo5PR/SPcmOmd+5FqRzu6rfTuRDohZ06CVW9fMd6lHVOKwa
tw7Zkt6+6v7aMfO71YL0WM28vjP7ig7zbVU/36EerXpN0aHuz6yPVb3ZzD52
l8xfVQtmjlXinqrq63YZw1X1Ir19ukbMnKud50DVuFXdL0e+B1fVglVjtar/
371udptjifOt6j9nvlYd+XkHp1+L6fP73Kcdxird/6ePocMY7j7fOmR4Oht3
fxaUrssy/5iemf/pPs18m5PJq/qTVa9rup3jyPHLfE7nf1Xm7/j6/Tp51Tgn
njfOfIaZHtuq3Jb5nH720u0ZAvd0VT8wsn16jlVlflUtkPm8qsc2f3hkPlTl
/C7zc2b+7zImXDuvuj0XZU6897TjPE/nv8w/jnfvhfh6O5FLu2ddIv93HAfu
UxeYZ87Jquw6cv/v3mfmzk488xnZfwen12l0OEdmPqYTvX16mw7j41kuM18n
J9ZwJtYIdRiTVev3mJlXZf7f7OfUbbrVgqpz6XB9mZlH8rbqc147vkecWOfD
zNwtx67rPkeOoaoOdpgDzHwcd1irv2qf6fwf+Tkzc+e60GH9/6r8THzeucN1
Z2auyrFENnbO/A77ZGZO5//u+xnJ55Hc9h4xM/NeTqxr6vx6h5n5aK7q50/d
pup4mJm5Nv+r1nZ65sPM3N+7rHdlZuY5tWDVeldmZl6b+en1rmoBM3NPp7/v
7tRtmJm5NtsTazh9LpiZub9H1uSPbKMWMDP3yfy/yefEc361gJl5TuZ3+25q
7xEzM8/J/PR3kO74fdfMzLs70YdX5by1QMzMPevC0b7vmpn5aO72PdXyn5l5
r/xnZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZm
ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmbmff0DbTyIOA==

       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztmDGqZlUQhB8KIrqEidyCGr9B3MG4gidoNCiMgQoGZu7BjUxqau4WRIzd
gDNgMMnA+z1dVV/dcwLlKv/re0539dfV96Mvv3329Tt3d3ffvf/qX88evv/s
xYuHH7947/V/fPXw/JOPn7/76vHn//55/fzBr3/df/PT509/+PvJ03/++PP+
099f3v/2y4f3bz6/+Zu3Pd/6e8XzY87wtt8o7j6Vk1vPdutvHhNfcYapuqj/
/1TMqRwqYqo1qeidKZ07tac4m6J2U++99Y4rOVFrL8Ve55x1ao88CwjsUsdM
zSmah1TPgpT3c/pYZ+1SXit1L/WcJWiPMAsI7CIwRDGnUtpWaHgqplpjap/m
rJ3TFylqOtWDKc4oOOD0maleUGsg5XPUuzDBXzk9v1OfBD2nvJAzvqIHFVyl
cUAxXxT8Se3atNo5+0Ltr6ZqTfB+qXMqfEtKD4T9RdG/Ts+gntHqO6rP4JxT
irq09AXZqxN07tQzoV7k/UKxW6lrp2aC845OH57Ss7Muqb4ge/WU93P2gvo8
KT0QdNLSs1NMU99RPZdTPlntV2l9QZizNO+niE/uTcJ7nbsSrWdTTHPuI+Tv
DATe0vip1qQz5+rdbYoJqd6kMSHV+86eTTGNEFO9t5L5RuanWj/OnDu9ImGO
pxhF04k6TiPTCDFb9JzygSl+qvXjzLn69yn9p74VODnj7P3UTHSehxyTpmeF
bqf2+hQDFT6WwAraDJryDI3sUu9KhJnoZBo5Jk3Pzj2d5nOctVBrqYXzU3VX
ey01u2jzizArd4hJ0DONk6k5S9jl1Xl27qSE/Svll8j9TnhWa48c0+nrnLpN
+fDUPJqqo7qPnLUg+Ar1twsF21Pzi9B3iv2IFtPpi1LeVeEDU35DPTfVfUTQ
g9NXpHy+eudy9oiz71bu2BKT4IfV3jXFUsIcV8xNNfdou4y6L1LsSvU74Zm8
nzbyh6Bbp1ZpfiO1y6vrleKPui9STFDvXORnJ8doMQl+WKFbp1bJc1zNcAL3
VjhG6AvF2RQ9Qpi/tDneGNNZR6dunVpN9SztG0WKe+o70vaLKZ0r/lahW6fP
X7lXS0zyHqH2mVN3TPVsyjOQ9yCnltR8S/m3dg9P9jaEmE7+pPxVKm/qmITZ
NKUrtW9X8zzVj87dWT3jCD5f7W0IMcl7hLMfG/VDmE0rDCHvQYpdlTCjaTlP
PSvu2BIzxYQpzpPzlvLGtNnXvgcp2JvqR+d9yc+KO7bEbGGCYi6o85aqNW32
KXSV8iTq2UHYH505Tz3T5qkzZgsTCPFbat3oGVJ8du4pU+9NzX1Fzmk+PzVP
23047fxqfdJqTZu5Cp6oZyXh7op+pOUt9Uybp86YLUwgxG+ptWJHSPlkdW5b
vnsQepzmtWj+tiUmwYerzz8Vv6XWKXY5eeLMreJvU7uksxZk/684W0tMZ+1S
599NP4o5ReOJM7eE7x5TvdnyDSrl8wlzeQcfrj6/WmO0Wqe45+SJM7fqWqhn
Ymp/dPqu1AxtjOmsV+r8jfdyfmdo4YCCq4Q5+Jh7EVhK9l0Ef9sSk+DD1edX
75i0WisYRdDVFFed+XH6qxQnCb6Lln9yTGe9UuffTT9TflgxFxRxaPxRz8GU
5hW7p3Nmqf1tS0yCD1efX60rWq1Xelbt9xS/ofHHyU8nS2leKzW/2mOm/I/z
/I33Unsqxe+vtGel9EC7i0LPhGeFH2iJSfDh6vOnfF2q1k7OO/NM2+8ItZva
3VK7Z+P8ao/p9G+p8++mH/X3B9rzlfYOwkxR5Nk5m1I+oSUmwYerz0/2PylP
NcXJVM9ede9QzJQp3qpnHGEuK+5Ci9niEwjxW2qt+FtCn7afR107dU4U+0vK
Vyh8QktMgg9Xn1/t92i1JrCR4PNp51HXTu3/FWyn+bQdYjrz31jHxloT2EjI
P+086to5z5aaR1NaVfRCS0yCDyfXsbHWBDbe6iHJum2pneJsTs+T2kMJMzHV
s1fdIxrv1e6pnBpL+fmW2inOpvA8U3FSPqElJsGHq8+f2hNTtSZwcmreEXRL
m3fqmT41L5zziKD/lpjOnJM5Q3uvmpmp+b4y7wisaKyd8+7OWUPzCS0xCT6c
wBnae9XMTM33KT9J2O/aa5e6O+FZof+WmE5vQOYM7b1qZqbmO1n/BD04a5e6
O+FZof+WmAQfTuAM7V5OZjp7f0Vjqfo69UCr3W4+f4eYTh+VOv9u+knNdPX3
jRa27FC7KYbQfP7K2VpiEny402PsoJ/UTJ96l4KZLTxpqV37vFbksyWmsy6p
8zfey8nMqZnu7H3yt4Wda9cyrxX5bIlJ8OHq8yv6glxr8nyf0tgKb8k8aa+d
ur7kO7bEnPIn5PPvph/yfF+Zdyv5aeFJe+0UPHfO5ZX3tsQk+PAWrbbUmjzf
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
hts1dpjJ7KlUXxD4pthTyLr9F5FhARI=
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2z+KFUEQB+BFQbyGV1AQE32IhkYamriCRgvCGoiZ4G2MvYmBiblnMBB0
wcBkZZ9Tv+6amS9QPpd5z/lTVV3d03vr5Zunr6+dnJy8vfn7r6en7x6en5++
f3bj4h+vTs/u3D67/psf/vy58LuPLw53v90//Hz05PDj8/cHn748Ptz7+vzw
988v81WOP/Y7r/LZqp9fdsyS44/9niovufbEPTz2XlU9i6pzS8TPkv+rKq6W
nGf6s1U1pOo+J+rYyFqRyMeq+jnyOSZqzsjzrBqPEueTrmnp5z6rnqTzIl3z
E7FRlXeJnmfkdyb6og49w6w+Z2QuJHqDRA9Q1auke5iqPn9kPzOrPif6wA5j
wazeLN0zz8qFkT1zetzpUPcS9SfdW6bzMd2fp+MzXetG9p+d63+H8SJRZxJj
SrpnS8fhyDrcoe6N7NM61IRE3zKr7xpZ8xP3ZEs1f1ZNGDkGJeYds8bckbVo
1nOcdR86xHBVn1B1XR3mxYnnPrLf25LXUj9H9kgj61u6hnS49pG9Qfr+j4zz
JXmRXrfp3IOtMRe6edZ9G9nPzKr5ibFgD3G+pV6xqlZ369U73FvenqtyZC3z
l1ljSjdvqVdMjFkd1ovS4w5zIv4TMdltTUPe9Y/bqjqcyIWq9wLikKtqaWIe
2m0doOqc5V2fuD02Bo7NhXSdT8R5h+fFPT1yLaXDdaXvCfeJ5/T706rcGfm+
oMMz4j5Ox16Ha0zcky1d79qdmAuMHFOq5qTWKrlzrnU4/6rr3erYtyWP7I3T
8+XEfKHDM+JteKtxtca1rz17ZG+cmEeYezL3ceI9OI+v/4mxo2otqOqzYo85
V0Oqfs49nd7nU+X0OMi8Z1ftFZSD63Ji/6d9aMz9PeudIPdxel9Qeg+qGGNe
nu/ptVl52sez+vYldT59/sxbddX+kCXHH5v7PCYGEscn3hFUjR3Me/PIXE6c
D/ePjVn9g/6feXnuJ97/ysf1euR7gcSav9hj/r+8SL+z63AfeHkNrxpHquq/
GGOuzc1EnnIfd9ifY82feW7Nr9q/YS1oG07sz0mMKeKKOZfLs47hPl5SexP7
QsUVc20uzzqGezqx5i9OmPvX/CU1QY7v04l1fnHCnKv5Vzk+sc4vx7ft9Luk
DtfI3M0j9+91+07u48ReTXHC/O+8qDp+Ld/JfZx4L3ysO9wH5g6e9TuVie/k
nk68503sSWbes0fmWmLuz33crQcwF2BenrNr/B7uGVfpHsC6EDNzz/qf+Kz5
JjPztu33gpmZ92nrOczM+7G9wczMrM4zMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMz81b9CyqP2P0=
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztl7GKnVUUhQcF9RUsU9pqP+IrREhnMUIsJCDEQgQLwdJCyENY+gLWPpZg
AhZpZriXe/Y539r7KxJuhsm/1l57rf2v++zbH55/98Hd3d2Pn7z96/nDT1+9
fv3w89cfvfvHy4dXX3z+6sO3H3/9/8+7z7+//PP+j1/e3P/76W/373/+5p/v
7/9+8+L+r88+/vL9z4/9/i2fH8N6DHcVt0twr+W2aq5rf75KhwqtKmas2MVO
PVflrlq3U7lb5dVVOarOO2EXFb6q1rbi3lZruFPPVT4kv2dX7aI616fej6vu
yc7crfLqqRxV3LHq9351L6ruxuR7u/MdtPN9SpuR3E9OvR9P3ZPqd+jO7yaE
O1Z9n6t9W92Nq3sgOe8VP6/IUfWMif2kgvPO274qd6c6TEWOqjv5zgyu8i3h
+YRbtPNGVcxLnjGxn+zcUcU9OdXZVt3MlDtZcWeqbyyh86/6TM77znkJnf/U
97JT3KqfWd15aB2mOkeEbknodYTnJ94i8rzVOSJkh8Ct+pk7udE6TMqtWKUz
gdvkzt913q7ZIXCrfuZObrQOQ8hOdbcke35a59+Z95S8kLND5nbLM2k3h+Cl
xFtR0S3t/D3yTs5LSnbI3G55ZiduhA6T4vlT3eDU7Cl7qc4FLS8p2SFzq/iO
k8jNzl93kyu4kW8UbS+0eadlJ9E/q3oFmRuhwxB2XY1l52fu5dS8E7JD5lZ9
P1O42fmzPE++UeS9VOiwMy+ddCNwq76fZG6EDpOy61UesPNz9nJq3gnZIXOr
wFql1U5udv49WKu4kW9U4l7s/PpnFdYl/5fGbRVnwow0LDs/cy+n5p2QHTI3
AhaN2869E/RP3DX5RiXuxc6vf05hpXCr2DthxpRd29k4Otj59c8qrBRu7vrs
rsk3Kn0vdn79Q8Aic3PXt2PZ+Zl7od3DTroRuKVgdfVDiv6nsAh8OnnPzs/R
jcCNjEXmtsoPXWdM3y+ZG0EHO7/+ofmErEOi/qewCHw6ec/Oz9GNwI2MReZm
59+DpfeYOtj59Q/NJ2QdEvU/hUXg08l7dn6ObgRuZCwyNzu/nZ+mlZ2frxuB
WwpWVz+k6E/A0nvMDFbfw666EbiRscjc7PxnsfSenT9RNwK3FKyufkjRn4yl
987qUH0Pu+pG4EbGInOz89v5U7Sy83N0I3BLwerqhxT9aVirfn+a9+z8HN0I
3MhYZG52fjt/ilZ2fo5uBG4pWF39kKI/DcvOz8lg9T3sqhuBGxmLzM3Oz+n8
t/z+NO8R5p1wJ8ncUrC6+iFFfxrWJc/Xe3syWH0Pu+pG4EbGInOz8zM7/yXP
nOw9wrwT7iSZWwpWVz+k6E/DWvX8ad6z83N0I3AjY5G52fn5nd9bZOen6Ubg
loLV1Q8p+tOw7PycDPqe1T8En6TokKI/GWvV86d5jzDvhDtJ5paC1dUPKfrT
sOz8nAxW38OuuhG4kbHI3Oz8dv4Urez8HN0I3FKwuvohRX8aVsXzJ3jPzs/R
jcCNjEXmZufv0fl9j++fd8KdJHNLwerqhxT9aVg7n9/Je3Z+jm4EbmQsMjc7
f7/O31UrOz9HNwK3FKyufkjRn4Z1apZEraozWH0Pu+pG4EbGInOz8/fu/Cnv
o1MZtPPPvF1kn5B1SNSfhkXYV4pW1RmsvodddSNwI2ORudn553T+S3DJWtn5
OboRuKVgdfVDiv40LEJ+U7SqzmD1PeyqG4EbGYvMzc4/s/Nf8hyaVnZ+jm4E
bilYXf2Qoj8Ni5ZfslY73307P6frRuBGxiJzs/Pb+a/9LkCYhZC1CXeSzC0F
q6sfUvSnYZHzS9OqOoPqNud2kXOXokOK/mSslPwStLLzc3QjcEvB6uqHFP1p
WIn5Jcxi5+foRuBGxiJzs/Pb+e38dn6Cnl2xuvohRX8aVmJ+CbPY+Tm6EbiR
scjc7Px2/mu5EWYhZG3CnSRzS8Hq6ocU/WlY6flN3Iud39uVnjuCDin6k7HS
85uyF4KeBA94u3rkjuCHFP1pWBPyS9uLnd/bNSF3O/3QdcZqrE75Je+FoCfB
A512moLV1Q8p+tOwJuSXthc7v7drQu52+qHrjNVYE/JL2AtBT4IHvF1zcmfn
Z2JNyC9tL3Z+b9eE3O30Q9cZq7Em5JewF4KeBA94u+bkzs7PxJqWX8Je7Pze
rmm5q/ZD1xmrsabll5ZBO//M20X2CVmHRP1pWJPzS8tgtZ4ED3i7zF2FH7rO
WI1lfu38ZD+TuaVgdfVDiv40LPPLudXVnAk6e7t6e/uUH7rOWI1lfu38ZD+T
uaVgdfVDiv40LPP7NNbODFbrSdZ52u0yd2v90HXGaizza+cn+5nMLQWrqx9S
9Kdhmd+nsXZmsFpPss7Tbpe5W+uHrjNWY5nfp7Hs/N6udKyufkjRn4Zlfi/H
qs5gtZ4pOk+4XeZurR+6zliNZX5vf1eeylpXnSfcLrJPyDok6k/DMr9rsez8
3i4aFpmbnd/OT+CWeHvVOStr5s7OT8Ayv2ux7PzeLhoWmZud385P4LYKi6xn
os5kbilYXf2Qoj8Ny/yuxbLze7toWGRudn47P4HbKiyynok6k7mlYHX1Q4r+
NCzzW4dl5/d2EbDI3Oz8dn4Ctwosmp6JOpO5pWB19UOK/jQs87tfZzu/t8vc
rfVD1xmrsczvWZ3t/DNvl7mz8xO6qPndj2Xnn3m7zN1aP3Sd8VQXNb97sOz8
M2+XubPzn8Iyv0zf7vyconOn22Xu1vqh64zVWOaXo0O1noTZvV0cvxG4uev9
WOaXr4M697tdZL+l6JCiPxnL/HJ0qNaTMLu3i+M3Ajd3vR/L/HJ0OPU9IkXn
TreL4DcCNzu/nZ/AjaBDtZ6E2b1dHL8RuLnr/Vjml6ODnX/O7SL4jcDNzm/n
J3Aj6HAJ1jSdydxSsLr6IUV/Gpb55ehwCYfJOne6XQS/EbjZ+e38BG4EHa7F
naAzmVsKVlc/pOhPwzK/HB2q39eE2b1dHL8RuNn57fwEbgQdbuHQVWcytxSs
rn5I0Z+GZX45OpidObeL4DcCNzu/nZ/AjaDDqsx20pnMLQWrqx9S9KdhmV+O
DvafObeL4DcCNz1v5ydwI+hQkV/a7N4ujt8I3Nz1fizzy9Hh1HskRedOt4vg
NwI3O7+dn8CNoEN1lgmze7s4fiNwc9f7scwvR4fqXBNm93Zx/EbgZue38xO4
EXTYmesUncncUrA65S5RfxqW+eXocCrXKTp3ul0EvxG42fnt/ARuBB2qc30J
f5rOZG4pWJ1yl6g/Dcv8cnTYmetrvwsQdO50uwh+I3Cz89v5CdwIOlTnOvE+
kLmlYHXKXaL+NCzzy9HBzj/ndhH8RuBm57fzE7gRdKjO9bWzEHTu6gGC3wjc
3PV+LPPL0cHOP+d2EfxG4Gbnt/MTuBF0qM71tbMQdO7qAYLfCNzc9X4s88vR
gdb57Qy9/UbgZue38xO4EXSozvUts3i7crE65S5RfxqW+eXoQO78l/CkzUj2
AMFvBG52fjs/gRtBh+pcV+tGmDHFAwS/Ebi56/1Y5pejQ0rnT5mR7AGC3wjc
7Px2fgI3gg7Vua7WjTBjigcIfiNwc9f7scwvR4fEzr/Tb51uF8FvBG52fjs/
gRtBh+pcV+v2H6+qkdo=
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "3"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.775222899011693*^9, 3.7752229280013027`*^9}},
 CellLabel->"Out[71]=",ExpressionUUID->"8c4544fa-c1a7-4dd6-8149-88b8ee7c1ef4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1kEqhAEcxuGJkmu4AmsjGxs7TjCK1ZRiITsXcA+ycwZrLiFb5QRMWdgo
0+d7veV5in7ExPTV+984Oj04WZlMJufrH58OZhe7Z2ezy8O1xRfHs/nW5nz1
I68+Pxb9/DDbuXt7nb7s7+187afH++2b2/Xp9fR5+yc/85P+7nWWff2G3132
/x3y/iz7+kO+P3aP8Xcu+54PeU5+61kau4f8PWP8fPL5+a1nfozXHOPZHvJ+
TgD4l5K3n9Za657+6/0B4G80bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8D
kNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVpr
rd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0
bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3
PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuk
tdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9A
RsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21
dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGw
QVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/
AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDW
Wmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZ
DRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba
/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMG
aa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9AxjsuN+sK
       "], {{0, 
       128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1j8u5AEcxuEJibiGxgEoVEw4wCQ4wUioiMQWG41oXMId3GDbLfcoewS7
SLSS3+Q33nnD8yTkozB/BO936+z65GJtMpn82Hz9dDL/eXhzM7893Xj74nx+
ubtzuf6a9+8fb/3rbjZ9eJxN947+H3zU//4cT38/b+9fPf0d1Mt6nCGPP+R5
F30Ni37vkOcd8xo+47WNeS9DXueY9/UZ72XMcy3rZzXmuZb1u5H8fR7zOKv6
H9Lwt5n82U4A+JYW3RGttdZfo1e9PwCsRsMGaa21dv8DkNGwQVprrd3/AGQ0
bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3
PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuk
tdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9A
RsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21
dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGw
QVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/
AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDW
Wmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZ
DRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba
/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMG
aa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8D
kNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVpr
rd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGS8
AOoEnoQ=
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1rEqhQEcxuETJddgcwMGVp2TTVKKsh/FpBSDbC7IZnYdBiurwa5QBos6
cr7XW56n6Ke+OA71/lePzvZPFkaj0cXy+6f96eXW+fn06mDp44vj6enG+uni
e15/fnz068ve5H5ne/Jwtzt5urkdHz5vjh/XVsbf9SzPf33mu+dneWaW52f5
/s2v/6fv87x+93n93Yd4PQ3/M/Pqn763Q/yNhv65Q/w//OY1z+v1D/H8EL/X
b96HEQD/0hA3j9Za6/7+6/0B4G80bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21
dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGw
QVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/
AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDW
Wmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZ
DRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba
/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMG
aa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8D
kNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVpr
rd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0
bJDWWmv3PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3
PwAZDRuktdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuk
tdba/Q9ARsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9A
RsMGaa21dv8DkNGwQVprrd3/AGQ0bJDWWmv3PwAZDRuktdba/Q9AxhvvRO55

       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1kEq9AEcxvGJkrUb2FmzFJOtjWJhPUSRUohs5EAsncBNXMEFUA4w/8w8
Hvl8yttXzTuYoee3enS5f7owGo2ulz//2Z/c7VxdTe4Plr4+OZlcbKxfLH7m
4/fHVx/fbo73Vt63d1/XxtP04cv5+O3meevs6WHw46f5v0MfM/T5h37dn3yt
efzsP/nepnn80OeZ1c877+9/Vs859Pdq6OuWfN/n/bc/q9d5Hu9R8n1PvhdD
X88RAP/SrHZNa6313+rf3h8AfkfDBmmttXb/A5DRsEFaa63d/wBkNGyQ1lpr
9z8AGQ0bpLXW2v0PQEbDBmmttXb/A5DRsEFaa63d/wBkNGyQ1lpr9z8AGQ0b
pLXW2v0PQEbDBmmttXb/A5DRsEFaa63d/wBkNGyQ1lpr9z8AGQ0bpLXW2v0P
QEbDBmmttXb/A5DRsEFaa63d/wBkNGyQ1lpr9z8AGQ0bpLXW2v0PQEbDBmmt
tXb/A5DRsEFaa63d/wBkNGyQ1lpr9z8AGQ0bpLXW2v0PQEbDBmmttXb/A5DR
sEFaa63d/wBkNGyQ1lpr9z8AGQ0bpLXW2v0PQEbDBmmttXb/A5DRsEFaa63d
/wBkNGyQ1lpr9z8AGQ0bpLXW2v0PQEbDBmmttXb/A5DRsEFaa63d/wBkNGyQ
1lpr9z8AGQ0bpLXW2v0PQEbDBmmttXb/A5DRsEFaa63d/wBkNGyQ1lpr9z8A
GQ0bpLXW2v0PQEbDBmmttXb/A5DRsEFaa63d/wBkNGyQ1lpr9z8AGQ0bpLXW
2v0PQEbDBmmttXb/A5DRsEFaa63d/wBkNGyQ1lpr9z8AGQ0bpLXW2v0PQEbD
BmmttXb/A5DRsEFaa63d/wBkNGyQ1lpr9z8AGQ0bpLXW2v0PQEbDBmmttXb/
A5DRsEFaa63d/wBkNGyQ1lpr9z8AGQ0bpLXW2v0PQEbDBmmttXb/A5DRsEFa
a63d/wBkNGyQ1lpr9z8AGQ0bpLXW2v0PQEbDBmmttXb/A5DRsEFaa63d/wBk
NGyQ1lpr9z8AGQ0bpLXW2v0PQEbDBmmttXb/A5DRsEFaa63d/wBkfAAY3Iyq

       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1rFqUwEcxeGgID5DNzs4S+1qQp9AqKsgEXQKFKIgduoj+DQ6O/kaLr6C
swl0yBLIJfeeHOr3Qcuv0DahTXv+z97fXH98NJvNPj3dvLtefrlar5df3zzZ
fvBhuXp5sXq8ybv7t23/+vxt/vv188WPs8v5n7+3i7cvfr569/18sdu7n7Ov
933+Id9n6NcO/Z6H9NDHPeY5jPVYUzyHsR536tfVFD3Wz3Os1/Yxv68pntsU
f7NT/502/M+Z4vU81s9nBsB/aej+aq21fhh96v0B4DQaNkhrrbX7H4CMhg3S
Wmvt/gcgo2GDtNZau/8ByGjYIK211u5/ADIaNkhrrbX7H4CMhg3SWmvt/gcg
o2GDtNZau/8ByGjYIK211u5/ADIaNkhrrbX7H4CMhg3SWmvt/gcgo2GDtNZa
u/8ByGjYIK211u5/ADIaNkhrrbX7H4CMhg3SWmvt/gcgo2GDtNZau/8ByGjY
IK211u5/ADIaNkhrrbX7H4CMhg3SWmvt/gcgo2GDtNZau/8ByGjYIK211u5/
ADIaNkhrrbX7H4CMhg3SWmvt/gcgo2GDtNZau/8ByGjYIK211u5/ADIaNkhr
rbX7H4CMhg3SWmvt/gcgo2GDtNZau/8ByGjYIK211u5/ADIaNkhrrbX7H4CM
hg3SWmvt/gcgo2GDtNZau/8ByGjYIK211u5/ADIaNkhrrbX7H4CMhg3SWmvt
/gcgo2GDtNZau/8ByGjYIK211u5/ADIaNkhrrbX7H4CMhg3SWmvt/gcgo2GD
tNZau/8ByGjYIK211u5/ADIaNkhrrbX7H4CMhg3SWmvt/gcgo2GDtNZau/8B
yGjYIK211u5/ADIaNkhrrbX7H4CMhg3SWmvt/gcgo2GDtNZau/8ByGjYIK21
1u5/ADIaNkhrrbX7H4CMhg3SWmvt/gcgo2GDtNZau/8ByGjYIK211u5/ADIa
NkhrrbX7H4CMhg3SWmvt/gcgo2GDtNZau/8ByGjYIK211u5/ADIaNkhrrbX7
H4CMhg3SWmvt/gcgo2GDtNZau/8ByGjYIK211u5/ADIaNkhrrbX7H4CMhg3S
Wmvt/gcg4x/mVWRX
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 128}, {128, 0}}, {0.,
        1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1jFKXGEYheFBiaRXAmkEmyxAyxQXtzAhCxhBK0HQQuxcQ3aSZWQBLsE6
TYqUUUihxYCD9z8e8Hkg4Q2ME7ljcr6Dk4vl2dZisbj6+PDbcnV9fHm5uvm2
8/iH09X50eH59kPe/v/12F+/7E2f7nenv7+2pt8/96c/3z9PP+4+POunr1n3
+nWv2fRr53rPl7z/pr3p9z/i+3nN5zXX85zrGY74mRnxHOb63Ec8qxHvP+Jz
fM3fO+Lf11z/L41+5nP9DKz72gUA79KIu0VrrXV/v/X+APA2GjZIa621+x+A
jIYN0lpr7f4HIKNhg7TWWrv/Acho2CCttdbufwAyGjZIa621+x+AjIYN0lpr
7f4HIKNhg7TWWrv/Acho2CCttdbufwAyGjZIa621+x+AjIYN0lpr7f4HIKNh
g7TWWrv/Acho2CCttdbufwAyGjZIa621+x+AjIYN0lpr7f4HIKNhg7TWWrv/
Acho2CCttdbufwAyGjZIa621+x+AjIYN0lpr7f4HIKNhg7TWWrv/Acho2CCt
tdbufwAyGjZIa621+x+AjIYN0lpr7f4HIKNhg7TWWrv/Acho2CCttdbufwAy
GjZIa621+x+AjIYN0lpr7f4HIKNhg7TWWrv/Acho2CCttdbufwAyGjZIa621
+x+AjIYN0lpr7f4HIKNhg7TWWrv/Acho2CCttdbufwAyGjZIa621+x+AjIYN
0lpr7f4HIKNhg7TWWrv/Acho2CCttdbufwAyGjZIa621+x+AjIYN0lpr7f4H
IKNhg7TWWrv/Acho2CCttdbufwAyGjZIa621+x+AjIYN0lpr7f4HIKNhg7TW
Wrv/Acho2CCttdbufwAyGjZIa621+x+AjIYN0lpr7f4HIKNhg7TWWrv/Acho
2CCttdbufwAyGjZIa621+x+AjIYN0lpr7f4HIKNhg7TWWrv/Acho2CCttdbu
fwAyGjZIa621+x+AjIYN0lpr7f4HIKNhg7TWWrv/Acho2CCttdbufwAyGjZI
a621+x+AjIYN0lpr7f4HIKNhg7TWWrv/Acho2CCttdbufwAyGjZIa621+x+A
jIYN0lpr7f4HIOMflbTlLw==
       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1kEqhAEcxuGJkizsLV2BpZhE2bNXo8hCKRaycwNHcAEHcghrtigLS9N8
884rz1P0U+Iz5P1vnl0fXyyNRqPb1c93x5O7/Zubyf3JytcH55Or7a2r5c98
+H776vXn973Lg5edjdPD8c8+WpuMH9/Ox0+br7u/+ZxZPn+WrzPtMw/1bL95
5kU9z1Cv+bTPP9TvdNrnmfZ7zfK7SL4+s/y8Q71Wi3qGefwfSD7zPP7XzePv
bQTAvzTUjaS11vpv9aL3B4DFaNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+
ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO0
1lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHI
aNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW
7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2
SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsf
gIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJa
a+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCj
YYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7
/wHIaNggrbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNgg
rbXW7n8AMho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8A
Mho2SGuttfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGut
tfsfgIyGDdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIyG
DdJaa+3+ByCjYYO01lq7/wHIaNggrbXW7n8AMho2SGuttfsfgIwPG0wKjA==

       "], {{0, 128}, {128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1LGKpwcZRvFFQezSmSqFt2C6FLvkFmKKFDarmCogxEJSJX2uJYWF4J1Y
5yas3YUUaRZ22f+Q33l8ixnOwPCfZ875vvf3f/7bZ1/+6tmzZ3//7atvn738
x6dff/3ymz/+5vUPf3351cd/+OrXr/C7n75e87c/fPj8P1/87vm///Sv52/i
z//yyYv//vjRi+//+cGLt/mdN/G7fuajPv9R+99189v8v4/6u+/6OU+x5yl+
51GeH/U8v89nPkW7R3V/inf5fZ6xR3l+ny5P/Vw9hZNH3cOnfm5/qb/11O+O
/L5X+H3cCu/4//PzoL1rMv9SzoX99XdE6L7KwrtZvAOrLDRa6i7sr7i6+99y
W2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6K
q7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa
6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TB
ucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/
LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7s
r7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxC
o6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdF
FpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6
+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xu
wv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzL
LDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99y
W2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6K
q7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa
6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TB
ucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/
LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7s
r7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxC
o6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdF
FpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6
+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xu
wv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzL
LDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99y
W2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6K
q7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa
6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TB
ucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/
LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7s
r7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxC
o6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdF
FpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6
+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xu
wv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzL
LDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99y
W2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6K
q7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa
6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TB
ucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/
LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7s
r7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxC
o6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdF
FpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6
+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xu
wv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzL
LDRa6i7sr7i6+99yW2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99y
W2TBucxCo6Xuwv6Kq7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6Xuwv6K
q7v/LbdFFpzLLDRa6i7sr7i6+99yW2TBucxCo6XuP9/wPzVwd5c=
       "], {{0, 128}, {
       128, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2DGKJAUAheFFQUxM1At4BU1lxCusJ1jBjRaENRAzD+A1PMWmBmZeQcwF
QTMTd8HAcIbp6v7q+Qcz9ED3P6+7q7+qmY++/Prp87eePHnyzbuvvz199u3n
L18+++6Ld9788NWzF598/OLt1ze///frze1f/vrt7r0P/rh7/+8/737/+Ye7
D3/69dNXPz7/7L+3H3qf+9z/6M599l9q5332P/R5XfO5P/R33eexj3nujzn2
HvMaHnHsHfFcLnWfSz32mg5cc/+l3tMjjofHHP9HuPRQ947oXPN4e0znMa/5
rXYe4f81z4nXPPaOduZW53TNgSP2X6p59J5LXYdo7h3xGbymV9q2SzVvZemt
rg9vdS645n75+uea+6+54ehz01k8yf9zNQVLz+7/EdsEE87i/xHnslv9zXt2
T87yGTz7a5v/+X+W4/9W9sobuv7Pf6EpWJr/+a99Rm71/8Oze3KWz+DZX9v8
z/+zHP+CvcIG+b0W3vf/w36tKVia/6YJ+Z//Qmdpv9YULM1/04T8z3+hs7Rf
awqW5r9pQv7nv9BZ2q81BUvz3zQh//Nf6Czt15qCpflvmpD/+S90lvZrTcHS
/DdNyP/8FzpL+7WmYGn+mybkf/4LnaX9WlOwNP9NE/I//4XO0n6tKVia/6YJ
+Z//Qmdpv9YULM1/04T8z3+hs7RfawqW5r9pQv7nv9BZ2q81BUvz3zQh//Nf
6Czt15qCpflvmpD/+S90lvZrTcHS/DdNyP/8FzpL+7WmYGn+mybkf/4LnaX9
WlOwNP9NE/I//4XO0n6tKVia/6YJ+Z//Qmdpv9YULM1/04T8z3+hs7RfawqW
5r9pQv7nv9BZ2q81BUvz3zQh//Nf6Czt15qCpflvmpD/+S90lvZrTcHS/DdN
yP/8FzpL+7WmYGn+mybkf/4LnaX9WlOwNP9NE/I//4XO0n6tKVia/6YJ+Z//
Qmdpv9YULM1/04T8z3+hs7RfawqW5r9pQv7nv9BZ2q81BUvz3zQh//Nf6Czt
15qCpflvmpD/+S90lvZrTcHS/DdNyP/8FzpL+7WmYGn+mybkf/4LnaX9WlOw
NP9NE/I//4XO0n6tKVia/6YJ+Z//Qmdpv9YULM1/04T8z3+hs7RfawqW5r9p
Qv7nv9BZ2q81BUvz3zQh//Nf6Czt15qCpflvmpD/+S90lvZrTcHS/DdNyP/8
FzpL+7WmYGn+mybkf/4LnaX9WlOwNP9NE/I//4XO0n6tKVia/6YJ+Z//Qmdp
v9YULM1/04T8z3+hs7RfawqW5r9pQv7nv9BZ2q81BUvz3zQh//Nf6Czt15qC
pflvmpD/+S90lvZrTcHS/DdNyP/8FzpL+7WmYGn+mybkf/4LnaX9WlOwNP9N
E/I//4XO0n6tKVia/6YJ+Z//Qmdpv9YULM1/04T8z3+hs7RfawqW5r9pQv7n
v9BZ2q81BUvz3zQh//Nf6Czt15qCpflvmpD/+S90lvZrTcHS/DdNyP/8FzpL
+7WmYGn+mybkf/4LnaX9WlOwNP9NE/I//4XO0n6tKVia/6YJ+Z//Qmdpv9YU
LM1/04T8z3+hs7RfawqW5r9pQv7nv9BZ2q81BUvz3zQh//Nf6Czt15qCpflv
mpD/+S90lvZrTcHS/DdNyP/8FzpL+7WmYGn+mybkf/4LnaX9WlOwNP9NE/I/
/4XO0n6tKVia/6YJ+Z//Qmdpv9YULM1/04T8z3+hs7RfawqW5r9pQv7nv9BZ
2q81BUvz3zQh//Nf6Czt15qCpflvmpD/+S90lvZrTcHS/DdNyP/8FzpL+7Wm
YGn+mybkf/4LnaX9WlOwNP9NE/I//4XO0n6tKVia/6YJ+Z//Qmdpv9YULM1/
04T8z3+hs7RfawqW5r9pQv7nv9BZ2q81BUvz3zQh//Nf6Czt15qCpflvmpD/
+S90lvZrTcHS/DdNyP/8FzpL+7WmYGn+mybkf/4LnaX9WlOwNP9NE/I//4XO
0n6tKVia/6YJ+Z//Qmdpv9YULM1/04T8z3+hs7RfawqW5r9pQv7nv9BZ2q81
BUvz3zQh//Nf6Czt15qCpflvmpD/+S90lvZrTcHS/DdNyP/8FzpL+7WmYGn+
mybkf/4LnaX9WlOwNP9NE/I//4XO0n6tKVia/6YJ+Z//Qmdpv9YULM1/04T8
z3+hs7RfawqW5r9pQv7nv9BZ2q81BUvz3zQh//Nf6Czt15qCpflvmpD/+S90
lvZrTcHS/DdNyP/8FzpL+7WmYGn+mybkf/4LnaX9WlOwNP9NE/I//4XO0n6t
KVia/6YJ+Z//Qmdpv9YULM1/04T8z3+hs7RfawqW5r9pQv7nv9BZ2q81BUvz
3zQh//Nf6Czt15qCpflvmpD/+S90lvZrTcHS/DdNyP/8FzpL+7WmYGn+mybk
f/4LnaX9WlOwNP9NE/I//4XO0n6tKVia/6YJ+Z//Qmdpv9YULM1/04T8z3+h
s7RfawqW5r9pQv7nv9BZ2q81BUvz3zQh//Nf6Czt15qCpflvmpD/+S90lvZr
TcHS/DdNyP/8FzpL+7WmYGn+mybkf/4LnaX9WlOwNP9NE/I//4XO0n6tKVia
/6YJ+Z//Qmdpv9YULM1/04T8z3+hs7RfawqW5r9pQv7nv9BZ2q81BUvz3zQh
//Nf6Czt15qCpflvmpD/+S90lvZrTcHS/DdNyP/8FzpL+7WmYGn+mybkf/4L
naX9WlOwNP9NE/I//4XO0n6tKVia/6YJ+X9e//8BvdxHyA==
       "], {{0, 128}, {128, 
       0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{128, 128},
     PlotRange->{{0, 128}, {0, 128}}], "\[Rule]", "2"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.775222899011693*^9, 3.775222928227092*^9}},
 CellLabel->"Out[72]=",ExpressionUUID->"6e6a1f48-ffb6-44fc-8a31-c068f2038304"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Network XV - Transfer learning with pre-trained image recognition net (VGG-16)\
\>", "Subsection",
 CellChangeTimes->{{3.775223213097083*^9, 
  3.775223233659657*^9}},ExpressionUUID->"d3c24268-4836-4377-8821-\
dc4f21d4aaaf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"netECA15", "=", 
  RowBox[{
  "NetModel", "[", "\"\<VGG-16 Trained on ImageNet Competition Data\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.775223283904462*^9, 3.775223299624886*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"337713f2-355c-4d38-8249-9195f5d0c538"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["40", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "conv1_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 3, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 3, "ChannelGroups" -> 1, 
                    "$InputSize" -> {224, 224}, "$OutputSize" -> {224, 224}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 3], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]]], "relu1_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 224, 224}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]]], "conv1_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 64, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {224, 224}, "$OutputSize" -> {224, 224}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]]], "relu1_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 224, 224}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]]], "pool1" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 64, 
                    "$InputSize" -> {224, 224}, "$OutputSize" -> {112, 112}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]]], "conv2_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 64, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {112, 112}, "$OutputSize" -> {112, 112}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]]], "relu2_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 112, 112}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]]], "conv2_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {112, 112}, "$OutputSize" -> {112, 112}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]]], "relu2_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 112, 112}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]]], "pool2" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 128, 
                    "$InputSize" -> {112, 112}, "$OutputSize" -> {56, 56}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv3_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu3_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv3_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 256, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu3_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv3_3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 256, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu3_3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "pool3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 256, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {28, 28}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv4_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 256, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu4_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv4_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu4_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv4_3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu4_3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "pool4" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 512, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {14, 14}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv5_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu5_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv5_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu5_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv5_3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu5_3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "pool5" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 512, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {7, 7}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "flatten_0" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{25088}, NeuralNetworks`RealT]]], 
                    "fc6" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{4096, 25088}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{4096}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {4096}, "$OutputSize" -> 4096, 
                    "$InputSize" -> 25088, "$InputDimensions" -> {25088}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{25088}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4096}, NeuralNetworks`RealT]]], 
                    "relu6" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {4096}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4096}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4096}, NeuralNetworks`RealT]]], 
                    "drop6" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4096}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4096}, NeuralNetworks`RealT]]], 
                    "fc7" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{4096, 4096}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{4096}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {4096}, "$OutputSize" -> 4096, 
                    "$InputSize" -> 4096, "$InputDimensions" -> {4096}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4096}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4096}, NeuralNetworks`RealT]]], 
                    "relu7" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {4096}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4096}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4096}, NeuralNetworks`RealT]]], 
                    "drop7" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.5, "Method" -> "Dropout"], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4096}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4096}, NeuralNetworks`RealT]]], 
                    "fc8" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1000, 4096}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1000}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {1000}, "$OutputSize" -> 1000, 
                    "$InputSize" -> 4096, "$InputDimensions" -> {4096}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4096}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]]], 
                    "prob" -> Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "fc6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "fc6", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "drop6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu6", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "fc7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "drop6", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "fc7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "drop7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "fc8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "drop7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "prob", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "fc8", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "prob", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {224, 224}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, 
                    "MeanImage" -> {0.4850196078431373, 0.457956862745098, 
                    0.4076039215686274}, "$Version" -> "12.0.11", 
                    "VarianceImage" -> None, "Interleaving" -> False]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{1000}, 
                    NeuralNetworks`RealT], "Type" -> "Class", "Labels" -> {
                    Entity["Concept", "Tench::q9r2d"], 
                    Entity["Concept", "CarassiusAuratus::f73xs"], 
                    Skeleton[997], 
                    Entity["Concept", "BathroomTissue::ts4sr"]}, "Dimensions" -> 
                    1000, "$Version" -> "12.0.11", "InputDepth" -> 1, "$Rank" -> 
                    0]]], NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv1_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu1_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv1_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu1_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv2_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu2_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv2_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu2_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu3_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu3_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu3_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv4_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu4_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv4_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu4_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv4_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu4_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv5_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu5_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv5_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu5_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv5_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu5_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"7\"", "\"7\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"flatten_0\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten_0"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten_0"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"25088\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "flatten_0"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"fc6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "fc6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "fc6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4096\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "fc6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4096\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"drop6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4096\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "drop6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"fc7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "fc7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "fc7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4096\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "fc7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4096\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"drop7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "drop7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4096\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "drop7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"fc8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "fc8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "fc8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1000\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "fc8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"prob\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "prob"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "prob"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1000\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "prob"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   ImageSizeCache -> {272., {317.4169921875, 322.5830078125}},
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.775223490032282*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"057dbb7d-543e-4477-a4f5-3e4cb69aa8e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"subNet", "=", 
  RowBox[{"NetTake", "[", 
   RowBox[{"netECA15", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<conv1_1\>\"", ",", "\"\<flatten_0\>\""}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7752236486335697`*^9, 3.7752236750107737`*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"0583ac7c-345c-48fb-bd03-f281533caac7"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"25088\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["32", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "conv1_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 3, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 3, "ChannelGroups" -> 1, 
                    "$InputSize" -> {224, 224}, "$OutputSize" -> {224, 224}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 3], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]]], "relu1_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 224, 224}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]]], "conv1_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 64, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {224, 224}, "$OutputSize" -> {224, 224}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]]], "relu1_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 224, 224}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]]], "pool1" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 64, 
                    "$InputSize" -> {224, 224}, "$OutputSize" -> {112, 112}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]]], "conv2_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 64, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {112, 112}, "$OutputSize" -> {112, 112}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]]], "relu2_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 112, 112}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]]], "conv2_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {112, 112}, "$OutputSize" -> {112, 112}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]]], "relu2_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 112, 112}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]]], "pool2" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 128, 
                    "$InputSize" -> {112, 112}, "$OutputSize" -> {56, 56}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv3_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu3_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv3_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 256, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu3_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv3_3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 256, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu3_3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "pool3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 256, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {28, 28}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv4_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 256, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu4_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv4_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu4_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv4_3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu4_3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "pool4" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 512, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {14, 14}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv5_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu5_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv5_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu5_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv5_3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu5_3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "pool5" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 512, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {7, 7}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "flatten_0" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{25088}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten_0", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {224, 224}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, 
                    "MeanImage" -> {0.4850196078431373, 0.457956862745098, 
                    0.4076039215686274}, "$Version" -> "12.0.11", 
                    "VarianceImage" -> None, "Interleaving" -> False]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{25088}, NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv1_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu1_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv1_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu1_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv2_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu2_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv2_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu2_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu3_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu3_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu3_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv4_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu4_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv4_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu4_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv4_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu4_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv5_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu5_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv5_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu5_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv5_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu5_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"7\"", "\"7\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"flatten_0\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten_0"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten_0"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"25088\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "flatten_0"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"25088\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.775223675736868*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"37daaaee-8961-4c9e-8f3f-24f6eb0867ba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"joinedNet", "=", 
  RowBox[{"NetJoin", "[", 
   RowBox[{"subNet", ",", 
    RowBox[{"NetChain", "@", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<linear_new\>\"", "\[Rule]", 
        RowBox[{"LinearLayer", "[", "1024", "]"}]}], ",", 
       RowBox[{"\"\<linear_out\>\"", "\[Rule]", 
        RowBox[{"LinearLayer", "[", "4", "]"}]}], ",", 
       RowBox[{"\"\<prob\>\"", "\[Rule]", 
        RowBox[{"SoftmaxLayer", "[", "]"}]}]}], "|>"}]}], ",", 
    RowBox[{"\"\<Output\>\"", "\[Rule]", 
     RowBox[{"NetDecoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Class\>\"", ",", 
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", "4"}], "]"}]}], "}"}], "]"}]}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.7752237068339233`*^9, 3.7752237913846827`*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"fa34565c-9bc2-472d-a0d9-f7bb1a430d20"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, BaseStyle -> GrayLevel[0.6], 
                 ImageMargins -> 0, ImageSize -> {36, Automatic}, 
                 PlotRangePadding -> 0], 
                StyleBox[
                "uninitialized", LineColor -> RGBColor[0.66, 0, 0], 
                 FrontFaceColor -> RGBColor[0.66, 0, 0], BackFaceColor -> 
                 RGBColor[0.66, 0, 0], GraphicsColor -> RGBColor[0.66, 0, 0], 
                 FontFamily -> "Roboto", FontSize -> 8, FontColor -> 
                 RGBColor[0.66, 0, 0], Background -> GrayLevel[1, 0.65]]}, 
               Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["35", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, BaseStyle -> GrayLevel[0.6], 
                 ImageMargins -> 0, ImageSize -> {36, Automatic}, 
                 PlotRangePadding -> 0], 
                StyleBox[
                "uninitialized", LineColor -> RGBColor[0.66, 0, 0], 
                 FrontFaceColor -> RGBColor[0.66, 0, 0], BackFaceColor -> 
                 RGBColor[0.66, 0, 0], GraphicsColor -> RGBColor[0.66, 0, 0], 
                 FontFamily -> "Roboto", FontSize -> 8, FontColor -> 
                 RGBColor[0.66, 0, 0], Background -> GrayLevel[1, 0.65]]}, 
               Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "conv1_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 3, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 3, "ChannelGroups" -> 1, 
                    "$InputSize" -> {224, 224}, "$OutputSize" -> {224, 224}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 3], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]]], "relu1_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 224, 224}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]]], "conv1_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 64, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {224, 224}, "$OutputSize" -> {224, 224}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]]], "relu1_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 224, 224}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]]], "pool1" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 64, 
                    "$InputSize" -> {224, 224}, "$OutputSize" -> {112, 112}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]]], "conv2_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 64, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {112, 112}, "$OutputSize" -> {112, 112}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]]], "relu2_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 112, 112}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]]], "conv2_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {112, 112}, "$OutputSize" -> {112, 112}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]]], "relu2_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 112, 112}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]]], "pool2" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 128, 
                    "$InputSize" -> {112, 112}, "$OutputSize" -> {56, 56}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv3_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu3_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv3_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 256, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu3_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv3_3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 256, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu3_3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "pool3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 256, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {28, 28}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv4_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 256, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu4_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv4_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu4_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv4_3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu4_3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "pool4" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 512, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {14, 14}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv5_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu5_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv5_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu5_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv5_3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu5_3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "pool5" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 512, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {7, 7}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "flatten_0" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{25088}, NeuralNetworks`RealT]]], 
                    "linear_new" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{1024, 25088}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {1024}, "$OutputSize" -> 1024, 
                    "$InputSize" -> 25088, "$InputDimensions" -> {25088}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{25088}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]]], 
                    "linear_out" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{4, 1024}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {4}, "$OutputSize" -> 4, 
                    "$InputSize" -> 1024, "$InputDimensions" -> {1024}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]], 
                    "prob" -> Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear_new", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear_out", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear_new", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "prob", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear_out", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "prob", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {224, 224}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, 
                    "MeanImage" -> {0.4850196078431373, 0.457956862745098, 
                    0.4076039215686274}, "$Version" -> "12.0.11", 
                    "VarianceImage" -> None, "Interleaving" -> False]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {1, 2, 3, 4}, "InputDepth" -> 1, "Dimensions" -> 
                    4, "$Rank" -> 0, "$Version" -> "12.0.11"]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv1_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu1_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv1_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu1_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv2_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu2_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv2_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu2_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu3_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu3_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu3_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv4_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu4_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv4_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu4_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv4_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu4_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv5_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu5_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv5_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu5_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv5_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu5_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"7\"", "\"7\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"flatten_0\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten_0"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten_0"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"25088\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "flatten_0"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear_new\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear_new"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear_new"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear_new"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear_out\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear_out"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear_out"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear_out"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"prob\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "prob"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "prob"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "prob"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   ImageSizeCache -> {280., {279.9169921875, 285.0830078125}},
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7752237932884197`*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"a1f40a01-d436-46ea-b764-b33b91d4ac72"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"netECA15final", "=", 
  RowBox[{"NetPrepend", "[", 
   RowBox[{"joinedNet", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<augment\>\"", "\[Rule]", 
      RowBox[{"ImageAugmentationLayer", "[", 
       RowBox[{"{", 
        RowBox[{"224", ",", "224"}], "}"}], "]"}]}], "}"}], ",", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", 
     RowBox[{"NetExtract", "[", 
      RowBox[{"joinedNet", ",", "\"\<Input\>\""}], "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.775223813581211*^9, 3.7752238432431383`*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"6a0167fa-8681-44df-b870-544cf332c82e"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, BaseStyle -> GrayLevel[0.6], 
                 ImageMargins -> 0, ImageSize -> {36, Automatic}, 
                 PlotRangePadding -> 0], 
                StyleBox[
                "uninitialized", LineColor -> RGBColor[0.66, 0, 0], 
                 FrontFaceColor -> RGBColor[0.66, 0, 0], BackFaceColor -> 
                 RGBColor[0.66, 0, 0], GraphicsColor -> RGBColor[0.66, 0, 0], 
                 FontFamily -> "Roboto", FontSize -> 8, FontColor -> 
                 RGBColor[0.66, 0, 0], Background -> GrayLevel[1, 0.65]]}, 
               Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["36", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, BaseStyle -> GrayLevel[0.6], 
                 ImageMargins -> 0, ImageSize -> {36, Automatic}, 
                 PlotRangePadding -> 0], 
                StyleBox[
                "uninitialized", LineColor -> RGBColor[0.66, 0, 0], 
                 FrontFaceColor -> RGBColor[0.66, 0, 0], BackFaceColor -> 
                 RGBColor[0.66, 0, 0], GraphicsColor -> RGBColor[0.66, 0, 0], 
                 FontFamily -> "Roboto", FontSize -> 8, FontColor -> 
                 RGBColor[0.66, 0, 0], Background -> GrayLevel[1, 0.65]]}, 
               Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "augment" -> 
                    Association[
                    "Type" -> "ImageAugmentation", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {224, 224}, 
                    "ReflectionProbabilities" -> {0., 0.}, "$Channels" -> 3, 
                    "$InputDimensions" -> {224, 224}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT]]], "conv1_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 3, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 3, "ChannelGroups" -> 1, 
                    "$InputSize" -> {224, 224}, "$OutputSize" -> {224, 224}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 3], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]]], "relu1_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 224, 224}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]]], "conv1_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{64, 64, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{64}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {224, 224}, "$OutputSize" -> {224, 224}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]]], "relu1_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 224, 224}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]]], "pool1" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 64, 
                    "$InputSize" -> {224, 224}, "$OutputSize" -> {112, 112}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]]], "conv2_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 64, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "ChannelGroups" -> 1, 
                    "$InputSize" -> {112, 112}, "$OutputSize" -> {112, 112}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 64], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]]], "relu2_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 112, 112}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]]], "conv2_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {112, 112}, "$OutputSize" -> {112, 112}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]]], "relu2_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 112, 112}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]]], "pool2" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 128, 
                    "$InputSize" -> {112, 112}, "$OutputSize" -> {56, 56}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv3_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 128], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu3_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv3_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 256, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu3_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv3_3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{256, 256, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu3_3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "pool3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 256, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {28, 28}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv4_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 256, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 256], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu4_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv4_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu4_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "conv4_3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {28, 28}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "relu4_3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]]], "pool4" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 512, 
                    "$InputSize" -> {28, 28}, "$OutputSize" -> {14, 14}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv5_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu5_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv5_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu5_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "conv5_3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{512, 512, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{1, 1}, {1, 1}}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "ChannelGroups" -> 1, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {14, 14}, 
                    "Interleaving" -> False, "$WeightsInputChannels" -> 512], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "relu5_3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]]], "pool5" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 512, 
                    "$InputSize" -> {14, 14}, "$OutputSize" -> {7, 7}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]]], "flatten_0" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 7, 7}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{25088}, NeuralNetworks`RealT]]], 
                    "linear_new" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{1024, 25088}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {1024}, "$OutputSize" -> 1024, 
                    "$InputSize" -> 25088, "$InputDimensions" -> {25088}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{25088}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]]], 
                    "linear_out" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{4, 1024}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {4}, "$OutputSize" -> 4, 
                    "$InputSize" -> 1024, "$InputDimensions" -> {1024}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]], 
                    "prob" -> Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "augment", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "augment", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv4_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu4_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv5_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu5_3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear_new", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear_out", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear_new", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "prob", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear_out", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "prob", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {224, 224}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, 
                    "MeanImage" -> {0.4850196078431373, 0.457956862745098, 
                    0.4076039215686274}, "$Version" -> "12.0.11", 
                    "VarianceImage" -> None, "Interleaving" -> False]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {1, 2, 3, 4}, "InputDepth" -> 1, "Dimensions" -> 
                    4, "$Rank" -> 0, "$Version" -> "12.0.11"]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"augment\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "augment"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ImageAugmentationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "augment"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "augment"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv1_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu1_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv1_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu1_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv2_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu2_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv2_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu2_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu3_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu3_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu3_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu3_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu3_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv4_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu4_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu4_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv4_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu4_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu4_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv4_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu4_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu4_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv5_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu5_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu5_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv5_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu5_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu5_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv5_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu5_3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu5_3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"512\"", 
                    "\"7\"", "\"7\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"flatten_0\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten_0"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten_0"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"25088\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "flatten_0"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear_new\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear_new"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear_new"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1024\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear_new"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear_out\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear_out"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear_out"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear_out"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"prob\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "prob"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "prob"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "prob"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   ImageSizeCache -> {318., {287.4169921875, 292.5830078125}},
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.775223833289269*^9, 3.775223844394623*^9}, 
   3.775224959251832*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"f5c3c301-9a2d-4337-9215-356eae9ff090"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataECA15", "=", 
   RowBox[{"dataC", "[", 
    RowBox[{"224", ",", "224", ",", "8192"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.772355752786458*^9, 3.772355821872775*^9}, {
  3.772690743490674*^9, 3.7726907773276663`*^9}, {3.772693549217153*^9, 
  3.772693583566229*^9}, {3.77312988440252*^9, 3.7731298847595797`*^9}, {
  3.7732152150950327`*^9, 3.773215215437931*^9}, {3.7732950325697002`*^9, 
  3.773295032668089*^9}, {3.7741710812201223`*^9, 3.774171081293769*^9}, {
  3.774171112241376*^9, 3.774171114625349*^9}, {3.7752232374385*^9, 
  3.775223237507818*^9}, {3.775223856901599*^9, 3.7752238586204348`*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"f6c2c066-47ac-4576-9cb4-e62c61563517"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataTotalistic2BigC15", "=", 
   RowBox[{"genData2r2C", "[", 
    RowBox[{"224", ",", "224", ",", "1024"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.772355752786458*^9, 3.772355821872775*^9}, {
   3.772690743490674*^9, 3.7726907773276663`*^9}, {3.772693549217153*^9, 
   3.772693588670415*^9}, {3.7731298879079638`*^9, 3.773129888266445*^9}, {
   3.77321521750358*^9, 3.773215217885929*^9}, {3.773215262293749*^9, 
   3.773215271744378*^9}, {3.7732950346821947`*^9, 3.7732950347840853`*^9}, {
   3.7741710833169518`*^9, 3.7741710834211483`*^9}, 3.774171123101664*^9, {
   3.77522323934326*^9, 3.775223239421975*^9}, {3.775223862918338*^9, 
   3.775223864065777*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"9c0dc13f-bb60-46aa-a091-0b52af3fa262"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataTotalistic3BigC15", "=", 
   RowBox[{"data3T2C", "[", 
    RowBox[{"224", ",", "224", ",", "512"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.772355752786458*^9, 3.772355821872775*^9}, {
   3.772690743490674*^9, 3.7726907773276663`*^9}, {3.772693549217153*^9, 
   3.77269359306248*^9}, {3.773129890386211*^9, 3.773129891320112*^9}, {
   3.7732152196732883`*^9, 3.7732152200277443`*^9}, {3.773295036430442*^9, 
   3.7732950365479527`*^9}, {3.774171084960733*^9, 3.774171085057392*^9}, 
   3.774171127062512*^9, {3.77522324115222*^9, 3.7752232412345657`*^9}, {
   3.775223867229121*^9, 3.7752238684731903`*^9}, {3.775224312161384*^9, 
   3.775224312476309*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"ded4704c-f9b6-481d-a314-d0f169695709"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataTotalistic4BigC15", "=", 
   RowBox[{"data4TC", "[", 
    RowBox[{"224", ",", "224", ",", "512"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.772355752786458*^9, 3.772355821872775*^9}, {
   3.772690743490674*^9, 3.7726907773276663`*^9}, {3.772693549217153*^9, 
   3.7726935982412777`*^9}, {3.7731298932839537`*^9, 3.773129893667457*^9}, {
   3.77321522172605*^9, 3.773215222093884*^9}, {3.7732950384695063`*^9, 
   3.7732950385858507`*^9}, {3.7741710868618593`*^9, 3.774171086932007*^9}, 
   3.7741711304700937`*^9, {3.775223243701316*^9, 3.7752232438720093`*^9}, {
   3.775223871951981*^9, 3.7752238731420937`*^9}, {3.775224316727125*^9, 
   3.775224317027165*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"a9d7de35-260f-42a0-af13-5962bbea7bf7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataTotalistic5BigC15", "=", 
   RowBox[{"genData5TCC", "[", 
    RowBox[{"224", ",", "224", ",", "1024"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.772355752786458*^9, 3.772355821872775*^9}, {
   3.772690743490674*^9, 3.7726907773276663`*^9}, {3.772693549217153*^9, 
   3.772693602628367*^9}, {3.7731298956689577`*^9, 3.773129896025247*^9}, {
   3.773215223612338*^9, 3.773215224001829*^9}, {3.7732950404115*^9, 
   3.773295040558866*^9}, {3.774171088543384*^9, 3.774171088609951*^9}, 
   3.774171133328553*^9, {3.775223245916102*^9, 3.7752232459988337`*^9}, {
   3.775223876722844*^9, 3.775223878713914*^9}, {3.77522414794558*^9, 
   3.7752241480817738`*^9}, {3.775224185427081*^9, 3.775224186170479*^9}, {
   3.775224320043972*^9, 3.7752243215500183`*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"5fadb808-2927-49ed-a0ae-418db10e5e8c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fullTrainingBigC15", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
    "dataECA15", ",", "dataTotalistic2BigC15", ",", "dataTotalistic3BigC15", 
     ",", "dataTotalistic4BigC15", ",", "dataTotalistic5BigC15"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "fullTrainingBigC15", "]"}]}], "Input",
 CellChangeTimes->{{3.772355752786458*^9, 3.772355821872775*^9}, {
  3.772690743490674*^9, 3.7726907773276663`*^9}, {3.772693549217153*^9, 
  3.772693602628367*^9}, {3.773129897972353*^9, 3.77312991704902*^9}, {
  3.773215225791395*^9, 3.773215243291334*^9}, {3.773295042430605*^9, 
  3.773295058617936*^9}, {3.773329034384303*^9, 3.773329038122735*^9}, {
  3.774171090243143*^9, 3.774171104146511*^9}, {3.7752232478763514`*^9, 
  3.775223260724506*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"f138e990-720f-4263-aca2-af74ff607ee3"],

Cell[BoxData["16384"], "Output",
 CellChangeTimes->{3.775224818428664*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"0876791b-6f2e-4c4d-a283-7755a3e73fe7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomSample", "[", 
  RowBox[{"fullTrainingBigC15", ",", "20"}], "]"}]], "Input",
 CellChangeTimes->{{3.775224830341238*^9, 3.775224837041753*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"4ed811be-0d6f-43ac-8b14-b037dc05285b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
4bfmf1uHXJ9H6H5C9275p9bt1+cReoicd613XWJyObOcTZdnPkmbgkdd7kXg
jLyLlc62Mo/WkYRvgUvML+8l+LOcKfJsCU5qXi1oWe7Dl/6T9mdZm8IMl7nZ
4qHgLYJOL78vhHlW8G99C6Sxat1L06PgIfJsl3fX7nKp5cv8FbSv5amgTWGG
lTxtdUuZD5rvaVmveY6m2ZY/r+tC5omm5cu8S/B80XPk/NU0KMx8qU1hBuFd
mndp79I6m6bZVkfVtCPsXfY9zW8Fv5L9Tebziudc8vaTPqx56SJvn+oPb+CA
9i6ZwxqGl3hq2hH2/knutHpCCzehz1/25DT+Qg5qnnPpq8LeL/uGdpdLDqx3
LY0Dl++Vu00rWzXf1uaUzxHyQnuv0CtaWm5lRCsHNW+Uc1DbtdBttPwS/EHg
m+ADsue0OCzvS/BGLQu0XtHqzC2/lfuDkIPCN0gro9N9Jo2b1g8TvqTxVuha
CX9odfh1Lci6a3WVlX1pcwrdMtErhHku+5vcH1oYCroTOrzApcW7J2Zu+YBw
juAPQm4uakHWnTCzvK+VjrcyfzrfNf4v9gdhnhZvE7O1tC/w/PLurZkv73t5
Tss3BO2sc0P4LtM6YSvTtflbnBe6sdA9Wv1N7g9PypT0vhK4pTWu8TPte61v
q0ttCrmTxkT4VpK5oT1rnVDICGF+TdfrfNDOF/ae9gQ5Uy4xSXvXIs5C1xX6
Qyt/L/fbyu4V7xJ8QOB2qxOu56bW8Va8TsNzxdsv+4OM7co3kcyZS5wFXWve
leCn4D8tr1vxLjmDhM62cv7bOnPLi1oZ1PoG0bz9sj+s7ELWu5YpLZwFnWre
JXd1YdeXGhf4KWSQ3Jm18zXttzqetpeV92rZKuCzsgtZ71qmXHJP5swKD1td
SL5jQl8Cf9KztXbU4vCKRlrnt3Kq9Xvtva1eIe9lZReax7Z6l8a9lc4v87DV
1eU7XupL41IrWz85U+jwskZWOrOAuZCP6x6i7XdxF4k7LvYuTYMrnV/m4Yqm
ZD9J8FPIi5VMWdTypUY0/J+6R81LtfvKc2q7kL1X6IotDa50/hafW5gL5zy1
J2t3SXNM8P8VvWvPwjedcF/BA5/Ur4Se0OK80Ocve1fr+1fITcH3LjuPpinZ
TxJ7XPf5NMfkLNY6mzb/Ys5e+nMrN1f6lbCXFucFn1/sVytzrme3rEH5+0Lu
ydpdLvn2LQwFLV92Nm3+xZwV3nvpgXK/EnTxNsyf2nm0ORPcE961ONviTi+9
SOaMwDdhF9odVzrYioe8rUu3+pWgC41Llz7/pM6j5eylHwreK88m9Jk38C3B
mUu9p/NXyJ318wVOyt1Y8JlFnlzed/37Quuxmka036d39y2eX/K/xdvL/ixr
8JKH35rz0mcus+kSw8XztXk0jxJ8RtjLYh9b14LQY9+g2QQml/zXsmDd3+SM
u+xU6VxY12krd9Z/r+W45lGCzyzyROhjrbukMb/ssYu9Qta40JEutfwGfxM0
mNZO2kvTer/k9s9zNy80Xbe0uYKzhs8nc677cKKHXL5rRbPCd5DgA5d9WHsW
fEDgm6DBS9++9L2f5y3/X/EiwWcEnmj+3MpcjfOavgTNXmpcvqOsNdnfZG9s
+UNLX0/qEk99XsFZyxfBtwUcWl06gY/mw4t+LjxrXvRUbgg9TfC3RW+Ufb6V
ueu+tPKs+bOWlSvfRNoe0zgkfr8ys+znwnNLa4neInPjUmtaDl72OsHrBC1o
mav50sqz5s9aVmr8XNmj9t4nzSz0atkn171lhRuJe7V8WOhOi/y5vIvQhWRf
WnnW/FnrFa3MFTJI6PCC7rSZ5a4o72vFW7S7X3pji89Cd1rkz+VdZF8VfEno
kwIOK3hqOXLpgXJOCTzRZr7MmpaOhLto/NG4IfeKVn/+5I6Cz2h+Lvvqb52h
1ZmFnvkzp6M1wQOFnJV5os18mTVpvskdSeNkos8I/BT8U7ijwMOVu2i8vTxz
xfd+5vzu+RpPNK9odQ+5j2n5uNIrWh1J8y6NG0J2aNoUvk3k/iN3Bm2naR9r
7ehnzpvOk/695hWt7iH3sXXMW72i1ZE0T0jkl4yD7LeXHUPAX+CwlmXpnQp+
ntjRz5w3nUebJ+0Vb+PD4q5ln0/svXVHYe9y37vMdO1Z6MOX/Uf4HhEy8ZN3
Xfq51uGfNGeLz0IWX+rxqXyQuXeJlbz39Aytu1/qXesh6z6g9d50/xH4qXXU
9LeJ5u2aT653vFZHap3f6hIaH4ScEjiT1kXCq1ta1jyk1feEfrWu5Za3y9oR
OvlvPSehEa3ztDJCm1Pzyad2wjSesrcLGZHmzGV/+NYdNU4K/UrY0VM73qVv
C11C086K36Y9ueUJAq+EOTXvanU8jQ+aLoTnVrf8ld+38PzkjhonhX4l99j1
jnfp2yt7udyXlpW/ck7Ck1vcE3glzNnildbxND5oupA7Z9pbZP4k7qhl1qVn
ClkvdOkWby/1Jezlcl9aVj51nhUNaj7/NpwFnxE8WeveWidZv4ucTZrntLJe
6NJpjbT8U9uL0Mdavv0JzsI8wu4Wu8cPzlu81eYXelqrkyzeJdG7VjSodbYW
N1odT/BPeS+ar65w41t9Xs6Lyz2uzL8y5wo+WqcVvhFaM8u+99QcFLTf4vOl
VwgdT8v91l40X13nxm/lvJwXMm9b86/MuYJPy5Nb/iN412UX0vCXNa5lZZrP
WqakO57mqysZrfFQ4Ebib4W8WPSTFg7anCv4tDxZ5vnK7hbxl71Uy8p0t2l1
y0v/Efh5uev0HQUeyrhd5svl7gRtyn4l46zhs57jwn41bsv4azkofH+1MNG8
NOE/wi60Hqj5RrprXeKm+cCl56/7dhq3lY6Xvu8KH+R7ady+9EYhizUPWcFE
42eCh2nfkP0nccfLnibr63L+lcx96u9bzxpvtXut4yZkd2ungt8K/TmN/5sx
SXcJQTua/1z60uW+BH0JnVPL3Kc+p799VjztbfxZn3/FS9ezWPYK4Tu0hUk6
o1t+KPtS+o7pLr2oLxnbllevP7fuq3maoH1h7yvzCxwTvPQyZzWvELJD0Mtl
LgvfPus4f8KrSw4L+vrWXlbm1Dgv60jWr9YfBP48tUs/yUsXdXo5QwsrAZO0
lld8chFngT+XfijzWZsz8V7teQW3tKdp2tf6mJCtGscud72i08sZWr1FwET2
xlZHSs8jz5A4R9PXJ/N86zdChi5m8SJuGp6tPNXm17r0YldJ+L/gby2ctW6W
1rugNaEjpc+RZ7jMX61LXPZqIaNb/ql5QqtTtfDUesvKXi73tdJVPnnvCp8v
M2vRKy5zU8iXNDcS58gzXPqw1sES2pFzp+Wfmie0OtU6/7U+s/J7Ie8EDWo6
FTqS5r0JTGQ+C35+eY4wwyU3Wny7zMpPZtb23urMWpdY6VoaHzSdavsVuKrl
snD3S81q3tvyB8GjBF6lzxFmeFIuyN9Kn/ChtfeVeYTOIGhqJdcEnV4+J7Jg
ReOfzKn5iexFgle0/nZlBm2nwgzruaB1jEsPT+x9ZR6hMwjnr+Ra6/xFX3pS
h/xWD2/5icDJlpYTPVy4l9Cv3nB3YTa5GwgdQOjeAg4tDBe71vo8rfvKviR4
vjyn8HzJyVafSfTwVr9qzSB0Sw3/y9me9A0oZM2i78lZL3enlqet9wetc37S
YZ7aIYVvhPR+01ksaL/Ff0GDgm9odxd4ldiX1i0TvVHQyEo3aO13pVNp86x8
gwi+JMwgzCk8J3w+jY/sV0IWX/arxT6zyKtL/WrdckWnrVxY1+xK9q3sMT1P
C4dP5nlqh1zUYGKPrSx7Km7CDJpmBfzlHEz48FO7ZcvfnoT/im8L+bXSH1r7
beG52CEXNZjARPOEddwuM0XzSeHuAq+EXiH0ZFmnmresaHYF55U9al6k5Z2w
0zdrMDFb6xtB4F4Ct0vNaj4p3F3uSJe9QssgTaeaJ7fwl317sXtrvUXD/xKf
lV3IHBD0pXFSw03DZ/E5gb/QkS49SsugT+4o+Fsr6zUf0Dqhlvvp/a7jfznP
yt1lDbYyTuhOCe4tvkvzRiFPW96oedFi17r0XiFfWp1E0OaTtKPhvIK/No9w
d1mDAlZat5Q5JuAjdMh0nsr7EvJLwHxl11q2rnfd9e7X8tsWT9L4a/Ncaqp1
ThrzFZ4IXrr4LkGbLT9f3JeQXwLmgo99MtsKnisdRutmmj+0eNLqPwIfWhp8
QwcQeCJoavFdaU+TO+eT/Ody1wLm63xb73iC3wr4rGToSg9p8TDBhxWtaRpc
4YmgqUsctCyQu4GgWYEbl16h8VDmm5A7K5g8lW8CZ4QekuankIOa1hY7gMAT
TVOXOMheJ2Sfll8tblxqJI15S++CHwodr4VJq6M+yQ9lLxXyOj2nprVFzss8
ae3r0m/T869nX0s7GjcuPU3Yews34Y4ar1o5JexiURcr82t5J3cYbUeXuSn0
4TQ+Qre5nE3OvpXcbPXeRf9s+eFKDmq80rxO45umi5X5tbwT8mtlR9qu0324
xb1WDra0I2TfSm4KXWLFP1t+eOk5izgLd7/Mr/VvgfX55a7Yyq+VHWm7Tuui
xb1WDq549eU5Wm5+4j+X+xL8s9W1Wlnf6r0rnWflHM0PW/cVfEzo2JcdRtuR
tuuWJwseK+fgipbT3Uneb8t7L/1Tw0fwNwHnN/iGoOVWXmvnr38jJPLrqd8R
ra4i5FHaY1udR/B8geet3BR6yye/v/RPWSPa7hYzd9E3LnnSymvtfK0Ttnzp
ktuaBgXNLvbbFb1rGr+8ozCbxlvB6zSNyH1jJXNXOLnyTfTU37f42eokn5yj
aVbbtYztJZeeqnchf7+F/2J+yf1W8HxhR5f61TL3Sb4heMtTn7VOqPFN9kBt
1zK2rV4haFzrPG/QbGIv8q4vZ3iSdi65reEv+8aKRhaf0/hr+21liuCNrV0I
2Aq9QvAZofO0eC5oMPH9Iuw6gc8btHPpmS2fb2V6Wi+CRhaftX1pfFvkwwpW
l9hqntDildzVW94l9BOtJwt9Q9tvAk/hO2JFv9p7BY0sPi96o5BTMh9WsFrv
eAn/13zsUrPa7y/7ieAnsg8L+xX64WXvXdHjOk+0jJB9RrhvSxcyPpqHtLwl
PVvC/zUfu+zq2rOcO4KXPqmPae+9nHlFv6151vNX6Jnr3ijzX8BnRbOXnTYx
m4az0F01LWgd7JLzl1l5yecWh+XOJviYlvVangq5IPjtojfK/Bfw0Tip9Svt
WdD1JZ8FfFodrOXDLU8T+LzoS5rHCv7W6sbruP10py4fBA/UsmPlHI0DsvY1
fQleoXmj0JdaZ17yeSUjBL0LOmp1Pw3bJ/FT6E4tPggeqGWH0Dcud6H5cwIf
TV+tziN7o5ALrTMFXmkZIehd9rc36F3QvqYLDZ/084qO5LtoPUfz5wQ+KxgK
Xiqf09LOendazAhhNtnftA6mnaPxc6UnCBqRPTCRHRpntK7YOl94FnS0ws/L
uz/pWdi1kBGfvFfrb8IMi3oXtK/pQvAoAbeW/1xipZ2jfW+2vPHyecX/BX5e
niNwQ/7mutRaawa5vz3JQwS9X2p/ZV+Cd2m6TvjPpWdqGtTu9QattbjxZp7/
yjkCNzSvbvEt0ZnT3yYCV1c8RND7pfZX9qV5oHavtC8lPPNtnGztSNZaixuJ
u6/wPMFPoVtecuaSbysdQPDeRQ9Z1LuAj9adWj6maVDAQfAfgZNaXgvza7r4
5L0rPJc7mOzVwi7kDnDZyYUdtfJC0LuAT6vztzxQ84dWz5HvrnFSy2tBa5ou
Ev6p8VzuYJc813jyLXy0jnTpvZc70jiv5aPWB9Y13jpnfX7NfwRvaXmXoLWW
T15ipfH8Ui/Cd5bwrkt85I4keLLmt63zV3JQ0LWgcdnn5fk1/xEyrqU1mTNa
nmq6FrS/0n+Ed13i0+L8J+cLPaHlt63zfzrws++l4bPYN1qcaWlf4+QlZ57a
IdPcvtTspdYuZ0i8S+4bcke69PyWHwq8FTq2wIEn3WuFP4Jfreyo1WlX7pvg
zHqHvOSGgInsJ5f3be1O0G+iBwqdPK2jS94KfNC64vq9WtmnnS97gtbbte4h
4NPyYeHurexLvFfwk9Y33aVvJ3qdMNtlT2h1klYuvK1jPPVegs8L5yfm1DxT
86jWfZ/UHzRfStzlMnMFP2nh0/oGSXtCS4NpPbZ8r9U539YxnnovweeF3wv5
1dK+xvmW1y32B82X5F6XwE24i8Bb2ROE2S71KHRsOY9WOsZKN9Peu/J8eV9N
+605te4taGRlR5dZKfBE6IHabILf/uDz///+UrOLebTSMVbu25qn1Qe0TBE6
zEqetrTZ0rLwLs1/Lnm4qNlExxC8/Q34rPSHNOdlbsgdY+W+LT/R9tvKlEXu
aZl12fEuuZ3IxxUfkPuzwMnLjiFk2Rvw0TDXsNW4oXWMlfu2uK3tV9OdgPm6
h6xoXO5jK5gL3zgyl2QP1N7VwkfwgZZmhfzScGh5u5aP6xmX5oOgr3UMNU62
uC30sRXML71FwEfQ+JM6vICP4AOXXUjbnbavli9p+bieca17yZ6gYbiyO62n
vRnzdc95w8xyhxfwEfrwJ/pKe04rc1u+3eKPpuv1XtE6/9IbV3bX8l45p9Ka
1e4i9BDBc94ws9z3BHwuuSHosZWhWjfWOpima20eDQdNj5dnalq47HJy1sh3
EXqI4DmLPinrqNWpLntvAp8WD4VsFXgrc7uFjzaP1u0TGtT8R+OSxjEta9b7
Q7qHaJ4j43mJ22Xfu7xLS+8C51tnClks60XGZwW39H1b+73sGytc0jjW+o4Q
dqHpOq2d9e50ObOgI9lvhW55qcfWt2Eriy85JnR77Xwtr9f5KTyvYLXSowTO
r+t6URetMwWNpHUk80fW++KOWpmucWzFEzTP0TJR42erSz+pb2j3EuZfmfky
l4XervnkJc6XPVC+16XeF3eU3t2KR2mevOI5P/x0vHGF2xrmKxpZnFnbheBd
8vOllwrfEYsZsaKv1u5WPKrFK+1Z0PiT+CngpnE73VGfuuvFmbVdCN4lP3+C
yeXuLmfQfEPovfLuBL996o4Ez2nhs8JPATeN263dre86kZstfgrnvM3b05i0
9JieQfONFX1pvqrlxeKOBM/R9qjdS8BN43YL2/VdJ/qA1v8vzxE6kvYsa/My
v2RdJ/Te6kuXHqX5uealK56j7VHjp4Cb5j+t3a3vOnF+i5/r3BP4KXD+8u6f
eJ2MoZDdrX512T1WOo/WgVf0sp7LK79P9A2tJ7S0o+068XvNr1a4J/BTnjlx
95XvAs3zL2f+BP+W9rXO0/LS1vwC94RcXnlO9A2to2qd9uf5HnONe5f9Wc6p
y7tf7kjI+sUsS2Cl6eupXa7VpWXuydpZyQhB45ont7T2hucWNwR/W+Sb5gmt
Hqt14zTmGn9aHHtzl7vUiICn4LfyPJdzrnA13Sue+p0i8LPlY5f+tsi3lc6f
7jNCR0pnq6A7mWPr+ajdS8NT8FuhLwlzapwRerj8XvlZ88/FHL/k20rnb/Wc
VjfWOpXggVp/1vJR4InwXtlvLzNLnlPjzDon39xFNc60fHKl12n5KGRBSwty
p2rNfMkxrVsu8kTODg0Hbe9CFq/vqMXJ9awUcmEFq0ReX/JNy8dLPAVuCFq7
vEtiBu1Z8zrBZ4Ts0HDQ9i70Fg3zFU62Or/wrPmAfN/1bL3Ef5EzaQzl7pTA
RNN+eu8rPNF8bx2f1r1aPra4i5Xdyd8X2szrXUjmlYbDt87XOJPuGK35L3NK
2GNr71p31Tr5io40XrU0K+TI23anaVP2k5b/XN73Sd6offcJnBG+r1s4tPJO
0Iu2Ly1HtO6k4aP5ySXfVnaxsruVriv4SUsXK/fV9Chzu8UZYS8tHARvbOlF
85bW/IIHyvtdf2+ab4seuzLnugYvs0brCYu7kPeewFP7rlnJDsH/L31vxYs0
Psu+JO93/b2Xv1/xWG13T9Xgpa61rij78CXPFzWu4allx1N5pXVXrUv83Pe+
UwmZ2MrK9ZyVd/dUDV7qWuOw7MOXPG/h/MldtKxp+a1wL1kXLY9a6TA/9+3i
sIK/3OW0rqV1b/m9KxxYyaPELhKzaT7Wygs5C7SMW9HFOodb5//c9waHFfwF
rFa6lta9NQ0KM2t6T3NV8ASBDy2eLPqqxp9fua+gi3UOr8/51Pum+4OG/6U3
rnTXlfk1Dco529K71l3f5i2LnBdwFuZpeea6t7Q6jJbLK/dNZ4qGv6xZ7XtH
m7/ldYu5pnVI4b1v8JZFzgs4C/MkuC34pNYZ3tZttPu2vGhlj4v5vsJhjRtC
xml3X+n5v3KOxkPhG0TgvMYlrZulfUPz/5VvEM3DV+6r8Ufb46VmtV1rXNW0
mThfu3tLX9p7V7xF6PYrWabNo3F1/Zti/V5Pve8KzitZLOT7CpfWtZngWEsX
rXkEzLUZtN7bwn/Ff9LZ+ivzJPalaVn7BlnRoHbfFZy1HpLQrKYp7XxNmwJn
1rm02BNknmja/2Qe7Y6tbE3Mf3nmYocX7rWCf8uTV+ZP+4zsXUJWPkmbwnPL
z9O6k3uCsHdNm4n5tTtqnepSR7IntDp86xwNf83TtPlbfBa8S8jEJ+WpzI00
/1f8JKG1N/BhnVeLd7nMhYQHaj6fxnO986x78sr8b+gVi3dcz6MWnq380nJZ
7jyLfNByXPYf7feX/VDo6ivvlX1j0ZNX5l/kQ+u7SfD5lTxqzdnyw5autXme
yofWPNr8rZ62wu3L/Fp/79v2pWWT1pdkPqxgonn+G+ZM60vjcCsXPnnvIh9a
+aWdL/uhwDdZ+9p7BS/SvPGSt1pf0jIx4XUr/WQlT4U5Nf9c6R6X91rkw7rP
X/qw1kUTPi/kl7aXFa2tnPPU32v8vNTUSj9Z0bgwZyu709yTMb98b4sPmm8L
3xqaHwqcFDphay8rWls556nPWudP5MhKvq9rXJsz4Q+XPBdypKUpjQ8/OfLr
PtzyQ1kLwndEei8rWtO65aU3Cs/aXi51pOW7xu0VDX5yzgqXtHxvaaTFB+Fe
wvNiV7zUgqbrVsdezNmVLrT+rH07XOpI0/5K/9E0+Ml7Wz7WyouVbtzKRPle
wrOsqRXfa/EhvZf1nNU6qsCZRR6mcfvkfC3fV/qPpkEhI2SeX3JGuG+CD8K9
hGdBpyu+J/jGm7uTttNW59eeNX+4nH8lT2UfEzr25XtbfrviY8J9EzsS7iU8
J+ZsdQPh+fIub+tOK/mi7UXzkLQ/CPvS8nTdkzWcP/m9PJvgY4u6TuhU04KW
s0I3eFL+XuaO5jna+a3cX+H/em9JzP/DgRvPb+Es9HlhNrlbXupazvcVH/7k
9+vdQ/bJhM9rnqP9vsU3bZ5032jhebmvt3FgnRtCpsizXc6/7sOtfF/X2hu6
RwJbYV9v4Nglb1c6mLZfrbdc4tzSptbnV7ghZIo82+X8T9VOOt8XfVLAU+4Y
n9z3cl/rHezHM7e6nJYpWi+69C6tz7fu25pfzs2Wf7a4rWknne8tP1/HU+4Y
CS0k9qVxcp0Pwk7lLqdlitaLBK62ckfTZnp+oUusn5/eXUs76Xxf8VsNzzf7
dos/WsfQ+KDxSvMWLVPW+ZN4l5YvGrYCt9d1p+Wppp30DCt+K+OpZYTgyYnz
tZk1PmiepnmLlhFa50zMv64pDVtZ+yu6E/L08rml2d/auzS/lfFs3V3z7bQP
aF60ooUWzzVvEfxf6KKX+K9rSvMcWfuCpt6gX1nvl98s6X1p+bXot8Ldn/Sc
5qqmwZY2F7Wv6XGlh2iaeqq/XXJJ6F1P0q+s90+wWtG4nMua3wp3FzS40rXS
2GpafmonF/R4qU3BoxbzQvCuxDnrWGn6XdH7t/SlaVzrxkIWt3a6qMdLLWuc
b53ztk6+ci+hh2ia0jij9SUBcw1DjRstzn/rXZrGtZ4gZLHcGTQ9XmpZ43yL
b2/r5JqXtn4v70LIC8G7hHtpWGn61bpxok9e8qF1/qU3/nQGR48CVzVNrXSb
lies3LfV4RMZ1MJW6/8aNy57iJYFmm8v+oDQDVrnX87ZyjItQ4U9yl1F8xzN
01Y6uealcka3dqHlhcb5y3s9tbdr+aL5wLdmk3uO0MeEzBJm03qa0FVaGpEx
F+61ct+V+eV+ruW+pmUNf7m3r3QMwcc+mU3oLXIf074vWrN9C/O0Nwo5pWnh
EvPF3BR0Ie9L7ucrO1rvMzI3NH9O5/iKjyX6qtxzNP7LPvzJnJrnC96laWHF
G1f6gMa3RZ63uKphtaJZmRtaPmo+KXSeFpeEvfz48E3nae1F8K4W/isa1HJT
ywKt8yfmFDxqkRsaBwRuaPn4w9Utr9D62Bt8WNtF2meEewmdSvNGrTvJHBbu
9cmcGmdWuLE+f4IbGmd+uPpdvWt5p+WpjG3LD4WZBQ5rnUrzRlmbl96inX+J
Q4sz67mzMn+CGxpnNAw1rqb5sOKrWt8QuoeQ74nfv0HLLR+45JX2LaDpdMXr
LrWgcbKVjxq3L31b63javS59I8EHuXvI3ziLnWS9az1Jyy0fuNSUxs+n8lzQ
u7ZTLXdW5he0o/V57V6X2knMsN5DWhq/9OFW1gt3EfDR9r6Sm2/wZOFZ+EbQ
dvrUfqL1n4R2VrJe86sEbokZWvtN+63QXbVOInyzCM8yZ+T5Ndy0eVb4nDhn
hXvr/UTrP5e5qeld86tLPIUZtH4l5HgLK8HnhSxe5Iw8v9aZ1/e4ovdPztG4
p/UN7fet54S/Ld5d4OrKDK13pf0zMY8wQyu75c6p7UubX+vMb7tXS++J/qBl
ltA9hOcVT17Uacv/E3gKM6TzUdvXJ/MIM6SxlfW+whntfKHDyH7YyvcWbp+c
09KC7EvCcwuHRP/RdKpxPtFhnsQHbV9Ct9cyVMBEwG2la2le2vKQlXtp83zy
Xq1DatrROqesqVYOCv1K8BMty1a6isDD9cz6lfNbOhI0vv57LffXvWKlK6bn
lO/Y0o7WOVe8VOharfyVuS3ofUU7lzzUskDgg4Cz1pHWu1n6vSte0cIzjfMn
79XuqGHb0kIrgxJcWunPK/kl8CrBh3WveBImwvMlzk/NF81L0+doXtHCU9uX
5sMCJisaT2tNzjhhBiG/hG6T2MWKf17yUPOTBE80XQvdQNiLgKemCy2bWn0g
Mb/swwKH1zth6/cyVpp+5W6T4ENL43IP+fG97syavlr3fZtnrvBhBbdLH3gq
h5/KmdY3goCV1gdkbBN6TOOwmDstTDTfa82c1oXQM4WOoXmmhoOW70JGt3JT
zotFzixmjcY9jUuXWZPQYys3Be/64er9Xha51NrL2/K3hUO6uy72lrd1SO2c
9fdecqzlt61zEtjK3rLi/2ncnsTV1t1XuPSkLiHwUPA9oec8iZ8atpq3tDij
cVXggOYnArYaP+V9XWKo3T3B1f8LKpoiNw==
       "], {{0, 224}, {224, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{224, 224},
     PlotRange->{{0, 224}, {0, 224}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1jGqpnkVhPFBQVyBuVvQUGhxAYKMKxhBowFhDMSot+AOjNyCiSC4E0PN
xBU4AwYmDdN8p6qe9/YTKKPcOX1u/99T9fvhr377+W++89lnn/3u+1//1+df
/P5nX331xR9++b1v/sevv/jyxz/68rtf/+M//vefb/75T3/7+7t//+T9T9//
88/v/vr+L+9+8Md/vfvFz//z7v///w/9zId+/kM/823++UN/7rf554/d7WPn
fOz+H/s7pnf+2D83vUP67zPxd/vKd5K+qfTve3WDiTdd7dz8ZhLfQPO7auZG
+ttL5PDVt5TIw0SOXf09r+bTOu7qm1m99ao3VzlAs2hz56vdnmLRp7/d1Te5
ysC3ZFHCN5N+68R3pUVz33az19J52+z3dA6vLEq4nWaeNzNTi97uTMg6LapF
tejtGzXnrIyhRft5SPAJYT6542id1bzHZmZq0dudCVmnRbWoFr19o+aclTG0
aD8Pm3mrRbUorTe1aG5nQtZpUS2qRW/fqDlnZQwt2s/DZt5qUS1K600tmtuZ
kHVaVItq0ds3as5ZGUOL9vOwmbdaVIvSelOL5nYmZJ0W1aJa9PaNmnNWxtCi
/Txs5q0WfZZFCffYzEwterszIeu0qBbVordv1JyzMgah+7RoLm+1qBal9aYW
ze1MyDotqkW16O0bNeesjEHoPi2ay1styrRo891pvalFczsTsk6LalEtevtG
zTkrYxC6T4t2TEKbT+44gs1W97j6fbXo6zsTsk6LalEtevtGzTkrYxC6T4t2
TEKbT+44gs1W97j6fbXo6zsTsk6LalEtevtGzTkrYxC6T4t2TEKbT+44gs1W
97j6fbXo6zsTsk6LalEtevtGzTkrYxC6T4t2TEKbT+64VT8S7rGZmVr0dmdC
1mlRLapFb9+oOWdlDEL3adGOSWjzyR1HvqP0PTYzU4ve7kzIOi2qRbXo7Rs1
56yMQeg+LdoxCW0+uePId5S+x2ZmatHbnQlZp0W1qBa9faPmnJUxCN2nRTsm
oc0nd1yzU7SoFr3amZB1WlSLatHbN2rOWRmD0H1atGMS2nxyx2nRTmZq0dud
CVmnRbWoFr19o+aclTEI3adFOyahzSd3nBbtZKYWvd2ZkHVaVItq0ds3as5Z
GYPQfVq0YxLafELHNb+f1bvTelOL5nYmZJ0W1aJa9PaNmnNWxiB0nxbtmIQ2
n9Bxze9n9e603tSiuZ0JWadFtagWvX2j5pyVMQjdp0U7JqHNX9ly9f2s3p3W
m1o0tzMh67SoFtWit2/UnLMyBqH7tGjHJLT5q2919f2s3p3Wm1o0tzMh67So
FtWit2/UnLMyBqH7tGjHJLT5WrTz7rTe1KK5nQlZp0W1qBa9faPmnJUxCN2n
RTsmoc3Xop13p/WmFs3tTMg6LapFtejtGzXnrIxB6D4t2jEJbf7V+zYzmXBH
6XtsZqYW3X7nqx1W2Ut7Oy2qRbXo9u60aN8ktPnN+9WinN7UormdCVmnRbWo
Fs112epbShuD0H1atGMS2nwt2nl3Wm9q0dzOhKzTolpUi+a6bPUtpY1B6D4t
2jEJbb4W7bw7rTe1aG5nQtZpUS2qRXNdtvqW0sYgdJ8W7ZiENv8pfUfrr/Q9
NjNTi/bv4i3d5tPfTotqUS26vTst2jcJeT7h57WoFn2iZ9LdSr7Np7+dFtWi
WnR7d1q0bxLyfMLPa1Et+kTPpLuVfJtPfzstqkW16PbutGjfJKv5iVvWorl7
bGamFr3dmZB1WlSLatHbN2rOWRmD0H1atGMSLapFCb2pRXM7E7JOi2pRLXr7
Rs05K2MQuk+LdkyiRbUooTe1aG5nQtZpUS2qRW/fqDlnZQxC92nRjkm0qBYl
9KYWze1MyDotqkW16O0bNeesjEHoPi3aMUm6l7WoFk18M4S/W7Jn0t1Kvs2n
v50W1aJadHt3WrRvEi2qRQm9qUVzOxOyTotqUS16+0bNOStjELpPi3ZMokW1
KKE3tWhuZ0LWaVEtqkVv36g5Z2UMQvdp0Y5JtKgWJfSmFs3tTMg6LapFtejt
GzXnrIxB6D4t2jFJs+u1KOfdab1J+D6b/d7cmZB1WlSLatHbN2rOafY+4e60
aN8kWlSLEnqT8H02+725MyHrtKgW1aK3b9Sc0+x9wt1p0b5JtKgWJfQm4fts
9ntzZ0LWaVEtqkVv36g5p9n7hLvTon2TaFEtSuhNwvfZ7PfmzoSs06JaVIve
vlFzTrP3CXenRfu9qUW1KKE3tWhuZ0LWaVEtqkVv36g5Z+UKQvdp0U5valEt
SuhNLZrbmZB1WlSLatHbN2rOWbmC0H1atNObWlSLEnpTi+Z2JmSdFtWiWvT2
jZpzVq4gdJ8W7fSmFtWihN7UormdCVmnRbWoFr19o+aclSsI3adFX9+/+c2s
MmHVd7T+St9jMzO16O3OhKzTolpUi96+UXPOyhWE7tOir+/f/GZWmbDqO1p/
pe+xmZla9HZnQtZpUS2qRW/fqDln5QpC92nRvk9o88l9R+uv9D02M1OL3u5M
yDotqkW16O0bNeesXEHoPi3a9wltPrnvaP2VvsdmZmrR250JWadFtagWvX2j
5pyVKwjdp0X7PqHNJ/cdrb/S99jMTC16uzMh67SoFtWit2/UnLNyBaH7tGjf
J7T55L6j9Vf6HpuZqUVvdyZknRbVolr09o2ac1auIHSfFu37hDaf3He0/krf
YzMztejtzoSs06JaVIvevlFzzsoVhO7Ton2f0OaT+47WX+l7bGamFr3dmZB1
WlSLatHbN2rOWbmC0H1Pt2jiG6BZkZAJq76j9Vf6HpuZqUVvd9aiz3o7LapF
tej27rTo1ie0+eS+o/VX+h6bmalFb3fWos96Oy2qRbXo9u6eaNF0xzV9QptP
7jtaf6XvsZmZWvR2Zy36rLfTolpUi27vTotufUKbT+47Wn+l77GZmVr0dmct
+qy306JaVItu745s0WY2rnxCm0/uO1p/rb5hLcr0TLpbybf59LfTolpUi27v
jmbRVTaufEKbT+47Wn+l77GZmVr0dmct+qy306JaVItu706Lbn1Cm0/uO1p/
pe+xmZla9HZnLfqst9OiWlSLbu9uZVFCVhN8QptP7jtaf6XvsZmZWvR2Z0K+
aVEtqkVv36g5Z+UKQvdp0b5PaPPJfUfrr/Q9NjNTi97uTMg3LapFtejtGzXn
rFxB6D4t2vcJbT6572j9lb7HZmZq0dudCfmmRbWoFr19o+aclSsI3bcyEiEb
Vz6hzSf3Ha2/0vfYzEwterszId+0qBbVordv1JyzcgWh+7Ro3ye0+eS+o/VX
+h6bmalFb3cm5JsW1aJa9PaNmnNWriB0nxbt+4Q2n9x3tP5K32MzM7Xo7c6E
fNOiWlSL3r5Rc87KFYTuS/9eWlSLalFOb2rR3M6EfNOiWlSL3r5Rc87KFYTu
06J9n9Dmk/uO1l/pe2xmpha93ZmQb1pUi2rR2zdqzlm5gtB9WrTvE9p8ct/R
+it9j83M1KK3OxPyTYtqUS16+0bNOStXELpPi/Z9QptP7jtaf6XvsZmZWvR2
Z0K+aVEtqkVv36g5Z+UKQvdp0b5PaPPJfUfrr/Q9NjNTi97uTMg3LapFtejt
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
sOo7Wn+lb7CZk1r0dmdCvmlRLUr4c7WoFtWiufclfCerHFj1Ha2/0jfYzEkt
erszId+0qBZd9bUW7XxXaWMQelCLdnxCm0/uO1p/pW+wmZNaNNfpq3zTolpU
i2pRLdpxhRbt58Cq72j9lb7BZk5q0Vynr/JNi2pR2r+rRW+/q7QxCD2oRTs+
oc0n9x2tv9I32MxJLXq7MyHftKgWpf27WvT2u0obg9CDWrTjE9p8ct/R+it9
g82c1KK3OxPyTYt+mhZNe4DQQVq0//2selCLdnxCm0/uO1p/pW+wmZNa9HZn
Qr5pUS2qRbWoFu24Qov2c2DVd7T+St9gMye16O3OhHzTom/bouls0aJalNCD
WrTjE9p8ct/R+it9g82c1KK3OxPyTYtqUS2qRbVoxxVatJ8Dq76j9Vf6Bps5
qUVvdybkmxbVolpUi2rRjiu0aD8HVn1H66/0DTZzUove7kzINy2qRbWoFtWi
HVdo0X4OrPqO1l/pG2zmpBa93ZmQb1r0WRZN57kWzb3X6rtKG4PQg1q04xPa
fHLf0forfYPNnNSitzsT8k2LalEtqkW1aMcVWrSfA6u+o/VX+gabOalFb3cm
5JsWZVp05Totevt9NuesjEHoQS3a8QltPrnvaP2VvsFmTmrR250J+aZFORZN
ZKAW1aJpYxB6UIt2fEKbT+47Wn+lb7CZk1r0dmdCvmlRLapFtagW7bhCi/Zz
YNV3tP5K32AzJ7Xo7c6EfNOiWlSLalEt2nGFFu3nwKrvaP2VvsFmTmrR250J
+aZFtagW1aJatOMKLdrPgVXf0forfYPNnNSitzsT8k2LalEtqkW1aMcVWrSf
A6u+o/VX+gabOalFb3cm5JsW1aJaVItq0Y4rtGg/B1Z9R+uv9A02c1KL3u5M
yDctqkW1qBbVoh1XaNF+Dqz6jtZf6Rts5qQWvd2ZkG9aNHeDze9Wi26/n/Rb
p62iRTuu0KL9HFj1Ha2/Vj2oRZmeSfcp+TY/tbdrfrdadPv9pN86bRUt2nGF
Fu3nwKrvyP2VuMFmTmrRvme06HPfrvndatHt95N+67RVtGjHFVq0nwOrviP3
V+IGmzmpRfue0aL9t2veVzoDtagWTRuD0INatOMT2nxy35HtkbjBZk5q0dud
CfmmRbWoFtWiWrSTCVq0nwOrviPbI3GDzZzUorc7E/LtU7Yo4b7SGahFtWja
GIQe1KIdn9Dmk/uObI/EDa46Wou+vjMh37To9r7SGahFtWjaGIQe1KIdn9Dm
k/uObI/EDa46Wou+vjMh37To9r7SGahFtWjaGIQe1KIdn9Dmk/uObI/EDa46
Wou+vjMh37To9r7SGahFtWjaGIQe1KIdn9Dmk/uObI/EDa46Wou+vjMh396S
RVf3mDZDM8+16O0bNeesjEHoQS3ayUPafHLfke2RuMFmTmrR250J+fZ0ixI6
MW2GZp5r0dz3ufqW0sYg9KAW7fiENp/cd2R7JG6wmZNa9HZnQr5p0e19pTNQ
i2rRtDEIPahFOz6hzSf3HdkeiRts5qQWvd2ZkG9PsSjtHbWoFtWi27vTov3s
pc0n9x2ts9I32MxJLXq7MyHfyBYlv6MW1aJadHt3WrTvE9p8ct/ROit9g82c
1KK3OxPyTYtu7yudgVpUi6aNQehBLdrxCW0+ue9onZW+wWZOatHbnQn5pkW3
95XOQC2qRdPGIPSgFu34hDaf3He0zkrfYDMntejtzoR806Lb+0pnoBbVomlj
EHpQi3Z8QptP7jtaZ6VvsJmTWvR2Z0K+0W7zKe+oRbWoFt3enRbt+4Q2/+l9
R/CSFu3cKfl7IOQb7Taf8o5aVItq0e3dadG+T2jzn953BC9p0c6dkr8HQr41
f16L5n5fLbr9ZtJvnbaKFu24Qov2cyD981pUiz7RMOk+Jdxm+l4I76hFtagW
3d6dFu37hDaf0HdaVIs+0TDpPqXZUot2vlstuv1m0m+dtooW7bhCi/ZzIP3z
WlSLPtEw6T5d9UjzXgjvqEW1qBbd3p0W7fuENl+LalEt+vrOhHzTotv7Smeg
FtWiaWMQelCLdnxCm69FtagWfX1nQr5p0e19pTNQi2rRtDEIPahFOz6hzdei
WlSLvr4zId+a+2vR3O+rRbffTPqt01bRoh1XaNF+DqR/Xotq0ScaJt2nzW6l
7aZFtejqm0m/ddoqWrTjCi3az4FVx9E6K32DzZzUorc70/JNi2pRLZq7l9W3
lDYGoQe1aMcntPlaVItq0dd3puWbFtWiWjR3L6tvKW0MQg9q0Y5PaPO1qBbV
oq/vnM438p0+/R21qBbVotu706J9n9DmkzuO1lnpG2zmpBa93VmLPvcdtagW
1aLbu9OifZ/Q5pM7jtZZ6Rts5qQWvd05fWvkO336O2pRLapFt3enRfs+oc0n
dxyts9I32MxJLXq7sxZ97jtqUS2qRbd3p0X7PqHNJ3ccrbPSN9jMSS16u3PT
CbQ7ffo7alEtqkW3d6dF+z6hzSd3HK2zVsbQokzDrO7iifuQ31GLalEtur07
Ldr3CW0+ueNonZW+wWZOatHbnWn2o+1DfkctqkW16PbutGjfJ7T55I6jdVb6
Bps5qUVvd6ZlnRbVolr09o2ac1bGIPSgFu34hDaf3HG0zkrfYDMntSjfWlpU
i2rR/jeTfuu0VbRoxxVatJ8Dq46jdVb6Bps5qUX51tKiWlSL9r+Z9FunraJF
O67Qov0cWHUcrbPSN9jMSS3Kt5YW1aJatP/NpN86bRUt2nGFFu3nwKrjaJ2V
vsFmTmrR2+8w3a3kO33KO678oEW1aPq70qJ9V2jRfg6sOo7WWekbbOakFr39
DtPdSr7Tp7zjyg9aVIumvyst2neFFu3nwKrjaJ2VvsFmTmrR3P6ErNOiWlSL
3r5Rc87KGIQe1KIdn9DmkzuO1lnpG1z5Sove7k/IOi2qRbXo7Rs156yMQehB
LdrxCW0+ueNonZW+wZWvtOjt/oSs06JaVIvevlFzzsoYhB7Uoh2f0OaTO47W
WekbXPlKi97uT8g6LapFtejtGzXnrIxB6EEt2vEJbT6542idlb7Bla/eqkVX
+xOyTotqUS16+0bNOStjEHpQi3a6jDaf3HG0zkrfYDMn36pFCd8GIeu0qBbV
orlsWX1LaWMQelCLdnxCm0/uOFpnpW+wmZNaNLc/Ieu0qBbVorlsWX1LaWMQ
elCLdnxCm0/uOFpnpW+wmZNPtyj52yBknRbVolr09o2ac1bGIPSgFu34hDaf
3HG0zkrfYDMnn2hRsmfS3Uq+06e/nRbVolp0e3datO8T2nxyx9E6K32DzZzU
orn9CVmnRbWoFr19o+aclTEIPahFOz6hzSd3HK2z0jfYzEktmtufkHVaVItq
0ds3as5ZGYPQg1q04xPafHLH0TorfYPNnNSiuf0JWadFtagWvX2j5pyVMQg9
qEU7PqHNJ3ccrbPSN9jMSS2a25+QdVpUi2rR2zdqzlkZg9CDWrTjE9p8csfR
Oit9g82cJHyfzX5vfhuErNOiWlSL3r5Rc87KGIQe1KIdn9DmkzuO1lnpG2zm
JOH7bPZ789sgZJ0W1aJa9PaNmnNWxiD0oBbt+IQ2n9xxtM5K32AzJ9PfZ/pm
yd8GIeu0qBbVordv1JyzMgahB7Voxye0+eSOo3VW+gabOalFczsTsk6LalEt
evtGzTkrYxB6UIt2fEKbT+44Wmelb7CZk1o0tzMh67SoFtWit2/UnLMyBqEH
tWjHJ7T55I6jdVb6Bps5qUVzOxOyTotqUS16+0bNOStjEHpQi3Z8QptP7jha
Z6VvsJmTTZdq0X7WaVEtqkVv36g5Z2UMQg9q0Y5PaPPJHUfrrPQNNnNSi+Z2
JmSdFtWiWvT2jZpzVsYg9KAW7fiENp/ccbTOSt9gMye1aG5nQtZpUS2qRW/f
qDlnZQxCD2rRjk9o88kdR+us9A02c1KL5nYmZJ0W1aJa9PaNmnNWxiD0oBbt
+IQ2n9xxtM5K32AzJ7VobmdC1mlRLapFb9+oOWdlDEIPatGOT2jzyR1H66z0
DTbzTYvmdiZknRbVolr09o2ac1bGIPSgFu34hDaf3HG0zkrfYDPftGhuZ0LW
aVEtqkVv36g5Z2UMQg9q0Y5PaPPJHUfrrPQNNvNNi+Z2JmSdFtWiWvT2jZpz
VsYg9KAW7fiENp/ccbTOSt9gM9+0aG5nQtZpUS2qRW/fqDlnZQxCD2rRjk9o
88kdR+us9A02802L5nYmZJ0W1aJa9PaNmnNWxiD0oBbt+IQ2n9xxtM5K32Dz
m9eiuZ0JWadFtagWvX2j5pyVMQg9qEU7PqHNJ3ccrbPSN7jKTC3afyPad6JF
tagW1aKEHtSiHZ/Q5pM7jtZZ6RtcZaYW7b8R7TvRolpUi2pRQg9q0Y5PaPPJ
HUfrLFr+N3OM8PdM9ky6W8l3+vS306JaVItu706L9n1Cm0/uOFpn0fK/mWOE
v2eyZ9LdSr7Tp7+dFtWiWnR7d1q07xPafHLH0TorbQYt+lzPpLuVfKdPfzst
qkW16PbutGjfJ7T55I6jddYrc/4LuJdV8g==
       "], {{0, 224}, {224, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{224, 224},
     PlotRange->{{0, 224}, {0, 224}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzte7GuRbuS1BNIiAyJlARCUsjfiIRooiEiQXpIEI2ENASIkB8hJOAT+Bo+
gZyEGW0klubQW1WnquzuZZd0r85d8rbbdttdXe37T/7tf/iLf/93/vCHP/zH
v//X//qLP/2nf/FXf/Wn//yv/t7f/Me/+9Nf/vN/9pd/96///J//95+/+ft/
/fm//rP/8af/8sd/8Of//Y//5p/+7z/+13/5j//43/7hP/oz5Dv7W7YNMi5r
Jzuua16u7+xerPwt2yfbj8tXXf2vXB/X94QfptckvS+Je2blWrnuCmU9XT6c
PlOuv11xZNf9mfD/xBlcGTvSsTt9x+5ac6XNHwo821dtkN+6zvWzf8R+pH06
jiDriXxH+kfmlfhttW7IXJB+XL7q6n/l+rh8CQHrh+w9z66JyzZlTdh7prIt
sVbKWUNsTsRHZSxkTZT1d3HaxFlw3Z+uuOnaR7bPROxg7Ul/T3Bsdo7KHaJA
2ceqTSK/S8yxas/6g7I+ym9dua2S17A5DpuLsXNH9pHNcZS4g6xPwh+QfhQe
yNqjxBTEtvQdUgEZS1krRU9g7VG4FrvOiTOl3JmuO4Td38T96crFqnGr9VH2
hf2ezj0TNlfjuuLdLvsVpPMXJb9znR1X7HOtj8t+JbdV/Mp1f1Z9uuIy24a1
U1mfhD8otlVzZ2M0e5YVjor0n87lXRog0v/zu8L3kH7YfI3lY4htVRt2bV33
A3uHKNoXu4ZI+4SeU82r+q7ohErsQOalnGXke7WGSrxj/3bZr2BljFb8wfVb
pE0i91e0AnZtkTVRNPaEPa67AmmP9KPwsYQ+UNnAfnfpKom9ZnkOO8eV8Vfp
X/Expc9ne6Vuoviba75V/ytzENZ+5UyxtiXWIbFfSP8K/2fHddlc2cb6iase
sfLOrObCtlf0w8S4CtiYi/w2oX0lfIxt47LnCXZ/E3EZaaNoI9V8ke8VFP2H
XZOE/ua6t106gIJEHsTyc7ZPRWdQ8oj0fFmb2T6R/qs57rJNaYMgcb4S2jXL
8Vw2u/QrxE7XXdEhZ1FidGLN2TbsOjy/s/azOrkrR07n9Ql7lP1duQ5pLQtp
z7ZB7HdpU651YO9ttn9lHXatj9LexQmVu0vZF2V9qrkk7gol3nW7z1mkNY3n
d1cOksgFEP9X9CvWTtcduPLOdNVk2TVMc2wWrpjleoOh5HreldlrT7d1QMDm
I2kdL6GbKf2wYyk5XVqfSWgObHtX/KraK3p7gg9X7dN3haJHIXPsdo/twq78
N3HXsTZU9rv6Z3lIOl9Tzo6SX7jqei4kapdKjp/mGCx22dNtHSqwZ39lDuvS
zRLal4vnVPviumcS68OOpbRJ12jYuyuhO628K1z2J3S/6ViZ/yLtXWfQdVez
/bs4TOLORGxg+1d4KTKuC0pMr/p03YFpv0Xg4jAJv1q5DghY7sTaz+awigbL
zlfh2NU6VOO6eC8yx2q+yvoov2X/RuKRoo08wa65i2PsuisU+13n5U1Ymf8i
7Z9tEnUr9q6u1i3hS+m6W+JOVnSVDrneyrtX4Rsuv2XXhLUtkbfuWocKLo7N
cgakf4WfKN/ZWpKyR+zdu5LbIH2y39l7I2GzwiddNrPjuu4KxX72XK+8xzog
fb+5cjf2PCqxfqUvJWIBy+eRfU9oNci8EkjkR8odiPSp+K2yJsoZV9Y5Pa4C
1zlC1kHhEkisZM8pe08qdyDSRuEPVXvW36p+kP6r7y5/TuixLp6PjPv8vuuu
UM64cl7S99gupO83xW9d/NDFx1b6khILErpHNdbKWJAAu24uTqjkOIj9VRt2
TVxrxfaTHhdZhwoKR6rg8rGqTzbHQeai5Guus5++59k1Z32DPePId8Ue5Hv6
blfyl8RdodzPij+kuX0HKPkdG1sT+uqzPbt3ibtC8SWF/yvroNwnac6fgKI7
IXayflvZ4NKHE3zAlZsnYpOyDiuhxPf0mU3nvwn90HXPs3N35RpVn2kOz84x
fbe7dJIEb0zwQIUDdLjHWCQ4iZJHVH2y35U7p2rDrkm3WgkbX1idJM35kfkq
UPThtD+77pkEH3DlmMpcXHlBwk4W6fwu7bfKXFz9pzXJdJ6FxOIEh1fucNfd
7sr9n0joYIm8m+Xwne8xBK78TrlPlHqZKz+qkMitVtZKVt63rrxyJdh4jXBU
lz+77swEf2Zjk2uvlXGn+GQiv2NzdqXOy87FlV9X83Ll+yvjvsu3lbmzmoxr
XCX3R9okNEYXp03MHbFhJVxrrpxNV87oyo8UsPlgIi673ie4amcTc7HEmiBj
VW2QeylxzyPzUsZF2rv62XUnsEhrbq68JmGnS+tQOG0iR6vGQsDmSsrdm8hD
lTkq95Irl2H/dvmJa+7IfHfBtc7PPleeTYVfKeMi/bN3natWwn53nanpudgT
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
24vvUGIrorkh94MrvrP5r3stv4F9X5Sw06W1JtBBf3DdY0p7pB9XTFzJb9n1
UfxwV2yaGBM7nLsKrvVU9JDOOfvJ6Oy3F9/hqhWyHBU512nNlm3jAjLHNCdk
OUwaCu9C+lGg3GOJN6KJWkD1PbHmK2PErtg0JSZ2PndPKOup3LG77ueL75ji
txc40jU75Dvbptt9XiFR61HAatQrgcSRDvpn9d2lcz6/s1wX6bP6bWLNV+qf
u2LT9JjY4dw9oaxnQtvslrNffNDNby9wKGdq5Vu4ymbl+0q47kPFBuWudq0D
YtvzO+tjaa6u2Mb2n85Zdq15Bx0yHZumxMTO5w6xR8kR2LlX/Vw+sx5T/Pbi
O1gdzKVnuvY9zXUVsFqHS1ur4OJFaXTIL9J65koNh52v8l3pPz1WOjZNj4kd
zh3Sv8I/FR67q1Z18R3d/PbiO1w6mOs9m8t+tk0aypslly6k1P66rSHyPTGu
i7ev1HCUvUuv+Ur9c1dsmh4Tu+X1aZ2frfela1UXv0M3v734CSWeKnym6j9d
v1vpewqvS6wtW/vr8C50V37h0jmVfUHsTPh/es1X6p8VOuQyK8dl0Tmvd91L
rnyc7V+d/0WNzn578UHi3CF8JmG/a14u2yoo79iVtWX7Yduk17BzfsHa+Wyf
0HBc/r9yzXfpn7tymSkxsdu5c9Xpqjmy+Tgy3w730mno5rcXP+E6d673oq65
sPNy2VCBfaugvHNg27vO6cn5hVJXdWk4Lv9fuea79M9dsWlKTOx87lzvXpR8
PKGL/m41Lp7o7LcXH7jOXQd9TNFtkH4SSKxnuk7UocbUOb+o7Ky+I36b1i2V
fhJrnuZju2LT9JjY4dy57j0kv2Nz7W65w8UHHfz24ieUc8fGKWRcFxQNKmFP
BZaHIHuRqBOxWly6ToqMtSu/cMVElz8kvifWvJv+mY5NU2Jit3On1OnS93/n
3OE0dPPbiw8UbSqhA6T3dxcHrqBwD6QfV52I7XNljalzfqG8UUHWvBoXuW+V
7yvXfJf+mY5N02PirnOn1IaUPJrF1T97onO8OA2JGtkuGyok6tEusNwD6Ycd
l9UHKqTvcwQd8gvWx1jbEvmdci4Sa75L/+zAqVaO68LKc6fUvqv2rvt/+j6e
hg7x4jS4tKm09pWo0XR4n+PSNtn1R767+OdKPj8lv0D0q4RtSlxmddrEvHad
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
/PYErKyddbNH4X4u3qhoiYpex64Vgm5aaKKuzXItlx6eru0ia5KuPyr+vEsr
Rr5PH5dF4twlbFO+K5iyj6ehs9++Ca5acCLHT9uj9Kn8rdjj0j/TZ2flewnW
HoWrKHvK9sm+kVB0bNYGl1apxN8O+ufK2DQxJqZrOgk7ke8KJu7jaZjit9Ph
ereW0GFW2uPSqZQ6JrsOz/asXpfYO5bDpO9VV86i8H+Xb6zMEdj2Lt7Ltqls
S8eIXbFpSkxMnLu0nSt54JR9PA1T/HY6kDjI8sBEPErbw2oyis6ptFHWeSUn
7PZ+oxpL8SWW/yMcbxcnd/mtK9dTtGjWZuWOcq1n53FdUM7dLtsSPHD6Pp6G
zn47Hcq7NWTNXTwkYY/CLRHOptic4G9pTujiM4l7FeFL7N+uOe7SOpT6AlsX
QPbC1U8HHTIdm6bERGWPkH4Stq3kgVP28TR09tvpcOlmym932YP0ydYiK7Ax
OhGvV3JChc8guqILLq5YzR2ZI7JuiM3K3JXaAXLfKvkg208H/TMdm6bHROV+
S9u2kgdO38fT0NlvJ4I9RwpPSOh+Cd6SiE1sTHTFa5fmxvINls8ouqILLFdk
8yPXHiXmi6wDMkeX/a74u1L/3BWbpsdEV71MQQceOH0fT0MHv50Il67oqru5
2id4i+JLSuxz1ceRdXBxQkUPTKwJAmVNlP6rNq66gDIWOxeWq7virKtGgPyW
xa7YNCUmrvR5xTblu4Ip+3gaOvvtm6DUnV3aGqtHIXNh7Wd9yeWTCU7OckhF
B0uvbeJcr8xrnkjUBdix2H5cujobZ5XvK/XPlbFpYkxc6fMuO5HvCibu42mY
4rcToXCDqh8Xz2T5pzIXl/blelegcHLXe4ZqbZF1QPpX1oS1Aek/0f6JRF2A
HYtt8wTre4k8Tplj2rdXxqYpMXGlz7vsXMkDp+zjaZjit9ORrjkq+ifSvzIX
l/aVrgm6dDnk7Cg+4LI/wZ3YdVDaI3CdizRYn0HuAWTcxBuVhA5cfU/Epukx
sbPPr+SB0/fxNHT224lI1xxZLqpwTmUurlhWtWHnrviwonMm8n0lf0mf34Q+
z86xssd1Llxg8wUlv0i0Ub6z67MyNk2JiZ19vgMPnLKPp6Gz305Ht5oj8j1t
W1qjQMZ16aiKNqXwYZeemahzIXyJvf8TOVoHrSN9LpRcjPVPl46KzD0dm6bH
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
O5cO9zbiV7vem1VtXHVzdl7d+NLKPWJtmxITL5//YPo+nobOftsBK/VP5b1l
1Q/yHemH/a1yD3SIlWm49lrxPdf+dtPWErmYC+w7lnQ+u2u/puxR55h4+fx3
TNnH09DZbzsjkbshvMtVv3Cdd4VXJ+Y1Ba69rqC8r2DbuPhzGivfm1VgeaaL
KyJ9dtivbntU2dA5Jl4+/8H0fTwNnf22A9JczqVJuv7+3Sr9BKvnnPA+x6Vj
P7FS10rz57SdbBsXXPmX4g+u9i5026NqXOX7Llw+//23U/bxNHTw285wcSRX
DYKtr+1695KIiVPuCmX9Fd0scWYT/DmBN+Vfij8g8zrhTaDLTuT7Llw+/x1T
9vE0dPbbDkjon0oNQolTu969uGLixLuC3Wuk/UodMs2fXXDZ0yH/QrSgaq9d
NqTXAbFtV+45MSZePv8TE/fxNEzx2w5Q1ifBA9mx2N/+dp3Qflzar2JnAuxe
p/MCpZ8Ef1bmwtq8cp1Ze55t0jWLbnd4tz1CbOsWEy+f/44p+3gapvhtB7j0
TzbvU/bIVctLg70HptwPiTeu7B4pe53gz2l/Y+vR3fIvVt9m3/kobVzotkdI
n1Ni4uXzH0zfx9PQ2W+7gT07rrwP6R9pX427ck+V896BM1dwcbyqDWuPokO6
+POuPGKKls6Ou5KPpdF5j6bExMvnv2PKPp6Gzn7bDew5csVuZI9cnGcXr1Pe
G3S7K1jb0rk/q60lfIn9LTtfBNO19A7nNI0OezQ9Jl4+/8H0fTwNnf22G1x+
6+IJlW2I/Sx/diGR/3a786s26bPG7p3iAy59NeFvrrpDByjr3Bmd92h6TLx8
/vtvp+zjaejgt92Q4D8KT1C0rA7a1Gl1kHRtWtlr5M5H/lbypmpcZO7IvNLv
zRJQ1nm37Sim7NGUmHj5/HdM2cfT0Nlv34R0XGZ5QtVP4s5H7HlTHcSl5bIc
EtlrF59k16HDm0+X3p6G8i4lbZuCKXs0MSZePv8TE/fxNEzx2+lI19GQt6O7
tCn2znnTPZB446rwRsRPXHNR/E3BxP/vQOFgE2No5z2aEhMvn/+OKft4Gqb4
7XSs1JdYjTGtTZ2ceybOUWK/XLp69dtd/lbZ0FlvZznYxHehnfdoeky8fP6D
6ft4Gjr77XSk62iIlsXGr5t76kicow5aolLfX/l2kY0pu2KNK2ec+C608x5N
iYmXz3/HlH08DZ39djrSdTSkPfLbxDucDnfOLrBcovpt1X8H7Zqt7yNjpe/8
le/NErYpuVuHOSLoYP/0mHj5/AfT9/E0dPbbiUjU0VitQ9FGXPrJabknG0OV
2vdK7Zr9bSLnWmmDMq7LNqS98tvMzDhM2SPl+y5cPv/9t1P28TR08NuJSNTR
FL2L1UZcNfEOd85KpGPoSi3RxQlZv0pouZ3ffrDjpu+BXei8R5WdyPdduHz+
O6bs42no7LdT4OJ4iobpyhNdd0KHOyeNRAxNv99A5sLyHNa2xNvFzm8/XDqn
6x7oXCPu8D5nYky8fP4nJu7jaZjit93gqoUpa+7SjtJ7/abcMx1DV+rkifq+
or1XbZB9Qfrv/PajshP5bUJDTqPzHk2JiZfPf8eUfTwNU/y2M5Q6WvXdpXcp
GkhC/3xr7umKoYn3G8jauur7ac1Q8efObz9c2nWiJpJA5z2aHhMvn/9g+j6e
hs5+2w2uOhrSJ6t3KRrISg1qeu6ZiKGu9xtKjpOu77NQfCOdW7mgaNeJflai
8x5NiYmXz3/HlH08DZ39djpcOlj1XamrJtqw9r8p91RiqLK2iX1J1PdZKHOp
0O3th+vNg6ufDuiwR9Nj4uXzH0zfx9PQ2W+ngK2fVr99flc0K0U3c+mTp+We
rIbJcrmVWpmrvr8Lnd9+uM6Rq8axC533aHpMvHz++2+n7ONp6OC3E8Gum0uT
rPgA0if7N2t/tQ5vyj3Z+MhyuZVaGWLnlPuh29uP9Pnq9nYCQbc9QuxEvu/C
5fPfMWUfT0Nnv+0M17qxd69SS1V4ToJjI987w6VvV+2VWrOL5ytvAxCbXXBx
sHTsc52vtN6eQOc9Quxh26zE5fM/MXEfT8MUv+0GZd0UnUqpmSJjVXOs1kHp
Z6IvKZzNxfnZsVj7WXS7Hzq8/di1v+w67Iq5HfaIta1bTLx8/jum7ONpmOK3
3eDiFcody+oelZ2KRoqMe3PPD9gcRNEqd2kLSpu0PbvefrjqBchvkX465IDd
9gjpc0pMvHz+g+n7eBo6+21nsLwC+e2zDXteKig6DMKfq3kh832rXyHrw76F
QMY6mec/sUsTTuzFW32jg25fYUpMvHz+O6bs42no7LedwfIK5LdVG9fbLUWH
cd0hSv/IHDtDWU9WDz+N5yNYqfsl9kK5B6b4xtVmc/Z3uGNX8sDp+3gaOvtt
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
       "], {{0, 
       224}, {224, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{224, 224},
     PlotRange->{{0, 224}, {0, 224}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
1fsxbtpgxTrZd8FqOGuPROSaihyJ1V5kPSfbiZyxjdRKyjpnNXlTM9VaffUs
iJYqzmayfuyk22oNV3yPy/KHrDYQX1eRY9x83qxzSZFnr9hHgdgIm+OxMUvB
/2edL0biYMV+DES31ee8Kt4Ru0cUueeJn0jfj811X/X8IznbyRYi39yzal41
nbOazPIbajmJgv6zvoMgOUYkviD3z9Ikmy9V8F+R51TwFsn3Kvq9bB6F5DCs
Zti/i6yh4jzj6T4393++8nvV57mQ9ajlmax/YHvU7DfNiK/IimWRd8T6gayc
LZLbs3kX8t6VdZ51rqrCb1TkJNV5DquNyHcQRP+Reuekf7X8PIt/NrdRsGt2
PVnf1xBfl9XDZ69hfxfxA1lrjthdtf+/GffZuiaLz+77P5FnYfd/In6S9TmR
WHbzW1tEwxHNs9wiumXPlb/CbA88i1uFnKTinqyfZ3ljzztkrb96H2YkP2fX
wO55uNkLrbZlxKexuVzWfZB1srkxcj27Hz6y5ojdVXwvQ95phbYj/GQ9+83n
VcNInZg185D1w9Vn+l5hNjaxdTHrD7vk8+xcpqy/W5GT3MxzIveP/G5Wrvgq
72L3EGZ9S2L7AxX5xiufxmo+UkOx9lhhX6z+I/YSeZbqXAvJParzXoV8T21f
XLWviNRZFb0d1hdNwgg/kbmUp/so6xyJua/8A5uTsDVaJM9BYlxFXM7KFdn8
KksbWT6K/ZYU+bsRnhV8GvLusmZfsPaIrI21EbavwtbdyDqRa6q/l1Xnt6w/
ZK/pzoMCZn1mxP9HavlX2nhlCwqxQ4GTm7MvqnOSiA1mfYvP+paR5R8q9B/5
XonEhdM/9ltSxDey50wV4nvEXiKxI2KP7H1O7yXLftnYymLk70Zsk7WLqXgz
D0jsiMR9pLeD6Hlb/1NhPqcaZn3jqxiKvK/INYi9RHK5yDURO430nVjeWBvM
mvXB+j0kp2Wf8ZX/rJg/zMYO1tbYdbJriHyLP3HLapJdQ/X3sqz8tjvexkPk
OxoSH5E6Met7YkcciVNTcVYuUR1DIzkJGxeQvROnNSN8sv8idor4Clb/WfsB
KnJ4ZD8be1aU9SE37YjN/SI9fPbcZVYfFcnBkG8NbOyL+I2s/QA3feykWG8e
vu6X2GvYb/eIvW/ItU7PfnPftTKO5BI3Y2jk23rkm0LEliveC/u7bG7MXs/m
YKzdsblKtc2enuWmHSF8IjVUJHYgejitOau/HeGt4rtGxC8p+NgNeBsPkZ4M
8j09UtdvyLW26Y31w2wucTOGRnIh9vsXki/djI9Z8T3ybZTlNutbJ3I96zNv
+vabdpSFI/OIkGvYPmSWlpA1RL5rsBqueK6Ij1XQ3s14t4GHLL9dXR9N7X9u
01tW3FSo0yM2xc4fi+zHqIgjET+AxMrIt+bquQERDSDavrkGhXN8rN4Q+0Lq
lJPtRK6JaClSf7E+gbXNV/Eo8iyT8AYeWL/N2kWE8y61ufVWFzere1nVNpW1
/5PtjWTFETb2IRpmr0diN7t39GbehWiyWrfs876yo5Nu2e9oEc2wuorETfab
IOsfIuuMXJ/lPzd8A93GA2tfbG6QtbZX+rfedHhANKDQN2b7dVm5EKuNihyP
jYmR/TaIL0JqWOX6JQsr5L2vbDASv5CYWHGWP+JbWL8aqSsrNON9aLN5YP12
ZP8Sy1vEFhS4td5yeVDuZWXF7pu9XDaOROJ1lgaQn0dmEXjfywx8ygnZ+MX6
HGQ9EbvIqh3YPTw3990h+byCxl5peCoPkdqtOu502e9nveXycNIDkjt16WUh
66nQANuPRdaTxTmbD0e+gbKxWEEzxnGds5o/aZKds/TqGxay/tPaXu27sz3O
5oHd53yz54n4hy45hvX2Gd7cy6qosyIxIvItsuLZs+b2ILF4876XjhipT9m6
j/2OrxaP2G9q7B6Y6l6Q7XEGD4i/Rfz8Tb2ddI5c3x1311uFn5zay2KfNyuH
jKwH4Tbrb1VoTOG9G9f5EPaaSd/dkFiP+MlIzI3EKe9DMw+s/Wbprct+P+vt
jp/c1svKmn+S1Z9BOETiGvu32N9FnjHrnsY6mOl3ou996ne30zojfU7v/7wf
ExXWqWDjWbNcTjpHfMgkn2C94bh7rRF5lupnz6qDIucXEBuPcDVJP5txlu0g
8ei7P9/gn6v3eyM4yw90x5t5iHwbZXW+bb+f9fYZJ917WeyzVD97Vh3Ergf5
u2zvOsKngjaM79gO+98Smvrd7RRbq/d7R3KDbTa7jYdIXEA42bzfz3qL+0bk
58o4sg/t5rN3tKlJe/mMc20HyVGRONX9u1vFs2fZ0bZ9aObhTpzK6nVU9EwU
sPX2dV1172VFarSse7K4i00hMXTSXr5tOKu/gXxfY/c8T/rudnO/NxvTFfi5
qfPNPGTpNou3qT0K6w1/7917WWz+g/jzimfvXgd5hsY8zNoOO78lovmO3wgq
7L36XFJHbrOwefhMtxHe2Fg8CW/W26ReFrKGyJ7nyN9FYneX3MwzNOZh1nZO
ekB0gvT3kDUofyOosHfkGSM8dOS2ApsHXLfI+SD2Gwry80nYevssvkzKlyLX
V9i7mt0hdQpSwyrXL8af2Q6bF7Gxpvs3AmV7n8qtedDHSJ9zai/UevssvnTp
ZSH5EssPcv8I7lIHeYbGbMzWGsh7ZGezs7/bEb+y9+7fX8zDDDxpv5/1Vhdf
uvey2NkRp2sqdNKlDvIMjZ04Umsg/oT1V901o2zv3bk1D/oYiR1d9vtZb2/j
i3IOz+Y87LfFiE661EHIOjfP0JiKs/SP2Bq7npP/UdZMF3u3PZqHVzwjvkXN
Xqy3+/FFuZeF9C2Redfs72bpRIHDCo0prMcY117WDGq2NkF+PkljCvau3I81
D/Pw1P1+1ltdfKm4j8I7jWi7InYocJilsYr83FgHR/QfOes6SWPe/6mj4c08
3OT5ZO+IXXf/Fm+9fYaVaw32nSK2gFyfFTsm1UGbZ2hsw5G6NXJNd40p27tC
P1YBm4f7fqP7fj/rrY6Tjn0GZJ3sf3OEvT/yu91tKiuvMNbHFd8XEJyV3yrY
iLK9d//+Yh408dT9ftbbHc0gP++Cs74VVsepLjxvm6GxDVd8X2C1wZ6176Ix
BXtX7seah74Y8Rvd9/tZb3Wa6dhnYJ+Lfcbq5+1iU5EcA7mPsT5mvy8gOon8
rY4a8/5PHQ1v5kENd6kfrbe69z6pl5XVP6l43u51kGdoGEds6uSfWX9+8u0K
nHSxd4V+rAI2D28579jjst7izx6JI2o6YTUcOXsbWVvHOsgzNIxZH1LhK6rn
9Fbwo2zvXb6/mId5eOp+P+vtMx4QDaj5z9OakTiI5JbVuZNyHYRwgvDZpX4x
jvuQip4kkstVz+mdZO/K/VjzMBsjtqlsv9ZbLg/de1nIe4zMfIj8XQR3qYM8
Q8P49H4rrs/yCQo+SsHeu/Rjb2pjMw8KfmPSfj/rDefhpIdJvazIPs9q/Xep
gzxDw/j07iJ9jGrNq9V0yvZuezQPN7k92UXH/X7WW65/7t7LYnMkJF5k6b9L
HYSsc/MMjc3YZ/rm2bvt0Ty84hnxCWr2Yr3V+edJvSx2P9jpmmr9K3MY0ZjC
eoxz9Yn4Rp/p07d3tVxdwV9t5uEmz933+1lvuf55Ui+LzZMRW2BjK4vVOIxo
LCuvMNbBPtOXi73/U8dfbebhJs8n20f8Rvdv8dZbPO4orAd5v8i7Pmmb/d2I
/ifVQZtnaEzFiCZ9pm+GvSvn6uZhBp663896q+OkSy+L9e1Zs7JZzUyqgxBt
dNGP8We25jN9M+xdLVc3DzPwtv1+1luuZpCfd/HtrP5P11dopqNNbZuhsRmz
tsP6lizbUc7x1OxdLVdX8GObeajQ9ob9ftZbrma697KQtUVmZVc8exebQvKQ
bTM0tmGf6etr7x1zdfOwB6vZqfV2/71P7WWpzcruXgd5hsYe7DN9s+1dOVc3
D7PxqT5VsxHrre7ZT36yey+L1Xa1LXSvgzxDYw9G+pY+0zfD3tVydfOwB3fZ
72e93eEB0YCa/4xo+9Ws7FOcUrM7pE5B8vaO9ctm7DN9d2zK+z976dw4V/9s
L0hh/dZbLg+Telmsbm/Oyj7hLnWQZ2jMxmwuh9QmyPXbzvR5/2cvnRvn4g37
/ay3r/Nw0kP3XlaXWdld6iDP0DBG9OkzfX3t3fZoHl75kEn7/ay3uH/u2Mti
4yP7jFlxs0sdhKxz8wwN4y/tpeL6yHoUtNTF3m2P5uEVz4h/ULMX663OP0/q
ZSnPyu7CYYRzhfUY12kV+XbAXh9Zj3KOp2bvarm6gr/azMNNnift97Pe4v55
Ui+LzasRnSD3j2A1DiOcV+QYxjrYZ/r62nvHXN089MVILEZiR/dv8dZbbqzp
gpVnZU+qgzbP0NiA2ZrCZ/p62btyrm4eZuBJ+/2st/uxRs1nsrGP7e1n9VFP
a+huU5F8XmH9xp/ZlM/0zbN3tVzdPMzA2/b7WW+5mkF+roCRvqXarOzuNrVt
hsY2jGjbZ/r62rtarq7gxzbzUKHtDfv9rLdczXTsZXWZlX3CXWyK7WV137dj
HLcdn+nTsfeOubp52IPV7NR604kpar0s9p2y/f/T9Vmxo3sd5BkaezBrO2x8
qdC/Wk2nbO/Kubp5mI1PfS01G7He7seUjr0s9rvhKY+N3B/53Y51kGdoGPtM
3zx7V8vVzcMe3HG/n/VWxwOiATX/GdF51vVZcUrN7pA6Balhu9QvxrgtsLVG
Vh/1tAblHE/N3tVydQVtb+bhlf7ZulVh/dZbLg9Te1lsb//Vt4AudZBnaOzB
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
PHW/n/WG83DSQ5deFvtOkWdHrs+KHV3qIM/QMGbfO6Klar+hVtMp27vt0Two
+JCO+/2st1z/3L2XxX43POWxkfsjv9uFQ8/QMEZsB9EAa2ssVsvxuti77dE8
vOL5ZL/I9d3xNr1t7mVl9Wqq45Qyh2q8Gb99pyfd+kyfvr2r5eoK2t7Mw02e
u+/3s95y/fPUXtap98L2aqqfRZnDCp6N9THSt/SZvl723jFXNw99MVJvIrGj
+7d46+0zrOa3s9avMCt7Uh20eYbGVOwzfW/5fBUfN9useajDU/f7WW91nHTs
ZbFrZuNjhIdJdVCkn6ywfuO4PpH+BnL91DN9XexdLVc3DzPw5v1+1ltcM8jP
1XCXWdndbWrbDI3NGPGHPtPXy97VcnUFP7aZhwptb9vvZ73FNdOxl8XGx1ez
spG1KdsUm59337djjPvSiuuztKpW+3j/p44f28yDGlazU+vt/nuf1MtSnpXd
vQ7yDI2dmP12wF5foU+Fmk7Z3pVzdfMwG7/yDwp4s96m9rKQ52LjRdbzdq+D
PEPD2Gf65tm7Wq5uHvbg7vv9rLdcHhANqPlP5LkivZrq51Wug5B8Hqlhu9Qv
xl/XAPK+fKZP397VcvVX2Dxo+pOpvVDr7UseJvWylGdln3CXOsgzNHZin+m7
Y0fV9t4xVzcP8/DU/X7WG87DSQ8de1lI31JtVnaXOsgzNHZiRJM+0zfD3m2P
5uGVP+m+3896y/XPHXtZrG+P1FkRzXSpg5B1bp6hsRn7TF+uHSm8U9ujeXjF
88l+keu74216m9TLYn07+7yn6ys0M6kO6r5+46/rM/KufaZPx97VcnUFf7WZ
h5s8T9rvZ73F/fOkXhb73fD0XJH7s1iNwwjnp38K6zTO1Sryrk/XbD7T5/2f
Ov5qMw83ef7uz7vv97Pe7mA1v33zWaqffVIdtHmGxgbsM32z7V05VzcPM/Ck
/X7W2x1Ouvey2GepfvZJdVCET4X1G3/2fn2mb569q+Xq5mEGnrTfz3q7rxnk
58pYeVZ2d5vaNkNjG/aZvjqsYO9quXoXnRvH7XHSfj/rLVcz3XtZ7Dpvzso+
4S42hdSw22ZoTMJsLsf2NE7XbzvT5/2fvXRufAer2an1dv+9d+9ldZmV3b0O
8gyNPRjRp8/09bV35VzdPMzGbCyehDfrbVIvi42Pr2Zld6+DPEPD+KSHiusj
61HzS8r2rparm4c9eNJ+P+stzgOiATX/iWhbbVb2KU6p2R1SpyA1rHL9YvyZ
HpB+RXV/o0uOp2bvarm6QozYzIOCD2Gv6Yitty95mNTLQvIllh/k/hHcpQ7y
DA1jn+nra+8dc3XzMA9P2u9nvX3Gw0kPk3pZyrOyu9RBnqFhzPYifKavl73b
Hs3DTW5PdtFlv5/1Vuefu/ey2JwH6f2ysRXRmzKHyDo3z9DYhn2mr86OFN6v
7dE8vOIZia1q9mK91fnnjr0spG+pNitbjcMKjSmsxziuScR/+kxfL3tXy9UV
/NVmHm7yPGm/n/UW98/de1nsO41ouyJ2KHCYpbGK/NxYB/tMXxx7/6eOv9rM
w02eTz4BiR3dv8Vbb/FYo7CeyDtl+72n67Nix6Q6aPMMjQ2YtR1WJxX6V6vp
lO1dOVc3DzPw1P1+1lsdJx17Wcg6X83KnlQHIdroqB9jPI5ENLDhTF8Xe1fL
1c3DDDx1v5/1dkczyM+7YLVZ2d1tatsMjc3YZ/rm2btarq6g7c08VGh76n4/
661OM5N6WWwv91Xvt4tNIfnDthkaUzHSt/SZvl723jFXNw97sJqdWm/33/uk
XpbyrOzudZBnaMzGPtP3ls9X8bGLbzcPM/Crno8C3qy3qb0sVsM3Z2V3r4M8
Q2M2ZvWJ+BDk+qln+rrYu1qubh724Kn7/ay3z3hANKDmP09rVp6VfVqPmt0h
nCB8dqlfjHENnHzCKe+K3B/5XeUcT83e1XJ1hXixmYdX+j9xPrUXar19yUP3
XhYbH1/NykbWplwHeYaG8en9Vlyf5RMUfJSCvXfM1c3DPDx1v5/1hvNw0sOk
XpbyrOwudZBnaBif3l2kj1GtebWaTtnebY/m4Sa3J7vouN/Pesv1z917WWyO
hMSLLP13qYOQdW6eobEZ+0zfPHu3Perw8L/OclGt
       "], {{0, 224}, {224, 0}}, {0.,
        1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{224, 224},
     PlotRange->{{0, 224}, {0, 224}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztmzGudUuSlRuQABMfhISYAdhUqcUEUOOAg1QIMFBLSI2BehBMgCE0HrPA
YQQYLbAxmAHdEsbD2EV871srd55zw3ilqKt99s6MjFixYkX+f+9f/rs/+jd/
9Q/+4A/+/d/8i//5o9/9hz/8kz/53Z/+07/+l//nX//uj//hP/jjv/YX5p//
3//+0v7b/+W//+Z//JO/8tt/9uf/6re/tP/WH/7z3/6df/GPf/t3//Tv/6On
Z56ef7Lpt8xvjf3W+qkPzd/pM43nG7HUWJvxQzv2Ur5txKSx2zGTiud2vhu/
GbxKfcvEv4nbBra3z8LsK/XOdiy9de4NrL7NDycxv4EP//nP/uw3/7//np7/
j//rf/7m3/6n//2b//rf/sb/885f/n3yfvr8ZJ10779cQ3v9T3578uHT+yd/
p/ZkDfR545On95iYbPhtsk4TezRnzb5oTE5+a+LcxAw9a4NjJt+N32icmHM3
eGvWloqTyW/peRmMomtLvdN8K7WXxrmnMLYRtyk/pOIhhUvUn0/fvaGXN3yb
Yukv3/N0Lm9pF3Rthi9N1tl+/qT+luKZ5lzoMyYf6ZppTJr+tx0zqfh/Sx9o
aHqpGDM8jWJdCrvobxtaUzsfjd9MzjbOqO2fSTyn4raN1Y0YM/FP8eGtXt7w
7Ybf2rWD9nEnay79rnk+pZVN4qHNRdtcheYj7Qsm35r0qpP+l8Z5Aw/bOd7Q
D42mR8/u6VttXxnemML2htZkegF6ptRvdL+mfzSYnPIPXVujj05hdSPGDBZN
9mjqVxt/2jbl0qnaYepsil8ZDmZ4YMqHJqdSfmhzGHPWT+9prPPpHKkPJ7+l
nNZoDqkcp7k5iQdTo2mtoT1RI5ZSvTbNtZSeSTW6drylOLmJ87YWTc/a9HE0
bt+qKZRjTHxl+jgTb22sbtjmfE3tmNRH409Tcw1fNc9TH1INJ4XDDQ2h0TfR
umDWaXySiqtU/UrFp8nNBq+gMfMUD6ZfMLFk+GHKz0bPpBrdhOeYeEvxtFQN
SnGYdj9odKGUH1LcoK0Pm7wwfU0Kq0/ak/NN1Q5TQ01s03U2ane7F5vkF43J
lG6QyotJbFBtyqyz4Z/G+1Ncot3nGl2X8jSqS5u+soE5bT9P/EZjjO6d1uW2
bma+m8LJtv6Tip82plFuYGpuo8ds9FPtOE/ZhvM3MM3U5cnfJ30TrWtUrzD9
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
yd/JjJ72qicxuYHhFFsmvnraL72/NKmb9J2m7txc600cmmdoLKXmeu37Iak6
a+J/gj805t/SrFL401gP7eUb8dDA5Nu0nbXXvs1O9fgpnDHzxwYmp/Y72Uvj
bgPVb6nmnOLkhrffVutvyGXKr1J+M/dDGvdwaOxNfEtz/y2tfoLtE/xJ4S3V
GRp9U4pPTnLH8PmUtnMDLq29No3tyfMNnEntxWByCldpf21m9JO9GO5q/J/q
/em87CfMp2hPYWo9tU/OF2ic0FnMJO8o92hoVobXTXgUxVvqk0bfZHr8lIbZ
4PM7i1/7m2yTFwZn2nOEBt+e4LPhURPMSemEVCehsWRqFj2Xk7X+NpvmWkNv
NOdu9jjhSFR7pzblySe1+tT8InV2JpdTPDB1J8GsM6Xt7Cx+7U+0G7NLOrd9
a47wVh866dOpnjnZl+nrJ+tPzZ4me5z47a1af9KmcdK4g9E498ke2xzGcM63
NGeD/5NnTD+SOmuav1SLpho47ZfNLL6tV6+99kk7Nbs0XO4kDqf4dqoPpT31
xOdmJm7eM4mriU8mPDw1978hBxucIZVrRvMxvMXc2zEchupmN2jOJ2uE0XUN
T6O1yXBX04PQ2kHP+qRevfbaDTulpxku99YcITW/Nn3opD7SGtrGZFrfaf0y
88HJHj+l1rfz3dzBeHrenDvdS4pLTHij0YTbmvNbMUN13ZQ2TvOdnvukJhrO
SXVmimk/Gd/Wvt+e4PaEZ5p7NW/NEVJ8m/Kihk2x1GDyBBupFtSY9afO5Ztm
VSbXUnFo6jXNO5PvlPOY9xjN+a2YoRovjZ+n85rohCk90Mx6KD80MUPj51vx
be3PslM1JaX5t+cIKb5NNZ+TZ9fwrZmTGgw3v6XvuaHW35b7Jq7oemiMUd1+
ku+U80y0Yrrmieb8ln5FNd5JbLRxfvKMiT2qz5i8oLMbqlevvXbbNjMyyjFo
P9vGDcO3qV508uwo/lDcNnxywmlT+G/q8m21/q3cN3WN5qa5E2jmuSZPU1zd
6ISUa6ViZvI8xZC37sNQPdDgnsmLxrzMnO/aa1M7NUOhOGz63xRuGL59Q143
ZqaNOjvhJKn6NeEShm+/VetvyH0aA+aeTIpD0rXR/iKlQZn8Ohl7lCsarKYY
m7pzRed6JjbMXlKaRkpbWHttY5sZisHDCaal5ggnsf1kXhs+nNKiDZcw+53g
fypHvlUTmGgyjX4txVVMX0zvpqY0KIMbt8WJ4WMp3djgs8HJ1L6oDxuzmFTO
rr12o562udOkphh+9Ra2N/I6NUNPaUrUDzQOJ9ib0mcm8XMDH2jkfqqXmfiT
9jspDtnQe2ksTWL+hro/iRNzdobvpTiY0V5MbFBMm/if4pLR8G/AsbU/yzb1
tMGdJjhgat9bPV0jr00NNfFg1j+pEQ0tq6G1pt55W+7T+mW4d6rfSfVBRu81
fJKu4WTdn8SJ6V9SuG04mNFe6PMmNkzPbupI+87D2j/TpvV0oi9R7mS4buPe
YArbT+b1pH6ZeDB7MTwkpWWltNanNadqwVu5f0MvltKWaR9keA7NX6MHpjSu
RpzQ/iWF26l3tmcZFIuMP1P9YOP5tdem9dTwEzPnnWD1W7h6Q17TGtrWLgwH
SGm5tEYb/kP129ty/4ZejN6xSdX69t0b2k/RnLohTiZ69c1cpT3LoFoNxdtU
/0g19hs0+bU/y6b1dBJXKX6S4qhtXDX4k8prOjOdYJfptWls0PhJzfQpNzD3
DE9qiYb7vTVfM1o37WXo7KDBN1JxfkOcTPY7+ftbe6TaC10n7bNMrTT4nKp9
b2nya3+WbXqrSV40+AnNNcrHJphj8CeV1yf1k1SvbXTFFJdrzD2NH27QB96a
r1H/m/yiPDaV7w396q06bmZY9Hzbe3xrlkFxY1IrU9g1ydNUv7/2z7QnWt9k
LmA0JcMtG3zAYLvBSZrXJ/WTlNY68TO9z2m4XIq3m9i4gVdQrvUWN0tx9bc0
HNOLmfU34qR9vif3RdeW4m+T/VIttN2PNzBw7Z9jm/6IcgPKb2kemXi+4Q5e
o182uErPJcXZGr+lvOWtuWfjXpmJvdu4WYq3pDi24WxGv2qszeBk43xPYu+k
NqVmGQYnJ1g00QRS/fgNHGbt77Ab/VRjFtzghw2N6y2cTOknKe5H72RSzGzX
jhu0mjavMHypzc1SGmBDP6SaVQOTG99tcJLJ+b7FpY2+kerNDZ+cvPPpedqP
34BLa3+HPdEBKDdoaEoNfpjqE9t2W6M2tYD29fSew2T9jdoxwd52n5LSmt7i
LYabndQAT3KeFCa/tR7KSRr9YGOPtJdszGUac39jT2Lghrnh2p9lG0yg3MDw
qEmcU0ye9ICTZ946u7ZG3f6tuceb4mafotXs/OvX1foJ1rV1ywYmn1zbJKeM
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
pTo5XdskrlJ+oBqm0fMNd01pyDfrXZO4mvC01Iy+zcEaeDLxySSe3+qv1/Y5
QjGc1oWT353kY3uuZ2wzE0zVhdRM/C0MNLU1lTu3zZqf4uRkPE9iqZG/hvtN
tEej8xst1PRTKW4zyS+jITeeb8Q2nb+YGT3lcu18N71GKk8p5txQ63+CnTrT
VK1vfJdqpClNtZ2/xs/0GaqZtPVqahvNzeyXYuzJWfPTd9v6v4klqhVPvku5
H+1ZKNdqzBdSmm0DE0zM3KZ30bhq18QbZhwpPGn0aDdwsJ9mG+yl7zTzEfNd
U+snmka7VzIzwbZN8YGeRdu3RoNK4eFkPSexva3/m/sVjV7G4FJKj0phcgrP
Ta/a4AyUO6Xy3cS2iatUTaTx1sbYBp6k+prVPM/YjfszpkbQWEp9l2oUDX24
kV/t9TQw8KRvaf9r4ofWEbM2g+1GPzyJXaZfmGiYb8XnW/0jxZO3OL/J5bf0
rlS9o3hC463R77fxpKGbrX3eNv0jxQ3Ts6e+S2uQ2Vcqf01tbeRdCgNPYgjV
Yyfx+fT3dgynsH2y5hv0f8PJjXb3Vo1r948pTtLm/Oa3KUxIxSqtd+04aWiS
bTxp6GY3cLCfZlO9xeBGo/6a75rZGd1Xe85IMcTk3VMMmBnHbRjS0P8bMWx4
Ziqu2hp1ip+0ZzGNXuwGvW7iQ4qBFDcaHKlhN+pdI05SfavJF4NFhnvfFjM/
zTb3Z1K1xtTfNscwz7fvtLTPxXDFFF69hSG0tzrJwZ7OguoDqbg6qf+3+ZKZ
xaTik2JyW6+bxMBEI6XxM+FRKcy5oebS3EnFSUOTnOSLwUwz47uhp1t7jj8T
HP7EOxV0L5PnDbabs3jrXCbaDsWrtzDE8Oq37hqlMJzGFa2DbY3a8CXqz4lv
G/HZxtXUrNNw/pRPTt4Dadip2Ju8f4LnRvM3fHiS10bnOdnTrT3HH4rhTzFw
2zlO1mkwlmJ7qqafPBeKb2/NUFJ3qFJcpeH/FIanasok127gSxQDJ75t6JYU
N05ynpMxP/HJWzOIlG3yehInk15+cr4pXmFib5JfVLu4IQbWnteRT8/3Rv01
/Zqpj+1zofhmaqvRP1P4n8LVCU62c7DBz42umzqvtkY0+e6E3578VpvzUA7c
qAUmzm/jGyavJ+cy0R8mfmv40PDtCf5TfLtNK1v71+HJzflOORKNVdPrGb+l
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
k3q+cQ+q0ROZtb0VJ2uv/a12e56b0lhS+pvBJeNPWh8b75lwA6PNpmbN5tzN
OlN6PtV8Uhy+MVNIvaehM6fyOjVHoPjQiL2Ufk75Ib1TZGqNuftBeX67Xqy9
9k+2UxoFxdjJ8yn9zeCS8afhPFTrSHHClMZCMd+ce0rbMXq+8TPNu9QsPuUH
qhWnftvO6xQnN5iZwpkGPzRz6jbnT/H8dr1Ye+2fZrc1CoPnRgegc9XJ3s0d
RVrrzX0kys+pTmI0lpT2kqpl5rdG85nscVLvUrP4FB9I3YWgMd/I6/Y8KIWf
xg8NfmiwulFrKC+lz5h6sfbaP81uaxT0u091M3XfbPJ3g3upetrWSI2GaTSW
yftT8y/K3yax8bSelIZp7tdNvktznPKByXmd7EFMXr+l0TVwhuJkSgNMzdBv
4/wUT9Zee+1fhzltrKMaoMEEM2Mys7CU/41GSrkf3VeqRzC1L1WnUlou5W+N
3076F9N70vUbTd70MqbnvUGjM/lo+gWa46YumHg+aad8tfbaP81uaBQU6yZ1
kOJ86m6P4cBPdZPW05RGaubjdHbciEN6vqZnMfNcumaj8zTemfKn+VZK26S9
m7mjaPaeyh3Ty6R43YTnT3Bjggnmbsnaa6993ja8hXIAo4+ZWTDlALQOUpw0
9ZRqm6lzaczWTRxS22hTbb2FcgDKH1LxbPyZyp1J/FAO1pgjnNToGnecDFc0
90+M/ykGrr322vfYNGcbusdTPTI6m3n+Lb5t/N/Wo0ztM3FoznGijU/mrRPO
Y9ZGz4WuP6Wd0lnDZA2Gp6V+a/px6ue3NDqjA5sakbLpHm+orWuvvfbvr4Om
bhrdY1K/jB5L64LBwPasbcJbUufSmK3TODSzTloTU9qL6Vmohp/S8Sa5Rtdp
NHN6b8f81sQb5a5vaXRGB6YYaHTsCa5OzvQkdq299tq/LpeNNmL4WEPDnGC7
qb+T9TdmbWaOT8/FrCcVh0/PGL33qSamtBeztsnztKeg9xWp9ks5JI1neu4T
7jRZA+X/JvfbGp2ZcUxihuaU2UvKtzuLX3vtd23DzRo10WiYhldQbtzQcFL1
5envJ3lyqqZQ/jzRhNvfMlp0Q6sx+tuEg9G4SvHw9ux+gnVPf5/k/kmNjs44
qG9pj2M0B+PbG2ru2mv/ZJvWC6qHpPCQ1kejbVK9hd5hM/em2lzuJE+m9c7w
Z+OHxrcMt6dxQvM0xcnp3xs83MzfJ30EzXfT+xh8MOufrCeVC1R/Npi/mufa
a5+3U/cezUxqgocUW8xs0ei97efbXG5SNxs8OVW/TE1J1V+z97YGntK76Jpp
r0dzgXJpilcp3DvJMycxkOqpJ2c9sSdxQv3Z7uvXXnvtX2dTPKTPP9Um2sM2
+uvUnMjMgBoaY2qmTDlYIyZT3CNVu0/q0u1vUb5N88hohqlcmOjVT88/rZni
nukBT2K+ed7MuCe+ovFj8GTttdfu2RQPab14+ntq3p3CkzaPNRpsioeYmXKb
J6fq12312uRgWwOfPE/jrdHrGU4+wSuq2Zr1pHrARryl+gWKOeYe6SRfbsaT
tdf+aXYK86lGSmuE0VgMDjf4Sco2tWai/0zOscGTJzXI8KKT9TqVg5Qj0fxK
+ZDmkYnzlFY/iefJvibroT1+gxel7kkavkcxpz27eQtP1l577Tl+pjCcYpGZ
+5v7q+36a2rHpDYZ7md0iRv0uhvqtdEM6QzCvN+c18l7pFS/oryxoa2l7gid
vOPR7oVNPKdmN6t5rr32uzbFdoPhVP9M8SL6d8Px2hysXZvo2bU1nLZe167X
NAfNd+n7G/rqJCZPzgJu0NYaGl0K800epXKc9ixGR6V1Z+21187aqbpAMTxV
c6kWYeZolOOl7gNM9pKqTZSfmJp7g17XrteTc5/waqMTmruOlOfT2E7V+rfu
KBqt1Wh0qT4u1SObHDdnNNlj+w7D2muvnbVpbaWcgWKFwUzDXSnPof049XOK
z1OOMal9lM9P1nZSr2vUazNXTd1/Nvf3aL/5li5NfdLW1tr6LcVhis+TPDK9
8OSOSooPp+7DrL322vfbKT2T1s2J7pHq92nP3sbVCR8wtdtwAFrfT+p1jXpN
NVLDCVOch/JMWuvbOEPnF+a7E75NY4/ecW3gcwqTU7WAvsf0C2uvvfbn2maG
2KibVA+Z4Bvt2Y1emsJweidhUhMn7zGzdaNlNWoNrWvG/ymNNJXL9LdtXZrm
WmMOS7lZKv7NGZkemcYk9T9dG43/ncWvvfZ326kZ4sl1mpm44bcUS1N3Ag13
mmhu5q5CQ6c1tYbWtcl7zF7MTLltpzTtFObQ+KR3FCfnMvmtyd8G7j09P3kn
jdWTd0t2Fr/22t9nTzDZzNAb6zT3Es28L8U5U3y+oZ+ktL5UjW73FyYmjc6T
mlc21t/2YUq3pDli7rqkepAG7k1628l/NFbbd0tO+nnttdc+YzfuFhqeMFkn
rdeGL1HsbXDOBp83nMectakdDT32pG/pWZs8TdkNH5r7BhOOlLpfkeoBU7q9
wduTv6XYmIqTncWvvfZn2SnNavL+xpobs/XUe1LzqRSfN3e0Jn9/q0abu5dt
336iztP24YTnTNYzyalJ7FGfTOKzEWOTczcxk4o3ymkpzp/UPdZee+2sTXkI
xaLJfMes2eyR4nljRp/CdsMlzLyMnnujRtN6dNK3Rje7Tedp+zDFbdqcnM4m
DOZQLDUadUrfNjOmCW4YLn1DzV177Z9sUx4yqY8Gb9vzF4N7jRk9rV+0BqVq
N70/Rs/RxAz9+1u+pWu4TeehPjn5/ElOTjFhgqWT/Zq7Kydtgy2mfpl7rTfU
4rXX/sm26SXpzMvkfkqve2tGb75leA6t3bSepuJnEjMT7trWTCa+bazhpM6T
0usazxuORDlP6u6BwTp6Ridtqgmk4jOFSzf4cO21f5r9VLsnvaSpj+bfF0y+
a/5dhtHint4z+c/MyCZ83mCy+S2NH7p+o0s3fGvq9SQ2btB5qD6Zen6SL6kz
apz15CxOnmPKbui9qVrwdBY3+G3ttX+anbq3T+upwYr2fb/GjH6y38bMi861
jX578m4wPWvz71wMr6Z8lc5w39J5zG+N/mnyOsXlUmdNe+SbeZTpJWmM0Vpw
g3/WXnttj/MUc8zdUbM2yhkoN6A+bNeLBr+a1Fy6NnPPMxUDhhuYmDS9WKoH
uYGfUP3z5P1h2peZvi+Ft2/ZE9xOabaNvFh77bXftY0m1r7rSNdg6rv5twlP
Pryh7pu907o/+S7V1eka6Kx/wg3o3o0O/JYm2bDNfRXKH8zM12CX6cFTWHcb
npjcobWJxuFtHH7ttX+abXrw1JzLcDZ698/snc76KYdp21R7Sa2f8v9UHaTr
T+lO5l7KDZjwVkxSTJj0FKk7Qifxiv72LWyheoWZlaT2a/y/9tpr92w6E59g
MsVPqlekMIpy7Mnfb5idUY6dWr+5l2U058kZGS5huAqNk2+1KT6Y++f0LExP
avBqsv4Gx3sLTyjfM/Mp4/+11167Z7fx2dSdCRaZGfqEh9C/33wfnuKtWb+p
R1Rzntw3o3XNrDmlud2ADyft1H1Ik1N07tPQ1d/ieG08oc/T3m3Sp9ygCay9
9k+22/hM339SX6X7mvAiinsntS+qy1H/mBgw9z1o/TX3geka6Lco9/4JdruH
fcqRSV4bvGpg18Rvb+EJfZ727ylOvvdh1l77Tptiqak1DX2V1oiUdkd1sFQP
Tv+tx0Q/nPjWxNKkFpy8D0zX0Oh9bsj9t3CG5gLtNUxfSftNGnsUH1I9ZgpP
JnFOc2fy28Z3b8iLtdf+afYEn02eGg0qpa01OIPRwdraF51Hp/C5we2f9mV6
ATrLM/xh0tP9hJngJM5pvtMYoPp5e8aRwiXqQ4MnlBvTvtLcu6bf/Wk5uPba
N9up+zPtu5ETbY3WxAmOmdrRvg9P54a0FlB8buiBphcwfZBZD+W6OxP8/fk+
8X9Dw0zNOOhcoK15TvZi6gjFPTMja/z2hvhfe+1vtU3PaLiZwfbUDMWsrTGn
Nudo6i/1z2SObzSKdi8wiWfDH1Ix9pPt1P1Aw0NSM44UNp7UPE0dedrvBCuo
P1M4sDm49trnsT2F1QYPqc5G64LhD5RjmNqa4q5mrv3kn0k9pbXAzDonZ0Q5
A90vvSeQiv+fYNMYuGE+bu4VU9y44Ywm+zLxnOpPzRz/Bj+vvfa32intqLGG
1L3KhnZqsMvMp2gtS9XcCZ43tHEabw0NhHKJlG5zG99o25RLmLuFqfn4JK/b
d29urh2Gezd07E/Ultde+5ts0zO212DwoTFTo3WH+nCioU0w/+m3E25sOCSt
synNORXPdA5I90h1m2/iJxO7cceP8iXKqQw3m+T4zfYk14wPDe6l4vAGP6+9
9jfZjXtQ7TVQfEjdEWrMwWkNMvdvjU8aNf3meDa8wvjzW/mJsVPxNuH5VEc1
2mkql2+uHRS7Ur76aTmy9tqfbjdqbmoNhvtN/qMa5gSTTX0xdw6N/mn02Ent
OFkXTHxSXmH8aer1zfzE2CZ/af814ZymZ0nNi284F+rPyfPmftTEt9+aI2uv
/em2mclOnjdrMJxhgnWGs1FcTdUayl3pOidnZGp6uy6k4pP6p3GONK5uwBNj
m/yd9GuTXsDcCW/cAb5Z06PreeoXUtz+W/Ni7bW/yU5pfe27fCl+0vjWZGZk
1kl1M8ohJ/rkRBdqrLMdz0/PU/8YvZf2Pm/dx77BbnC5CaY98dKUpm3e+Zam
Z+4nNPrun5wXa6/9TbbRP29Y/0nb3I2ktW9SQyccks4c6VzSrLMdz9TndA5o
/JPS7W/gJyft1B0Po8uZM6VxcoOmZ7TiyR5TGvVPzou11/4U+6TG+On2BBsn
z09qX0qroZhsOCddZ6MuUM3W1DKj55heY/LOG/KlbZu7fymeSc80dV4ne3+j
zaZ047f8vPbaa6/9lj3hhE+4SrkcvcNmamhKx5vo5Kn7HhOb8urG3QAzrzfc
4CfMJgyHMbqcwYrJGU3Oi86g27hH5wLmToK5G/MT8mLttdf+Ptv82wejSZr1
0JqVupdF+UCqLqRmdqm7ASZmKDd4+u7k+U+xKReiuneKk6TyPTW7b+OeeT6V
pw0/r7322mu/ZVPtLjWfpb1/qmaZe1mGM0x+m3p/+y6liZmn95i4vSGPUrY5
L3OP1/i8zX/a8WN4PsW0k7h6Qzyvvfbaaz9hVBvTGpzW1HG6HsP3UudFuVzj
LqWJGVrfJ2toz2RP2vTs2nOH9jlSn9A7PyaGU7418xSDq2uvvfban2IbPcTY
Riek9zANv5rUR/pvECY2vT9Ja5+5M2b4fHt2eUNO0Xg2/UVq7jDxeaNPpJjQ
6E8b32rceVh77bXX/nT7E/HQ3Msye5/UffrvrSY1i3Iteg/wyW9P7zR3Eujz
dHb5TbFt+PzE/xN9z2jpDd5FZ+WT/nTyn/lW6s7D2muvvfan2584u5xogOaO
lvm3rm0tKKUNTrjrDTXU6Lf0fG+wU3ze8EM6azbn2FhnSktv38P8RH1+7bXX
Xjtlf8rskmqM5t+HUk3V7GXCN+hMn/LGyTpP1lC639S/Bb4htg1PTu2L+q1x
76Wx30m+pHqT1L/hWnvttdf+JvvTZ5cTLYXeo5vUEcr3GuunGibdy2TNNK6o
nxv9xdO3boht0wNO5sUUE6imau4em3XS/bZnEybmP0WfX3vttddOYd2kFtyA
jRMtZWIb3kXvWzbWb2r6ZC8Tjk3vP9CzTvUX5q7jyXh+Wtskfia/Td0nmXyL
4gZ9hu6Xapsne5NPmT2tvfbaa6ewjt7vukEfaN/pov92IOXz1Bx/8nezNsMJ
J3tp8HMaVyfjmfaAKS2R8snGfY/UOZo+i+ZFqjf59NnT2muvvTbFusa/nz2J
jXQ9jb1Pau5begut1w19ktbQRr9j/HlS76I8x2iJk7xocDkTY/SuL82LiU9S
vcmnz57WXnvttSnWUT45+fvJ2WVDYzF7n9gpbXayBjofN7xuwl3Nv1dK9Tsp
XtfQu+gcOaVLp/TGkxqd0dgnuEFzNtUbfsrsae211167geG0vjzV6wYe0rpP
NUaz9yd7os+k9Baj5dL7BifvB9L+YqKPUV6Xim3K+Y2+R2OAnsWEy6V4O40B
cy7U53SPjfnLbf9ubu211157guGT56luYL57g232Pvn3O4a/UX827nw+/fbp
u6n7gRM/U95IzyUV25Me0HBgqkubOYJ5fhK35l6BOYuUVvxNs6e11157bYPh
jX9Par57g53aO63FKd/S/U74yeS7E95itNyUn81vG9oXPS+qkZoZfSPHU/cl
aK9B71WmtOLJvj5l9rT22muvbWqWue+Xul/3idho9N7GHYCUpmR4Gj1Tqh+a
2fTTfif3HCZrNvzN8NUGX0rFoeG9k9l3Ki9oTzGJpTaG/LTZ09prr/25Nq1T
9O4TvV/XmF22baPtpO6kpeanT/YkBiaxZOqm0RWNvte4e5maoafuOafuBBp9
dRJ71D80L4zG2NDGd/a09tprf5Od4kgT7KL3o9pz5IZtdOMJr5uco+FRqZnj
hJOYmk5r/aT+mtxJxQD1SSNuzZ1AwzOp5ty4L0H7C9pr0Bje2dPaa6/9rbaZ
Qxku2vjuWz40unHj3wWkuI3pBYwe/vTblK54Q35N+ovULHUSt5Qvmbhq6NLm
vsSTbe5kGm08dffgp82e1l577fttM4cyfKlx5y01K6R2Sjee+IFqHROuYmr0
SQ188v6b+5HG3JlyJBqTkzihcUjXNnk+pWea852c0dMzZj6ys6e11177U2wz
n6V3z8wsj+Kz0QmNbfRbU3MbmhXlIan7GCndm+qKN+TX02/bmuck1+h+6Vze
rDmlZxpuPLmjMjm7Ru78tNnT2muv/Vm2uStl3t/gReb9jdo3mXnR7zY0KzrL
Ts1GTd2kcXKyH5nEofHt5D00hlN7bOdd4w6tudNi+k26r4Zu8Omzp7XXXvuz
7ElvPuEkZp6b4kV0L+3aR/Hf8If2e1Kcp8FXJ3FCOUA7v2iMGZ9P3m/mpwYf
UjbVuie6Pd3vxLc0HlL3B37C7Gnttde+3zZ6y2R2YzCQ1pfUfDNV+xp7n9RB
s/7JHDD1/hRfNc+359eNuXODM1Nu/7R+mpuNmTuNgcbdEtM3PXFUGkuTft/E
1W2zp7XXXvs77NQckGIg1Qfe4pmTPab2Pjkjo1mZe2v0/bRmGa075ZMb8rGh
4dNe46RGl4pb8+9uDM5Mfjt5vtHXt+/kUDy8Ib/WXnvt+20zBzTz1sZ6Gn4w
e2zMwiZ7afif1taJvmT+ncUnai9Up6L62KTXmPw2pdFR/5g8orMb0y+b+Xuq
r09h482zp7XXXvvn2Kn7Uak6dQPHODnHp3WKnkuKJ0xqq5lpGp3nhjxK+ZPG
CeXt7bs3k9yheNLoTVK8l+InXU873pZnrr322m/VvkkPbrBxguffNN+he5k8
09BpUzpbu4bSmewNMUD9meJsbZ4/wYfJ3ht3NZ9+S31I/Tl5P9WcUz0jvdsw
+fvav9/+P2CwJP4=
       "], {{0, 224}, {224, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{224, 224},
     PlotRange->{{0, 224}, {0, 224}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1j1KxFAQAODggljpCSw8ggqWBgsvsDa2EbRaEFZFPIiNlxA8h4fwDJZW
7oKFIgtZ3ps4wa/I8m14mQwz7yd7F9fTq42maW62Fj/T7v5kPu8ezjaXfy67
2eHBbLLg29e19Mdkv915PWpvH3fb0/Pt9vn96fjlrvvh72NWedX4Pvf7vHfI
OOvGH7JWJff75FNSz1q17ZNzrfgl+ZeMiYiZYc7U6l3JGh/LWojoxbr1r9Xr
iBwi+hsdP3pdR7vWXj3k+V5rL4rYH6LPlAz75JB9LInzH5ytVtnyGXvOtb43
omP+Vf0zP5t5Xg05l7LlnKG/mdd1hp7KbVxnSoZ3MTMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzM/NvfwIek84y
       "], {{0, 224}, {224, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{224, 224},
     PlotRange->{{0, 224}, {0, 224}}], "\[Rule]", "1"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2LEKdVlShuFBQQy9BRNzNXbES1BDoxEUA0HQQLwI78jE3MxITIyMvAgV
DEwaemadVfWs028wQ8/w//vsXVVf1UP/9p//zZ/85a/97Gc/+7vf/J//+pNf
/P0f/e3f/uIf/vQ3/vd//MUv/vr3f++vf/1//vE//u8///vP//Lbv/Pz//r3
3/3DP/6tf/yDf/vPf/35P/3nn/3hz//5r37+Q//8Q3/+////v+yf+TH//GPe
55f9lh/zXb/s3z359pM6367Dp+Zksnefqu0v+z6fmpNP9eXGzHzq797O1O2/
e3uet/bh7dm7sZ9v75CtjNyYhxt/91O3Y/LufMont/fwjT3wqVzf2PM3nLll
0dv3aOvbb+Tl9nOE3m0988bzJ393cofIFhX2yWSv5f2sPV/oo/AOk7On+UTI
wtZ+u/2eWq8Fz2TR3bzIdRB2exZ9a340P2TRX+35Qh+Fd5icPc0nQhZki35T
rwXPZNHdvMh1EHZ7Fn1rfjQ/ZNHzW5lFZ2ZP84mQhSyaRSe/XbihW3mR6yDs
9iz61vxofsii57cyi87MnuYTIQuCRbfsmkWzaBZ1dnsWfWt+ND9k0fNbmUVn
Zk/ziZAFYb9lUXPfCjdCeDehdy/uIuF3s6izTyZ7Le9n7flCH4V3mJw9zSdC
FoT9lkXNfSvcCOHdhN69uIuE382izj6Z7LW8n7XnC30U3mFy9jSfCFkQviWL
mvtWuBHCuwm9e3EXCb+bRZ19MtlreT9rzxf6KLzD5OxpPhGycLt3WXS+v8Ld
lG/oVl7kOgi7PYu+NT+aH7Lo+a3MojOzp/lEyEIWzaKT3y7c0K28yHUQdnsW
fWt+ND9k0fNbmUVnZk/ziZCFLJpFJ79duKFbeZHrIOz2LPrW/Gh+yKLntzKL
zsye5hMhC1k0i05+u3BDt/Ii10HY7Vn0rfnR/JBFz29lFp2ZPc0nQhayaBad
/Hbhhm7lRa6DsNuz6Fvzo/khi57fyiw6M3uaT4QsZNEsOvntwg3dyotcB2G3
Z9G35kfzQxY9v5VZdGb2NJ8IWbjdxyw631/hbso39FN5+aY6CLs9i741P5of
suj5rcyiM7On+UTIQhbNopPfLtzQT+Xlm+og7PYs+tb8aH7Ioue3MovOzJ7m
E+HeZdEsOvntwg09mYFvsoS227PoW/Oj+SGLzhsgi57XfGuWhCxM9jGL7vZ3
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
o/khi/5qzxf6KLzD5OxpPhGy8LpF/xuA96AP
       "], {{0, 224}, {224, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{224, 224},
     PlotRange->{{0, 224}, {0, 224}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
       "], {{0, 224}, {224, 
       0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{224, 224},
     PlotRange->{{0, 224}, {0, 224}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt10HKXol1hOEmhhDvwNNsIZ534y3YeAGdOB41BOxByCjgddiL8gIM3kVG
gbjBg0wa+kf6vvu8RzWQKP1It+rUqVv36J//9T9++dt/+Oqrr37/T3/77Zff
/ucvfve7b//rV//4/R/+/dvvfv4v3/3kb/Cvf//1Pf7zT//w9V/+9LNv/ucP
f/z6V//2+2/+98+//vpnv/nvb/7/z38M/qF/+9Gf/5jn/xCWNX90lo/O+NG/
8ym8r+D6lOd/yi4+qv+jGfuU53+ubL/C549m+xU7+lyzf6739NX/9p35/Fyz
aN34VC+94j16RU++sxtf8f19Ra4+Fxa+R6/ollfP/s5sP9V7r9Cs9eEruv3V
3w7h5nz1XaQ9/9X99s6bc/fne7r3c+36Fd2o9dKr742n8iBoe/V38NVZerXn
Qjdeujnf+Y0T8v9qDz/FW2F3r/bq1Xl+6vnv7Ml33py7P9/TvZ+y61fzCr30
6nvjKT2CNvnmfOp7JHfjpZvz1d84Lf9PvWvvnEu7Oa8+/9U3p/BN3P35nu59
Z4bf2VHyjSfoeUpb5eZ8teZiN166OV+tU8v/U++atrunvndXny/c1U/9//QV
HfuUtqe692o3at8+Tc87tRVvznfms9KNl27OLy3/V3nlm/MpH4R3pM77VMc+
pW0dZd5UV/W8WpuQ50o+K9146eb80vIvePvO3X10v5d8eOoducT7VMc+pW0d
5dx72jdO/v7K39xKPivd+Gos7Pdq/i91+495vpa3q/fnU++mtrvdn36G38mr
ffs0PZ9Lm6C/ns9iN9Zvzi8t/0K3aLu76kPx+Rqv0LHv1FbxucKrdZGm51O0
afrr+ax046Wb80vLv9B7wu6u+l9/vsb7VMc+pa3ic4VX6yJNz0e1yfrr+ax0
46Wb80vL/6VuL+6lfh9ezY/WsU9pq/hc4RX8lPX8GG2Vbi/u7ku4P4XdLf/3
ul2YS9NZf77G+1THPqWt4nOFV/BT1vND2i59c+XdXb0/hX0t/07/XL2LNJ31
52u8T3XsU9oqPld4BT9lPT+kTdYp+KM9U7g/hR0t/2b/XL2LNJ3152u8T3Xs
U9oqPld4BT9lPRVtApbz+dT9KexF24WML3W7MJems/58jfepjn1KW8XnCq/g
p6ynok3Acj53fzq7kPGlbhfm0nTWn6/xPtWxT2mr+FzhFfyU9VS0CVjOp9yN
FbwZu7yV3dV9uJqfesfu/jR5BT9lPRVtApbzKXdjBW/GLm9ld3Ufruan3rG7
P01ewU9ZT0WbgOV8yt1YwZuxy1vZXd2Hq/mpd+zuT5NX8FPWU9EmYDmfcjdW
8Gbs8lZ2V/fhan7qHbv70+QV/JT1VLQJWM6n3I0VvBm7vJXd1X24mp96x+7+
NHkFP2U9FW0ClvMpd2MFb8Yub2V3dR+u5qfesbs/TV7BT1lPRZuA5XzK3VjB
m7HLW9ld3Yer+al37O5Pk1fwU9ZT0SZgOZ9yN1bwZuzyVnZX9+Fqfuodu/vT
5BX8lPVUtAlYzqfcjRW8Gbu8ld3Vfbian3rH7v40eQU/ZT0VbQKW8yl3YwVv
xi5vZXd1H67mp96xuz9NXsFPWU9Fm4DlfMrdWMGbsctb2V3dh6v5qXfs7k+T
V/BT1lPRJmA5n3I3VvBm7PJWdlf34Wp+6h27+9PkFfyU9VS0CVjOp9yNFbwZ
u7yV3dV9uJqfesfu/jR5BT9lPRVtApbzKXdjBW/GLm9ld3Ufruan3rG7P01e
wU9ZT0WbgOV8yt1YwZuxy1vZXd2Hq/mpd+zuT5NX8FPWU9EmYDmfcjdW8Gbs
8lZ2V/fhan7qHbv70+QV/JT1VLQJWM6n3I0VvBm7vJXd1X24mp96x+7+NHkF
P2U9FW0ClvMpd2MFb8Yub2V3dR+u5qfesbs/TV7BT1lPRZuA5XzK3VjBm7HL
W9ld3Yer+al37O5Pk1fwU9ZT0SZgOZ9yN1bwZuzyVnZX9+Fqfuodu/vT5BX8
lPVUtAlYzqfcjRW8Gbu8ld3Vfbian3rH7v40eQU/ZT0VbQKW8yl3YwVvxi5v
ZXd1H67mp96xuz9NXsFPWU9Fm4DlfMrdWMGbsctb2V3dh6v5qXfs7k+TV/BT
1lPRJmA5n3I3VvBm7PJWdlf34Wp+6h27+9PkFfyU9VS0CVjOp9yNFbwZu7yV
3dV9uJqfesfu/jR5BT9lPRVtApbzKXdjBW/GLm9ld3Ufruan3rG7P01ewU9Z
T0WbgOV8yt1YwZuxy1vZXd2Hq/mpd+zuT5NX8FPWU9EmYDmfcjdW8Gbs8lZ2
V/fhan7qHbv70+QV/JT1VLQJWM6n3I0VvBm7vJXd1X24mp96x+7+NHkFP2U9
FW0ClvMpd2MFb8Yub2V3dR+u5qfesbs/TV7BT1lPRZuA5XzK3VjBm7HLW9ld
3Yer+al37O5Pk1fwU9ZT0SZgOZ9yN1bwZuzyVnZX9+Fqfuodu/vT5BX8lPVU
tAlYzqfcjRW8Gbu8ld3Vfbian3rH7v40eQU/ZT0VbQKW8yl3YwVvxi5vZXd1
H67mp96xuz9NXsFPWU9Fm4DlfMrdWMGbsctb2V3dh6v5qXfs7k+TV/BT1lPR
JmA5n3I3VvBm7PJWdlf34Wp+6h27+9PkFfyU9VS0CVjOp9yNFbwZu7yV3dV9
uJqfesfu/jR5BT9lPRVtApbzKXdjBW/GLm9ld3Ufruan3rG7P01ewU9ZT0Wb
gOV8yt1YwZuxy1vZXd2Hq/mpd+zuT5NX8FPWU9EmYDmfcjdW8Gbs8lZ2V/fh
an7qHbv70+QV/JT1VLQJWM6n3I0VvBm7vJXd1X24mp96x+7+NHkFP2U9FW0C
lvMpd2MFb8Yub2V3dR+u5qfesbs/TV7BT1lPRZuA5XzK3VjBm7HLW9ld3Yer
+al37O5Pk1fwU9ZT0SZgOZ9yN1bwZuzyVnZX9+Fqfuodu/vT5BX8lPVUtAlY
zqfcjRW8Gbu8ld3Vfbian3rH7v40eQU/ZT0VbQKW8yl3YwVvxi5vZXd1H67m
p96xuz9NXsFPWU9Fm4DlfMrdWMGbsctb2V3dh6v5qXfs7k+TV/BT1lPRJmA5
n3I3VvBm7PJWdlf34Wp+6h27+9PkFfyU9VS0CVjOp9yNFbwZu7yV3dV9uJqf
esfu/jR5BT9lPRVtApbzKXdjBW/GLm9ld3Ufruan3rG7P01ewU9ZT0WbgOV8
yt1YwZuxy1vZXd2Hq/mpd+zuT5NX8FPWU9EmYDmfcjdW8Gbs8lZ2V/fhan7q
Hbv70+QV/JT1VLQJWM6n3I0VvBm7vJXd1X24mp96x+7+NHkFP2U9FW0ClvMp
d2MFb8Yub2V3dR+u5qfesbs/TV7BT1lPRZuA5XzK3VjBm7HLW9ld3Yer+al3
7O5Pk1fwU9ZT0SZgOZ9yN1bwZuzyVnZX9+Fqfuodu/vT5BX8lPVUtAlYzqfc
jRW8Gbu8ld3Vfbian3rH7v40eQU/ZT0VbQKW8yl3YwVvxi5vZXd1H67mp96x
uz9NXsFPWU9Fm4DlfMrdWMGbsctb2V3dh6v5qXfs7k+TV/BT1lPRJmA5n3I3
VvBm7PJWdlf34Wp+6h27+9PkFfyU9VS0CVjOp9yNFbwZu7yV3dV9uJqfesfu
/jR5BT9lPRVtApbzKXdjBW/GLm9ld3Ufruan3rG7P01ewU9ZT0WbgOV8yt1Y
wZuxy1vZXd2Hq/mpd+zuT5NX8FPWU9EmYDmfcjdW8Gbs8lZ2V/fhan7qHbv7
0+QV/JT1VLQJWM6n3I0VvBm7vJXd1X24mp96x+7+NHkFP2U9FW0ClvMpd2MF
b8Yub2V3dR+u5qfesbs/TV7BT1lPRZuA5XzK3VjBm7HLW9ld3Yer+al37O5P
k1fwU9ZT0SZgOZ9yN1bwZuzyVnZX9+Fqfuodu/vT5BX8lPVUtAlYzqfcjRW8
Gbu8ld3Vfbian3rH7v40eQU/ZT0VbQKW8yl3YwVvxi5vZXd1H67mp96xuz9N
XsFPWU9Fm4DlfMrdWMGbsctb2V3dh6v5qXfs7k+TV/BT1lPRJmA5n3I3VvBm
7PJWdlf34Wp+6h27+9PkFfyU9VS0CVjOp9yNFbwZu7yV3dV9uJqfesfu/jR5
BT9lPRVtApbzKXdjBW/GLm9ld3Ufruan3rG7P01ewU9ZT0WbgOV8yt1YwZux
y1vZXd2Hq/mpd+zuT5NX8FPWU9EmYDmfcjdW8Gbs8lZ2V/fhan7qHbv70+QV
/JT1VLQJWM6n3I0VvBm7vJXd1X24mp96x+7+NHkFP2U9FW0ClvMpd2MFb8Yu
b2V3dR+u5qfesbs/TV7BT1lPRZuA5XzK3VjBm7HLW9ld3Yer+al37O5Pk1fw
U9ZT0SZgOZ9yN1bwZuzyVnZX9+Fqfuodu/vT5BX8lPVUtAlYzqfcjRW8Gbu8
ld3Vfbian3rH7v40eQU/ZT0VbQKW8yl3YwVvxi5vZXd1H67mp96xuz9NXsFP
WU9Fm4DlfMrdWMGbsctb2V3dh6v5qXfs7k+TV/BT1lPRJmA5n3I3VvBm7PJW
dlf34Wp+6h27+9PkFfyU9VS0CVjOp9yNFbwZu7yV3dV9uJqfesfu/jR5BT9l
PRVtApbzKXdjBW/GLm9ld3Ufruan3rG7P01ewU9ZT0WbgOV8yt1YwZuxy1vZ
Xd2Hq/mpd+zuT5NX8FPWU9EmYDmfcjdW8Gbs8lZ2V/fhan7qHbv70+QV/JT1
VLQJWM6n3I0VvBm7vJXd1X24mp96x+7+NHkFP2U9FW0ClvMpd2MFb8Yub2V3
dR+u5qfesbs/TV7BT1lPRZuA5XzK3VjBm7HLW9ld3Yer+al37O5Pk1fwU9ZT
0SZgOZ9yN1bwZuzyVnZX9+Fqfuodu/vT5BX8lPVUtAlYzqfcjRW8Gbu8ld3V
fbian3rH7v40eQU/ZT0VbQKW8yl3YwVvxi5vZXd1H67mp96xuz9NXsFPWU9F
m4DlfMrdWMGbsctb2V3dh6v5qXfs7k+TV/BT1lPRJmA5n3I3VvBm7PJWdlf3
4Wp+6h27+9PkFfyU9VS0CVjOp9yNFbwZu7yV3dV9uJqfesfu/jR5BT9lPRVt
ApbzKXdjBW/GLm9ld3Ufruan3rG7P01ewU9ZT0WbgOV8yt1YwZuxy1vZXd2H
q/mpd+zuT5NX8FPWU9EmYDmfcjdW8Gbs8lZ2V/fhan7qHbv70+QV/JT1VLQJ
WM6n3I0VvBm7vJXd1X24mp96x+7+NHkFP2U9FW0ClvMpd2MFb8Yub2V3dR+u
5qfesbs/TV7BT1lPRZuA5XzK3VjBm7HLW9ld3Yer+al37O5Pk1fwU9ZT0SZg
OZ9yN1bwZuzyVnZX9+Fqfuodu/vT5BX8lPVUtAlYzqfcjRW8Gbu8ld3Vfbia
n3rH7v40eQU/ZT0VbQKW8yl3YwVvxi5vZXd1H67mp96xuz9NXsFPWU9Fm4Dl
fMrdWMGbsctb2V3dh6v5qXfs7k+TV/BT1lPRJmA5n3I3VvBm7PJWdlf34Wp+
6h27+9PkFfyU9VS0CVjOp9yNFbwZu7yV3dV9uJqfesfu/jR5BT9lPRVtApbz
KXdjBW/GLm9ld3Ufruan3rG7P01ewU9ZT0WbgOV8yt1YwZuxy1vZXd2Hq/mp
d+zuT5NX8FPWU9EmYDmfcjdW8Gbs8lZ2V/fhan7qHbv70+QV/JT1VLQJWM6n
3I0VvBm7vJXd1X24mp96x+7+NHkFP2U9FW0ClvMpd2MFb8Yub2V3dR+u5qfe
sbs/TV7BT1lPRZuA5XzK3VjBm7HLW9ld3Yer+al37O5Pk1fwU9ZT0SZgOZ9y
N1bwZuzyVnZX9+Fqfuodu/vT5BX8lPVUtAlYzqfcjRW8Gbu8ld3Vfbian3rH
7v40eQU/ZT0VbQKW8yl3YwVvxi5vZXd1H67mp96xuz9NXsFPWU9Fm4DlfMrd
WMGbsctb2V3dh6v5qXfs7k+TV/BT1lPRJmA5n3I3VvBm7PJWdlf34Wp+6h27
+9PkFfyU9VS0CVjOp9yNFbwZu7yV3dV9uJqfesfu/jR5BT9lPRVtApbzKXdj
BW/GLm9ld3Ufruan3rG7P01ewU9ZT0WbgOV8yt1YwZuxy1vZXd2Hq/mpd+zu
T5NX8FPWU9EmYDmfcjdW8Gbs8lZ2V/fhan7qHbv70+QV/JT1VLQJWM6n3I0V
vBm7vJXd1X24mp96x+7+NHkFP2U9FW0ClvMpd2MFb8Yub2V3dR+u5qfesbs/
TV7BT1lPRZuA5XzK3VjBm7HLW9ld3Yer+al37O5Pk1fwU9ZT0SZgOZ9yN1bw
ZuzyVnZX9+Fqfuodu/vT5BX8lPVUtAlYzqfcjRW8Gbu8ld3Vfbian3rH7v40
eQU/ZT0VbQKW8yl3YwVvxi5vZXd1H67mp96xuz9NXsFPWU9Fm4DlfMrdWMGb
sctb2V3dh6v5qXfs7k+TV/BT1lPRJmA5n3I3VvBm7PJWdlf34Wp+6h27+9Pk
FfyU9VS0CVjOp9yNFbwZu7yV3dV9uJqfesfu/jR5BT9lPRVtApbzKXdjBW/G
Lm9ld3Ufruan3rG7P01ewU9ZT0WbgOV8yt1YwZuxy1vZXd2Hq/mpd+zuT5NX
8FPWU9EmYDmfcjdW8Gbs8lZ2V/fhan7qHbv70+QV/JT1VLQJWM6n3I0VvBm7
vJXd1X24mp96x+7+NHkFP2U9FW0ClvMpd2MFb8Yub2V3dR+u5qfesbs/TV7B
T1lPRZuA5XzK3VjBm7HLW9ld3Yer+al37O5Pk1fwU9ZT0SZgOZ9yN1bwZuzy
VnZX9+Fqfuodu/vT5BX8lPVUtAlYzqfcjRW8Gbu8ld3Vfbian3rH7v40eQU/
ZT0VbQKW8yl3YwVvxi5vZXd1H67mp96xuz9NXsFPWU9Fm4DlfMrdWMGbsctb
2V3dh6v5qXfs7k+TV/BT1lPRJmA5n3I3VvBm7PJWdlf34Wp+6h27+9PkFfyU
9VS0CVjOp9yNFbwZu7yV3dV9uJqfesfu/jR5BT9lPRVtApbzKXdjBW/GLm9l
d3Ufruan3rG7P01ewU9ZT0WbgOV8yt1YwZuxy1vZXd2Hq/mpd+zuT5NX8FPW
U9EmYDmfcjdW8Gbs8lZ2V/fhan7qHbv70+QV/JT1VLQJWM6n3I0VvBm7vJXd
1X24mp96x+7+NHkFP2U9FW0ClvMpd2MFb8Yub2V3dR+u5qfesbs/TV7BT1lP
RZuA5XzK3VjBm7HLW9ld3Yer+al37O5Pk1fwU9ZT0SZgOZ9yN1bwZuzyVnZX
9+Fqfuodu/vT5BX8lPVUtAlYzqfcjRW8Gbu8ld3Vfbian3rH7v40eQU/ZT0V
bQKW8yl3YwVvxi5vZXd1H67mp96xuz9NXsFPWU9Fm4DlfMrdWMGbsctb2V3d
h6v5qXfs7k+TV/BT1lPRJmA5n3I3VvBm7PJWdlf34Wp+6h27+9PkFfyU9VS0
CVjOp9yNFbwZu7yV3dV9uJqfesfu/jR5BT9lPRVtApbzKXdjBW/GLm9ld3Uf
ruan3rG7P01ewU9ZT0WbgOV8yt1YwZuxy1vZXd2Hq/mpd+zuT5NX8FPWU9Em
YDmfcjdW8Gbs8lZ2V/fhan7qHbv70+QV/JT1VLQJWM6n3I0VvBm7vJXd1X24
mp96x+7+NHkFP2U9FW0ClvMpd2MFb8Yub2V3dR+u5qfesbs/TV7BT1lPRZuA
5XzK3VjBm7HLW9ld3Yer+al37O5Pk1fwU9ZT0SZgOZ9yN1bwZuzyVnZX9+Fq
fuodu/vT5BX8lPVUtAlYzqfcjRW8Gbu8ld3Vfbian3rH7v40eQU/ZT0VbQKW
8yl3YwVvxi5vZXd1H67mp96xuz9NXsFPWU9Fm4DlfMrdWMGbsctb2V3dh6v5
qXfs7k+TV/BT1lPRJmA5n3I3VvBm7PJWdlf34Wp+6h27+9PkFfyU9VS0CVjO
p9yNFbwZu7yV3dV9uJqfesfu/jR5BT9lPRVtApbzKXdjBW/GLm9ld3Ufruan
3rG7P01ewU9ZT0WbgOV8yt1YwZuxy1vZXd2Hq/mpd+zuT5NX8FPWU9EmYDmf
cjdW8Gbs8lZ2V/fhan7qHbv70+QV/JT1VLQJWM6n3I0VvBm7vJXd1X24mp96
x+7+NHkFP2U9FW0ClvMpd2MFb8Yub2V3dR+u5qfesbs/TV7BT1lPRZuA5XzK
3VjBm7HLW9ld3Yer+al37O5Pk1fwU9ZT0SZgOZ9yN1bwZuzyVnZX9+Fqfuod
u/vT5BX8lPVUtAlYzqfcjRW8Gbu8ld3Vfbian3rH7v40eQU/ZT0VbQKW8yl3
YwVvxi5vZXd1H67mp96xuz9NXsFPWU9Fm4DlfMrdWMGbsctb2V3dh6v5qXfs
7k+TV/BT1lPRJmA5n3I3VvBm7PJWdlf34Wp+6h27+9PkFfyU9VS0CVjOp9yN
FbwZu7yV3dV9uJqfesfu/jR5BT9lPRVtApbzKXdjBW/GLm9ld3Ufruan3rG7
P01ewU9ZT0WbgOV8yt1YwZuxy1vZXd2Hq/mpd+zuT5NX8FPWU9EmYDmfcjdW
8Gbs8lZ2V/fhan7qHbv70+QV/JT1VLQJWM6n3I0VvBm7vJXd1X24mp96x+7+
NHkFP2U9FW0ClvMpd2MFb8Yub2V3dR+u5qfesbs/TV7BT1lPRZuA5XzK3VjB
m7HLW9ld3Yer+al37O5Pk1fwU9ZT0SZgOZ9yN1bwZuzyVnZX9+Fqfuodu/vT
5BX8lPVUtAlYzqfcjRW8Gbu8ld3Vfbian3rH7v40eQU/ZT0VbQKW8yl3YwVv
xi5vZXd1H67mp96xuz9NXsFPWU9Fm4DlfMrdWMGbsctb2V3dh6v5qXfs7k+T
V/BT1lPRJmA5n3I3VvBm7PJWdlf34Wp+6h27+9PkFfyU9VS0CVjOp9yNFbwZ
u7yV3dV9uJqfesfu/jR5BT9lPRVtApbzKXdjBW/GLm9ld3Ufruan3rG7P01e
wU9ZT0WbgOV8yt1YwZuxy1vZXd2Hq/mpd+zuT5NX8FPWU9EmYDmfcjdW8Gbs
8lZ2V/fhan7qHbv70+QV/JT1VLQJWM6n3I0VvBm7vJXd1X24mp96x+7+NHkF
P2U9FW0ClvMpd2MFb8Yub2V3dR+u5qfesbs/TV7BT1lPRZuA5XzK3VjBm7HL
W9ld3Yer+al37O5Pk1fwU9ZT0SZgOZ9yN1bwZuzyVnZX9+Fqfuodu/vT5BX8
lPVUtAlYzqfcjRW8Gbu8ld3Vfbian3rH7v40eQU/ZT0VbQKW8yl3YwVvxi5v
ZXd1H67mp96xuz9NXsFPWU9Fm4DlfMrdWMGbsctb2V3dh6v5qXfs7k+TV/BT
1lPRJmA5n3I3VvBm7PJWdlf34Wp+6h27+9PkFfyU9VS0CVjOp9yNFbwZu7yV
3dV9uJqfesfu/jR5BT9lPRVtApbzKXdjBW/GLm9ld3Ufruan3rG7P01ewU9Z
T0WbgOV8yt1YwZuxy1vZXd2Hq/mpd+zuT5NX8FPWU9EmYDmfcjdW8Gbs8lZ2
V/fhan7qHbv70+QV/JT1VLQJWM7nU934f9ZXh6w=
       "], {{0, 224}, {224, 0}}, {0.,
        1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{224, 224},
     PlotRange->{{0, 224}, {0, 224}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt3U/KJVcZB+BWIWQNggOXoI5E7SaQiQMRIzhvQR0YCEREHDnQkUPR/bgB
wSW4AN2DCe3ga5qK75v3T1V99xk84fbN/eqeOnXOqVO/+nO/+fNPPvrlV1+8
ePGb9z/7z0evf/fBp5++/v1P3/v8H794/fF3vv3x1z57+a//+fz1hz/88atf
/+n9V7/9279fHr3+x/uf/OCfH/zx+6+/8t7hZyY+//T97DIry59Y30oZJspf
Wf50+Te3Y2VbV+q563WlHibqrfJ+1zKn2/lZdTjdPifa7XT7nCj/FcafrjZ/
5X1QVxm62tj0XGJi/zg9dk3PhZ6+fvH1D1996+9/ePWzv3zjVaQ805/PLrOy
/In6uUKf2nx91hxsoh4mtnV2LrHZHq7Qfu7+eroOu8a66XY73T6vMP95rv1o
eptG2u3EHHVz/J/oL1fb7l3jz4sXL179P0/LM/35yOu3/v5gTI4sf6J+ptve
xNh7VvnPmo+F2lXTts7OJbJzjLP2+17v1GHXWDfdbs9qn5vzn7PawBXacGUb
RcbVs+bJXeP/RH+52nYfn8udJLu9nv7t917+6OVP/vqrV//583dfPn2dbdtH
dRKpq+y84grHnpXXE8dQm/OxSLvqaquHyz+YP0Q+Mz3PnG4/d389XYddY13X
emXnwJvHQdPzn7PawBXacGUbRfahkffvOE/u6i9X2O4Tc6FIm5n21vdm6zPQ
ViPfG2mrpfI3zSXa+lRkzjMwF2orT6EMkWWG+l2yfUa+K3ScGGj/l24/d9fV
9iLjQ2WsK7TJyGcO58Antc+J+U+2Pm/Tj4b3QZF9aOT96eORiXlyV38ZaScT
++6jeijM5c4SGQey2WbkuyrHAkfLPGpv2blEV5+KzHki61Upf6U8lTKky3bQ
riLLP9rWXfu4bHu+Qvu5u662d1SHR2NFZayLjD+VY5+u+edE/lmZ/xyVubK+
V+hHXWP49LHAdBkm5smH9Z7sLxPnrCf23dltV/nMJTTtl4/eH5n/R9bl4DNd
fSpSP5H1ajuHVfjb7HIqy8z2/cjnI98VOmYJtL2rtZ+7G1nHQP5ZGZ9HMvyb
5J/Z+U92P5vOry7QjybG4a5jgekyTGehE8dr2WtyNrf7RPu8mq798lHdRvpL
6XxNsq12zZMrx5Vd5Yx878T7Xct8q68FrpmJfL5yPFuZf57Vfs4ePzrHn651
PFrOUc7ZpZLhH+0rr5Z/di0/VFcHc4OJ/cJmG57Iarr2rV1zy64s9GjMf2sb
JPtLqE8lrxPrqvPI+8/JxH65qx9l1+WwrRauY6/kV5HylO5NyNZJ4f2u79qc
E1aOZ7PfNZF/Tq/LFUysY6i9NeVpXRl+5NqAs/LP7LHhxFyosi+e7kfZuoq0
1cqxQHbfWinDRGZ+6GAOGZlbRl5H2luljxy2mcD7xPtg5Zj66TLT85Pkea7p
800T9yZUjgUiy6nMDyvH1JW2FyrzwPnWifwzNEdqWpezTKxjZP9Y6VNHKvO0
SFuN7HMn2mel33XNhbrKNtGPuo5l0tul6d7qShkmMvNsPUeO3Sr3Vpfmydn2
E+hTXd/7nJTmGwNZX+Q8V/Z64Mp5hKM+Evmurn3i9JhfyVgi266yvtNtviv/
jJR5+tzxFVTWsWtfnG0D2WPGyH4tlMkM5J+H65is8676nzgvOd2PKutYmfNU
xvCJ3DU7T07X9UH7j1w3eNQGNuefXduOd+swu2+N9IvS3yaz0EqOkZ5bNl3/
3DVWV47LIuNS13wgfezc1M678qVQndzkeRolhXXMniPbPDbJtpmu49Bs++zK
iify1aNtutnGprVlg03vT+dFlXldZJzM7nO7ctqJsSLy/iPLbruz6vAoh6zs
7yL9NJv5d11v37WfrcyjKufgrqySL4Xaz1HbePJ+5d7AKzjsj4V1vNp4nu0X
E8ehbcdBhXWs1H9lTj7Rxqb7Qlf+mX1/Oi/qOrZKly15fDGS0w5sO754e11t
vhE59omMRaF+GjgvECln17HhdP7ZtV+7yzxqIv+s1P9d6i27LhP7qc38M3us
ETluzc67KsdBkfaZPd9Rycqyc/LpNjbRZir5Z1fm2VUn2Ry1sh27Pn9U/un8
M7sum+3zaqa3+6pCDh+Z03bdDxVZl0ofjyxT/vluu52ee3eN4VeTPV9Q2U9l
P9O1Xtk5Z+SatIn2mc0qK5lDui8U7huaaGMTKvPPbHurjNXZdQmtf2E7hsqc
vGZg89jkLtndlXVt900T/TrShp9+Jvtc5emxOvtd8s/9/PPQTe6FDx2XHaxX
dj+1OZ6n23NTzllpn9k2nF3mxHFo9vzRRBs7azwptbfAd3VdL1HpL6HtWFhm
tk6mn9139P5z2ldO2GyHV1ivrswqMjZm58ZHn+m6x1P++cXt5Ky599X6TqUO
s8/li9TDWeN5pW9OjKuVOXm6/zY9F6hy/miijW32hex1C5V8cuJ6ic26mlhm
5JhxYqy4S3bHjmx/z15Dks32Q3/bdI+n/DNeP482956ow7f+X/KZQk8/c9Z4
Xumb0/vT7PiTfR0pz8S5gMqxSeg+0JP6QiWT7Mo/s+P23W2Oyc81u6O3bVT6
e2Sels32D69lOvjep+93/Y6q/PPden60ufdm3R69Pz1ny/5ttm9Ob+tI+wwd
qzZdi5uth0qmXSnbFdp817ia/a6u5d9F+hqAC5SZ5236/FQ22w9lmwfr0pW1
Rpb5aHMw+ed1+uMV2sD0fYVd7fOtz2Wfe9l0vVB2m2Yz7TvmdZVxozKHn1g+
EFc51s4ej1f67NG1TJHz/pXrqOWfX7wtHm3uvVm3lffPKnPXfYVd5TmaJ2fb
5MSzWCfORd5xbMleL1G5RjS7nGy2DHw5Xeeq0vlnQPq6rMK98PLP+LZ4tLn3
puw12FdoD1e4n7rrGHPz+s+u+s9eR3oFlXEjm1V2Lf/K9Ql3EepHkXNVgfNu
I9eYBcoWuRc+e/5L/vmYc+/Nuj3rWtDp8m9+b7a9Zc93R8pTeX9i3a8mm392
ZZjZ5d993Ia7qJxzz57nipThaM55eF4s+YzB7Dm1R56DyT/nVPKZs8v+ReXf
/N7KM7dD39f0vLiu+um61ugsoesHks9dT/edwvm7u4zbcBfp8+/ZZSbLEzrP
Xji3Himb/PPdOny0ufd0fUba/NXqsHI9ZNv3Nj1jbeLzEzl217VGV1C5xrKU
kwSW71pQ2BHKD598PvsMuq5xILL8yt9m9x2PNgeTf86p5DNnl/0qrtCPzsqx
u35346ztld1HZHOS7LUT2XP3Z9clPAdP+9TRPa3Z89Fd40Dku7J/W7mX6tHm
YI88956uzyssh976H8+xm85PnSW7j8jmJHf5HVvgjWwfT/fH5DhQuf4n8qy8
yjo+2hzskefeEDGdYx/mA08+c4Xf1oyUv+tZJc/pd2yBNyJZaORv09eJDS//
6HVkHSvZ7N3nYPJPeNdmjj193eNZss8qOVyvG/6OLfCuyv0+Xf20a/lH40kl
C82er7/7HEz+CeeauO7xNIVnlXTlmV3rcpcxHO6oax5V6aeVfCA7ph1moYFs
9rnOweSfsG/6usez1uUo84xkm5Gx9DmNvfDI7tKX0+UJZKFHY2Z2fnX3OZj8
E87Vdd3jFcqfziQL91XdfeyFR1M5x3FWObvO0bz1HYV7/5/THEz+CeeqXPd4
dtk/V7nnvesc+h3HXnhkkXMclyhb4RxN5Xuzz4B6upyr7SOOyD/hmq48hlTu
ea88x++oDHe8PwseTdf55emydZ2XqVy/+gj3Tso/gS6R6z+z56SOvqtrHgvs
uOM55ex8putZfJtlvkLdyj+BtMC9USPPTrn5b5XCI8jmnHfMtabv03+u5J9A
Vvb+zci1oJXy3PG3SuHRPMI5ZeLkn0BWJLvIHrem3fy3SuERPNo5Zb7cNpV/
AhHZ7GLi/Psdf6sUgDfkn0BE9v7QiWPVSO7qXniA65N/AhXZ54d0PR/v9r9V
CvDA5J9Al4nfN3lOv1UKwBvyT2DCxO+D3P23SgF4Q/4JdJn+fZO7/1YpAG/I
P4EuZ/2+iTEH4F7kn0DFI/y+CQC95J9AF79vAkCE/BOo8PsmAGTJPwEA2CT/
BABgk/wTAIBN8k8AADbJPwEA2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/BABg
k/wTAIBN8k8AADbJPwEA2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/BABgk/wT
AIBN8k8AADbJPwEA2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/BABgk/wTAIBN
8k8AADbJPwEA2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/BABgk/wTAIBN8k8A
ADbJPwEA2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/BABgk/wTAIBN8k8AADbJ
PwEA2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/BABgk/wTAIBN8k8AADbJPwEA
2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/
BABgk/wTAIBN8k8AADbJPwEA2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/BABg
k/wTAIBN8k8AADbJPwEA2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/BABgk/wT
AIBN8k8AADbJPwEA2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/BABgk/wTAIBN
8k8AADbJPwEA2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/BABgk/wTAIBN8k8A
ADbJPwEA2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/BABgk/wTAIBN8k8AADbJ
PwEA2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/BABgk/wTAIBN8k8AADbJPwEA
2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/
BABgk/wTAIBN8k8AADbJPwEA2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/BABg
k/wTAIBN8k8AADbJPwEA2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/BABgk/wT
AIBN8k8AADbJPwEA2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/BABgk/wTAIBN
8k8AADbJPwEA2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/BABgk/wTAIBN8k8A
ADbJPwEA2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/BABgk/wTAIBN8k8AADbJ
PwEA2CT/BABgk/wTAIBN8k8AADbJPwEA2CT/BABgk/wTAIBN8k8AADbJPwEA
2CT/BABgk/wTAIBN8k8A7ui/e8tqBQ==
       "], {{0, 224}, {224, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{224, 224},
     PlotRange->{{0, 224}, {0, 224}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1: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
lXvLK3w36IDhjE1dbeJqlYuaPP30HQMO6dxl6P9FjfoJdRK7j83vbPce35oT
zM8pDNNcaHqNueaVDqzOeLF+gi+fYoDISHRtTcysvmPo/0Uf/wl1Erx+OSOB
1aZ2rbzGkBPMzykMp96h75eu8N2mA03dXulqE1efvkNrFMHTlRekMjbxnaZO
rvzOUMPFOg3Zg/Y7A95orzHkBPPzr+fy9IHISIQOpP7WoO00TlY7UbMndJ+b
WWv1nRXOr++MNKeadRqyx5X8b+vblV4Znr91XjY9MeSKFLZfciOxJxKcJe6d
mlk3dd6XGlJ9TvHI/M4Vb7LtjIbvNPnSnK85/xN9u5J/DNnAzIsr5zJ8n84V
Te9e6VWKs7ackNJk+pnoM+1Bhucr+cG2M6b2OEOdhnuSVR6gNfzF12zacj2z
GXBuOJfh+3SuMPggrVcvemLoD40lAzdXfDf3wcDfVZ6nPTSlA9/k9bY8sNJw
A0+bfmfQwyu54oqONfU8xfEVvwi9StVgzgnNd648m3crg56kvMmwa9P3WvTv
GjxxVRuRIQ29bWrL9cx2JVdc0bGmnr/kCkJ/DPcVn9af6mEzJzSfDbpN64yh
D7SeGOay8rgrz+YsQeeBT98xYGy1d1zPbFdyhY2/tuemB9lyO92r5j2JGbff
VFtzt7L11palL3Jh1avV91f3EjSuCB+huWnLYCntteUK+lzXn5s7rLmf33qv
YqjZzKkXnfm05xfvLgy/Zf6m4flKNnj5LVt2tflI8z7E8L6Bdyls2DBs89yV
Xxv6YM5Ohpyw8rhmbS+YMfjXasc04NbABQPHDdng098i/J3AwMpHrmM41WdD
bS81N+9XDX1oztqW6771XsWQ92iPa9aW6lVqp2v2dvVbRD+v8Pd6nYS2v2D1
m/Tzm3IIrZ9Xav6m3yV8xICH5n5q+GZzvld28JWn0PnNoBWrvY/ArYELBo5f
8bvUrFM+ZdBPm28acGW7v7Lx1NyH1dxTOy+9O7/o1UoHDHmPxjyd/Wi+2GZK
49xwLpuWNn/XvPMSfEl51nV+NTXZhnkDL1Y8tekDvSfS80r181vvVQx5z5D/
CS+j71UMfnFxfzT4oPkeY4WfFacMPm7gl6FvZq4ZvJKox6YPRP1N7yPeufJs
0GRC92iO2PJhM8utvPXTuV/3wYv5h8YPwc0rPr7i10pjL3LN7JVNXW3OIqUJ
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
xJc6U3Ox5VWDVhh2DQKTTb+z6bYh26RqpjlumCMxd7r/Nh0zZ7aXXl2cS7O2
ZpZo6lLz7CsMGLhMY3KFGQM+V9hY7XQGvTXgdpVtVtqbwl5zjvTcDb7T5OBL
Pw25yJBVzN9v6qS5NkO2SX2zuS+nuEn0sznTFXdobDTrNOR5IifQvWrWfCXH
GvQnVZuBs9+Ue1OZ37abr/as1XzN2ZvmrCEPN+sx8NQ20xV3aGysdrpmbUQm
SeG2ibdvyrFNvtC1XdElw7xoDBBeSWcV2/tNnVxhj/Yycx5u5p9VzYRvNvtg
qNOmkys8pzIJkTdovBF9XuXYFQ7NtdG6dCX3Gnia8i9iLs25p/R5hSUzNpoY
o8/V/M5K85t9MHzTppMrPNOcar5zxQs+rYHW25V+2nTeoNVE/qF5cWXvWD1/
OrtU/5vZ24aNpp7Qf5vybpvmEzwyf3OFtyYeVjxN+SCdE16+b86xqf2Ofr+p
mQYNMeTeFX8J/7rybNArM2ZW2YaeRepv6XdWmp/q2wvXmt9c4Y3+poGnBr9o
1pnSW8OMUnpInNHgXxczs+23Vj00a9F1/NBaSusw4ZWpc9lwS2h+s2+2b9J4
o79p4KlhB2/WSZzrW+fyckaDfzW1OvW3xFzofEL00ODdhvuEpuc2vXK1K9G7
tg23zW9ez2MpTXvBG/3Nl3cM2L74TTovfdNcUt+n9YrQkKbmN7HX3HNtGF71
x4af5l6W8r4Vli7eCTRxkspLhjxmm6ntedUT2msMGYDg3cW5pL5P6FJKT5p6
TuxBRH9o7/4mHr3Ma4UfQyakM2ST+83v0BpLa+k3Pf+0sxN7Dc192zeJvLTC
Kl1DSvMN3CE8vbk72/IY4YlXeET08KLXGzIVoW8EVuk7gZ+AB8PzFW42z9v0
O9qvmxmA6BWN1dVdB3FvY+OUTavN+2YqA1zhkc2LDbi19e1F3wisEue15R9b
PQauXT+7zVN+2vOnvSJ07Mpcmjn/Ov6v7FDEzniRR3QWuuL15kzVzL0p/BM7
/krHDPWstNrAzdV5m35n6I+h/8Sd1cW5GO46ruD/J+ftT33ZwKMm981eT/eN
yKiGb66409QxQz1mXzPo7UpbiDPa+mY4lyE3GvJD865j1RPbGQlMrvpmqJPI
A03vJrhp6GFKn+lv2rypmTdsZ1z5ms0LmlpEnNHWNwPeDBnJlh8IzTfkveZ9
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
Bu9L5SjbDkXn81VPaP428Wn2UPM3m1mF9nSbrxmwZ+Mp3Wdz/w19S3mizWcJ
X7bNrpmpmruDbRYEF5q6YeAy8X3id22YsdVjwEAzH6bqXPma4U7A/E2iz4T2
Er0y6B6RQ1Y+S/iyQW9T/W/q2HXvI7hAz3f1TvP9lG6ksPRNO+xFDLzM11Dn
6nnVc8M3DTM1YH6le0QOWfmsbe4rzzVneLP3fXoWuv8prtHPLx5B78svmvPp
d67vsBcxQHO/ObtV5ln13KD5q5ka+r/SPQP+Uxpom7vBcw34TGH4Sm9XevsT
nps4+fSdFU5+GmY+5c4L920aa8bV9X2nOVND/1/0ltDwK1xoerohJ6Ry+Cpv
2/C24gKhtz/h2Xx2eo+j96wrzwRHiJ3UPAs6HxpwQug/jbdm/wmcN393xYWm
pxtywmpnaeJkpV3X70Cua35TH67U1tx9DPNtamCK+80MYOih+bdsdabuV+ka
6Gfid1dzN8x0dV56N1/hZJUrCE6t8oktjxn4crG25g57BTMpDaTvsgiNNfTQ
/Fu2Ol/wRp/L0POV9r7M3TDTJs6J/GbIeIZc0fRxOp80z3uFLzZvXeHkOmZS
Gni9nubfXvmt1RzN3tSs06AJxF2cAW+G3yUyarNX9E5B5PMVHojdwXBeG09X
GaCJk+b7Bn+hfWdVT8pn6blfwRi9M668qVnnFV8wnP3i7xr26+adTNOvU/Wn
9OEir218MWg73QcDTmjM0NrVvCcx5JYmT80YM/CI8CYbBw2+YLhbWOWlZj4n
9usUj2x6SO+5L/pgyOqrzEPztKnttO4ZfIHAzCofpnSYnhGt/zZ80pl8pW8p
b6L1x7D/Emex4c3wu03NbGYqgx7a+ELce9B9o/2U4Glzj0tllRRPr2Cmuaev
/Jr2UBozTXym3rfpW1Mz6V2p6U3EWQh8rvy6mc9/Qu6i8dnsgzmrN/cyM25t
WeKi39FZhcBb069fdHKl2018pjCWeofeR8z63+zVyxmbOTyFN8Iv6Hxuzl3N
/decz4naVvcJtJ8acGvLEt/qd7TOpN6n9Y3I5DZfo2dhwN6v+s/5IL2Hrvxo
Na+V5hjyxqd/a95nm1wjsnpzL7uok6ssQezpBr9b+b55FzBrLz0XA98N3v1N
+v/yWyt+Nf2IwMbKQw3eQfi1QVuaupSqc7WnNM9i8G4Dbq/4neG8RH4wZC26
D808Zttxmti+rv80ngl+NXNgUxtpDzV4B+3XTb4bcEVndcKPDHvHag+16YzN
75q8oDFGaHJTcwjdsOHQ5gvNelb63/TQK/tLs56mhxLfp/MGgauVjr3UufIj
AzdXWtTMMyudsc2uybWVljazUEpzUrpBYMOGfyLX0fU09Z/4W/N86W/SewQx
i5fvExxp6gadH8w+1cw5Tc1s6mQzrzZ9bTW7FddS+tnMxjatsHnxCv8vWF3t
m03spTLwCld0Dklls9QeseJ700+burHKDymfsvWT4OYVnWzWT/vaanZNPTdo
10UOXvT3Jv4v+mATeyltXO16dA6h8wP9TGvFKg/QeKbPm9r1bPsRwc2m3xFa
R9R/RWcM/mvQ8xSuDBykdcamIU1fWPkg/bvXdYnIxqlvEr7TxGeTR6t9zZB/
UtijMUDjkHjHoJP0XkBnpNV8DZxqZqFvnRGdbZoaQs/XhqWm913BvIG/hAY2
8UNjg84DdA/p/NOcr0HTbDrT9E2DPtt0xoxVQs9te59Bc8z+TuTkKz648r4r
vmPY8Q3aS+A5hZ8reXvVfyKf0PcMNA7Nnvipbxr0eeVTdJ3Nc130kdWM6Kze
7H/KN1fnWu1xNDYMXmbQDZvvN/NMc6Z0D239X813VacBtzZtTHm3wadSdTb9
d5UTVrq6mtHKL2j9WeWW1R5n4DLtZU2PsPGawM+qPyvME79F517i+8QZm7p3
0RMNe3HTp1LvNP236bMrrzTMiJ4p/U1ir7mY/ejctfIdQ2408LrJNdv3CR9M
/RaRB+i8saqtqT/m2sz6Zntu+i+9KxE+YsO/4fuG3Ej0x5b9DHO8gvPmjmPr
CY0Z4vuGHarZn9WMzPhvap3h+yt9sz0T2cwwx+YsmvhfafWLtq9y4+pOwOBr
zf3OgPPmjmPrSapvze+vePTiI/QzPaP/B8q1Zug=
       "], {{0, 224}, {224, 0}}, {0.,
        1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{224, 224},
     PlotRange->{{0, 224}, {0, 224}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzN27/qtW2S1fFGQYyMNBQRNJtEB83sRjyDNhda0GhAGBUxExMx9RyMjPQw
xkMwMTY2EAy0B0Se5Bq/H1fdT0/wvOz3x973vv5UrVprVe2/+g//ya//8Z/5
xS9+8U///G//8+vf/Iu/+4d/+Jt/+ff/3B//zz/6zR/8/t/8gz/725f/9f/8
++PX/+X3/9Xf+c//7Pd+9df+3l/81b/+o//2y//+P/7jL//d//oLv/rx7+U9
P/69PGd5XdbwxfPL+68+u5xzeaaeocbG1fuX51zt9+o9VzH5RYx9cRdfxM/X
uflFzFyt4YsY/iIOv8aZr+/i65j5ulZ+EW9XZ/i7wtIv6tdV/n6Ry1/zhKtz
+C0F/b//dD0/fvb172vcK+v/mgfq3sv6y9nq+euaNTau1rB879V+vz5/jckv
YuzqHq+w5eo8f2ZMLs/X91zF8BdxuOTFcr9f3/XXz1nu5YuY/5oDXMXMF7x6
yRfN36/x8IvY/uIc/tNf+ue/+vf/9te/+p//4G/xff342T/6N7/3y//w1//y
r/7K3/jbv/zx71fadrm7L3jgj8/5cb+vvb8++zrP19mW1+VOX991FQ+6Bl3/
1dquzrysX2Pyixj74h6/uCM9T83NZQ1f5M5V3F5hconDJS/KWWndvLrrBUuX
vV/1Gn5m/i758gWWLpyhYKzqo6/51dexrRpQuY2e1ZI7uuYveogLD1z05us5
unfVL+Xey5o1HnQNX+ev8palDv74+sd8LzFZ3qMxpnGyvOfqjl53oZxq4Sqv
PNW7+DpuXzG8YIvicDkTzfFSf1/59YWeWp5T7kL5kj7nKn+XfFn8pXLXX+Ra
yf0v9O8Vr/sac5Z6umj8EvO65oVrlfhRHliwvei7H99f8miJ5xKHrzUs8aC5
UDBqyV/1gsr9Fv1YnrPMopQYW7Dra69P8URjqXBX5Qmvdar/cxW3r3tXX1F5
kfJ5zXG9l9d7vtDOV7Vb41bv8VVrlvxVT6a8X+/0qs+u9bqc7ZX+1dy5ilvF
nNfr5b6U55fcX3oTX+jN1xqUP/z42SU2rjyKJffVo9PY+HENWoM0fxdOomey
xNuCdVda/konXtXoopVesaS5VmK7vF/j7SpuFw6mHmnBQM3ZsmaNSfUHvnhd
6pr6yXrXiw5d8ET9roWrLzVR8Vw9AdW/irFFpyuPUsy5wkCtfYrnV7x30ZvK
gTVmXlzitYbFd13qe/FMlK+qVioxULzZxSdRD7lwnhJvmrMF3660vObIoh+X
eyy17HVWimNfeDjLe0rsfeEXLfelZ17WUHDslXdf/Ctn/np/4U7lrtWLKzpl
8dsX/vaFB1ieWWK71MGC2wuGa5won190kGqlUqfUlyh3XfJXPeHFY9HYK3Go
eK44pnGr+muJ/+IxLntRb1b9c435Uu/Ud3rFVXm+4udVXixrW+q74mHhNiUv
Sh4t/0ptVR9mqbnlvkqulTNcYvW1x+V3hcoxrvRLwQflPEu+qN9V8KfEv3qA
6tct71ds0f7p0vdRPrbw24Lh2ltc6kiJw+KNaO4stVXXX7hW2XvRC1e+X3n+
0vfU+9W7Lh5X2Yti7BIzS596wX89Q92j9lOU5yzrLPeiWKE4pq+LH/XC28VP
0Bi+8jwLP9EYKHd9pQX0mTq38OJX5fz1twZlv8pVNO8WD1Dn6xZuo9hSNNHi
cS3cW+tOwbrF+/qijig/XPqei8ZceJ32rxWTdT7qqpeh+Klc6IozKNfVWQ7l
3uUedVZHa8TrXoovXXC+PHOpTbrOko86m1dqx+IVLFhUzkrjR7FLPU+tF+p1
vDCw6NOiBZYaVz6rnozygZIvWitL/C/f9ap9BTeWfoHqYu3fKW9Zat/iiS2x
oTr0Sm/qGpY5tHJHS+1+5VHhacoz1Z9RD0fnYZb1q8ZRzqAxWXr9VzMei/fy
xf0uvLFgVNFKpTYtvFdzucTkorU1lsr6CwZe+dt6JlrrC09W3FDfaenLlDP/
uoe1YIJqc329+ABLrVcvZfFXVdOVPsgX917Wc6VTdM2L56BYobmvcb74n4te
vvI5Fbe1DmptXTTUojUKNyucsHi/Zb/qb2gsLb1svd+FW+raCrdXv0Lrvs7y
LVpb/66ew+Jh6mf1HF75q71RvdOS+6UGFe380gIFZ656WOVO9bPai9HYu/IT
llr/igH1V0u+FH39ypEll7UHtHiP2v8td1Huetljef7ia5V4UK236OXF8yw4
eeXV6Gtd86I11Ku8wr1SCxatpxi73K96XItOufJPXrXgtZ7CrxRPitYu51w4
iWphxTf1G8tedJ1Fayz+0lVulvqovtMVJiw9DsW9RRPpnWpvReNZ1/86t2Ue
QOtUyWXtARWdWHSKcunXe5aeY9lj4QDas1O/UeNq0ctX3lF55uLVaL3WOCzx
oBi+6FzFPc0j9VqvePKVF7dokyt/Q7nuoq3KHRWs0HrxRS4XHlXirey35NRy
L8ssq2L1Uvdf7ymxsdSFJTaUJ+v8W4mrkl8lH5W/qQ+/5N3Cz3UNy+yHno9y
6cWjXuJQOfmV1lNPZvFPrjxJjX/1KF54q3ygaLqS+y+tUbRA0T4L7mmNKOeg
uFp4ssaA/r3kwiuulOcvmmh5jvoqihWqMfVeCo8q8aYxX3i73kvRL+VedNZF
sfcL32B5ZokN5ckLj13qy6KhCn8rWL3UU63vyhvL96q2Us92wY2ljl/FzFXM
X931ws+/yLuCXeU8l9mhEp8LT1Buo7VmWduVz/Y6Z50ZLrmvXtzi2yz8/MoX
vcqvxX9QnqBcq3iPWmfL9y7rXM6h1Cb1HnVWSte8+AYLFpX9lnMo51x47FJf
rup1idWlL3w1f1XqacGlK7996WPqd73i50oz6jyPxvwSzwWTNTe1F3/Fhcp5
lpgpe9fa98XrL/RLuevls8ohy/qvZmiV8xd/YPH2fyYXVWxf8rTw3pK/X/Au
vceSI1/MqS7+UuGBX3jUi27VGPjCP1GPUeuL6sHiaxUup3Fe4r9wgFJPr/iJ
8odyjxrnC06qZix+1OLZai143XWpy8ql1T9Z+EzJ62X+RH3OwkmW14oDC/9f
fLkSJ0XTlX1prVm8zQUb9U6/9kU1jxZ/QHOtYMgV79K6oNio8alYqnxGNay+
X/v4Vzz8a1283Gnh/EUPLtxj+a2Bnv/CG5d40Fm1BWMLfyt4qBpQ46d4ZTqH
oFx0mcd76RrF+YWbad9T86X8XXvBiy+nOLN4I3rOpWddaveiCxa/esG3LzSI
YvIVF11yufgD6v98Ec+lrmmNKNioNVdrgcZMeY5qBNUX5f3Kw3Xvqouvzl95
hdZl5fkvjCo4WeadyntKjSjxUPJXsXHp1y86epltuNJEWmfVn1QtVniv5kLJ
96KvVcNe6e7ynC+836VeF26mr3U9ysGWXFZdoDOEy3cVnvP63kWzF5xZOLPe
6aKzFu5R+n2lLiiOqRZeznnBt8INlpqo/uqCycp5Sk0s57/0EJXbFz6ms4WL
377kdbn3pVeu+FAwefHMS7/vSueWv+vzC89UL73Eg2qT8r3qUxVOqzywxE/B
hNJTXvJXa5Z6CIqB5e+LVr3i29oLUL5XNMiSC+obFJwpfy93V+706xhTH0M1
4Bc+gK5hySP1FQsGlpqldVmxTmuNfpfqx3JWJe8W/rzwDT2HxT/5+jcUhdOW
fH9x4LLHojWW/uniLSuHLNxyqY9aN9UTULxSTlJ4RYmxK85Q8EfrzpKDeo/q
D2j+Knf62kcqZ77k8qKd9Ww1X0psl/UXDn8VYy/uUZ5ZcupK36l3V/yfkkfq
L6kHdeV9LWey+AmqOwp+ql+nOHbFq0ssFf2lMVDO8It6V+J5iY0FH9R7XLzE
Ereaa1f1sXjOC24vfasvfJKyR+UMqveXPNIYWHwnxZPy2eIDXOli9S6UL2mf
t5z/FzFQYnKZXSmceYkx1drKx7T2LTMqqnGu+N6SRyU3F/1YzkQ19bLOUiOU
p5U4/ILDX+VOyZHXmRQMXDzAJZ4LB9a7K3WhxLx6CKXulHtUjqr18XXmOiOk
96VYoRiuXEu1zxX+v85cc029JvWICp7oc1QLX+nixT9UTrvEifITnWVSvax7
KdhVznDhaVd8e/neEofLrK/yqCWPNOa/0KQFW9T/fMXbVW16nZV6gEtN0bha
uG7hQguvXvb1es7VPGfRoa/1LL7WUhOv+HzJTcUfrcsF5wtWLFxCa/GCz4r/
JTe/xo2yZs2FZaZCtdjCOfW7XrWjaDTVQcpP1H8oOa6a4vWc8h7tJemMzRXf
Vv1e+MbCXctnNQaWnFKN9vpXnl80o9aUq/f8aVh/4e0F6xYN/gW/VT11xa+U
z2g+Lj2UpYYuMzkLn19iQ+c0Sl6U+ZPFr3vdu/JMjVXNi+U5C7dZvGitm1oH
lYcv6y91oXA29fm/8OIKH9bc1L0o71o8K63d6nUozr/OSrlZqVOqjxT3iiYq
e9ffWSzvV42w/Cvn8/X61W/RubISY1rTldsXPVV4jvZl1J/R2rqciWqiK+15
9fwSG/rbvZIXqtGU317NYZbXr7xYfJvyHN1v+Wyp3a87Kutf+LnW/bJ+zfHF
1y3nvHhx+v5XTBYMv+JvunfFGcUf5bpXOLDkXeEzS826ikPVGkuMLZ5/ea01
4ov1axy+4q3U/aWn/MLA4iMVHL7iV6qnSo0rc5hX3pri4eL/6HuKz6OYoHX5
Ktde53zFSTRur/xDxX/N0+K9LDWonIP2l69698qHy9le3fVSpwrn0djQ2q05
rr6l6uLXPZYYLtrqKjaW3Nc4Vw9NNfvrnFVrXHk+JQbK7zIKd7qqCxpvV+ez
nL/mxZUGL5+9ypcrTaT3pd6R1scv/MyFl2q9Lnd3he1Fty6zAVcaU32MK/xf
8LD4MMrfyqzvwvP1jrQuaK984fkLp/3CByi1u3CbBaOWOLzyKIqHoLGhWq98
Vvn5ooO0Rqh/XuKw5NTSE1/mxLQulPWXvNbzKXe04MCCS4VbFj9W+2iL160e
kXo7r2eqJrqaTyh4ru8psVrwttyv+sPFXy08R/O0xJvquHJHGldlX8WXWOpL
yVnViV/cV4lb1bnlrq847Rc+QMHGctclBrSXt3DIxaMoPs/SMyp/VwxR3ar6
dMHDUutLvC0zDLoGnRO7unfNnTI/o3mkOPDCUo3br/lJua/FW1DPtpyDYkVZ
z1IXCl/9eg6q5FR5jmo0zalyp6oxtUdQ8rHst+iphS9pfdHarV7l1X0te1G8
KpxZ7+gLPC+cs9yd7mX5roIt5d4Xn0f3XjCwxJ6ubdlvyceCh1p3rl6X3FG+
p5xB70XPUL24RYup3i+84oo3luer36X3suDeggmKe3qPX/jwJf6XWqB8pry+
8h8UBzSnSt+ncNTX+WuPQPXdaw3KHzQe9JzLfS1apuiOZS+LB7Lk0RUeasyX
2FY+qetcNGDB5KWm6x61FmjdLLih+/qi5hat+sq7hVcUjC3xrPWu1GvF7YVn
KvdT7FIfZqmtWuNKz0VzQTHhC2629NCXGSqdyVm0tsbtoulKDC+eUuEP2ifS
+aVXjnzd61ettMRAua/y/oIJ5cwVV3X2ZvH3lAcu36W9eNUvC38reV36FGUN
ipmaL0t9Lxq21KkFu76ouYpveo+LR3rlj5V+t/pjiz9QYnvph+osX8FA1Sn6
vSVuF7693IX6Kvr6Cz6sswrKDRZsLM8sMbycVamtip9feIaq9xeNqe8pMbDk
3ZL7ev5X3o7mqeL51XeVvqquWfvyy0xOOauyhgVXVQ+qt/CqL0t/Qc9ce0bq
vXwRA3oXX/hjir0FZ4pm0Vqp/ky5U/XNlpkExVKt0VqbCtbpXby4WeHSJSYX
r0nzeonnwlGX/s6Sm1pftDdX6uziOZfnLGeo+ah+5hUP13NTP1nPUN+jmKnc
TL0yxTTFpYUfvp6puV/yceEwyouWWqO1oPQLSjwvXoHG8LKekkfle9XzVz6p
Nbf04pd6Uc5NdZzyxvL8cg7Kr0qOl88qBr7iQXH1xa/Ub9e/L7VDOU85tytP
SXsW6uktnvDVvha/qzxHfYNlhkfxbcHwpUar73H1uuSp1i/N5YLJJcbUr1v8
LsWfV+1T3+Oqpmg9Xb7rFSeqMZWPlRhWrCg8rcRAWX/Bk+V3Pfqewtu1LlzV
aJ1p1ztafIniRS8e2lKPvvDnr/izrqfwGfWarvB58ZRUjyvOvD5b+EPBAdWk
S5woHv74zGU2rNQs/eyV/6lrUyzSf7r3hf8veqHg3jKTVrh9idXFl9AYK/f4
BcZqL7jMDSqXW3JfvYIvcEB7u6/n6DqvsKJg6Qv3Xn3/pe+jXscX/QutiQUT
ioemWqC8p3xWOYlyqoWnLXMpV+emXGuZ4VFvWet7OYcvZtS1Ni317kqnF37y
hUZTblNmsYqfVmq69gIWHbF4F5qbWstKfSz5Ve5Fa1ap+3qGVxhb9qW1Vfeo
85k63/j6d9UHucop7blfaQHlzBqH+psL9cyX3Fl6l+UMFT+/6O0qH9Zc+MJH
0hmhEnuLxlSuVTBK/fyCz+onXNXuogWuPM+reR6t0eWOrjRaWf8VZ17OTTn2
4v+UNejdLVxRNeCiDRXbi25d/JYFY0u9+MInfJ2P4vyVZ77s68c7Ws6q6C/1
E664tPq3Vz0LjROtHa/PFg6md1rWqVy6YO8rPvWulYcvNbFg6aIvVGsULNI6
WDhzWbPO2pW7u+KBV/7Y0i8r96jrLGeuOkh1on623N1SpxTfCocvOKDxX+59
wUN9zs+chyxaQOuO9shKvVD+sGB4ea16s3jmC/9XnCl8tcRJiXO9C9U7JYaX
nsWCMyV+Sv7q65KPS5+9rLl8r3ISrSkak4rPVz3ckqeFcypfutK8V96I+hiF
a6neVG9c+bnW2UXbFr63zCeUfS3eWtE4pR7pHrX3elWzltxUTqWcVjlqqQVl
zeX9C19S7F34w+IFLRiiXsTie5c4Ue1Zar32fJf6pe95nXPpd5c4Wbj0MoP3
BcdQXlp4vuLngqva8134xhJ7rxgr57ysX73WK/14pZuUr5Z6oVxu0ebFA188
E/UWtLaqRtAZp6JVr+YPNU6WHLziBgue652q5i2zPUutVD27cCfl4ao3ixek
f1dNV3JK+c+icQqeLDx/iUP9t/hpJX8XLl20s2qHhWOon6DrX2qr+g9XfHKJ
yeKPaY94iUPtiVy9Vm9En1k4vNbiZa7mFQNX/cclT0s+FmxRDrzoFI3VxWPX
fFGv7AqH9Tkae1e6WPd1pWcXfqs8vNS+Zcbyi16M+lRf19zXnV71X5a6WZ6j
PFk56jKbtOiCL+Z/ND71HAr+6/cqh/lCa5eYvLqj4iGUOFzi6osaUbxxnTFT
3qscpvDA4vst/ceSO+WcrzTCUqMVG3UuSD328lmtO8rPF56gZ15ib9HF5R4X
LqpYsejZFw/XPu/iwyx7UZ5W9n5Vc5d+yqJPNWev9ItygyWXdZ3L6yttqDpd
61fpUxT9WGrrF57e1WyDYn7Jo2VtilcaD+rfKk8uXELrzhecfNGqioEFY1Uj
lLkF5VFl/Tq3oPz5C79liZnyfOWuyzyDYq/qIK31RSMsGllxQ7XGotG0dhee
tpyb1txSU0oul7xTHbRopeK5KUfVXNbe1sJFy2cV8/XMFx61cOOrc1POWfwr
3a/OsKnvtGi0BQO1P3XlgS8cdeFLWheKVlU9qBhbNMJSs7ROKW8p9/uKt6s+
2tID+kJjLjxk0VOl16B9gRLbiz+vtVLPdtEIS53Se/m6n6vrV41Q/IrSTyx4
W3oHRbcumLbc0cJVFK+0n6KxoTyqnOGVdliev3g1ypl1j6+YVGxR/qOxp2t4
/X3hDAWTr3R9iSX17gr3KGf4Ok/1RpaapV6EzrSo/tVaoP7M4oUqn1l4yJUP
cMVjVbOX2C51vNQy1RrKacv9lru+mnUsNUJrVsmjBc9VZxX/sJyn6ibdi2rb
hRtr7hcdp3mkGKuxXfpBV7xo0ac6N16w9P+lt/4knFx8uZLXS99B5yIKfi4x
oL3+K11fsKjw8MVzK58tMa+1sry/zADrXSj3K/hW1qY8v9SL1z/1CVVHLD7A
wmP1u5RLLHFS1vO6C50bWWZLFPMLN9B+bskXxWG936/5eeGfBecLVmjcKk/T
mL/KfeUPCy9SDqP1QvHthefqe+g9Fq1dckp9HuWuyjFU16hOKTxZ6+8yO/E6
t2VmqexLtfMVH9Y6pZh85aMuPfSy31ILtFYuevwqx/X8X2d15X1pfqnGvOoN
LZ7b4nG91lDq8sK3y/oXXlT2uODMws/VX9KZuoJXZQa76PoSV1/nfuEPyx1d
1c3Fa1r2VXJZ/cwv9qW+TckRxfYv6pHmSKm/rzWo16o+7cJ/lvUvfqBqHK37
pX5d5ZFiS5lf0hmGco+6ziXHX+tcdFnZi8aSemU6U1ruXT2lxYMq36s6SLmr
co+FF6knpp5DyReNE63XBZMX/lzi+YtetuZ+6a8tuVzW8IpJzZ0lZsqMR8Hq
Rftc7atwucI9VMuX52g9Ks+8wmT9rN6vruFr/2Hp1y9nrv5nwXbVfa8cucKT
K3298MwrX0t12eJ9qc9T+i/qh5Q8XWZFVIfqrHX5u56/4s/i1Zd8/JrLlRqq
uf+K1YJdV/MwJSZLLi+5v2Da4hUozhR+uGiQxSfRmF9ycNFWWi+W2lrOWXvo
Sz9duZY+X3VNWUPhSIv/oHy7vL+cecHVhbfo3S097uJxKX+70hdLH1m/V7nT
6xyW+ZwS/8r9lE8ueln7dAvfKBilfKzotfLM15mr7li4XIlhrVN6X4smLWd7
hf/a69EapD6bao2F32otuPJJSr6obirPV+6nZ361fuUquneNzyV/i++hebpw
8sV/0F7V1XkuPfrCW4qXdYX5C2dY/KXCr644xpLXr3NY4mqp46WHpVha9ljy
S/l/4cNXWKp7X2aNltmeJT5fa3jxGb3HZf36WnnCFdcq8aM1qHgR5ZxLvVAP
tnDdJVZLj0Nrivb0y98L5ug6taes+nHxt3X9muMaV8t7yjm/4r/sceGrpWaV
81x0kGpqxUPF/IUzaE1UfnXFn/V7l7WVuCpcS7lZWU9Zg/qli+7Qsy11RM9B
16xre9UC1S9XGqdwoeX1wjNVY17pF/Xulv2qN3JVU5RX6PoLJpe7WGqBnuey
/pI7S0/5deaqxdQfK3G1+EJfYEKJJe1TFH2kszrq9ZV6sWD4ojGvfImljlzx
uoI/C39WbavYqBpBuavekcbqMi+06I6y36s+8qLrl1zTnuwSk6o1rvqJiglX
2nbB26vvLfvVPvWVRls0VFl/mQ8pXt/iXX+dI6/vVQzU3lzRs4tHWu5d936l
HRZ+Xmrf8vs+5fA6Y7bkhWrVsgZdW7lrrb9XekQxdsGKxU9TDqPzNvr8cs4L
huv6X3tR7CoxWepdqbk6P//F3FfJ6wUzy2yMnoniyReexhXeLrhXeHuJ8/L8
RaO91vnCzKuZpYWfvNZWPJNlBkljo8TYwtvVgyqz4sqXyr1onfpCq17xloKN
5bN6dyV+Sl4oNmrt0zhc1nnlkxdMKOe8eHdf7FH7ESWuvnh/yfdSI1Rrl3q3
9MrLvRQup7hUck3jduFvWru1N7fooKWmaI1QLlr4m+KkatvlHpUDa+1e5rhU
Ry8YrnXtqo5fcQ/FMfVnrn6Po15c8SsWrbrMGJR1am1Sn6HwvRL/BW+XPCpY
Ufai6/wC0wq3USwqHKnEhmJRwW39LcBSNxevo+xRPWHl8DrnvHA2xc/XuV3N
2yh/W/h8Obelhuoc0VIjFs5Q1qzel2qcEufKmV+1STmnzisuWk/zS2NDZx6U
b2uOq7a6qhHljgpvVN6l/uoVr9DcVy2gXrrGxjIjp2ey5I76z9pHVkwrOV5w
Xn+7scwSFyxatMPX79f5Q9Wzuuaica7mk7UGKVfUGqo5pfim+kvPVjmk8pMr
r0M9pRf+lOcsGrD8/cfvLbyrcAmNsSt/oKyz3IVy9VIL1HtR/bXMeJR/C1/V
3lypleo9LvFTYqmc7YKxxf9Unai87qUXVK+VfC/nqTFWzkQxTWuBcir11Zca
unhWii3L+5VHaR5pTVffT/NdtdgS88oZFo+i3EvhiuodLVp4uWvlGwvvLXii
PXF9/qtGlM9eedqa++oPLDGv3LjkxaIdlIuW9xctoDFQ6oV6dEvN1RjT/qBq
B9URGkuL/ip8UuN56eOX9xfN+4qxpZe0nO0St1pPr3T0wr1LvquHrzxNa5DW
OH1O6e8oTy78/MqrXGYjC5Yqh1/8w0ULa16UOyq5oFha8OTFCRe+d9VrXvh2
yZFXzmpO6Vkt+b7ou7IX9akW3b3Ux6vYU71WPqsaecHP12cLziwxvPgYC994
nfPirRU9vuiRqzvV3Fc+oOepvRjteZWzUl1czurK31CeU2JMn1Pq5hJvRVup
dlZdqedf8KdoDeUGy2ySzlwtczKFO2lNXHqyOlew9JqXWlb2u9xXwV7N8aW+
LDWu1B3FWOUSCxd9rXnxSIuf8OLeS23SO1rOX33pRXNdeRplX0U7Lz6wYm+J
MeWHJX6W/C3nueRXqS+qc5fcXPqSZV9LvdAZleK9X2Gv8o2vn7N8l87wLGte
vMHX+69qd/FJihZQDbvwH53DUb53xcGUJ5c9Ft6rn/2Cnyj+lzgv96Uxpni4
zLWqz691U7mH1jI9f8Wcq97o4mkoHy55UeJtwd4rbrPsq8Sk6o7lOVe6QHGv
xGTJuxIn6lGUeCv+zBeaZdFlJeavnrN8l84Caf+laLQSA4qlmrMvDLmquYWj
lnpX8E37nqoFlIMVHq4YXvo1Gg9f8JNlfqO854t5ReX8Gkvan9WzKj5D6cUs
fc8Fc0q8XXn7yjeuOPaiAa9mfpZzWDC5xLBixcIhVRcsnEr/vvR5r/BqqaF6
5le6rGD+FzlVvmvR4KqLS7274kuvc1jqe3mOxrBioOoF5fxaa0pvpWhG7Ueo
R7TEw8JPyj2+uER5fRWHqje/wGrlM8vsn8ZD0RHq5SqX0J643vviHSnHXt6z
8Gr9LZJ6UNp3eN2v6o7Cb6/6bnomZY/a31S9oM+88hzKe1Q7L/ruipO/1vnF
LOiiHxfcU7606CmdsdFa+Trb4vMsvzVbeILehcbhwhnUt1SvbOEnWvsU9xbd
Xer+VZyX9RdeXWrZMne98LeCS6/3q6ZYfLASP4qxV/3uBWO/+LvyHP1tjnov
y+9WSn28ws+yr8VfeuGA6gWtHV94sIUPvNZQMLzsSzm5clrVCKrBtT++xEDB
/6KzFn1UOMlV/hbPR2tlidUr/b5oriU+dYZEY0B96UW/X/FA5cbK+RWrteZq
j+mF1UVPae1THF44yStn9TcRqlVLbGsd1H/K//Xv6mksvO51nqWe6m+CrjyH
V25qXdM52MIty2dLjhecWTxY5djqMS5+/lX/otydxuoX3q/yhxI/ix+iPGfB
86XX/IWmu7rHgl0lbst79N5LLV602OLjLf0sradXOrRwyMUfXriBPmfx4jSe
lZOUvRQOv/gD2tfQHtPVbInOwGiu6XrKHS14W76r1IWCjTpzUu5o+c2CxvyC
OYXHXvHkpQ5qfKqfo/M5ZS/Lb0kWjF1iRr0g9a6vuKjquKKJXv9U0xU9ot+r
NW7RMotv/IVPW2Jb/RONw5+pQwtGlXqn9/6Kvav4UexaOPbiw6smWtasObvw
cM27kjtLf1Z1q3JXxduCw4XjKU7qfWmNft3XlQ/wtZ4t+F/qwvJdV56h3rty
e60dWteKXlbMLDn+qnGq3xe9cKVnVWPqvS9YtHDOElevmF96CuqNl3Ve3ftV
XBWOV3BSPbFyVgV7VVstGq3osoJdC8fWM9dc1nNWr0Nf69leaUP1JRY+XziY
1sGrvp7ud+GHS5/9qr4ozl/5z+VMFu9F3/M688KXiiYt+KD9I13D4nEtmLzw
h9czF+6her/U2eWcl97uMit+tealb77khd6p3vtSQ7VWLjq08IcFJ8uZLHV8
Wdvy2eW3OQuOXT2n8IRlPeXMS34t619+71PmG18aTT2Wsper/V7lWnnPVa0v
36ueqtbuBccWzlDWUOJBP1vqddmvei/qAyj3W3S38hzlfnrvxYNVvqTfu/iE
y8zbsuaFmxUvomDRcrZXPk/BtNLD/eJOSx18/VvqSKnjr3vX/FXMv8rfq/lV
fU7xBFSnaLyV/F3WX96zeFZXml17i9pDVA6s3u8XXsEVB9DfCJRzXjzh0pfR
Nagm1ThUfLvyAa5i6bU25SeLFihrLrFxhfllPVprCs5/zfOvuJnedZlj0fkQ
zbXF51GNplz66k6Lr7LoCOWZWoNURyz+mN5dqQuK4UuOLxpfa8qi05UXlfta
PJwlBxUPS94tvuLP9Ao0xgomF+9a41lxTzWOcpuC1RoPBX+0Hi37+iJWixen
fy+8d8nNpaYrb1nwasFhjZkFo0rNVe254In2pJb6qBpNufQXd1o4mK5Bezpl
3ky1QOFFi94snEH59uvuyv1evWfBQ+3XlB60+lFXnGqJ/4IDhUctHONKS5Y9
LlpD54Ku7lrvvdTcKx/yixr0RS+1cDat3RqrX/Mu9duXnNKa/gX3K3Wh4PAV
/188k+Wu9UwK53xxhlIj9F60dmj9Xe5U73fxOjSPNA5VU1z9HkRxuHgmrzV/
/XrByataufDJK8+t4Kre0aLTr3BDuXThTupTXXEwrQWqCwo+lPcseu31euEG
yr1Vjyt/XmJ1yfESDyVWi49RcupqPmThfloLljtadKXGf4mHRUcU3C78dpm5
Ut54pcUWT+CFvSVP1etY6pfuUWfyX+tUjFJcLWcimvj/51+pFzqnobVy4cZX
nptyzjIX9Mqvwn9Up5R8V450NbNUaofOz1zxIuVpS20tuKHYq9yp4P/CRTWX
C/9X7lGw6yrG1Mf4mfMhiw+g8y3ljpT/65oLDn/B8Qp3XWqNepiLV6xa46rW
67kVr0M1adlXiQH1M4sO1fe89qWcsPgty28clt5ZydPXe9TX+sJzU/5WuMqC
J2WPX/RirrBU/17i5wpjtT++YHjhVCU3F79Lc6rgZ9Gn5XuLn1z+Xu56yQX1
OpY6q7pGexmKFYqrBStUmyiXVj954XjaEym8fVnPcu/qNakuLvhQzq3oZeWK
Sx0pWuZVr696TIt2K70V9UkWzLnCcOU5yuVKHJaYXLyCwuGVMxRPddHpi19a
1ln+rlx3qa36fPVsy3ctd/Q6Q9UF6l8tWKEzRRqfBc+XuZeFt5fnaDwULaPc
rzx/wS7tDZX4XzBc86jE+XLvV/roKj6v+s6KD7ov1enlewvOLz1u7RdfcdEr
3Ct8tXgp6tVc+YS696sZZuUeC99TjXzl3emZL3qkfHbJBZ37Ve9O686VX7rk
0dUMqvbOrur+koOKGwU/F49IvY4FJ7+YCyq4dKUHFduV6y7x80XNKveusa1/
1/gsrzVHlnNbzkHXWWK+8A3FwwVDFPeKni0xeTWTVnK/YNQSb0stU954VZcL
P/nxe9WHKZpLeZrq0+VellxYZiqu4ke53NXrJY+W3FeeoHVf47bk2lJfSv4u
vPHKd1UutPC01351lvUqnr+YWXq9R/HzFXvLnEzhpeXvuvdFf6nfW85t0TXL
fpVfaZy/vksxRLmo6gud99PapOe2aKKFb2itWc6k1GWd4VEfZuH86l8tGrDg
pObC1UzFa82q76646+IXaR5p7iu3WXroikWld6P1peyrvF+fUzTRcqdLTC6/
jbqaAXudz9XMkuL2Cz8X3rXMyby+S/u5pVdSeI7yIp2N1H6i1k09h1JHNJ6L
HlfO83Vulj2+1nn1zIKT+vsmjYGr+Y2FexRsUY635Hj53kUDqk9evrfghuas
cqTF61jqflmbzs+U9S8xo96OYqDWqRK3es6KIWXNGg/6+iom1d8oc1CF+6kG
+ULHKV9VTNY5mVdsq3+i3oh+V6mti1YqWuCFIUutLGvWeC51pGiiUguucnPp
/RWvaXmm+iRfYOzCMcozC7a/7rdwe+U/rzWUmq78X/OxfG95f3l+wV7t+RaO
ob1U1SOaF4vfWGKm4OfisSw8WT2cRRtqjmjtW+q4ntXi2aoHVfZYMEr3uOg4
1ZtXOveFYwWjvuBFVzG51NOC7dor1z0WbHzFs+q7L+rF4rGU+yp4ovsq9XrR
zl/Es655wfalhupnVTMucai8fak7BW+val/BuoKBunfN8XJW6o0rl7jyXbXO
qu5QzVJqUImBpb4s8aNxpfGveLWsQbll8cGuzlPvUbFFa8Qyu6tx+3W+l/0q
t9Tc13NTD7zgzI//Sq3ReqHvLzGgPkCJf+W3i3YuuLTE8NKjUX6rGK6fVU67
xK3OWb1e6/0Wr2DRbkXDlnp3tffFk1HN8sqFqxmtpTaVWlDyRWcANB+V3yrO
X2GjapAvZiq07/l65gtvr+qaxrPWR+25LB5CyfGFP1/le6mnr79rvVNOq3en
GnnhCVovyn6v+gsaG3rm5Xz+NMw7KW9ZvDL1PRa8WvRdiVuNk6v1a30ptUBz
cNEIuvcr3Na9XM0+lThXf6x4CzpTfTW/pJy5cNeyF72Xxbcp2m25i7IvxaKl
rn2RX3rOWhPVK1A9XnS01rgvtKd6QeX9Gm+q0RbM/NrvLfFfPBzVO2W/isPK
u0o9Kq/LfEipg3rOxe9d8Kpo+QVjtY9T6uzVnJLG5NIfV41Q1qD4c8UxFp9W
4798tqy55FTBxi9yc6ndy53q2RbML3m6xGSJH/UK9HXJ5eLZFqx47UV7GUWD
aB4pHyhxpdr/Snte3btybPVPyuxWyWvFlkUjLDGsmKm1+JVrpR4pJ7/STepp
XGF4wbFy18pnFK8Kt/zCg1Js1J7CVc1SP0pjRnG77F17fOrb6xmWuyu5oHl3
lZtL7dYareemvuWCqyUmtQ+4YMWC+QuvKBpZz1zr5uteCpcrtXvxA5d7L2d7
VesXH7Lckfpg+l0LLy04ucRwqQVLPqqm0Fpf9q55qlxCMVz7MhobSy9ecXup
oaV2Fz62+HUa58qri24qd/pag/oGJVZf6yy1qZyt1guNsZJ35bXqiHLmil1L
H3app+U8F05SsKjw/y+8UK3RhXMqJus5l5z92qMo61zy66U9tX+qsVrqiOZs
0YnlTJZaXM5/uTutcV9w5oX7LXVhOWfFgSX+i1ese1ly58r3K3V/0csF28s6
r3TWUgcV58saCl6p377UuNd6lr6b5nvhz6/zKblfzlZjoMTDVT0tsbRwEtVH
RUsuvder3LyatdNzVq7+hUdx1SspHH7xlxYfSetgec/r+eUeFz5Q9luw+oq3
lBxftKrGQ6lxuver9yj31nq9+CpXuVNqd5nV1M8uGuR1PgUbC4a8nq/96wXn
tc9+hVFaB5ffmCjfLjGweAXKe1XjlGcusaSYoPMP6nGpdtNZAq1xS24uMak4
o9iyeDJaB0vMa05d8eRS65Uzaw9F53mUm5V/Je90VmfhLYu2Kpi29MqXvejM
m87FvfZb4l+1UvFV9HcB2jvW+asvaoTW8VIHXzFcPPYv+gWveL7icgtGlTpY
8GTJWa31ZTapxPwy26C+wRUmK69Tj+jq+QVjF7xdcOaqvpc7LetcOKdyML3H
cqeLN6U8edmLzjSW2NCaousvPcHl/PXeCwdY4nzpx32xF+UYC7Zc4XaZ4130
rL5W/+FKXy98QP1Axf9Fm2gNWnpVr73rzH9Zc/HHCiaovtZ1qoeguKRrU32x
eOmlN6Fzyy9erc8v6/+Z7y+5qfVdOd6yL93j4u8tvop6U8otl71o/0vxVjG/
cMsvan3RKa9719jTOF/usfgwuhflyeqTvz67aOfiHRV8U929xGHZy6KvlQ/o
3hccU21S1qzPL7xlmad9xYPm5muPi/euveCCaaojFr2jGmThG0WzL7PTJdd0
xkZ169X7NX8VS7U+6r50jwXf9H7Le5RHFc1VPEC9O9XFJS+0tioeavyob1Yw
TWfwdA26R/WudS+ldvyu5rs0R7RP/bX2URxQbbv4q1d1YVmn/mZHuYRyg6vf
XKhfWp6z3NGVDi24dKXjlM8v96hYpNqt1I6CFct6VIvp+4uGKp9V3VFq3HJf
yiUKri54Us5h6aFoXStxq/xZ179o7aUXpnii8V98s4U/q8+gMaB8TM98wY2C
S1dabPFAlIOV81m400vflXpxNf/8yqmyzisedXWPV/GjeqdwYK1B6hMWHaq1
YOHMismqJRcf78Uhr/R14TaFe5fc0bqs/SPlUV/0Aq50XPE5X2vTGrd4lcu5
aXy+9nWV+2X9r9jTWHrdi/JnjR+Nf62PpaZf6W7FxvKeZdaonG2pa4vG1Hxf
ePgX88BL/up6lHMudX+JmRenXbypq/i58pkLDixaXnOn4ExZ28I5F4wqe1k0
ZuGr5bsWP1l9mLKX8szCkUqeau9j4TPqjSwewhXfK2eu+1XfTGuB5r7yZPVa
9V50tkp9zrKGhedf9ayXeynYuzy/aJDFCy3r1LvW9yh+Fi2zcGCtQXr+5d6X
uqwxU7TnMgO2cMIyB1jutODAFacqd6SeUpkRUv9W9anWlKKLNd7K+q+8EcWH
Rcso1i18vuSdYsuCjQV/Fl6k5/ZFXL20qtaCRUsqxmpNL/dSYnWZB3jFpM7Y
FCxaYkC1xtVsW3n+63xUL5R6t3iwymkLF1Keo/GpuPTCYe1DlZ7m8psL1WhX
XsdSo0tslHmDq9wvWLr0RpcZiYKrWkNLnn4x77HkoOoI5Ydf3JHqlwXbr+Jt
4dja177yE15nonrtKq70PEtdXvoyBWPLGer5lBqk2K54q1pAtZJy49f6r7Co
1EGdDVZPYMET7TuoT6X3ojWo/F1rgWJm0RFXPcGSj4onmu9X9bSsTTl54Ve6
r6XO6rmpltdzU6zTs9L8LdpZe2qvGL7iEoUvLX6mYs4XPQs9w1fsKZ6UvNZ6
VOJf42rB8KVWai0r71ff8nUX2jdR73HxS7WmqK7/Av+X2qq4t8T5MoeznEOp
7yWeF11TMFzPp6xtuQvlZiUvFs9cubdyicIrFj9cfWnV2uWZJRde5/bC88XL
XXJcdYpyyC/w82p+tdyRrkH3vmjPq56FPnPpKZQcLHMput+SU8pvNa9LrVxm
QRddufQvFk+vnPniPSrn1zqy4L/yvSttrhpBuZnGTzmHgjNlj1/ngta7RdMt
PHnhSGUvpTdR7mvRYqWulTxSTFAuV2Kv4I/OfJZ8XH4vtuCz+iflmQt+Lp6J
9qQUK8o5aD5qj+wLzLzC6nK2mkcL51xyquS+eh0aP8v9LnxMcV61pMZkidWF
1+lchM5XqG+v3OwLn/YqPrX/tcxRaHxqLrzWoNxYNd2VB7X4XcrflrxWXa+f
/WINeqeFyy097nI+Gs8L915qTZn90Dgp57nMBanWWHjLwvMLJ1fvRXF76R1r
fb/KlwWXFu5Uat/iCV/5TqUWaC9M/cnC2UpsL7/l0VxbtLxqEMWoEsOLT6v5
eNX/KrmgekQ1uPatrjC21OvC90rcao1TblDw+ZXXSw6WcytcQtegr1WjKQ5f
YZFq0tc5K29/5dHCtxfOvPx+reSs5leJMeWEReMU/lNideFyyqlKTVnyRd9T
zu3FnZSjlv0utXLhnKVuFmzXO114/rLf1zp1HuAq15RXaIypT6v1q9xp4R4l
fwv+a59Oe77KSbQ/Xs7t6vdli79UOPbV+S9zFMrNdA2Lh1zqS8kRxQ3F54Uv
lfXoPeqdvs6wcOaiGb/4rUHhe1c9L+UD5bckS0+qvH/BzyvOdsVDdN7vhc+6
31KLyxrK+WidUt+p3GnBitIP0pxSvqQYrr6HzlsqtpRY0tqkGLL07PQ5V3la
tMkV71p8m6IHX/+WHuJVbdXcWWZIlEdpXujsetHXqisXXCpcQs9T+xFLLixr
WM5k6RGrz1M88IJLrxwscVWwQns6eu96Dld1auGiV/NCix5UTrj4pbp+rU1F
j+uslGqrK/6v8V/ycdHsizYvr4snoPpUOerV+aunsej6RQOWGlTer3en9VG9
FK2tyuGXHt/yupxtqbk6i3IVG1ezYepvqGe47LfcRfGX9EwUtxefp3iJhcNc
8eSS1y9sVP3yquk656A1Reuaeibl+apTFB+0Ti31t9RNjY3i3ZW9lN73UkdK
fJb4V+5a4u2KVyze0eIvLTmu+LPguWrqpc+7cNTisSg/XHpP6mmoZ6JYVDjG
Ff9c6ovyT8W65bMFQ3QNV2el36V+kXqeZV/KjYtGKM9RP2rhySV+Xvsqay6x
XWrBUrM0Jpcex8KH1cvV2V3tbRVfQj1Yjdvf1f0uermcZ9EmqhkL91beqN6s
9vvKvhZeWuKw+CflPUUDLjH/RZ9C8+V1JroGjUnV5opFJX81Vl9rW/yQrz20
RWuX+qK1vtSa4p+U7yqcrZzJ4n2Veq3PL7Wv5GCpTcoN1FN94Y/W3Nc6y/lo
DSp1XPWO8rSr+CxxdeWjLlhR4uGKa13dr9avxf9Ujqd5pLxi6e/rPX7hLxUM
XLwL5QBlRlTPqnD4L/SgerBXOLZ4EYrVBbeXvskVb/zCQ1N8Lrpgiefl3gu3
1Pi54iFLPmrfpNx14d4lDpWzLRxV+UA5w4WTq8Zc8Ed19xW3VBzQvC5+6ZVn
WPJLudbV/WrtK2vQunylYUtMLrPcRbeq3655p3XqynfSXCjxpr5f+eyiB6+4
q+LYFx6X+idXXpPi1euzy5yD1k3lwFczGHr+y/mUmC9xtehx7Tle4dsX8+fl
nPVOy7ldeQUF55eZNJ0RWjyZhZtpzJdYutrX65kLZ1i41tX9au0rGmrReouG
XWaZrnp5ismLv1T2u8S54syVH1J04rKvRX8tXlmJ2+XeVTurT6L8reDV4kEt
ukD586I7dAZJPd4Fl4rvccU9lAO8tNKCIUvtKxxA+duiuxevYPEDy3cp9r6e
X95f4qfEhvqNCw9R3lj43sK3S81aamuJ4YXDq5e4cJUyj1dmmYreUQ5Z7nHB
Q8UrjfPCJfR3NIoPS5294thX+FnituT7lY6+6rUtHpSus9T6xdMuPFznSbSO
X3mYBZeu9I5yj4Jp2u8oGFL4WImNBQNLnJczKRxJa8qC1RrDes7KT4qeKhpQ
47/wkGWW5gsuVz67cNHynFcuq5d4VUNfMa93p9qn5Lj2jMq+NAY0R664merE
4ofoOSs2LrGxPLPErfp7VzqurKfE5BdnvnxX4ZAa86rpyh0VPrN4UyVPtUar
N6t7V25Wav3C4Us8KAYuGm3hRZpTBZPVa10wSjXU4qcVDlxiQHHmtS+dSylc
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
jyr7WnBm4WCqB8tswNK3fcVYwSvl4YvvsWBCqTvKTwoOK84s/8r3as16PV97
Oq+/l9+vvWJgwf+r2RLFtJILZY/lPDXOy3rKvhRbVNcvfpHi/6LRlKu8aqjy
58UX0hhe+r8LH9BaVmYbVEsq5y9zlUuuLVxu0Q6F6xauWHSx7rfE3hc8qmjb
Ky9IOViJgXKP6qUserP4olfezsJFNV++zsHCi7TPu8TwMkNVdJDe0aIN1Z/U
NSiXLmdytWa998U/VPxXbr+sRzle+d5yF3o+qmuueqkvDF/yusT8a80LlmqM
LV6x1kfVRIXDlFzTHCzc+Kr3rfFccLXs92reePHHrrTtF9hSzlnPRHvQyutK
3CrXKjVFeeNSr7/OwRJLWnPLetQ3LrXjSjuoNlQuuuhuxaLC51WrLve+aL1y
L8uMn65T/aIlRxSHVX8p1ikHU79C46HkxdUce8kX1XqFk5Sz1V62cqpFzy5+
l/KTJZ6XmqLxXHiv3q/yTPUZFj9c4+HFN0o/seg4zd/CQ5b5FsX/L2YOl5zS
e196Xrr38hzliq89ao1YfAPNL8UfrUeK4Vd8TPmqapmynmXOSrHrtX7FOsWE
Fw7r86+wVM9twecrbXvFHxTfXnenPF9j70qnl/1qbJT4LLmwaJYSP4pjhTsV
3Nac0rMqda3UFPUBtN4p/pd4Vowq/Od1DlczeMssnNbZ8netd0vPq2CdvmfR
iToTohp/0VALxyi+X9Hvy5xbwYrCGUr+6pzVEs9XvtBSK/V7F0/vVfsWLF14
neLzF9pWOYPyvZILWpfVq1Ff6Ep7LnGi9feqr1r6XwXHdA6w3F3BrtKPWDwf
ncG7yt8Sq0vfsJxDyZ3FPy/YWDh/ifPCIZfaVHwSPZ9lbkpflzXrfK/yCvXQ
CobrGsoey/cunLPke+E/V35X6S8vHs7iC2ksKf6r3tHZtoKl2tst8aOaeuF+
ZTbv61n3q9caS+oJq/ZUvvS6u8X7LWd+9Rytm8oNSv4Wnrx4PkuOlzUUHqW/
xSjPXNapOlo175KnV77Tok2WfCl4stRN3W/hluoTqn5cavHiCy3PV657pUHK
fanfpc9f6ukVt190q+apametfUs9Lfd+pQGveGCpEZpTJZZ0bT8TbzXX1K/Q
3/6UZy65pr7Qq25qX0b5p9bHZY8lx5dY1Zq+xLlyYOVCqnnL+/VeFBOW3zEt
voTiwJLLZb86F6HYXupjeeZr/YpXql90v0v9LXmnOq5g4DKT/3VtLXenWKR8
o+DAlQ4qvHHh2F/4jQsPVM58lXd6X1prlh79MrOh3mw5t9c9XmFCwb0rrNA+
/ut8lOuWPWoe6XcVnb5of8Wxcv7K/Uq86ZzG4jlcaXblriUGFjzROFHPR/9e
eEXRywU3St4V3F708uLhlDhX3quYWWJY13ZVW0tsF323xKdqvWXmQXO8zICV
e1eNtuCJnr/eu+adapCreYDF13ppRl3PorWvMKH4G0u+FN2tsbrE/yvvrnww
5VdlzYoJml8LV9QYXjjhFxxMfcsSh4uHv/TvFo/o9dny99f5LP2+xdPQ2lQ0
Tplr1fnMRQdpLVNtpXe0zN6X83zVi/Ja41O5imp/nYso+nfhV6XOLnii56+1
Q3m45lQ558XHeO132YvmyDLXrZigWkPzpcR2ib3iS5T4V/xcsFrf88rTq9zX
vNN8Vy9F41n98IWrK9fVeZLyvYp1Ov9cYqNoVe2DaI+v5EhZf9ECC9fS+Uz9
e+H/6geW81x0kNZWPdurfkE5H+X8X2jhK32hOLbk41Wf9EqT6noWnqz1Xbnr
4j9c+TyvdS79C8XJBZ8XjqQ1QnO5zFld8Tr1db9Yj8aw7nHhukVPXWGU+j8l
fgpnW3TZ1VzQ1dzOwqmW+R/VC8vcTvFbCm8sXEh511JrrjyfxXtRbn/FkxV7
y3ku/Eq15BV/XjiwerkLVisHLutRrqJcUc+8YP6ifxX3SuwVHlXyTrlNwedF
oy29vGXGQGucau3Fn1nWo3ysnNXrPVqLC4aUer2soczB6r+F/ysOX+XgFWdW
f3jJzcUXWjDqdf46+6Sc7YrvlbUpp1o43sJnlO9pvS4c4Gp++IuzLbFUaoGu
ofCZJd8Xv0vj5LXmkjvL3LWe7bJfxUm9O+XkCx/T8ynavPAE5XWLhir3VfBK
8f+KixZsKWey1I7SX1Bv54vZqhKHX2uEL3Jw6bMrzpT5DfU8X3FSNMiiHRYP
6up3c8oHrvwT5aLl/UW/aC9y0X2KCUU7L3V5OdvFK1att9S+cteqKZY4WTib
/lZIvZervrPi5OIDF07+4vbaF1t09xI/mstLnX29X/Wa1qwrX7Ro/EWnK7fX
WdPld53ay3591xVXVO2/5GCJQ+1xF6+g5F2JH+VvGm+LXiuY8DM5Z+E5Wpf1
7jS2Fx/yav0L91Me8qrLSy/jSjtoLl/VPvVkFi15xdnUz9SacuW9X+VjwbeS
C/obH91XuQv1E0pduNIIhRdd/Tbhdadao/WsNL9UCy91XGd4NHeKLis5fuWf
X/k8r88WP6Rg0cIJX+e/8NWC7Uu8qXek9eKKcyquLlyu3KPGttampeYWrFO/
Qvv1qgcLB1u496KVltqnNeUKb680S1lPwUzFN/Xel3wsZ6u+1hV/Luem81H6
XVcaYfHbFSsKZ37VkRL/qnk1/heeqf0XxTf9HZPObyiH19mPK5+n5EjhEgXT
yl2XWCp8teyx4OdV/VWv9Ypzlvry9fOLTtf6qx77FQdTvlq8rOL/lNp9NfOz
1KDlrEpdKNi+6J3l9Wv9i6a+qnellikfLmdb9ljyYunLlOdfafaX3iy499qj
Ylo551J3llkj1fILx1ZeoV6ZxtiCOWX9C1/Su/vivkqOXNU7rblLXJW/L/Gs
9XfxWtULVY2zxK3m1xK3i1+08LEvdJbGyRUvWuJ/8ZnLXjSXlxr0xaya3vvV
jFCJyRfOLz5byTXF84U7LXekMaD1UWOjcLzCG0utWXJT11x0onI55RVf9JVU
u5VcLnVhyS+Nc72Lclbqc2qO64xT4Qmv97/u5XWnVxpt4avqdS+4vWh8ff7V
bF65I9VcSw5eaXzlJFecs9RZ1aSvu1NN8Xqm+tuKPws+X937lR7RHpl6s8rT
rnTfVV/m9czX2Wr8K84Ujq0aUHO/xH9ZQ7kv9SEVu0ruFGwpPpve75XWKBpq
0VwFN67uSGNg0f5XPoPmoHLgBZ+VryoO6xy+xoauZ4mNsh71mZcarbmjMbbk
oGrAL3oQC796xUw5T51DKOd5FZ/lOQsX1d8UlDWUs1p4juoOvYulL6NnvvgS
yl3LepQ3Fo2vHGnpZZfXS50t3OmKS+i5LVpDZ/OKp7r4BiWuFA+L1l7qmj5z
0RFX2mrBhHIvC59XLrScf+EG6lWWM7matVZMLhqk9ODKHkvt0z6Rel+F4yme
LBxDfb+Fr2p8LrG0cFGdT1Bus+SU6o6l/7hoPa0R5bOldpdY+plzJst+9V6W
HFHedZVrC6aVvV/pPj1/PYdyR0uP4BWrhWst8y06C1HwpNxR0VY//lv6oUvc
6t41N3X+TXPkSicWnCzfVTB5wbeiv17vL7xRPT31ZNSnKvGpfK9g9aKdF61X
MFBnG5b6/sIorQsFHxY813wpufP6rtczF/2inOTKH1AfQzn5UuM0ZhR/yhqW
ucEvuKvqzSstUOJ2werFz1n4g77WXv8Sz1cxVrTDgnXKGUrcLhpK8/21ZvX/
Nd/1jvQcCoaoh7zoL70LnUMoZ77MAmmdvfIlClf/QustOKN3rfhQ9njFVzWu
rvh/2Zd67wtm6nygxrziatF6RTsUf0Z7iFrjyvq1TpUcWTCh8IGiJZX7qX5U
/VX8nIU/LJxzeebiBS1zR6Vnp1hX7qhw0VfcljN/PVO98YIJOtuzaKVSX8pZ
KYdZ/E/FyddztO6Uu9bYe63n9Uz1ChatWta2aL1Sm8p9qYbV9yxnW7Cu+GmF
k2juLHFVYlUx8/V+nXVRraoYW/ZS7mLprX/BLQuXK2tQPqPPVJ2ivGLxUZVD
LjG23Evh3ssz1R8oPL/UWcXbsq+l3inOlztVv2XxOl7rWfpZi2eid1HOqjyz
aMyC82UepmBvyZ2lJpbnX/nhrz0WXakeRfGIFn1XevfqSy+eT8GlwgEWPqMc
rKxn6fcV7rF4Poq3irGLj63vX/a43OPVHGCJW91j0SkLt9d4UP1+xXWXmF/m
03Q9xf9XH1h9M81l5UuvuqnfpTGm3EmfU3JN5zTUM7ny4UutUV50xevKa41z
xYqFTy6zDRoPV7N8i2ZRPFSNqc8s61dMW2rQMgdYXutsRqk1yz0qbiufUY35
RWyXPSoHK3tZ6kvxDRZPbLkX1ddLz0J57zI/vHhl+kytRwsW6TM1DgtGLfW3
eGXLfS28VLnl8szClxa/WrWtcm9d58J/VKuW/mOpFyWeVZ+q/i15vWjP172/
MFk5ktbxEm+qJZUfXmmQkmt6tiUGXs9ceEg5h6/rtc6jXsX24nEpX13OSnms
Yoj2LFTHlb2UWlDwfPH3lvwtMbk8p8Rn4d7LMxfPU2vfkpuldnxRH1+fLbVP
9dQyq3k1A/O6X32PrqfgofLekjslj8rzr3h1iTG9R92jYkKJ2ytsLOtfeELp
rRTOU/jt0vcp51liQGe3lrsuz1mw+soX1f0uMazzCZrjpXZo7Ssc/vVv0RqF
t7yeU85H422ZW1Btvny21A6tBdoH0fmBcs6LvlCvoGC4vr7CNNV6X8eS8iL1
GMt6XvijvfXiA5dz1tk59eJ0TrU8v3AD5Wnqqyy676oXoO+/msMse1H+8Pre
V44U3Fv8t4WT6PlorVeNv/QvlLdoviy4rWvWM1RurDi2ePtaT5d+hGKO5rjy
kC80ftFKWqNL3SkapNzjlXYoObjUwaU+6l0v3OAqlhYcWO7xigsV3fQFhylc
d/HnFcfK2hYsKjzk5WmonlXvqOTs6z1ad5Sbqff4RW9xySOtL0tMvvarPH+p
vwVDFh1avPfyTzG59Hk1rws3UK2n/m2Jk3IXJQeXGrdwfuVdi+5TXqfcTzmt
4vMrJvXulDspr1OPa/Ehl3wv96KxpPd7xZ2uuOLCkRYOc5Ujmo9lPUstUOzS
+WrVHeoJLD3QUhNLDJQzUe+xvKec55JfJc6VL13luOa1YrKu+WoO84vfCim+
KQYWPqBc5XUOZW1aQ5ceq8Zt4QDqARYcu5oV0XxXvvrKl0VfLPe4eBRf96yv
9HvRAoXPl/v98bP6W0LFeeUei69basGiL17r198Tlfu68ifL+q88hCs+ozp9
yRHd16uearxd4aH2OtWPLdzp9R69lwU3Sm3V3xYpPpe40pq75HvxHDT2lJdq
7VMs0tpX8q7k/hK3xVcv96h5Ufiw6v2CMy/t8OIh6j8sdVA555KbX/Ssv+jz
Kp58Pbem3Em5x1Irr3RHifly5stcdDnnLzyKxUMo6yl8RvWyckudvy31VOuR
4r/GgGJLuV/1TJR3faFZ1EtX30C9mvJafbBFi33hz7w4pO6l5HWJ+Re3KfVd
c0prytXfr/rjX/i9WqeWObGFU5XaoVqg8IGlZ614XuK8xL+eScGlwgmLb7Bg
xVIry1npvZT4X/q/Wh+vvHTF+aUfpDxQOZ769kv+Fq2kOKx5rb1CxRPlpa/n
K9e60iyqp36mFnv9K7V40X3LTJdyDNXUioFXvVf1QJT/l7te/r7E2ytPr/ze
r/n5i1cs/5STK7/SvFt6/cU3WLSw5l25d+Uz6rer51Nqpa6h3MtVHmmNLjVu
0XRf1I5FR5f3L3N0S/904SQFqzWvF/6sPqT+hq6cVdEOy9oWP7xg0aLFdLan
3FfhIUt/ULnokvt6bssZar0rMVkwQX2MBWN1zuSLuSDV4Iv2LDpFfbOrGWDF
UuUJV3xAa5bWpsL51TvVM1lq4jLDo6+X2YyyX9V3i5e+cOZS1678qCvv4nWG
6iPp/ercr2KR8ucFhxfOecW9l/sqWr7U3KvZmEVTXHGkEldXPF99D9Vuy9mW
syqc5/X+ZT5KZ2C0FisHKzFzVWcLD1Efr3A5jQ3F4at5JMXehQ9o3JYaV7Cx
aGrlqyWWSvxoff8iF670jp550arq5WrtWPp3C49SX1TvWvP0Sjurzlp6pgWH
1UdaOLw+s9zXootVL5d81Bh7cZjCIQuuXtXBEuelDl7l8pK/Ove7+G9ad/Re
yv3qDMwXPo9i1BXXLXFbzkf54TL7rZpr4QNXrxXPte5rTVn8JY2fL3JB9enV
/K3y0oJLqnP1e7VGa9yWulnuTvv1ix9bsOjFCTW/ilewaJCFA6gW1ti76iEq
T9M1lzle5bfKt5e53FLv1K977bHUBdXFyg/L917N0RWd+IU2LzG21OsSt4vn
s/C0hVPp+wtOqm+jnsAXZ6v4v3gaX/jVS/xc4dUyG7PkftnX4i2Usyr3qPp0
4b3KN0ptXbjHonOvdLrOgJVnlrtYcmrRDuXfVYypXiiasayz6DXVeuXvL42j
mvGL2q3+5MI3FKuXvpLqprLOJb80fhYsXXjIEntFv1/Nti21uOgXnT/UNSx1
SnviV57k4lcv8VMwU3NBc017rCU+VUcU/FTOX2pfmbdU3lvWv+RvwTeN2xI/
V9pZn6/Yq/hccPvrWbXim13pxJILGg+v2F68msKxF6xWDlYwrfCugjOKLeU5
V3NZqpsUozS/FG+X81y00nLmi1evPq36b0u9XvSp5qDigO5R+UmJ8ysupFpP
OYbmWqk7mvv6/GVGSNezcLNy19ovW2JMvWutp8q99fnqkxfsveLtyjP1LpbZ
bz2fckeFxy698nLvi5ZceEjhA6V2LzV0qY9XfojW7uJrlbhdZssLthStp/Gj
WF28poX/6OvXOZfzXHiL1ujFJ9G8Vj27aIqlzmoMlJgsd7fgmM4sKdctXEvn
A4vHUs75qu6XulC49BJjOpNW1qP8QfNdvc1XDOg6lb9dcQDdb3n/kr+l57X4
z+r/FD9HcXLhIZrvS21d9OzVHFGpEeV7tX+tda3EdvlswSL1nJd6vayz1MFF
ayy+zeIN6r28+Nuiy5b4VE2xYNESA4rPV/xW9exyL1czGMvce4mTpV+5zNho
jBVtVXiLfu9Vnhas0/gsz7/Cc9UXitvaC9N8UVy6qjVfa/DlbBcPQfO68HbF
lgXnNZcXHbfgXuHGVzW03MXi/1x9donhRc9qL6nUryvOUHyqkpsanzrzsMRD
0USKXcs5aJwrbpf+neoXXf/S9y/+Xpm1U25T+sLaZyl156UHF3268OdyR6/9
qod85bmpV/bSMq+/K25r3dfvep3/subCoxYNvqxz8RA0r0uMvXJ26ekX7C25
XPi8rkHXo33Yqxq6YEL5u362nL9yJ+0RFyzSeyn4r3vR2SGNz6uZQI0HzevC
WxavQ9esuubF0/RM9Ny031TWWd5TOMOVni28XV/rfkv+Kn9ecuG1ZsWuJS9K
Dbry9lUXX3n15fm6ZtURpeYunKT07NSrX+76qk4tsx/aW1eu+/qugtUFB7Q/
rndXzkHf8wXvVUxYzkr9Fo0N9QcK5iuXLvFZauiCaerbFNxW/0T1xaJxXt+r
/e6FLy1zmMv3Kpe74l3ljpZ1Ks4sWkzj82pOTLl6OXPV71c1bqn76tUX/FfP
WWdW9S60Z6GeoerlKz6jdUrvaPF+9bOLR6rcrMS59uCuatkSM1/3cdQn1Htf
8HmZoyg5VeJEe0l6zuV7F85T7rS8v/xd/YeifxUHCkddON6Sg1ecU3FD8bPE
uXKqEmNL76bwKMXzUn/1+QteLThZalyJB+XwV73y4jmXfFl60AuPLWtTTFBP
QPeuekTn2BdOW7yRK7281KBFzypnLrW1xIziWDl/7Wm+1qYene5L5/BLDGsd
X3RQwV5dp/7uRucSr37XUzibamGdtVjmkZTDKF4teFjqwjIvUc5wyRHFZNW/
i5euZ144vPYXrjTREueKvQXDy/zA63yueq8aD1ecTXFA/QHV7yXHtbYqL1UN
q17xUrOWun8Vh1fapMSVznopNyg5XniCYsjyvUveLZ6AaquljhesKPhWsPq1
r8JVdO+F8xQtrGtT3qX48zqHwqlUm6s/Vv4VLVl0on7XFxy7rHmZ3bryGxXH
Sg298nI13tRPLjlSPPBlzVoTy2df9atwsyVH1C9aNNQyw6D8ocT5wgGUQ2rd
L3eqOaWzlFfaU7FL41k5sPINjeFyngsuaV5f+R4lrhQ3lAdezQQuM/+Kb7q2
BRNe73nVkYVTaQ0tnkPJEa3veoZl5mThD4vuu/IxSp0t+y19EH1++azG2Cve
9P3a4yjYtWiukrMa84qT6rdrHBYc07pWtM/ynLLOV5yXeq0YsuxLY6nUGo1h
xaWFH17F89IPXeb09NwKLul3qZ9QvBTlxoobC7dZekPqhyzfq7F0tZerM19q
5eKPaX1ffLAvzkTPf/EoytrU61t02YLnio3ac1evSed4S8y8nr/oIMX85dyu
ONtSs/RedNZI/aiyx2WO68o/KeegnHDpvS4eyMIP9XcfS11+4fByj4o/2sdX
7Hrd9TIzX/B/0afKbZY++6vulBwp2KLcrLzWvRRvULlT8R61Liy/zSl1UDmh
flZrinLI5bViV8FJnQNRPFdfVGd6r3ToMlNa8lfPR3FA11YwUzlbwaLlNx2K
UcUXuvINVK8tmmKJ5/K92s9d+kqFeyy5s3A29TcK713wc6lZi+d8VafUs9U9
ft1X/ZkzwAVPvsAx1TJ6R1dcqNTEpQe38NWl7ut9LXNBmsvKFRdvtnCw1zpV
I5Qc13UWHao6vdTZ8v6iYbU+Lv0CxfPCDws2Ko6pvvtiLmvR+Iqf5btKPJfv
XbjBgvOLvtZ40Hqx+LdLvmssqU7XGlTOWXFv8YGveIve48L3Cn4qb7/CsVJD
F86jcyBaszS/1L9SHFMcKGfyyp2reYOFeyw8szyn1J1lRn3xJFUX6HMWLl3u
q/A3PduiBb6IW42fK/2unGHxo1TjF15XcrPwxuKV6VzBwuuu+hTLOrVeKAdQ
fFh8OfWpvuZ1yxq+8PH03K76qsrJdc0FwxdfveRswfOCk8pdX/stOFb489IX
WHjC4tUUfNMcLxxM41PvV/lVwZPFN1g04FXuK/4svS3d4xJvJZa+iJ/Xe5Ya
VHj+ope11hT8/EJPFQzRcy77KppU+xRXXKjEoXp3pXZrP670fcoZfsHfljq1
4NuyzqUul3tU3bTk1OIvFV9dfaSlL6D+8xU+aC2+4u3q8yz6XfelHEb3q3ii
+lrjp/CWV4wVDaj5uHCYUtcWzCy8RbH9Cus0frTHtNQg5QBaQ8u+Cp5ffZdy
lZIL2o9YZraXObFlNmap40t9VF+07PGLXsZSp4o3Uvj/FQ6UXNC6pjGjOXXl
LSv+FK26nGfxnxdOpXdU3qO8vWjwUt91lrvcxVUdKXss9aV879Lvu8Lbgv+a
U8tvK77Af+2bFO6qPE1xVWuN1ogSA0vtuDqf1/eqH1i+S+vdwvO/8OTL3hf9
uMTS17W4cICCsT/+05n5K26v97v89mfRDoUnX/kJ2icteaf6TrnQlXe95ELB
E33OleYqZ1XwWfsUC+fUNS+6XmOm+ANaK8uaF7xVrbfMSH+hcRTnX7VYdaXW
6MLhNebVv9W+7VXt0PNRbaX7Lbps8R4L93v90zst/LzktXpHxZ9UjF3eo7qj
rE1/U6b6V3mmannl/6qbFj2+8C7lt6/8Kvx/8UsXP0HPVtdw5X8uHKC8p9zX
ws/1HJRDXs2Xlti40mIakwVDFq5SPIGl7qjGKd+rWLF4LAVj1ZdWj2K5i6+9
6PKcxdtZdKXW+oJjOpe41JdF6y015YV1ql+Wf+VsF75aZksUk4tu0pzSGVfF
jaIfl9go96taT+uO+jAL1yq5qf2aF2cu569nsmDRoh2Uh+jfX+egvtOyd/Uh
y3eVOLnqcS91dlmPxpXyB32P9qQUq8vcgmKp8quyfuVXV150qUHqeZbzf32v
cpil9n2NvYvWW3w85T/lHrUPovMPOg9Q9q69IeV4JafKeWq/tWgonZcoPQjl
kIonS77rPJ7WWY23Kw5wNdum+nfBh3ImhUuXXNM6WD6rfkupBS9OvsxaLHF1
5fvpejQ3dd5D67Liv/I0fc+V5rrCFvUxvrhrxfxSK5UrqjeiWHGFvTrDU7R5
8fGU/5R7VD2oukC5+qLRCv4vHG/hG4pLpaZfYUup3Qt/U521YK9qkKKPlBMu
+mLh6ks8lHPT+NecKthb8ER7HOVMNMZKzbriLS+s1lwrz1lqeomH4mFe9Sn0
3pfXC6/TPRZsKfFQ4vPqrhXzr3SlctESn1oHr3riWtcWzVuw8YpX6PrVe9Ec
Kfde+HPJ64Ihmtdaj5THaty+cv+LXljRWYvfXj5bON7rPa/3LzXuKhc0Hgo+
XOmpReeWsyr70n6B8p8FHxbM0b5/wVJ9/tUMhnovpT4WXFLPUHFVed0Vn3nt
S/HqytMo51nubtGVmlOq6Rav9UovKLfUcyte2TKz9AXvXe590Sa6x6UXX7Bx
4atX+FzutHgj+m/hFarBr7hTiSutZVe5UM6t3Iuus/B21ao631V0jfIK7Q0V
fqv4UN6/aK6rGSets2UvX3D11xpK70y58aINdW7wql9zNQeo9Ut5XTmrJa70
PUuNu/JqFt6o56b1S7nB67ML711qVtFEZf3lPcVTVT6vHKDk2oIJGmPq/2gd
1LmCEpNX8zyvONec0t7Kgv/ax1Q9opijHO+qNmmdXTzkMpdV8OGKky9xUvht
ec/iUS9aW3n7wrf1bPUcCoYUr7ucg/aGlni78uqvNMjCkZRPvmJs4bFa00v8
XHH4opHV51Fvs+Sd1p0rLaBYpx6F1ibluleaVL2RhUuX+1V/4GqeR89EuWXx
VRZtorVDNchSy9TP0dpU9lhqQeHGCw6rh1OwUTntsjatC8XPWXhOwVWtNcV/
+PGzV+ew1Pol7xa+rZ7Ji1cX3q6xVHisztWUz17VuMLHFmxf7lc1Tlln4eSF
vy25sPi9iv9X+aX9ff3ekke6/kVrKJfWe1nyt+xRMWrBq4JdBW8LRqmvsvBt
9Yq/8M9V4xSNrL9lUB61eKrlrksuL15cqQuKb4pjS9+5xG3RKQu+LZytcOaS
d1fac/EHFi2pubPM1ejrwuFL7midKth+5b8VnCm4Ue5Ifd2idzQXvogZrR0F
H/T8df1LX0/XuXB4xa7Fry7rV//kay63vP6Cw5faoV6K5p3GSTn/wuEV97TX
dhWr5R61ZhUvbuk16Bq0H6R4u/gAiyev56De4NVvBov2XLTA8vuaJXeWe9dn
6ryBztssv4VczkFzXPmhxpV6m1f19CpmFtxT/ly8naXuLHdX7lQ5rfY0db96
Fz9+l/Yrr7jcgntfcPjX+ahnWHCgcD/Vd/p6wVjttRUfRn2Pki8lR67wU2uN
4oDmQjl/5eqlPmqMqd7RZy56ucRqOYcX3hbtU7BCtcCiebX2vZ5fMETXVs6t
PH/RR1d1UPs+hYeXGPiZOuWqZ73UfeU8JaeUAxSeXLio1h3lQhoPZc3FQ776
DU7BqCWevzgr1WLlrlVDLb8V0vqr+yoYqHii82/l3L7G1cIxNB4WTFZs1/hf
+M+Vxr+q9YtmXO7xtRfNI+1HLDNjV3pfdYSurZxh8cG09qm+0/gv+ujF8zXH
v9Ap2uv5gjOrvivrv+pxKE9YcnzxZktsfOG9LzM2X2BU2Yue1RUfVl+ocJiC
nwu/1bNd+l+v8/+Cuy6eqtY71WgFG0vMKK9b4r/wnKvegeJVyfGCFQWvrnzs
klNlnfq7lYLzV3p/4QxlbYpLijOlD6icoeBYieGiZfT9VzplmUcq3K9w1Kva
V/BTexxXdUexS+tU8YW07igmLJxn8eWuavHVrLXW5VLfNRd0Du3Fb/VeFjwp
91J4e6m/Oje4eIaldpT1LzqreK1L/Bdvp9R31eDam16wV/3qZfag5JRyA+0F
l/eoFtDYLnqw+E5a73SmQvF2yWXFnKXm6vcuXLF40YvXXXDgqn9RapNq+aXu
aA1VLbl4LOrBKjYqRmn8L7V48WA1fjQeFqxQzNRZRPUTXs8s/EdzbfFLv9Ds
iquqTa646xfxpnG11Naif5cYW3JB71G10he1WOOw+HJFpyjHK/VddeXVmStX
V+69eDJX/L/cta6h3HXRSppfOh+rsbfM72ndUXwrsbR4ucvdlTsq61Gfecm1
gj9Xc5iFc2qNuPJdl3zU3Cl+1+JrlVy78qAWzb7w4aX2KWdYsGvRXF/ou2Ue
8hVjVxpc+0G6l+UeFy9Xe9bK4RXTyjoX7amcWblTie3FD1QeW9agvYOSayUO
i5YpHOD1fvXAtTen96V5pHqhrLk8f9HRr3h43ZfuXev7oh+vMK3k7+JfKV8q
56mxp96C1lblSwu3v/KgVKMpr9a9a35pL/Iqfxe/VGNAz+rKM1S9sPgeZS8F
c16f/YJblrUVnNe9KC9dfIziqS6vF92nnFZ13IKTmneFK6r2/8IH0JhctI/W
FJ3D1J7IF7pP872srcSt1tbiSyim6fdq3GqcLH2f0otcfDb13pU/qy7Wvv8V
B1AcKP2dknflrr/O3yu8LfquxFu5l1K/Sn3RvSy+R4lPvZcrbqnxr9ir8an8
XLGuaKiyx6XWLJxWcX7BST1n7b+rnl3q7IKZVzhQ+tGq9/U9Os+/cJgrvq1a
TPWazmwUPlbWVs5W/QH1PxftrPhZMPxqbrzknWqBxWcuPliJ/6JJlWMve9f8
LfVC8bbEiT5TZyQKz1T+sOSm6pSlLiz+hs7fLl7TUmcXL0vzopyV1prFt1m4
seKk8rEvtJU+fzlPjfmlLms/evle5fOKsQWXCr4pdqmmWDie5sVSp15/V8zX
e1/q3WvNy2vlGIrbSw0q+1UuXWp9uaOCLYuGfeXy4n9e6dwrzvb1XopGXjj2
4rFoXSh1c5nPKZ5DOYcl3sp+VYvpPS5xqxp/6bvp+WjcLj2g8lnVxSW/lA8X
TqV1ufS5ir5QLH09p5xJOQf1ajTHdT5QdU2JGa1N6mmU81/O5HXvBesUJxW7
vtCei9Zeapmem67hik8qnmhuLvGpOrfsa/FFr/ZS9IvGW8Ec5UJLPV10/RXf
LrGk71kwTe/3tYbX/aoX9IXGXLBo+ezC7dUrLnmh8yFLT7NguPqcykmu8lfx
cNGYrzPUeRXl50tdVl59NadXvqvUIP1NTbnT1/uvPEbVnks8F6zQ3F96XsoP
Nf4X7ay1QzlS8T2KD7Z4+xr/5bOqH9WLUG5Z8KHU0ysMKblT8OcLrljOeeFm
C0cqa/va/1HsUi6tuKrxX3JtmdPT3xQUrlv2oq9f+a5cVHtSV9ys3F3JHe1P
qR+ivPpVi0vOXnkOWjsK/pR7KWeo+KZxu+SU5ulSXxbdvcy7FpzXGlHmzZTz
L/NvZb+lp1a0W9Eaqq0UDxUTlJMU30a1vGLIUtM1bjWXF36rOVhyR/Hz9fcr
/6foiyt/bJk5+QJzruZ4Syx90QvW71Jtrrxx4WYLd9VzK/Gps0bL+ai+U89B
a8fV+SifLP7261+J26VPscSb8tirGTPFXr33wnk0TgonWepUydPiu5Y9fu1F
aAwUT3KJn/Ic5eE6X7f06Jc71fcsNXrpDRX81NmqoosLd33FRuHDy+sFExRz
Fr59xWmLdtYzKXFeYkB9ANVlC0e94myq1womL/mlr184efVdmmvKu0psF3+4
4PmVJ/las+ZpOcPiaagHolinNUj5s971UqcWnrbU2S/40qLLlv7d0v/SmFGO
obW11IJF46iOKzV6ieeFOykulc8qx1btozxEf3uy1MdSOwonVJxXTFBdfIXD
WiMKrurcmr5HX5d1aq5pfumal/hZNFrxglQzqoevGL7E+ZJfpV6UuNLXOlul
9V3ryGuPxZ8vPLDUKcUcjc8v6r7WnatZMuX/V76BajSN4YLzem5f9IWV+2l9
VB9vwaXFl1iwd+H26peWHFf+oHioOK/vUU9GtWqJVe3nKvdbPPMllxVzvsg7
3YvOVi3e/uKZlJxSv0XPR/mScvKrXtLCz5XnF1631LKFS3wxm1QwR2NJ8Vy9
RPX2X2e4cMJyDgsvuqqPOqOrNUJrlmq6Kx9AZ3W0N1RwSc/2Cnv1fjU+Na91
74Uz6zzD1Zlc8VLNWeWr6okVfad1vJyn3t0VhmuOL7x38VjKvlQ7qH+ynM/r
e0vd1Lhd5rVea1h+76CzvlrXVGcpN9NYVf1V3lPOQfG56EfVbgXbl35TiRk9
N+X/Sx1fuO6rXiz4r/WrYEiplepHLb5c0SCLdlOuUl5/MQtRYk9/V1L4UtGD
P5OXas6WulZicvGgXt+79NpKvmjdLDH2wrGljms+qsdSYnvJhcWvW3y2pZ6W
e1SM+npmQL+31LVFc6neXGZLtIeiekR949LXLnxDz1k1Y8HhH/elMbPo5aWO
qwZ5PV/jRO/iylNaNGDJwfJdX88blDqyxMOyNs2vK+90qQtXvLTkgvLGEoea
F4uveHV3i694xfGuNEjBxrKvhRMufsjSby25oPVU76LUKfUqy11rbOj8RvGN
FYuWOrvwFl2b1g6ta1d8XvO9eO/Ff1Ctp3p5wfOrma7Sv9A1l7p85TksXofm
4HKnRbMUb3aJgWVtRZOqRiicavGlr16rr641SDFn8YW0XlzVPuXDC8fTfX3B
qwuv0FmyKw+tnNXrmcVrKjivHHj5jYPqNeUYpYYWvNJao7mvsbHwB/X9lnm5
Bd/Ke9QD0bwo96j8QX2kgufam/6i9i3YVZ5z5Tlc5aB6wqpH1Atacm1Zm+KJ
Yqn6J1/7n6q5tAap/1P4uWKOzgstGlC1j3oj2kPUM184p87AlPsqa/txL+U5
+lunwvEWD+3rGbYrf0PrSDlzre/LZ0t9WWrrgofK8XSOqLx+1SCtHZq/GsOL
TlxmFRTTFIfV21zWf+UtKE9bemGL7lNPQHNtWdsr7xRPlCeXOCn6ZeGcBYsW
r2mpp5pH2ndQ7bN43aVmlXwp/O2qf7fw4a/1kXIJrdHqby9rXnhsiSXldcqZ
S6wW3aq5oP6bzsrqORQsVdxY+sjKz1XXqM9Tnl94o97jUo/0uxbsLb0Jfb7y
ois9u8wb698VKxb+f7U2xZ+CJ1d8+HU+S61ftL96TQu2l3hWDnalMRWTF4+u
6Lire9cY0B7HlT4quaZY8ToH7S/rmpe7U712FdtaozXvNPZU0y3ewpUuKHy1
vL/UIOV1RR8pXy33pdpH83SJN/VO1dNQ3FNuv+CA6tkFb8v5FLzVeFu021Ut
KP6Y6i/lw4s20TqumrHgQ9ljyYUSJ1fYUjSm+ueFyyn+vNamzyl1Te9X5yKu
fINFJyqHKTX9C15duIfi8NK30nNYYqPcXcHqkpt6tqoLFH8Wjq19OvWplvqu
tUZ7yksP7nXv+tmCmeXvC7cv/FA5m65NvYvFZ9B4Lnz+hW8Lp1pyquxXcUzx
RH0YxcMrzFEfUv2WBVvKd5W7uJrDLDmlPPDKOyqewKI7lvquOvHK41o0rHLp
Jc4XD1Bjo2icxacqnE313VUP94VvhT8X7aC1WPXXj+/539m7MK0=
       "], {{0, 224}, {
       224, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{224, 224},
     PlotRange->{{0, 224}, {0, 224}}], "\[Rule]", "3"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztmr/Ktdt61jcRJAgWsdTKwhPQJtVe2KZLrIVsQW0CgVhISkGwt7JIkcIi
JEeSI0gnOQ8bExBZIHNx/b7fdY1nzPedxdqM/THfOcczxn1f/+7nn/+7P/6D
//Bbv/rVr/7Tb//d//zBb/7zv/6TP/nNn/6bf/j3/+ff/+aP/tW//KN/8HfL
v/2///39+s/+4vd++uv/+bs//dd/9j9+/Wr9u//4D3/6j//kn/70O//o93/6
+Zp+xnxn8u/mb1t7bv1W8rsn90zXpk7M85ozbP3Weg+tc1g8V6uGW7Xawq5F
H5l6O9kji3s8+e9P9fuCH2+49xvu8Sk8NPW/xsBFz7Ywit7LX/3lX/6///78
v/33X//bv/lfv/4v/+J/4/XPv4d+56vPv/rO5LfMd9JnpL+VnP/PP2POmZ4h
rZlW/STPS2s4eRb6W+s90PpJ7qX1XLT+zTOa312sF3tbYMIC5+k9nvz3p/qd
ni3tl9b+6b3fcI9P4aHBseQeW7qi1bMGW+jZvvr+n2tXg8+v9HPre+jafOdi
bwv/29rzq9pI/v3kXdPvMT6X4klrD6++M8GTxJPS51rX6rr+W+t1b7bOOfmt
1vPS32r9e3KGi343HLrImhb3/tQ90v208ND0Ha1Dg4GLnl1omKRHTD3fph9a
eXLrLkxuuXheo0NaOsrctakx6nNbtUf30MLJ5PvNel2rre9ca87F89IsZaFX
k322/EJrndT8ot8XOGz2v+bixdpoToOHhovNb9HvOdmzRsO0cvjW8671g8nM
Te3RvS00rdkz/X46s6DP3roXerYt/Waw5dVzmVlMS8+01qY36Xe2tOjC1yT3
TjHBeNiWNjhZS8kZmrOlfq2Fw2v9sOajhWekuo7Wp/E1rV5YzF9ozyaY1vJT
VE/eph9O+jXTOwtNu8iKKTauuaCFCabH13+b1FXL/57kFFqrT/X74jsXOUOC
Jwu9arTBU2tztuYzrf5q4YzxRMYPGq3e0tJUuxrOWs/LWtlmiyOe4veWhzL1
cJJbqZZuYbXhuAVWJH6zxQUtbbzWHi3dYrx8S9ss6sTUw7rfF9+5zhla2Szl
Mvr5k7WU9I7JcJ7C4TXOLDKWhQ+lWprizAJPaC+Y+mxlpIaXzfec9FBGP9Az
aXFrC6OM3kg4boEVrTOnerXlFxbao6Vb6D6NZqD4tpil0npY5DPrzGeRM7Sw
iOpV+owUo9b9vvC8axw2OsR4IpOxmLszGJvcY4I5Lf3z6jOtHJvWVYsjWnje
0lrGQ7X62jxL8p1GV5/URTSvWOD/AjcWa6M9aE22+trU8w11YrRBS5stvtNo
e1ozBotaupdq7wUvmH5feN5Wf1E9T3FmnZW1dIvRYy1Nu8hCk/M3WEG9p+EU
iuctrWU81KKv6bO07vQGXWT02wKHaf2c5CBzp4mvNPiT9JfRisbHrTNqmktQ
bbbOfKj2MHrVaEXjlei5GY209jstLKJ6yeyhlQ1STKNaopXjGaw2mpbe16sa
NrhBvS2tE8qP9HvWmafxUEYDJ3dB65be6QI/T2pdk+OZ/T+Ve5g7TbQBxb2W
H6e9bzz1Yn5qPHhSb0Z/tmYNxr+0tGJLk6zP8ClP2sK6xeyglQ1STKP38lRm
mPidxR2Z2YrJKyhn0RqgOEP9qdG9tDZaGbLJqE3WtOjTli5afH8LMxM+Xece
a21GPQvNxIzeWNT5ok5aXmbhkSletXpk0cstn7U4w9s86UKHGK43d93i3wQD
DXYl30n1Bq235I6o1jK+gHrzhV82etjwxaszobXRypDNs7f0s+nThS6i3Gdy
PFMzJ3V7gntGmyU4QzXhIpui/bLG7YWXMdrA6LRWj5ssgvbXIo9qaV1zDk+t
W75vrXup9qPP28r0FjVMa8zMcFv5f0srUl9j/IW5l1f/3joro0tbmnzRR5QX
WrqI7i35ftqPpp5PZmgLL9OaRVLda/QGxf8Wbj+l04xHprVhMJ/yy7ofE15o
6YQ1zy7WiQ5ZaH6qe1vev5UvUf/e6q+k14w/pZ9fa8V1nRu8os9lasBkPglf
JxrVaHXqE00fGYxK9tbqnVZPtXR7y7vRmmxpzle/S/+WahVTn626Xeg0WsPG
v5ys+XU/LvjlXXjWrM1dGH5JcCm5x6SvWzhgMsNWfyUa+GS2dkMN0zpv8UVy
X7QGKIcuMnzD1yb3WOtn6h8XmbnBz4Vup1jdysMNftI8s6VVWvuk+VsLb1vZ
L92byWBNzVPfZJ6r5Ue+w9rgNu3TBffR+qEcZHDJ4B7ld5PvmWyN3vUNdd7S
+clnqG6nHEq1a7LnFvfR7MXg88IzGi98Ej+Nbqdr6h3MvSw8e4KBVD8vfOUC
b6nWpb2c9FfS162ab+Xn1HcYP/KOeY7RZgYrku9c617T48bDmqyplUsY/jLZ
mtEST9W5wV7TI6aPEryi2rW1NnVLnyX5r+UZW/OLNX4az2K8mPEd9KxaezAZ
bCsDpL1pvFirJimX0e83Wis5z1Yu3cJ2eqc35zmtNT0reiaLO0042vCv6V+T
dZgebHHlQkvcUNstv9Dqr8VchurqNVYsztBwHNUhlDeppzY8m/gp87eLOX5y
VnQ/rZoxvGN8ZZLBmqyM1mSyhxbW0Ttdz7VbepL6kdt4c7029UzPf+0REnyg
tU0zFpN10IyX6iha/3QPC73Rqu3kjkzGTjGfzgVMb7Zy6TVWGN5M6m2RXbRw
gPKs0Ust3dXyIK19mppp9VFLGxveXNcM5cqFxqM1kOyN6nPzjLRHbtCKrfX6
HQzav8YjPOV9jL9LNHOipRfa+93zf5qfmKyDcmuidVu92dKKT2GFyahbeG78
yJq/WjMag4ev6s3wwlr/073RPlrk8LTX1rqOfp5iHc1/Whqg5cuSfa49+zuu
F2fS6lnT4y3v09Jyrd6n/GXu6F3WFHvpv5v9vPp3M+c1z9J6b/PknZ7E8JYf
afGX4ejkbxM8bM1PF1lTsp/ke6jnoufQ0pl0/0bXGR34VA6faADK+xQfkiz6
XbKdxXrxbo/pl9u8j+Flo3upn6LvC908NzdnTvnx1d8aTU7/1vBacr8tnbbA
CqpvW5qQ1hLFhKQm17NyM8dp7edV/bS0B/UspmaSvl7MyBYeimonowNbPLv4
W5P5mPNp5Rvvvja1dHIPJ73PSb9MfRP1Vq0Z3G1r87z03BbcQX1KSw8Yjltj
hXl3Yl1LiTY2tfRUn5q8juIhxUb6eaMJzbPQ8zTnQLGF7qHlX1o8u/jb5O6o
zjQ43MoH3mWd9Gny+fUeWpjc0iRPaQyjOWmv3VCfRhe1MPYkd6xzgFaev8aK
Vi7RugujgVu1tO5TqpPNfigemtxgsf/WedJzoLqX7mE966Q8u/hbkwW1/OA6
H7h5nfRp4utbtWpypJb3WWhdk4WavqPe6t3rP8FwkwO0ODSpDcrF5r0Lus81
ViR3ZN5FMRqb1sbJea7pU6rfEl6meN7yXDSbamUL5jyTc1jMKYw2M2dCf9fs
OcGEVt8luEF1yA3culib3jyp/833tOqcat0W19BeMPr5qXctzHrhI4x2bdWV
4RTTs+Y8W79rcmmah7R4qpVT0c+bPk10l5kjUD41novW24LLzHm2ainhDlr/
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
U4bHTY+b522dofnbls5fZDstHGtxkNnbV5qBtnCAfv9JjmjVpzk3ozkNXt1Q
Y2uONt7c5Eg0z1/oh6fWBm+pZqD10MoHnsLhdQbe+n6jYUzPUs94Eg/p3mhf
mH9vcUer11q6l/pWimOt+Rc95686AzWa59X3JHqMeuSTWmVxbi3sNT7rXWqS
8maCh0l9Uh14cg5187pV80md09k95eIbcDjZs8HGVu7Xyrppz7b0+Uk9b3RL
UufJv7/6j3LHuteM7qVnuNDSLe1ENQzV0retE6xb6/8FR9AsneLSyXxmMSu5
ofYobxpNaHxHwqdfVfNTvWcwmd4XzQTe5V5u22cr66a5N+WLVg5Pz6TFCy3d
dXJteo36C+P9k9qg9/Jqb1Q7GR45qakW+Gb8rPk81botnHz1/fRvkzNceEZz
LzfUHl3T/jKYmdz14n2zm9dmBpRgMvWJLS1x270sNNLJHqRzLnMXxvus5/KU
F1q66yTOm/taeBCj2eg9mtkuxVUzy7stD2nVTHIvLQ1P92zmgEbnGK1odOx6
VvXUmvYXzWdaXJbgyQ3nudAhNKun55Po0q905rc9V9KDFHuf2rPxoQtubemu
m/WGwc8F11Odv7ij5FmoLvqqM1D6vAnXJBqe3l2rfhJsMfXcwqjknBf9vl63
eqrlHVr3eBsXGE5f8I4554WWuOFsn3quVtZ9UheZHCnB+fW9t7Lf2/TGggfX
WnGRzyeZUnJWRsO8izdP8LC1TjTnq/1QnDTYaHxHS1fTu7hZZ1LdQrVNotWT
3jf3ePMsleIn3T/lHYMJCT7cdubrd4QWPbiema5xg+ZLC76mnNX6/qdqu8WD
La6nv9WqQ8pl5nnJ/PMWb25ml+t7SeqWYlrLR1BMa/HL+o6eWtPeMTlAyxcb
z3LDmRs8XPCOOZ+TWmKBgaZWFz244Ov1nl/hA/VE68w2mQk+dafrOjd7uyHX
Tc6Z5h6Uvyie3JxNrfGN3ssC98ycKNm/eRfR1M9t3HqyJqkWMrVtNP+7zIgT
PFzwjvHppq9v4CaDw63nWmf1ixzGeM+n3p1r6Y0b7tRwfbLPm3Ey4Zqk3uh3
Gi10g848idvmXlpn1cq7kv1TfKP8bvzUzWuj64z2M7Wd3FdyLzfMiCn+v3oW
yjtUr7b0w8n8ZPGO0EK3LLL6ZM8Lfmz5etrvpr8W85GT8xc6+2hx7g38lfRj
K394R35f6DGDb0/NyBZzPcqJrUyezkNvqL2T68WMI8lw1u9+3ICZLb6jenWx
z6fO2fimlm6hWXeL+05yKD3DVibfqtuWPjk5f1n06Q04mZy5eV+Ofubd+X2N
25SXFzMygyGv9r/IUd+FQ29e035Mzj/5d+pzb5gRt/ZD+e7VZ4yfovs8OS8w
+sHs89XnzazTcN9JDqVnaLKR5Axp3Zr3uE7e6RpPbsBJyh101nlSM9ywpr1J
P0/nTcm9GKxLONHM9ej5m0z+KQ79bmvKC7T2npoRtzwU5V+qAUwfmVnq4pxb
NZN8vvV+wgID1xxKz5Dee2uuQedii3ll604XeHIDThpONziw0Aw3rE1vJp9P
/j2Zcay1vfG/iT5Jftfw0UkO/c7rhBcobhvMOYmZLf6lv0W9MM1GTvo1yvsU
rwxfm++hGEi9xuJe1vee1CQ9c1MzJ3mthSctbXaSI6inptrGaIZ30QAm/0wy
ohZOGtwweo8+S6JVWnx0s995x7XxJq150FovLb6f4sOCrxf57bp+zOyVnqG5
C4qByd++OqsWh7byzORvDYbT/HAxv6a12sKTljY7yYmmZhJtYzSD8Skn160z
pPVjMGGRXZuspjV3oHy0uNPvvF7P083dtfTS4vsX7xhQvj6Je636MbPXxNsu
dLt5dqo33oVDk+cyOrPFX+ZOzazz1XcmHo32/s1zwEQbr3vz3XMq2keLvl5w
VpItUB/Xesb1ewifdRerW/XwqobXfb3QY/TzT+HMyfqhnoVqzlbOTDUDnVut
Z8EnOfHVc9EapvNo83l6nkmfPlUnt9VGKx9Y9OYNmpw+41PzR9pHJpOk+a3J
/w3P3tZr77g2NUa/3+D84n2e9fcb/UZzwqd6wXhbM/ek2tvodqOXEm5tnclT
nEjz3mT/Jh9ucV+rT0/WyQ049hRmJmd+m2c3z5ucg5k/tnSjmUnRz9O+M+f2
3XptwR1m3kHxk35mnYHfkLEv5lDrXjjpbY0PfaWNE92e/K3BQ4OfN3AovZe1
dzCzGzpDbOnq1nOZZ3/HNe1Neqe3rZM5zmL+2NKBSVZJ5+9Ue5i+a+HMZ/1j
NUbvZa3HDIasv5/qN6PhF+d/EqPo9xvMobN7o5mTu27d+0kObWnyZP/Jb5k5
e/If/f6ktlt1QnHmXbRW8iwmN7ht5kXrhD67mUfTHqE6jeKz0X607wwOvHuv
neSRpD6T2qN1TvXYq+9szaTM9xvNZrQZvceT9UO9LdVUiwytlSEs5lNPcajh
faO3E25qzXEW90VreDGLeWo+sl4bX3PDzGtxDqavWxoy6evW9xvtRzXw+n2e
77Bec+u6Dm/gGtPviWdM+ojeY6v+DUbR7JHOYkyGZvR28ltmPpX0y0kOpb3Q
6qOFhm9hUVJjyeeNpqJ1eAMftfDTzBFOzrwW52AyhxZ3Gyyl3594CtqnC+/5
7r12Qz0b7dSqw4UObGnppN8Xmjk5z5P1s7i7BQ605qStWmrp0jWH0hy75bNa
XLPGIvpuAOW+V+dGv/MGrDDYssilE49/Q37Vyhxafrx1j8bD0u9vcTHNQ96l
126o5xa3tupw8a6F0dImY2/NSmjecluN0Xc2DA6sdRqtpdbMK9m/qYeE99fe
KjlPM/8yWGS0aMunLHTsDdxkOCjByTXHnVwn2EXr5+Q9Ug97cqZvvtPkyZ/1
j3Gryf8XM3rDWZSXkzM0nshw3A21tDjzVj5M8a31LpDRXYvzOYnnFJMTbdb6
9wUWUW5q6fyvpK9MJpB4twXHLdY3vOPR0sktzKReg85fjH+/oY/eZb3IqE1t
U/wx/35yfpfUatKztDdv4w565vTuWhkU3U+Cseb717W9wHNTP6/20/r3tRZK
sNFoV6pP3kVftXJp2pvmHtfrVt6+zsZp7RnMXHz+XTzaV10vuJLWJPVrlIOS
elvsk2KLuaOTs7aT79jQGqNclvji5L8ko1joLlrbCx5v5QY0G6H/vtBCLSxN
+sLo2Nv0VQsP6Wx3wYmt9eKuqQ43d9fyUAZjk8/TbPkGnfaV1gmfUq40NUlz
g9b8y+RO1FfSeqZ39JSPa3Hu4nvWvptqPKNDWhmR8QLrdz9avuakN0x69tVn
Wlm9+fwNHNTSZuYMKd4uat68E5J8ZysbTzTAwkOZ7Jeub/No775ee/bkt0xG
R7HafD/1zia3ad3RSR9n/IvBK+p9zFktfBbVdaa2W7q6pevo2miktTdMfsuc
edIXJhc6qa9auohipsF2ymutOk/6KzmTRTbe8oYLLDLPYuZBn/VOS5j6N3hr
uKn1nUnO08oxjDen+zf4afReC6+MxmvhM9U5rb5oZTjUWxldt/Y1ht9PZh3U
f9E6MTphra8WushkJhTb15zb0pNG3xqsprjRwqJF77/6zEmP9h3WxrMbbZbU
JOWmpLaT71xoqoSjF/140setdQ7NTBZn1cobaV+ss9mWX2txU3KeyV20vGEL
Y83vLu735DwxwdiWnmlh+wJnEr9DeYfyY4t3KHevsajV+9Tr3aDlvup6rc2o
l19ov1ffbzTVYiZi+m7h41r3ktRPku20MIpiC60T0wsLjWE8YMtXUvxZ6L11
1rH4XXq/J7nDzNaNnkmePcko1t7EzHHo+bSy8WT/9D2HRS+svfYN2uyrrtfa
zOjVBFta2s9o6Rb+JP2YeOqTc0ajSQwXJHjVyh/WeePJLIt6wHVu0Mq66Vkt
sg6jc949Y2n5rETPtGYTLW2c1ENr/8neWl6MeurWewKL3qdem+r/z3qHG+bz
ST9Sbm1pP8N9VF8tMt6TM45FLdGchH5moWlprZr5V0uTtLJZwwXJ5yl/GY5o
5ermPZN3z1ho/tCai53MD42forXdymlNVtNaJ89leqHl9RbvAn3WHjeoNkt8
a0u7JrX3lHcz3Nq6C6qTT9ZSi5so7i00bUuTL/xCq++oz6K9mWA+1TmtDPMp
TL6BI0xdrTUq7Ttaz61+XPd1K6tpYd06B2h5vUUW8Vl37yLRTubzVLvSnjrp
3Yyfovt/asax0DaUmyjumRo2fGGea+EXTnKx4bu1HqCcvs46nvrd1jrBk5ZG
NT6I7sfM4hOOMH1tOOsGb0VzgFa/L2Zwn3X3Lqh+o583OoH2l+F9iret2QrN
bJPvX8/7jKdY6wqjYShftJ6r5RdOcrHhu+QZFzxu8Get39a/29ISFFcX81+6
f7qfZJ7e+kxLvxnd1VrT9xBoXtHCQKN5Pusfww2j307mfoavWzVzMpMxGp7u
zXA31Tb0/YeWrjBZROv8aW5jdIjxXIsM+dVvGS4wPE77utUvN/xuS0sY/dPS
QgYrTJ6/WLf0m9Fd6zXltQS3zbtedN66foftq64XfnPRCzQ/WdeMeVfQeDSj
4alHpjxi/HKrxujdmbya6kDjU9Z+Yc3FBnNMTm70OX0HwMzjnvrdRZ1QzF/s
n2IF9aEJJrd42Xixlh5YrCmvJVi9mDFRnDHc9FnvtMQC657SMy0dTt9voRre
zDjW92gw/GSe3HouMy9Y+AWz/6TeWr7AzOZaPN7KeG/73Vb/GnxuvVdAZwRU
25w881YGeFsWZ/rX9AWdMRk9c7IHP+sf4yzz/cl/Cz1Dv5/iVfLvC21MZz3m
Hlvv9iQZuLlH+rwtnW98fSv3M1zc0hItz2h43PSyeadi/bst/ZBkiUmfmjzf
6JlWTy04jvZa8ly3ZXEneY3eY1IzVJPccOZfaW04y8xzW/xLdSzNIU09U6ww
f5vg52K+0NIDFENuyMbp2Z70CwtsT/Zg/J3RJ/RdC4NR9DOt313PtamnTmqD
ZunGj9Baap35ApfW2axZL7ICo1tonZs8/Db9/5XWi0zG1M8i32jhG9XqBrvM
3SW/1cIfqgcSHDOcaDjUzNlpzbT8QgvnF8/+ap80Z2jhEu1N805FS2+3NEMr
I2rNuKmeac07Fmfewm2KFes1rfmntDTNnT4689k15ayTvdDKNwz+t3iQcquZ
/ZncleLPgt8Tvkt0Sysbb+UVBgNb32l6kD67qRPqPWm/JPWTeEzqs6jebum0
RW2bubnBFqPfDD8mn6G4ZDKQkxqphXsL/fDRme+1Nt5k3QsJF5jvbOE/nakl
Wis5Z6PPk/2YWWSL3xc5fOs7TR5Oa8Z4AYPzLX1O+/FkbZj6MVlZS5sZndbq
kZbvMPWT4JXhR4OT9NmTeljnh5SLE9w7qR8+OvO91ok3SfiopYeT2SLN61r4
TzGT5gYtfUgxxOxnwe9UP5ucIflOk1cs5lALbWDqPDlDg/+tPZicyvQaxS6D
G8nv0tpu6Vvq36kPMmeeYGMr627Nquhztbi4lTe29MP6TD7r7pr6GtrvCz6l
OpM+e4KlRiuafIbiHj2flmc3/L7Ohxf5j8Fkmk8anUDrOXnGlq+hz2tqo4Ut
ptfWWsvMc80dJVrLeKVWbkbv1JxPy0dQ72y0gclY1rz81Jl81n7dmgO23uEx
Xrj17DTvMpxLc2aqD09mIwtNS3MGOiMz2WZLz1PONf6F1nNL8yfnkOi3Vm1Q
7UdrtZVjG61F/ZE5k7W+Xehkev4JzlBPvc5wzJpy8UlevkE7fdZ+vejldUbU
8ryG39f4abREC1tMFmE0bUvbUP256AWj2039m/ul/Ej1PNWZa7yiZ0L9YNKb
tP6p91y857DI6Foe0OChqY2Wx1zcI9V+rVy6xcutHv+sn11TX0Px0+SoZpZh
cKaFsQY/k+9sZdEmG1nMniiHUu1q8kPaC8m5tfI6w4nm3QD6XHROR/m3pT2M
H0l0Nc12zPOaPl1whNG3xuNTXZdgr/FlSf2vfVaLW1v7XHi6z/qe9SJjbGVH
NCcxucpJnG/pNOMBE3wz2tjMnlrvMLQ4zuSEC2xv6aVWnZhzbvkIg1cGDylW
tPDTcD3ttZNzqFa2mfSCqc/1+w8JNi40v+HiljdJntf87Wd953rB3TQ7on7Q
8Cbdc4uPaD+2PCDFClM/FPMTbKd3TXUvrbfWDIj6JqMNaL29OivqBylf0/Nf
aOlW/rzQzMY7r3PpVh+1cjaqw2l90j3T/LM1+6a4RPXzyXXrLj7rZ9cmYzQz
X8o7dG/UPyb4YN4foPiZfH/iAc3v0vox3E0zgaQeFr9lzoTu7aTmMfze0gbU
Rxh8S/yvuXeDP8kZLvLtROsaHE7OM/FKCw5q1eri/Qfz+YVmeCpXXNzFZ31+
bTKfhb9Y9IvJVRY4/wqfKTeZ50p+l2onqo3Nd1Kt1fqtpHeoZzHataV5DL+3
tIE525beMLPUlr9O+nSRby9y6aQfjU5r4fDJbDCpZ9rLic5/d91FsYj2+w3P
+Fn/Mpe1dAv9LbP/BAOT3zU4/6pHTPZLnyv53eQzlBeMnqT3RfOZFn+1+Pqp
uerJdetsW3rD7L+lwYzONGe1zqVbPdh6f+nkejFbp+8JmPO8Yb14z2GdCX/W
/q4pt1Ldspg5LrI40wuL2Td9rrVmMLo04V9zhkbvJXVCNQO9r/Vc9SlsMWe7
0ButOlloMJqbrTP5xXtHZj+Up07WPO27BVa/i840fdrKvm54xs/a6y6TFbR4
pJXF0V6gz2j0j9H5C81geMrkwEafJL9rMgdzLyZvX8wpFlxsztboDTpzMZn2
U/3SyuQpBq51WlLnT/ks2ncJjpn6efe18W5rL/ZZn18vsgJTD0n/tuZ3yf6T
z5gMmerStWZY8NQ6K1h/58KbmD2YOcWCi1v3ZXBpUZ8tPb/It00mn2CgyZ2o
P2rNGlrrhW+9geufWptMntb/DZ7ls/4x3WWyAtqnBn9MPmY07Xqd6N4WL7S0
epLXJf8ZjFp856vvN97EzGFpra65mP4uzXhbNU9/i97Fol8S/76Y0Ru8NTot
4ZrWvdB1a1a+1szfYW3q6nP+99xdgjmtfjTfb2aahh9P3ksL36hmSHrzqZq5
4TsXc2R6tgv/1apV+rsmu6bPvu7HBcYmtdd6b8RwNM2jaEaxuBe6ph6W9vJn
LrzrzRs8y2f9Y71GvXny/TT3WOPDDT6ohW+UF6hePVkz5h3IRe21+K6VwS4w
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
9SOmVqn+WfRaSye/4oJF/t/Cf5N/mlyR8mBL87RmN62+prqihYdGD6915kIn
t7xey3sarDMzd5rtP1Wfn/V7rSm20wwhqb1137WysgWOtfDcaEvD74avW3Vr
ZlstXmvVYStTMrqL1mfrHBINRmusVXv0vhY1Y7DU6OHFjOwkr61xPukXiv+U
T9d8QTV5y6MZvv6s71zTOUIrK2vxpvFZFDMXOJb0ptlbS1san7v27wlHL/CK
6l6jExb93tLGyZnQWl3PTUx/0T0kdZKcFd1DS99SX3BDTtXKJ9d1SLUZ9V8t
vjC1t67Pz/p916Y2WnrG8Kbp5eRZFjjW0tjGbxq/kPxuUhvURxidsNZvNDeg
PbJ+LpO9GMyhtUr3Sb+T9kUrz1nUZFI/rzSGyb1vy6loPkkxmdahyQNbeNLK
QFrvXdD6vMHjfNZdrklqg2LyAn8o15i50gLHqCanezPzlJaOWnB9gmPr2kt6
KuF0qmkXnE5r1ehh41VN7VEONd9J9eTCXyxwgHrYG3KqpN4MX5g6pFqX4pvJ
bNf5QKv3Wxr4sz6zNhjben9joZnXfGHyQNMvdG/UR5j5S7L/Vl5EcewkD7a4
ifbs4lmMrzE+dFF7RuOZvqP5TMtfmDxhnXufzKla728scj/TR4ZrTJ2Ys6V7
SOrzk3l+jfU64zL4v9AqLb44ySPJ3owHb/mLlrahNZOcyQ08uOiL1rNQP9LS
qyYXMrWXZLm072g2mOi9BTa27iWpvafmETTHM+8tGK1FudjU88n5Pq1VyjtG
/3/Wz64TjDUZF9VIxj+aPVC+oNhiepPikulB4y/MezumZpJnf/WdT83lDY8s
ON1kLEn9L3IhU3vreQ318vRsW3tY4EOrllq8Rn2T0eFUayV33arnk/N9U6ut
M/+s71yv54O0tin+mAxwgdUGWwyuLvIuM0Nv1QnFQ8PvRmOsuZLmD2tOX2gq
Woem9sy9G29F8SrZQ+KzWlixzuta2Jjkaa3czPRXS0ctcuwWfibfT3nnKXz+
rM+sTbbZyj2SnIo+C52pGQw0mVXrXgxWt3S4eWfPaIxWdtrS9q3zNzOphd8x
msrkkLT2WrnNwoMn50z1RnL+N+R1Cc4vtJnpWcMXT2UFLS3XynNoDS84+rN+
3zX1O4Y7Fh7TZG4GW27L3JKzoj3e8su0TpL7MjO4k++nmdnE2u8YTWV6wbxL
06pD462Sd/CSOqH32+LodS+0sJGevzlzWietd2Na50P9gslzDG7TM79BI33W
3XWCmetsynjMls6kOJOc28nMzZxVMkMxWsVkUC2vvZ5f03o2PLjwO7TOjUcw
tdTyOIkGS/pl7a+TvbXmUCc5JcGE5HlbZ0Jx72SukpxPghvmWWhNtuYCn/XX
W7fmg5R36GfM35rzMVxjsqzWnSZnlWibViZjPIKph5Nc3MpDEh5f+J1WzVMe
NNlj69mpvqXzIOqvzUznZH1STjEZdWvOYvCTYtoiVzG67qT3N3OBT+b5fdat
+aDBivV8zeiQltdbZ26LXCj5/oR/W9jemlUtuJieCeXxhd9p1TzVkOa3Fl6P
8qPpL4NvRm+36pP2QksHUt1i/FeiJ0/mKskzmiy05f0NR3zW32fdmg+2eLyl
LSn+LHRR4j1bmds6F6KZzALbjddec3GiqUzfmV4w+bbpTXOeLS9JsaKlPRYe
1nD9uj5f/a3BOlNLxn9RfWUwyswR6PnQu2jlDK18+LP+Guu1VqRYYTJ5Okeg
GN7SRYZfDG+aXKil/Qy2G0xec3HyLK2/pZ4iOf+WrzF91NJ1Lf1DsSLREi2N
1MKBVn1SbZx83vRmgs8L/mphVFJXrblPgiGt36Jc85m5f+31Qisu9Jvpd/pc
C11Esbp1p+bz5t9bmdh6BmS4uPW8N6yNnqG6kWqVhHNpDSSca/puoZFaONDy
mHQ/Lc1v8roEQ1r3aLIdgyGt9w1av2Xuq9ULn/U9a+MrTQ5G662VoZlzMBhu
uMzcaZLzJOdJ/72VibUwmd4X9SzGH92Aq633Ewx/mXtveQqTPa57gWKIyXgX
Wj3RYKb2DC4Z/qJ7ozPxhVc1ObPpO3pfN/DpZ73jmkUdUl42mGAyW5rJGB6h
OGbulJ6/0XUtXKXeeaFnTN0mmv9mXF3kJ63vT86Q9oXxGsnnW71g8MrUbXIv
JmegOXayB6P3DH7SvT3lVROsM3VFz5Nmzif59LM+zzWmDhMtQflrnRssspSW
Dmytaf7Z8trJfVGOMDl5cia0bltZxFO4au7d5IHGw675l2oMs0+aD7c0ySLL
emoPLb1H8dPkEvT7E+9g9k/3fFKHPLW3z/oM1xh8Njmk4VaTG5g90JyW6sDW
mj5Xi9da+u3Vd5qcfPHsC324xtWWDlx8f5JfLfiXagw65231Au07iv+tOl/v
gZ5nsjeK8zTfNv6F+sEFT7U4y2js9d4+6/Nck9RGgrGtjII+C93Dem9rbG+t
F17b6DeDmQbHbpiJP4WrVAcaPjX8Tme1xqfQPZiZLz1z03cn8dn0cgtbXp2b
weoWjyTcas7EeHnTv0aHLDL5GzTYZ/3L2J7UM9Wca+423LHg9zW2Lzii5bVp
/mO0pXkfo7Vu4RudQbR+l2ZHdJbR6i/qMVvc1NKiNH9Lnpf2XStDbmEg3QPF
FspTFKtbPpH2V3ImFFuemtO1+PGjM+9f0/pZ+5TFzJ1yR4vfje66Yd3KHwwX
L2ZG7zgTNz27xurk2Vvaz/iURS8bP2729lQ2u8BAo7ta+p/6Jqrlks8ntW1q
sjVvWmDIU/Odz/r8OunNk5zbmlNQPFlkknT2t8jNWtomwQHDywvdspjr3YCZ
rZ49WSdUexhOXPi7hddO9AbVckmdL7SZwUDa+1TvmXlccp40h0ye0ejSlpY+
Oad7ar7zWT+7bmX7hnMX3E213Pp9AMNNJ9cUB8wz0plOS1u29MlTmGl69mSd
tHyHqbGFv2t55KQmEy1n/LXRZrRfTO+3uKCVByZarvU+Q1K3i9n6DXO6T+b5
9datbN9w7oK7je5NerM1b0rw7ba+o7mW4WKjtVpzvdb86IaePVknrfciTB8t
/N1tusj468U6yeto7t3iggX2LrJls4fk32/DSbq3T+b5vuvkHk0Ob/rF8Cat
VZMz0P1Q7mvp3qe0xGKWTeundeY3YKbp2dtwm/adwR+aU5n6P6mL1v6XrhP9
Q/2j0fZr7H11nq1sme7h1X6SM3wKJ2ldPTXf+ax3d0p1Tuudq6R3jEc2Pb7Q
xgZDbu61Fr8brUVryXz+Kcw08+WTfNF6FlMbi+yuhQMLXbT4LfrsSR8t/N1J
7F3wi7n3xbsEJ3GS9tRt853P+sfulHr5Fp7Tz1OPbLA60U5UG9O9tbLlm3XF
YmbayhzoXGyNmbRnk7O64d0t41noM9K6pfhgMkmji8x8tuUNk++nOd6i3hZa
bqGlk3tvfX/r7lqz+K803/ms//97MXMrg6tGP1DvltSkwWqjZyg/mvz55Nr4
GqNPWvMswy9Gl5pnoXVCtfpJ/DH62ew5yc8pPpi5ScubGw3fqoGT+TOtjXWd
m1nJQt/elrWa332X+c5nnWPmAleNfjB9Tet24Q0TrbLozZO1ZHwNnXMZLFo8
7+I9EONlaI099V6HyRgNn9LvpPjT8vKLdwmS52rVgMnrWnt4Cidpz9KzojxI
M/OTWSs9B1PbJ+c7n/Uv32+LL07qh+RvW/sx3jDRKjRjoXr+qV4zGmnhzRdn
QjX2Wj+8+l1aYy2sWO+N9lcLJ1v3brxSSw8sasA816JuT+Jkwjtr3KN5+Do/
NPtM+DT593W2/1n/GD4n55/gwFo/mNpuZSOJN2xlyIs58rrXTnJEyyMbLjb5
1SJPMDleCyuo5qF7S3Ag4VyKk+YzBrue8o+tGqD5QKtuT+Kk0U4t3Gv52VZ+
uMijkhqjd3SDNvsOa6N/DL8Y/bDowdbsnp4n7ZeWD133mnl34iRmmjNJ9Eyy
n9Zd0Nozdb7G7afySdN3rVzaYNdtfEHvZVG3ptfWvbmosVY+STFznaM+lZPf
oNO+0jrBgTV2PbU2GtJka7RHWpp80ZstnlrrMZNh0jOhtWTetWj1crIfenem
lky2ZvLJpF/WubTBrtv44tUzLjIrmkUkvfaUhln4iHVmbnKDZJ+GE01O3prv
fNY5Pi80SQvDF89uPJ2ZoZzU5BTnzR0lPLXWYwuNmvTLupYWvWzyCrO3pCbN
7KA1m2jlSMaLPdUjtMbMPVK9R89zMSd6Fw1zMjOn3mHBg0l9tvD5s/Z1aGom
+fxiFrDA/9b+aV+c9LwLzmrN1hfvftzQR61eWM/a1nOEV79rsjXaR0bvmffc
jB54qkeohjeapPV5ymU0/3wXDfOqLxZ7aPFLa76Q9HJyPov5zndbJ/i8zueT
Wfb62Vv4Rmc9Zkb/lEZa/9ZCO93WR61eoPrKaCQz46bYYrI12kemN5NM2JzJ
Wpst6px6ikSTmM9Tj2Aw52YN89R7MkltnMwN6Kzt5HznO6zNPKKVz7e8v3l2
M5ek+zcZRUuTtzTS4reMVnmXPmr1guHKFvZS/Uz7guK/0bEmjzKY2aqTVr60
0C0tvUo/T+uqhb30rp/SME/t4Sncpl7gO2QmN6xP+uu196f7b/nc5N8XPE7z
qHWPmL5u/e1tfWR0UaLPE65sYW/y/S39bPZG9UZyj1RT0Wc0dULrcK1baA20
8s9Wnkmx12QRJzUM1c+tPdCcobVecN+7ZyY3rGn/tvz1IiOiz7uok2T/VCcY
/GxppIUea9XDDb6S3h3N96i+MtpycUd0z6bGaIZpMI1qKupJqX5eZJ4Ge41+
Nvd+EnuTPdww96Fedc2P63xpzX1fKTM5uV7PPpJZNq1tw1nrdwyMB6c9aOZB
BmNpj5B84kfqoeWDFn1keJPmIa1ZOc1LKW4bTUW1jfFoi+ya6pN17mT+1syt
WnojOf819prPPDX3MTOCFj8mvbb2TYb76N9SnPnO6+SOKNffMEdbaGz67/T7
DX6anMGcLeXfxbrFuev+MnmI6aNWtrPIUZP6N1mxwTSjnxdz85M+i2qk1l1T
Tbt4v2Ld+60+Sn63daeUB6kubeXkLe6jXHNzZnLbusXRNMOn3ERnTwm/0M8n
z9jS8MZHtzKTFiavdeBtOtNg2oIXTmp1mqPSDI1y36IX1nrb5DMLvUT3YPLS
Fu4Z/F/oH9OPVMO0zpPuwWSw6541PZ7gZOu5buaym9dmrkG9odEhJp9saQOz
N9rvJjMx7zx81j92vybTS2pjfXdrXW3m4KYXkt9q6QGqZ1p3Z3wBzSSNhjS1
fYNnoXqm5VsN57buLnnGVs/SdeJNDAZ+dObuvpJeMzXf4g6aT673SX1lK3tp
edUb6vDmtckuWny0vq/W/s37e4v31szM92TvtHiZ1s+iDk390B486VmM929p
nrXepr4gOf915k8zHIqBH53ZXSdnS/2OwTda84vepPtsaQyavVCsTs5t7Unf
cd26X8NHLQ5NvtPs3/Bg62/pv69zIYPDtE5ormh+qzWLSb5zMSc1vNPqZap5
qM9tYUUrZ74590j86W17fvf1ojcpvlHueNWzpjdbepLi0oL7jKf4eD2vSxfc
lNRM67fMd1IeNByafM8ixzD5Dz1zmjEa3UW5tVWHrb2tPctTmmcxT6cZoMmZ
k3O4LfdY+83vvKa+kv47xZCEO9YzzWSfi15r8TvNASim3VC333ltMvCn8L/F
la2+Xpyb6Z3FbKKl0179VqsOk+9J9mYyQ8o7T2meFiZTL2P4hXLZDbmH0dif
rCa/a5OnJXe0mLstZpqmd0yvrTXe4jw/Xu+9evYp/Dfe6mT9m3Mzme1iNpHo
q1Z+Zc6Tel46P1pkhoZfFv1CMTmph1Z/0b3dMOOmM/dPVtPFZ4oztMdNnpnU
TKvfk95p9bLp2QXvmxq4oZ6/wzo5f6ohW/h/0lu1NCE9t9aMuzWbWMzcaT5G
z+pV7SX/nujbljZY49siq6Hvj9HnpXk15biWN2xhrOmLT1aT96zpkcX6ZL+b
2RztZYqZ1AsvzvMpT/pZ5z3byvpa+L/wVi2MoudmNNJJzGzth+qEFkfTjML4
i9u0gclq1jn/ur+Sva1n3NS3Lnj8q65b87WT+nCND6YvaOZJMytzzid5/zYM
/0rrpGdbWV8L/2/A5MQPUgxsvU94smboflozaMrRJkNr6Z8b3jOke27dUUsD
0P5qzRda/bI4809Wk/d70iNUd7U0YQsfDF/THqS61Gi8k7zf8jKf9Y/1LJ3h
JvVm9MBJb0UxqoWBrfM5WTMLrWJ+l/6t0ZBmBr1eG22WfOfijlr9ZXDJ8Czt
ndaZUx7/SuukTqg2o9hF97ngqZafoj1I5ymvzoGu17xvePyz9j1L3wmkeanR
DxTPDSYbzKEzDnM+J2cQNMs1XEy9fAvrKN6au16sT/oUc0et/jK4tM5V1tna
d8tqFjOyFl9QTbj4XeqnjA81eT7FZKOlW7pocV/fYU1xqVVLdI5GfZPRG4tz
bvFLcj4LrjT42eLiFr6ZbH99Dos6NDpwURtGt9NnNLi0mHGfzNa+W1bTmpEt
3huhd9T6XZpptOqE/m2rTxMt3brrV+f5Hbzeumcpf1EcMJi50BsLTG7lgQYr
1s+Y9L7h4kVet9A/5hwW60UWseAgk/8s8KGVZ9KzatXJd8tqEm5KZmRmvbhr
87vr2VzyXInuvS1baPnl9Vzp3deJL1ho1CSfpL9r9Ma7YDLllKe4ssXjVLdT
bGzNv05mzmZttLSpDZppm/e4Wjhv8kyae7RmMd85qzHc1JoBUa9N3wMxv2t6
1tSq8Z4ns4VWTpvkP7fpipPrV+dvZuL0XoyPa+mNROfcgMmUU1oYaPZzcsbX
mtfQ+Rf996f8r8kiTF1RTDC8QP1s66xePSO990X2/h2ymoTLFudM8SfZQyuX
W3h8Myei3tNoNpot0FmV0RK3ZRE3rCnmUJ1P6z/JkRLMMRh7GyYv5i8trqT7
Wfh0g9Wvnmvx74tzMPdOa6/V40Yv0Zw52QM9K7qfhIvp31JO/GQ1eW23dA7d
g/FfC26iGNviMooJJ7m+xcXv4u8W61d1lWQIizywpYENxtJMb43JC29ocNjs
ZzFbXGfprX9fnEOrrhI9c4NONr1s+NpoXXNur/6WnlVLe9+c1SS4RGvbZJLJ
PdK6SrCl1bNPZYYL7dri+rU2+Kr+Lqkr2l8tDd/SwC2OOznvaPW+2Q/Fq5Y/
Xcy8KA7Q+qf/bjz7SY331PeY3zIaLOFrw01GD5vaWGjvm7MaelaL+XKCt+bf
FxlLC2NbmeHCXyy4fqENbsginlq3MnCq4ddz88WZGAxv7af1edq/tPeNZ0nq
J9HMJ7P0xbzmO3jhRS8YDdbiGoNXpjZa2pvqgRvqwfD1K3xr9fvi3w220zNp
+bIkX0p0QotzF7hN73SR6d28bmXgLb/f8nStORfNYFvzDsMRi/0Y3WhwYzGj
X2Tprf23+uirrmltUw120ueadzPW2Gu+/2R9JvduMpAWXr26U/Pva82/zgxp
vpTswfgmqpNpLye/9R2yiKd8BMV/0xfUC68z2MW7AfQu6H4SbDc1YGbi5hxO
agz6u6aPvura9ELCHU/5XNoj61w9eZYbsprkTpMMzWAmxauEX8y9P+VJTU3S
dxhavE+5fjH7aL2/8e5ZxNpHGN3Y0tULXngKB0z+ucB2mh8u5hfJOdB6a/UC
xUnjtW/Ak5PrVv7Zwivq6UyPtHL1BAdoPpz0wkLzvNrD/wFUlEnW
       "], {{0, 224}, {
       224, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{224, 224},
     PlotRange->{{0, 224}, {0, 224}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztmT2ubll1RcsgGZqBW1CSkUgQ9eTIEUnhDhTiJykJVVVg0QHLkgMyJCQy
R6YHltwIMgISIKIDEFMlEVTARd/x2fOsseceQVnTT/dd9re+ueZaa7x/+v5P
PvzRV957773Pvv75//nwo3//l08//ein3/vHL/6fH3708Tf/+eOvfi5/99f/
vtDf+vEn7/70H//6nT/87CvvXtH//Zv//eAXn3z33f/88ecf3Pn5L//5K3rV
70+84c7b7rznzu9PfL+r6rZKJ2p15ztK1+eOT+583vR3tOqzr6rPVI+kPfZk
ntD6YtUMSvRg2gOJNzw5Xwg5v8qfiZxc1b+J2n7jt1979+fP/u3dL3/9g3fv
v/8P7/7vv7797j9//6sPvqy//DNv6Vd+/vN192/+98rPv/KGt37/K/9dfcPV
Wr31e66+5+rfvfo7r36/V/9336rbKn3VD+nvaJWvrn7eVX2R+H6v1vbOZ1+V
G1c/+6oeWZWHd7I6XeepvrhTwzs/c9VvCQ8k5vKdOic8f/Wdq+pw1Z+rPted
vk5n41t//uVd9K1avbWvvnIXvFKTO9nyyp9f/T2v1OHOz9zpxzu/5+rfvfP9
vlKTVVziFa9e9eGd7+jqd3G1Pq/83USv3fl+X/mO7uTSnfff8UmiR175PVdz
LP37Ez2S6ItEj6yaNYmZuKrHE95IePLJ3E5nYLqGd3aqO7m6yp9X33A1N1bN
oKvfxdWfv6qv7vOv1GfVTZHYjdMeW9WnV2u76rtIzLhVvfbKZ3wyT+702p3P
e/WuSfz5k7tQos6v9Ej6s6/y/6q5v+qdic+4aiZenTWr6pPI7VXf7505lWAd
V3fmVf6/w5ReqduTN+Yd3yYy9iqbSuxsq3aAVRn1JBO7+hnTepWX0szzqmfS
eXJnn0zfRHe4x53eeXIW3KkzuV8Sd1O6tqtm2ZO78ao+etJ7d/jnqgy8M6PT
3/sq/yd2lcRMeTJ/Vvn8rZ9fdXNd/T2r/P+kn9N7dVpf5WarfJW4Ye9kSPq7
TtyhaW5D2IVWzZdV2ZLul8TOcHW+rHpn4qZYNUNf+U4TfbRqr7tzJxLmVPp2
S3gj/Z1OfS+Jm/GVLErveE/WOXE7XPXY7vzzjk+u/nxiDl79u+nvetVecadH
nrypE7vQnZ3nDu96sl+ufter8jYxuxM3RWKGPjlfpvYHwp48dbutuutX5fAd
jz15v6zK3nTG3pnjU/zzyX146q4k6zv+WfV309/11dl9Z4au4jaJ2beqbqv2
n1fm4JR+kjkkZveq7+vq9/Ik87zq+bT30rxlai7cud3SnlyVw7T9YdXt+WTG
rroLVtX5zk67ah9u4p9Pzty0vvqGq9817XOlPbmq116Z16v2H4Ln7/gn8RlX
ze6p91/d4RP7HiHnV83fJ/eHJz/7nQx5ciec4p9X59dUxso/n3lDqyb8W/CT
/w745Oea8uST9yOBO03N01XMYdX+n7ih7txBT3qAPIuvzt9d+mJVVlzNqymm
NLU/vOJtQsbKPzle3VE/uQtd1ek5+GStaPzzTga29tedu2lqnyH/O2/CA1O7
LnlXIeg7/ryaG03886q3CR6Tf5oJtP5axVTTeULY8Xbhn1czsKm/0sww8Yar
vzP9/qlM2z1Ld9F37n355//vDav+DY6WUfJPTl8T/PPk79xlJp7GP1/JQFoe
JnaJKWa4au7s/u+8u2jCrkLQVzmD/PPvv4HmMfmnmUDrr1X/bkioT7pWhJ0/
kYFN/TXFPE+r8+6asKvsou/4+WT++cp75J/3fSL/5PiZ4EmaPpl/vlWHE/jn
k75N8E81Px9adcLPJ/BPWi4lvlP5J6dPCf5J7EK7z82T+edbdTihvwhzp/WO
a9K0XYWs5Z8duZTIKPknp08J/iF4kqbln/w8TO8SU2/Y/Y47QTdlHdnP8k/5
Z7of5Z+zfpZ/5mq1I/8k5+GTu4T8U/3kDG3S8s+OXEpklPyT06cE/xA8SdPy
T34epneJqTfsfsedoJuyjuxn+af8M92P8s9ZP8s/c7WSf/I1Ye603nFNmrar
kLX8syOXEhkl/+T0KcE/BE/StPyTn4fpXWLqDbvfcSfopqwj+1n+Kf9M96P8
c9bP8s9creSffE2YO613XJOm7SpkLf/syKVERsk/OX1K8A/BkzQt/+TnYXqX
mHrD7nfcCbop68h+ln/KP9P9KP+c9bP8M1cr+SdfE+ZO6x3XpGm7ClnLPzty
KZFR8k9OnxL8Q/AkTcs/+XmY3iWm3rD7HXeCbso6sp/ln/LPdD/KP2f9LP/M
1Ur+ydeEudN6xzVp2q5C1vLPjlxKZJT8k9OnBP8QPEnT8k9+HqZ3iak37H7H
naCbso7sZ/mn/DPdj/LPWT/LP3O1kn/yNWHutN5xTZq2q5C1/LMjlxIZJf/k
9CnBPwRP0rT8k5+H6V1i6g2733En6KasI/tZ/in/TPej/HPWz/LPXK3kn3xN
mDutd1yTpu0qZC3/7MilREbJPzl9SvAPwZM0Lf/k52F6l5h6w+533Am6KevI
fpZ/yj/T/Sj/nPWz/DNXK/knXxPmTusd16RpuwpZyz87cimRUfJPTp8S/EPw
JE3LP/l5mN4lpt6w+x13gm7KOrKf5Z/yz3Q/yj9n/Sz/zNVK/snXhLnTesc1
adquQtbyz45cSmSU/JPTpwT/EDxJ0/JPfh6md4mpN+x+x52gm7KO7Gf5p/wz
3Y/yz1k/yz9ztZJ/8jVh7rTecU2atquQtfyzI5cSGSX/5PQpwT8ET9K0/JOf
h+ldYuoNu99xJ+imrCP7Wf4p/0z3o/xz1s/yz1yt5J98TZg7rXdck6btKmQt
/+zIpURGyT85fUrwD8GTNC3/5OdhepeYesPud9wJuinryH6Wf8o/0/0o/5z1
s/wzVyv5J18T5k7rHdekabsKWcs/O3IpkVHyT06fEvxD8CRNyz/5eZjeJabe
sPsdd4Juyjqyn+Wf8s90P8o/Z/0s/8zVSv7J14S503rHNWnarkLW8s+OXEpk
lPyT06cE/xA8SdPyT34epneJqTfsfsedoJuyjuxn+af8M92P8s9ZP8s/c7WS
f/I1Ye603nFNmrarkLX8syOXEhkl/+T0KcE/BE/StPyTn4fpXWLqDbvfcSfo
pqwj+1n+Kf9M96P8c9bP8s9creSffE2YO613XJOm7SpkLf/syKVERsk/OX1K
8A/BkzQt/+TnYXqXmHrD7nfcCbop68h+ln/KP9P9KP+c9bP8M1cr+SdfE+ZO
6x3XpGm7ClnLPztyKZFR8k9OnxL8Q/AkTcs/+XmY3iWm3rD7HXeCbso6sp/l
n/LPdD/KP2f9LP/M1Ur+ydeEudN6xzVp2q5C1vLPjlxKZJT8k9OnBP8QPEnT
8k9+HqZ3iak37H7HnaCbso7sZ/mn/DPdj/LPWT/LP3O1kn/yNWHutN5xTZq2
q5C1/LMjlxIZJf/k9CnBPwRP0rT8k5+H6V1i6g2733En6KasI/tZ/in/TPej
/HPWz/LPXK3kn3xNmDutd1yTpu0qZC3/7MilREbJPzl9SvAPwZM0Lf/k52F6
l5h6w+533Am6KevIfpZ/yj/T/Sj/nPWz/DNXK/knXxPmTusd16RpuwpZyz87
cimRUfJPTp8S/EPwJE3LP/l5mN4lpt6w+x13gm7KOrKf5Z/yz3Q/yj9n/Sz/
zNVK/snXhLnTesc1adquQtbyz45cSmSU/JPTpwT/EDxJ0/JPfh6md4mpN+x+
x52gm7KO7Gf5p/wz3Y/yz1k/yz9ztZJ/8jVh7rTecU2atquQtfyzI5cSGSX/
5PQpwT8ET9K0/JOfh+ldYuoNu99xJ+imrCP7Wf4p/0z3o/xz1s/yz1yt5J98
TZg7rXdck6btKmQt/+zIpURGyT85fUrwD8GTNC3/5OdhepeYesPud9wJuinr
yH6Wf8o/0/0o/5z1s/wzVyv5J18T5k7rHdekabsKWcs/O3IpkVHyT06fEvxD
8CRNyz/5eZjeJabesPsdd4Juyjqyn+Wf8s90P8o/Z/0s/8zVSv7J14S503rH
NWnarkLW8s+OXEpklPyT06cE/xA8SdPyT34epneJqTfsfsedoJuyjuxn+af8
M92P8s9ZP8s/c7WSf/I1Ye603nFNmrarkLX8syOXEhkl/+T0KcE/BE/StPyT
n4fpXWLqDbvfcSfopqwj+1n+Kf9M96P8c9bP8s9creSffE2YO613XJOm7Spk
Lf/syKVERsk/OX1K8A/BkzQt/+TnYXqXmHrD7nfcCbop68h+ln/KP9P9KP+c
9bP8M1cr+SdfE+ZO6x3XpGm7ClnLPztyKZFR8k9OnxL8Q/AkTcs/+XmY3iWm
3rD7HXeCbso6sp/ln/LPdD/KP2f9LP/M1Ur+ydeEudN6xzVp2q5C1vLPjlxK
ZJT8k9OnBP8QPEnT8k9+HqZ3iak37H7HnaCbso7sZ/mn/DPdj/LPWT/LP3O1
kn/yNWHutN5xTZq2q5C1/LMjlxIZJf/k9CnBPwRP0rT8k5+H6V1i6g2733En
6KasI/tZ/in/TPej/HPWz/LPXK3kn3xNmDutd1yTpu0qZC3/7MilREbJPzl9
SvAPwZM0Lf/k52F6l5h6w+533Am6KevIfpZ/yj/T/Sj/nPWz/DNXK/knXxPm
Tusd16RpuwpZyz87cimRUfJPTp8S/EPwJE3LP/l5mN4lpt6w+x13gm7KOrKf
5Z/yz3Q/yj9n/Sz/zNVK/snXhLnTesc1adquQtbyz45cSmSU/JPTpwT/EDxJ
0/JPfh6md4mpN+x+x52gm7KO7Gf5p/wz3Y/yz1k/yz9ztZJ/8jVh7rTecU2a
tquQtfyzI5cSGSX/5PQpwT8ET9K0/JOfh+ldYuoNu99xJ+imrCP7Wf4p/0z3
o/xz1s/yz1yt5J98TZg7rXdck6btKmQt/+zIpURGyT85fUrwD8GTNC3/5Odh
epeYesPud9wJuinryH6Wf8o/0/0o/5z1s/wzVyv5J18T5k7rHdekabsKWcs/
O3IpkVHyT06fEvxD8CRNyz/5eZjeJabesPsdd4Juyjqyn+Wf8s90P8o/Z/0s
/8zVSv7J14S503rHNWnarkLW8s+OXEpklPyT06cE/xA8SdPyT34epneJqTfs
fsedoJuyjuxn+af8M92P8s9ZP8s/c7WSf/I1Ye603nFNmrarkLX8syOXEhkl
/+T0KcE/BE/StPyTn4fpXWLqDbvfcSfopqwj+1n+Kf9M96P8c9bP8s9creSf
fE2YO613XJOm7SpkLf/syKVERsk/OX1K8A/BkzQt/+TnYXqXmHrD7nfcCbop
68h+ln/KP9P9KP+c9bP8M1cr+SdfE+ZO6x3XpGm7ClnLPztyKZFR8k9OnxL8
Q/AkTcs/+XmY3iWm3rD7HXeCbso6sp/ln/LPdD/KP2f9LP/M1Ur+ydeEudN6
xzVp2q5C1vLPjlxKZJT8k9OnBP8QPEnT8k9+HqZ3iak37H7HnaCbso7sZ/mn
/DPdj/LPWT/LP3O1kn/yNWHutN5xTZq2q5C1/LMjlxIZJf/k9CnBPwRP0rT8
k5+H6V1i6g2733En6KasI/tZ/in/TPej/HPWz/LPXK3kn3xNmDutd1yTpu0q
ZC3/7MilREbJPzl9SvAPwZM0Lf/k52F6l5h6w+533Am6KevIfpZ/yj/T/Sj/
nPWz/DNXK/knXxPmTusd16RpuwpZyz87cimRUfJPTp8S/EPwJE3LP/l5mN4l
pt6w+x13gm7KOrKf5Z/yz3Q/yj9n/Sz/zNVK/snXhLnTesc1adquQtbyz45c
SmSU/JPTpwT/EDxJ0/JPfh6md4mpN+x+x52gm7KO7Gf5p/wz3Y/yz1k/yz9z
tZJ/8jVh7rTecU2atquQtfyzI5cSGSX/5PQpwT8ET9K0/JOfh+ldYuoNu99x
J+imrCP7Wf4p/0z3o/xz1s/yz1yt5J98TZg7rXdck6btKmQt/+zIpURGyT85
fUrwD8GTNC3/5OdhepeYesPud9wJuinryH6Wf8o/0/0o/5z1s/wzVyv5J18T
5k7rHdekabsKWcs/O3IpkVHyT06fEvxD8CRNyz/5eZjeJabesPsdd4Juyjqy
n+Wf8s90P8o/Z/0s/8zVSv7J14S503rHNWnarkLW8s+OXEpklPyT06cE/xA8
SdPyT34epneJqTfsfsedoJuyjuxn+af8M92P8s9ZP8s/c7WSf/I1Ye603nFN
mrarkLX8syOXEhkl/+T0KcE/BE/StPyTn4fpXWLqDbvfcSfopqwj+1n+Kf9M
96P8c9bP8s9creSffE2YO613XJOm7SpkLf/syKVERsk/OX1K8A/BkzQt/+Tn
YXqXmHrD7nfcCbop68h+ln/KP9P9KP+c9bP8M1cr+SdfE+ZO6x3XpGm7ClnL
PztyKZFR8k9OnxL8Q/AkTcs/+XmY3iWm3rD7HXeCbso6sp/ln/LPdD/KP2f9
LP/M1Ur+ydeEudN6xzVp2q5C1vLPjlxKZJT8k9OnBP8QPEnT8k9+HqZ3iak3
7H7HnaCbso7sZ/mn/DPdj/LPWT/LP3O1kn/yNWHutN5xTZq2q5C1/LMjlxIZ
Jf/k9CnBPwRP0rT8k5+H6V1i6g2733En6KasI/tZ/in/TPej/HPWz/LPXK3k
n3xNmDutd1yTpu0qZC3/7MilREbJPzl9SvAPwZM0Lf/k52F6l5h6w+533Am6
KevIfpZ/yj/T/Sj/nPWz/DNXK/knXxPmTusd16RpuwpZyz87cimRUfJPTp8S
/EPwJE3LP/l5mN4lpt6w+x13gm7KOrKf5Z/yz3Q/yj9n/Sz/zNVK/snXhLnT
esc1adquQtbyz45cSmSU/JPTpwT/EDxJ0/JPfh6md4mpN+x+x52gm7KO7Gf5
p/wz3Y/yz1k/yz9ztZJ/8jVh7rTecU2atquQtfyzI5cSGSX/5PQpwT8ET9K0
/JOfh+ldYuoNu99xJ+imrCP7Wf4p/0z3o/xz1s/yz1yt5J98TZg7rXdck6bt
KmQt/+zIpURGyT85fUrwD8GTNC3/5OdhepeYesPud9wJuinryH6Wf8o/0/0o
/5z1s/wzVyv5J18T5k7rHdekabsKWcs/O3IpkVHyT06fEvxD8CRNyz/5eZje
JabesPsdd4Juyjqyn+Wf8s90P8o/Z/0s/8zVSv7J14S503rHNWnarkLW8s+O
XEpklPyT06cE/xA8SdPyT34epneJqTfsfsedoJuyjuxn+af8M92P8s9ZP8s/
c7WSf/I1Ye603nFNmrarkLX8syOXEhkl/+T0KcE/BE/StPyTn4fpXWLqDbvf
cSfopqwj+1n+Kf9M96P8c9bP8s9creSffE2YO613XJOm7SpkLf/syKVERsk/
OX1K8A/BkzQt/+TnYXqXmHrD7nfcCbop68h+ln/KP9P9KP+c9bP8M1cr+Sdf
E+ZO6x3XpGm7ClnLPztyKZFR8k9OnxL8Q/AkTcs/+XmY3iWm3rD7HXeCbso6
sp/ln/LPdD/KP2f9LP/M1Ur+ydeEudN6xzVp2q5C1vLPjlxKZJT8k9OnBP8Q
PEnT8k9+HqZ3iak37H7HnaCbso7sZ/mn/DPdj/LPWT/LP3O1kn/yNWHutN5x
TZq2q5C1/LMjlxIZJf/k9CnBPwRP0rT8k5+H6V1i6g2733En6KasI/tZ/in/
TPej/HPWz/LPXK3kn3xNmDutd1yTpu0qZC3/7MilREbJPzl9SvAPwZM0Lf/k
52F6l5h6w+533Am6KevIfpZ/yj/T/Sj/nPWz/DNXK/knXxPmTusd16RpuwpZ
yz87cimRUfJPTp8S/EPwJE3LP/l5mN4lpt6w+x13gm7KOrKf5Z/yz3Q/yj9n
/Sz/zNVK/snXhLnTesc1adquQtbyz45cSmSU/JPTpwT/EDxJ0/JPfh6md4mp
N+x+x52gm7KO7Gf5p/wz3Y/yz1k/yz9ztZJ/8jVh7rTecU2atquQtfyzI5cS
GSX/5PQpwT8ET9K0/JOfh+ldYuoNu99xJ+imrCP7Wf4p/0z3o/xz1s/yz1yt
5J98TZg7rXdck6btKmQt/+zIpURGyT85fUrwD8GTNC3/5OdhepeYesPud9wJ
uinryH6Wf8o/0/0o/5z1s/wzVyv5J18T5k7rHdekabsKWcs/O3IpkVHyT06f
EvxD8CRNyz/5eZjeJabesPsdd4Juyjqyn+Wf8s90P8o/Z/0s/8zVSv7J14S5
03rHNWnarkLW8s+OXEpklPyT06cE/xA8SdPyT34epneJqTfsfsedoJuyjuxn
+af8M92P8s9ZP8s/c7WSf/I1Ye603nFNmrarkLX8syOXEhkl/+T0KcE/BE/S
tPyTn4fpXWLqDbvfcSfopqwj+1n+Kf9M96P8c9bP8s9creSffE2YO613XJOm
7SpkLf/syKVERsk/OX1K8A/BkzQt/+TnYXqXmHrD7nfcCbop68h+ln/KP9P9
KP+c9bP8M1cr+SdfE+ZO6x3XpGm7ClnLPztyKZFR8k9OnxL8Q/AkTcs/+XmY
3iWm3rD7HXeCbso6sp/ln/LPdD/KP2f9LP/M1Ur+ydeEudN6xzVp2q5C1vLP
jlxKZJT8k9OnBP8QPEnT8k9+HqZ3iak37H7HnaCbso7sZ/mn/DPdj/LPWT/L
P3O1kn/yNWHutN5xTZq2q5C1/LMjlxIZJf/k9CnBPwRP0rT8k5+H6V1i6g27
33En6KasI/tZ/in/TPej/HPWz/LPXK3kn3xNmDutd1yTpu0qZC3/7MilREbJ
Pzl9SvAPwZM0Lf/k52F6l5h6w+533Am6KevIfpZ/yj/T/Sj/nPWz/DNXK/kn
XxPmTusd16RpuwpZyz87cimRUfJPTp8S/EPwJE3LP/l5mN4lpt6w+x13gm7K
OrKf5Z/yz3Q/yj9n/Sz/zNVK/snXhLnTesc1adquQtbyz45cSmSU/JPTpwT/
EDxJ0/JPfh6md4mpN+x+x52gm7KO7Gf5p/wz3Y/yz1k/yz9ztZJ/8jVh7rTe
cU2atquQtfyzI5cSGSX/5PQpwT8ET9K0/JOfh+ldYuoNu99xJ+imrCP7Wf4p
/0z3o/xz1s/yz1yt5J98TZg7rXdck6btKmQt/+zIpURGyT85fUrwD8GTNC3/
5OdhepeYesPud9wJuinryH6Wf8o/0/0o/5z1s/wzVyv5J18T5k7rHdekabsK
Wcs/O3IpkVHyT06fEvxD8CRNyz/5eZjeJabesPsdd4Juyjqyn+Wf8s90P8o/
Z/0s/8zVSv7J14S503rHNWnarkLW8s+OXEpklPyT06cE/xA8SdPyT34epneJ
qTfsfsedoJuyjuxn+af8M92P8s9ZP8s/c7WSf/I1Ye603nFNmrarkLX8syOX
Ehkl/+T0KcE/BE/StPyTn4fpXWLqDbvfcSfopqwj+1n+Kf9M96P8c9bP8s9c
reSffE2YO613XJOm7SpkLf/syKVERsk/OX1K8A/BkzQt/+TnYXqXmHrD7nfc
Cbop68h+ln/KP9P9KP+c9bP8M1cr+SdfE+ZO6x3XpGm7ClnLPztyKZFR8k9O
nxL8Q/AkTcs/+XmY3iWm3rD7HXeCbso6sp/ln/LPdD/KP2f9LP/M1Ur+ydeE
udN6xzVp2q5C1vLPjlxKZJT8k9OnBP8QPEnT8k9+HqZ3iak37H7HnaCbso7s
Z/mn/DPdj/LPWT/LP3O1kn/yNWHutN5xTZq2q5C1/LMjlxIZJf/k9CnBPwRP
0rT8k5+H6V1i6g2733En6KasI/tZ/in/TPej/HPWz/LPXK3kn3xNmDutd1yT
pu0qZC3/7MilREbJPzl9SvAPwZM0Lf/k52F6l5h6w+533Am6KevIfpZ/yj/T
/Sj/nPWz/DNXK/knXxPmTusd16RpuwpZyz87cimRUfJPTp8S/EPwJE3LP/l5
mN4lpt6w+x13gm7KOrKf5Z/yz3Q/yj9n/Sz/zNVK/snXhLnTesc1adquQtby
z45cSmSU/JPTpwT/EDxJ0/JPfh6md4mpN+x+x52gm7KO7Gf5p/wz3Y/yz1k/
yz9ztZJ/8jVh7rTecU2atquQtfyzI5cSGSX/5PQpwT8ET9K0/JOfh+ldYuoN
u99xJ+imrCP7Wf4p/0z3o/xz1s/yz1yt5J98TZg7rXdck6btKmQt/+zIpURG
yT85fUrwD8GTNC3/5OdhepeYesPud9wJuinryH6Wf8o/0/0o/5z1s/wzVyv5
J18T5k7rHdekabsKWcs/O3IpkVHyT06fEvxD8CRNyz/5eZjeJabesPsdd4Ju
yjqyn+Wf8s90P8o/Z/0s/8zVSv7J14S503rHNWnarkLW8s+OXEpklPyT06cE
/xA8SdPyT34epneJqTfsfsedoJuyjuxn+af8M92P8s9ZP8s/c7WSf/I1Ye60
3nFNmrarkLX8syOXEhkl/+T0KcE/BE/StPyTn4fpXWLqDbvfcSfopqwj+1n+
Kf9M96P8c9bP8s9creSffE2YO613XJOm7SpkLf/syKVERsk/OX1K8A/BkzQt
/+TnYXqXmHrD7nfcCbop68h+ln/KP9P9KP+c9bP8M1cr+SdfE+ZO6x3XpGm7
ClnLPztyKZFR8k9OnxL8Q/AkTcs/+XmY3iWm3rD7HXeCbso6sp/ln/LPdD/K
P2f9LP/M1Ur+ydeEudN6xzVp2q5C1vLPjlxKZJT8k9OnBP8QPEnT8k9+HqZ3
iak37H7HnaCbso7sZ/mn/DPdj/LPWT/LP3O1kn/yNWHutN5xTZq2q5C1/LMj
lxIZJf/k9CnBPwRP0rT8k5+H6V1i6g2733En6KasI/tZ/in/TPej/HPWz/LP
XK3kn3xNmDutd1yTpu0qZC3/7MilREbJPzl9SvAPwZM0Lf/k52F6l5h6w+53
3Am6KevIfpZ/yj/T/Sj/nPWz/DNXK/knXxPmTusd16RpuwpZ3/HzXwC940IS

       "], {{0, 224}, {224, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{224, 224},
     PlotRange->{{0, 224}, {0, 224}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztfcGq/Vtz1IdC8DV8BTPJJAmOncWZA+ETdCAfCHEgTn0O38JH8AXEJ8gk
Y+eBQBJ0sCG0t+pfVd21zjkN97LvZq1e1f1bq7u612+f+8//3X/6i//wT373
u9/953/29//6i9//l3/5l3/5+//6r//oH/7j3//+D3/8L/7wT//+41/9v3/+
4fMf/Z//+Kf/83/8qz//73/713/63/7NH/7sj//mf/3Zn/zvf/vnn9+7PiP6
pzHI9wn9ylqsTxLYWP1XeJTPrj3sWkvZh+l90rZ/XHPTMWczLqXPiMsPV+d6
M1YnnqPL5y57EzpdcSxx7jb3pOtZXO2Zzfgzff6dIAm+mo63ytlhfbJpS0NM
S9QyyFrss9jkfhNO1z5RbE/zzAQfTuyrTXsTtiB7LM090v53xWoX/0zzLtY/
ynPfzHeJc+fKZS79yLNI8/l0jEX2zOcY9vvpM6IH2asuDsA+a/bssL5l45Vr
317FtEQtw+4HRGciDyJ2KXs7YXti/yhcV4lvyr5K8HClHmFtSeQs11l2+b+N
fyby/hUHdnEJ11lI8Ek276fjpHJerjjkhA3RidiLrMXORfiqa++xPFk5vwo3
c9mCrJuOaeyzRvQo+wHZh648qNRi6RzB4klzmMRnxJ+IjYn8rjwX5ay5eBHr
54T/XRwb2fNKDZ7Y82kOrKylPFP2WSh80uVbRL8rNyl7LMEhXZinuQo/T3N7
xf8KfiXnJnIfa4uLGyjPdxLlXLvO2madiIhr/7swpDlMAuc0nj1TSn5P1P6I
JDiMkounMYkYssk/Fd7C2qX4VuFISt0x2eU6d0qectWzSp517QEX51f6Jwrm
aS6LE5FEj0vZS6wPlTzryn1pfyqYXXFJqe/StV4idiV8omBI1CyKf9g8wj47
xP9sHZSwHfFJun/lqkFc52WTfyq2IDYqc5XaWanrN+tK1q4JJ3t2ED1KnnVx
P8Sfih5EJ+vbhI2JGoeNJ0rdoeQdF0dSuOIV5gkPMh7xvxJ/Jv3I9+zcRKx2
9VuU/aPsQ4X/TGNcfB7xFcs52XPk6mNscjylBlHOi2uvKs9ayU0uueLYrl5E
uq50xR8lV7ryKetblx4XP9zs27C2J56dUp+m+ZuyT9h4m8bs2vPss1PGJyQR
qxH9kx4EM9sDYcew67I5MVHXf0qid6TEVcW3Lo6XyONsnFH2qvKsldyk7PlE
nFTsUnoR6boSwePi3grvZfc54lvFP+zzZfdqog5V8CSeHYJHibeuM+viw+zZ
SWBG/I+MT/AZZIwrFyTqXFduTXNChQeyexWxPf1MFZ7MPjtFWN6eqCNcvSl2
XeWMuPhzmtsrXMXFpdnvN+tK1ifpnNjQJ5lEiedKfadwPBaPot/Fhdjz6zqz
CB5lXVfcQzAj37N6EvFnkkROTNS5VxwmzROmMYrtiT3PYnDxokR/bHPPKGu5
8gKLQYkJSg2F+MHF01w9CmQtxM+Jc6HgSefEqz6Jy1euuWysZn2IrKvUVolc
hox38Xalz6PU4y4OiYjih82+lssWpR5BfJLmMIq9iF1p2xM2urilUrcq/bH0
+VJwus4gG59Z/Yq4amrl7E94XPvNVRMp54L1G+KrdA8EkUQdNK2lcFTXc0/0
WDZrK3ZdZLxyZidsbA511d2sD6/qKaVWUvZSoo5W4l66B8jaiIiL917Fq09R
aj1Xf0zpkyDPSNkz7D5P8MAE153mujg5oh/Bozwj19mc1kL8oNSV7HN0idID
SfdJEMybelx9POXsKPVp4rwoPM3Fx9iY4Oqhsc+O1anoR9Zy1bOJ+o7NC4jt
7N5wnZfEPkf8oPBtJV65alKXvcqeYce7eH669mH3bSJGufheup+DxAdlr7J1
RyJeIWslOCHiE1d8UOy90jP5R6l5XfkUyQuuOJaOjQmOoeTT6XtX3EvUoSyX
S9e/in5X/5PdGwo3YG1h9STqMlecV3p6rO2IvYk+nnK+WJ6fqH0Yf///7GL1
IPoVfpXo5ygxgeV4rl6EK159yiYnTMQHJWYqOBN6lDqXxaBwoTROV2xE9CNz
2djuOiOuXiiylqIz0ddK1InTGFet5OpvKHtb+Z6VRO8o8ewS5wXBw+qZRIk5
So3A+meykY2riJ5ErZSuDZWYkO5/sviVnuo0BsGDzE3ki68qyn7YxMb2H9I1
kc/K38agxAQX193sZSE6WcxKD5/Fg4irtzDpVHovm/t8sovlD0rviMXJ1oOK
7Qoe1q5ETFD4D+IfF59hc42LByp948k/rL1KPTXZ69KZOGuIJDhhulfzymfF
h2n/fOpM9P2UmkiJjS7bEbtcsVHxSVoUzrZZF7t6aIgf2Pzl6uMlYhHLAVy9
I9ezS/BeV5+H9b9yRhT+g+hkfaXwYSVusDWywrWUmODieIot6Vzv4kUuncrZ
fOWzy4cJ/0xzXXvvqm/psh2xK1FjKn5IcxUXZ3PZxeph+5/KfmDzPpsjXLGI
9bmrt8ZKIv5s9goQcT27NM9RbGHjT6KuZzGze8nFRdmcwuapdK5P1KGTfkTn
NAaRhviAiLLn0+uy/Qp27232c9K2f85NnEelf5Ku11yYJ2yIjchcVk+6/8nm
GoXHsj5hfYWMV/iDcsaV+MNKoqZTnotSJyo8R7GFxcDuH8R2ZO5m/8flB9b2
dK5XctamuHCm40MC56Z/EP1pnunq5yj2ItiU3KrwEAQz6wfXfnP1stLcEpFE
/5PVr/BPxD+sT1hx5dZJJ4JB4SdXNV0ijk3YXDEKsT2BJ1Ejp/3fsH8S9YLi
/wTmBE9z9VFdz9e1B6YxiP8Te8/lq2ldpT5i/ansPVc/io3VSt5k/aOMZ2N4
on5E5rJ6lPM1CVtrKHnZ5RNXnpr8kD77Ll+lazpkruu5KJwh0cva3M8K/0z3
naa10nOVeoH1VeI8Ntd6k6T7AOn94+IkbJ3C4nfVR8i6rL0KJ1TqdJcexP+I
T1x+dnG21/ufSs+T5ZyI39K9O9afbK2H6Gf1sN9PclVDJeKqqzZ3nXfXfma5
oouTs3hYX7n2qsufbN+JxYZ8z0qi1ks837R+l9+U8a58l6iPkLlsT4aNRey5
m3yi6LnaMy5+lcCDewDX4+LSLJ9UxrB+QPzDjlF6bsrZR9ZK+0QZP811cTOl
xzV9rzw71icuUWpA5bmwshnnFVH6J+nYtVnrJXpEmz2oaa5Sj7DrKvnOda+h
rOvq4SscFVlL0TNJoi6e8CN2fef+J6InfX+UqJ0VHyp70nW+Jv3ps4Osi8xl
BYmrCcxKTZ3uO7H1XTo+b+6fhD8Tcd4Vu1y96M3aE9HTkB9dZxzR6aoZFZ2J
mpTlvUoPysXPG+pi5ZkqeBJ+UM7CpN91j8za4qrRNnOTK68pPk/0ExL7U/E/
G2dYzNO6rp6Aq+/ExqtEfG6451L8qdR6rC3pfqkiCf7vwtPAUVlh9x7LCV13
Oq6alOWcrrjH8nPElnRdPNmS6Es3nB2WSyNzEZyuZ+GKdYnc5Mpris8R2xFJ
11CK/12xS6n3lZ4A4k92LsvVXfHZJZu9CMQPm30AV7/UFXsV3ybOHYstzXtd
cYPdh0qPdLLRdf+o6ET8j+BXzvVmXcziV/Ybi38z7rnytcIZpvHsuUMws9+z
Z5zFrzzTRL+XxYOMZ/Vc4Xydd32K0v/c5EINvmLPVwIDIq7+ebpHrdiF4Ens
H7YuS9yDuHKKK06yuUbheMozdfWKJ0nHHKVXrKyrzHU9LxcvUu6tEJ8rnFkR
JbeynBnxv3KO0jkowTfSONnxbbyLzR2u+LzZi077CvGbK2dt9jQQbMrczf2v
YJvGp3t06bOp7G3ELuUe3JWXERtdPavNmKNwG5ZTKfhdfpjGKPYm6i82lyV6
NRNOFk+ilrnan4j+CSeiJ5GbEry0gXcpvQglPrO+UsYjely+msa77uwSPbQJ
w2YOSu//NI9lOZtrXeVsbvpB4bdKXkYws7m4IT4r3CbB55W5rp4Sa6/SO0V4
bKLOSte5bDxBdLLnd7Pe3JREPkpzb9daiih9lc37nYZe2fT9pk9cHGDzbn2z
5+bisaxdiXXZs5nGcyXKXmW5RKLniUiipkP0v97/VHp6CE7XPYIrtiPfT/jT
vkLsSu9PVmeip3H1/gA7V1nL5TflTsrFhVj/NPTKXPcsyFptsslbEjH5UzZ5
OLKu0qNT+gzpM5U4g6yw57QhziDrsvjTe95lL5LHlTsCxF62d9omiB9c+d1V
66XvGhJ30wo2RE96btqHrB6Wi6b9o4irVzZ9v3k/fvUZ8a3LLtZvrG/T+l19
kkTMdPnBhW2T4ymx0eUTxUYFQ4L3pjkq4hPl/m7ClugtX8Xq9B0KWxewe8Al
CS53VaO55iqYFZxsfGa5VsK3yhlM7J90/zOR3xO1nstv0/h0f8m13xI1yKYe
15lScCLjlVr7Kp4oNk5jXHVxoh5M8AqFZypnYfpe6e2kY/XVHUo6Hm7GfxZn
QmcDV3StxcZnpUeawLzJl9gclMCTrgfZdRO5O809ELtY/UqPUakBE3oQPyDj
EWyumMb6VolvrO2sJM64EquVOoXF6erjIbzU9XwR327GbaUuTsS3hp4M4quE
n106N+cqmNm5kx5XbcXuVZe9Lr7EYnOdtat+XcL2NPdu68W5hM2hip7P8em4
l84LLM5E7bDZk3HVxUi8UsS1T1j8bA3CYmZ1Ivpd+8fVF0LsZde9yguszkRM
u+J7V5w23WNhz2bCXlZcd77TGFZ/W79OsZ39fvO5b/IBZXyafyp+Y+e6xJWX
Ec6g9IevevLKeFf8v+Kurl4oi61t/7A6P8crPMFV46T31WauYSWRj9i5CuZp
DFunsDUOsm6i3nH1BFz7cLOfMMnm3nOJwoFd/QFkXUUPMp7t57jO4GZfLvHs
FP+zNaPSb7nKoYr/Fb6qYED8kOiFsn523f0p+0f5XqlhXfekyLqIT1w5PR3T
rvoAm5wW0cnmuAT+RA7a5LrT+EQ/YbPGaTt3n5J+7i5RuIGLf7p6Pq7z6Hp2
7HlkcSq+YiV9Xj5FsT3NGxH/IN+ztii8yMXxNsXVP2/rkyfuWF0xLYEtMRcZ
j6zLnk1Xncjin7CxtrPfK/sQGcPmss37O3b81blL1Puv1LbKeUT0J85yYm4i
tiR6Wa69ke4lsra7ah8E/6QHEYVXsz0WV6/vKhax/lc4dkOfXBHXWg160pxW
uddTxrD4N/n5JImaFPEVEtsR/Qq25rnpXkGinlVyDYtT4ZAv1uasTsX2RJ69
2s/sXLbn2dYTVp57miMl+g9X+w3B7Mr7m8/FFdPa9LBzkfEKHtfeTvCKxLPb
1MnWxelc/MpcZS1XnnJJ4pkqeYflVy7MytxE3e06s2z9yPagEr0s1naFRyXy
votXI3NdHEnh9si6LP4EN0PsuuqTb94ntulxzXWdX1fdyvZ5WP0IfgVbQqcS
t5UYzvgPtbdhrvJclL2dyJvpWgZZS/HPVW3ueo7KHQTiT1es2+xlsbxIuQtL
26WcHVdccnF7ZF1XLnBxM2VvuESpqdO9iE1J94Jc9yzK/SBbCyNzE/wqUUuy
+Uj5/hND891oes+zc111tKtedvUqFd+6+p/p2hwRF29n82aiB4j4zdXLQvyj
cM6EvcqZdeWpaQyLwVWzuHKBi5sp96SJet8lCrbNz4pdLp8g+pXziOBJ8GHW
dhZzOr654jlrI2J789yrmDNhQL5X9Ch5CuEYrvOuSDrGuu4gFP6p1I+KpPm2
cr/ssosdn853Lm7P6m8TpQZExif6WolexOZn1g+/9QzVuay4zoJyx5GwV9lX
iH4lxym5D7Hxau+55iLjkXWvauqELa6aLrGv0vEc8dWkkz2DCE72jLO1g+Lb
BN9mOa1rj02+UvZAmvsl4jxi+9Vn1g9KHa08i4TPkfEJac5T7J5Rnku6xmTt
VfQj635+z+Y4tk8yYWDjP2uX4pPE3M36lMWQtoXNlcj3rP6EP134WZzKGWTr
TeWMuHyb6EkqfFjpCStn3xWHETyJeiod9xLnevI/MpcVVwxk507jr/ohV3lK
qVVde95VY7Lrsj5M92rY/kMiribqms25LGZFj8JzEJ1K3nflAlZ/4jmmn6/C
B5RYl7gXc33v6kkiPkHGpDmJ0gdI5EFWj8v2Tf3s3pvmpms6l2zWAi4Mih5E
kL3hqvs+xVVjuvIpgjNd8yoxEFlX6WkkOGp6bqKmS4yfRMlNyvdKb0rpG7CS
7h8q+REZv9nnQYTdb+nYy+YChYcoPWpXHlRyylVPLH3uED+n76c2/XA11yVp
n7AxSjnvSl/FtWdc30+2u3qhyFqJOmKy3RXr2LnTmERNl+bDV/HEta/YdZXY
5aqhlLOJrIusxfrEFevYej/dm0L8r+Bk9bMY2DOezinT3E39m3yAjZ+bvcer
/LjJsdN7w3UnuFlbJXgXK4qfFf7J9l5+6rtfW9d1NiedDXV6w/2sS9ieZ3Of
h30uShx2YUbwuGp2BH+ahyQkXcMm9F/xgYQtaT+75r6ytxU8yPN19eWUOkjh
XYkaQanHEf8g6yI4lWexOTfNxxJ8uCE/us5UIl4lnq/Lh1d9HsVvLr6n9KbY
dRF/KvhZ3052IfZu1owsnoT+acwmH0jYws7dzI+THtfcxH5GcLLnV7njYH3l
knSNoORE1j+JvMZKc33nwpyoTZB1WWwunZ+i8LRE7cbyFsRGJe4l+jyu8azf
XPEE8WeCr7r2KmIji8HFu1xxJu2HTT6QsCXhZwXDFb/d7KMqPbREn+GKhyPj
2f3J8lJkLfYsb9bpV/XdFR9W9G/6XzkvCK9I+IfFo5wjNqe4+jwuQbAhPmSf
xef3Svx38UZ2ryI2pnPKJOn94/LDJh9I25KWq/zIYlDigCvXuGxX8leahyf2
IdvzdPnHhe2V+i69FqsnUW8ieFidCj9kuQ2L2YWH7ZcqdSXb50nUg2xsYeMP
6xPkeSk9TwRPoueGyFVMc9WwiKTvHTZrtwnbZt8GwZCem5CrGnzCkLg7dvFq
ZK6SZ105grUd+Z4dw/pN0ZMYn8CsYEtgcO2NBG+Z1lW4FhJnlLyZqItdfIyt
C9jnyMZ2dgyyH5BnhOwHZK0Ex0iMT9/1K89d4QMuzMqzS5z3q/yIYLg6C+ln
p8T/Bm6Q6Dde1a2KtNV3DZhZ/WkMrM5JXH17JW4geNjPCtdK7FVXzmU5ufL+
gIvrIj5k/aY896u7oQQPcdVW0xg2Dij7jcWcuPdJjEf0pPNd+t45gQHxgxIH
WEnHPUQP8r3rDKbrlytuifjTNV7BnDiDLp6G6GT3M5t30uea1ZOIbxNOdi4r
rmfB8lIX10V8mOh1uO7grmJamrcrNU6iDmIxu2xX9CDjr/JjQs8mBhfvct2J
TDiv+uEIHsQnrrr1lbuDq7PPYr7C7xL2WbM9LjaPNNSGyJhEL0KpCxQO4NLP
cl0lprHjlT4estYkVzEhcaZc/W2lDmIxTz7Z1JPuG7AYEno2MSjCxiVkfyLr
bvINNp4rPNBVuyE2uvRc9QpcmDc5touruHgUUjcheQfR7/LhlSh1sZKjFT7A
6le+V/yGjGf3fLoHkrB3k9u4epjKXkUwN3AzZHxCEvuhAUM63yl9+ITflDOe
qK/ZGJ6wMaEH0cnOTayV4EWJfk6ib4BgUHhOQhK8/Yp7sL5F4qpSOyics+19
BoUzb/asVDt/VTbrI2WfuDhVuj5qiDmKXGFI5DulBmfxp7kBmyPYfqZSmys2
XnEzBY8y/krY2o3ViazFYnD1vtJxOPEuylWfVsnjrtqB5aLKOxiIT5R94sKv
SDOfSddHyBjFV5uyGYsQDA019dU+RL5X4iFiL+s3RNg95qqvkTObsHdTNnsF
6RjOfr7qC7HxzdX7YutNV53L+iet08WX2L2UiFHpnryS312YXTVU2t6G+5HN
eHgVt1n/bM5tqKmv9iGCR4l7rGzuMVd/QMk1DZyq4fxuxnDlc6K2StRuyt5G
1k3Uuax/Ej5nfTt9n+CfSoxyncer3oui33Vn18ZnFB8qdSib1ya7XrzvSJ8p
RY8irnju4hgN+Su9x9hzp/SBN+v9V84vMt41t0E28SdySrr+dfXNFJ0KZldN
Oul31Uqsf1w+mcYn4o8Sq9P2uuYi9iJj0nMR21l70zob8lRDnc6Ka4815C9X
vcD6ip2L5J10DHRJ29lR5ibqsqtenKt+RMYoHGazr5U+L+xarO1K/9M13mUL
qx9Zi9WTuLNL7FtlbjouueYqtl/FWEXPFYZpjKumU/Iju1aiJtqswV1cAsHG
8nBXDyTNr1y+RfQg49m56d4vstYm/mlumrsq+BH/JPL1Zt2n1OmILcp4Vmci
l/2W/37FLtedXQJbYu4kLhu/833HZp5KY2D1uPIji9N1h75Zg09zE75iY5qr
BzJhSN+tIxgUPdP4hj7DJmYWA7KX2JyL7FsEp6sHwto+jU/wYdY/m/E8Ia5c
ltbP+pzl5w1xKdFXSfQiNuuOTWnAk96TyvcursjeoSv5a5NPpn3lugNK5PG2
86vM3eSKm7nDpZ+tidg7C5ds+gf5fpLEPbgrnic+Mz7+FX+69Lvu7KZ10/y5
oa+CYEPwvHjfscmZGzCwelhReh0s/tfzl8tXiM50P+SqnnWdnYY8iMx17beE
foV/sjVRYj9c3e1O+pF1WZxX9x1XPCG9T1wcHrFFkU1+3lB3pOvraXzbWWjA
wOpR9gybX1zvh7ySv9K+UnimK/ch2KYxDff7yNxNfps4O4gkuApSMyp9pDb/
tHGPzfsOFltaj2ufJHrRky1XdXeir3LFc1h7Xfo357p0vsLbEQxs3mHxK5g3
85dSU7v6nxOe9HsFip6ruQ0YFJybOQv5XunJK5iv/DPJFffYvO/Y5EUKZtf3
rjM7yWbd7donytlkJd0vSu9nl41pntnA29N5B8HJ8rGr/IXYMtml+GrCo/RC
E/G/4fy+gl+Rq16x8u6HK1awOBN9qjQ2pL5O86tNXoTo2TxfLmGfETsmgSHd
r0vwSUU279cQDAk8bbydFSXvTPgn/Qp3Tdg7jWF7Vok6VOmFXr0TcjW3GQN7
rhO5I91zS9RKaf8kYrJSX2++h7DJTxRReraJzw32Xq27yScbnlFDD2TSw85l
JX3vM63lugtG7uMmnYh/GuKGwsmVZ4H0nVw2/vQ/c/0xRY8Lp9JzQ8awsSLt
H0VPGpvyjlM6BjZwPCU2Kp/TPkHsTWBg/TyNRyT93F3+cdm1qaehtkrf9Sj3
bmnOvxk3ED3p9xNY2zfP4NXcr4Rh8xmluZ/rHdGEfzb1IP5nY8jVewibHG/C
jIxXxBWHN3vaCT8r5xHByeJBvkfWvbofvOJC6figcCSlL6G8A9bwfK/uzREM
yFyWA2+ewau5r2NIPyPlbkKJSwrXcvkH0enSw55Bl11KDETGu3igC/9m/0fB
7DpfCgdgMSOS6JEm9CT6fg15atKjjPmUxPNlexHI53TNm3guru9d/WclLyvP
l/PmvO7V3DYMrueY6Pmk++3IWoma69e84RUX50nY5eJayPirOJPm9mm56p1+
SoKrN+i5WqtND6JfwYNwJBeHZPNsoha7ykfK+1oK/3Q938mudNxIz73CgJyR
Sb/LLjYOpLlfIoYk/OPqQbF+TtvF6nSN34wzLLbNc8faqHyf3sOKP6/0bNre
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
EsSu9F7dvFvf3FcsTgUzi7+N422utVmzpDEoONkxn4Lwz4lbInqU9wEm/Yh/
ED2JvtBV76itR+Ti+ay9rF0uPyDjkbUa3me7Oo+Inqv8hehJ9AbTZ3Czr9Xw
vgSybtu+QnAm4uFV/b7JrzbzlEunC8MVj53wT7yR/T59R6PIVS/iqmfF4pnG
N9zNJeya5k5j0veMm/vhxZ7bi3w10Stou1tv4Anp3Lq5r674D4uTHb9pY5r7
vShXdz2T/ycMCudE8CfsaouBk550z6oh5iBzG/IIOxfR2eB/Fw9v+Kz4rYGv
uuQKz2ZfK83DWWwIBsVe3Hs52eyNpDle+p3khs8stmk88j3rZ8T/LJ9kx/zq
c/4Vu9IcnsWp2I5IW2x0xdWGPsxVfZGO+crcV/psbXx1k3s3r4v4OfEelDI+
Ia/sq6t3JNJ8jF1rwtkWDydsv/YU/rEofHXy7aavXPxc8dUkrhio7POGGnnz
fUvXfmYxsHo264vNfjiLbXMfKucX0Znmq5vcO4HHtS7it0QuaODtL+4rl6R7
Owlb0rWPIolzccU3Jv65qV9ZN9EjSvPhT7nq36b32BVnRjBscuYG/ydsZOem
+2ysjZ+S4KubNVFCz2beudK52ddCMDTsq80+qovjuWxRMCDjr/JC4rm4bHH1
Kln9bF/rxV7NVX+v7Z0El35X3GPxsHZN6zb4f/NMbfbZEBs3+Woa24v5NKE/
YePV3IZ9NeFx9R43OTZiC4IT0d8QD696DqwtEw/8/IzMZfUneubNvZr0HUcD
p0X0p/sMCH6XuOqLTf+7bFT0pHFOYzbv4tM1UVqPsu7mOwMJG6/mJtZyxWfl
/CY4pJKXG3pZ6XiI6EzgZ33O8k/2uSNxicX8Sq+GxZOo913YEMzpdV04X6kv
NuNng54r/ZOkuX2bbOYjRX8zZ3DN/Ur7apJE7G3uZSl4WP0vxnMXt5zGfGJg
98zmnamr1kv0/VjbrzhtYl0F51VPtc3/bXqu9Lft/6vPii1p/7h0vjJXWeuV
z5Ndm/f4bbVMQ1y6ws/mYoR/InOvehqb66bfqUbWbXjnsOHuzJUXrvzQlq8V
PW3vb7DrpvGkPyP2TmMUXyH+YfUrOJvnvrivXnkXNL3fGuJhczxncSp7jO2L
In5o7qWw+llsiB5Ev4vTsjiv4n9C56Yf0pwtrSetc9KvjPmUdIxNy1U+0lBn
cbbNRca75qYlzSEnnZv9pVfiYXqtTT7M6nTVR+meRgK/K45d9YcRbMhcdt2E
317PKc08sKEGZPUj6yJ4kLkuG9v2OStXNk4YmuduxsOrZ6FgnvSk+1ouWxL+
mcan11KkIZ4r37Nj0vgVnZ/S3B9mZTN3XN05suNf6QNsxn9EZ8N7C6y46tzm
u/VEXb/Z82+Yi4xn5za8y5E+74qkz1Q6HuKW5tbarBkb4jkrDXWcy5ZJrt55
u+I5zXoaztrmHX1aFJwv7v+ruS4+k8CciM/Ncxv2lUvn1e+JlD5hczxE5Ar/
1X00qz/9eRP/NDftk0knsi6Cs6Ev8YqexLqbfQAW89X5RXAi+BGdDfv/ai6i
U/me1Y+Mf9HPDTVywoeJ8ZO4aiIWc/PnTfyI/rT/kbmv/M4Owe/Sn7CRlU1O
i+hp45YNvZpEHyC9Vxv4G+tn5Ht2jIJhc27azwpmdn+61r2au1kjb/6ugR2v
9F5cMXPC2fC3BTZ/U+PiIQ29CAV/eq107GXXSnCPTbsaOGFaj7LuZh+g7Xfc
aa7++v7fnNv22w1kvEsantEm5rQe1/ir9z+RuVd7dRIXP1f0uzg8guHF3JGI
Mw25r/mdz+92R7+Z69l1kfHpc+HSOc19ff8j/nHNVaTtb4Nc9VUScxvimEtP
um5Vnns6rqY/u/yp2Pspm/fRrM6r3KHgZ3Fu5j4EM+uHhvcBJmmIpZMedi4r
rt88KhjS5xfRyeJ8ff831MvpmMPObXvH44qbvR4PE/Vdw3trLLbEHp6+/0r7
vDl3JPRPepQxE/7N96hZzMo+3+xRNNT7advTOBE9LjzKWq65DfvfZcunXL3r
NeG84jk8ao+ezXPdpidRtyL6E+cUwcPavqmn7S4mzSddOF1zWf2JtVz9hPTZ
UaStR5HWM41J17YJnIiedD17xcld0rznlfHN9eNV/dXWF2rQk8CQOMttPfPm
WHe1zxVsbf2cqxzK6mfl6p03V6xI1ImvxOQGnC5R6tkrTn61/xv2vILhdS49
2eJa14W5IT40c6TEOU2czWlM8/vSCXtdOCedDWd5s65p+L2Dsn827+au6kRE
55WeK5xXMWrChnyv2DuNb7ibRvA35AV2jIKzrceCrLuJuS2ONfRzrt4hadt7
bfePac7mkvRZaOMJV393C/le0dPQo2iLyQ1cevMd+DZ+guhUxjfU8m2crZlL
v9gXUta90rPJIZW6afNsXsUKBCc716WH5ScNZzmd1xr4sOJ/FieLrUGngqGB
+6VxTjrTcxv+fsUVN2uo5T9lk7NNOhu49It9ocS6aT3sXBaPa63Ns5m+Z0n3
hTZrEFYazjKi5xWewMpmrk9w9USd2BCTr3RuxodELnDh3Hy3CtGZruWvOBuy
lks2OdJV3dcWxxo4TGItZYyyFmuLokdZ61Pa3sln173K45t/A4rVucmpPsW1
lxK/Gbm6I57Gs3oa6iZEv4ItbUuDNNSSzX8/oZlLp3nmJv9nMTTomcYk7qyV
tVhp+E0Eq6ch9irP7sX37dl1NzG/+N4du65L5+bcSU86rio6XbLZQ2MxbH5W
fNXWJ1FsYfVM8gqXVsZf9dhf1MNK+ncQrrOZ4H6bOb2tP8Y+i82apa2Odr2n
4Rrf4EN2LUXPJoYGuYoPDXkn8Vmx98W/HaGs+1W5dENfSJnbrMe1fxQeMmF+
5X0SJV65fNLcH7t6R+iqjkYkHQMbnl26vmBtaahxNmvJhncS0nkHwcBKok5X
xl9xp6t83cCllXXbeiBtetK1GLKuy66rPXAlr/THEAyJZ6qsi8hmbEmPv/Jh
Qq7O8mYvLtFL3+Ramz3Azbzf0E+74jCszle4NLtu87sEDXomneyYhpw7yVVv
0MWRmnnLJM09TFYSdRyyFovNNX7Thw11Yvr8unyI4E9jSPufHdN2Njff62vj
bOk9f8WlN+c2cMLNuMrqRGQz5yZyATs+3a9o4y3pXkGi/5bmMAo2RadrPKtT
8eHV+3gJbGkfbvajFF+xayn4FWmoF1hsn3KVWxE8rM5mLr05N71Wg57NfbJZ
d1y9T9KgR1lLGb/5Hj6CmZW292Ab4piLpyUwp/WwOjd7cen92fYufeLzV8K2
mVsTcnU3dOWrV7h0Qo8iaW6QtvGqnkrraagZXZLuYSbqoyu+mq4j0u9gKzqv
OHZaFK47yevv0l/1w5ux/dYzdOpJP+tE76XNVwnMDXsD0XO1TzZrvYacnth7
Cc7QEH8SuX6zPnLhRNZqq5fTteE0Jt1jR3Q27/+rerPht1Guuc3YED1pPOln
zeJs4Gzpuc3cchrfsE8mPGkbXfqnuS4bkXVZbM3xJ5HrEfzp+uiqn3YVe1n9
mz5RcCJzm/c/olPxj6seSejZ9MkmtuYelzK+rY+EYNucm14roWfSqYxvqOsR
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
5wlz298JuZrbnBOvaqUXY3v6N3cNMZm1i52rrDuN+Up/+ze9VsPvTxN2sXMb
zoVLT3qPsRgS+3/z79i7xiN6lPPL6mexIRiuPrtsaTizbT0Q1/iruQ0xOaGH
lXQ/s4EnTHrY8Vc5tG1vp/P4V9LTxu039SjrbvadFGys7cpc1/iErxLSfO7Y
dRN4rs5sYu5P/9O77qaetn7mNBexi/UJa0sCw2beTGOexjf8jetX9LjmvhJ/
2LnTmM2+EyuvcLBNPtkQ9xrqnU0fuvQ3z530JMZfzW14voqeq5i8GfPT51HB
MI1v/g07MpfFwOpv+/1p87tVrP62ONYw94oLNdeeii3T3Ia4x869+nvyLB52
LdxL/1jP1dz0/m/g4ch417oJPZNOdowSD5UxrrOJ2HsVz1+s16725+uSjmlt
8achhiv401yogYNtxlsXTmT8NLe5t9bwd0JeP7Mv5lN2fNtZSOzDSRre/3St
hUginm+um5jbdofe/BmxcbKXnav4s0HP1VyEz7vWVfSkfZWIt81xz6Wnbfw0
9zucWde6DTwcGe9aV9GT+A270mNx6We/3+QMiefiWjcxV5GGflHD71jTMa0h
F7v0NPRSWHmx9mT1NNiYsKsBc3PfIIHHNXfSkxh/NbchJrvkq77/2XCf5ZKG
s7/Z92NxJvQrctUTU/Q3xLGGuYl93lx7uvZYg40N+7ltfFrazmxi3QYejox3
rYvoSfQw2e+VtRI9TAQ/4mdkvAtzw/6cxly9Y9/GnzexKXrYMa610no25zb8
Xn7Cz45PxzTemt9eKzF+mnvVs0qPb4516bmTnsT4q7lXMbn574q88v5nW/5q
/g17+vw2/6ZjE5uiR5EGbjnp2ZzL6knUzs0cLFFXJmxs2M8N49tiXXpu8756
5Ywn8CTiJGujS79iV8K3Lj3f7fwq37PS0KtJyE//09sXYm1B5PXaU5FNG1ls
r9Tmr9RiyNyGOiIx/mpuOiZv+u2rvv85yVX+asi5yFwXZnYtVn+ak6R1JjCw
0sAtJz2JuVe/zbyyN2HjVe2j2KWs28YzG2qxtvP+os8TOJV1r2ph5ftEXLrK
3Q3PCBmfmHt1fpVnl76jT+jc/O18Qy526dnk5J9y9V7Tpq+u3ul6JS+7MLTl
hc279Vf4bUMuZsdvxkMEz+a6De9//vyG3TvXhXka0/Cbjgmza29cxTFlrRdz
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
dt3Es07zloZ9osjVui/W6ZPOaUzDOXqFSzScwa80tzknKnPTHOaV9/MR2xG5
ev//UxpyXwMGdnwz90jUa5N8h/c22/bJK7X563X65l595f2Bhj7Vz9ycvGjv
i3NZPa44yepU1mrOQc0YGrhlIude9WQS9ia4kILZZe80/pXa/KvW6Z9yFQ8V
bK/MRcb/zH03J7rsfXFu+uw3/A2TV3LQK/lXwZy2PY3ZxVc3n7XrDDbU9ZPO
xPj0ui/W6Ym9ivhts65vntvGH9rmvp4Tv8N+3jz7yphE36YtB72C4apeU3Re
2fspLh6Y3rdtcW+zL9HQD2mu0xN7Van7rv72ztVcZPx3nqvoedHehj2Z7lt+
yne4V2rOfVcY0nMRPWnenuYqru9deBS56mMgOlkMV+u+Uqcj4zdr6jSGBi7B
jv/Oc79qTmzrAyhz0/HKFSc312rIQci63/n3eon+vIJZwemS9L5tiHsuucLw
ek8gweU26yMWg6Jncy4y/jvM/ao5UZnbvJ+v3o1HMGyu1cYTkLnfoaZ2yeZ9
HCKJGrBB0n2MtK9eX3fSyX6/2YNqeOez4W/iuea+wj1cc13yir0NfYBEHcqO
ScTJzbXSNjbsqxdrvXQuTpydRP7dzMubPkz45MXfD7rWnfQkxMXlJp3svmrw
TwMPUTC/OPcqL1/Zq8xt4MbpmuI7vP959Vu5ae5Xramv/nbNZg9nWlcZg+C5
8qGiZ3Ououf1nkA6XySeaXM/IW07Mv6rzv3Ov2F/ZU9e/Yad/b5tLVY/OwaZ
21D7KOuycxU9ynOfdCZ6OJs5PfHc2/bnVW3+lXoC6R47gnPTJ5+S9gmC4cVY
/ZVyxHeY+5XO4+a6m2td/Xa+QU963au8/ymJ/p6iZ9KZ5iqKzzffm22rza/W
TdfLyviGe5/mfoJLT0Osvpp7VRt+1bmTHmVu+jwq/SV23c21Nm1Unummntfz
fkPcU3Qm+lEsfmS8Ig2xV5HXewKuvXEVrxrej03HDXaugr9t7s9v2L1z03uy
4Tz+vP+53xd6paZ2yStxz/UuqNKPUvCz2NK12CbOzRpks15m8SPjWZ0u/Yie
zX5C22/nG/jwKzniRV81xFhWz+t9xc21XOuy0sBRv1LeZ/G7RNlLrP405s/P
fwcAq/u/
       "], {{0, 224}, {224, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{224, 224},
     PlotRange->{{0, 224}, {0, 224}}], "\[Rule]", "4"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2DHK/e9RhvGgIG5DXYHaJ7gFg2AbwdgEhFhIsHENrsHGyt1YW7kDexOw
sEkh+Z8zn2ueKZSf4X6fuec71z1nzB/9zd//5c9/70c/+tE//OGv/9df/uwf
/+KXv/zZr376B7/5P/72Z7/48z/7xe//+p//+b//85t//+u//fGP/+Rf/uon
f/fPP/3Jv//Xr37yT//9Hz/+65//6Y9/l//8t/37/+o/Ueu3vf9D1f3/vvkJ
bz+U/hN1vzmLT/P5Q/X1iVloWfvEtxX4/0S/P5Sf36XWD/W3UzP6ob7bJ76n
/M43s/wJPqd22g+VzU9w+2nGvpmjqd/QqXtJ61H4zZX7/Safwu/mC1n75v+P
VuH5m7/Rn/4+9exMMaP9dtT18k6b0n/zFvrmvz/tQbhzZP431Z3iZ+vvpsCJ
0G/xHeHmFJic8llk5mW9vNM0vcCz7EH4/jL/m+pO8VPJbDFrQr/Fd+7mnPVZ
ZOZlvbzTNL3As+xB+P4y/5vqTvFTyWwxa0K/xXfu5pz1WWTmZb280zS9wLPs
Qfj+Mv+b6k7xU8lsMWtCv8V37uac9Vlk5mW9vNM0vcCz7EH4/jL/m+pO8VPJ
bDFrQr/Fd+7mnPVZZOZlvbzTNL3As+xB+P4y/5vqTvFTyWwxa0K/xXfu5pz1
WWTmZb280zS9wLPsQfj+Mv+b6k7xU8lsMWtCv8V37uac9Vlk5mW9vNM0vcCz
7EH4/jL/m+pO8VPJbDFrQr/Fd+7mnPVZZOZlvbzTNL3As/xv4fvL/G+qO8VP
JbN3c7byK/+uCX8r+ywy87Je3mmaXuBZ9iN8f5n/TXWnmKxk9m7OVn7l3zXh
b2WfRWZe1ss7TdMLPMt+hO8v87+p7hSTlczezdnKr/y7Jvyt7LPIzMt6eadp
eoFn2Y/w/WX+N9WdYrKS2bs5W/mVf9eEv5V9Fpl5WS/vNE0v8Cz7Eb6/zP+m
ulNMVjJ7N2crv/LvmvC3ss8iMy/r5Z2m6QWeZT/C95f531R3islKZu/mbOVX
/l0T/lb2WWTmZb280zS9wLPsR/j+Mv+b6k4xWcns3Zyt/Mq/a8Lfyj6LzLys
l3eaphd4lv0I31/mf1PdKSYrmb2bs5Vf+XdN+FvZZ5GZl/XyTtP0As+b/NzN
2a07xUMls3dztvIr/64Jfyv7LDLzsl7eaZpe4LniZ+p+kPnfVHcTM8LvpsCJ
0G/xnbs5Z30WmXlZL+80TS/wXPFzN+fuupuYEX43BU6Efovv3M0567PIzMt6
eadpeoHnip+7OXfX3cSM8LspcCL0W3znbs5Zn0VmXtbLO03TCzxX/Ez1K/O/
qe7U7CqZ1fJ1N6fD5N2cu3egdrdoenmnaXqB54qfCrd1/9p3+7SHSmaL+RL6
Lb5zN+eszyIzL+vlnabpBZ4rfirc1v1r3+3THiqZLeZL6Lf4zt2csz6LzLys
l3eaphd4rvipcFv3r323T3uoZLaYL6Hf4jt3c876LDLzsl7eaZpe4Lnip8Jt
3b/23T7toZLZYr6Efovv3M0567PIzMt6eadpeoHnip8Kt3X/2nf7tIdKZov5
EvotvnM356zPIjMv6+WdpukFnit+KtzW/Wvf7dMeKpkt5kvot/jO3ZyzPovM
vKyXd5qmF3iu+JFnIfuv1J365pXMFvMl9Ft8527OWZ9FZl7WyztN0ws8V/wI
s3hh72n79tMeKpkt5kvot/jO3Zxv7t4p/3W9vNM0vcBzxY8wixf2nrZvP+2h
ktlivoR+i+/czfnm7p3yX9fLO03TCzxX/AizeGHvafv20x4qmS3mS+i3+M7d
nG/u3in/db280zS9wHPFjzCLF/aetm8/7aGS2WK+hH6L79zN+ebunfJf18s7
TdMLPFf8CLN4Ye9p+/bTHiqZLeZL6Lf4zt2cb+7eKf91vbzTNL3Ac8WPMIvi
fCt5n/qGlZkW8yX0W3znbs5Zn0VmXtbLO03TCzxX/AizkH93tO8m8Hk3Z2s/
yxzK2b+bc/cO1O4WTS/vNE0v8FzxI8xC/t3RvpvA592crf0scyhn/27O3TtQ
u1s0vbzTNL3Ac8WPMAv5d0f7bgKfd3O29rPMoZz9uzl370DtbtH08k7T9ALP
FT/CLLRdJH83gc+7OVv7Webwbs53slNk5mW9vNM0vcBzxY8wCzkLQi2Nz7s5
W/tZ5vBuzneyU2TmZb280zS9wHPFjzALOQtCLY3Puzlb+1nm8G7Od7JTZOZl
vbzTNL3Ac8WPMAs5C0Itjc+7OVv7Webwbs53slNk5mW9vNM0vcBzxY8wCzkL
Qi2Nz7s5W/tZ5vBuzneyU2TmZb280zS9wHPFjzALOQtCLY3Puzlb+1nm8G7O
d7JTZOZlvbzTNL3Ac8WPMAs5C/Uep3qpfNtivoR+i+/czTnrs8jMy3p5p2l6
geeKH2EWchamMiXzeTdnaz/LHMoZvJuzu28F/3W9vNM0vcBzxY8wCzkLU5mS
+bybs7WfZQ7lDN7N2d23gv+6Xt5pml7gueJHmIWchalMyXzezdnazzKHcgbv
5uzuW8F/XS/vNE0v8FzxI8xCzoIwI43Puzlb+1lm/m7Od7JTZOZlvbzTNL3A
c8WPMAs5C1pdgc+7OVv7WWBeeKeS063ZKTLzsl7eaZpe4LniR5iFnAWtrsDn
3Zyt/SwwL7xTyenW7BSZeVkv7zRNL/Bc8SPMQs6CVlfg827O1n4WmBfeqeR0
a3aKzLysl3eaphd4rvgRZiFnQasr8Hk3Z2s/C8wL71RyujU7RWZe1ss7TdML
PFf8CLOQs6DVFfi8m7O1nwXmhXcqOd2anSIzL+vlnabpBZ4rfoRZyFmQ68pM
VjJbzJfQb/GduzlnfRaZeVkv7zRNL/Bc8SPMQs7CprrfnFcls8V8Cf0W37mb
c9ZnkZmX9fJO0/QCzxU/wizkLGyq+815VTJbzJfQb/GduzlnfRaZeVkv7zRN
L/Bc8SPMQs7CprrfnFcls8V8Cf0W37mbc9ZnkZmX9fJO0/QCzxU/wizkLGyq
+815VTJbzJfQb/GduzlnfRaZeVkv7zRNL/Bc8SPMQs7CprrfnFcls8V8Cf0W
37mbc9ZnkZmX9fJO0/QCzxU/wizkLGyq+815VTJbzJfQb/GduzlnfRaZeVkv
7zRNL/Bc8SPMQs7CprrfnFcls8V8Cf0W37mbc9ZnkZmX9fJO0/QCzxU/wizk
LGyq+815VTJbzJfQb/GduzlnfRaZeVkv7zRNL/Bc8SPMQs7CprrfnFcls8V8
Cf0W37mbc9ZnkZmX9fJO0/QCzxU/wizkLGyq+815VTJbzJfQb/GduzlnfRaZ
eVkv7zRNL/Bc8SPMQs7CprqbuJ363RTYEPotvnM356zPIjMv6+WdpukFnit+
hFnIWdhU95v8VDJbzJfQb/GduzlnfRaZeVkv7zRNL/Bc8SPMQs7Cprrf5KeS
2WK+hH6L79zNOeuzyMzLenmnaXqB54ofYRZyFjbVFfjRPBTzJfRbfOduzlmf
RWZe1ss7TdMLPFf8CLOQs7Cp7hQ/GsOyt7s5HQ7v5ty997S7RdPLO03TCzxX
/AizkLOwqe4UPxrDsre7OR0O7+bcvfe0u0XTyztN0ws8V/wIs5CzsKnuFD8a
w7K3uzkdDu/m3L33tLtF08s7TdMLPFf8CLOQs7Cp7hQ/GsOyt7s5HQ7v5ty9
97S7RdPLO03TCzxX/AizkLOwqe4UPxrDsre7OR0O7+bcvfe0u0XTyztN0ws8
V/wIs5CzsKnuFD8aw7K3uzkdDu/m3L33tLtF08s7TdMLPFf8CLOQs7Cp7hQ/
GsOyt7s5HQ7v5ty997S7RdPLO03TCzxX/AizkLOwqe4UPxrDsre7OR0O7+bc
vfe0u0XTyztN0ws8V/wIs5CzsKnuFD+Cz035Eu6Z4jt3c876LDLzsl7eaZpe
4LniR5iFnIVNdaf4kfNbzJdwzxTfuZtz1meRmZf18k7T9ALPFT/CLOQsbKo7
xY+c32K+hHum+M7dnLM+i8y8rJd3mqYXeK74EWYhZ2FT3Sl+5PwW8yXcM8V3
7uac9Vlk5mW9vNM0vcBzxY8wCzkLm+pO8SPnt5gv4Z4pvnM356zPIjMv6+Wd
pukFnit+hFnIWdhUd4qfy+/dnMI7d3PO+iwy87Je3mmaXuC54keYhZyFTXWn
+KnkV2D7bk6Hw7s5d+897W7R9PJO0/QCzxU/wizkLGyqO8VPJb8C23dzOhze
zbl772l3i6aXd5qmF3iu+BFmIWdhU90pfir5Fdi+m9Ph8G7O3XtPu1s0vbzT
NL3Ac8WPMAs5C5vqTvFTya/A9t2cDod3c+7ee9rdounlnabpBZ4rfoRZyFnY
VHeKn0p+Bbbv5nQ4vJtz997T7hZNL+80TS/wXPEjzELOwqa6U/xU8iuwfTen
w+HdnLv3nna3aHp5p2l6geeKH2EWchY21Z3ip5Jfge27OR0O7+bcvfe0u0XT
yztN0ws8V/wIs5CzsKnuFD+V/L7wPTX27uZ8Jy9FZl7Wf7Ou1nslg0U/wizk
LGyqO8VPJb9C1u7mdDi8m3P33tPuFk3/zbpa75UMFv0Is5CzsKnuFD+V/ApZ
u5vT4fBuzt17T7tbNP0362q9VzJY9CPMQs7CprpT/FTyK2Ttbk6Hw7s5d+89
7W7R9N+sq/VeyWDRjzALOQub6k7xU8mvljW5x+I7d3PO+iwy87L+m3W13isZ
LPoRZiFnYVPdKX4q+a1kTeix+M7dnLM+i8y8rP9mXa33SgaLfoRZyFnYVHeK
n0p+K1kTeiy+czfnrM8iMy/rv1lX672SwaIfYRZyFjbVneKnkt/L2u537uac
9Vlk5mX9N+tqvVcyWPQjzELOwqa6U/xU8lvMWp29uznfyUuRmZf1m/aYcOcI
tQQ/wizkLGyqO8VPJb/FrNXZu5vznbwUmXlZv2mPCXeOUEvwI8xCzsKmulP8
VPJbzFqdvbs538lLkZmX9Zv2mHDnCLUEP8Is5CxsqjvFTyW/xazV2bub8528
FJl5Wb9pjwl3jlBL8CPMQs7CprpT/FTyW8zaFAMaw8LvmvC3ss8iMy/r5T2m
6QWeK36EWchZ2FR3ip9KfotZq99Fd3O+k5ciMy/r5T2m6QWeK36EWchZ2FR3
ip9KfotZq99Fd3O+k5ciMy/r5T2m6QWeK36EWchZ2FR3ip9KfotZq99Fd3O+
k5ciMy/r5T2m6QWeK36EWchZ2FR3ip9KfotZq99Fd3O+k5ciMy/r5T2m6QWe
K36EWchZ2FR3ip9KfotZq99Fd3O+k5ciMy/r5T2m6QWeK36EWchZ2FR3ip9K
fotZk/vVsnA356xPbe9pd4uml/eYphd4rvgRZiFnYVPdKX4q+S1mTei34uFu
zlmfAm/f9F/Xy3tM0ws8V/wIs5CzsKnuFD+V/BazJvRb8XA356xPgbdv+q/r
5T2m6QWeK36EWchZ2FR3ip9KfotZE/qteLibc9anwNs3/df18h7T9ALPFT/C
LOQsbKo7xU8lv8WsCf1WPNzNOetT4O2b/ut6eY9peoHnih9hFnIWNtWd4qeS
32LWhH4rHu7mnPUp8PZN/3W9vMc0vcBzxY8wCzkLm+pO8VPJbzFrQr9bObyb
c/fe0+4WTS/vMU0v8FzxI8xCzsKmulP8VPJbzJrQr/CO8Lsm/K3sU+Dkm/7r
enmPaXqB54ofYRZyFjbVneKnkt9i1oR+hXeE3zXhb2WfAiff9F/Xy3tM0ws8
V/wIs5CzsKnuFD+V/BazJvQrvCP8rgl/K/sUOPmm/7pe3mOaXuC54keYhZyF
TXWn+Knkt5g1oV/hHeF3Tfhb2afAyTf91/XyHtP0As8VP8Is5CxsqjvFTyW/
xawJ/QrvCL9rwt/KPgVOvum/rpf3mKYXeK74EWYhZ2FT3Sl+KvktZk3oV3tH
yKkwF82nxol2t2h6eY9peoHnih9hFnIWNtWd4qeS32LWhH4r79zNOeuzwsnp
/T2m6QWeK36EWchZ2FR3ip9KfotZE/qtvHM356zPCien9/eYphd4rvgRZiFn
YVPdKX4q+S1mTej33nH+VvYpzOWb/ut6eY9peoHnih9hFnIWNtWd4qeS32LW
hH6L78jfdmteipy8rJf3mKYXeK74EWYhZ2FT3Sl+KvktZk3ot/iO/G235qXI
yct6eY9peoHnih9hFnIWNtWd4qeS32LWhH6L78jfdmteipy8rJf3mKYXeK74
EWYhZ2FT3Sl+KvktZk3ot/iONusX8lLk5GW9vMc0vcBzxY8wCzkLm+pO8VPJ
bzFrQr/Fd+TfrK15KXLysl7eY5pe4LniR5iFnIVNdaf4qeS3mDWh3+I78m/W
1rwUOXlZL+8xTS/wXPEjzELOwqa6U/xU8lvMmtBv8R35N2trXoqcvKyX95im
F3iu+BFmIWdhU90pfir5LWZN6Lf4jvybtTUvRU5e1st7TNMLPFf8CLOQs7Cp
7hQ/lfwWsyb0W3xH2Hv1WvW9p90tml7eY5pe4LniR5iFnIVNdaf4qeS3mDWh
3+I78n9vuTUvRU5e1st7TNMLPFf8CLOQs7Cp7hQ/lfwWsyb0W3znbs5uX5W9
XdfLe0zTCzxX/AizkLOwqe4UP5X8FrMm9Ft8527Obl+VvV3Xy3tM0ws8V/wI
s5CzsKnuFD+V/BazJvRbfOduzm5flb1d18t7TNMLPFf8CLOQs7Cp7hQ/lfwW
syb0W3xHvjm1/ArfUHjnNb28xzS9wHPFjzALOQub6k7xU8lvMWtCv8V3Kjen
xuSmvafdLZpe3mOaXuC54keYhZyFTXWn+Knkt5g1od/iO3dzft9bkZOX9fIe
0/QCzxU/wizkLGyqO8VPJb/FrAn9Ft+5m/P73oqcvKyX95imF3iu+BFmIWdh
U90pfir5LWZN6Lf4zt2c3/dW5ORlvbzHNL3Ac8WPMAs5C5vqTvFTyW8xa0K/
xXfu5vy+tyInL+vlPabpBZ4rfoRZyFnYVHeKn0p+i1kT+i2+czfn970VOXlZ
L+8xTS/wXPEjzELOwqa6U/xU8lvMmtBv8Z27Ob/vrcjJy3p5j2l6geeKH2EW
chY21Z3ip5LfYtaEfovv3M35fW9FTl7Wy3tM0ws8V/wIs5CzsKnuFD+V/Baz
JvRbfOduTpNn+Z3X9PIe0/QCzxU/wizkLGyqO8VPJb/FrAn9Ft+5m/P736TI
yct6eY9peoHnih9hFnIWNtWd4qeS32LWhH6L79zN+f1vUuTkZb28xzS9wHPF
jzALOQub6k7xU8lvMWtCv8V37ub8/jcpcvKyXt5jml7gueJHmIWchU11p/ip
5LeYNaHf4jt3c37/mxQ5eVkv7zFNL/Bc8SPMQs7CprpT/FTyW8ya0G/xnbs5
ff61d17Ty3tM0ws8V/wIs5CzsKnuFD+V/BazJvRbfOduzu/7LHLysl7eY5pe
4LniR5iFnIVNdaf4qeS3mDWh3+I7d3N+32eRk5f18h7T9ALPFT/CLOQsbKo7
xU8lv8WsCf0W37mb8/s+i5y8rJf3mKYXeK74EWYhZ2FT3Sl+KvktZk3ot/jO
3Zxv+vwmA3W9vMc0vcBzxY8wCzkLm+pO8VPJbzFrQr/Fd+7mnPUpfBPtbtH0
8h7T9MLeq/gRZiFnYVPdKX4q+S1mTei3+E7lRtqaHeGbaHeLppf3mKYX9l7F
jzALOQub6k7xU8lvMWtCv8V3KjfS1uwI30S7WzS9vMc0vbD3Kn6EWchZ2FR3
ip9KfotZE/otvlO5kbZmR/gm2t2i6eU9pumFvVfxI8xCzsKmulP8VPJbzJrQ
b/Gdyo20NTvCN9HuFk0v7zFNL+y9ih9hFnIWNtWd4qeS32LWhH6L71RupK3Z
qeyul/XyHtP0wt6r+BFmIWdhU90pfir5LWZN6Lf4zt2csz4FZrS7RdPLe0zT
C3uv4keYhZyFTXWn+Knkt5g1od/iO3dzzvoUmNHuFk0v7zFNL+y9ih9hFnIW
NtWd4qeS32LWhH6L79zNOetTYEa7WzS9vMc0vbD3Kn6EWchZ2FR3ip9KfotZ
E/otvnM356xPgRntbtH08h7T9MLeq/gRZiFnYVPdKX4q+S1mTei3+M7dnLM+
BWa0u0XTy3tM0wt7r+JHmIWchU11p/ip5LeYNaHf4jt3c8761JgRetT08h7T
9BWGBT/CLOQsbKo7xU8lv8WsCf0W37mbc9bnMePr5T2m6QWGK36EWchZ2FR3
ip9KfotZE/otvnM356zPY8bXy3tM0wsMV/wIs5CzsKnuFD+V/BazJvRbfOdu
zlmfx4yvl/eYphcYrvgRZiFnYVPdKX4q+S1mTei3+M7dnLM+i8xo36TyzYU8
CneOUEvwI8xCzsKmulP8VPJbzJrQb/GduzlnfRaZ0RirfPOXv5VWS/AjzELO
wqa6U/xU8lvMmtBv8Z27OWd9FpnRGKt885e/lVZL8CPMQs7CprpT/FTyW8ya
0G/xnbs5Z30WmdEYq3zzl7+VVkvwI8xCzsKmulP8VPJbzJrQb/GduzlnfRaZ
0X4HK99cyKMwX6GW4EeYhZyFTXWn+Knkt5g1od/iO3dzzvosMqNlufLNi71X
clf0I8xCzsKmulP8VPJbzJrQb/GduzlnfRaZ0bJc+ebF3iu5K/oRZiFnYVPd
KX4q+S1mTei3+M7dnLM+i8xoWa5882LvldwV/QizkLOwqe4UP5X8FrMm9Ft8
527OWZ9FZoR+BQ/CHtP0AsMVP8Is5CxsqjvFTyW/xawJ/RbfuZtz1meRGU1f
+eZCL8KdI9QS/AizkLOwqe4UP5X8FrMm9Ft8527OWZ9FZjR95ZsLvQh3jlBL
8CPMQs7CprpT/FTyW8ya0G/xnbs5Z30WmdH0lW8u9CLcOUItwY8wCzkLm+pO
8VPJbzFrQr/Fd+7mnPVZZEbW17+V9j0ruSv6EWYhZ2FT3Sl+KvktZk3ot/jO
3ZyzPovM1PXytxK+TzF3RT/CLOQsbKo7xU8lv8WsCf0W37mbc9ZnkZm6Xv5W
wvcp5q7oR5iFnIVNdaf4qeS3mDWh3+I7d3PO+iwyU9fL30r4PsXcFf0Is5Cz
sKnuFD+V/BazJvRbfOduzlmfRWY26bVvpX0f+XvW/QizqOyNet0pfir5LWZN
6Lf4zt2csz6LzLys1/aYphcYrvgRZlHZG/W6U/xU8lvMmtBv8R35N/qF7BSZ
eVmv7TFNLzBc8SPMorI36nWn+Knkt5g1od/iO/Jv9AvZKTLzsl7bY5peYLji
R5hFZW/U607xU8lvMWtCv8V35N/oF7JTZOZlvbbHNL3AcMWPMIvK3qjXneKn
kt9i1oR+i+/Iv9EvZKfIzMt6bY9peoHhih9hFpW9Ua87xU8lv8WsCf0W35F/
o1/ITpGZl/X1PNa/zzf/Xfwd3Lo36nUr+6TyuylwIvRbfOduzlmfRWZe1n86
a1q/ldwV/QizqOyNet0pfir5LWZN6Lf4zt2csz6LzLys/3TWtH4ruSv6EWZR
2Rv1ulP8VPJbzJrQb/GduzlnfRaZeVn/6axp/VZyV/QjzKKyN+p1p/ip5LeY
NaHf4jt3c876LDLzsl57R9ML37DiR5hFhdt63Sl+KvktZk3ot/jO3ZyzPovM
vKz/dF2t30ruin6EWWj8b607xU8lv8WsCf0W37mbc9ZnkZmX9Z+uq/VbyV3R
jzALjf+tdaf4qeS3mDWh3+I7d3PO+iwy87L+tbqV3BX9CLOocFivO8VPJb/F
rAn9Ft+5m3PWZ5GZl/XaTqt8H62W4EeYhcz/prpT/FTyW8ya0G/xnbs5Z30W
mXlZr+20yvfRagl+hFnI/G+qO8VPJb/FrAn9Ft+5m3PWZ5GZl/XaTqt8H62W
4EeYhcz/prpT/FTyW8ya0G/xnbs5Z30WmXlZX9lp2vfRagl+hFnI/G+qO8VP
Jb/FrAn9Ft+5m3PWZ5GZl/XyTtPyLmdc8CPMQuZ/U90pfir5LWZN6Lf4zt2c
sz6LzLysl3ealnc544IfYRYy/5vqTvFTyW8xa0K/xXfu5pz1WWTmZb2807S8
yxkX/AizkPnfVHeKn0p+i1kT+i2+czfnrM8iMy/r5Z0m3yRaLcHPpvluyp3A
xtQOqfxuCpwI/RbfuZtz1meRmZf18k4TPAgMV/zczflO3Sl+KvktZk3ot/jO
3ZyzPovMvKyXd5rgQWC44uduznfqTvFTyW8xa0K/xXfu5pz1WWTmZb280wQP
AsMVP3dzvlN3ip9KfotZE/otvnM356zPIjMv6+WdJtwwAsMVP8K8ZP431Z3i
Z+vvpsCJ0G/xnbs5Z30WmXlZL+80TS9nXPAjfH+Z/011p/jZ+rspcCL0W3zn
bs5Zn0VmXtbLO03TyxkX/AjfX+Z/U90pfrb+bgqcCP0W37mbc9ZnkZmX9fJO
0/RyxgU/wveX+d9Ud4qfrb+bAidCv8V37uac9Vlk5mW9vNM0vZxxwY/w/WX+
N9Wd4mfr76bAidBv8Z27OWd9Fpl5WS/vNE0vZ1zwI3x/mf9Ndaf42fq7KXAi
9Ft8527OWZ9FZl7WyztN08sZF/wI31/mf1PdKX62/m4KnAj9Ft+5m3PWZ5GZ
l/XyTtP0csYFP8L3l/nfVHeKn62/mwInQr/Fd+7mnPVZZOZlvbzTNL2cccGP
8P1l/jfVneJn6++mwInQb/GduzlnfRaZeVkv7zRNX/938Xdw696o153iZ+vv
psCJ0G/xnbs5Z30WmXlZL+80TS/wLHsQvr/M/6a6U/xUMlvMmtBv8Z27OWd9
Fpl5WS/vNE3/ie/5P8D+aO8=
       "], {{0, 224}, {224, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{224, 224},
     PlotRange->{{0, 224}, {0, 224}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt3DFu1EAUBuAVSIhrUJKCAgo6I2qaKJxgkaCKhBQKREtHlQaOwDHScgka
Wm5ASSJR0Ky0lucfv/F+RaIvkdfyvJl583Zs+dGb9xfv7u12uw8Pb39d7D++
vLraf3r94O6Pt/vLZ08v79/y17+fO38//zr9ef5kuvlyNv3vb79/TK+uP0+P
f569OHTM3OMPHXPM/w95yTW0Ome6jYnPLolPq2s75viefTfXo/R1z2OWxKHV
vGs1ftI5qlWfLumjRP5P5+G15kI6lyZycqsxMGJOTsS81fHpfJg4f2KsJsZ5
Ygykc286Junc0rMmTOf/VnNnq+tIen6tNQfXqjfWGntr1Q8Vxl6FfFihfu5Z
X/WcU2vl5J5zf8Q6IZ1v0/GvEIcK69eIubfnWrkkRyW+942+jlTIM6PPwRHn
coXaY/RrTtQbibqocp8uiUkiJ89dUyqMpbVyS+L8Pb8jVBi3iZrhFHJvNVdo
41bXkWp7KRX62lw+TVeIf4Vr6NmWRI2Uzudr5b10bknXqxXGZCJWFfbAeXve
ai1RoV2V48PMuZzTc1+u2n5UhVrF3sLyNibuiVRoLzMz8+ju+RzCiPtRc2ub
avfTl/TXKB79/iYzM/MpOL0Wb2k/apT76RXGVQVX+M7CzMzMOVe4bz5KjaEu
6h9bMWdmZt6G089zbsni0ye2PT/LzMzMfZx4/rNCu9aK1SnHh5mZmXmuj9m7
s7/HzMzMzEuceIdnhXYxMzMzcx23eoen5x6ZmZmZ+ZBbvRMp8e5QZmZmZt62
0+9TUnMyMzMz8zFWZzIzMzNzBaszmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZ
mZmZmZmZmZmZmZmZmZmZmZmZmXlE/wU1tmki
       "], {{0, 224}, {224, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{224, 224},
     PlotRange->{{0, 224}, {0, 224}}], "\[Rule]", "1"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1kHq7Vl1xfFCQTIHOwk4AkO6VWQGQZ1ACdoqCRhIyCxspu88HEMEW7Yc
ilVo44G84r3//551Puve1VB2He5/vd/eZ521v//yy//82a9/8MUXX/zXP337
fz/7+n/+/be//fp/f/6j7/7jV19/868//eaH35Z/+fv/vqv/+fc/+fLHf/7D
l7/704+/+r8//uarf/uP///yFz/8768+PP9Y/eHvP1Z/7t9+yr/7KZrv+f2n
9PUpf/uoGb7n370159O/ec98HuXVR3ngc/t9z90lvZG830d95637vXUvt+rT
d/GeGb7nez73G07kT0ueJDP8Vv48yp8nvuFRPknuu9MZcuJ+hb5O/Fu3Mvk9
Gfuo35zOsRP/1mkPJ/Pw9L0IuyB5v9q9vBqLJjP5xG9O7KNbb//E70/v5Vv6
wlt4NRYVzgVPCj4ci5reTt6jzKKN2aXdS7Iei/osKmSyvJeFWcksmtyDQp7L
fY1F8+8r6VV55pqmoKNll3YvyXos6rCo8PaFOWj5ozHh5/5tI7Mlv3MsmmeY
W/tiLOpoCjpadmn3kqxbWCvpk8b5jEXHoqfn05Lncl9j0fz7SnpVnrmmKeho
2aXdS7JuYa2kTxrnMxYdiz4TswnfL3te8OFY1PF2o6ago2WXdi/JuoW1kj5p
nM9Y9DVZ9MQc2vNc7mssmn9fSa/KM9c0BR0tu7R7SdYtrJX0SeN8xqJj0Wdi
NuH7Zc8LPhyLOt5u1BR0tOzS7iVZt7BW0ieN8xmLPjeLvhqzCd8ve74lc8ai
zsw1TUFHyy7tXpJ1C2slfdI4n7Ho87HoLc+057nc11g0/76SXpVnrmkKOlp2
afeSrFtYK+mTxvmMRZ+DRQXPtOe53NdYNP++kl6VZ65pCjpadmn3kqxbWCvp
k8b5jEV7WVTzTHuey32NRc33dSszW7hRy3Dh3Y1FH1u3sFbSJ43zGYuORZ+J
2YTvlz0v+0fYuckcE7zdqCnoaNml3UuybmGtpE8a5zMW9Vn0VnY1Mpvw/bLn
Zf8IOzeZY4K3GzUFHS27tHtJ1i2slfRJ43zGoiaLCtnVyGzC98uel/2jvYuk
V+WZa5qCjpZd2r0k6xbWSvqkcT5jUYdFb72LZ2I24ftlz8v+EXZuMscEbzdq
Cjpadmn3kqxbWCvpk8b5jEX9WY1F7+at0NdYNL/Tk16VZ65pCjpadmn3kqxb
WCvpk8b5jEX9WY1F7+at0NdYNL/Tk16VZ65pCjpadmn3kqxbWCvpk8b5jEUz
+hpPnphDe57LfY1F8zs96VV55pqmoKNll3YvybqFtZI+aZzPWPS58+fVmE34
ftnzsn+EnZvMMcHbjZqCjpZd2r0k6xbWSvqkcT5j0efOn1djNuH7Zc/L/hF2
bjLHBG83ago6WnZp95KsW1gr6ZPG+YxFnzt/Xo3ZhO+XPS/7R9i5yRwTvN2o
Keho2aXdS7JuYa2kTxrnMxZ9m76wXzTPtOe53NdYNP+mkl6VZ65pCjpadmn3
kqxbWCvpk8b5jEXPvXchf16N2YTvlz0v+0fYuckcE7zdqCnoaNml3UuybmGt
pE8a5zMW/X6d5NzGonfzXO5rLJp/U0mvyjPXNAUdLbu0e0nWLayV9EnjfMai
zi4bi97Nc7mvsaj/fpOZ2cKNY1FnFwg5c6JuYa2kTxrnMxb92++FuY1F7+a5
3NdYNP+mkl6VZ65pCjpadmn3kqxbWCvpk8b5vDKLanMbi97Nc7mvsWj+TSW9
Ks9c0xR0tOzS7iVZt7BW0ieN8xmLOnMbi97Nc7mvsWj+TSW9Ks9c0xR0tOzS
7iVZt7BW0ieN8xmLOnMbi97Nc7mvsWj+TSW9Ks9c0xR0tOzS7iVZt7BW0ieN
83lWFtWySOPJE72357nc11g0/6aSXpVnrmkKOlp2afeSrFtYK+mTxvk8E4vK
WaTx5Ine2/Nc7mssmn9TSa/KM9c0BR0tu7R7SdYaY4xF7779W3NoySKNJ0/0
3p7ncl9j0fybSnpVnrmmKeho2aXdS7JuYa2kTxrn08iijVmk8eSJ3tvzXO5r
LGrmw63MbOHGsaizC4ScOVG3sFbSJ43zaWFRLdOE/aJ5pj3P5b7Govk3lfSq
PHNNU9DRsku7l2TdwlpJnzTOR2ZRoa+xaBezCd8/Fr27T4Xc07LimTQFHS27
tHtJ1i2slfRJ43zGos7cxqJ381zuayyaf1NJr8oz1zQFHS27tHtJ1i2slfRJ
43zGos7cxqJ381zuayyaf1NJr8oz1zQFHS27tHtJ1i2slfRJ43zGos7cxqJ3
81zuayyaf1NJr8oz1zQFHS27tHtJ1i2slfRJ43ySLCrvaGFuY9G7eS73NRbN
v6mkV+WZa5qCjpZd2r0k6xbWSvqkcT5yJgt9jUW7mE34ftnnsn+EnSvknjZz
TVPQ0bJLu5dk3cJaSZ80zkfOZKGvsWgXswnfL/tc9o+wc4Xc02auaQo6WnZp
95KsW1gr6ZPG+ciZLPQ1Fu1iNuH7ZZ/L/hF2rpB72sw1TUFHyy7tXpJ1C2sl
fdI4n/e8WSHPW7JI48kTvbfnudzXWDT/ppJelWeuaQo6WnZp95KsW1gr6ZPG
+WgZ25Jpwn7RPKN575n6Govm35Scky3cqOW28O7Goo+tW1gr6ZPG+WgZ25Jp
wn7RPKN575n6Govm35Scky3cqOW28O7Goo+tW1gr6ZPG+WgZ25Jpwn7RPKN5
75n6Govm35Scky3cqOW28O7Goo+tW1gr6ZPG+Xx4fjqf5R09Fn0OZhO+X/a5
7B9h5yazS/B2o6ago2WXdi/JuoW1kj5pn89YdCwqnGv7WuhrLJp/U0mvyjPX
NAUdLbu0e0nWjax12ict87mVz/KOHos+B7MJ3y/7XPaPsHOT2SV4u1FT0NGy
S7uXZC2z1um+GllUyGd5R49Fn4PZhO+XfS7755myTsuKZ9IUdLTs0u4lWWus
NRb9x98IfNWyo4VZjUXv5rnc11g0/6aSXpVnrmkKOlp2afeSrAXWSmbyid+0
vy8hz59pVmPRu3ku9zUWzb+ppFflmWuago6WXdq9JOux6FhUyPNnmtVY9G6e
y32NRfNvKulVeeaapqCjZZd2L8l6LHqXRQW/CXnekkUaT57ovT3P5b7Govk3
lfSqPHNNU9DRsku7l2Q9Fs2zqOY3Ic9bskjjyRO9t+e53NdYNP+mkl6VZ65p
Cjpadmn3kqzHohkWbcwBwTNaFmk8eaL39jyX+xqL5t9U0qvyzDVNQUfLLu1e
kvVY9ByLtueA4BktizSePNF7e57LfY1F828q6VV55pqmoKNll3YvyXosOhYV
8rwlizSePNF7e57LfY1F828q6VV55pqmoKNll3YvyXosOhYV8rwlizSePNF7
e57LfY1F828q6VV55pqmoKNll3YvyXosOhYV8rwlizSePNF7e57LfY1F828q
6VV55pqmoKNll3YvyXos+um/aZnVWHQsKpxr+1roayyaf1NJr8oz1zQFHS27
tHtJ1i18lfRJ+6zGomNR4Vzb10JfY9H8m0p6VZ65pinoaNml3UuybuGrpE/a
ZzUWHYsK59q+Fvoai+bfVNKr8sw1TUFHyy7tXpJ1C1+d9skJdm3PAWEOWhZp
PHmi9/Y8l/sai+bfVNKr8sw1TUFHyy7tXpJ1C1/JuaHNaiw6FhXOtX0t9DUW
zb+ppFflmWuago6WXdq9JOsWvpJzQ5vVWHQsKpxr+1roayyaf1NJr8oz1zQF
HS27tHtJ1i189Z5vS2amMKux6FhUONf2tdDXWDT/ppJelWeuaQo6WnZp95Ks
W/jqdI9j0bGonD+vxmzC98s+l/0j7NxkdgnebtQUdLTs0u4lWbfw1ekex6Jj
UTl/Xo3ZhO+XfS77R9i5yewSvN2oKeho2aXdS7Ju4avTPY5Fx6Jy/rwaswnf
L/tc9o+wc5PZJXi7UVPQ0bJLu5dk3cJXp3sci45F5fx5NWYTvl/2uewfYecm
s0vwdqOmoKNll3YvybqFr073OBYdi8r582rMJny/7HPZP8LOTWaX4O1GTUFH
yy7tXpK1zFen8/nEb1p2hJbnLVmk8eSJ3tvzXO5rLJp/U0mvyjPXNAUdLbu0
e0nWGl8l8zn5PY05IMxByyKNJ0/03p7ncl9j0fybSnpVnrmmKeho2aXdS7IW
+OpWPp/4TcuO0PK8JYs0njzRe3uey32NRfNvKulVeeaapqCjZZd2L8n6Fl8J
+XziNy07QsvzlizSePJE7+15Lvc1Fs2/qaRX5ZlrmoKOll3avSTrsehjf9Oy
I7Q8b8kijSdP9N6e53JfY9H8m0p6VZ65pinoaNml3UuyPp23yZy5lYeNO0LL
85Ys0njyRO/teS73NRbNv6mkV+WZa5qCjpZd2r0k61t3IeTzid+07Agtz1uy
SOPJE72357nc11j07o4Yizqago6WXdq9JOtH3cWt/XvaM7d2k5ADwhy0LNJ4
8kTv7Xku9zUWzb+ppFflmWuago6WXdq9JOvGDEx65tZuEnJAmIOWRRpPnui9
Pc/lvsai+TeV9Ko8c01T0NGyS7uXZN2YgUnP3NpNQg4Ic9CySOPJE72357nc
11g0/6aSXpVnrmkKOlp2afeSrBszMOmZW7tJyAFhDloWaTx5ovf2PJf7Govm
31TSq/LMNU1BR8su7V6SdWMGJj1zazcJOSDMQcsijSdP9N6e53JfY9H8m0p6
VZ65pinoaNml3Uuy/vDbWlgr6Zlbu0nIAWEOWhZpPHmi9/Y8l/sai+bfVNKr
8sw1TUFHyy7tXm7VLayV9EzjfMaiY1HhXNvXQl9j0fybSnpVnrmmKeho2aXd
y626hbWSnmmcz1h0LCqca/ta6Gssmn9TSa/KM9c0BR0tu7R7uVW3sFbSM43z
GYuORYVzbV8LfY1F828q6VV55pqmoKNll3Yvt+oW1kp6pnE+Y9GxqHCu7Wuh
r7Fo/k0lvSrPXNMUdLTs0u7lVt3CWknPNM5nLDoWFc61fS30NRbNv6mkV+WZ
a5qCjpZd2r3cqltYK+mZxvmMRceiwrm2r4W+xqL5N5X0qjxzTVPQ0bJLu5db
dQtrJT3TOJ+x6FhUONf2tdDXWDT/ppJelWeuaQo6WnZp93KrbmGtpGca5zMW
HYsK59q+Fvoai+bfVNKr8sw1TUFHyy7tXm7VLayV9EzjfMaiY1HhXNvXQl9j
0fybSnpVnrmmKeho2aXdy626hbWSnmmcz1h0LCqca/ta6Gssmn9TSa/KM9c0
BR0tu7R7uVW3sFbSM43zGYuORYVzbV8LfY1F828q6VV55pqmoKNll3Yvt+oW
1kp6pnE+Y9GxqHCu7Wuhr7Fo/k0lvSrPXNMUdLTsSt6LzKUtrJX0TON8xqJj
UeFc29dCX2PR/JtKelWeuaYp6GjZpenfqltYK+mZxvmMRceiwrm2r4W+xqL5
N5X0qjxzTVPQ0bLrhP7pzDlRt7BW0jON8xmLjkWFc21fC32NRfNvKulVeeaa
pqCjZZf8dpJ1C2slPdM4n7HoWFQ41/a10NdY9O4+HYs6moKOll3v+c2tzDlR
t7BW0jON8xmLjkWFc21fC32NRfNvKulVeeaapqCjZVdL76frFtZKeqZxPmPR
sahwru1roa+xaP5NJb0qz1zTFHS07Grp/XTdwlpJzzTOZyw6FhXOtX0t9DUW
zb+ppFflmWuago6WXR/7jXBHybqFtZKeaZzPWHQsKpxr+1roayyaf1NJr8oz
1zQFHS27NC/dqltYK+mZxvmMRceiwrmWsUJfY1F/pydzsoUbtdwW3p3m27Ho
3f17+h4b5zMWHYsK51rGCn2NRf2dnszJFm7Uclt4d4+a2603MhY958NbeajN
Zyw6FhXOtX0t9DUWzb+ppFflmWuags6t7BLeyFj0nA8FPwjzGYuORYVzbV8L
fY1F828q6VV55pqmoJPMrlvvaCyaz5lbeajNZyw6FhXOtX0t9DUWzb+ppFfl
mWuago7gh7HoXcYQ8vnEb4T5jEXHosK5tq+Fvsai+TelscetmWuago7gh7Ho
XcYQ8vnEb4T5jEXHosK5tq+Fvsai+TelscetmWuags6j/HAr24XMOVG3sFZy
3zXOZyw6FhXOtX0t9DUWzb+ppFflmWuago7AGGPRu4zR4pPG+YxFx6LCubav
hb7Govk3lfSqPHNNU9ARGGMsepcxWnzSOJ+x6FhUONf2tdDXWDT/ppJelWeu
aQo6AmOMRe8yRotPGuczFh2LCufavhb6Govm31TSq/LMNU1BR2CMsehdxmjx
SeN8xqJjUeFc29dCX2PR/JtKelWeuaYp6Hx4ruWYdkfJuoW1kj5pnM9YdCwq
nGv7WuhrLJp/U0mvyjPXNDUdLce0O0rWLayV9EnjfMaiY1HhXNvXQl9j0fyb
SnpVnrmmeUunJce0O0rWLayV9EnjfMaiY1HhXNvXQl9j0fybSnpVnrmm2ZjP
2l4QMudE3cJaSZ80zmcsOhYVzrV9LfQ1Fr3LD2NRR/O0jvDehXc0Fs3nzK08
1OYzFh2LCufavhb6Govm31TSq/LMNc1neoNj0cfWLayV9EnjfMaiY1HhXNvX
Ql9j0fybSnpVnrmm+UxvcCz62LqFtZI+aZzPWHQsKpxr+1roayyaf1NJr8oz
1zSf6Q2ORR9bt7BW0ieN8xmLjkWFc21fC32NRfNvKulVeeaa5ufqaLtAyHYh
c07ULayV9EnjfMaiY1HhXNvXQl9j0fybSnpVnrmmeXr/Cu9deEdj0XzO3MpD
bT5jUTMztb+VmU34ftnnsn+EPZvMLsHbjZof+33LLhCyXcicE3ULayV90jif
sehYVDjX9rXQ11g0/6aSXpVnrmneuuuWHJPv6HTdwlpJnzTOZyw6FhXOtX0t
9DUWzb+ppFflmWuat+66JcfkOzpdt7BW0ieN8xmLjkWFc21fC32NRfNvKulV
eeaa5q27bskx+Y5O1y2slfRJ43zGomNR4Vzb10JfY9H8m0p6VZ75Lc3TGS68
wbHoY+sW1kr6pHE+Y9GxqHCu7Wuhr7Fo/k0lvSrPXMulW3fdkmPCvd+qW1gr
6ZPG+YxFx6LCubavhb7Govk3lfSqPPPTmrcyXHiDY9HH1i2slfRJ43zGomNR
4Vzb10JfY9H8m0p6VZ65xkKajpZjwr3fqltYK+mTxvmMRceiwrm2r4W+xqIm
59zKyUYW1TJceINj0cfWLayV9EnjfMaiY1HhXNvXQl9j0fybSnpVnnl7xmrf
KWS7kDkn6hbWSvqkcT5j0bGocK7ta6GvsWj+TSW9Ks+8PWO17xSyXcicE3UL
ayV90jifsehYVDjX9rXQ11g0/6aSXpVn/inn8j7SdoGQ7ULmnKhbWCvpk8b5
jEXHosK5tq+Fvsai+TeV9Ko88xbmadkFr3YvybqFtZI+aZzPWHQsKpxr+1ro
ayyaf1NJr8oz//Bc84mgo+WYdi/JuoW1kj5pnM9YdCwqnGv7WuhrLJp/U0mv
ts9c3kfaLhBmLmTOibqFtZI+aZzPWHQsKpxr+1roayyaf1NJr2ozT97pWHQs
+qi6hbWSPmmcz1h0LCqca/ta6Gssmn9TSa8KM791p2PRseij6hbWSvqkcT5j
0bGocK7ta6GvsWj+TSW9Ksz81p2ORceij6pbWCvpk8b5jEXHosK5tq+Fvsai
+TeV9Gpy5tqdjkXHoo+qW1gr6ZPG+YxFx6LCubCvtb7Govk3lfSq8N5v3elY
9Pnu+lbdwlpJnzTOZyw6FhXOb81T7mssmn9TSa+e6KvlTseiY9FH1S2slfRJ
43zGomNR4fzWPOW+xqL5N5X0qtb7WLQ3x7R7SdYtrJX0SeN8xqJjUeH81jzl
vsai+TeV9Op7+mrhRi3DhTc4Fn1s3cJaSZ80zmcsOhYVzm/NU+5rLJp/U0mv
atnVoinoaDmm3UuybmGtpE8a5zMWHYsK57fmKfc1Fs2/qaRXtexq0RR0tBzT
7iVZt7BW0ieN8xmLjkWF81vzlPsai+bfVNKrH/u9Nn9NU9DRcky7l2TdwlpJ
nzTOZyw6FhXOb81T7mssmn9TSa8KPm/UFHS0+9XuJVm3sFbSJ43zGYuORYVz
bUcLfY1F828q6VXB542ago52v9q9JOsW1kr6pHE+Y9GxqHCu7Wihr7Fo/k0l
vSr4vFFT0NHuV7uXZN3CWkmfNM5nLDoWFc61HS30NRbNv6kTdyrkxjNpCjpa
jmn3kqxbWCvpk8b5jEXHosK5tqOFvsai+Td1a6fI89c0BR0tx7R7SdYtrJX0
SeN8xqJjUeFc29FCX2PR/Ju6tVPk+Wuago6WY9q9JOsW1kr6pHE+Y9GxqHCu
7Wihr7Fo/k3d2iny/DVNQUfLMe1eknULayV90jifsehYVDjXdrTQ11g0/6Zu
7RR5/pqmoKPlmHYvybqFtZI+aZzPWHQsKpxrO1roayyaf1Mf+/1p38rz1zQF
HS3HtHtJ1i2slfRJ43zGomNR4Vzb0UJfY9H8m0rmmODzRk1BR8sx7V6SdQtr
JX3SOJ+x6FhUONd2tNDXWDT/ppI5Jvi8UVPQ0XJMu5dk3cJaSZ80zmcsOhYV
zrUdLfQ1Fs2/qWSOCT5v1BR0tBzT7iVZt7BW0ieN8xmLjkWFc21HC32NRc95
QMgxweeNmoKOlmPavSTrFtZK+qRxPmPRsahwru1ooa+xqJPPY1FHU9DRcky7
l2TdwlpJnzTOZyw6FhXOtR0t9DUWff9vbuWelhvPpCnoaDmm3UuybmGtpE8a
5zMWHYsK59qOFvoai57LHyHHBJ83ago6Wo5p95KsW1gr6ZPG+YxFx6LCubaj
hb7GoufyR8gxweeNmoKOlmPavSTrFtZK+qRxPmPRsahwru1ooa+x6Pf/Jrkv
xqKOpqCj5Zh2L8m6hbWSPmmcz1h0LCqcazta6Gssevd9JX0rz1/TFHS0HNPu
JVm3sFbSJ43zGYuORYVzbUcLfY1F776vpG/l+Wuago6WY9q9JOsW1kr6pHE+
Y9GxqHCu7Wihr1dm0Vs7N5ljgs8bNQUdLce0e0nWLayV9EnjfMaiY1HhXNvR
Ql+vxqLCzk3mmODzRk1BR8sx7V6SdQtrJX3SOJ+xqLlPtb+VmU34ftnnsn9u
5bCQY4LPGzUFHS3HtHtJ1i2slfRJ43zGouY+1f5WZjbh+2Wfa/5JZuxY9Pk0
BR0tx7R7SdYtrJX0SeN8xqJjUeFc29FCX8/EotpvhBwTfN6oKehoOabdS7Ju
Ya2kTxrnMxYdiwrn2o4W+mpnUZlXhRwTfN6oKehoOabdS7JuYa2kTxrnMxYd
iwrn2o4W+mpkUUFfyD0tN55JU9DRcky7l2TdwlpJnzTOZyw6FhXOtR0t9NXC
okmGubUvxqKOpqCj5Zh2L8m6hbWSPmmcz1h0LCqcazta6Etm0VsMc2tfjEUd
TUFHyzHtXpJ1C2slfdI4n7HoWFQ413a00NdYdCwqzFzTFHS0HNPuJVm3sFbS
J43zGYuORYVzbUcLfQksqjHMrX0xFnU0BR0tx7R7SdYtrJX0SeN8xqJjUeFc
29FCX+1ZNxZ1cuOZNAUdLce0e0nWLayl5bM2n7HoWFQ413a00Fcy6wQvCTs3
mWOCzxs1BR0tx7R7SdYtrJX0SeN8xqJjUeFc29FCX8m9IHhJ2LnJHBN83qgp
6Gg5pt1Lsm5hraRPGuczFh2LCufajhb6GouORYWZa5qCjpZj2r0k6xbWSvqk
cT5j0bGocK7taKGvsehYVJi5pinoaDmm3UuybmGtpE8a5zMWHYsK59qOFvoa
i45FhZlrmoKOlmPavSTrFtZK+qRxPmPRsahwru1ooa+x6FhUmLmmKehoOabd
S7JuYa2kTxrnMxYdiwrn2o4W+vqU89O5pzHMrX0xFnU0BR0tx7R7SdYtrJX0
SeN8xqJjUeFc29FCX6dzRvOSsHOTOSb4vFFT0NFyTLuXZK1l71j07tsX5qDl
j8aTJ3pvz3C5rw/Pb+WexjC39sVY1NEUdLQc0+4lWbewVtInjfMZi45FhXNt
R7f31Z45Y1Fn5pqmoCO/d+FeknULayV90jifsehYVDjXdvStvm7tCMFLws5N
5pjg80ZNQUfLMe1eknULayV90jifsehYVDjXdnQLE45Fx6KN9zgWHYs+qm5h
raRPGuczFh2LCufajm5hwrHoWLTxHseiY9FH1S2slfRJ43zGomNR4Vzb0S1M
OBYdizbe41h0LPqouoW1kj5pnM9YdCwqnGs7uoUJx6Jj0cZ7HIuORR9Vt7BW
0ieN8xmLjkWFc21Hv+dc9rzsJWHnJnNM8HmjpqCj5Zh2L8m6hbWSPmmcz1h0
LCqcazv69C7QdoTgJWHnJu9U8HmjpqCj5Zh2L8m6hbWSPmmcz1h0LCqcazv6
U86TPY5F8+8r6Vt55pqmoKPlmHYvybqFtZI+aZzPWHQsKpxrO/pWFo1F7+7c
ZI4JPm/UFHS0HNPuJVm3sFbSJ43zGYuORYVzbUd/eC70OBbNv6+kb+WZa5qC
jpZj2r0k6xbWSvqkcT5j0bGocP5qO1r4t+T5jEWdmWuago6WY9q9JOsW1kr6
pHE+Y9GxqHAu7Gi5x7Fo/n0lfSvPXNMUdLQc0+4lWbewVtInjfMZi45FhfPG
eY5F8wxza1+MRR1NQacxx4ScOVG3sFbSJ43zGYuORYXz5DwbexyL5t9X0rfy
zDVNQUfIMc0/t+oW1kr6pHE+Y9GxqHAuvE25x7Fo/n0lfSvPXNMUdMaib8uZ
E3ULa2n7TpvPWHQsKpyfmOcz9TgWzb+vpG/lmWuags5Y9G05c6JuYa2kTxrn
MxYdiwrnSe819jgWzb8vzbe3Zq5pCjpj0bflzIm6hbWSPmmcz1h0LCqcJ73X
2ONYNP++NN/emrmmKeiMRd+WMyfqFtZK+qRxPmPRsahw/rnzfIUehdzTGObW
vhiLOpqCzlj0bTlzom5hraRPGuczFh2LCudCngs9avPUGObWvhiLOpqCzlj0
bTlzom5hraRPGuczFh2LCudCngs9avPUGObWvhiLOpqCzlj0bTlzom5hraRP
GuczFh2LCudCngs9avPUGObWvhiLOpqCzlj0bTlzom5hraRPGuczFh2LCudC
ngs9avPUGObWvhiLOpqCzlj0bTlzom5hraRPGuczFh2L3jrX8nws6mTOWNSZ
uaYp6GjZpd1Lsm5hraRPGuczFh2LJs/lPB+LOpkzFnVmrmkKOlp2afeSrFtY
K+mTxvmMRceip89b8nws6mTOWNSZuaYp6GjZpd1Lsm5hraRPGuczFh2LavtI
29fCnhqL5t9X0qvyzDVNQUfLLu1eknULayV90jifsehY9FHnfwXhJ0uj
       "], {{0, 
       224}, {224, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{224, 224},
     PlotRange->{{0, 224}, {0, 224}}], "\[Rule]", "2"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2jFKA0EUANCgKN7BRltLrWwSrMUm1hYRtAoIsRDBA3gGL5GTCB7BQjyH
CVjYBCIzf/fv7iuUl7DJzvyZP392s8e3D9P7ndFo9Hiw+jedPV0sFrPn6/31
i7vZ/Ox0vrvi5+/f2l/Lq/HH4nt883I0eX07nCzfzyd7J5fjbfz3s5u86fht
vvO/7Sk51zbtrxWfiBiW9LfWWDfZ3+ixqPV+SRwiYhh9TISjcyS6XxHtj16v
moxn9NyrdXx0PmZYfyJqTUmcM6/V0fUxei8RsXdqshZEr8PZ2lxrn5OhrpXk
SMT+sMn5FlGDhuYm92xNfk+tfrU1T6LzJbqWNVlHsl1ndWVeRe+3a8Ukw9hl
aEPJ3G5rTNuKf7b218rHturp0MYo4jo0c35ljm2GNmfL32yOqEcR54q4jsh8
nyeD3dfqh2vVvszzp09tK2lzhnuGQxujtmLelfhkqAtd6Uuf8je6HkXXtZLz
1tpb2tvkdJ/umWSIT0mOcJ413NjlHxfmoeVvtuuviPtdbcWk63OjTzYWcWtj
n9bDLjr69yCWLyx/WY4zt5VfTX6W6657niuTL5zH8re7luPMPDRHP5tkzWSW
v8zMzJsc/ZyzmsUsf5mZmbexOsXcXctfZmbuk9Up5u5a/jIzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzMzMzMzMzMzMzMzMzMzNzNv8ApyQAaA==
       "], {{0, 224}, {224, 0}}, {0.,
        1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{224, 224},
     PlotRange->{{0, 224}, {0, 224}}], "\[Rule]", "1"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2DGKHQUAxvGgIOIJrASxtIt91lwhnmAFUwWEWIiHsDGIR7DyNh7Ae9iY
gIVNIOG9ef9Zv1+x4ZdleTs783/zze7n337/7PkHjx49+uHj1/88u//x6cuX
9z9989Gb/3x3/+Krxy8+fM2//v144+e/f3L36y9P7179/eeTn794fPfZp789
+fKPr+/e9vlL/N/XvNbrv8trvsvn3/d4LnnNax3zJcd2rWN+F7/vcR7R4REN
XHJ+jriml5z/I67v0e+dI67vLa/dJefqkq+55Gc8Yi+OuG8c8fpHb80R997q
Wh/dfLXFR98fzrbv1zoPRzzjHb1Nt9zTIzqv9v3o540j7nW3fEa6Vldnfo+c
4Zre8rzd8vte6/nnWt+rui9d61qc4XfGh/JeO4Ore9TZmj/iPXvE71ln/tmP
fg/ecsfd2895bm/Z20Ps8wzHwNdt+JbNPMQ2jn7m/D/dJ8/mh/gsdAbf8u+i
Z/PZnqnO7Id4fZn5PPcK943j7rfO7Tmvl+ty3eadW2Zmfptt8W3O7RmOhzV/
y86dT2ZmfpttMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1t
Ma9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z88zMzK1tMa9Z83wt/wOE
EMQK
       "], {{0, 224}, {224, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> True],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSize->Automatic,
     ImageSizeRaw->{224, 224},
     PlotRange->{{0, 224}, {0, 224}}], "\[Rule]", "2"}]}], "}"}]], "Output",
 CellChangeTimes->{3.775224837742875*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"2dfb0ab5-53d5-42e7-ad8e-f7c707648908"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"netECA15final", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"netECA15final", ",", "fullTrainingBigC15", ",", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", "5"}], ",", 
    RowBox[{"BatchSize", "\[Rule]", 
     RowBox[{"256", "*", "4"}]}], ",", 
    RowBox[{"TargetDevice", "\[Rule]", "\"\<CPU\>\""}], ",", 
    RowBox[{"TrainingProgressCheckpointing", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Directory\>\"", ",", "dir"}], "}"}]}], ",", 
    RowBox[{"LearningRateMultipliers", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<linear_new\>\"", "\[Rule]", "1"}], ",", 
       RowBox[{"\"\<linear_out\>\"", "\[Rule]", "1"}], ",", 
       RowBox[{"_", "\[Rule]", "0"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQ3aWwJsBE+o2j043UIBB90WC+7XUgzTE5zg5EM638
5Quim3Jd/EA032rxwhtAumONIphueOczY43MG8fcK9wzQfTk2gUiu4G0n8wK
MF3emqgGoiMD8jVBdIg7kxeINmPe7QOiD+iZftsDpHf/y/4OoqfzfSvaC6Tt
bNmLQfSWogSfU0Da6dUTMK04cRnXNSDd+PIjmDZ9u9IdRPfP7PEE0bOqY1e+
BNKP1UvA9CGXCWd4Zd84BrzTPwuir+1wiFgp98bRc11PFIgW2tDFt1rhjaNN
o6QwiGYx7JEE0XbPtyuDaN6/Ljog+p16EpjetG1iC4jO8a9vBdEAgxWXiw==

  "],
 CellLabel->"In[91]:=",ExpressionUUID->"2023a64c-fa87-468f-bb48-03830ca8c72d"],

Cell[BoxData[
 TagBox[
  StyleBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        FrameBox[
         StyleBox["\<\"Training Progress\"\>", "SuggestionsBarText",
          StripOnInput->False,
          FontSize->12],
         FrameMargins->{{10, 5}, {-4, 2}},
         FrameStyle->None,
         StripOnInput->False],
        Alignment->{Left, Bottom},
        Background->GrayLevel[0.96],
        Frame->{{False, False}, {True, False}},
        FrameStyle->Opacity[0.1],
        ItemSize->{Automatic, 1},
        StripOnInput->False]},
      {
       ItemBox[
        FrameBox[
         DynamicBox[ToBoxes[
           Grid[{{
              Item[
               ProgressIndicator[
               NeuralNetworks`Private`NetTrain`$progressFraction], Alignment -> 
               Center], SpanFromLeft}, {"progress", 
              NeuralNetworks`Private`NetTrain`row[
               Round[NeuralNetworks`Private`NetTrain`$progressFraction 100], 
               "% ", "(round ", NeuralNetworks`Private`NetTrain`$round, 
               If[
                Not[NeuralNetworks`Private`NetTrain`$noRoundLimit], {
                "/", NeuralNetworks`Private`NetTrain`maxTrainingRounds}], 
               If[
               NeuralNetworks`Private`NetTrain`$showBatch, {
                NeuralNetworks`Private`NetTrain`$c, "batch ", 
                 NeuralNetworks`Private`NetTrain`$batch, "/", 
                 NeuralNetworks`Private`NetTrain`$batchesPerRound}], ")"]}, {
             "time", 
              NeuralNetworks`Private`NetTrain`row[
               GeneralUtilities`TimeString[
                Round[NeuralNetworks`Private`NetTrain`$timeElapsed]], 
               " elapsed", NeuralNetworks`Private`NetTrain`$c, 
               If[
                And[
                NeuralNetworks`Private`NetTrain`$timeElapsed > 1, 
                 NeuralNetworks`Private`NetTrain`$absoluteBatch > 4], {
                 GeneralUtilities`TimeString[
                  Round[NeuralNetworks`Private`NetTrain`$timeRemaining]], 
                 " left", NeuralNetworks`Private`NetTrain`$c}], 
               NeuralNetworks`Private`NetTrain`rateForm[
               NeuralNetworks`Private`NetTrain`$batchRate 
                NeuralNetworks`Private`NetTrain`$updatesPerBatch 
                NeuralNetworks`Private`NetTrain`batchSize], " examples/s"]}, {
             "method", 
              
              Row[{"ADAM", " optimizer", ", ", "batch size ", 1024, ", ", 
                "CPU"}]}, {"", 
              NeuralNetworks`Private`NetTrain`fixedWidthRow[
               Map[
               NeuralNetworks`Private`NetTrain`keystyle, {
                "current", "round", 
                 If[
                 NeuralNetworks`Private`NetTrain`$doValidation, "validation", 
                  Nothing]}]]}, {
              Tooltip["loss", 
               Column[{
                 Row[{"Measurement: ", "loss"}]}]], 
              NeuralNetworks`Private`NetTrain`fixedWidthRow[{
                If[True, 
                 NeuralNetworks`Private`NetTrain`lossForm[
                  Identity[
                   Lookup[
                   NeuralNetworks`Private`NetTrain`$lastReportingObservation, 
                    "Loss", None]]], 
                 NeuralNetworks`Private`NetTrain`keystyle["n.a."]], 
                NeuralNetworks`Private`NetTrain`lossForm[
                 Identity[
                  Lookup[
                  NeuralNetworks`Private`NetTrain`$roundMeasurements, "Loss", 
                   None]]], 
                If[NeuralNetworks`Private`NetTrain`$doValidation, 
                 If[
                 NeuralNetworks`Private`NetTrain`$computingValidation, 
                  "computing...", 
                  NeuralNetworks`Private`NetTrain`lossForm[
                   Identity[
                    Lookup[
                    NeuralNetworks`Private`NetTrain`$validationMeasurements, 
                    "Loss", None]]]], Nothing]}]}, {
              Tooltip["error", 
               Column[{
                 Row[{"Measurement: ", "ErrorRate"}]}]], 
              NeuralNetworks`Private`NetTrain`fixedWidthRow[{
                If[True, 
                 NeuralNetworks`Private`NetTrain`percentForm[
                  Identity[
                   Lookup[
                   NeuralNetworks`Private`NetTrain`$lastReportingObservation, 
                    "ErrorRate", None]]], 
                 NeuralNetworks`Private`NetTrain`keystyle["n.a."]], 
                NeuralNetworks`Private`NetTrain`percentForm[
                 Identity[
                  Lookup[
                  NeuralNetworks`Private`NetTrain`$roundMeasurements, 
                   "ErrorRate", None]]], 
                If[NeuralNetworks`Private`NetTrain`$doValidation, 
                 If[
                 NeuralNetworks`Private`NetTrain`$computingValidation, 
                  "computing...", 
                  NeuralNetworks`Private`NetTrain`percentForm[
                   Identity[
                    Lookup[
                    NeuralNetworks`Private`NetTrain`$validationMeasurements, 
                    "ErrorRate", None]]]], Nothing]}]}, {
              RawBoxes[
               
               GridBox[{
                Nothing, {"loss"}, {
                 NeuralNetworks`Private`NetTrain`$lastLossPlotBoxes}, {
                  TagBox[
                   GridBox[{{
                    ButtonBox[
                    "\"\"", ButtonFunction :> {}, Evaluator -> None, 
                    Appearance -> None, Method -> "Preemptive"], 
                    "\"error rate\"", 
                    ButtonBox[
                    "\"\"", ButtonFunction :> {}, Evaluator -> None, 
                    Appearance -> None, Method -> "Preemptive"]}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {3, 20, 3}, "Rows" -> {2}}], "Grid"]}, {
                 NeuralNetworks`Private`NetTrain`$lastMetricPlotBoxes}}, 
                GridBoxSpacings -> {"Columns" -> {{0}}}]], SpanFromLeft}, {
              NeuralNetworks`Private`staticNiceButton[
              "Stop", NeuralNetworks`Private`NetTrain`$manualStop = (
                 NeuralNetworks`Private`NetTrain`$shouldStop = True); 
               NeuralNetworks`Private`NetTrain`$reasonTrainingStopped = 
                "ManualStop"], SpanFromLeft}}, Dividers -> {{False, 
               Opacity[0.15]}, {}}, ItemStyle -> {{
               GrayLevel[0.4], None}}, ColumnWidths -> {7, 25}, 
            ColumnAlignments -> {Right, Left}, ColumnSpacings -> {1.6, 2.5}, 
            RowSpacings -> 1.4, RowMinHeight -> 1.3, 
            BaseStyle -> {FontSize -> 11}], StandardForm],
          ContentPadding->False,
          ImageSizeCache->{317., {303.15869140625, 308.84130859375}},
          TrackedSymbols:>{},
          UpdateInterval->0.33],
         FrameMargins->{{10, 10}, {10, 5}},
         FrameStyle->None,
         StripOnInput->False],
        Alignment->Left,
        BaseStyle->{
         FontWeight -> "Light", FontFamily -> ".SF NS Text", NumberMarks -> 
          False, ScriptBaselineShifts -> {0, 0.5}, ScriptMinSize -> 8, 
          ScriptSizeMultipliers -> 0.5},
        StripOnInput->False]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Background->GrayLevel[1],
    FrameMargins->{{0, 0}, {0, 0}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   StripOnInput->False,
   LineBreakWithin->False],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "PrintTemporary",
 CellChangeTimes->{3.775225005020081*^9},
 CellLabel->
  "During evaluation of \
In[91]:=",ExpressionUUID->"749ec917-e9aa-400c-8762-d93a118c9e83"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1038, 959},
WindowMargins->{{Automatic, 31}, {Automatic, 0}},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 182, 3, 67, "Section",ExpressionUUID->"388a0dab-52cc-4126-ac63-0319c67848e8"],
Cell[CellGroupData[{
Cell[787, 29, 171, 3, 54, "Subsection",ExpressionUUID->"76af5f73-63af-4700-a231-2a753da13bcb"],
Cell[961, 34, 3138, 45, 194, "Input",ExpressionUUID->"11312d72-7371-443a-83a5-7022f7996460",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[4136, 84, 325, 6, 54, "Subsection",ExpressionUUID->"9d0547cf-17e6-43be-b4be-9b07207ddad4"],
Cell[4464, 92, 6290, 151, 383, "Input",ExpressionUUID->"0ea53259-1886-425a-ad42-3a990f49b501",
 InitializationCell->True],
Cell[10757, 245, 2331, 56, 152, "Input",ExpressionUUID->"04e4fea5-f97b-4096-84e3-b820fad8b6e7",
 InitializationCell->True],
Cell[13091, 303, 2387, 57, 152, "Input",ExpressionUUID->"3fa2af7c-8381-4684-81ef-83594cac1d45",
 InitializationCell->True],
Cell[15481, 362, 2171, 51, 152, "Input",ExpressionUUID->"db54f16e-cff6-4a0b-9a60-81c7fbbcb875",
 InitializationCell->True],
Cell[17655, 415, 2394, 55, 173, "Input",ExpressionUUID->"f2bf3b57-57d3-42d3-a32f-7c120c1b4976",
 InitializationCell->True],
Cell[20052, 472, 2801, 62, 173, "Input",ExpressionUUID->"e9e5becd-28d9-42e6-a39b-71cbb8836a31",
 InitializationCell->True],
Cell[22856, 536, 2845, 62, 173, "Input",ExpressionUUID->"0584a446-b140-4330-aed6-029b46bd55de",
 InitializationCell->True],
Cell[25704, 600, 3370, 72, 194, "Input",ExpressionUUID->"6ac8b246-f929-4ebf-b7b6-8430cd9ee71e",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[29111, 677, 224, 3, 54, "Subsection",ExpressionUUID->"15994768-2a7c-48ae-b9ce-17a15e9f2d01"],
Cell[CellGroupData[{
Cell[29360, 684, 235, 4, 45, "Subsubsection",ExpressionUUID->"8d9af586-96ae-4f0d-8b0d-8fb70cdf76ee"],
Cell[29598, 690, 3776, 80, 152, "Input",ExpressionUUID->"7f290f76-4d20-4a45-99c1-be4d3ac55caf",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[33411, 775, 200, 3, 45, "Subsubsection",ExpressionUUID->"dbcb2c40-cf99-43a5-b6a7-efac0c5abb80"],
Cell[33614, 780, 3532, 72, 131, "Input",ExpressionUUID->"6fb675f1-8cd0-423a-915b-241cddf189ed",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[37183, 857, 322, 5, 45, "Subsubsection",ExpressionUUID->"4ebe7869-f88e-4902-9783-89e59803ff91"],
Cell[37508, 864, 4606, 122, 278, "Input",ExpressionUUID->"a1f86501-5115-43e0-b323-e3a0c8631d00",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[42151, 991, 184, 3, 45, "Subsubsection",ExpressionUUID->"bb2826ed-9356-452a-af36-99095ba0dd59"],
Cell[42338, 996, 3565, 77, 215, "Input",ExpressionUUID->"98ced873-5ac6-4b9e-b650-c158965ee498",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[45952, 1079, 185, 3, 54, "Subsection",ExpressionUUID->"476bdbe6-8561-4171-ad26-ebd401370f13"],
Cell[46140, 1084, 4267, 109, 341, "Input",ExpressionUUID->"acd3d2ea-8896-4cab-8715-3bbeb4414ec4",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[50444, 1198, 170, 3, 54, "Subsection",ExpressionUUID->"45835d6e-7c4b-418b-b16b-5826ff7ae0de"],
Cell[CellGroupData[{
Cell[50639, 1205, 176, 3, 45, "Subsubsection",ExpressionUUID->"9857ce67-d967-41aa-a1c8-dc4a01e111e2"],
Cell[50818, 1210, 2174, 56, 152, "Input",ExpressionUUID->"f1b2d4ee-d8dc-4695-b1d7-f5232f433426",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[53029, 1271, 217, 3, 45, "Subsubsection",ExpressionUUID->"bbe46304-a8c9-4610-9b2d-fef266fb07e8"],
Cell[53249, 1276, 2576, 63, 131, "Input",ExpressionUUID->"9ca14769-9284-4d60-a31b-5e487857ead1",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[55862, 1344, 265, 4, 45, "Subsubsection",ExpressionUUID->"a82e0c0e-c882-433a-8a7d-11c2fd71246a"],
Cell[56130, 1350, 2624, 63, 131, "Input",ExpressionUUID->"c836ec84-2e68-492b-9d3a-e4f43e626853",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[58791, 1418, 318, 5, 45, "Subsubsection",ExpressionUUID->"3187af25-8038-4a1a-9805-91c61e491f01"],
Cell[59112, 1425, 2693, 64, 131, "Input",ExpressionUUID->"8a0e5cb2-474c-405f-8ccf-85cdfa941db2",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[61842, 1494, 269, 4, 45, "Subsubsection",ExpressionUUID->"85a1c8ea-6ff1-4040-8497-e1e5a7fba947"],
Cell[62114, 1500, 2506, 62, 152, "Input",ExpressionUUID->"089e5987-d976-416f-8c37-15894e1f2585",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[64657, 1567, 172, 3, 45, "Subsubsection",ExpressionUUID->"bcf88996-962c-442a-8768-3bf69f86b80f"],
Cell[64832, 1572, 2404, 60, 131, "Input",ExpressionUUID->"f976eee9-cad7-40ae-9eb8-abb7f641dba9",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[67273, 1637, 170, 3, 45, "Subsubsection",ExpressionUUID->"f5bf9f31-35b0-4385-b154-d1126b5f2296"],
Cell[67446, 1642, 2610, 62, 131, "Input",ExpressionUUID->"7b022004-514e-4e0b-a42b-ce72906e235a",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[70093, 1709, 221, 4, 45, "Subsubsection",ExpressionUUID->"89a0c131-9a09-4809-a178-0bfd9abfdb20"],
Cell[70317, 1715, 2715, 63, 152, "Input",ExpressionUUID->"cab3044c-9201-4580-9dce-211a871b1b81",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[73081, 1784, 167, 3, 54, "Subsection",ExpressionUUID->"b8bb5af3-a34b-4962-80ac-bbc195d25f55"],
Cell[73251, 1789, 2671, 63, 131, "Input",ExpressionUUID->"3dea61d9-966a-40a2-9fd8-a1e4d4758106",
 InitializationCell->True],
Cell[75925, 1854, 154, 3, 30, "Input",ExpressionUUID->"e3aa393f-40fd-4533-a667-8fbe54413568"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76116, 1862, 245, 5, 54, "Subsection",ExpressionUUID->"6d63eb61-66bb-4d14-a991-dd560e484611"],
Cell[CellGroupData[{
Cell[76386, 1871, 371, 7, 30, "Input",ExpressionUUID->"0f93efd4-1c2f-457b-8951-331a84496c40"],
Cell[76760, 1880, 44188, 891, 75, "Output",ExpressionUUID->"b9bf4141-a11d-450d-8803-4b8ac2b69c7a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120985, 2776, 370, 7, 30, "Input",ExpressionUUID->"7767037a-7c87-4473-a2d0-952a223e2690"],
Cell[121358, 2785, 134596, 2810, 292, "Output",ExpressionUUID->"36ab19a5-4af1-4e46-82f8-8d3dc97b196e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255991, 5600, 365, 7, 30, "Input",ExpressionUUID->"86390fb2-f64a-4ff2-832c-ac72d4e204b7"],
Cell[256359, 5609, 18154, 349, 58, "Output",ExpressionUUID->"9179a728-a9a8-4780-9e63-00a78be8b8e3"]
}, Open  ]],
Cell[274528, 5961, 645, 12, 30, "Input",ExpressionUUID->"56aabf8b-2a78-4e43-80e8-8fef4f8b5dea"],
Cell[275176, 5975, 692, 12, 30, "Input",ExpressionUUID->"dfc030ba-235b-404f-8e5f-731ba8e231bd"],
Cell[275871, 5989, 639, 12, 30, "Input",ExpressionUUID->"273100b7-f0fe-46f2-9a58-a7449cd5cddc"],
Cell[276513, 6003, 644, 12, 30, "Input",ExpressionUUID->"1660fba2-5efc-47f1-9bc4-79afcb914d11"],
Cell[277160, 6017, 637, 12, 30, "Input",ExpressionUUID->"a0d931d4-dc63-4003-9a43-abc85e793cc0"],
Cell[CellGroupData[{
Cell[277822, 6033, 839, 16, 73, "Input",ExpressionUUID->"47493625-dfa7-4c12-865a-480534475038"],
Cell[278664, 6051, 157, 3, 34, "Output",ExpressionUUID->"0b4bae85-953e-47ea-8512-7d1769f71d36"]
}, Open  ]],
Cell[CellGroupData[{
Cell[278858, 6059, 595, 10, 30, "Input",ExpressionUUID->"82f0bbd2-50da-4bea-88a3-5929536f4e2c"],
Cell[279456, 6071, 124025, 2137, 627, "Output",ExpressionUUID->"6c39339b-d645-4ca8-9601-4d1d479cd785"]
}, Open  ]],
Cell[CellGroupData[{
Cell[403518, 8213, 595, 10, 30, "Input",ExpressionUUID->"6e56c0ab-7765-474f-8007-ce3075da2b40"],
Cell[404116, 8225, 108660, 1885, 627, "Output",ExpressionUUID->"321451f4-4019-4c26-8d16-98f5a30fa300"]
}, Open  ]],
Cell[CellGroupData[{
Cell[512813, 10115, 277, 5, 30, "Input",ExpressionUUID->"2dcbc689-857b-4b5d-a015-d6a01eee2769"],
Cell[513093, 10122, 304, 5, 34, "Output",ExpressionUUID->"442fee27-414c-48e3-a355-c36aca7d4412"]
}, Open  ]],
Cell[CellGroupData[{
Cell[513434, 10132, 259, 4, 30, "Input",ExpressionUUID->"d687882f-aef0-4434-b1db-2f8aa9a245f7"],
Cell[513696, 10138, 44705, 904, 259, "Output",ExpressionUUID->"36a6bf8f-33be-402b-a716-5c68d0fa4848"]
}, Open  ]],
Cell[CellGroupData[{
Cell[558438, 11047, 1355, 24, 52, "Input",ExpressionUUID->"2e3f5dba-ceeb-4dc4-9d9f-6c55c2be1c7d"],
Cell[559796, 11073, 44686, 905, 75, "Output",ExpressionUUID->"de3b8ff4-5e83-4022-b1a5-9cd245544002"]
}, Open  ]],
Cell[CellGroupData[{
Cell[604519, 11983, 265, 5, 30, "Input",ExpressionUUID->"dded76c3-f80d-44bc-a8cb-d1383d125d50"],
Cell[604787, 11990, 44072, 890, 75, "Output",ExpressionUUID->"69f6cb21-10cb-498a-a5f3-e2a1ac4abf81"]
}, Open  ]],
Cell[CellGroupData[{
Cell[648896, 12885, 1355, 24, 52, "Input",ExpressionUUID->"b7716be9-fe49-4871-b761-c7f2bc7ee8db"],
Cell[650254, 12911, 44072, 890, 75, "Output",ExpressionUUID->"9475968a-e7eb-44ee-8995-4aca4bcd750a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[694375, 13807, 208, 3, 54, "Subsection",ExpressionUUID->"4dc852b2-b98e-4f83-9cac-5ac4e359b1c9"],
Cell[CellGroupData[{
Cell[694608, 13814, 1435, 38, 157, "Input",ExpressionUUID->"a8800e47-47ab-4ece-a48e-bfa5a5d0c2b4"],
Cell[696046, 13854, 181, 3, 34, "Output",ExpressionUUID->"8374a6a0-0fcc-49ca-ba26-fae0454e1483"]
}, Open  ]],
Cell[CellGroupData[{
Cell[696264, 13862, 186, 4, 30, "Input",ExpressionUUID->"9c5ffe72-8a99-4df0-bea9-efe2da58b16c"],
Cell[696453, 13868, 63574, 1094, 307, "Output",ExpressionUUID->"77cff7d0-289e-4c8b-b0d8-8779493a7d7e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[760064, 14967, 615, 12, 30, "Input",ExpressionUUID->"cff6d89c-4b91-468d-a49f-6e75a783826b"],
Cell[760682, 14981, 5618, 128, 336, "Output",ExpressionUUID->"10a83680-15bc-4a50-98af-5daef0c722b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[766337, 15114, 1526, 39, 136, "Input",ExpressionUUID->"f917767b-8338-444a-a928-2457a298404e"],
Cell[767866, 15155, 35169, 630, 307, "Output",ExpressionUUID->"233f36f9-4ff4-4248-b76a-6058ca299c46"],
Cell[803038, 15787, 18409, 354, 307, "Output",ExpressionUUID->"be30ef96-2b5b-4e45-b1ca-a8f50075d993"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[821496, 16147, 193, 3, 54, "Subsection",ExpressionUUID->"115e0f41-1d29-42b0-b160-97fe4796a451"],
Cell[CellGroupData[{
Cell[821714, 16154, 279, 6, 30, "Input",ExpressionUUID->"999b2472-a408-4b22-87c5-6f38ad3905f0"],
Cell[821996, 16162, 52136, 1051, 304, "Output",ExpressionUUID->"10128053-4d01-4f68-902c-88163b34a6aa"]
}, Open  ]],
Cell[874147, 17216, 1427, 25, 52, "Input",ExpressionUUID->"2b78ba2b-ca69-40f7-a718-85bd1ee0fd5e"],
Cell[CellGroupData[{
Cell[875599, 17245, 277, 5, 30, "Input",ExpressionUUID->"2d49fee6-0fc1-4f2d-be82-8cb69efbe488"],
Cell[875879, 17252, 354, 6, 34, "Output",ExpressionUUID->"560a82c9-5362-4524-9585-da4b03fbea58"]
}, Open  ]],
Cell[CellGroupData[{
Cell[876270, 17263, 259, 4, 30, "Input",ExpressionUUID->"76c414b0-2354-4828-b57c-fffb57f07863"],
Cell[876532, 17269, 51532, 1037, 75, "Output",ExpressionUUID->"83f18fae-4edf-448f-88a8-3584fd7af270"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[928113, 18312, 186, 3, 54, "Subsection",ExpressionUUID->"c219e134-7847-4218-9bfc-805cb9970bbf"],
Cell[CellGroupData[{
Cell[928324, 18319, 1431, 37, 157, "Input",ExpressionUUID->"cbb6c1a1-3c82-46e6-ada1-b2f828f91bc9"],
Cell[929758, 18358, 153, 2, 34, "Output",ExpressionUUID->"8cbbf700-8980-4f97-a87d-175854524ffc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[929948, 18365, 182, 3, 30, "Input",ExpressionUUID->"24a3e4aa-8895-4fb0-bfba-81f3bdb3c37c"],
Cell[930133, 18370, 62864, 1083, 307, "Output",ExpressionUUID->"544bbaa5-7a86-4aeb-b152-91611f0ea1e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[993034, 19458, 660, 12, 30, "Input",ExpressionUUID->"91ef8e70-ac8a-4d13-be6f-95353476855e"],
Cell[993697, 19472, 5405, 122, 336, "Output",ExpressionUUID->"ef4549d3-d52b-4031-9d4d-6abf6d1672ef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[999139, 19599, 1568, 38, 136, "Input",ExpressionUUID->"fd04d8fe-82e3-4369-9c2f-ac111acf8e24"],
Cell[1000710, 19639, 37103, 659, 307, "Output",ExpressionUUID->"8c4544fa-c1a7-4dd6-8149-88b8ee7c1ef4"],
Cell[1037816, 20300, 20322, 386, 307, "Output",ExpressionUUID->"6e6a1f48-ffb6-44fc-8a31-c068f2038304"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1058187, 20692, 234, 5, 54, "Subsection",ExpressionUUID->"d3c24268-4836-4377-8821-dc4f21d4aaaf"],
Cell[CellGroupData[{
Cell[1058446, 20701, 293, 6, 30, "Input",ExpressionUUID->"337713f2-355c-4d38-8249-9195f5d0c538"],
Cell[1058742, 20709, 111908, 2240, 679, "Output",ExpressionUUID->"057dbb7d-543e-4477-a4f5-3e4cb69aa8e4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1170687, 22954, 353, 8, 30, "Input",ExpressionUUID->"0583ac7c-345c-48fb-bd03-f281533caac7"],
Cell[1171043, 22964, 94613, 1885, 76, "Output",ExpressionUUID->"37daaaee-8961-4c9e-8f3f-24f6eb0867ba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1265693, 24854, 875, 21, 73, "Input",ExpressionUUID->"fa34565c-9bc2-472d-a0d9-f7bb1a430d20"],
Cell[1266571, 24877, 102405, 2048, 75, "Output",ExpressionUUID->"a1f40a01-d436-46ea-b764-b33b91d4ac72"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1369013, 26930, 606, 14, 52, "Input",ExpressionUUID->"6a0167fa-8681-44df-b870-544cf332c82e"],
Cell[1369622, 26946, 104730, 2095, 109, "Output",ExpressionUUID->"f5c3c301-9a2d-4337-9215-356eae9ff090"]
}, Open  ]],
Cell[1474367, 29044, 736, 12, 30, "Input",ExpressionUUID->"f6c2c066-47ac-4576-9cb4-e62c61563517"],
Cell[1475106, 29058, 787, 13, 30, "Input",ExpressionUUID->"9c0dc13f-bb60-46aa-a091-0b52af3fa262"],
Cell[1475896, 29073, 783, 13, 30, "Input",ExpressionUUID->"ded4704c-f9b6-481d-a314-d0f169695709"],
Cell[1476682, 29088, 789, 13, 30, "Input",ExpressionUUID->"a9d7de35-260f-42a0-af13-5962bbea7bf7"],
Cell[1477474, 29103, 880, 14, 30, "Input",ExpressionUUID->"5fadb808-2927-49ed-a0ae-418db10e5e8c"],
Cell[CellGroupData[{
Cell[1478379, 29121, 886, 16, 73, "Input",ExpressionUUID->"f138e990-720f-4263-aca2-af74ff607ee3"],
Cell[1479268, 29139, 153, 2, 34, "Output",ExpressionUUID->"0876791b-6f2e-4c4d-a283-7755a3e73fe7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1479458, 29146, 251, 4, 30, "Input",ExpressionUUID->"4ed811be-0d6f-43ac-8b14-b037dc05285b"],
Cell[1479712, 29152, 276391, 4634, 551, "Output",ExpressionUUID->"2dfb0ab5-53d5-42e7-ad8e-f7c707648908"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1756140, 33791, 1236, 26, 73, "Input",ExpressionUUID->"2023a64c-fa87-468f-bb48-03830ca8c72d"],
Cell[1757379, 33819, 8152, 182, 673, "PrintTemporary",ExpressionUUID->"749ec917-e9aa-400c-8762-d93a118c9e83"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

